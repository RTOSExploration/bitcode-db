; ModuleID = 'build/96b_argonkey/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229551 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229531 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229521 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229621 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229611 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229601 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229591 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229581 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229571 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229561 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231400 to i8*), void (i8*)* inttoptr (i32 134229541 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [37 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !220
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !249
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !255
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !395
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !431
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.52, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !441
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !446
@.str.51 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.52 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !466
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !659
@.str.53 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !620
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !603
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !576
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !592
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !622
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !636
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !638
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !640
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !642
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !644
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !646
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !648
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !650
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !652
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !654
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !664
@.str.55 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !691
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !785
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !774
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !826
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !684
@.str.64 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !892
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1174
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1144
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1130
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1072
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !682
@.str.1.65 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1176
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1148
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1146
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1086
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !680
@.str.2.66 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1189
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1152
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1150
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1095
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !678
@.str.3.67 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1191
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1156
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1154
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1104
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !676
@.str.4.68 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1193
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1160
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1158
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1110
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !674
@.str.5.69 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1195
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1164
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1162
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1116
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !672
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1197
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1168
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1166
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1122
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !670
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1199
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1172
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1170
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1128
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !686
@.str.75 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1201
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1392
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1353
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1394
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1344
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1346
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1355
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1363
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1386
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1389
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !758
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1416
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1525
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1527
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1523
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1494
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1529
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1070
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.65, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1084
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1093
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.67, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1102
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.68, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1108
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1114
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1120
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1126
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1619
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1660
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1663
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1670
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1677
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1887
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1896
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1903
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1908
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.125 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.128, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.130, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.132, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.126, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.133, i32 0, i32 0)], align 4, !dbg !1934
@.str.127 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.128 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.129 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.130 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.131 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.132 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.126 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.133 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2046
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2059
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2167
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2170
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2172
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1901
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1898
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2174
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2210
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1765
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2208
@.str.186 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2817 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2821, !srcloc !2822
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2823, !srcloc !2824
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2825, !srcloc !2826
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2827, !srcloc !2828
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2829, !srcloc !2830
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2831, !srcloc !2832
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2833, !srcloc !2834
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2835, !srcloc !2836
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2837, !srcloc !2838
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2839, !srcloc !2840
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2841, !srcloc !2842
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2843, !srcloc !2844
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2845, !srcloc !2846
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2847, !srcloc !2848
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2849, !srcloc !2850
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2851, !srcloc !2852
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2853, !srcloc !2854
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2855, !srcloc !2856
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2857, !srcloc !2858
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2859, !srcloc !2860
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2861, !srcloc !2862
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2863, !srcloc !2864
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2865, !srcloc !2866
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2867, !srcloc !2868
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2869, !srcloc !2870
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2871, !srcloc !2872
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2873, !srcloc !2874
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2875, !srcloc !2878
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2879, !srcloc !2880
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2881, !srcloc !2882
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2883, !srcloc !2884
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2885, !srcloc !2886
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2899, !srcloc !2900
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2901, !srcloc !2902
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2925, !srcloc !2926
  ret void, !dbg !2927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2930 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2933
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #25, !dbg !2934
  tail call void @print_sys_memory_stats() #26, !dbg !2935
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #25, !dbg !2936
  call void @llvm.dbg.value(metadata i8* %1, metadata !2932, metadata !DIExpression()), !dbg !2937
  tail call void @print_sys_memory_stats() #26, !dbg !2938
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #25, !dbg !2939
  call void @llvm.dbg.value(metadata i8* %2, metadata !2932, metadata !DIExpression()), !dbg !2937
  tail call void @print_sys_memory_stats() #26, !dbg !2940
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #25, !dbg !2941
  tail call void @print_sys_memory_stats() #26, !dbg !2942
  ret void, !dbg !2943
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2944 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2953
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2953
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2946, metadata !DIExpression()), !dbg !2954
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #25, !dbg !2955
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2956
  %5 = load i32, i32* %4, align 4, !dbg !2956
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2957
  %7 = load i32, i32* %6, align 4, !dbg !2957
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2958
  %9 = load i32, i32* %8, align 4, !dbg !2958
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #25, !dbg !2959
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #24, !dbg !2960
  ret void, !dbg !2960
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2963, metadata !DIExpression()), !dbg !2964
  ret i32 0, !dbg !2965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2966 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2970, metadata !DIExpression()), !dbg !2971
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2972
  ret void, !dbg !2973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2974 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2977
  ret i8* %1, !dbg !2978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2979 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2991, metadata !DIExpression()), !dbg !3000
  call void @llvm.dbg.value(metadata i8* %0, metadata !2990, metadata !DIExpression()), !dbg !3000
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3001
  ret void, !dbg !3003
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3008, metadata !DIExpression()), !dbg !3010
  call void @llvm.dbg.value(metadata i8* %1, metadata !3009, metadata !DIExpression()), !dbg !3010
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3011
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3011
  ret i32 %4, !dbg !3012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3013 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3022, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i8* %1, metadata !3023, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.value(metadata i8* %2, metadata !3024, metadata !DIExpression()), !dbg !3026
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3027
  ret void, !dbg !3028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3029 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3033, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i32 %1, metadata !3034, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i32 0, metadata !3035, metadata !DIExpression()), !dbg !3036
  %3 = icmp eq i32 %1, 0, !dbg !3037
  br i1 %3, label %13, label %4, !dbg !3040

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3035, metadata !DIExpression()), !dbg !3036
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3041
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3043
  %8 = load i8, i8* %7, align 1, !dbg !3043
  %9 = zext i8 %8 to i32, !dbg !3043
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3041
  %11 = add nuw i32 %5, 1, !dbg !3044
  call void @llvm.dbg.value(metadata i32 %11, metadata !3035, metadata !DIExpression()), !dbg !3036
  %12 = icmp eq i32 %11, %1, !dbg !3037
  br i1 %12, label %13, label %4, !dbg !3040, !llvm.loop !3045

13:                                               ; preds = %4, %2
  ret void, !dbg !3047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3048 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3052, metadata !DIExpression()), !dbg !3054
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3055
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3055
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3053, metadata !DIExpression()), !dbg !3056
  call void @llvm.va_start(i8* nonnull %3), !dbg !3057
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3058
  %5 = load i32, i32* %4, align 4, !dbg !3058
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3058
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3058
  call void @llvm.va_end(i8* nonnull %3), !dbg !3059
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3060
  ret void, !dbg !3060
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3061 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3065, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.value(metadata i32 %1, metadata !3066, metadata !DIExpression()), !dbg !3070
  call void @llvm.dbg.value(metadata i8* %2, metadata !3067, metadata !DIExpression()), !dbg !3070
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3071
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3071
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3068, metadata !DIExpression()), !dbg !3072
  call void @llvm.va_start(i8* nonnull %5), !dbg !3073
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3074
  %7 = load i32, i32* %6, align 4, !dbg !3074
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3074
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3074
  call void @llvm.dbg.value(metadata i32 %9, metadata !3069, metadata !DIExpression()), !dbg !3070
  call void @llvm.va_end(i8* nonnull %5), !dbg !3075
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3076
  ret i32 %9, !dbg !3077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3078 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3085, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i8* %0, metadata !3082, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i32 %1, metadata !3083, metadata !DIExpression()), !dbg !3092
  call void @llvm.dbg.value(metadata i8* %2, metadata !3084, metadata !DIExpression()), !dbg !3092
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3093
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3093
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3086, metadata !DIExpression()), !dbg !3094
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3095
  store i8* %0, i8** %7, align 4, !dbg !3095
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3095
  store i32 %1, i32* %8, align 4, !dbg !3095
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3095
  store i32 0, i32* %9, align 4, !dbg !3095
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3096
  %10 = load i32, i32* %9, align 4, !dbg !3097
  %11 = load i32, i32* %8, align 4, !dbg !3099
  %12 = icmp slt i32 %10, %11, !dbg !3100
  br i1 %12, label %13, label %15, !dbg !3101

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3102
  store i8 0, i8* %14, align 1, !dbg !3104
  br label %15, !dbg !3105

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3106
  ret i32 %10, !dbg !3107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3113, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3114, metadata !DIExpression()), !dbg !3115
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3116
  %4 = load i8*, i8** %3, align 4, !dbg !3116
  %5 = icmp eq i8* %4, null, !dbg !3118
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3119
  br i1 %5, label %12, label %8, !dbg !3120

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3121
  %10 = load i32, i32* %9, align 4, !dbg !3121
  %11 = icmp slt i32 %7, %10, !dbg !3122
  br i1 %11, label %15, label %12, !dbg !3123

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3124
  %14 = add nsw i32 %7, 1, !dbg !3126
  store i32 %14, i32* %13, align 4, !dbg !3126
  br label %25, !dbg !3127

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3128
  %17 = icmp eq i32 %7, %16, !dbg !3130
  br i1 %17, label %18, label %21, !dbg !3131

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3132
  store i32 %19, i32* %6, align 4, !dbg !3132
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3134
  store i8 0, i8* %20, align 1, !dbg !3135
  br label %25, !dbg !3136

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3137
  %23 = add nsw i32 %7, 1, !dbg !3139
  store i32 %23, i32* %6, align 4, !dbg !3139
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3140
  store i8 %22, i8* %24, align 1, !dbg !3141
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3142
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3143 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3153, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.value(metadata i8* %1, metadata !3154, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.value(metadata i8* %2, metadata !3155, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.value(metadata i8* %3, metadata !3156, metadata !DIExpression()), !dbg !3157
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3158
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3159
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3160
  unreachable, !dbg !3161
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3162 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3266
  ret %struct.k_thread* %1, !dbg !3267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3273, metadata !DIExpression()), !dbg !3274
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3275, !srcloc !3277
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3278
  ret void, !dbg !3279
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3280 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3281, !srcloc !3283
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3284
  ret %struct.k_thread* %1, !dbg !3285
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3286 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3297, metadata !DIExpression()), !dbg !3301
  call void @llvm.dbg.value(metadata i8* %1, metadata !3298, metadata !DIExpression()), !dbg !3301
  %3 = icmp eq i8* %1, null, !dbg !3302
  br i1 %3, label %13, label %4, !dbg !3304

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3305
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3305
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3299, metadata !DIExpression()), !dbg !3301
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3306, !range !3307
  call void @llvm.dbg.value(metadata i32 %7, metadata !3300, metadata !DIExpression()), !dbg !3301
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3308
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3309, !range !3310
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #26, !dbg !3311
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3312
  %11 = load i32, i32* %10, align 4, !dbg !3313
  %12 = sub i32 %11, %9, !dbg !3313
  store i32 %12, i32* %10, align 4, !dbg !3313
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3314
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !3315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3316 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3320, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i8* %1, metadata !3321, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.value(metadata i8* %1, metadata !3322, metadata !DIExpression()), !dbg !3324
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3325
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3323, metadata !DIExpression()), !dbg !3324
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3326
  %5 = ptrtoint i8* %4 to i32, !dbg !3327
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3327
  %7 = sub i32 %5, %6, !dbg !3327
  %8 = lshr i32 %7, 3, !dbg !3328
  ret i32 %8, !dbg !3329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3330 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3334, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata i32 %1, metadata !3335, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata i1 %2, metadata !3336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3339
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3340
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3337, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3339
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3341
  %6 = bitcast i8* %5 to i16*, !dbg !3341
  %7 = load i16, i16* %6, align 2, !dbg !3341
  %8 = and i16 %7, -2, !dbg !3345
  %9 = zext i1 %2 to i16, !dbg !3345
  %10 = or i16 %8, %9, !dbg !3345
  store i16 %10, i16* %6, align 2, !dbg !3341
  ret void, !dbg !3346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3347 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3352, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i32 %1, metadata !3353, metadata !DIExpression()), !dbg !3354
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3355
  %4 = lshr i32 %3, 1, !dbg !3356
  ret i32 %4, !dbg !3357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3358 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3362, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata i32 %1, metadata !3363, metadata !DIExpression()), !dbg !3364
  %3 = shl i32 %1, 3, !dbg !3365
  %4 = add i32 %3, -4, !dbg !3366
  ret i32 %4, !dbg !3367
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3368 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3372, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.value(metadata i32 %1, metadata !3373, metadata !DIExpression()), !dbg !3374
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3375
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3377
  br i1 %4, label %7, label %5, !dbg !3378

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3379
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3381
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3382
  br label %7, !dbg !3383

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3384, !range !3386
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3387
  br i1 %9, label %13, label %10, !dbg !3388

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3389
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3391, !range !3386
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3392
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3393
  call void @llvm.dbg.value(metadata i32 %12, metadata !3373, metadata !DIExpression()), !dbg !3374
  br label %13, !dbg !3394

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3373, metadata !DIExpression()), !dbg !3374
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3395
  ret void, !dbg !3396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3397 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3401, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %1, metadata !3402, metadata !DIExpression()), !dbg !3403
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3404
  %4 = add i32 %3, %1, !dbg !3405
  ret i32 %4, !dbg !3406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3407 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3411, metadata !DIExpression()), !dbg !3413
  call void @llvm.dbg.value(metadata i32 %1, metadata !3412, metadata !DIExpression()), !dbg !3413
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3414
  %4 = and i32 %3, 1, !dbg !3415
  %5 = icmp ne i32 %4, 0, !dbg !3414
  ret i1 %5, !dbg !3416
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3417 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3419, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %1, metadata !3420, metadata !DIExpression()), !dbg !3424
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3425, !range !3310
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %4, metadata !3421, metadata !DIExpression()), !dbg !3427
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3428
  ret void, !dbg !3429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3430 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3434, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i32 %1, metadata !3435, metadata !DIExpression()), !dbg !3438
  call void @llvm.dbg.value(metadata i32 %2, metadata !3436, metadata !DIExpression()), !dbg !3438
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3439
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3440
  %6 = add i32 %5, %4, !dbg !3441
  call void @llvm.dbg.value(metadata i32 %6, metadata !3437, metadata !DIExpression()), !dbg !3438
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3442
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3443
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3444
  ret void, !dbg !3445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3446 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3448, metadata !DIExpression()), !dbg !3450
  call void @llvm.dbg.value(metadata i32 %1, metadata !3449, metadata !DIExpression()), !dbg !3450
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3451
  %4 = sub i32 %1, %3, !dbg !3452
  ret i32 %4, !dbg !3453
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3454 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3456, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.value(metadata i32 %1, metadata !3457, metadata !DIExpression()), !dbg !3461
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3462, !range !3310
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3463
  call void @llvm.dbg.value(metadata i32 %4, metadata !3458, metadata !DIExpression()), !dbg !3464
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3465
  ret void, !dbg !3466
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3467 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3471, metadata !DIExpression()), !dbg !3474
  call void @llvm.dbg.value(metadata i32 %1, metadata !3472, metadata !DIExpression()), !dbg !3474
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3475
  %4 = add i32 %1, 1, !dbg !3476
  %5 = sub i32 %4, %3, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %5, metadata !3473, metadata !DIExpression()), !dbg !3474
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3478, !range !3479
  %7 = sub nsw i32 31, %6, !dbg !3480
  ret i32 %7, !dbg !3481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3482 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3486, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %1, metadata !3487, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata i32 %2, metadata !3488, metadata !DIExpression()), !dbg !3495
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3489, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3495
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !3496
  %5 = load i32, i32* %4, align 4, !dbg !3496
  %6 = icmp eq i32 %5, 0, !dbg !3497
  br i1 %6, label %7, label %12, !dbg !3498

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3499
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3501
  %10 = load i32, i32* %9, align 4, !dbg !3502
  %11 = or i32 %10, %8, !dbg !3502
  store i32 %11, i32* %9, align 4, !dbg !3502
  store i32 %1, i32* %4, align 4, !dbg !3503
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3504
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3505
  br label %14, !dbg !3506

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3491, metadata !DIExpression()), !dbg !3507
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3508, !range !3509
  call void @llvm.dbg.value(metadata i32 %13, metadata !3494, metadata !DIExpression()), !dbg !3507
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3510
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3511
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3512
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3513
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3514, !range !3310
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #26, !dbg !3515
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3516
  %18 = load i32, i32* %17, align 4, !dbg !3517
  %19 = add i32 %18, %16, !dbg !3517
  store i32 %19, i32* %17, align 4, !dbg !3517
  ret void, !dbg !3518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3519 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3521, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata i32 %1, metadata !3522, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata i32 %2, metadata !3523, metadata !DIExpression()), !dbg !3524
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3525
  ret void, !dbg !3526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3527 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3529, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 %1, metadata !3530, metadata !DIExpression()), !dbg !3532
  call void @llvm.dbg.value(metadata i32 %2, metadata !3531, metadata !DIExpression()), !dbg !3532
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3533
  ret void, !dbg !3534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3535 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3537, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %1, metadata !3538, metadata !DIExpression()), !dbg !3539
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3540
  ret i32 %3, !dbg !3541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3546, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %1, metadata !3547, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata i32 %2, metadata !3548, metadata !DIExpression()), !dbg !3551
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3552
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3549, metadata !DIExpression()), !dbg !3551
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3551
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3550, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3551
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3553
  call void @llvm.dbg.value(metadata i8* %5, metadata !3550, metadata !DIExpression()), !dbg !3551
  %6 = bitcast i8* %5 to i16*, !dbg !3554
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3557
  %8 = load i16, i16* %7, align 2, !dbg !3557
  %9 = zext i16 %8 to i32, !dbg !3557
  ret i32 %9, !dbg !3558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3559 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3563, metadata !DIExpression()), !dbg !3564
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3565
  ret %struct.chunk_unit_t* %2, !dbg !3566
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3567 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3571, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %1, metadata !3572, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %2, metadata !3573, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %3, metadata !3574, metadata !DIExpression()), !dbg !3577
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3578
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3575, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3576, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3577
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3579
  call void @llvm.dbg.value(metadata i8* %6, metadata !3576, metadata !DIExpression()), !dbg !3577
  %7 = trunc i32 %3 to i16, !dbg !3580
  %8 = bitcast i8* %6 to i16*, !dbg !3583
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3584
  store i16 %7, i16* %9, align 2, !dbg !3585
  ret void, !dbg !3586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3587 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3591, metadata !DIExpression()), !dbg !3592
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3593
  ret i32 %2, !dbg !3594
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3595 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3599, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.value(metadata i32 %1, metadata !3600, metadata !DIExpression()), !dbg !3601
  %3 = add i32 %1, 4, !dbg !3602
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3603
  ret i32 %4, !dbg !3604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3609, metadata !DIExpression()), !dbg !3610
  %2 = add i32 %0, 7, !dbg !3611
  %3 = lshr i32 %2, 3, !dbg !3612
  ret i32 %3, !dbg !3613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3614 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3618, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 %1, metadata !3619, metadata !DIExpression()), !dbg !3621
  call void @llvm.dbg.value(metadata i32 %2, metadata !3620, metadata !DIExpression()), !dbg !3621
  %4 = shl i32 %2, 1, !dbg !3622
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3623
  ret void, !dbg !3624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3625 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3627, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 %1, metadata !3628, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 %2, metadata !3629, metadata !DIExpression()), !dbg !3630
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3631
  ret void, !dbg !3632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3633 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3635, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i32 %1, metadata !3636, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata i32 %2, metadata !3637, metadata !DIExpression()), !dbg !3643
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !3644
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3638, metadata !DIExpression()), !dbg !3643
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3645
  %6 = icmp eq i32 %5, %1, !dbg !3646
  br i1 %6, label %7, label %14, !dbg !3647

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3648
  %9 = xor i32 %8, -1, !dbg !3650
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3651
  %11 = load i32, i32* %10, align 4, !dbg !3652
  %12 = and i32 %11, %9, !dbg !3652
  store i32 %12, i32* %10, align 4, !dbg !3652
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3653
  store i32 0, i32* %13, align 4, !dbg !3654
  br label %17, !dbg !3655

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %15, metadata !3639, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i32 %5, metadata !3642, metadata !DIExpression()), !dbg !3657
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3658
  store i32 %5, i32* %16, align 4, !dbg !3659
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3660
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3661
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !3662, !range !3310
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #26, !dbg !3663
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !3664
  %21 = load i32, i32* %20, align 4, !dbg !3665
  %22 = sub i32 %21, %19, !dbg !3665
  store i32 %22, i32* %20, align 4, !dbg !3665
  ret void, !dbg !3666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3667 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3669, metadata !DIExpression()), !dbg !3671
  call void @llvm.dbg.value(metadata i32 %1, metadata !3670, metadata !DIExpression()), !dbg !3671
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3672
  ret i32 %3, !dbg !3673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3674 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3678, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.value(metadata i8* %1, metadata !3679, metadata !DIExpression()), !dbg !3685
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3686
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3686
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3680, metadata !DIExpression()), !dbg !3685
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %5, metadata !3681, metadata !DIExpression()), !dbg !3685
  %6 = ptrtoint i8* %1 to i32, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %6, metadata !3682, metadata !DIExpression()), !dbg !3685
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3689
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3689
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %9, metadata !3683, metadata !DIExpression()), !dbg !3685
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3691
  %11 = shl i32 %10, 3, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %11, metadata !3684, metadata !DIExpression()), !dbg !3685
  %12 = sub i32 %9, %6, !dbg !3693
  %13 = add i32 %12, %11, !dbg !3694
  ret i32 %13, !dbg !3695
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3696 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3700, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.value(metadata i32 %1, metadata !3701, metadata !DIExpression()), !dbg !3706
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3707
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3707
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3702, metadata !DIExpression()), !dbg !3706
  %5 = icmp eq i32 %1, 0, !dbg !3708
  br i1 %5, label %21, label %6, !dbg !3710

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3711
  br i1 %7, label %21, label %8, !dbg !3712

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3713, !range !3307
  call void @llvm.dbg.value(metadata i32 %9, metadata !3704, metadata !DIExpression()), !dbg !3706
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %10, metadata !3705, metadata !DIExpression()), !dbg !3706
  %11 = icmp eq i32 %10, 0, !dbg !3715
  br i1 %11, label %21, label %12, !dbg !3717

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3718
  %14 = icmp ugt i32 %13, %9, !dbg !3720
  br i1 %14, label %15, label %17, !dbg !3721

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3722
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3724
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3725
  br label %17, !dbg !3726

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3727
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3728
  call void @llvm.dbg.value(metadata i8* %18, metadata !3703, metadata !DIExpression()), !dbg !3706
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3729, !range !3310
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #26, !dbg !3730, !range !3731
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #26, !dbg !3732
  br label %21, !dbg !3733

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3706
  ret i8* %22, !dbg !3734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3735 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3739, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 %1, metadata !3740, metadata !DIExpression()), !dbg !3741
  %3 = lshr i32 %1, 3, !dbg !3742
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3743
  %5 = load i32, i32* %4, align 4, !dbg !3743
  %6 = icmp uge i32 %3, %5, !dbg !3744
  ret i1 %6, !dbg !3745
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3746 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3750, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata i32 %1, metadata !3751, metadata !DIExpression()), !dbg !3765
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3766
  call void @llvm.dbg.value(metadata i32 %3, metadata !3752, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3753, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3765
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3767
  %5 = load i32, i32* %4, align 4, !dbg !3767
  %6 = icmp eq i32 %5, 0, !dbg !3768
  br i1 %6, label %19, label %7, !dbg !3769

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3770
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3771
  call void @llvm.dbg.value(metadata i32 %9, metadata !3757, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.value(metadata i32 %8, metadata !3758, metadata !DIExpression()), !dbg !3772
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3773
  %11 = icmp ult i32 %10, %1, !dbg !3775
  br i1 %11, label %13, label %12, !dbg !3776

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3777
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3779
  store i32 %14, i32* %4, align 4, !dbg !3780
  %15 = add nsw i32 %9, -1, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %15, metadata !3757, metadata !DIExpression()), !dbg !3771
  %16 = icmp eq i32 %15, 0, !dbg !3781
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3782
  br i1 %18, label %19, label %7, !dbg !3782, !llvm.loop !3783

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3786
  %21 = load i32, i32* %20, align 4, !dbg !3786
  %22 = add nsw i32 %3, 1, !dbg !3787
  %23 = shl nsw i32 -1, %22, !dbg !3787
  %24 = and i32 %21, %23, !dbg !3788
  call void @llvm.dbg.value(metadata i32 %24, metadata !3760, metadata !DIExpression()), !dbg !3765
  %25 = icmp eq i32 %24, 0, !dbg !3789
  br i1 %25, label %30, label %26, !dbg !3790

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3791, !range !3479
  call void @llvm.dbg.value(metadata i32 %27, metadata !3761, metadata !DIExpression()), !dbg !3792
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3793
  %29 = load i32, i32* %28, align 4, !dbg !3793
  call void @llvm.dbg.value(metadata i32 %29, metadata !3764, metadata !DIExpression()), !dbg !3792
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3794
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3765
  ret i32 %31, !dbg !3795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3796 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3798, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %1, metadata !3799, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %2, metadata !3800, metadata !DIExpression()), !dbg !3804
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %4, metadata !3801, metadata !DIExpression()), !dbg !3804
  %5 = sub i32 %2, %1, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %5, metadata !3802, metadata !DIExpression()), !dbg !3804
  %6 = sub i32 %4, %5, !dbg !3807
  call void @llvm.dbg.value(metadata i32 %6, metadata !3803, metadata !DIExpression()), !dbg !3804
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3808
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3809
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3810
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3811
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3812
  ret void, !dbg !3813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3814 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3818, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.value(metadata i32 %1, metadata !3819, metadata !DIExpression()), !dbg !3822
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3823
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3820, metadata !DIExpression()), !dbg !3822
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3824
  call void @llvm.dbg.value(metadata i8* %4, metadata !3821, metadata !DIExpression()), !dbg !3822
  ret i8* %4, !dbg !3825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3826 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3830, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i32 %1, metadata !3831, metadata !DIExpression()), !dbg !3832
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3833
  %4 = load i32, i32* %3, align 4, !dbg !3834
  %5 = add i32 %4, %1, !dbg !3834
  store i32 %5, i32* %3, align 4, !dbg !3834
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3835
  %7 = load i32, i32* %6, align 4, !dbg !3835
  %8 = icmp ugt i32 %7, %5, !dbg !3835
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3835
  store i32 %9, i32* %6, align 4, !dbg !3836
  ret void, !dbg !3837
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3838 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3842, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %1, metadata !3843, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %2, metadata !3844, metadata !DIExpression()), !dbg !3854
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3855
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3845, metadata !DIExpression()), !dbg !3854
  %6 = sub i32 0, %1, !dbg !3856
  %7 = and i32 %6, %1, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %7, metadata !3847, metadata !DIExpression()), !dbg !3854
  %8 = icmp eq i32 %7, %1, !dbg !3858
  br i1 %8, label %13, label %9, !dbg !3860

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %10, metadata !3843, metadata !DIExpression()), !dbg !3854
  %11 = icmp ult i32 %7, 4, !dbg !3863
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3863
  br label %17, !dbg !3863

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3864
  br i1 %14, label %15, label %17, !dbg !3867

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3868
  br label %59, !dbg !3870

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3854
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3871
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3843, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %19, metadata !3846, metadata !DIExpression()), !dbg !3854
  call void @llvm.dbg.value(metadata i32 %18, metadata !3847, metadata !DIExpression()), !dbg !3854
  %21 = icmp eq i32 %2, 0, !dbg !3872
  br i1 %21, label %59, label %22, !dbg !3874

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3875
  br i1 %23, label %59, label %24, !dbg !3876

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3877
  %26 = add i32 %25, %20, !dbg !3878
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3879, !range !3307
  call void @llvm.dbg.value(metadata i32 %27, metadata !3848, metadata !DIExpression()), !dbg !3854
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %28, metadata !3849, metadata !DIExpression()), !dbg !3854
  %29 = icmp eq i32 %28, 0, !dbg !3881
  br i1 %29, label %59, label %30, !dbg !3883

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3884
  call void @llvm.dbg.value(metadata i8* %31, metadata !3850, metadata !DIExpression()), !dbg !3854
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3885
  %33 = ptrtoint i8* %32 to i32, !dbg !3885
  %34 = add i32 %20, -1, !dbg !3885
  %35 = add i32 %34, %33, !dbg !3885
  %36 = sub i32 0, %20, !dbg !3885
  %37 = and i32 %35, %36, !dbg !3885
  %38 = inttoptr i32 %37 to i8*, !dbg !3886
  %39 = sub i32 0, %18, !dbg !3887
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3887
  call void @llvm.dbg.value(metadata i8* %40, metadata !3850, metadata !DIExpression()), !dbg !3854
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3888
  %42 = ptrtoint i8* %41 to i32, !dbg !3888
  %43 = add i32 %42, 7, !dbg !3888
  %44 = and i32 %43, -8, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %44, metadata !3851, metadata !DIExpression()), !dbg !3854
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %45, metadata !3852, metadata !DIExpression()), !dbg !3854
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3890
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3891
  %48 = sub i32 %44, %47, !dbg !3891
  %49 = ashr exact i32 %48, 3, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %49, metadata !3853, metadata !DIExpression()), !dbg !3854
  %50 = icmp ugt i32 %45, %28, !dbg !3892
  br i1 %50, label %51, label %52, !dbg !3894

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3895
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3897
  br label %52, !dbg !3898

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3899
  %54 = icmp ugt i32 %53, %49, !dbg !3901
  br i1 %54, label %55, label %56, !dbg !3902

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3903
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3905
  br label %56, !dbg !3906

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3907
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3908, !range !3310
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #26, !dbg !3909, !range !3731
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #26, !dbg !3910
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3854
  ret i8* %60, !dbg !3911
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3912 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3916, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata i8* %1, metadata !3917, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata i32 %2, metadata !3918, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata i32 %3, metadata !3919, metadata !DIExpression()), !dbg !3935
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3936
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3936
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3920, metadata !DIExpression()), !dbg !3935
  %7 = icmp eq i8* %1, null, !dbg !3937
  br i1 %7, label %8, label %10, !dbg !3939

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3940
  br label %65, !dbg !3942

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3943
  br i1 %11, label %12, label %13, !dbg !3945

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3946
  br label %65, !dbg !3948

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3949
  br i1 %14, label %65, label %15, !dbg !3951

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3952, !range !3307
  call void @llvm.dbg.value(metadata i32 %16, metadata !3921, metadata !DIExpression()), !dbg !3935
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %17, metadata !3922, metadata !DIExpression()), !dbg !3935
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3954
  %19 = ptrtoint i8* %1 to i32, !dbg !3955
  %20 = ptrtoint i8* %18 to i32, !dbg !3955
  %21 = sub i32 %19, %20, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %21, metadata !3923, metadata !DIExpression()), !dbg !3935
  %22 = add i32 %21, %3, !dbg !3956
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3957
  call void @llvm.dbg.value(metadata i32 %23, metadata !3924, metadata !DIExpression()), !dbg !3935
  %24 = icmp eq i32 %2, 0, !dbg !3958
  br i1 %24, label %29, label %25, !dbg !3959

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3960
  %27 = and i32 %26, %19, !dbg !3961
  %28 = icmp eq i32 %27, 0, !dbg !3961
  br i1 %28, label %29, label %55, !dbg !3962

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3963
  %31 = icmp eq i32 %23, %30, !dbg !3964
  br i1 %31, label %65, label %32, !dbg !3965

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3966
  br i1 %33, label %34, label %41, !dbg !3967

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3968
  %36 = shl i32 %35, 3, !dbg !3970
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3971
  %38 = load i32, i32* %37, align 4, !dbg !3972
  %39 = add i32 %38, %36, !dbg !3972
  store i32 %39, i32* %37, align 4, !dbg !3972
  %40 = add i32 %23, %16, !dbg !3973
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #26, !dbg !3974
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3975
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #26, !dbg !3976
  br label %65, !dbg !3977

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3978
  br i1 %42, label %55, label %43, !dbg !3979

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3980
  %45 = add i32 %44, %30, !dbg !3981
  %46 = icmp ult i32 %45, %23, !dbg !3982
  br i1 %46, label %55, label %47, !dbg !3983

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %48, metadata !3925, metadata !DIExpression()), !dbg !3985
  %49 = shl i32 %48, 3, !dbg !3986
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #26, !dbg !3987
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3988
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3989
  %51 = icmp ult i32 %48, %50, !dbg !3991
  br i1 %51, label %52, label %54, !dbg !3992

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !3993
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #26, !dbg !3995
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !3996
  br label %54, !dbg !3997

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !3998
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3999
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4000
  call void @llvm.dbg.value(metadata i8* %56, metadata !3931, metadata !DIExpression()), !dbg !3935
  %57 = icmp eq i8* %56, null, !dbg !4001
  br i1 %57, label %65, label %58, !dbg !4002

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4003, !range !3310
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #26, !dbg !4004
  %61 = sub i32 %60, %21, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %61, metadata !3932, metadata !DIExpression()), !dbg !4006
  %62 = icmp ult i32 %61, %3, !dbg !4007
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !4007
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #25, !dbg !4008
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4009
  br label %65, !dbg !4010

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3935
  ret i8* %66, !dbg !4011
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4012 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4016, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i8* %1, metadata !4017, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 %2, metadata !4018, metadata !DIExpression()), !dbg !4027
  %4 = add i32 %2, -4, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %4, metadata !4018, metadata !DIExpression()), !dbg !4027
  %5 = ptrtoint i8* %1 to i32, !dbg !4029
  %6 = add i32 %5, 7, !dbg !4029
  %7 = and i32 %6, -8, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %7, metadata !4019, metadata !DIExpression()), !dbg !4027
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4030
  %9 = ptrtoint i8* %8 to i32, !dbg !4030
  %10 = and i32 %9, -8, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %10, metadata !4020, metadata !DIExpression()), !dbg !4027
  %11 = sub i32 %10, %7, !dbg !4031
  %12 = lshr exact i32 %11, 3, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %12, metadata !4021, metadata !DIExpression()), !dbg !4027
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4033
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4022, metadata !DIExpression()), !dbg !4027
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4034
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4035
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4036
  store i32 %12, i32* %15, align 8, !dbg !4037
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4038
  store i32 0, i32* %16, align 4, !dbg !4039
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !4040
  store i32 0, i32* %17, align 8, !dbg !4041
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !4042
  store i32 0, i32* %18, align 4, !dbg !4043
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !4044
  store i32 0, i32* %19, align 8, !dbg !4045
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %20, metadata !4023, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4027
  %21 = shl i32 %20, 2, !dbg !4047
  %22 = add i32 %21, 32, !dbg !4048
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #26, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %23, metadata !4024, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 0, metadata !4025, metadata !DIExpression()), !dbg !4050
  %24 = icmp slt i32 %20, 0, !dbg !4051
  br i1 %24, label %25, label %27, !dbg !4053

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #26, !dbg !4054
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4055
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4056
  %26 = sub i32 %12, %23, !dbg !4057
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #26, !dbg !4058
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #26, !dbg !4059
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4060
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #26, !dbg !4061
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4062
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #26, !dbg !4063
  ret void, !dbg !4064

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !4025, metadata !DIExpression()), !dbg !4050
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !4065
  store i32 0, i32* %29, align 4, !dbg !4067
  %30 = add nuw i32 %28, 1, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %30, metadata !4025, metadata !DIExpression()), !dbg !4050
  %31 = icmp eq i32 %28, %20, !dbg !4051
  br i1 %31, label %25, label %27, !dbg !4053, !llvm.loop !4069
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !4071 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4095, metadata !DIExpression()), !dbg !4121
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4122
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4122
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4096, metadata !DIExpression()), !dbg !4121
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #26, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %7, metadata !4097, metadata !DIExpression()), !dbg !4121
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !4097, metadata !DIExpression()), !dbg !4121
  %10 = icmp ult i32 %7, %9, !dbg !4125
  br i1 %10, label %11, label %17, !dbg !4127

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !4097, metadata !DIExpression()), !dbg !4121
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #26, !dbg !4128
  br i1 %13, label %14, label %138, !dbg !4131

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #26, !dbg !4132
  call void @llvm.dbg.value(metadata i32 %15, metadata !4097, metadata !DIExpression()), !dbg !4121
  %16 = icmp ult i32 %15, %9, !dbg !4125
  br i1 %16, label %11, label %17, !dbg !4127, !llvm.loop !4133

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !4135
  %19 = icmp eq i32 %18, %9, !dbg !4136
  br i1 %19, label %20, label %138, !dbg !4138

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !4139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4139
  %22 = bitcast i32* %3 to i8*, !dbg !4139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4139
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !4140
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4140
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !4100, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32* %2, metadata !4098, metadata !DIExpression(DW_OP_deref)), !dbg !4121
  call void @llvm.dbg.value(metadata i32* %3, metadata !4099, metadata !DIExpression(DW_OP_deref)), !dbg !4121
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #26, !dbg !4142
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #26, !dbg !4143
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !4144
  %26 = load i32, i32* %25, align 4, !dbg !4144
  %27 = load i32, i32* %2, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %27, metadata !4098, metadata !DIExpression()), !dbg !4121
  %28 = icmp eq i32 %26, %27, !dbg !4147
  br i1 %28, label %29, label %136, !dbg !4148

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !4149
  %31 = load i32, i32* %30, align 4, !dbg !4149
  %32 = load i32, i32* %3, align 4, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %32, metadata !4099, metadata !DIExpression()), !dbg !4121
  %33 = icmp eq i32 %31, %32, !dbg !4151
  br i1 %33, label %34, label %136, !dbg !4152

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !4106, metadata !DIExpression()), !dbg !4153
  %35 = load i32, i32* %8, align 4, !dbg !4154
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #26, !dbg !4155
  %37 = icmp slt i32 %36, 0, !dbg !4156
  br i1 %37, label %84, label %38, !dbg !4157

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !4157

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !4106, metadata !DIExpression()), !dbg !4153
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !4158
  %43 = load i32, i32* %42, align 4, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %43, metadata !4108, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 0, metadata !4111, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %43, metadata !4097, metadata !DIExpression()), !dbg !4121
  %44 = icmp eq i32 %43, 0, !dbg !4160
  br i1 %44, label %45, label %50, !dbg !4163

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !4164
  %47 = shl nuw i32 1, %41, !dbg !4165
  %48 = and i32 %46, %47, !dbg !4166
  %49 = icmp eq i32 %48, 0, !dbg !4167
  call void @llvm.dbg.value(metadata i1 %71, metadata !4112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  call void @llvm.dbg.value(metadata i1 %72, metadata !4113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  br i1 %49, label %76, label %136, !dbg !4168

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4097, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i32 %52, metadata !4111, metadata !DIExpression()), !dbg !4159
  %53 = icmp eq i32 %52, 0, !dbg !4169
  %54 = icmp ne i32 %51, %43, !dbg !4170
  %55 = select i1 %53, i1 true, i1 %54, !dbg !4170
  br i1 %55, label %61, label %56, !dbg !4171

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !4164
  %58 = shl nuw i32 1, %41, !dbg !4165
  %59 = and i32 %57, %58, !dbg !4166
  %60 = icmp eq i32 %59, 0, !dbg !4167
  call void @llvm.dbg.value(metadata i1 %71, metadata !4112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  call void @llvm.dbg.value(metadata i1 %72, metadata !4113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  br i1 %60, label %136, label %74, !dbg !4168

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4172
  br i1 %62, label %63, label %136, !dbg !4175

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #26, !dbg !4176
  %64 = add i32 %52, 1, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %64, metadata !4111, metadata !DIExpression()), !dbg !4159
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %65, metadata !4097, metadata !DIExpression()), !dbg !4121
  %66 = icmp eq i32 %65, 0, !dbg !4160
  br i1 %66, label %67, label %50, !dbg !4163, !llvm.loop !4179

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !4164
  %69 = shl nuw i32 1, %41, !dbg !4165
  %70 = and i32 %68, %69, !dbg !4166
  %71 = icmp eq i32 %70, 0, !dbg !4167
  call void @llvm.dbg.value(metadata i1 %71, metadata !4112, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  %72 = icmp ne i32 %64, 0, !dbg !4181
  call void @llvm.dbg.value(metadata i1 %72, metadata !4113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4159
  %73 = xor i1 %72, %71, !dbg !4182
  br i1 %73, label %74, label %136, !dbg !4168

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !4184

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !4186
  %78 = icmp eq i32 %77, 0, !dbg !4187
  br i1 %78, label %79, label %136, !dbg !4188

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %80, metadata !4106, metadata !DIExpression()), !dbg !4153
  %81 = load i32, i32* %8, align 4, !dbg !4154
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #26, !dbg !4155
  %83 = icmp slt i32 %41, %82, !dbg !4156
  br i1 %83, label %40, label %84, !dbg !4157, !llvm.loop !4190

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !4192
  call void @llvm.dbg.value(metadata i32 0, metadata !4114, metadata !DIExpression()), !dbg !4121
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4195
  call void @llvm.dbg.value(metadata i32 %86, metadata !4097, metadata !DIExpression()), !dbg !4121
  %87 = icmp ult i32 %86, %85, !dbg !4196
  br i1 %87, label %88, label %99, !dbg !4197

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !4114, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i32 %90, metadata !4097, metadata !DIExpression()), !dbg !4121
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4198
  br i1 %91, label %92, label %136, !dbg !4201

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #26, !dbg !4202
  %94 = icmp eq i32 %93, %89, !dbg !4204
  br i1 %94, label %95, label %136, !dbg !4205

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !4114, metadata !DIExpression()), !dbg !4121
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #26, !dbg !4206
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #26, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %96, metadata !4097, metadata !DIExpression()), !dbg !4121
  %97 = load i32, i32* %8, align 4, !dbg !4192
  %98 = icmp ult i32 %96, %97, !dbg !4196
  br i1 %98, label %88, label %99, !dbg !4197, !llvm.loop !4208

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !4210
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !4192
  %102 = icmp eq i32 %100, %101, !dbg !4211
  br i1 %102, label %103, label %136, !dbg !4213

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !4115, metadata !DIExpression()), !dbg !4214
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #26, !dbg !4215
  %105 = icmp slt i32 %104, 0, !dbg !4216
  br i1 %105, label %125, label %106, !dbg !4217

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !4115, metadata !DIExpression()), !dbg !4214
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !4218
  %110 = load i32, i32* %109, align 4, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %110, metadata !4117, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 0, metadata !4120, metadata !DIExpression()), !dbg !4219
  %111 = icmp eq i32 %110, 0, !dbg !4220
  br i1 %111, label %120, label %112, !dbg !4222

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !4120, metadata !DIExpression()), !dbg !4219
  call void @llvm.dbg.value(metadata i32 %113, metadata !4097, metadata !DIExpression()), !dbg !4121
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4223
  br i1 %114, label %136, label %115, !dbg !4228

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #26, !dbg !4229
  call void @llvm.dbg.value(metadata i32 poison, metadata !4120, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4219
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #26, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %116, metadata !4097, metadata !DIExpression()), !dbg !4121
  %117 = icmp eq i32 %116, %110, !dbg !4231
  br i1 %117, label %118, label %112, !dbg !4232, !llvm.loop !4233

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !4235
  br label %120, !dbg !4236

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !4235
  %122 = add nuw nsw i32 %108, 1, !dbg !4236
  call void @llvm.dbg.value(metadata i32 %122, metadata !4115, metadata !DIExpression()), !dbg !4214
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #26, !dbg !4215
  %124 = icmp slt i32 %108, %123, !dbg !4216
  br i1 %124, label %106, label %125, !dbg !4217, !llvm.loop !4237

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !4239
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #26, !dbg !4242
  call void @llvm.dbg.value(metadata i32 %127, metadata !4097, metadata !DIExpression()), !dbg !4121
  %128 = icmp ult i32 %127, %126, !dbg !4243
  br i1 %128, label %129, label %136, !dbg !4244

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !4097, metadata !DIExpression()), !dbg !4121
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4245
  %132 = xor i1 %131, true, !dbg !4247
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #26, !dbg !4248
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #26, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %133, metadata !4097, metadata !DIExpression()), !dbg !4121
  %134 = load i32, i32* %8, align 4, !dbg !4239
  %135 = icmp ult i32 %133, %134, !dbg !4243
  br i1 %135, label %129, label %136, !dbg !4244, !llvm.loop !4250

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !4121
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #24, !dbg !4252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #24, !dbg !4252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #24, !dbg !4252
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !4121
  ret i1 %139, !dbg !4252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4253 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4257, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.value(metadata i32 %1, metadata !4258, metadata !DIExpression()), !dbg !4259
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4260
  %4 = add i32 %3, %1, !dbg !4261
  ret i32 %4, !dbg !4262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4263 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4267, metadata !DIExpression()), !dbg !4269
  call void @llvm.dbg.value(metadata i32 %1, metadata !4268, metadata !DIExpression()), !dbg !4269
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4270
  %4 = icmp eq i32 %3, 0, !dbg !4270
  br i1 %4, label %33, label %5, !dbg !4273

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !4274
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4274
  %8 = load i32, i32* %7, align 4, !dbg !4274
  %9 = icmp ugt i32 %6, %8, !dbg !4274
  br i1 %9, label %33, label %10, !dbg !4277

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4278
  br i1 %11, label %12, label %33, !dbg !4281

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4282
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4282
  %15 = icmp eq i32 %14, %1, !dbg !4282
  br i1 %15, label %16, label %33, !dbg !4285

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4286
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4286
  %19 = icmp eq i32 %18, %1, !dbg !4286
  br i1 %19, label %20, label %33, !dbg !4289

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4290
  br i1 %21, label %32, label %22, !dbg !4292

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #26, !dbg !4293
  br i1 %23, label %24, label %33, !dbg !4297

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #26, !dbg !4298
  br i1 %25, label %26, label %33, !dbg !4301

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4302, !range !3509
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #26, !dbg !4302
  br i1 %28, label %29, label %33, !dbg !4307

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4308, !range !3509
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #26, !dbg !4308
  br i1 %31, label %32, label %33, !dbg !4311

32:                                               ; preds = %20, %29
  br label %33, !dbg !4312

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !4269
  ret i1 %34, !dbg !4313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !4314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4318, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32* %1, metadata !4319, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i32* %2, metadata !4320, metadata !DIExpression()), !dbg !4322
  store i32 0, i32* %1, align 4, !dbg !4323
  store i32 0, i32* %2, align 4, !dbg !4324
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4325
  call void @llvm.dbg.value(metadata i32 %4, metadata !4321, metadata !DIExpression()), !dbg !4322
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !4321, metadata !DIExpression()), !dbg !4322
  %6 = load i32, i32* %5, align 4, !dbg !4327
  %7 = icmp ult i32 %4, %6, !dbg !4329
  br i1 %7, label %8, label %19, !dbg !4330

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4321, metadata !DIExpression()), !dbg !4322
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4331
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #26, !dbg !4334, !range !3310
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #26, !dbg !4334
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !4334
  %14 = load i32, i32* %13, align 4, !dbg !4334
  %15 = add i32 %14, %12, !dbg !4334
  store i32 %15, i32* %13, align 4, !dbg !4334
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #26, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %16, metadata !4321, metadata !DIExpression()), !dbg !4322
  %17 = load i32, i32* %5, align 4, !dbg !4327
  %18 = icmp ult i32 %16, %17, !dbg !4329
  br i1 %18, label %8, label %19, !dbg !4330, !llvm.loop !4336

19:                                               ; preds = %8, %3
  ret void, !dbg !4338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !4339 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4344, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !4345, metadata !DIExpression()), !dbg !4346
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !4347
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !4349
  br i1 %5, label %20, label %6, !dbg !4349

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4350
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4350
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !4351
  %10 = load i32, i32* %9, align 4, !dbg !4351
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !4352
  store i32 %10, i32* %11, align 4, !dbg !4353
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4354
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !4355
  %14 = load i32, i32* %13, align 4, !dbg !4355
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !4356
  store i32 %14, i32* %15, align 4, !dbg !4357
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !4358
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !4359
  %18 = load i32, i32* %17, align 4, !dbg !4359
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !4360
  store i32 %18, i32* %19, align 4, !dbg !4361
  br label %20, !dbg !4362

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !4346
  ret i32 %21, !dbg !4363
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4364 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4368, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %1, metadata !4369, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %1, metadata !4370, metadata !DIExpression()), !dbg !4371
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4372, !range !3479
  %4 = sub nsw i32 31, %3, !dbg !4373
  ret i32 %4, !dbg !4374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !4375 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4379, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i32 %1, metadata !4380, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i1 %2, metadata !4381, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4384
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4385
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4382, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4383, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4384
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4386
  %6 = bitcast i8* %5 to i16*, !dbg !4386
  %7 = load i16, i16* %6, align 2, !dbg !4386
  %8 = and i16 %7, -2, !dbg !4390
  %9 = zext i1 %2 to i16, !dbg !4390
  %10 = or i16 %8, %9, !dbg !4390
  store i16 %10, i16* %6, align 2, !dbg !4386
  ret void, !dbg !4391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4392 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4394, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i32 %1, metadata !4395, metadata !DIExpression()), !dbg !4396
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4397
  ret i32 %3, !dbg !4398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4399 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4401, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.value(metadata i32 %1, metadata !4402, metadata !DIExpression()), !dbg !4403
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4404
  %4 = and i32 %3, 1, !dbg !4405
  %5 = icmp ne i32 %4, 0, !dbg !4404
  ret i1 %5, !dbg !4406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4407 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4409, metadata !DIExpression()), !dbg !4411
  call void @llvm.dbg.value(metadata i32 %1, metadata !4410, metadata !DIExpression()), !dbg !4411
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4412
  %4 = sub i32 %1, %3, !dbg !4413
  ret i32 %4, !dbg !4414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4419, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.value(metadata i32 %1, metadata !4420, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.value(metadata i32 %2, metadata !4421, metadata !DIExpression()), !dbg !4424
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4425
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4422, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4423, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4424
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4423, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4424
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4426
  call void @llvm.dbg.value(metadata i8* %5, metadata !4423, metadata !DIExpression()), !dbg !4424
  %6 = bitcast i8* %5 to i16*, !dbg !4427
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4430
  %8 = load i16, i16* %7, align 2, !dbg !4430
  %9 = zext i16 %8 to i32, !dbg !4430
  ret i32 %9, !dbg !4431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4432 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4436, metadata !DIExpression()), !dbg !4437
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4438
  ret %struct.chunk_unit_t* %2, !dbg !4439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4440 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4444, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i32 %1, metadata !4445, metadata !DIExpression()), !dbg !4446
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4447
  %4 = lshr i32 %3, 1, !dbg !4448
  ret i32 %4, !dbg !4449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4450 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4454, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %1, metadata !4455, metadata !DIExpression()), !dbg !4456
  %3 = shl i32 %1, 3, !dbg !4457
  %4 = add i32 %3, -4, !dbg !4458
  ret i32 %4, !dbg !4459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4460 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4462, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata i32 %1, metadata !4463, metadata !DIExpression()), !dbg !4464
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #26, !dbg !4465
  %4 = icmp ugt i32 %3, %1, !dbg !4465
  br i1 %4, label %12, label %5, !dbg !4468

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4469
  %7 = load i32, i32* %6, align 4, !dbg !4469
  %8 = icmp ugt i32 %7, %1, !dbg !4469
  br i1 %8, label %9, label %12, !dbg !4472

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #26, !dbg !4473
  %11 = icmp ult i32 %10, %7, !dbg !4473
  br label %12, !dbg !4464

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !4464
  ret i1 %13, !dbg !4476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4477 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4479, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata i32 %1, metadata !4480, metadata !DIExpression()), !dbg !4481
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4482
  ret i32 %3, !dbg !4483
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !4484 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !4501, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !4502, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %2, metadata !4503, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %3, metadata !4504, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %4, metadata !4505, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i8* %5, metadata !4506, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %6, metadata !4507, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata i32 %7, metadata !4508, metadata !DIExpression()), !dbg !4539
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !4509, metadata !DIExpression()), !dbg !4539
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !4540
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4540
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !4510, metadata !DIExpression()), !dbg !4541
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !4542
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !4542
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !4542
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !4542
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !4542
  store i8* %2, i8** %14, align 4, !dbg !4542
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !4542
  store i32 %3, i32* %15, align 4, !dbg !4542
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !4542
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !4542
  store i8* %5, i8** %17, align 4, !dbg !4542
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !4542
  %19 = lshr i32 %6, 3, !dbg !4543
  store i32 %19, i32* %18, align 4, !dbg !4542
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !4542
  store i32 0, i32* %20, align 4, !dbg !4542
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !4542
  store i32 0, i32* %21, align 4, !dbg !4542
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !4542
  store i32 %7, i32* %22, align 4, !dbg !4542
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !4544
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !4544
  call void @llvm.dbg.value(metadata i32 0, metadata !4527, metadata !DIExpression()), !dbg !4545
  %24 = icmp eq i32 %4, 0, !dbg !4546
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !4547
  br i1 %24, label %31, label %26, !dbg !4547

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !4547

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #24, !dbg !4548
  ret void, !dbg !4548

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !4527, metadata !DIExpression()), !dbg !4545
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4549
  br i1 %36, label %37, label %50, !dbg !4550

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #26, !dbg !4551
  call void @llvm.dbg.value(metadata i32 %38, metadata !4529, metadata !DIExpression()), !dbg !4552
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #25, !dbg !4553
  call void @llvm.dbg.value(metadata i8* %39, metadata !4534, metadata !DIExpression()), !dbg !4552
  %40 = load i32, i32* %28, align 8, !dbg !4554
  %41 = add i32 %40, 1, !dbg !4554
  store i32 %41, i32* %28, align 8, !dbg !4554
  %42 = icmp eq i8* %39, null, !dbg !4555
  br i1 %42, label %65, label %43, !dbg !4557

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !4558
  %45 = add i32 %44, 1, !dbg !4558
  store i32 %45, i32* %29, align 4, !dbg !4558
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !4560
  store i8* %39, i8** %46, align 4, !dbg !4561
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !4562
  store i32 %38, i32* %47, align 4, !dbg !4563
  %48 = add i32 %34, 1, !dbg !4564
  store i32 %48, i32* %20, align 4, !dbg !4564
  %49 = add i32 %33, %38, !dbg !4565
  store i32 %49, i32* %21, align 4, !dbg !4565
  br label %65, !dbg !4566

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #26, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %51, metadata !4535, metadata !DIExpression()), !dbg !4568
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !4569
  %53 = load i8*, i8** %52, align 4, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %53, metadata !4537, metadata !DIExpression()), !dbg !4568
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !4570
  %55 = load i32, i32* %54, align 4, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %55, metadata !4538, metadata !DIExpression()), !dbg !4568
  %56 = load i32, i32* %27, align 8, !dbg !4571
  %57 = add i32 %56, 1, !dbg !4571
  store i32 %57, i32* %27, align 8, !dbg !4571
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !4572
  %59 = add i32 %34, -1, !dbg !4573
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !4574
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !4574
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !4574
  %63 = load i64, i64* %61, align 4, !dbg !4574
  store i64 %63, i64* %62, align 4, !dbg !4574
  store i32 %59, i32* %20, align 4, !dbg !4575
  %64 = sub i32 %33, %55, !dbg !4576
  store i32 %64, i32* %21, align 4, !dbg !4576
  tail call void %1(i8* noundef %2, i8* noundef %53) #25, !dbg !4577
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !4578
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !4579
  %69 = load i64, i64* %30, align 8, !dbg !4580
  %70 = add i64 %69, %68, !dbg !4580
  store i64 %70, i64* %30, align 8, !dbg !4580
  %71 = add nuw i32 %35, 1, !dbg !4581
  call void @llvm.dbg.value(metadata i32 %71, metadata !4527, metadata !DIExpression()), !dbg !4545
  %72 = icmp eq i32 %71, %4, !dbg !4546
  br i1 %72, label %31, label %32, !dbg !4547, !llvm.loop !4582
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4584 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4589, metadata !DIExpression()), !dbg !4596
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4597
  %3 = load i32, i32* %2, align 4, !dbg !4597
  %4 = icmp eq i32 %3, 0, !dbg !4598
  br i1 %4, label %26, label %5, !dbg !4599

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !4600
  %7 = load i32, i32* %6, align 4, !dbg !4600
  %8 = icmp ult i32 %3, %7, !dbg !4601
  br i1 %8, label %9, label %26, !dbg !4602

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !4603
  %11 = load i32, i32* %10, align 4, !dbg !4603
  %12 = mul i32 %11, 100, !dbg !4604
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !4605
  %14 = load i32, i32* %13, align 4, !dbg !4605
  %15 = udiv i32 %12, %14, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %15, metadata !4590, metadata !DIExpression()), !dbg !4607
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !4608
  %17 = load i32, i32* %16, align 4, !dbg !4608
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 -1, metadata !4595, metadata !DIExpression()), !dbg !4607
  %18 = icmp ult i32 %15, %17, !dbg !4609
  br i1 %18, label %19, label %22, !dbg !4611

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !4594, metadata !DIExpression()), !dbg !4607
  %20 = udiv i32 -2147483648, %17, !dbg !4612
  %21 = mul i32 %20, %15, !dbg !4614
  call void @llvm.dbg.value(metadata i32 %21, metadata !4595, metadata !DIExpression()), !dbg !4607
  br label %22, !dbg !4615

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !4607
  call void @llvm.dbg.value(metadata i32 %23, metadata !4595, metadata !DIExpression()), !dbg !4607
  %24 = tail call fastcc i32 @rand32() #26, !dbg !4616
  %25 = icmp ugt i32 %24, %23, !dbg !4617
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !4618
  ret i1 %27, !dbg !4619
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !4620 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !4624, metadata !DIExpression()), !dbg !4626
  %1 = tail call fastcc i32 @rand32() #26, !dbg !4627
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !4628, !range !3479
  call void @llvm.dbg.value(metadata i32 %2, metadata !4625, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !4626
  %3 = tail call fastcc i32 @rand32() #26, !dbg !4629
  %4 = shl i32 16, %2, !dbg !4630
  %5 = add i32 %4, -1, !dbg !4630
  %6 = and i32 %5, %3, !dbg !4631
  ret i32 %6, !dbg !4632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !4633 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !4635, metadata !DIExpression()), !dbg !4636
  %2 = tail call fastcc i32 @rand32() #26, !dbg !4637
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !4638
  %4 = load i32, i32* %3, align 4, !dbg !4638
  %5 = urem i32 %2, %4, !dbg !4639
  ret i32 %5, !dbg !4640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !4641
  %2 = mul i64 %1, 2862933555777941757, !dbg !4642
  %3 = add i64 %2, 3037000493, !dbg !4643
  store i64 %3, i64* @rand32.state, align 8, !dbg !4644
  %4 = lshr i64 %3, 32, !dbg !4645
  %5 = trunc i64 %4 to i32, !dbg !4646
  ret i32 %5, !dbg !4647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4648 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4652, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.value(metadata i1 %1, metadata !4653, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4673
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4674
  %6 = load i32, i32* %5, align 4, !dbg !4674
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #26, !dbg !4675
  %8 = add i32 %7, 1, !dbg !4676
  call void @llvm.dbg.value(metadata i32 %8, metadata !4655, metadata !DIExpression()), !dbg !4673
  %9 = bitcast i32* %3 to i8*, !dbg !4677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4677
  %10 = bitcast i32* %4 to i8*, !dbg !4677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4677
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #26, !dbg !4678
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #25, !dbg !4679
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #25, !dbg !4680
  call void @llvm.dbg.value(metadata i32 0, metadata !4654, metadata !DIExpression()), !dbg !4673
  %12 = icmp slt i32 %7, 0, !dbg !4681
  br i1 %12, label %34, label %13, !dbg !4682

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4654, metadata !DIExpression()), !dbg !4673
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !4683
  %16 = load i32, i32* %15, align 4, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %16, metadata !4660, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 0, metadata !4664, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 0, metadata !4665, metadata !DIExpression()), !dbg !4684
  %17 = icmp eq i32 %16, 0, !dbg !4685
  br i1 %17, label %31, label %18, !dbg !4686

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !4684
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !4684
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !4687
  call void @llvm.dbg.value(metadata i32 %21, metadata !4666, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i32 %20, metadata !4665, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %19, metadata !4664, metadata !DIExpression()), !dbg !4684
  %22 = add nuw nsw i32 %20, 1, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %22, metadata !4665, metadata !DIExpression()), !dbg !4684
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4690
  %24 = icmp ugt i32 %19, %23, !dbg !4690
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !4690
  call void @llvm.dbg.value(metadata i32 %25, metadata !4664, metadata !DIExpression()), !dbg !4684
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #26, !dbg !4691
  call void @llvm.dbg.value(metadata i32 %26, metadata !4666, metadata !DIExpression()), !dbg !4687
  %27 = icmp eq i32 %26, %16, !dbg !4692
  br i1 %27, label %28, label %18, !dbg !4693, !llvm.loop !4694

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !4665, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %25, metadata !4664, metadata !DIExpression()), !dbg !4684
  %29 = shl nuw i32 1, %14, !dbg !4697
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #26, !dbg !4700, !range !3731
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #25, !dbg !4701
  br label %31, !dbg !4702

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !4703
  call void @llvm.dbg.value(metadata i32 %32, metadata !4654, metadata !DIExpression()), !dbg !4673
  %33 = icmp eq i32 %14, %7, !dbg !4681
  br i1 %33, label %34, label %13, !dbg !4682, !llvm.loop !4704

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !4706

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !4707
  call void @llvm.dbg.value(metadata i32 0, metadata !4669, metadata !DIExpression()), !dbg !4708
  br label %36, !dbg !4709

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !4708
  call void @llvm.dbg.value(metadata i32 %37, metadata !4669, metadata !DIExpression()), !dbg !4708
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4710
  %39 = select i1 %38, i32 42, i32 45, !dbg !4710
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4713
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4714
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #26, !dbg !4715
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #25, !dbg !4716
  %43 = load i32, i32* %5, align 4, !dbg !4717
  %44 = icmp eq i32 %37, %43, !dbg !4719
  br i1 %44, label %47, label %45, !dbg !4720

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #26, !dbg !4721
  call void @llvm.dbg.value(metadata i32 %46, metadata !4669, metadata !DIExpression()), !dbg !4708
  br label %36, !dbg !4722, !llvm.loop !4723

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !4656, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call void @llvm.dbg.value(metadata i32* %4, metadata !4657, metadata !DIExpression(DW_OP_deref)), !dbg !4673
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #26, !dbg !4726
  %48 = load i32, i32* %5, align 4, !dbg !4727
  %49 = shl i32 %48, 3, !dbg !4728
  %50 = or i32 %49, 4, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %50, metadata !4658, metadata !DIExpression()), !dbg !4673
  %51 = load i32, i32* %3, align 4, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %51, metadata !4656, metadata !DIExpression()), !dbg !4673
  %52 = load i32, i32* %4, align 4, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %52, metadata !4657, metadata !DIExpression()), !dbg !4673
  %53 = add i32 %52, %51, !dbg !4732
  %54 = sub i32 %50, %53, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %54, metadata !4659, metadata !DIExpression()), !dbg !4673
  %55 = mul i32 %54, 1000, !dbg !4733
  %56 = lshr exact i32 %50, 1, !dbg !4734
  %57 = add i32 %55, %56, !dbg !4735
  %58 = udiv i32 %57, %50, !dbg !4736
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4737
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #25, !dbg !4738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !4739
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #24, !dbg !4739
  ret void, !dbg !4739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4740 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4744, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i1 %1, metadata !4745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4746
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4747
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4747
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #26, !dbg !4748
  ret void, !dbg !4749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4750 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4754, metadata !DIExpression()), !dbg !4755
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4756
  br i1 %2, label %9, label %3, !dbg !4758

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4759
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4759
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4760
  %7 = load i32, i32* %6, align 4, !dbg !4760
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4761
  store i32 %7, i32* %8, align 4, !dbg !4762
  br label %9, !dbg !4763

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4755
  ret i32 %10, !dbg !4764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4765 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4775, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %1, metadata !4776, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %2, metadata !4777, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %4, metadata !4779, metadata !DIExpression()), !dbg !4906
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4907
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4907
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4780, metadata !DIExpression()), !dbg !4908
  call void @llvm.dbg.value(metadata i32 0, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i1 undef, metadata !4786, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4906
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4909

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4909

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4910
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %30, metadata !4777, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %29, metadata !4784, metadata !DIExpression()), !dbg !4906
  %31 = load i8, i8* %30, align 1, !dbg !4911
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4909

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4911
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %34, metadata !4777, metadata !DIExpression()), !dbg !4906
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4912
  call void @llvm.dbg.value(metadata i32 %35, metadata !4788, metadata !DIExpression()), !dbg !4913
  %36 = icmp slt i32 %35, 0, !dbg !4914
  %37 = add i32 %29, 1, !dbg !4912
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %36, label %365, label %28, !llvm.loop !4916

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4918
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4793, metadata !DIExpression()), !dbg !4919
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4919
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4838, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4841, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %30, metadata !4844, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 -1, metadata !4845, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 -1, metadata !4846, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* null, metadata !4847, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %14, metadata !4848, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8 0, metadata !4849, metadata !DIExpression()), !dbg !4920
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %39, metadata !4777, metadata !DIExpression()), !dbg !4906
  %40 = load i24, i24* %15, align 8, !dbg !4922
  %41 = and i24 %40, 256, !dbg !4922
  %42 = icmp eq i24 %41, 0, !dbg !4922
  br i1 %42, label %51, label %43, !dbg !4924

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4925
  call void @llvm.dbg.value(metadata i8* %44, metadata !4778, metadata !DIExpression()), !dbg !4906
  %45 = bitcast i8* %27 to i32*, !dbg !4925
  %46 = load i32, i32* %45, align 4, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %46, metadata !4845, metadata !DIExpression()), !dbg !4920
  %47 = icmp slt i32 %46, 0, !dbg !4927
  br i1 %47, label %48, label %56, !dbg !4929

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4930
  store i24 %49, i24* %15, align 8, !dbg !4930
  %50 = sub nsw i32 0, %46, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %50, metadata !4845, metadata !DIExpression()), !dbg !4920
  br label %56, !dbg !4933

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4934
  %53 = icmp eq i24 %52, 0, !dbg !4934
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4936
  br label %56, !dbg !4936

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4937
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4920
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %58, metadata !4845, metadata !DIExpression()), !dbg !4920
  %60 = and i24 %57, 1024, !dbg !4937
  %61 = icmp eq i24 %60, 0, !dbg !4937
  br i1 %61, label %69, label %62, !dbg !4938

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4939
  call void @llvm.dbg.value(metadata i8* %63, metadata !4778, metadata !DIExpression()), !dbg !4906
  %64 = bitcast i8* %59 to i32*, !dbg !4939
  %65 = load i32, i32* %64, align 4, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %65, metadata !4850, metadata !DIExpression()), !dbg !4940
  %66 = icmp slt i32 %65, 0, !dbg !4941
  br i1 %66, label %67, label %74, !dbg !4943

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4944
  store i24 %68, i24* %15, align 8, !dbg !4944
  br label %74, !dbg !4946

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4947
  %71 = icmp eq i24 %70, 0, !dbg !4947
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4949
  br label %74, !dbg !4949

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4950
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4920
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4920
  call void @llvm.dbg.value(metadata i8* %77, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %76, metadata !4846, metadata !DIExpression()), !dbg !4920
  store i32 0, i32* %16, align 4, !dbg !4951
  store i32 0, i32* %17, align 8, !dbg !4952
  %78 = lshr i24 %75, 16, !dbg !4950
  call void @llvm.dbg.value(metadata i24 %78, metadata !4853, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4920
  %79 = lshr i24 %75, 11, !dbg !4953
  %80 = and i24 %79, 15, !dbg !4953
  %81 = zext i24 %80 to i32, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %81, metadata !4854, metadata !DIExpression()), !dbg !4920
  %82 = trunc i24 %78 to i3, !dbg !4954
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4954

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4955

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %85, metadata !4778, metadata !DIExpression()), !dbg !4906
  %86 = bitcast i8* %77 to i32*, !dbg !4958
  %87 = load i32, i32* %86, align 4, !dbg !4958
  %88 = sext i32 %87 to i64, !dbg !4958
  store i64 %88, i64* %20, align 8, !dbg !4960
  br label %115, !dbg !4961

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4962
  call void @llvm.dbg.value(metadata i8* %90, metadata !4778, metadata !DIExpression()), !dbg !4906
  %91 = bitcast i8* %77 to i32*, !dbg !4962
  %92 = load i32, i32* %91, align 4, !dbg !4962
  %93 = sext i32 %92 to i64, !dbg !4962
  store i64 %93, i64* %20, align 8, !dbg !4965
  br label %115, !dbg !4966

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4967
  %96 = add i32 %95, 7, !dbg !4967
  %97 = and i32 %96, -8, !dbg !4967
  %98 = inttoptr i32 %97 to i8*, !dbg !4967
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4967
  call void @llvm.dbg.value(metadata i8* %99, metadata !4778, metadata !DIExpression()), !dbg !4906
  %100 = inttoptr i32 %97 to i64*, !dbg !4967
  %101 = load i64, i64* %100, align 8, !dbg !4967
  store i64 %101, i64* %20, align 8, !dbg !4968
  br label %115, !dbg !4969

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4970
  %104 = add i32 %103, 7, !dbg !4970
  %105 = and i32 %104, -8, !dbg !4970
  %106 = inttoptr i32 %105 to i8*, !dbg !4970
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %107, metadata !4778, metadata !DIExpression()), !dbg !4906
  %108 = inttoptr i32 %105 to i64*, !dbg !4970
  %109 = load i64, i64* %108, align 8, !dbg !4970
  store i64 %109, i64* %20, align 8, !dbg !4971
  br label %115, !dbg !4972

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4973
  call void @llvm.dbg.value(metadata i8* %111, metadata !4778, metadata !DIExpression()), !dbg !4906
  %112 = bitcast i8* %77 to i32*, !dbg !4973
  %113 = load i32, i32* %112, align 4, !dbg !4973
  %114 = sext i32 %113 to i64, !dbg !4974
  store i64 %114, i64* %20, align 8, !dbg !4975
  br label %115, !dbg !4976

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4977
  call void @llvm.dbg.value(metadata i8* %117, metadata !4778, metadata !DIExpression()), !dbg !4906
  %118 = trunc i24 %79 to i4, !dbg !4978
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4978

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4979
  %121 = ashr exact i64 %120, 56, !dbg !4979
  store i64 %121, i64* %20, align 8, !dbg !4982
  br label %177, !dbg !4983

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4984
  %124 = ashr exact i64 %123, 48, !dbg !4984
  store i64 %124, i64* %20, align 8, !dbg !4987
  br label %177, !dbg !4988

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4989

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4992
  call void @llvm.dbg.value(metadata i8* %127, metadata !4778, metadata !DIExpression()), !dbg !4906
  %128 = bitcast i8* %77 to i32*, !dbg !4992
  %129 = load i32, i32* %128, align 4, !dbg !4992
  %130 = zext i32 %129 to i64, !dbg !4992
  store i64 %130, i64* %20, align 8, !dbg !4994
  br label %157, !dbg !4995

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4996
  call void @llvm.dbg.value(metadata i8* %132, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %132, metadata !4778, metadata !DIExpression()), !dbg !4906
  %133 = bitcast i8* %77 to i32*, !dbg !4996
  %134 = load i32, i32* %133, align 4, !dbg !4996
  %135 = zext i32 %134 to i64, !dbg !4996
  store i64 %135, i64* %20, align 8, !dbg !4996
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4998
  %138 = add i32 %137, 7, !dbg !4998
  %139 = and i32 %138, -8, !dbg !4998
  %140 = inttoptr i32 %139 to i8*, !dbg !4998
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4998
  call void @llvm.dbg.value(metadata i8* %141, metadata !4778, metadata !DIExpression()), !dbg !4906
  %142 = inttoptr i32 %139 to i64*, !dbg !4998
  %143 = load i64, i64* %142, align 8, !dbg !4998
  store i64 %143, i64* %20, align 8, !dbg !4999
  br label %157, !dbg !5000

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5001
  %146 = add i32 %145, 7, !dbg !5001
  %147 = and i32 %146, -8, !dbg !5001
  %148 = inttoptr i32 %147 to i8*, !dbg !5001
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5001
  call void @llvm.dbg.value(metadata i8* %149, metadata !4778, metadata !DIExpression()), !dbg !4906
  %150 = inttoptr i32 %147 to i64*, !dbg !5001
  %151 = load i64, i64* %150, align 8, !dbg !5001
  store i64 %151, i64* %20, align 8, !dbg !5002
  br label %157, !dbg !5003

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5004
  call void @llvm.dbg.value(metadata i8* %153, metadata !4778, metadata !DIExpression()), !dbg !4906
  %154 = bitcast i8* %77 to i32*, !dbg !5004
  %155 = load i32, i32* %154, align 4, !dbg !5004
  %156 = zext i32 %155 to i64, !dbg !5005
  store i64 %156, i64* %20, align 8, !dbg !5006
  br label %157, !dbg !5007

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5008
  call void @llvm.dbg.value(metadata i8* %159, metadata !4778, metadata !DIExpression()), !dbg !4906
  %160 = trunc i24 %79 to i4, !dbg !5009
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5009

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5010
  store i64 %162, i64* %20, align 8, !dbg !5013
  br label %177, !dbg !5014

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5015
  store i64 %164, i64* %20, align 8, !dbg !5018
  br label %177, !dbg !5019

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5020
  %167 = add i32 %166, 7, !dbg !5020
  %168 = and i32 %167, -8, !dbg !5020
  %169 = inttoptr i32 %168 to i8*, !dbg !5020
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5020
  call void @llvm.dbg.value(metadata i8* %170, metadata !4778, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %170, metadata !4778, metadata !DIExpression()), !dbg !4906
  %171 = inttoptr i32 %168 to double*, !dbg !5020
  %172 = load double, double* %171, align 8, !dbg !5020
  store double %172, double* %19, align 8, !dbg !5020
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %174, metadata !4778, metadata !DIExpression()), !dbg !4906
  %175 = bitcast i8* %77 to i8**, !dbg !5024
  %176 = load i8*, i8** %175, align 4, !dbg !5024
  store i8* %176, i8** %18, align 8, !dbg !5027
  br label %177, !dbg !5028

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4920
  call void @llvm.dbg.value(metadata i8* %178, metadata !4778, metadata !DIExpression()), !dbg !4906
  %179 = and i24 %75, 3, !dbg !5029
  %180 = icmp eq i24 %179, 0, !dbg !5029
  br i1 %180, label %185, label %181, !dbg !5029

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5030
  call void @llvm.dbg.value(metadata i32 %182, metadata !4855, metadata !DIExpression()), !dbg !5031
  %183 = icmp slt i32 %182, 0, !dbg !5032
  %184 = add i32 %182, %29, !dbg !5030
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5034
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5035

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5036
  call void @llvm.dbg.value(metadata i32 %188, metadata !4859, metadata !DIExpression()), !dbg !5037
  %189 = icmp slt i32 %188, 0, !dbg !5038
  %190 = add i32 %29, 1, !dbg !5036
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5040
  call void @llvm.dbg.value(metadata i8* %192, metadata !4847, metadata !DIExpression()), !dbg !4920
  %193 = icmp sgt i32 %76, -1, !dbg !5041
  br i1 %193, label %194, label %196, !dbg !5043

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %195, metadata !4862, metadata !DIExpression()), !dbg !5046
  br label %241, !dbg !5047

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5048
  call void @llvm.dbg.value(metadata i32 %197, metadata !4862, metadata !DIExpression()), !dbg !5046
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4847, metadata !DIExpression()), !dbg !4920
  %199 = load i64, i64* %20, align 8, !dbg !5050
  %200 = trunc i64 %199 to i8, !dbg !5051
  store i8 %200, i8* %10, align 1, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %23, metadata !4848, metadata !DIExpression()), !dbg !4920
  br label %245, !dbg !5053

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5054
  %203 = icmp eq i24 %202, 0, !dbg !5054
  %204 = trunc i24 %75 to i8, !dbg !5056
  %205 = shl i8 %204, 1, !dbg !5056
  %206 = and i8 %205, 32, !dbg !5056
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5056
  call void @llvm.dbg.value(metadata i8 %207, metadata !4849, metadata !DIExpression()), !dbg !4920
  %208 = load i64, i64* %20, align 8, !dbg !5057
  call void @llvm.dbg.value(metadata i64 %208, metadata !4785, metadata !DIExpression()), !dbg !4906
  %209 = icmp slt i64 %208, 0, !dbg !5058
  br i1 %209, label %210, label %212, !dbg !5060

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4849, metadata !DIExpression()), !dbg !4920
  %211 = sub nsw i64 0, %208, !dbg !5061
  store i64 %211, i64* %20, align 8, !dbg !5063
  br label %212, !dbg !5064

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4920
  call void @llvm.dbg.value(metadata i8 %213, metadata !4849, metadata !DIExpression()), !dbg !4920
  %214 = load i64, i64* %20, align 8, !dbg !5065
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %215, metadata !4847, metadata !DIExpression()), !dbg !4920
  br label %216, !dbg !5067

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5068
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5069
  call void @llvm.dbg.value(metadata i8* %218, metadata !4847, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8 %217, metadata !4849, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.label(metadata !4905), !dbg !5070
  %219 = icmp sgt i32 %76, -1, !dbg !5071
  br i1 %219, label %222, label %220, !dbg !5072

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5073
  br label %245, !dbg !5072

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5075
  %224 = sub i32 %22, %223, !dbg !5075
  call void @llvm.dbg.value(metadata i32 %224, metadata !4864, metadata !DIExpression()), !dbg !5076
  %225 = load i24, i24* %15, align 8, !dbg !5077
  %226 = and i24 %225, -65, !dbg !5077
  store i24 %226, i24* %15, align 8, !dbg !5077
  %227 = icmp ugt i32 %76, %224, !dbg !5078
  br i1 %227, label %228, label %245, !dbg !5080

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5081
  store i32 %229, i32* %16, align 4, !dbg !5083
  br label %245, !dbg !5084

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5085
  %232 = icmp eq i8* %231, null, !dbg !5087
  br i1 %232, label %245, label %233, !dbg !5088

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5089
  %235 = zext i32 %234 to i64, !dbg !5089
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5091
  call void @llvm.dbg.value(metadata i8* %236, metadata !4847, metadata !DIExpression()), !dbg !4920
  %237 = load i24, i24* %15, align 8, !dbg !5092
  %238 = or i24 %237, 1048576, !dbg !5092
  store i24 %238, i24* %15, align 8, !dbg !5092
  store i8 120, i8* %21, align 1, !dbg !5093
  br label %216, !dbg !5094

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5095
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5098
  br label %363, !dbg !5099

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5100
  call void @llvm.dbg.value(metadata i32 %242, metadata !4862, metadata !DIExpression()), !dbg !5046
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5101
  call void @llvm.dbg.value(metadata i32 -1, metadata !4846, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 %29, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %192, metadata !4847, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8* %243, metadata !4848, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8 0, metadata !4849, metadata !DIExpression()), !dbg !4920
  %244 = icmp eq i8* %192, null, !dbg !5102
  br i1 %244, label %363, label %245, !dbg !5104, !llvm.loop !4916

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5073
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata i32 0, metadata !4868, metadata !DIExpression()), !dbg !4920
  %250 = zext i8 %249 to i32, !dbg !5105
  %251 = icmp eq i8 %249, 0, !dbg !5107
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata i32 undef, metadata !4867, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata i32 undef, metadata !4867, metadata !DIExpression()), !dbg !4920
  %252 = icmp sgt i32 %58, 0, !dbg !5108
  br i1 %252, label %253, label %302, !dbg !5109

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5073
  %255 = icmp eq i24 %254, 0, !dbg !5073
  %256 = ptrtoint i8* %248 to i32, !dbg !5110
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  %257 = ptrtoint i8* %247 to i32, !dbg !5110
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  %258 = xor i1 %251, true, !dbg !5111
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  %259 = sext i1 %258 to i32, !dbg !5111
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  %260 = lshr i24 %246, 19, !dbg !5112
  %261 = and i24 %260, 1, !dbg !5112
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5112
  %263 = zext i24 %262 to i32, !dbg !5112
  %264 = add i32 %257, %259, !dbg !5112
  %265 = add i32 %256, %263, !dbg !5112
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  %266 = and i24 %246, 4194304, !dbg !5113
  %267 = icmp eq i24 %266, 0, !dbg !5113
  %268 = load i32, i32* %16, align 4, !dbg !5115
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4920
  call void @llvm.dbg.value(metadata i32 undef, metadata !4867, metadata !DIExpression()), !dbg !4920
  %269 = load i32, i32* %17, align 8, !dbg !5116
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5116
  call void @llvm.dbg.value(metadata i32 undef, metadata !4867, metadata !DIExpression()), !dbg !4920
  %271 = add i32 %264, %58, !dbg !5116
  %272 = add i32 %265, %268, !dbg !5116
  %273 = add i32 %272, %270, !dbg !5117
  %274 = sub i32 %271, %273, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %274, metadata !4845, metadata !DIExpression()), !dbg !4920
  %275 = and i24 %246, 4, !dbg !5118
  %276 = icmp eq i24 %275, 0, !dbg !5118
  br i1 %276, label %277, label %302, !dbg !5119

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4869, metadata !DIExpression()), !dbg !5120
  %278 = and i24 %246, 64, !dbg !5121
  %279 = icmp eq i24 %278, 0, !dbg !5121
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5122
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5122
  %282 = select i1 %279, i32 32, i32 48, !dbg !5122
  br i1 %280, label %287, label %283, !dbg !5122

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %284, metadata !4874, metadata !DIExpression()), !dbg !5124
  %285 = icmp slt i32 %284, 0, !dbg !5125
  %286 = add i32 %29, 1, !dbg !5123
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4920
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %290, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8 undef, metadata !4869, metadata !DIExpression()), !dbg !5120
  call void @llvm.dbg.value(metadata i8 %288, metadata !4849, metadata !DIExpression()), !dbg !4920
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5127
  %292 = add i32 %291, -1, !dbg !5127
  br label %293, !dbg !5127

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5128
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %295, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %294, metadata !4845, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i32 %294, metadata !4845, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4920
  %296 = icmp sgt i32 %294, 0, !dbg !5129
  br i1 %296, label %297, label %302, !dbg !5127

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %298, metadata !4845, metadata !DIExpression()), !dbg !4920
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %299, metadata !4880, metadata !DIExpression()), !dbg !5132
  %300 = icmp slt i32 %299, 0, !dbg !5133
  %301 = add i32 %295, 1, !dbg !5131
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %300, label %361, label %293, !llvm.loop !5135

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4920
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4920
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %305, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %304, metadata !4845, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.value(metadata i8 %303, metadata !4849, metadata !DIExpression()), !dbg !4920
  %306 = icmp eq i8 %303, 0, !dbg !5137
  br i1 %306, label %312, label %307, !dbg !5138

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5139
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5140
  call void @llvm.dbg.value(metadata i32 %309, metadata !4883, metadata !DIExpression()), !dbg !5141
  %310 = icmp slt i32 %309, 0, !dbg !5142
  %311 = add i32 %305, 1, !dbg !5140
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %313, metadata !4784, metadata !DIExpression()), !dbg !4906
  %314 = lshr i24 %246, 20, !dbg !5144
  %315 = lshr i24 %246, 19, !dbg !5145
  %316 = or i24 %314, %315, !dbg !5146
  %317 = and i24 %316, 1, !dbg !5146
  %318 = icmp eq i24 %317, 0, !dbg !5146
  br i1 %318, label %323, label %319, !dbg !5147

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5148
  call void @llvm.dbg.value(metadata i32 %320, metadata !4887, metadata !DIExpression()), !dbg !5149
  %321 = icmp slt i32 %320, 0, !dbg !5150
  %322 = add i32 %313, 1, !dbg !5148
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %324, metadata !4784, metadata !DIExpression()), !dbg !4906
  %325 = and i24 %246, 1048576, !dbg !5152
  %326 = icmp eq i24 %325, 0, !dbg !5152
  br i1 %326, label %333, label %327, !dbg !5153

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5154
  %329 = zext i8 %328 to i32, !dbg !5154
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5154
  call void @llvm.dbg.value(metadata i32 %330, metadata !4893, metadata !DIExpression()), !dbg !5155
  %331 = icmp slt i32 %330, 0, !dbg !5156
  %332 = add i32 %324, 1, !dbg !5154
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %334, metadata !4784, metadata !DIExpression()), !dbg !4906
  %335 = load i32, i32* %16, align 4, !dbg !5158
  call void @llvm.dbg.value(metadata i32 %335, metadata !4868, metadata !DIExpression()), !dbg !4920
  br label %336, !dbg !5159

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5160
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %338, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %337, metadata !4868, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4920
  %339 = icmp sgt i32 %337, 0, !dbg !5161
  br i1 %339, label %340, label %345, !dbg !5159

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %341, metadata !4868, metadata !DIExpression()), !dbg !4920
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %342, metadata !4897, metadata !DIExpression()), !dbg !5164
  %343 = icmp slt i32 %342, 0, !dbg !5165
  %344 = add i32 %338, 1, !dbg !5163
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %343, label %361, label %336, !llvm.loop !5167

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %346, metadata !4900, metadata !DIExpression()), !dbg !5170
  %347 = icmp slt i32 %346, 0, !dbg !5171
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5169
  call void @llvm.dbg.value(metadata i32 %349, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %304, metadata !4845, metadata !DIExpression()), !dbg !4920
  %350 = icmp sgt i32 %304, 0, !dbg !5173
  br i1 %350, label %351, label %363, !dbg !5174

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5174
  %353 = add i32 %352, %338, !dbg !5174
  br label %354, !dbg !5174

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %355, metadata !4845, metadata !DIExpression()), !dbg !4920
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5175
  call void @llvm.dbg.value(metadata i32 %356, metadata !4902, metadata !DIExpression()), !dbg !5176
  %357 = icmp slt i32 %356, 0, !dbg !5177
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5179
  call void @llvm.dbg.value(metadata i32 undef, metadata !4784, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %359, metadata !4845, metadata !DIExpression()), !dbg !4920
  %360 = icmp sgt i32 %355, 1, !dbg !5173
  br i1 %360, label %354, label %363, !dbg !5174, !llvm.loop !5180

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4917
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4910
  call void @llvm.dbg.value(metadata i32 %364, metadata !4784, metadata !DIExpression()), !dbg !4906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4917
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4906
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5182
  ret i32 %366, !dbg !5182
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5183 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5187, metadata !DIExpression()), !dbg !5189
  call void @llvm.dbg.value(metadata i8* %1, metadata !5188, metadata !DIExpression()), !dbg !5189
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5190
  store i24 0, i24* %3, align 4, !dbg !5190
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5190
  store i8 0, i8* %4, align 1, !dbg !5190
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5190
  store i32 0, i32* %5, align 4, !dbg !5190
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5190
  store i32 0, i32* %6, align 4, !dbg !5190
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %7, metadata !5188, metadata !DIExpression()), !dbg !5189
  %8 = load i8, i8* %7, align 1, !dbg !5192
  %9 = icmp eq i8 %8, 37, !dbg !5194
  br i1 %9, label %10, label %12, !dbg !5195

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %11, metadata !5188, metadata !DIExpression()), !dbg !5189
  store i8 37, i8* %4, align 1, !dbg !5198
  br label %18, !dbg !5199

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5200
  call void @llvm.dbg.value(metadata i8* %13, metadata !5188, metadata !DIExpression()), !dbg !5189
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %14, metadata !5188, metadata !DIExpression()), !dbg !5189
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5202
  call void @llvm.dbg.value(metadata i8* %15, metadata !5188, metadata !DIExpression()), !dbg !5189
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %16, metadata !5188, metadata !DIExpression()), !dbg !5189
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5204
  call void @llvm.dbg.value(metadata i8* %17, metadata !5188, metadata !DIExpression()), !dbg !5189
  br label %18, !dbg !5205

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5189
  ret i8* %19, !dbg !5206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5207 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5211, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %1, metadata !5212, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %2, metadata !5213, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %3, metadata !5214, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i32 0, metadata !5215, metadata !DIExpression()), !dbg !5218
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5219

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5220
  call void @llvm.dbg.value(metadata i32 %9, metadata !5215, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i8* %8, metadata !5213, metadata !DIExpression()), !dbg !5218
  %10 = icmp ult i8* %8, %3, !dbg !5221
  br i1 %10, label %11, label %13, !dbg !5222

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5223
  br label %17, !dbg !5222

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5224

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5225
  %16 = icmp eq i8 %15, 0, !dbg !5224
  br i1 %16, label %24, label %17, !dbg !5219

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5223
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5226
  call void @llvm.dbg.value(metadata i8* %19, metadata !5213, metadata !DIExpression()), !dbg !5218
  %20 = zext i8 %18 to i32, !dbg !5227
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %21, metadata !5216, metadata !DIExpression()), !dbg !5229
  %22 = icmp slt i32 %21, 0, !dbg !5230
  %23 = add i32 %9, 1, !dbg !5232
  call void @llvm.dbg.value(metadata i32 undef, metadata !5215, metadata !DIExpression()), !dbg !5218
  br i1 %22, label %24, label %7, !llvm.loop !5233

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5218
  ret i32 %25, !dbg !5235
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5236 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5240, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5241, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %2, metadata !5242, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %3, metadata !5243, metadata !DIExpression()), !dbg !5250
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5251
  %6 = load i8, i8* %5, align 1, !dbg !5251
  %7 = zext i8 %6 to i32, !dbg !5252
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5253
  %9 = icmp eq i32 %8, 0, !dbg !5253
  call void @llvm.dbg.value(metadata i1 %9, metadata !5244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5250
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %10, metadata !5245, metadata !DIExpression()), !dbg !5250
  %11 = ptrtoint i8* %3 to i32, !dbg !5255
  %12 = ptrtoint i8* %2 to i32, !dbg !5255
  %13 = sub i32 %11, %12, !dbg !5255
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %14, metadata !5247, metadata !DIExpression()), !dbg !5250
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5257

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5250
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5240, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %18, metadata !5247, metadata !DIExpression()), !dbg !5250
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5258
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %25, metadata !5248, metadata !DIExpression()), !dbg !5260
  %26 = icmp ult i32 %25, 10, !dbg !5261
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5262
  %28 = add i32 %27, %25, !dbg !5260
  %29 = trunc i32 %28 to i8, !dbg !5262
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %30, metadata !5247, metadata !DIExpression()), !dbg !5250
  store i8 %29, i8* %30, align 1, !dbg !5264
  call void @llvm.dbg.value(metadata i64 %22, metadata !5240, metadata !DIExpression()), !dbg !5250
  %31 = icmp uge i64 %19, %15, !dbg !5265
  %32 = icmp ugt i8* %30, %2, !dbg !5266
  %33 = and i1 %31, %32, !dbg !5266
  br i1 %33, label %17, label %34, !dbg !5267, !llvm.loop !5268

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5270
  %36 = load i24, i24* %35, align 4, !dbg !5270
  %37 = and i24 %36, 32, !dbg !5270
  %38 = icmp eq i24 %37, 0, !dbg !5270
  br i1 %38, label %44, label %39, !dbg !5272

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5273

40:                                               ; preds = %39
  br label %41, !dbg !5275

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5279
  store i24 %43, i24* %35, align 4, !dbg !5279
  br label %44, !dbg !5280

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5280
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5287, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i32 %2, metadata !5289, metadata !DIExpression()), !dbg !5290
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5291
  %5 = load i24, i24* %4, align 4, !dbg !5291
  %6 = lshr i24 %5, 11, !dbg !5291
  %7 = and i24 %6, 15, !dbg !5291
  %8 = zext i24 %7 to i32, !dbg !5291
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5292

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5293
  store i32 %2, i32* %10, align 4, !dbg !5295
  br label %28, !dbg !5296

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5297
  store i8 %12, i8* %1, align 1, !dbg !5298
  br label %28, !dbg !5299

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5300
  %15 = bitcast i8* %1 to i16*, !dbg !5301
  store i16 %14, i16* %15, align 2, !dbg !5302
  br label %28, !dbg !5303

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5304
  store i32 %2, i32* %17, align 4, !dbg !5305
  br label %28, !dbg !5306

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5307
  %20 = bitcast i8* %1 to i64*, !dbg !5308
  store i64 %19, i64* %20, align 8, !dbg !5309
  br label %28, !dbg !5310

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5311
  %23 = bitcast i8* %1 to i64*, !dbg !5312
  store i64 %22, i64* %23, align 8, !dbg !5313
  br label %28, !dbg !5314

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5315
  store i32 %2, i32* %25, align 4, !dbg !5316
  br label %28, !dbg !5317

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5318
  store i32 %2, i32* %27, align 4, !dbg !5319
  br label %28, !dbg !5320

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5321
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5325, metadata !DIExpression()), !dbg !5326
  %2 = add i32 %0, -65, !dbg !5327
  %3 = icmp ult i32 %2, 26, !dbg !5328
  %4 = zext i1 %3 to i32, !dbg !5328
  ret i32 %4, !dbg !5329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5330 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5334, metadata !DIExpression()), !dbg !5335
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5336

2:                                                ; preds = %1
  br label %4, !dbg !5337

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5339

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5340
  ret i32 %5, !dbg !5341
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5342 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5344, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %1, metadata !5345, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8 1, metadata !5346, metadata !DIExpression()), !dbg !5347
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5348

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5346, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %5, metadata !5345, metadata !DIExpression()), !dbg !5347
  %6 = load i8, i8* %5, align 1, !dbg !5349
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5351

7:                                                ; preds = %4
  br label %11, !dbg !5352

8:                                                ; preds = %4
  br label %11, !dbg !5354

9:                                                ; preds = %4
  br label %11, !dbg !5355

10:                                               ; preds = %4
  br label %11, !dbg !5356

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5357
  %14 = or i24 %13, %12, !dbg !5357
  store i24 %14, i24* %3, align 4, !dbg !5357
  call void @llvm.dbg.value(metadata i8 poison, metadata !5346, metadata !DIExpression()), !dbg !5347
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5345, metadata !DIExpression()), !dbg !5347
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5346, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.value(metadata i8* %15, metadata !5345, metadata !DIExpression()), !dbg !5347
  %17 = load i24, i24* %3, align 4, !dbg !5358
  %18 = and i24 %17, 68, !dbg !5360
  %19 = icmp eq i24 %18, 68, !dbg !5360
  br i1 %19, label %20, label %22, !dbg !5360

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5361
  store i24 %21, i24* %3, align 4, !dbg !5361
  br label %22, !dbg !5363

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5364
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5365 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5367, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i8* %1, metadata !5368, metadata !DIExpression()), !dbg !5371
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5372
  %5 = load i24, i24* %4, align 4, !dbg !5373
  %6 = or i24 %5, 128, !dbg !5373
  store i24 %6, i24* %4, align 4, !dbg !5373
  call void @llvm.dbg.value(metadata i8* %1, metadata !5368, metadata !DIExpression()), !dbg !5371
  %7 = load i8, i8* %1, align 1, !dbg !5374
  %8 = icmp eq i8 %7, 42, !dbg !5376
  br i1 %8, label %9, label %12, !dbg !5377

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5378
  store i24 %10, i24* %4, align 4, !dbg !5378
  call void @llvm.dbg.value(metadata i8* %1, metadata !5368, metadata !DIExpression()), !dbg !5371
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5380
  call void @llvm.dbg.value(metadata i8* %11, metadata !5368, metadata !DIExpression()), !dbg !5371
  store i8* %11, i8** %3, align 4, !dbg !5380
  br label %29, !dbg !5381

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5369, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.value(metadata i8** %3, metadata !5368, metadata !DIExpression(DW_OP_deref)), !dbg !5371
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5382
  call void @llvm.dbg.value(metadata i32 %13, metadata !5370, metadata !DIExpression()), !dbg !5371
  %14 = load i8*, i8** %3, align 4, !dbg !5383
  call void @llvm.dbg.value(metadata i8* %14, metadata !5368, metadata !DIExpression()), !dbg !5371
  %15 = icmp eq i8* %14, %1, !dbg !5385
  br i1 %15, label %29, label %16, !dbg !5386

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5387
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5389
  store i32 %13, i32* %18, align 4, !dbg !5390
  %19 = lshr i32 %13, 31, !dbg !5391
  %20 = lshr i24 %17, 1, !dbg !5392
  %21 = and i24 %20, 1, !dbg !5392
  %22 = zext i24 %21 to i32, !dbg !5392
  %23 = or i32 %19, %22, !dbg !5392
  %24 = trunc i32 %23 to i24, !dbg !5392
  %25 = shl nuw nsw i24 %24, 1, !dbg !5392
  %26 = and i24 %17, -131, !dbg !5392
  %27 = or i24 %26, 128, !dbg !5392
  %28 = or i24 %25, %27, !dbg !5392
  store i24 %28, i24* %4, align 4, !dbg !5392
  br label %29, !dbg !5393

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5371
  ret i8* %30, !dbg !5394
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5395 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %1, metadata !5398, metadata !DIExpression()), !dbg !5400
  %4 = load i8, i8* %1, align 1, !dbg !5401
  %5 = icmp eq i8 %4, 46, !dbg !5402
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5403
  %7 = load i24, i24* %6, align 4, !dbg !5404
  %8 = select i1 %5, i24 512, i24 0, !dbg !5404
  %9 = and i24 %7, -513, !dbg !5404
  %10 = or i24 %9, %8, !dbg !5404
  store i24 %10, i24* %6, align 4, !dbg !5404
  br i1 %5, label %11, label %32, !dbg !5405

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5398, metadata !DIExpression()), !dbg !5400
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5406
  call void @llvm.dbg.value(metadata i8* %12, metadata !5398, metadata !DIExpression()), !dbg !5400
  store i8* %12, i8** %3, align 4, !dbg !5406
  %13 = load i8, i8* %12, align 1, !dbg !5407
  %14 = icmp eq i8 %13, 42, !dbg !5409
  br i1 %14, label %15, label %18, !dbg !5410

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5411
  store i24 %16, i24* %6, align 4, !dbg !5411
  call void @llvm.dbg.value(metadata i8* %12, metadata !5398, metadata !DIExpression()), !dbg !5400
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5413
  call void @llvm.dbg.value(metadata i8* %17, metadata !5398, metadata !DIExpression()), !dbg !5400
  store i8* %17, i8** %3, align 4, !dbg !5413
  br label %32, !dbg !5414

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5398, metadata !DIExpression(DW_OP_deref)), !dbg !5400
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %19, metadata !5399, metadata !DIExpression()), !dbg !5400
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5416
  store i32 %19, i32* %20, align 4, !dbg !5417
  %21 = lshr i32 %19, 31, !dbg !5418
  %22 = load i24, i24* %6, align 4, !dbg !5419
  %23 = lshr i24 %22, 1, !dbg !5419
  %24 = and i24 %23, 1, !dbg !5419
  %25 = zext i24 %24 to i32, !dbg !5419
  %26 = or i32 %21, %25, !dbg !5419
  %27 = trunc i32 %26 to i24, !dbg !5419
  %28 = shl nuw nsw i24 %27, 1, !dbg !5419
  %29 = and i24 %22, -3, !dbg !5419
  %30 = or i24 %28, %29, !dbg !5419
  store i24 %30, i24* %6, align 4, !dbg !5419
  %31 = load i8*, i8** %3, align 4, !dbg !5420
  call void @llvm.dbg.value(metadata i8* %31, metadata !5398, metadata !DIExpression()), !dbg !5400
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5400
  ret i8* %33, !dbg !5421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5422 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5424, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i8* %1, metadata !5425, metadata !DIExpression()), !dbg !5426
  %3 = load i8, i8* %1, align 1, !dbg !5427
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5428

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5429
  call void @llvm.dbg.value(metadata i8* %5, metadata !5425, metadata !DIExpression()), !dbg !5426
  %6 = load i8, i8* %5, align 1, !dbg !5432
  %7 = icmp eq i8 %6, 104, !dbg !5433
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5434
  %9 = load i24, i24* %8, align 4, !dbg !5434
  %10 = and i24 %9, -30721, !dbg !5434
  br i1 %7, label %11, label %14, !dbg !5435

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5436
  store i24 %12, i24* %8, align 4, !dbg !5436
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5438
  call void @llvm.dbg.value(metadata i8* %13, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %56, !dbg !5439

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5440
  store i24 %15, i24* %8, align 4, !dbg !5440
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5442
  call void @llvm.dbg.value(metadata i8* %17, metadata !5425, metadata !DIExpression()), !dbg !5426
  %18 = load i8, i8* %17, align 1, !dbg !5444
  %19 = icmp eq i8 %18, 108, !dbg !5445
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5446
  %21 = load i24, i24* %20, align 4, !dbg !5446
  %22 = and i24 %21, -30721, !dbg !5446
  br i1 %19, label %23, label %26, !dbg !5447

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5448
  store i24 %24, i24* %20, align 4, !dbg !5448
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5450
  call void @llvm.dbg.value(metadata i8* %25, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %56, !dbg !5451

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5452
  store i24 %27, i24* %20, align 4, !dbg !5452
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5454
  %30 = load i24, i24* %29, align 4, !dbg !5455
  %31 = and i24 %30, -30721, !dbg !5455
  %32 = or i24 %31, 10240, !dbg !5455
  store i24 %32, i24* %29, align 4, !dbg !5455
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5456
  call void @llvm.dbg.value(metadata i8* %33, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %56, !dbg !5457

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5458
  %36 = load i24, i24* %35, align 4, !dbg !5459
  %37 = and i24 %36, -30721, !dbg !5459
  %38 = or i24 %37, 12288, !dbg !5459
  store i24 %38, i24* %35, align 4, !dbg !5459
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5460
  call void @llvm.dbg.value(metadata i8* %39, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %56, !dbg !5461

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5462
  %42 = load i24, i24* %41, align 4, !dbg !5463
  %43 = and i24 %42, -30721, !dbg !5463
  %44 = or i24 %43, 14336, !dbg !5463
  store i24 %44, i24* %41, align 4, !dbg !5463
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5464
  call void @llvm.dbg.value(metadata i8* %45, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %56, !dbg !5465

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5466
  %48 = load i24, i24* %47, align 4, !dbg !5467
  %49 = and i24 %48, -30723, !dbg !5467
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5468
  call void @llvm.dbg.value(metadata i8* %50, metadata !5425, metadata !DIExpression()), !dbg !5426
  %51 = or i24 %49, 16386, !dbg !5469
  store i24 %51, i24* %47, align 4, !dbg !5469
  br label %56, !dbg !5470

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5471
  %54 = load i24, i24* %53, align 4, !dbg !5472
  %55 = and i24 %54, -30721, !dbg !5472
  store i24 %55, i24* %53, align 4, !dbg !5472
  br label %56, !dbg !5473

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5425, metadata !DIExpression()), !dbg !5426
  ret i8* %57, !dbg !5474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5475 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5477, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i8* %1, metadata !5478, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i8 0, metadata !5479, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i8* %1, metadata !5478, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5482
  %3 = load i8, i8* %1, align 1, !dbg !5483
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5484
  store i8 %3, i8* %4, align 1, !dbg !5485
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5486

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5487

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5488
  %9 = load i24, i24* %8, align 4, !dbg !5488
  %10 = and i24 %9, -458753, !dbg !5488
  %11 = or i24 %10, %7, !dbg !5488
  call void @llvm.dbg.label(metadata !5480), !dbg !5489
  %12 = and i24 %9, 30720, !dbg !5490
  %13 = icmp eq i24 %12, 16384, !dbg !5490
  %14 = zext i1 %13 to i24, !dbg !5492
  %15 = or i24 %11, %14, !dbg !5492
  %16 = icmp eq i8 %3, 99, !dbg !5493
  br i1 %16, label %17, label %43, !dbg !5495

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5496
  %19 = icmp ne i24 %18, 0, !dbg !5496
  call void @llvm.dbg.value(metadata i1 %19, metadata !5479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5482
  br label %43, !dbg !5498

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5499
  %22 = load i24, i24* %21, align 4, !dbg !5500
  %23 = and i24 %22, -458753, !dbg !5500
  %24 = or i24 %23, 262144, !dbg !5500
  call void @llvm.dbg.value(metadata i8 1, metadata !5479, metadata !DIExpression()), !dbg !5482
  br label %43, !dbg !5501

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5504
  %27 = load i24, i24* %26, align 4, !dbg !5505
  %28 = and i24 %27, -458753, !dbg !5505
  %29 = or i24 %28, 196608, !dbg !5505
  %30 = and i24 %27, 30720, !dbg !5506
  %31 = icmp eq i24 %30, 16384, !dbg !5506
  br label %43, !dbg !5508

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5509
  %34 = load i24, i24* %33, align 4, !dbg !5510
  %35 = and i24 %34, -458753, !dbg !5510
  %36 = or i24 %35, 196608, !dbg !5510
  %37 = and i24 %34, 30720, !dbg !5511
  %38 = icmp ne i24 %37, 0, !dbg !5511
  br label %43, !dbg !5513

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5514
  %41 = load i24, i24* %40, align 4, !dbg !5515
  %42 = or i24 %41, 1, !dbg !5515
  br label %43, !dbg !5516

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5517
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5518
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5519
  call void @llvm.dbg.value(metadata i8* %48, metadata !5478, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i8 poison, metadata !5479, metadata !DIExpression()), !dbg !5482
  %49 = lshr i24 %44, 1, !dbg !5517
  %50 = and i24 %49, 1, !dbg !5517
  %51 = zext i24 %50 to i32, !dbg !5517
  %52 = or i32 %51, %47, !dbg !5517
  %53 = trunc i32 %52 to i24, !dbg !5517
  %54 = shl nuw nsw i24 %53, 1, !dbg !5517
  %55 = and i24 %44, -3, !dbg !5517
  %56 = or i24 %54, %55, !dbg !5517
  store i24 %56, i24* %46, align 4, !dbg !5517
  ret i8* %48, !dbg !5520
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5521 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5526, metadata !DIExpression()), !dbg !5529
  %2 = load i8*, i8** %0, align 4, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %2, metadata !5527, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 0, metadata !5528, metadata !DIExpression()), !dbg !5529
  %3 = load i8, i8* %2, align 1, !dbg !5531
  %4 = zext i8 %3 to i32, !dbg !5532
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5533
  %6 = icmp eq i32 %5, 0, !dbg !5534
  br i1 %6, label %19, label %7, !dbg !5534

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5528, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i8* %10, metadata !5527, metadata !DIExpression()), !dbg !5529
  %11 = mul i32 %9, 10, !dbg !5535
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5537
  call void @llvm.dbg.value(metadata i8* %12, metadata !5527, metadata !DIExpression()), !dbg !5529
  %13 = add i32 %11, -48, !dbg !5538
  %14 = add i32 %13, %8, !dbg !5539
  call void @llvm.dbg.value(metadata i32 %14, metadata !5528, metadata !DIExpression()), !dbg !5529
  %15 = load i8, i8* %12, align 1, !dbg !5531
  %16 = zext i8 %15 to i32, !dbg !5532
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5533
  %18 = icmp eq i32 %17, 0, !dbg !5534
  br i1 %18, label %19, label %7, !dbg !5534, !llvm.loop !5540

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5529
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5529
  store i8* %20, i8** %0, align 4, !dbg !5542
  ret i32 %21, !dbg !5543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5546, metadata !DIExpression()), !dbg !5547
  %2 = add i32 %0, -48, !dbg !5548
  %3 = icmp ult i32 %2, 10, !dbg !5549
  %4 = zext i1 %3 to i32, !dbg !5549
  ret i32 %4, !dbg !5550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5551 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #24, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #24, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #24, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #24, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #24, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6117, !srcloc !6118
  ret void, !dbg !6119
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6122, metadata !DIExpression()), !dbg !6124
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6125
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6126
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6127, !srcloc !6136
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6127
  call void @llvm.dbg.value(metadata i32 %3, metadata !6133, metadata !DIExpression()) #24, !dbg !6137
  call void @llvm.dbg.value(metadata i32 undef, metadata !6134, metadata !DIExpression()) #24, !dbg !6137
  call void @llvm.dbg.value(metadata i32 %3, metadata !6123, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i32 %3, metadata !6138, metadata !DIExpression()) #24, !dbg !6143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !6145, !srcloc !6146
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6147
  ret i32 0, !dbg !6148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6149 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6151
  %2 = or i32 %1, 512, !dbg !6151
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6151
  ret void, !dbg !6152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6153 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6154
  %2 = or i32 %1, 1024, !dbg !6154
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6154
  ret void, !dbg !6155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6158, metadata !DIExpression()), !dbg !6159
  ret i32 0, !dbg !6160
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6210, metadata !DIExpression()), !dbg !6212
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6211, metadata !DIExpression()), !dbg !6212
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6213
  ret void, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6215 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6232, metadata !DIExpression()), !dbg !6235
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6233, metadata !DIExpression()), !dbg !6235
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6236
  %4 = load i32, i32* %3, align 4, !dbg !6236
  call void @llvm.dbg.value(metadata i32 %4, metadata !6234, metadata !DIExpression()), !dbg !6235
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6237
  ret void, !dbg !6238
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6239 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6243, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i8* %0, metadata !6244, metadata !DIExpression()), !dbg !6246
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6247
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6245, metadata !DIExpression()), !dbg !6248
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6248
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6249
  %5 = bitcast i8* %4 to i32*, !dbg !6249
  %6 = load i32, i32* %5, align 4, !dbg !6249
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6250
  store i32 %6, i32* %7, align 4, !dbg !6251
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6252
  unreachable, !dbg !6253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6257, metadata !DIExpression()), !dbg !6258
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6259
  ret void, !dbg !6260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6265, metadata !DIExpression()), !dbg !6266
  %2 = icmp sgt i32 %0, -1, !dbg !6267
  br i1 %2, label %3, label %8, !dbg !6269

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6270, !srcloc !6272
  %4 = and i32 %0, 31, !dbg !6273
  %5 = shl nuw i32 1, %4, !dbg !6274
  %6 = lshr i32 %0, 5, !dbg !6275
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6276
  store volatile i32 %5, i32* %7, align 4, !dbg !6277
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6278, !srcloc !6279
  br label %8, !dbg !6280

8:                                                ; preds = %3, %1
  ret void, !dbg !6281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6284, metadata !DIExpression()), !dbg !6285
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6286
  ret void, !dbg !6287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6290, metadata !DIExpression()), !dbg !6291
  %2 = icmp sgt i32 %0, -1, !dbg !6292
  br i1 %2, label %3, label %8, !dbg !6294

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6295
  %5 = shl nuw i32 1, %4, !dbg !6297
  %6 = lshr i32 %0, 5, !dbg !6298
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6299
  store volatile i32 %5, i32* %7, align 4, !dbg !6300
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6301, !srcloc !6305
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6306, !srcloc !6309
  br label %8, !dbg !6310

8:                                                ; preds = %3, %1
  ret void, !dbg !6311
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6316, metadata !DIExpression()), !dbg !6317
  %2 = lshr i32 %0, 5, !dbg !6318
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6319
  %4 = load volatile i32, i32* %3, align 4, !dbg !6319
  %5 = and i32 %0, 31, !dbg !6320
  %6 = shl nuw i32 1, %5, !dbg !6320
  %7 = and i32 %4, %6, !dbg !6321
  ret i32 %7, !dbg !6322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6323 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6327, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %1, metadata !6328, metadata !DIExpression()), !dbg !6330
  call void @llvm.dbg.value(metadata i32 %2, metadata !6329, metadata !DIExpression()), !dbg !6330
  %4 = add i32 %1, 1, !dbg !6331
  call void @llvm.dbg.value(metadata i32 %4, metadata !6328, metadata !DIExpression()), !dbg !6330
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6334
  ret void, !dbg !6335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6340, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.value(metadata i32 %1, metadata !6341, metadata !DIExpression()), !dbg !6342
  %3 = trunc i32 %1 to i8, !dbg !6343
  %4 = shl i8 %3, 4, !dbg !6343
  %5 = and i32 %0, 15, !dbg !6345
  %6 = add nsw i32 %5, -4, !dbg !6345
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6345
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6345
  %9 = icmp slt i32 %0, 0, !dbg !6345
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6345
  store volatile i8 %4, i8* %10, align 1, !dbg !6343
  ret void, !dbg !6346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6349, metadata !DIExpression()), !dbg !6350
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6353 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6355
  tail call void @z_arm_int_exit() #25, !dbg !6356
  ret void, !dbg !6357
}

; Function Attrs: optsize
declare !dbg !6358 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6359 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6361 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6363
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6364
  tail call void @z_bss_zero() #25, !dbg !6365
  tail call void @z_data_copy() #25, !dbg !6366
  tail call void @z_arm_interrupt_init() #25, !dbg !6367
  tail call void @z_cstart() #28, !dbg !6368
  unreachable, !dbg !6368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6369 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6370
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6371, !srcloc !6374
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6375, !srcloc !6378
  ret void, !dbg !6379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6380 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6381
  %2 = and i32 %1, -15728641, !dbg !6381
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6381
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !6382, !srcloc !6387
  call void @llvm.dbg.value(metadata i32 %3, metadata !6385, metadata !DIExpression()) #24, !dbg !6388
  %4 = and i32 %3, -5, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %4, metadata !6390, metadata !DIExpression()) #24, !dbg !6395
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6399, !srcloc !6378
  ret void, !dbg !6401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6405, metadata !DIExpression()), !dbg !6406
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6407
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6408
  store i32 %0, i32* %3, align 4, !dbg !6409
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6410
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6411
  store i32 %4, i32* %5, align 4, !dbg !6412
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6413
  %7 = or i32 %6, 268435456, !dbg !6413
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6413
  call void @llvm.dbg.value(metadata i32 0, metadata !6414, metadata !DIExpression()) #24, !dbg !6417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6419, !srcloc !6420
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6421
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6422
  %10 = load i32, i32* %9, align 4, !dbg !6422
  ret i32 %10, !dbg !6423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6534, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6535, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i8* %2, metadata !6536, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6537, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i8* %4, metadata !6538, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i8* %5, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i8* %6, metadata !6540, metadata !DIExpression()), !dbg !6542
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6543
  call void @llvm.dbg.value(metadata i8* %8, metadata !6541, metadata !DIExpression()), !dbg !6542
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6544
  %10 = bitcast i8* %9 to i32*, !dbg !6544
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6545
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6546
  %12 = bitcast i8* %8 to i32*, !dbg !6547
  store i32 %11, i32* %12, align 4, !dbg !6548
  %13 = ptrtoint i8* %4 to i32, !dbg !6549
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6550
  %15 = bitcast i8* %14 to i32*, !dbg !6550
  store i32 %13, i32* %15, align 4, !dbg !6551
  %16 = ptrtoint i8* %5 to i32, !dbg !6552
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6553
  %18 = bitcast i8* %17 to i32*, !dbg !6553
  store i32 %16, i32* %18, align 4, !dbg !6554
  %19 = ptrtoint i8* %6 to i32, !dbg !6555
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6556
  %21 = bitcast i8* %20 to i32*, !dbg !6556
  store i32 %19, i32* %21, align 4, !dbg !6557
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6558
  %23 = bitcast i8* %22 to i32*, !dbg !6558
  store i32 16777216, i32* %23, align 4, !dbg !6559
  %24 = ptrtoint i8* %8 to i32, !dbg !6560
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6561
  store i32 %24, i32* %25, align 8, !dbg !6562
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6563
  store i32 0, i32* %26, align 4, !dbg !6564
  ret void, !dbg !6565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6571, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i32 %1, metadata !6572, metadata !DIExpression()), !dbg !6577
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6578
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6573, metadata !DIExpression()), !dbg !6577
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6579
  br i1 %4, label %19, label %5, !dbg !6581

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6576, metadata !DIExpression()), !dbg !6577
  %6 = icmp eq i32 %0, -22, !dbg !6582
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6582
  %8 = load i32, i32* %7, align 4, !dbg !6582
  br i1 %6, label %16, label %9, !dbg !6584

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6582
  %11 = icmp ule i32 %10, %0, !dbg !6582
  %12 = icmp ugt i32 %8, %0, !dbg !6582
  %13 = and i1 %12, %11, !dbg !6582
  %14 = icmp ugt i32 %8, %1, !dbg !6582
  %15 = and i1 %14, %13, !dbg !6582
  br i1 %15, label %18, label %19, !dbg !6582

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6582
  br i1 %17, label %18, label %19, !dbg !6584

18:                                               ; preds = %9, %16
  br label %19, !dbg !6585

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6577
  ret i32 %20, !dbg !6587
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6592, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i8* %1, metadata !6593, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6594, metadata !DIExpression()), !dbg !6595
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6596
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6597
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !6598, !srcloc !6599
  unreachable, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6601 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6619, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i32 %1, metadata !6620, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i32 %2, metadata !6621, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6622, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i32 0, metadata !6623, metadata !DIExpression()), !dbg !6629
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6630
  %9 = and i32 %8, 511, !dbg !6631
  call void @llvm.dbg.value(metadata i32 %9, metadata !6624, metadata !DIExpression()), !dbg !6629
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6632
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6632
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6633
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6633
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6628, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 0, metadata !6635, metadata !DIExpression()) #24, !dbg !6638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6640, !srcloc !6641
  call void @llvm.dbg.value(metadata i8* %6, metadata !6626, metadata !DIExpression(DW_OP_deref)), !dbg !6629
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6642
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6627, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.value(metadata i8* %5, metadata !6625, metadata !DIExpression(DW_OP_deref)), !dbg !6629
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %12, metadata !6623, metadata !DIExpression()), !dbg !6629
  %13 = load i8, i8* %5, align 1, !dbg !6644, !range !6646
  call void @llvm.dbg.value(metadata i8 %13, metadata !6625, metadata !DIExpression()), !dbg !6629
  %14 = icmp eq i8 %13, 0, !dbg !6644
  br i1 %14, label %15, label %32, !dbg !6647

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6648
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !6649
  %18 = load i8, i8* %6, align 1, !dbg !6650, !range !6646
  call void @llvm.dbg.value(metadata i8 %18, metadata !6626, metadata !DIExpression()), !dbg !6629
  %19 = icmp eq i8 %18, 0, !dbg !6650
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6652
  %21 = load i32, i32* %20, align 4, !dbg !6652
  br i1 %19, label %27, label %22, !dbg !6653

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6654
  %24 = icmp eq i32 %23, 0, !dbg !6657
  br i1 %24, label %25, label %31, !dbg !6658

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6659
  br label %29, !dbg !6661

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6662
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6652
  br label %31, !dbg !6664

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !6664
  br label %32, !dbg !6665

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !6665
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !6665
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !6665
  ret void, !dbg !6665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6671, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i32 %1, metadata !6672, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i32 %2, metadata !6673, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i8* %3, metadata !6674, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata i8 0, metadata !6675, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i8 0, i8* %3, align 1, !dbg !6678
  %5 = icmp ult i32 %2, -16777216, !dbg !6679
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6681
  br i1 %8, label %16, label %9, !dbg !6681

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6682
  %11 = icmp eq i32 %10, 0, !dbg !6682
  br i1 %11, label %12, label %13, !dbg !6684

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i8 1, i8* %3, align 1, !dbg !6687
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6677
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6676, metadata !DIExpression()), !dbg !6677
  br label %16, !dbg !6690

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6677
  ret %struct.__esf* %17, !dbg !6691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6692 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6696, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 %1, metadata !6697, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %2, metadata !6698, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  store i8 0, i8* %2, align 1, !dbg !6701
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6702

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %5, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %11, !dbg !6705

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6706
  call void @llvm.dbg.value(metadata i32 %7, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %11, !dbg !6707

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6708
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %11, !dbg !6709

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6710
  call void @llvm.dbg.value(metadata i32 0, metadata !6699, metadata !DIExpression()), !dbg !6700
  br label %11, !dbg !6711

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6712
  br label %11, !dbg !6713

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6715 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6719, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata i8* %1, metadata !6720, metadata !DIExpression()), !dbg !6722
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  store i8 0, i8* %1, align 1, !dbg !6723
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6724
  %4 = and i32 %3, 2, !dbg !6726
  %5 = icmp eq i32 %4, 0, !dbg !6727
  br i1 %5, label %6, label %33, !dbg !6728

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6729
  %8 = icmp sgt i32 %7, -1, !dbg !6731
  br i1 %8, label %9, label %33, !dbg !6732

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6733
  %11 = and i32 %10, 1073741824, !dbg !6735
  %12 = icmp eq i32 %11, 0, !dbg !6736
  br i1 %12, label %33, label %13, !dbg !6737

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6738
  br i1 %14, label %15, label %18, !dbg !6741

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6742
  %17 = load i32, i32* %16, align 4, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %17, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %33, !dbg !6744

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6745
  %20 = and i32 %19, 255, !dbg !6747
  %21 = icmp eq i32 %20, 0, !dbg !6748
  br i1 %21, label %24, label %22, !dbg !6749

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %23, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %33, !dbg !6752

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6753
  %26 = and i32 %25, 65280, !dbg !6755
  %27 = icmp eq i32 %26, 0, !dbg !6756
  br i1 %27, label %29, label %28, !dbg !6757

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6758
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %33, !dbg !6760

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6761
  %31 = icmp ult i32 %30, 65536, !dbg !6763
  br i1 %31, label %33, label %32, !dbg !6764

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6765
  call void @llvm.dbg.value(metadata i32 0, metadata !6721, metadata !DIExpression()), !dbg !6722
  br label %33, !dbg !6767

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6722
  call void @llvm.dbg.value(metadata i32 %34, metadata !6721, metadata !DIExpression()), !dbg !6722
  ret i32 %34, !dbg !6768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6769 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6771, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i32 %1, metadata !6772, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i8* %2, metadata !6773, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i32 0, metadata !6774, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i32 -22, metadata !6775, metadata !DIExpression()), !dbg !6784
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6785
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6787
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6789
  %7 = and i32 %6, 2, !dbg !6790
  %8 = icmp eq i32 %7, 0, !dbg !6791
  br i1 %8, label %19, label %9, !dbg !6792

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6793
  call void @llvm.dbg.value(metadata i32 %10, metadata !6776, metadata !DIExpression()), !dbg !6794
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6795
  %12 = and i32 %11, 128, !dbg !6797
  %13 = icmp eq i32 %12, 0, !dbg !6798
  br i1 %13, label %19, label %14, !dbg !6799

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6775, metadata !DIExpression()), !dbg !6784
  %15 = icmp eq i32 %1, 0, !dbg !6800
  br i1 %15, label %19, label %16, !dbg !6803

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6804
  %18 = and i32 %17, -129, !dbg !6804
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6804
  br label %19, !dbg !6806

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6784
  call void @llvm.dbg.value(metadata i32 %20, metadata !6775, metadata !DIExpression()), !dbg !6784
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6807
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6809
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6811
  %24 = and i32 %23, 16, !dbg !6812
  %25 = icmp eq i32 %24, 0, !dbg !6812
  br i1 %25, label %26, label %30, !dbg !6813

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %28 = and i32 %27, 2, !dbg !6815
  %29 = icmp eq i32 %28, 0, !dbg !6815
  br i1 %29, label %39, label %30, !dbg !6816

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6817
  %32 = and i32 %31, 2048, !dbg !6818
  %33 = icmp eq i32 %32, 0, !dbg !6818
  br i1 %33, label %39, label %34, !dbg !6819

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6820
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #25, !dbg !6821
  call void @llvm.dbg.value(metadata i32 %36, metadata !6779, metadata !DIExpression()), !dbg !6822
  %37 = icmp eq i32 %36, 0, !dbg !6823
  br i1 %37, label %39, label %38, !dbg !6825

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6826, metadata !DIExpression()) #24, !dbg !6829
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #24, !dbg !6832, !srcloc !6833
  call void @llvm.dbg.value(metadata i32 2, metadata !6774, metadata !DIExpression()), !dbg !6784
  br label %39, !dbg !6834

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6784
  call void @llvm.dbg.value(metadata i32 %40, metadata !6774, metadata !DIExpression()), !dbg !6784
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6835
  %42 = and i32 %41, 32, !dbg !6837
  %43 = icmp eq i32 %42, 0, !dbg !6838
  br i1 %43, label %47, label %44, !dbg !6839

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6840
  %46 = and i32 %45, -8193, !dbg !6840
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6840
  br label %47, !dbg !6842

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6843
  %49 = or i32 %48, 255, !dbg !6843
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6843
  store i8 0, i8* %2, align 1, !dbg !6844
  ret i32 %40, !dbg !6845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6846 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6850, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i32 %0, metadata !6851, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i8* %1, metadata !6852, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.value(metadata i32 0, metadata !6853, metadata !DIExpression()), !dbg !6857
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6858
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6860
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6862
  %6 = and i32 %5, 512, !dbg !6863
  %7 = icmp eq i32 %6, 0, !dbg !6863
  br i1 %7, label %18, label %8, !dbg !6864

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6865
  call void @llvm.dbg.value(metadata i32 %9, metadata !6854, metadata !DIExpression()), !dbg !6866
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6867
  %11 = and i32 %10, 32768, !dbg !6869
  %12 = icmp ne i32 %11, 0, !dbg !6870
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6871
  br i1 %14, label %15, label %18, !dbg !6871

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  %17 = and i32 %16, -32769, !dbg !6872
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6872
  br label %18, !dbg !6876

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6877
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6879
  %21 = and i32 %20, 256, !dbg !6881
  %22 = icmp eq i32 %21, 0, !dbg !6882
  br i1 %22, label %23, label %25, !dbg !6883

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  %27 = or i32 %26, 65280, !dbg !6886
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  store i8 0, i8* %1, align 1, !dbg !6887
  ret void, !dbg !6888
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6889 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6895, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i32 0, metadata !6896, metadata !DIExpression()), !dbg !6897
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6898
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6900
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6902
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6904
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6906
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6910
  %8 = or i32 %7, -65536, !dbg !6910
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6910
  ret void, !dbg !6911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6912 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6916, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.value(metadata i8* %0, metadata !6917, metadata !DIExpression()), !dbg !6918
  store i8 0, i8* %0, align 1, !dbg !6919
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6921 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6925, metadata !DIExpression()), !dbg !6928
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6929
  %3 = load i32, i32* %2, align 4, !dbg !6929
  %4 = inttoptr i32 %3 to i16*, !dbg !6930
  call void @llvm.dbg.value(metadata i16* %4, metadata !6926, metadata !DIExpression()), !dbg !6928
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6931
  %6 = or i32 %5, 256, !dbg !6931
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6931
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6932, !srcloc !6935
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6936, !srcloc !6939
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6940
  %8 = load i16, i16* %7, align 2, !dbg !6941
  call void @llvm.dbg.value(metadata i16 %8, metadata !6927, metadata !DIExpression()), !dbg !6928
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6942
  %10 = and i32 %9, -257, !dbg !6942
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6942
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6943, !srcloc !6935
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6945, !srcloc !6939
  %11 = icmp eq i16 %8, -8446, !dbg !6947
  ret i1 %11, !dbg !6949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6950 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6951
  %2 = or i32 %1, 16, !dbg !6951
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6951
  ret void, !dbg !6952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6953 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6956, metadata !DIExpression()), !dbg !6957
  br label %1, !dbg !6958

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6956, metadata !DIExpression()), !dbg !6957
  tail call fastcc void @__NVIC_SetPriority.34(i32 noundef %2) #26, !dbg !6960
  %3 = add nuw nsw i32 %2, 1, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %3, metadata !6956, metadata !DIExpression()), !dbg !6957
  %4 = icmp eq i32 %3, 97, !dbg !6964
  br i1 %4, label %5, label %1, !dbg !6958, !llvm.loop !6965

5:                                                ; preds = %1
  ret void, !dbg !6967
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.34(i32 noundef %0) unnamed_addr #15 !dbg !6968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.value(metadata i32 1, metadata !6971, metadata !DIExpression()), !dbg !6972
  %2 = and i32 %0, 15, !dbg !6973
  %3 = add nsw i32 %2, -4, !dbg !6973
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6973
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6973
  %6 = icmp slt i32 %0, 0, !dbg !6973
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6973
  store volatile i8 16, i8* %7, align 1, !dbg !6974
  ret void, !dbg !6976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7083, metadata !DIExpression()), !dbg !7084
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7085
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7087
  br i1 %3, label %4, label %12, !dbg !7088

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7089, !srcloc !7101
  call void @llvm.dbg.value(metadata i32 %5, metadata !7092, metadata !DIExpression()) #24, !dbg !7102
  %6 = icmp eq i32 %5, 0, !dbg !7103
  br i1 %6, label %12, label %7, !dbg !7104

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7105
  %9 = or i32 %8, 268435456, !dbg !7105
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7105
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7107
  %11 = and i32 %10, -32769, !dbg !7107
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7107
  br label %12, !dbg !7108

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7109
  ret void, !dbg !7110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7111 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7112
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !375, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.value(metadata i8 0, metadata !376, metadata !DIExpression()), !dbg !7114
  call void @llvm.dbg.value(metadata i32 64, metadata !378, metadata !DIExpression()), !dbg !7114
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7115
  %3 = load i32, i32* %2, align 4, !dbg !7115
  %4 = add i32 %3, -64, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %4, metadata !377, metadata !DIExpression()), !dbg !7114
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7118
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7119
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7120
  call void @llvm.dbg.value(metadata i8 1, metadata !376, metadata !DIExpression()), !dbg !7114
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7121
  ret void, !dbg !7122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7123 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7124
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7125, !srcloc !7128
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7129, !srcloc !7132
  ret void, !dbg !7133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7134 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7135, !srcloc !7138
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7139
  ret void, !dbg !7140
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7141 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7156, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i8 %1, metadata !7157, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i32 %2, metadata !7158, metadata !DIExpression()), !dbg !7160
  call void @llvm.dbg.value(metadata i32 %3, metadata !7159, metadata !DIExpression()), !dbg !7160
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7161
  ret void, !dbg !7163
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7164 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7169, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i8 %1, metadata !7170, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i32 undef, metadata !7171, metadata !DIExpression()), !dbg !7174
  call void @llvm.dbg.value(metadata i32 undef, metadata !7172, metadata !DIExpression()), !dbg !7174
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7175
  call void @llvm.dbg.value(metadata i8 %3, metadata !7173, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7174
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7176
  call void @llvm.dbg.value(metadata i32 %4, metadata !7173, metadata !DIExpression()), !dbg !7174
  %5 = trunc i32 %4 to i8, !dbg !7177
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7178
  ret void, !dbg !7179
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7180 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7184, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i8 %1, metadata !7185, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i8 %2, metadata !7186, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i1 %3, metadata !7187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7190
  %5 = zext i8 %2 to i32, !dbg !7191
  call void @llvm.dbg.value(metadata i32 %5, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7190
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i32 0, metadata !7188, metadata !DIExpression()), !dbg !7190
  %7 = icmp eq i8 %1, 0, !dbg !7192
  br i1 %7, label %29, label %8, !dbg !7195

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i32 %10, metadata !7188, metadata !DIExpression()), !dbg !7190
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7196
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7199
  %13 = load i32, i32* %12, align 4, !dbg !7199
  %14 = icmp eq i32 %13, 0, !dbg !7200
  br i1 %14, label %25, label %15, !dbg !7201

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7202

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7204
  %18 = icmp eq i32 %17, 0, !dbg !7204
  br i1 %18, label %29, label %19, !dbg !7205

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7206
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7207
  call void @llvm.dbg.value(metadata i32 %21, metadata !7189, metadata !DIExpression()), !dbg !7190
  %22 = icmp eq i32 %21, -22, !dbg !7208
  br i1 %22, label %29, label %23, !dbg !7210

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7211
  call void @llvm.dbg.value(metadata i32 %24, metadata !7189, metadata !DIExpression()), !dbg !7190
  br label %25, !dbg !7212

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7190
  call void @llvm.dbg.value(metadata i32 %26, metadata !7189, metadata !DIExpression()), !dbg !7190
  %27 = add nuw nsw i32 %10, 1, !dbg !7213
  call void @llvm.dbg.value(metadata i32 %27, metadata !7188, metadata !DIExpression()), !dbg !7190
  %28 = icmp eq i32 %27, %6, !dbg !7192
  br i1 %28, label %29, label %8, !dbg !7195, !llvm.loop !7214

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7190
  ret i32 %30, !dbg !7216
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7217 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7221, metadata !DIExpression()), !dbg !7223
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7224
  %3 = load i32, i32* %2, align 4, !dbg !7224
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7225, !range !3479
  %5 = icmp ult i32 %4, 2, !dbg !7225
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7226
  br i1 %7, label %8, label %15, !dbg !7226

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7227
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7228
  %11 = load i32, i32* %10, align 4, !dbg !7228
  %12 = and i32 %11, %9, !dbg !7229
  %13 = icmp eq i32 %12, 0, !dbg !7230
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7222, metadata !DIExpression()), !dbg !7223
  ret i32 %16, !dbg !7231
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7232 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7236, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7237, metadata !DIExpression()), !dbg !7239
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7240
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7240
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7238, metadata !DIExpression()), !dbg !7241
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7242
  %6 = load i32, i32* %5, align 4, !dbg !7242
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7243
  store i32 %6, i32* %7, align 4, !dbg !7244
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7245
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7246
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7247
  %11 = load i32, i32* %10, align 4, !dbg !7247
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7248
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7249
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7250
  ret i32 %12, !dbg !7251
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7252 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7259, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7260, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i32 undef, metadata !7261, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.value(metadata i32 %2, metadata !7262, metadata !DIExpression()), !dbg !7263
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7264
  %5 = load i32, i32* %4, align 4, !dbg !7264
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7265
  %7 = or i32 %6, %5, !dbg !7266
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7267
  store i32 %7, i32* %8, align 4, !dbg !7268
  ret void, !dbg !7269
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7270 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7274, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7275, metadata !DIExpression()), !dbg !7276
  %3 = zext i8 %0 to i32, !dbg !7277
  %4 = icmp ugt i8 %0, 7, !dbg !7279
  br i1 %4, label %6, label %5, !dbg !7280

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7281
  br label %6, !dbg !7282

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7276
  ret i32 %7, !dbg !7283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7289, metadata !DIExpression()), !dbg !7290
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7291
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7292
  %4 = load i32, i32* %3, align 4, !dbg !7292
  %5 = and i32 %4, -32, !dbg !7293
  %6 = or i32 %5, %0, !dbg !7294
  %7 = or i32 %6, 16, !dbg !7294
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7295
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7296
  %9 = load i32, i32* %8, align 4, !dbg !7296
  %10 = or i32 %9, 1, !dbg !7297
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7298
  ret void, !dbg !7299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7305
  ret void, !dbg !7306
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7311, metadata !DIExpression()), !dbg !7312
  %2 = icmp ult i32 %0, 33, !dbg !7313
  br i1 %2, label %11, label %3, !dbg !7315

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7316
  br i1 %4, label %11, label %5, !dbg !7318

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7319
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7320, !range !3479
  %8 = mul nsw i32 %7, -2, !dbg !7321
  %9 = add nsw i32 %8, 62, !dbg !7321
  %10 = and i32 %9, 62, !dbg !7322
  br label %11, !dbg !7323

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7312
  ret i32 %12, !dbg !7324
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7329, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i8 %1, metadata !7330, metadata !DIExpression()), !dbg !7331
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7332
  ret void, !dbg !7334
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7335 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7339, metadata !DIExpression()), !dbg !7346
  call void @llvm.dbg.value(metadata i8 %1, metadata !7340, metadata !DIExpression()), !dbg !7346
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7347
  call void @llvm.dbg.value(metadata i8 %3, metadata !7341, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7346
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %4, metadata !7341, metadata !DIExpression()), !dbg !7346
  %5 = icmp ne i32 %4, -22, !dbg !7349
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7350
  call void @llvm.dbg.value(metadata i32 %4, metadata !7342, metadata !DIExpression()), !dbg !7351
  br i1 %7, label %8, label %12, !dbg !7350

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7342, metadata !DIExpression()), !dbg !7351
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7352
  %10 = add i32 %9, 1, !dbg !7355
  call void @llvm.dbg.value(metadata i32 %10, metadata !7342, metadata !DIExpression()), !dbg !7351
  %11 = icmp eq i32 %10, 8, !dbg !7356
  br i1 %11, label %12, label %8, !dbg !7357, !llvm.loop !7358

12:                                               ; preds = %8, %2
  ret void, !dbg !7360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7364, metadata !DIExpression()), !dbg !7365
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7366
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7367
  ret void, !dbg !7368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7369 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7374
  %2 = icmp ugt i32 %1, 8, !dbg !7376
  br i1 %2, label %14, label %3, !dbg !7377

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7378
  call void @llvm.dbg.value(metadata i32 0, metadata !7373, metadata !DIExpression()), !dbg !7379
  %4 = icmp eq i32 %1, 0, !dbg !7380
  br i1 %4, label %12, label %5, !dbg !7383

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7383

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7373, metadata !DIExpression()), !dbg !7379
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7384
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7386
  %10 = add nuw i32 %8, 1, !dbg !7387
  call void @llvm.dbg.value(metadata i32 %10, metadata !7373, metadata !DIExpression()), !dbg !7379
  %11 = icmp eq i32 %10, %1, !dbg !7380
  br i1 %11, label %12, label %7, !dbg !7383, !llvm.loop !7388

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7390
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7391
  tail call void @arm_core_mpu_enable() #26, !dbg !7392
  br label %14, !dbg !7393

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7379
  ret i32 %15, !dbg !7394
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7395 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7402, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i8* %1, metadata !7403, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i8* %0, metadata !7404, metadata !DIExpression()), !dbg !7405
  %3 = load i8, i8* %1, align 1, !dbg !7406
  %4 = icmp eq i8 %3, 0, !dbg !7407
  br i1 %4, label %13, label %5, !dbg !7408

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7402, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.value(metadata i8* %8, metadata !7403, metadata !DIExpression()), !dbg !7405
  store i8 %6, i8* %7, align 1, !dbg !7409
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7411
  call void @llvm.dbg.value(metadata i8* %9, metadata !7402, metadata !DIExpression()), !dbg !7405
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7412
  call void @llvm.dbg.value(metadata i8* %10, metadata !7403, metadata !DIExpression()), !dbg !7405
  %11 = load i8, i8* %10, align 1, !dbg !7406
  %12 = icmp eq i8 %11, 0, !dbg !7407
  br i1 %12, label %13, label %5, !dbg !7408, !llvm.loop !7413

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7415
  ret i8* %0, !dbg !7416
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7421, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %1, metadata !7422, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %2, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %0, metadata !7424, metadata !DIExpression()), !dbg !7425
  %4 = icmp eq i32 %2, 0, !dbg !7426
  br i1 %4, label %22, label %5, !dbg !7427

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7421, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %7, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8* %8, metadata !7422, metadata !DIExpression()), !dbg !7425
  %9 = load i8, i8* %8, align 1, !dbg !7428
  %10 = icmp eq i8 %9, 0, !dbg !7429
  br i1 %10, label %16, label %11, !dbg !7430

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7431
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7433
  call void @llvm.dbg.value(metadata i8* %12, metadata !7422, metadata !DIExpression()), !dbg !7425
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7434
  call void @llvm.dbg.value(metadata i8* %13, metadata !7421, metadata !DIExpression()), !dbg !7425
  %14 = add i32 %7, -1, !dbg !7435
  call void @llvm.dbg.value(metadata i32 %14, metadata !7423, metadata !DIExpression()), !dbg !7425
  %15 = icmp eq i32 %14, 0, !dbg !7426
  br i1 %15, label %22, label %5, !dbg !7427, !llvm.loop !7436

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7421, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %18, metadata !7423, metadata !DIExpression()), !dbg !7425
  store i8 0, i8* %17, align 1, !dbg !7438
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7440
  call void @llvm.dbg.value(metadata i8* %19, metadata !7421, metadata !DIExpression()), !dbg !7425
  %20 = add i32 %18, -1, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %20, metadata !7423, metadata !DIExpression()), !dbg !7425
  %21 = icmp eq i32 %20, 0, !dbg !7442
  br i1 %21, label %22, label %16, !dbg !7443, !llvm.loop !7444

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7446
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7447 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7451, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %1, metadata !7452, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata i32 %1, metadata !7453, metadata !DIExpression()), !dbg !7454
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7455

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7451, metadata !DIExpression()), !dbg !7454
  %6 = load i8, i8* %5, align 1, !dbg !7456
  %7 = icmp eq i8 %6, %3, !dbg !7457
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7458
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7459
  call void @llvm.dbg.value(metadata i8* %10, metadata !7451, metadata !DIExpression()), !dbg !7454
  br i1 %9, label %11, label %4, !dbg !7458, !llvm.loop !7461

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7463
  ret i8* %12, !dbg !7464
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7465 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7467, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i32 %1, metadata !7468, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* null, metadata !7469, metadata !DIExpression()), !dbg !7470
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7471

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7470
  call void @llvm.dbg.value(metadata i8* %6, metadata !7469, metadata !DIExpression()), !dbg !7470
  call void @llvm.dbg.value(metadata i8* %5, metadata !7467, metadata !DIExpression()), !dbg !7470
  %7 = load i8, i8* %5, align 1, !dbg !7472
  %8 = icmp eq i8 %7, %3, !dbg !7475
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7476
  call void @llvm.dbg.value(metadata i8* %9, metadata !7469, metadata !DIExpression()), !dbg !7470
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7477
  call void @llvm.dbg.value(metadata i8* %10, metadata !7467, metadata !DIExpression()), !dbg !7470
  %11 = icmp eq i8 %7, 0, !dbg !7478
  br i1 %11, label %12, label %4, !dbg !7478, !llvm.loop !7479

12:                                               ; preds = %4
  ret i8* %9, !dbg !7481
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7486, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i32 0, metadata !7487, metadata !DIExpression()), !dbg !7488
  %2 = load i8, i8* %0, align 1, !dbg !7489
  %3 = icmp eq i8 %2, 0, !dbg !7490
  br i1 %3, label %11, label %4, !dbg !7491

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7487, metadata !DIExpression()), !dbg !7488
  call void @llvm.dbg.value(metadata i8* %6, metadata !7486, metadata !DIExpression()), !dbg !7488
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7492
  call void @llvm.dbg.value(metadata i8* %7, metadata !7486, metadata !DIExpression()), !dbg !7488
  %8 = add i32 %5, 1, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %8, metadata !7487, metadata !DIExpression()), !dbg !7488
  %9 = load i8, i8* %7, align 1, !dbg !7489
  %10 = icmp eq i8 %9, 0, !dbg !7490
  br i1 %10, label %11, label %4, !dbg !7491, !llvm.loop !7495

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7488
  ret i32 %12, !dbg !7497
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7498 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7502, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 %1, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 0, metadata !7504, metadata !DIExpression()), !dbg !7505
  %3 = load i8, i8* %0, align 1, !dbg !7506
  %4 = icmp ne i8 %3, 0, !dbg !7507
  %5 = icmp ne i32 %1, 0, !dbg !7508
  %6 = and i1 %4, %5, !dbg !7508
  br i1 %6, label %7, label %16, !dbg !7509

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7504, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i8* %9, metadata !7502, metadata !DIExpression()), !dbg !7505
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7510
  call void @llvm.dbg.value(metadata i8* %10, metadata !7502, metadata !DIExpression()), !dbg !7505
  %11 = add nuw i32 %8, 1, !dbg !7512
  call void @llvm.dbg.value(metadata i32 %11, metadata !7504, metadata !DIExpression()), !dbg !7505
  %12 = load i8, i8* %10, align 1, !dbg !7506
  %13 = icmp ne i8 %12, 0, !dbg !7507
  %14 = icmp ult i32 %11, %1, !dbg !7508
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7508
  br i1 %15, label %7, label %16, !dbg !7509, !llvm.loop !7513

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7505
  ret i32 %17, !dbg !7515
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7516 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %1, metadata !7521, metadata !DIExpression()), !dbg !7522
  %3 = load i8, i8* %0, align 1, !dbg !7523
  %4 = load i8, i8* %1, align 1, !dbg !7524
  %5 = icmp ne i8 %3, %4, !dbg !7525
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7526
  br i1 %7, label %18, label %8, !dbg !7526

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7521, metadata !DIExpression()), !dbg !7522
  call void @llvm.dbg.value(metadata i8* %10, metadata !7520, metadata !DIExpression()), !dbg !7522
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7527
  call void @llvm.dbg.value(metadata i8* %11, metadata !7520, metadata !DIExpression()), !dbg !7522
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7529
  call void @llvm.dbg.value(metadata i8* %12, metadata !7521, metadata !DIExpression()), !dbg !7522
  %13 = load i8, i8* %11, align 1, !dbg !7523
  %14 = load i8, i8* %12, align 1, !dbg !7524
  %15 = icmp ne i8 %13, %14, !dbg !7525
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7526
  br i1 %17, label %18, label %8, !dbg !7526, !llvm.loop !7530

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7523
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7524
  %21 = zext i8 %19 to i32, !dbg !7533
  %22 = zext i8 %20 to i32, !dbg !7534
  %23 = sub nsw i32 %21, %22, !dbg !7535
  ret i32 %23, !dbg !7536
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7541, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %1, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i32 %2, metadata !7543, metadata !DIExpression()), !dbg !7544
  %4 = icmp eq i32 %2, 0, !dbg !7545
  br i1 %4, label %23, label %5, !dbg !7545

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %7, metadata !7542, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.value(metadata i8* %8, metadata !7541, metadata !DIExpression()), !dbg !7544
  %9 = load i8, i8* %8, align 1, !dbg !7546
  %10 = load i8, i8* %7, align 1, !dbg !7547
  %11 = icmp ne i8 %9, %10, !dbg !7548
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7549
  br i1 %13, label %19, label %14, !dbg !7549

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7550
  call void @llvm.dbg.value(metadata i8* %15, metadata !7541, metadata !DIExpression()), !dbg !7544
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7552
  call void @llvm.dbg.value(metadata i8* %16, metadata !7542, metadata !DIExpression()), !dbg !7544
  %17 = add i32 %6, -1, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %17, metadata !7543, metadata !DIExpression()), !dbg !7544
  %18 = icmp eq i32 %17, 0, !dbg !7545
  br i1 %18, label %23, label %5, !dbg !7545, !llvm.loop !7554

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7557
  %21 = zext i8 %10 to i32, !dbg !7558
  %22 = sub nsw i32 %20, %21, !dbg !7559
  br label %23, !dbg !7560

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7560
  ret i32 %24, !dbg !7561
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8* %1, metadata !7568, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8** %2, metadata !7569, metadata !DIExpression()), !dbg !7572
  %4 = icmp eq i8* %0, null, !dbg !7573
  br i1 %4, label %5, label %7, !dbg !7573

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7574
  br label %7, !dbg !7573

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7573
  call void @llvm.dbg.value(metadata i8* %8, metadata !7570, metadata !DIExpression()), !dbg !7572
  %9 = load i8, i8* %8, align 1, !dbg !7575
  %10 = icmp eq i8 %9, 0, !dbg !7575
  br i1 %10, label %33, label %11, !dbg !7576

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7570, metadata !DIExpression()), !dbg !7572
  %14 = zext i8 %12 to i32, !dbg !7575
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7577
  %16 = icmp eq i8* %15, null, !dbg !7576
  br i1 %16, label %21, label %17, !dbg !7578

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7579
  call void @llvm.dbg.value(metadata i8* %18, metadata !7570, metadata !DIExpression()), !dbg !7572
  %19 = load i8, i8* %18, align 1, !dbg !7575
  %20 = icmp eq i8 %19, 0, !dbg !7575
  br i1 %20, label %33, label %11, !dbg !7576, !llvm.loop !7581

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7571, metadata !DIExpression()), !dbg !7572
  %24 = zext i8 %22 to i32, !dbg !7583
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7584
  %26 = icmp eq i8* %25, null, !dbg !7585
  br i1 %26, label %27, label %31, !dbg !7586

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7587
  call void @llvm.dbg.value(metadata i8* %28, metadata !7571, metadata !DIExpression()), !dbg !7572
  %29 = load i8, i8* %28, align 1, !dbg !7583
  %30 = icmp eq i8 %29, 0, !dbg !7583
  br i1 %30, label %33, label %21, !dbg !7589, !llvm.loop !7590

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7592
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7595
  br label %33, !dbg !7596

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7572
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7572
  store i8* %34, i8** %2, align 4, !dbg !7572
  ret i8* %35, !dbg !7597
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7598 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7600, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata i8* %1, metadata !7601, metadata !DIExpression()), !dbg !7602
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7603
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7604
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7605
  ret i8* %0, !dbg !7606
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7607 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7609, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i8* %1, metadata !7610, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i8* %0, metadata !7612, metadata !DIExpression()), !dbg !7614
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7615
  call void @llvm.dbg.value(metadata i32 %4, metadata !7613, metadata !DIExpression()), !dbg !7614
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7616
  call void @llvm.dbg.value(metadata i8* %5, metadata !7609, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i8* %1, metadata !7610, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %2, metadata !7611, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7614
  %6 = icmp eq i32 %2, 0, !dbg !7617
  br i1 %6, label %18, label %7, !dbg !7618

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7619
  call void @llvm.dbg.value(metadata i8* %9, metadata !7609, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i8* %10, metadata !7610, metadata !DIExpression()), !dbg !7614
  %12 = load i8, i8* %10, align 1, !dbg !7620
  %13 = icmp eq i8 %12, 0, !dbg !7621
  br i1 %13, label %18, label %14, !dbg !7622

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7623
  call void @llvm.dbg.value(metadata i8* %15, metadata !7610, metadata !DIExpression()), !dbg !7614
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7625
  call void @llvm.dbg.value(metadata i8* %16, metadata !7609, metadata !DIExpression()), !dbg !7614
  store i8 %12, i8* %9, align 1, !dbg !7626
  call void @llvm.dbg.value(metadata i32 %11, metadata !7611, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %11, metadata !7611, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7614
  %17 = icmp eq i32 %11, 0, !dbg !7617
  br i1 %17, label %18, label %7, !dbg !7618, !llvm.loop !7627

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7614
  store i8 0, i8* %19, align 1, !dbg !7629
  ret i8* %0, !dbg !7630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %1, metadata !7636, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %2, metadata !7637, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %0, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %1, metadata !7639, metadata !DIExpression()), !dbg !7640
  %4 = icmp eq i32 %2, 0, !dbg !7641
  br i1 %4, label %31, label %5, !dbg !7643

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %0, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %2, metadata !7637, metadata !DIExpression()), !dbg !7640
  %6 = add i32 %2, -1, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %6, metadata !7637, metadata !DIExpression()), !dbg !7640
  %7 = icmp eq i32 %6, 0, !dbg !7645
  br i1 %7, label %23, label %8, !dbg !7646

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7647
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7647
  br label %11, !dbg !7647

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8* %14, metadata !7638, metadata !DIExpression()), !dbg !7640
  %15 = load i8, i8* %14, align 1, !dbg !7648
  %16 = load i8, i8* %13, align 1, !dbg !7649
  %17 = icmp eq i8 %15, %16, !dbg !7650
  br i1 %17, label %18, label %23, !dbg !7647

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7651
  call void @llvm.dbg.value(metadata i8* %19, metadata !7638, metadata !DIExpression()), !dbg !7640
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7653
  call void @llvm.dbg.value(metadata i8* %20, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %12, metadata !7637, metadata !DIExpression()), !dbg !7640
  %21 = add i32 %12, -1, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %21, metadata !7637, metadata !DIExpression()), !dbg !7640
  %22 = icmp eq i32 %21, 0, !dbg !7645
  br i1 %22, label %23, label %11, !dbg !7646, !llvm.loop !7654

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7640
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7640
  %26 = load i8, i8* %24, align 1, !dbg !7656
  %27 = zext i8 %26 to i32, !dbg !7656
  %28 = load i8, i8* %25, align 1, !dbg !7657
  %29 = zext i8 %28 to i32, !dbg !7657
  %30 = sub nsw i32 %27, %29, !dbg !7658
  br label %31, !dbg !7659

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7640
  ret i32 %32, !dbg !7660
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7665, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %1, metadata !7666, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %2, metadata !7667, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %0, metadata !7668, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %1, metadata !7669, metadata !DIExpression()), !dbg !7670
  %4 = ptrtoint i8* %0 to i32, !dbg !7671
  %5 = ptrtoint i8* %1 to i32, !dbg !7671
  %6 = sub i32 %4, %5, !dbg !7671
  %7 = icmp ult i32 %6, %2, !dbg !7673
  br i1 %7, label %10, label %8, !dbg !7674

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %0, metadata !7668, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %2, metadata !7667, metadata !DIExpression()), !dbg !7670
  %9 = icmp eq i32 %2, 0, !dbg !7675
  br i1 %9, label %26, label %17, !dbg !7677

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7667, metadata !DIExpression()), !dbg !7670
  %12 = add i32 %11, -1, !dbg !7678
  call void @llvm.dbg.value(metadata i32 %12, metadata !7667, metadata !DIExpression()), !dbg !7670
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7681
  %14 = load i8, i8* %13, align 1, !dbg !7681
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7682
  store i8 %14, i8* %15, align 1, !dbg !7683
  %16 = icmp eq i32 %12, 0, !dbg !7684
  br i1 %16, label %26, label %10, !dbg !7685, !llvm.loop !7686

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7669, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i8* %19, metadata !7668, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata i32 %20, metadata !7667, metadata !DIExpression()), !dbg !7670
  %21 = load i8, i8* %18, align 1, !dbg !7688
  store i8 %21, i8* %19, align 1, !dbg !7690
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7691
  call void @llvm.dbg.value(metadata i8* %22, metadata !7668, metadata !DIExpression()), !dbg !7670
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7692
  call void @llvm.dbg.value(metadata i8* %23, metadata !7669, metadata !DIExpression()), !dbg !7670
  %24 = add i32 %20, -1, !dbg !7693
  call void @llvm.dbg.value(metadata i32 %24, metadata !7667, metadata !DIExpression()), !dbg !7670
  %25 = icmp eq i32 %24, 0, !dbg !7675
  br i1 %25, label %26, label %17, !dbg !7677, !llvm.loop !7694

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7703, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8* %1, metadata !7704, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %2, metadata !7705, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8* %0, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8* %1, metadata !7707, metadata !DIExpression()), !dbg !7708
  %4 = icmp eq i32 %2, 0, !dbg !7709
  br i1 %4, label %14, label %5, !dbg !7710

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7707, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i8* %7, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.value(metadata i32 %8, metadata !7705, metadata !DIExpression()), !dbg !7708
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7711
  call void @llvm.dbg.value(metadata i8* %9, metadata !7707, metadata !DIExpression()), !dbg !7708
  %10 = load i8, i8* %6, align 1, !dbg !7713
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7714
  call void @llvm.dbg.value(metadata i8* %11, metadata !7706, metadata !DIExpression()), !dbg !7708
  store i8 %10, i8* %7, align 1, !dbg !7715
  %12 = add i32 %8, -1, !dbg !7716
  call void @llvm.dbg.value(metadata i32 %12, metadata !7705, metadata !DIExpression()), !dbg !7708
  %13 = icmp eq i32 %12, 0, !dbg !7709
  br i1 %13, label %14, label %5, !dbg !7710, !llvm.loop !7717

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7719
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7720 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7724, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %1, metadata !7725, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %2, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %0, metadata !7727, metadata !DIExpression()), !dbg !7729
  %4 = trunc i32 %1 to i8, !dbg !7730
  call void @llvm.dbg.value(metadata i8 %4, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %2, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %0, metadata !7727, metadata !DIExpression()), !dbg !7729
  %5 = icmp eq i32 %2, 0, !dbg !7731
  br i1 %5, label %12, label %6, !dbg !7732

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %8, metadata !7727, metadata !DIExpression()), !dbg !7729
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7733
  call void @llvm.dbg.value(metadata i8* %9, metadata !7727, metadata !DIExpression()), !dbg !7729
  store i8 %4, i8* %8, align 1, !dbg !7735
  %10 = add i32 %7, -1, !dbg !7736
  call void @llvm.dbg.value(metadata i32 %10, metadata !7726, metadata !DIExpression()), !dbg !7729
  %11 = icmp eq i32 %10, 0, !dbg !7731
  br i1 %11, label %12, label %6, !dbg !7732, !llvm.loop !7737

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7744, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %1, metadata !7745, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %2, metadata !7746, metadata !DIExpression()), !dbg !7750
  %4 = icmp eq i32 %2, 0, !dbg !7751
  br i1 %4, label %17, label %5, !dbg !7752

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7753

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7754
  call void @llvm.dbg.value(metadata i8* %9, metadata !7747, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %8, metadata !7746, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i8* %9, metadata !7747, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7754
  %10 = load i8, i8* %9, align 1, !dbg !7755
  %11 = icmp eq i8 %10, %6, !dbg !7758
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7759
  call void @llvm.dbg.value(metadata i8* %12, metadata !7747, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i32 %13, metadata !7746, metadata !DIExpression()), !dbg !7750
  br i1 %15, label %16, label %7, !dbg !7759, !llvm.loop !7760

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7762

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7750
  ret i8* %19, !dbg !7763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7764 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7766, metadata !DIExpression()), !dbg !7767
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7773
  ret i32 -1, !dbg !7774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7779, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.value(metadata i32* %1, metadata !7780, metadata !DIExpression()), !dbg !7781
  %3 = ptrtoint i32* %1 to i32, !dbg !7782
  %4 = and i32 %3, -2, !dbg !7782
  %5 = icmp eq i32 %4, 2, !dbg !7782
  br i1 %5, label %6, label %9, !dbg !7782

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7783
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7783
  br label %9, !dbg !7784

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7784
  ret i32 %10, !dbg !7785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i32* %1, metadata !7789, metadata !DIExpression()), !dbg !7790
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7791
  ret i32 %3, !dbg !7792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i32* %1, metadata !7797, metadata !DIExpression()), !dbg !7798
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7799, !srcloc !7801
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7802
  ret i32 %3, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7809, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32* %1, metadata !7810, metadata !DIExpression()), !dbg !7813
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %3, metadata !7811, metadata !DIExpression()), !dbg !7813
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7815
  call void @llvm.dbg.value(metadata i32 %4, metadata !7812, metadata !DIExpression()), !dbg !7813
  %5 = icmp ne i32 %3, %4, !dbg !7816
  %6 = sext i1 %5 to i32, !dbg !7817
  ret i32 %6, !dbg !7818
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7819 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7823, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %1, metadata !7824, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 %2, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32* %3, metadata !7826, metadata !DIExpression()), !dbg !7827
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7828
  ret i32 %5, !dbg !7829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7830 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7832, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i32 %1, metadata !7833, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i32 %2, metadata !7834, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i32* %3, metadata !7835, metadata !DIExpression()), !dbg !7836
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7837, !srcloc !7839
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7840
  ret i32 %5, !dbg !7841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7842 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7844, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %1, metadata !7845, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %2, metadata !7846, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32* %3, metadata !7847, metadata !DIExpression()), !dbg !7852
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7853
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7855
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7855
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7855
  br i1 %11, label %33, label %12, !dbg !7855

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7852
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7852
  call void @llvm.dbg.value(metadata i8* %14, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %13, metadata !7848, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %1, metadata !7849, metadata !DIExpression()), !dbg !7852
  br label %15, !dbg !7856

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7858
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7852
  call void @llvm.dbg.value(metadata i8* %17, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %16, metadata !7849, metadata !DIExpression()), !dbg !7852
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7859
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7862
  call void @llvm.dbg.value(metadata i8* %19, metadata !7850, metadata !DIExpression()), !dbg !7852
  %20 = load i8, i8* %17, align 1, !dbg !7863
  %21 = zext i8 %20 to i32, !dbg !7864
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !7859
  %23 = icmp eq i32 %22, -1, !dbg !7865
  br i1 %23, label %30, label %24, !dbg !7866

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7867
  call void @llvm.dbg.value(metadata i32 %25, metadata !7849, metadata !DIExpression()), !dbg !7852
  %26 = icmp eq i32 %25, 0, !dbg !7868
  br i1 %26, label %27, label %15, !dbg !7869, !llvm.loop !7870

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %28, metadata !7848, metadata !DIExpression()), !dbg !7852
  %29 = icmp eq i32 %28, 0, !dbg !7873
  br i1 %29, label %30, label %12, !dbg !7874, !llvm.loop !7875

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7852
  call void @llvm.dbg.value(metadata i32 %31, metadata !7848, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.label(metadata !7851), !dbg !7878
  %32 = sub i32 %2, %31, !dbg !7879
  br label %33, !dbg !7880

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7852
  ret i32 %34, !dbg !7881
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7882 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7887
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7888
  %3 = icmp eq i32 %2, -1, !dbg !7890
  br i1 %3, label %8, label %4, !dbg !7891

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7892
  %6 = icmp eq i32 %5, -1, !dbg !7893
  %7 = sext i1 %6 to i32, !dbg !7892
  br label %8, !dbg !7894

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7887
  ret i32 %9, !dbg !7895
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7896 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7898, metadata !DIExpression()), !dbg !7899
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7900
  ret void, !dbg !7901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7906, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i32 %1, metadata !7907, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7908, metadata !DIExpression()), !dbg !7912
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7913
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7913
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7913
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7909, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i32 %0, metadata !7911, metadata !DIExpression()), !dbg !7912
  %7 = icmp slt i32 %0, %1, !dbg !7914
  br i1 %7, label %8, label %22, !dbg !7917

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7911, metadata !DIExpression()), !dbg !7912
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7918
  %11 = icmp eq i32 %10, 0, !dbg !7918
  br i1 %11, label %19, label %12, !dbg !7921

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7922
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7924
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7924
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7926
  br i1 %15, label %19, label %16, !dbg !7927

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7928
  %18 = load i8*, i8** %17, align 4, !dbg !7928
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !7929
  br label %19, !dbg !7930

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7931
  call void @llvm.dbg.value(metadata i32 %20, metadata !7911, metadata !DIExpression()), !dbg !7912
  %21 = icmp eq i32 %20, %1, !dbg !7914
  br i1 %21, label %22, label %8, !dbg !7917, !llvm.loop !7932

22:                                               ; preds = %19, %3
  ret void, !dbg !7934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = shl nuw i32 1, %0, !dbg !7939
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7942
  ret i32 %3, !dbg !7943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7948, metadata !DIExpression()), !dbg !7949
  %2 = shl nuw i32 1, %0, !dbg !7950
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7953
  ret void, !dbg !7954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7958, metadata !DIExpression()), !dbg !7959
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7960
  ret void, !dbg !7961
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7964, metadata !DIExpression()), !dbg !7965
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7966
  %3 = and i32 %2, %0, !dbg !7966
  %4 = icmp eq i32 %3, %0, !dbg !7967
  %5 = zext i1 %4 to i32, !dbg !7967
  ret i32 %5, !dbg !7968
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7971, metadata !DIExpression()), !dbg !7972
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7973
  ret void, !dbg !7974
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7975 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7977, metadata !DIExpression()), !dbg !7978
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7981 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7983, metadata !DIExpression()), !dbg !7984
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7985
  ret void, !dbg !7986
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7989, metadata !DIExpression()), !dbg !7990
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7991
  ret void, !dbg !7992
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7995, metadata !DIExpression()), !dbg !7996
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7997
  ret void, !dbg !7998
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8001, metadata !DIExpression()), !dbg !8002
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8003
  ret void, !dbg !8004
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8007, metadata !DIExpression()), !dbg !8008
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8009
  ret void, !dbg !8010
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8013, metadata !DIExpression()), !dbg !8014
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8015
  ret void, !dbg !8016
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8019, metadata !DIExpression()), !dbg !8020
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8021
  ret void, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8023 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8025, metadata !DIExpression()), !dbg !8026
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8027
  ret void, !dbg !8028
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8031, metadata !DIExpression()), !dbg !8032
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8033
  ret i32 0, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !624 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !628, metadata !DIExpression()), !dbg !8035
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8036
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8038
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8040
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8042
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8044
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8046
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8048
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8050
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8052
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8054
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8056
  ret void, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8061, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 0, metadata !8062, metadata !DIExpression()), !dbg !8063
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8064
  %3 = load i32, i32* %2, align 4, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %3, metadata !8062, metadata !DIExpression()), !dbg !8063
  %4 = shl nuw i32 1, %0, !dbg !8065
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8066
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8067
  ret void, !dbg !8068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8071, metadata !DIExpression()), !dbg !8072
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8073
  %3 = or i32 %2, %0, !dbg !8073
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8073
  ret void, !dbg !8074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8077, metadata !DIExpression()), !dbg !8078
  %2 = icmp slt i32 %0, 32, !dbg !8079
  br i1 %2, label %3, label %5, !dbg !8081

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8082
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8084
  br label %5, !dbg !8085

5:                                                ; preds = %1, %3
  ret void, !dbg !8086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8089, metadata !DIExpression()), !dbg !8090
  %2 = xor i32 %0, -1, !dbg !8091
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8091
  %4 = and i32 %3, %2, !dbg !8091
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8097, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i32 %1, metadata !8098, metadata !DIExpression()), !dbg !8099
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8100

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8101
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8103
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8104
  br label %11, !dbg !8105

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8106
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8107
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8108
  br label %11, !dbg !8109

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8110
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8111
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8112
  br label %11, !dbg !8113

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8114
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8115
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8116
  br label %11, !dbg !8117

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8121, metadata !DIExpression()), !dbg !8122
  %2 = xor i32 %0, -1, !dbg !8123
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8123
  %4 = and i32 %3, %2, !dbg !8123
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8123
  ret void, !dbg !8124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8127, metadata !DIExpression()), !dbg !8128
  %2 = xor i32 %0, -1, !dbg !8129
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8129
  %4 = and i32 %3, %2, !dbg !8129
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8129
  ret void, !dbg !8130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8133, metadata !DIExpression()), !dbg !8134
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8135
  %3 = or i32 %2, %0, !dbg !8135
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8135
  ret void, !dbg !8136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8139, metadata !DIExpression()), !dbg !8140
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8141
  %3 = or i32 %2, %0, !dbg !8141
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8141
  ret void, !dbg !8142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8148, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %2, metadata !8149, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8150, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8152, metadata !DIExpression()), !dbg !8153
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8154
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8154
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8156
  br i1 %6, label %7, label %9, !dbg !8157

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8158
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8159
  store i8* %2, i8** %8, align 4, !dbg !8160
  br label %9, !dbg !8161

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8153
  ret i32 %10, !dbg !8162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8165, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8166, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8167, metadata !DIExpression()), !dbg !8168
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8169
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8170
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8171
  store i8* null, i8** %3, align 4, !dbg !8172
  ret void, !dbg !8173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8174 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8176, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %1, metadata !8177, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.value(metadata i8* %1, metadata !8178, metadata !DIExpression()), !dbg !8181
  %3 = bitcast i8* %1 to i32*, !dbg !8182
  %4 = load i32, i32* %3, align 4, !dbg !8182
  %5 = add i32 %4, -169, !dbg !8182
  %6 = icmp ult i32 %5, -121, !dbg !8182
  br i1 %6, label %15, label %7, !dbg !8184

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8185
  %9 = inttoptr i32 %8 to i32*, !dbg !8186
  call void @llvm.dbg.value(metadata i32* %9, metadata !8179, metadata !DIExpression()), !dbg !8181
  %10 = load volatile i32, i32* %9, align 4, !dbg !8187
  call void @llvm.dbg.value(metadata i32 %10, metadata !8180, metadata !DIExpression()), !dbg !8181
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8188
  %12 = bitcast i8* %11 to i32*, !dbg !8188
  %13 = load i32, i32* %12, align 4, !dbg !8188
  %14 = or i32 %13, %10, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %14, metadata !8180, metadata !DIExpression()), !dbg !8181
  store volatile i32 %14, i32* %9, align 4, !dbg !8190
  br label %15, !dbg !8191

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8181
  ret i32 %16, !dbg !8192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8195, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i8* %1, metadata !8196, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.value(metadata i8* %1, metadata !8197, metadata !DIExpression()), !dbg !8200
  %3 = bitcast i8* %1 to i32*, !dbg !8201
  %4 = load i32, i32* %3, align 4, !dbg !8201
  %5 = add i32 %4, -169, !dbg !8201
  %6 = icmp ult i32 %5, -121, !dbg !8201
  br i1 %6, label %16, label %7, !dbg !8203

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8204
  %9 = inttoptr i32 %8 to i32*, !dbg !8205
  call void @llvm.dbg.value(metadata i32* %9, metadata !8198, metadata !DIExpression()), !dbg !8200
  %10 = load volatile i32, i32* %9, align 4, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %10, metadata !8199, metadata !DIExpression()), !dbg !8200
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8207
  %12 = bitcast i8* %11 to i32*, !dbg !8207
  %13 = load i32, i32* %12, align 4, !dbg !8207
  %14 = xor i32 %13, -1, !dbg !8208
  %15 = and i32 %10, %14, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %15, metadata !8199, metadata !DIExpression()), !dbg !8200
  store volatile i32 %15, i32* %9, align 4, !dbg !8210
  br label %16, !dbg !8211

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8200
  ret i32 %17, !dbg !8212
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8213 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8215, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i8* %1, metadata !8216, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32* %2, metadata !8217, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i8* %1, metadata !8218, metadata !DIExpression()), !dbg !8223
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8224
  call void @llvm.dbg.value(metadata i32 %4, metadata !8219, metadata !DIExpression()), !dbg !8223
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %5, metadata !8220, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32 %5, metadata !8221, metadata !DIExpression()), !dbg !8223
  call void @llvm.dbg.value(metadata i32 %4, metadata !8222, metadata !DIExpression()), !dbg !8223
  %6 = bitcast i8* %1 to i32*, !dbg !8226
  %7 = load i32, i32* %6, align 4, !dbg !8226
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8227

8:                                                ; preds = %3
  br label %18, !dbg !8228

9:                                                ; preds = %3
  br label %18, !dbg !8230

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8231
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !8232
  br label %18, !dbg !8233

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8234
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !8235
  br label %18, !dbg !8236

16:                                               ; preds = %3
  br label %18, !dbg !8237

17:                                               ; preds = %3
  br label %18, !dbg !8238

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8239
  br label %20, !dbg !8240

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8223
  ret i32 %21, !dbg !8240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8243, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %1, metadata !8244, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %2, metadata !8245, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8* %1, metadata !8246, metadata !DIExpression()), !dbg !8251
  %4 = bitcast i8* %1 to i32*, !dbg !8252
  %5 = load i32, i32* %4, align 4, !dbg !8252
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8253
  call void @llvm.dbg.value(metadata i32 %6, metadata !8250, metadata !DIExpression()), !dbg !8251
  %7 = icmp slt i32 %6, 0, !dbg !8254
  br i1 %7, label %22, label %8, !dbg !8256

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8246, metadata !DIExpression()), !dbg !8251
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8257
  %10 = bitcast i8* %9 to i32*, !dbg !8257
  %11 = load i32, i32* %10, align 4, !dbg !8257
  %12 = lshr i32 %11, 16, !dbg !8257
  %13 = and i32 %12, 7, !dbg !8257
  %14 = lshr i32 %11, 8, !dbg !8258
  %15 = and i32 %14, 31, !dbg !8258
  %16 = shl i32 %13, %15, !dbg !8259
  call void @llvm.dbg.value(metadata i32 %16, metadata !8249, metadata !DIExpression()), !dbg !8251
  %17 = and i32 %11, 255, !dbg !8260
  %18 = or i32 %17, 1073887232, !dbg !8261
  %19 = inttoptr i32 %18 to i32*, !dbg !8262
  call void @llvm.dbg.value(metadata i32* %19, metadata !8247, metadata !DIExpression()), !dbg !8251
  %20 = load volatile i32, i32* %19, align 4, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %20, metadata !8248, metadata !DIExpression()), !dbg !8251
  %21 = or i32 %16, %20, !dbg !8264
  call void @llvm.dbg.value(metadata i32 %21, metadata !8248, metadata !DIExpression()), !dbg !8251
  store volatile i32 %21, i32* %19, align 4, !dbg !8265
  br label %22, !dbg !8266

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8251
  ret i32 %23, !dbg !8267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 0, metadata !8273, metadata !DIExpression()), !dbg !8274
  %2 = add i32 %0, -1, !dbg !8275
  %3 = icmp ult i32 %2, 6, !dbg !8275
  br i1 %3, label %4, label %7, !dbg !8275

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8275
  %6 = load i32, i32* %5, align 4, !dbg !8275
  call void @llvm.dbg.value(metadata i32 %6, metadata !8273, metadata !DIExpression()), !dbg !8274
  br label %7, !dbg !8276

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8274
  ret i32 %8, !dbg !8277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #11 !dbg !8278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 2, metadata !8283, metadata !DIExpression()), !dbg !8284
  %2 = lshr i32 %0, 1, !dbg !8285
  ret i32 %2, !dbg !8286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8291, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 8, metadata !8292, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 84, metadata !8293, metadata !DIExpression()), !dbg !8295
  call void @llvm.dbg.value(metadata i32 %1, metadata !8294, metadata !DIExpression()), !dbg !8295
  %3 = mul i32 %0, 84, !dbg !8296
  %4 = shl nsw i32 %1, 3, !dbg !8297
  %5 = udiv i32 %3, %4, !dbg !8298
  ret i32 %5, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8302, metadata !DIExpression()), !dbg !8305
  tail call void @config_enable_default_clocks() #25, !dbg !8306
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8307
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8307
  %4 = lshr i32 %3, 4, !dbg !8307
  %5 = and i32 %4, 15, !dbg !8307
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8307
  %7 = load i8, i8* %6, align 1, !dbg !8307
  %8 = zext i8 %7 to i32, !dbg !8307
  %9 = lshr i32 %2, %8, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %9, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8305
  %10 = icmp ult i32 %9, 84000000, !dbg !8308
  br i1 %10, label %11, label %13, !dbg !8310

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8311
  br label %13, !dbg !8313

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8314
  tail call fastcc void @set_up_plls() #26, !dbg !8315
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8316
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8319
  br label %14, !dbg !8320

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8321
  %16 = icmp eq i32 %15, 8, !dbg !8322
  br i1 %16, label %17, label %14, !dbg !8320, !llvm.loop !8323

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8325
  br i1 %18, label %19, label %21, !dbg !8327

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8328
  br label %21, !dbg !8330

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8331
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8332
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8333
  ret i32 0, !dbg !8334
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8335 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8337
  %2 = and i32 %1, 240, !dbg !8337
  ret i32 %2, !dbg !8338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8339 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8340
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8345
  br label %1, !dbg !8346

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8347
  %3 = icmp eq i32 %2, 1, !dbg !8348
  br i1 %3, label %4, label %1, !dbg !8346, !llvm.loop !8349

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8351
  br label %5, !dbg !8354

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8355
  %7 = icmp eq i32 %6, 1, !dbg !8356
  br i1 %7, label %8, label %5, !dbg !8354, !llvm.loop !8357

8:                                                ; preds = %5
  ret void, !dbg !8359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8360 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8361
  %2 = icmp eq i32 %1, 8, !dbg !8363
  br i1 %2, label %3, label %4, !dbg !8364

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8365
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8367
  br label %4, !dbg !8368

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8369
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8370
  %6 = and i32 %5, -196609, !dbg !8370
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8370
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8371
  %8 = and i32 %7, -251658241, !dbg !8371
  %9 = or i32 %8, 134217728, !dbg !8371
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8371
  tail call void @config_pll_sysclock() #25, !dbg !8372
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8373
  br label %10, !dbg !8374

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8375
  %12 = icmp eq i32 %11, 1, !dbg !8376
  br i1 %12, label %13, label %10, !dbg !8374, !llvm.loop !8377

13:                                               ; preds = %10
  ret void, !dbg !8379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8380 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8383
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8384
  %2 = and i32 %1, -241, !dbg !8384
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8384
  ret void, !dbg !8385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8388, metadata !DIExpression()), !dbg !8389
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8390
  %3 = and i32 %2, -4, !dbg !8390
  %4 = or i32 %3, %0, !dbg !8390
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8392 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8393
  %2 = and i32 %1, 12, !dbg !8393
  ret i32 %2, !dbg !8394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8395 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8397, metadata !DIExpression()), !dbg !8398
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8399
  %2 = and i32 %1, -7169, !dbg !8399
  %3 = or i32 %2, 4096, !dbg !8399
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8399
  ret void, !dbg !8400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8401 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8403, metadata !DIExpression()), !dbg !8404
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8405
  %2 = and i32 %1, -57345, !dbg !8405
  %3 = or i32 %2, 32768, !dbg !8405
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8405
  ret void, !dbg !8406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8407 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8408
  %2 = icmp eq i32 %1, 1, !dbg !8410
  br i1 %2, label %7, label %3, !dbg !8411

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8412
  br label %4, !dbg !8414

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8415
  %6 = icmp eq i32 %5, 1, !dbg !8416
  br i1 %6, label %7, label %4, !dbg !8414, !llvm.loop !8417

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8419
  br label %8, !dbg !8420

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8421
  %10 = icmp eq i32 %9, 0, !dbg !8422
  br i1 %10, label %11, label %8, !dbg !8420, !llvm.loop !8423

11:                                               ; preds = %8
  ret void, !dbg !8425
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8426 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8427
  %2 = and i32 %1, -16777217, !dbg !8427
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8427
  ret void, !dbg !8428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8429 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8430
  %2 = or i32 %1, 16777216, !dbg !8430
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8430
  ret void, !dbg !8431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8432 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8433
  %2 = lshr i32 %1, 25, !dbg !8434
  %3 = and i32 %2, 1, !dbg !8434
  ret i32 %3, !dbg !8435
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8436 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8437
  %2 = lshr i32 %1, 1, !dbg !8438
  %3 = and i32 %2, 1, !dbg !8438
  ret i32 %3, !dbg !8439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8440 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8441
  %2 = or i32 %1, 1, !dbg !8441
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8443 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8444
  %2 = and i32 %1, -262145, !dbg !8444
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  %2 = or i32 %1, 65536, !dbg !8447
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8449 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8450
  %2 = lshr i32 %1, 17, !dbg !8451
  %3 = and i32 %2, 1, !dbg !8451
  ret i32 %3, !dbg !8452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8454
  %2 = or i32 %1, 1, !dbg !8454
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8454
  ret void, !dbg !8455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8456 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8457
  %2 = lshr i32 %1, 1, !dbg !8458
  %3 = and i32 %2, 1, !dbg !8458
  ret i32 %3, !dbg !8459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8460 {
  ret i32 16000000, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8466 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8469 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8473, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 8, metadata !8474, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 84, metadata !8475, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8478
  %2 = and i32 %1, -4227072, !dbg !8478
  %3 = or i32 %2, 4199688, !dbg !8478
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8478
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  %5 = and i32 %4, -196609, !dbg !8479
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8479
  ret void, !dbg !8480
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8481 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8482
  ret void, !dbg !8483
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8484 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8487, metadata !DIExpression()), !dbg !8489
  %2 = bitcast i32* %1 to i8*, !dbg !8490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8488, metadata !DIExpression()), !dbg !8491
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8492
  %4 = or i32 %3, 268435456, !dbg !8492
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8492
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8493
  %6 = and i32 %5, 268435456, !dbg !8493
  store volatile i32 %6, i32* %1, align 4, !dbg !8494
  %7 = load volatile i32, i32* %1, align 4, !dbg !8495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8496
  ret void, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8497 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8499, metadata !DIExpression()), !dbg !8500
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !8501
  br i1 %2, label %3, label %4, !dbg !8503

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8504
  br label %4, !dbg !8505

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8500
  ret i32 %5, !dbg !8506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8507 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8514, !srcloc !8516
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !8517
  ret i1 %1, !dbg !8518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8519 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8520
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = icmp eq i32 %0, 10, !dbg !8527
  br i1 %2, label %3, label %4, !dbg !8529

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8530
  br label %4, !dbg !8532

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8533
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8534
  ret i32 %0, !dbg !8535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8536 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8539, metadata !DIExpression()), !dbg !8541
  call void @llvm.dbg.value(metadata i8 %0, metadata !8540, metadata !DIExpression()), !dbg !8541
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8542, !srcloc !8544
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8545
  ret void, !dbg !8546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8547 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8549, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8 %0, metadata !8550, metadata !DIExpression()), !dbg !8552
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8553
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8551, metadata !DIExpression()), !dbg !8552
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8554
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8554
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8559, metadata !DIExpression()), !dbg !8560
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !8561
  ret i1 %1, !dbg !8562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8610, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8611, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8612, metadata !DIExpression()), !dbg !8613
  ret void, !dbg !8614
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8615 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8617, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8 %1, metadata !8618, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 %2, metadata !8619, metadata !DIExpression()), !dbg !8622
  %5 = bitcast i32* %4 to i8*, !dbg !8623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8623
  call void @llvm.dbg.value(metadata i32* %4, metadata !8621, metadata !DIExpression(DW_OP_deref)), !dbg !8622
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %6, metadata !8620, metadata !DIExpression()), !dbg !8622
  %7 = icmp eq i32 %6, 0, !dbg !8625
  br i1 %7, label %8, label %31, !dbg !8627

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  %9 = and i32 %2, 131072, !dbg !8628
  %10 = icmp eq i32 %9, 0, !dbg !8630
  br i1 %10, label %28, label %11, !dbg !8631

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8632
  %13 = icmp eq i32 %12, 0, !dbg !8635
  br i1 %13, label %18, label %14, !dbg !8636

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8637
  %16 = shl nuw i32 1, %15, !dbg !8637
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8639
  br label %25, !dbg !8640

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8641
  %20 = icmp eq i32 %19, 0, !dbg !8643
  %21 = zext i8 %1 to i32, !dbg !8622
  br i1 %20, label %25, label %22, !dbg !8644

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8645
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8647
  br label %25, !dbg !8648

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8649
  %27 = load i32, i32* %4, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, metadata !8621, metadata !DIExpression()), !dbg !8622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8651
  br label %31, !dbg !8652

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8649
  %30 = load i32, i32* %4, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %30, metadata !8621, metadata !DIExpression()), !dbg !8622
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8651
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8622
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8653
  ret i32 %6, !dbg !8653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8658, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32* %1, metadata !8659, metadata !DIExpression()), !dbg !8663
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8664
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8664
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8664
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8660, metadata !DIExpression()), !dbg !8663
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8665
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8665
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8665
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8662, metadata !DIExpression()), !dbg !8663
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8666
  store i32 %9, i32* %1, align 4, !dbg !8667
  ret i32 0, !dbg !8668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8671, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %1, metadata !8672, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 %2, metadata !8673, metadata !DIExpression()), !dbg !8677
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8678
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8678
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8678
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8674, metadata !DIExpression()), !dbg !8677
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8679
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8679
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8679
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8675, metadata !DIExpression()), !dbg !8677
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %10, metadata !8676, metadata !DIExpression()), !dbg !8677
  %11 = xor i32 %1, -1, !dbg !8681
  %12 = and i32 %10, %11, !dbg !8682
  %13 = and i32 %2, %1, !dbg !8683
  %14 = or i32 %12, %13, !dbg !8684
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8685
  ret i32 0, !dbg !8686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8687 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8689, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i32 %1, metadata !8690, metadata !DIExpression()), !dbg !8693
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8694
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8694
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8691, metadata !DIExpression()), !dbg !8693
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8695
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8695
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8695
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8692, metadata !DIExpression()), !dbg !8693
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8696
  store volatile i32 %1, i32* %9, align 4, !dbg !8696
  ret i32 0, !dbg !8697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8700, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %1, metadata !8701, metadata !DIExpression()), !dbg !8704
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8705
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8705
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8705
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8702, metadata !DIExpression()), !dbg !8704
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8706
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8706
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8703, metadata !DIExpression()), !dbg !8704
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8707
  ret i32 0, !dbg !8708
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8711, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.value(metadata i32 %1, metadata !8712, metadata !DIExpression()), !dbg !8715
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8716
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8716
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8713, metadata !DIExpression()), !dbg !8715
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8717
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8717
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8717
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8714, metadata !DIExpression()), !dbg !8715
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8718
  %10 = load volatile i32, i32* %9, align 4, !dbg !8718
  %11 = xor i32 %10, %1, !dbg !8718
  store volatile i32 %11, i32* %9, align 4, !dbg !8718
  ret i32 0, !dbg !8719
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8720 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8722, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8 %1, metadata !8723, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %2, metadata !8724, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 %3, metadata !8725, metadata !DIExpression()), !dbg !8732
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8733
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8733
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8733
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8726, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i8* undef, metadata !8727, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8729, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8730, metadata !DIExpression()), !dbg !8732
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8734

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8735
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8739
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8740
  %12 = load i32, i32* %11, align 4, !dbg !8740
  %13 = icmp eq i32 %10, %12, !dbg !8741
  br i1 %13, label %14, label %29, !dbg !8742

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !8743
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !8745
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !8746
  br label %29, !dbg !8747

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8748
  %17 = load i8*, i8** %16, align 4, !dbg !8748
  call void @llvm.dbg.value(metadata i8* %17, metadata !8727, metadata !DIExpression()), !dbg !8732
  %18 = zext i8 %1 to i32, !dbg !8749
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !8751
  %20 = icmp eq i32 %19, 0, !dbg !8752
  br i1 %20, label %21, label %29, !dbg !8753

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8754
  %23 = load i32, i32* %22, align 4, !dbg !8754
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8755
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8756

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8757

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8759

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8729, metadata !DIExpression()), !dbg !8732
  br label %27, !dbg !8760

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %28, metadata !8729, metadata !DIExpression()), !dbg !8732
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !8761
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !8762
  br label %29, !dbg !8762

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8732
  call void @llvm.dbg.value(metadata i32 %30, metadata !8730, metadata !DIExpression()), !dbg !8732
  call void @llvm.dbg.label(metadata !8731), !dbg !8763
  ret i32 %30, !dbg !8764
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #13 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8767, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8768, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i1 %2, metadata !8769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8771
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8772
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8772
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8772
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8770, metadata !DIExpression()), !dbg !8771
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8773
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8774
  ret i32 %8, !dbg !8775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #13 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i1 %2, metadata !8784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8785
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8786
  br i1 %4, label %10, label %5, !dbg !8788

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8789
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8792
  %8 = or i1 %7, %2, !dbg !8793
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8793
  br i1 %2, label %11, label %13, !dbg !8793

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8794

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8795
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8798
  br label %13, !dbg !8799

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8785
  ret i32 %14, !dbg !8800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8801 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8805, metadata !DIExpression()), !dbg !8806
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8807
  %3 = icmp eq %struct._snode* %2, null, !dbg !8807
  ret i1 %3, !dbg !8807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8812, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8813, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8817
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %4 = icmp eq %struct._snode* %3, null, !dbg !8819
  br i1 %4, label %15, label %5, !dbg !8817

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8814, metadata !DIExpression()), !dbg !8816
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8821
  br i1 %6, label %9, label %11, !dbg !8824

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8814, metadata !DIExpression()), !dbg !8816
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8821
  br i1 %8, label %9, label %11, !dbg !8824, !llvm.loop !8825

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8826
  br label %15, !dbg !8826

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8814, metadata !DIExpression()), !dbg !8816
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8819
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8815, metadata !DIExpression()), !dbg !8816
  %14 = icmp eq %struct._snode* %13, null, !dbg !8819
  br i1 %14, label %15, label %7, !dbg !8817, !llvm.loop !8825

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8829 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8833, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8834, metadata !DIExpression()), !dbg !8835
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8836
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8836
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8836
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8837
  %5 = icmp eq %struct._snode* %4, null, !dbg !8837
  br i1 %5, label %6, label %8, !dbg !8836

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8839
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8839
  br label %8, !dbg !8839

8:                                                ; preds = %6, %2
  ret void, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8845, metadata !DIExpression()), !dbg !8846
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8847
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8847
  ret %struct._snode* %3, !dbg !8848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8849 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8853, metadata !DIExpression()), !dbg !8855
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8854, metadata !DIExpression()), !dbg !8855
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8856
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8857
  ret void, !dbg !8858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8859 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8861, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8862, metadata !DIExpression()), !dbg !8863
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8864
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8867 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8869, metadata !DIExpression()), !dbg !8870
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8871
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8871
  ret %struct._snode* %3, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8875, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8876, metadata !DIExpression()), !dbg !8877
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8878
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8881 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8887, metadata !DIExpression()), !dbg !8888
  %4 = icmp eq %struct._snode* %1, null, !dbg !8889
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8891
  br i1 %4, label %6, label %11, !dbg !8892

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8893
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8895
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8895
  br i1 %8, label %9, label %15, !dbg !8893

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8897
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8897
  br label %15, !dbg !8897

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8899
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8901
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8901
  br i1 %13, label %14, label %15, !dbg !8899

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8903
  br label %15, !dbg !8903

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8892
  ret void, !dbg !8892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8905 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8909, metadata !DIExpression()), !dbg !8910
  %2 = icmp eq %struct._snode* %0, null, !dbg !8911
  br i1 %2, label %5, label %3, !dbg !8911

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8911
  br label %5, !dbg !8911

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8911
  ret %struct._snode* %6, !dbg !8911
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8912 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8914, metadata !DIExpression()), !dbg !8915
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8916
  ret %struct._snode* %2, !dbg !8916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8917 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8919, metadata !DIExpression()), !dbg !8920
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8921
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8921
  ret %struct._snode* %3, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8925, metadata !DIExpression()), !dbg !8928
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8929, !range !8930
  call void @llvm.dbg.value(metadata i32 %2, metadata !8926, metadata !DIExpression()), !dbg !8928
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %3, metadata !8927, metadata !DIExpression()), !dbg !8928
  ret i32 %3, !dbg !8932
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8935, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8936, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i8* %1, metadata !8937, metadata !DIExpression()), !dbg !8938
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8939
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8939
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8940
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8940
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8940
  %8 = shl nuw i32 1, %0, !dbg !8941
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8944 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8948, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata i32 %1, metadata !8949, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8950, metadata !DIExpression()), !dbg !8954
  %4 = bitcast i64* %3 to i8*, !dbg !8955
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8955
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8952, metadata !DIExpression()), !dbg !8954
  store i64 70368744177732, i64* %3, align 8, !dbg !8956
  call void @llvm.dbg.value(metadata i64* %3, metadata !8952, metadata !DIExpression(DW_OP_deref)), !dbg !8954
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %5, metadata !8953, metadata !DIExpression()), !dbg !8954
  %6 = icmp eq i32 %5, 0, !dbg !8958
  br i1 %6, label %7, label %8, !dbg !8960

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8961
  br label %8, !dbg !8962

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !8963
  ret void, !dbg !8963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8964 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8966, metadata !DIExpression()), !dbg !8969
  call void @llvm.dbg.value(metadata i8* %0, metadata !8967, metadata !DIExpression()), !dbg !8969
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8970
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8968, metadata !DIExpression()), !dbg !8969
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8971
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8971
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !8972
  ret i32 %5, !dbg !8973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8976, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %1, metadata !8977, metadata !DIExpression()), !dbg !8979
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %3, metadata !8978, metadata !DIExpression()), !dbg !8979
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = sdiv i32 %0, 4, !dbg !8989
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8990
  %6 = add nsw i32 %5, 16, !dbg !8991
  %7 = shl i32 15, %6, !dbg !8992
  %8 = or i32 %7, %2, !dbg !8993
  ret i32 %8, !dbg !8994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9001
  %3 = and i32 %1, 255, !dbg !9002
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9002
  %5 = load volatile i32, i32* %4, align 4, !dbg !9002
  %6 = lshr i32 %1, 16, !dbg !9002
  %7 = xor i32 %6, -1, !dbg !9002
  %8 = and i32 %5, %7, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9007
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9009, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %9, metadata !9006, metadata !DIExpression()) #24, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %9, metadata !9011, metadata !DIExpression()) #24, !dbg !9016
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !9018, !range !3479
  %11 = shl i32 %0, %10, !dbg !9002
  %12 = or i32 %11, %8, !dbg !9002
  store volatile i32 %12, i32* %4, align 4, !dbg !9002
  ret void, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9020 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9024, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9025, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i32 %2, metadata !9026, metadata !DIExpression()), !dbg !9029
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9030
  %5 = icmp eq %struct._snode* %4, null, !dbg !9030
  br i1 %5, label %21, label %6, !dbg !9030

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9032
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !9027, metadata !DIExpression()), !dbg !9029
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9033
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !9033
  %11 = load i32, i32* %10, align 4, !dbg !9033
  %12 = and i32 %11, %2, !dbg !9037
  %13 = icmp eq i32 %12, 0, !dbg !9037
  br i1 %13, label %19, label %14, !dbg !9038

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !9027, metadata !DIExpression()), !dbg !9029
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9039
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9039
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9039
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !9041
  br label %19, !dbg !9042

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9027, metadata !DIExpression()), !dbg !9029
  %20 = icmp eq %struct._snode* %8, null, !dbg !9043
  br i1 %20, label %21, label %6, !dbg !9043

21:                                               ; preds = %19, %3
  ret void, !dbg !9044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9047, metadata !DIExpression()), !dbg !9048
  %2 = and i32 %0, 255, !dbg !9049
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9049
  %4 = load volatile i32, i32* %3, align 4, !dbg !9049
  %5 = lshr i32 %0, 16, !dbg !9049
  %6 = and i32 %4, %5, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %5, metadata !9003, metadata !DIExpression()) #24, !dbg !9050
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !9052, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9050
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9053
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9055, !range !3479
  %9 = lshr i32 %6, %8, !dbg !9056
  ret i32 %9, !dbg !9057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9058 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %1, metadata !9064, metadata !DIExpression()), !dbg !9065
  %3 = shl i32 %1, 16, !dbg !9066
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9066
  store volatile i32 %3, i32* %4, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9068 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9072, metadata !DIExpression()), !dbg !9073
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9074
  %3 = load volatile i32, i32* %2, align 4, !dbg !9074
  ret i32 %3, !dbg !9075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9078, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.value(metadata i32 %1, metadata !9079, metadata !DIExpression()), !dbg !9080
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9081
  store volatile i32 %1, i32* %3, align 4, !dbg !9081
  ret void, !dbg !9082
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9085, metadata !DIExpression()), !dbg !9086
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9087
  %3 = load volatile i32, i32* %2, align 4, !dbg !9087
  ret i32 %3, !dbg !9088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !9089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9093, metadata !DIExpression()), !dbg !9095
  call void @llvm.dbg.value(metadata i32* %1, metadata !9094, metadata !DIExpression()), !dbg !9095
  %3 = and i32 %0, 131072, !dbg !9096
  %4 = icmp eq i32 %3, 0, !dbg !9098
  br i1 %4, label %22, label %5, !dbg !9099

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9100
  %6 = and i32 %0, 2, !dbg !9102
  %7 = icmp eq i32 %6, 0, !dbg !9104
  br i1 %7, label %11, label %8, !dbg !9105

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9106
  %10 = icmp eq i32 %9, 0, !dbg !9106
  br i1 %10, label %33, label %11, !dbg !9109

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9110
  store i32 %12, i32* %1, align 4, !dbg !9110
  %13 = and i32 %0, 16, !dbg !9111
  %14 = icmp eq i32 %13, 0, !dbg !9113
  br i1 %14, label %17, label %15, !dbg !9114

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9115
  br label %31, !dbg !9117

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9118
  %19 = icmp eq i32 %18, 0, !dbg !9120
  br i1 %19, label %33, label %20, !dbg !9121

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9122
  br label %31, !dbg !9124

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9125
  %24 = icmp eq i32 %23, 0, !dbg !9127
  br i1 %24, label %31, label %25, !dbg !9128

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9129
  %27 = icmp eq i32 %26, 0, !dbg !9132
  br i1 %27, label %28, label %31, !dbg !9133

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9134
  br label %33, !dbg !9135

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9095
  ret i32 %34, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9140, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %3, metadata !9143, metadata !DIExpression()), !dbg !9151
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9152
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9152
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9144, metadata !DIExpression()), !dbg !9151
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9153
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9153
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9153
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9145, metadata !DIExpression()), !dbg !9151
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %11, metadata !9146, metadata !DIExpression()), !dbg !9151
  %12 = and i32 %2, 48, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %12, metadata !9147, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9148, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9149, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %2, metadata !9150, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9151
  %13 = lshr i32 %2, 6, !dbg !9156
  %14 = and i32 %13, 1, !dbg !9156
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9157
  %15 = lshr i32 %2, 7, !dbg !9158
  %16 = and i32 %15, 3, !dbg !9158
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9159
  %17 = lshr i32 %2, 9, !dbg !9160
  %18 = and i32 %17, 3, !dbg !9160
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9161
  %19 = icmp eq i32 %12, 32, !dbg !9162
  br i1 %19, label %20, label %24, !dbg !9164

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9165
  br i1 %21, label %22, label %23, !dbg !9168

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9169
  br label %24, !dbg !9171

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9172
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9174
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9175
  ret void, !dbg !9176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9179, metadata !DIExpression()), !dbg !9181
  %2 = shl nuw i32 1, %0, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %2, metadata !9180, metadata !DIExpression()), !dbg !9181
  ret i32 %2, !dbg !9183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9188, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %1, metadata !9189, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i32 %2, metadata !9190, metadata !DIExpression()), !dbg !9191
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9192
  %5 = load volatile i32, i32* %4, align 4, !dbg !9192
  %6 = xor i32 %1, -1, !dbg !9192
  %7 = and i32 %5, %6, !dbg !9192
  %8 = mul i32 %2, %1, !dbg !9192
  %9 = or i32 %7, %8, !dbg !9192
  store volatile i32 %9, i32* %4, align 4, !dbg !9192
  ret void, !dbg !9193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9194 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9196, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %1, metadata !9197, metadata !DIExpression()), !dbg !9199
  call void @llvm.dbg.value(metadata i32 %2, metadata !9198, metadata !DIExpression()), !dbg !9199
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9200
  %5 = load volatile i32, i32* %4, align 4, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9201
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9203, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9204
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9206, !range !3479
  %8 = shl nuw nsw i32 %7, 1, !dbg !9200
  %9 = shl i32 3, %8, !dbg !9200
  %10 = xor i32 %9, -1, !dbg !9200
  %11 = and i32 %5, %10, !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9209
  %12 = shl i32 %2, %8, !dbg !9200
  %13 = or i32 %11, %12, !dbg !9200
  store volatile i32 %13, i32* %4, align 4, !dbg !9200
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9212 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9214, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %1, metadata !9215, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 %2, metadata !9216, metadata !DIExpression()), !dbg !9217
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9218
  %5 = load volatile i32, i32* %4, align 4, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9219
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9221, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9219
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9222
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9224, !range !3479
  %8 = shl nuw nsw i32 %7, 1, !dbg !9218
  %9 = shl i32 3, %8, !dbg !9218
  %10 = xor i32 %9, -1, !dbg !9218
  %11 = and i32 %5, %10, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9227
  %12 = shl i32 %2, %8, !dbg !9218
  %13 = or i32 %11, %12, !dbg !9218
  store volatile i32 %13, i32* %4, align 4, !dbg !9218
  ret void, !dbg !9229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9230 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9232, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %1, metadata !9233, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.value(metadata i32 %2, metadata !9234, metadata !DIExpression()), !dbg !9235
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9236
  %5 = load volatile i32, i32* %4, align 4, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9237
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9239, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9240
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9242, !range !3479
  %8 = shl nuw nsw i32 %7, 2, !dbg !9236
  %9 = shl i32 15, %8, !dbg !9236
  %10 = xor i32 %9, -1, !dbg !9236
  %11 = and i32 %5, %10, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9243
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9245
  %12 = shl i32 %2, %8, !dbg !9236
  %13 = or i32 %11, %12, !dbg !9236
  store volatile i32 %13, i32* %4, align 4, !dbg !9236
  ret void, !dbg !9247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9248 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9250, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata i32 %1, metadata !9251, metadata !DIExpression()), !dbg !9253
  call void @llvm.dbg.value(metadata i32 %2, metadata !9252, metadata !DIExpression()), !dbg !9253
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9254
  %5 = load volatile i32, i32* %4, align 4, !dbg !9254
  %6 = lshr i32 %1, 8, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9255
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !9257, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9255
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9258
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !9260, !range !3479
  %9 = shl nuw nsw i32 %8, 2, !dbg !9254
  %10 = shl i32 15, %9, !dbg !9254
  %11 = xor i32 %10, -1, !dbg !9254
  %12 = and i32 %5, %11, !dbg !9254
  call void @llvm.dbg.value(metadata i32 %6, metadata !9003, metadata !DIExpression()) #24, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %7, metadata !9006, metadata !DIExpression()) #24, !dbg !9261
  call void @llvm.dbg.value(metadata i32 %7, metadata !9011, metadata !DIExpression()) #24, !dbg !9263
  %13 = shl i32 %2, %9, !dbg !9254
  %14 = or i32 %12, %13, !dbg !9254
  store volatile i32 %14, i32* %4, align 4, !dbg !9254
  ret void, !dbg !9265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9266 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9268, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %1, metadata !9269, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %2, metadata !9270, metadata !DIExpression()), !dbg !9271
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9272
  %5 = load volatile i32, i32* %4, align 4, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9273
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !9275, !srcloc !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9276
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !9278, !range !3479
  %8 = shl nuw nsw i32 %7, 1, !dbg !9272
  %9 = shl i32 3, %8, !dbg !9272
  %10 = xor i32 %9, -1, !dbg !9272
  %11 = and i32 %5, %10, !dbg !9272
  call void @llvm.dbg.value(metadata i32 %1, metadata !9003, metadata !DIExpression()) #24, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %6, metadata !9006, metadata !DIExpression()) #24, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %6, metadata !9011, metadata !DIExpression()) #24, !dbg !9281
  %12 = shl i32 %2, %8, !dbg !9272
  %13 = or i32 %11, %12, !dbg !9272
  store volatile i32 %13, i32* %4, align 4, !dbg !9272
  ret void, !dbg !9283
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9286, metadata !DIExpression()), !dbg !9289
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9290
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9290
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9290
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9287, metadata !DIExpression()), !dbg !9289
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9291
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9292
  %6 = tail call fastcc zeroext i1 @device_is_ready.71() #26, !dbg !9293
  br i1 %6, label %7, label %11, !dbg !9295

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9296
  call void @llvm.dbg.value(metadata i32 %8, metadata !9288, metadata !DIExpression()), !dbg !9289
  %9 = icmp slt i32 %8, 0, !dbg !9297
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9299
  br label %11, !dbg !9299

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9289
  ret i32 %12, !dbg !9300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71() unnamed_addr #1 !dbg !9301 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9305, metadata !DIExpression()), !dbg !9306
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9307, !srcloc !9309
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72() #26, !dbg !9310
  ret i1 %1, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9316, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i8 1, metadata !9317, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 0, metadata !9319, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9320, metadata !DIExpression()), !dbg !9321
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9322
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9322
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9322
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9318, metadata !DIExpression()), !dbg !9321
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9323
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9326
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %7, metadata !9319, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata i32 %7, metadata !9319, metadata !DIExpression()), !dbg !9321
  ret i32 %7, !dbg !9328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72() unnamed_addr #1 !dbg !9329 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9331, metadata !DIExpression()), !dbg !9332
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9333
  ret i1 %1, !dbg !9334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9335 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9339, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %1, metadata !9340, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %2, metadata !9341, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 %3, metadata !9342, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 0, metadata !9343, metadata !DIExpression()), !dbg !9347
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9348
  %5 = icmp eq i32 %3, 17, !dbg !9349
  br i1 %5, label %6, label %14, !dbg !9350

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %7, metadata !9344, metadata !DIExpression()), !dbg !9352
  %8 = icmp eq i32 %7, 0, !dbg !9353
  %9 = shl nuw i32 1, %1, !dbg !9355
  br i1 %8, label %12, label %10, !dbg !9356

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9357
  br label %14, !dbg !9359

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9360
  br label %14, !dbg !9363

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9364
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9367, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata i8* %1, metadata !9368, metadata !DIExpression()), !dbg !9371
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9372
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9372
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9372
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9369, metadata !DIExpression()), !dbg !9371
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9373
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9373
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9375
  %9 = icmp eq i32 %8, 0, !dbg !9375
  br i1 %9, label %12, label %10, !dbg !9376

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9377
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9379
  br label %12, !dbg !9380

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9381
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9383
  %15 = icmp eq i32 %14, 0, !dbg !9383
  br i1 %15, label %19, label %16, !dbg !9384

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9385
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9386
  store i8 %18, i8* %1, align 1, !dbg !9387
  br label %19, !dbg !9388

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9371
  ret i32 %20, !dbg !9389
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9390 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9392, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i8 %1, metadata !9393, metadata !DIExpression()), !dbg !9396
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9397
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9397
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9394, metadata !DIExpression()), !dbg !9396
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9398

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9399
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9402
  %10 = icmp eq i32 %9, 0, !dbg !9402
  br i1 %10, label %18, label %11, !dbg !9403

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9404, !srcloc !9411
  call void @llvm.dbg.value(metadata i32 undef, metadata !9407, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 undef, metadata !9408, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 undef, metadata !9395, metadata !DIExpression()), !dbg !9396
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9413
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9415
  %15 = icmp eq i32 %14, 0, !dbg !9415
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9404
  br i1 %15, label %17, label %19, !dbg !9416

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9407, metadata !DIExpression()) #24, !dbg !9412
  call void @llvm.dbg.value(metadata i32 %16, metadata !9395, metadata !DIExpression()), !dbg !9396
  call void @llvm.dbg.value(metadata i32 undef, metadata !9417, metadata !DIExpression()) #24, !dbg !9420
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !9422, !srcloc !9423
  br label %18, !dbg !9424

18:                                               ; preds = %17, %7
  br label %7, !dbg !9399, !llvm.loop !9425

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9404
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9427
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %20, metadata !9417, metadata !DIExpression()) #24, !dbg !9429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !9431, !srcloc !9423
  ret void, !dbg !9432
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9433 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9435, metadata !DIExpression()), !dbg !9438
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9439
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9439
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9439
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9436, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata i32 0, metadata !9437, metadata !DIExpression()), !dbg !9438
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9440
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9440
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9442
  %8 = icmp ne i32 %7, 0, !dbg !9442
  %9 = zext i1 %8 to i32, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %9, metadata !9437, metadata !DIExpression()), !dbg !9438
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9444
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9446
  %12 = icmp eq i32 %11, 0, !dbg !9446
  %13 = or i32 %9, 2, !dbg !9447
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %14, metadata !9437, metadata !DIExpression()), !dbg !9438
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9448
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9450
  %17 = icmp eq i32 %16, 0, !dbg !9450
  %18 = or i32 %14, 4, !dbg !9451
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %19, metadata !9437, metadata !DIExpression()), !dbg !9438
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9452
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9454
  %22 = icmp eq i32 %21, 0, !dbg !9454
  %23 = or i32 %19, 8, !dbg !9455
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9455
  call void @llvm.dbg.value(metadata i32 %24, metadata !9437, metadata !DIExpression()), !dbg !9438
  %25 = and i32 %24, 8, !dbg !9456
  %26 = icmp eq i32 %25, 0, !dbg !9456
  br i1 %26, label %29, label %27, !dbg !9458

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9459
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9461
  br label %29, !dbg !9462

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9463
  %31 = icmp eq i32 %30, 0, !dbg !9463
  br i1 %31, label %34, label %32, !dbg !9465

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9466
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9468
  br label %34, !dbg !9469

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9470
  %36 = icmp eq i32 %35, 0, !dbg !9470
  br i1 %36, label %39, label %37, !dbg !9472

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9473
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9475
  br label %39, !dbg !9476

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9477
  %41 = icmp eq i32 %40, 0, !dbg !9477
  br i1 %41, label %44, label %42, !dbg !9479

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9480
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9482
  br label %44, !dbg !9483

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9484
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9485
  ret i32 %24, !dbg !9486
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9489, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9490, metadata !DIExpression()), !dbg !9498
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9499
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9499
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9491, metadata !DIExpression()), !dbg !9498
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9500
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9500
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9492, metadata !DIExpression()), !dbg !9498
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9501
  %10 = load i8, i8* %9, align 4, !dbg !9501
  %11 = zext i8 %10 to i32, !dbg !9502
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %12, metadata !9494, metadata !DIExpression()), !dbg !9498
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9504
  %14 = load i8, i8* %13, align 1, !dbg !9504
  %15 = zext i8 %14 to i32, !dbg !9505
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9506
  call void @llvm.dbg.value(metadata i32 %16, metadata !9495, metadata !DIExpression()), !dbg !9498
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9507
  %18 = load i8, i8* %17, align 2, !dbg !9507
  %19 = zext i8 %18 to i32, !dbg !9508
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9509
  call void @llvm.dbg.value(metadata i32 %20, metadata !9496, metadata !DIExpression()), !dbg !9498
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9510
  %22 = load i8, i8* %21, align 1, !dbg !9510
  %23 = zext i8 %22 to i32, !dbg !9511
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %24, metadata !9497, metadata !DIExpression()), !dbg !9498
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9513

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9515
  br i1 %26, label %69, label %27, !dbg !9517

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9518

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9519
  br i1 %29, label %65, label %30, !dbg !9519

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9521
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9498
  br i1 %31, label %38, label %34, !dbg !9523

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9524
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9524

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9527
  br i1 %37, label %38, label %69, !dbg !9528

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9529
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9530
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9531
  %41 = icmp eq i32 %12, %40, !dbg !9533
  br i1 %41, label %43, label %42, !dbg !9534

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9535
  br label %43, !dbg !9537

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9538
  %45 = icmp eq i32 %16, %44, !dbg !9540
  br i1 %45, label %47, label %46, !dbg !9541

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9542
  br label %47, !dbg !9544

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9545
  %49 = icmp eq i32 %20, %48, !dbg !9547
  br i1 %49, label %51, label %50, !dbg !9548

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9549
  br label %51, !dbg !9551

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9552
  %53 = icmp eq i32 %24, %52, !dbg !9554
  br i1 %53, label %55, label %54, !dbg !9555

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9556
  br label %55, !dbg !9558

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9559
  %57 = load i32, i32* %56, align 4, !dbg !9559
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9561
  %59 = load i32, i32* %58, align 4, !dbg !9561
  %60 = icmp eq i32 %57, %59, !dbg !9562
  br i1 %60, label %63, label %61, !dbg !9563

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9564
  %62 = load i32, i32* %56, align 4, !dbg !9566
  store i32 %62, i32* %58, align 4, !dbg !9567
  br label %63, !dbg !9568

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9569
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9570
  br label %69, !dbg !9571

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9519
  %67 = and i8 %66, 1, !dbg !9519
  %68 = icmp eq i8 %67, 0, !dbg !9519
  br i1 %68, label %30, label %69, !dbg !9519

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9498
  ret i32 %70, !dbg !9572
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9575, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9576, metadata !DIExpression()), !dbg !9578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9579
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9579
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9577, metadata !DIExpression()), !dbg !9578
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9580
  %7 = load i32, i32* %6, align 4, !dbg !9580
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9581
  store i32 %7, i32* %8, align 4, !dbg !9582
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9583, !range !9584
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9585
  %11 = trunc i32 %10 to i8, !dbg !9585
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9586
  store i8 %11, i8* %12, align 4, !dbg !9587
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9588, !range !9589
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9590
  %15 = trunc i32 %14 to i8, !dbg !9590
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9591
  store i8 %15, i8* %16, align 1, !dbg !9592
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9593
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9594, !range !9584
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9595
  %20 = trunc i32 %19 to i8, !dbg !9595
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9596
  store i8 %20, i8* %21, align 2, !dbg !9597
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9598, !range !9599
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9600
  %24 = trunc i32 %23 to i8, !dbg !9600
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9601
  store i8 %24, i8* %25, align 1, !dbg !9602
  ret i32 0, !dbg !9603
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9604 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9608, metadata !DIExpression()), !dbg !9610
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9611
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9611
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9611
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9609, metadata !DIExpression()), !dbg !9610
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9612
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9612
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9613
  ret i32 %7, !dbg !9614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = icmp eq i32 %0, 1024, !dbg !9621
  %3 = select i1 %2, i32 2, i32 0, !dbg !9621
  %4 = icmp eq i32 %0, 1536, !dbg !9621
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9621
  ret i32 %5, !dbg !9622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9623 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9625, metadata !DIExpression()), !dbg !9627
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9628
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9628
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9628
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9626, metadata !DIExpression()), !dbg !9627
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9629
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9629
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9630
  ret i32 %7, !dbg !9631
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9636, metadata !DIExpression()), !dbg !9637
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9638
  %3 = icmp ult i32 %2, 4, !dbg !9638
  br i1 %3, label %4, label %7, !dbg !9638

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9638
  %6 = load i32, i32* %5, align 4, !dbg !9638
  br label %7, !dbg !9638

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9639
  ret i32 %8, !dbg !9641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9644, metadata !DIExpression()), !dbg !9646
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9647
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9647
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9647
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9645, metadata !DIExpression()), !dbg !9646
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9648
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9648
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9649
  ret i32 %7, !dbg !9650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9656, metadata !DIExpression()), !dbg !9657
  %3 = icmp eq i32 %0, 4096, !dbg !9658
  %4 = icmp eq i32 %1, 0, !dbg !9658
  %5 = select i1 %4, i32 4, i32 3, !dbg !9658
  %6 = select i1 %4, i32 3, i32 2, !dbg !9658
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9658
  ret i32 %7, !dbg !9659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9662, metadata !DIExpression()), !dbg !9664
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9665
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9665
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9663, metadata !DIExpression()), !dbg !9664
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9666
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9666
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9667
  ret i32 %7, !dbg !9668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  %2 = icmp eq i32 %0, 768, !dbg !9675
  %3 = zext i1 %2 to i32, !dbg !9674
  ret i32 %3, !dbg !9677
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9678 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9685
  %3 = load volatile i32, i32* %2, align 4, !dbg !9685
  %4 = and i32 %3, 768, !dbg !9685
  ret i32 %4, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9689, metadata !DIExpression()), !dbg !9690
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9691
  %3 = load volatile i32, i32* %2, align 4, !dbg !9691
  %4 = and i32 %3, 4096, !dbg !9691
  ret i32 %4, !dbg !9692
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9693 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9695, metadata !DIExpression()), !dbg !9696
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9697
  %3 = load volatile i32, i32* %2, align 4, !dbg !9697
  %4 = and i32 %3, 12288, !dbg !9697
  ret i32 %4, !dbg !9698
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9699 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9701, metadata !DIExpression()), !dbg !9702
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9703
  %3 = load volatile i32, i32* %2, align 4, !dbg !9703
  %4 = and i32 %3, 1536, !dbg !9703
  ret i32 %4, !dbg !9704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9709, metadata !DIExpression()), !dbg !9710
  %2 = icmp eq i32 %0, 2, !dbg !9711
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9711
  %4 = icmp eq i32 %0, 1, !dbg !9711
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9711
  ret i32 %5, !dbg !9712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9717, metadata !DIExpression()), !dbg !9718
  %2 = icmp ult i32 %0, 3, !dbg !9719
  br i1 %2, label %3, label %6, !dbg !9719

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9719
  %5 = load i32, i32* %4, align 4, !dbg !9719
  br label %6, !dbg !9719

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9720
  ret i32 %7, !dbg !9722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9727, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.value(metadata i32 %1, metadata !9728, metadata !DIExpression()), !dbg !9729
  %3 = icmp eq i32 %0, 4, !dbg !9730
  %4 = icmp eq i32 %1, 0, !dbg !9730
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9730
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9730
  ret i32 %6, !dbg !9731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9736, metadata !DIExpression()), !dbg !9737
  %2 = icmp eq i32 %0, 1, !dbg !9738
  %3 = select i1 %2, i32 768, i32 0, !dbg !9737
  ret i32 %3, !dbg !9740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9745, metadata !DIExpression()), !dbg !9746
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9747
  %3 = load volatile i32, i32* %2, align 4, !dbg !9747
  %4 = and i32 %3, -8193, !dbg !9747
  store volatile i32 %4, i32* %2, align 4, !dbg !9747
  ret void, !dbg !9748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.value(metadata i32 %1, metadata !9754, metadata !DIExpression()), !dbg !9756
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9757
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9757
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9755, metadata !DIExpression()), !dbg !9756
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9758
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9758
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9759
  ret void, !dbg !9760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9763, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata i32 %1, metadata !9764, metadata !DIExpression()), !dbg !9766
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9767
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9767
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9767
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9765, metadata !DIExpression()), !dbg !9766
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9768
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9768
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9776
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9777
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9777
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9775, metadata !DIExpression()), !dbg !9776
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9778
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9778
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9786
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9787
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9787
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9785, metadata !DIExpression()), !dbg !9786
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9788
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9788
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9789
  ret void, !dbg !9790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9791 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9793, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.value(metadata i32 %1, metadata !9794, metadata !DIExpression()), !dbg !9798
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9799
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9799
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9799
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9795, metadata !DIExpression()), !dbg !9798
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9800
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9800
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9800
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9796, metadata !DIExpression()), !dbg !9798
  %10 = bitcast i32* %3 to i8*, !dbg !9801
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9801
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9802
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9802
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9806
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9806
  %15 = load i8*, i8** %14, align 4, !dbg !9806
  call void @llvm.dbg.value(metadata i32* %3, metadata !9797, metadata !DIExpression(DW_OP_deref)), !dbg !9798
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9807
  %17 = icmp slt i32 %16, 0, !dbg !9808
  br i1 %17, label %23, label %18, !dbg !9809

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9810
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9810
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9811
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9812
  %22 = load i32, i32* %3, align 4, !dbg !9813
  call void @llvm.dbg.value(metadata i32 %22, metadata !9797, metadata !DIExpression()), !dbg !9798
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9814
  br label %23, !dbg !9815

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !9815
  ret void, !dbg !9815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9818, metadata !DIExpression()), !dbg !9819
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9820
  %3 = load volatile i32, i32* %2, align 4, !dbg !9820
  %4 = or i32 %3, 8192, !dbg !9820
  store volatile i32 %4, i32* %2, align 4, !dbg !9820
  ret void, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9824, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i8* %1, metadata !9825, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.value(metadata i32* %2, metadata !9826, metadata !DIExpression()), !dbg !9828
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9829
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9829
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9827, metadata !DIExpression()), !dbg !9828
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9830
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9830
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9832
  br i1 %9, label %12, label %10, !dbg !9833

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !9834
  br label %12, !dbg !9835

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9828
  ret i32 %13, !dbg !9836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9837 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9841, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 0, metadata !9842, metadata !DIExpression()), !dbg !9843
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9844
  %3 = load volatile i32, i32* %2, align 4, !dbg !9844
  %4 = and i32 %3, -32769, !dbg !9844
  store volatile i32 %4, i32* %2, align 4, !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9850, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 0, metadata !9852, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9854
  %4 = zext i32 %1 to i64, !dbg !9855
  %5 = mul nuw nsw i64 %4, 25, !dbg !9855
  %6 = zext i32 %2 to i64, !dbg !9855
  %7 = shl nuw nsw i64 %6, 2, !dbg !9855
  %8 = udiv i64 %5, %7, !dbg !9855
  %9 = trunc i64 %8 to i32, !dbg !9855
  %10 = udiv i32 %9, 100, !dbg !9855
  %11 = shl nuw nsw i32 %10, 4, !dbg !9855
  %12 = mul i32 %10, -100, !dbg !9855
  %13 = add i32 %12, %9, !dbg !9855
  %14 = shl i32 %13, 4, !dbg !9855
  %15 = add i32 %14, 50, !dbg !9855
  %16 = udiv i32 %15, 100, !dbg !9855
  %17 = and i32 %16, 240, !dbg !9855
  %18 = add nuw nsw i32 %17, %11, !dbg !9855
  %19 = and i32 %16, 15, !dbg !9855
  %20 = and i32 %18, 65520, !dbg !9858
  %21 = or i32 %20, %19, !dbg !9858
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9859
  store volatile i32 %21, i32* %22, align 4, !dbg !9860
  ret void, !dbg !9861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %1, metadata !9865, metadata !DIExpression()), !dbg !9866
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9867
  %4 = load volatile i32, i32* %3, align 4, !dbg !9867
  %5 = and i32 %4, -769, !dbg !9867
  %6 = or i32 %5, %1, !dbg !9867
  store volatile i32 %6, i32* %3, align 4, !dbg !9867
  ret void, !dbg !9868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9869 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9871, metadata !DIExpression()), !dbg !9873
  call void @llvm.dbg.value(metadata i32 %1, metadata !9872, metadata !DIExpression()), !dbg !9873
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9874
  %4 = load volatile i32, i32* %3, align 4, !dbg !9874
  %5 = and i32 %4, -4097, !dbg !9874
  %6 = or i32 %5, %1, !dbg !9874
  store volatile i32 %6, i32* %3, align 4, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9878, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 %1, metadata !9879, metadata !DIExpression()), !dbg !9880
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9881
  %4 = load volatile i32, i32* %3, align 4, !dbg !9881
  %5 = and i32 %4, -12289, !dbg !9881
  %6 = or i32 %5, %1, !dbg !9881
  store volatile i32 %6, i32* %3, align 4, !dbg !9881
  ret void, !dbg !9882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9883 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %1, metadata !9886, metadata !DIExpression()), !dbg !9887
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9888
  %4 = load volatile i32, i32* %3, align 4, !dbg !9888
  %5 = and i32 %4, -1537, !dbg !9888
  %6 = or i32 %5, %1, !dbg !9888
  store volatile i32 %6, i32* %3, align 4, !dbg !9888
  ret void, !dbg !9889
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9890 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9892, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9894
  %3 = load volatile i32, i32* %2, align 4, !dbg !9894
  %4 = lshr i32 %3, 3, !dbg !9895
  %5 = and i32 %4, 1, !dbg !9895
  ret i32 %5, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9897 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9899, metadata !DIExpression()), !dbg !9900
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9901
  %3 = load volatile i32, i32* %2, align 4, !dbg !9901
  %4 = and i32 %3, 1, !dbg !9901
  ret i32 %4, !dbg !9902
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9903 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9905, metadata !DIExpression()), !dbg !9906
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9907
  %3 = load volatile i32, i32* %2, align 4, !dbg !9907
  %4 = lshr i32 %3, 1, !dbg !9908
  %5 = and i32 %4, 1, !dbg !9908
  ret i32 %5, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9912, metadata !DIExpression()), !dbg !9913
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9914
  %3 = load volatile i32, i32* %2, align 4, !dbg !9914
  %4 = lshr i32 %3, 8, !dbg !9915
  %5 = and i32 %4, 1, !dbg !9915
  ret i32 %5, !dbg !9916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9919, metadata !DIExpression()), !dbg !9920
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9921
  store volatile i32 -257, i32* %2, align 4, !dbg !9921
  ret void, !dbg !9922
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9923 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9925, metadata !DIExpression()), !dbg !9927
  %3 = bitcast i32* %2 to i8*, !dbg !9928
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9928
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9926, metadata !DIExpression()), !dbg !9929
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9930
  %5 = load volatile i32, i32* %4, align 4, !dbg !9930
  store volatile i32 %5, i32* %2, align 4, !dbg !9931
  %6 = load volatile i32, i32* %2, align 4, !dbg !9932
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9933
  %8 = load volatile i32, i32* %7, align 4, !dbg !9933
  store volatile i32 %8, i32* %2, align 4, !dbg !9934
  %9 = load volatile i32, i32* %2, align 4, !dbg !9935
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9936
  ret void, !dbg !9936
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9937 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9939, metadata !DIExpression()), !dbg !9941
  %3 = bitcast i32* %2 to i8*, !dbg !9942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9942
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9940, metadata !DIExpression()), !dbg !9943
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9944
  %5 = load volatile i32, i32* %4, align 4, !dbg !9944
  store volatile i32 %5, i32* %2, align 4, !dbg !9945
  %6 = load volatile i32, i32* %2, align 4, !dbg !9946
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9947
  %8 = load volatile i32, i32* %7, align 4, !dbg !9947
  store volatile i32 %8, i32* %2, align 4, !dbg !9948
  %9 = load volatile i32, i32* %2, align 4, !dbg !9949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9950
  ret void, !dbg !9950
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9951 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9953, metadata !DIExpression()), !dbg !9955
  %3 = bitcast i32* %2 to i8*, !dbg !9956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9956
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9954, metadata !DIExpression()), !dbg !9957
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9958
  %5 = load volatile i32, i32* %4, align 4, !dbg !9958
  store volatile i32 %5, i32* %2, align 4, !dbg !9959
  %6 = load volatile i32, i32* %2, align 4, !dbg !9960
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9961
  %8 = load volatile i32, i32* %7, align 4, !dbg !9961
  store volatile i32 %8, i32* %2, align 4, !dbg !9962
  %9 = load volatile i32, i32* %2, align 4, !dbg !9963
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9964
  ret void, !dbg !9964
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9965 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9967, metadata !DIExpression()), !dbg !9969
  %3 = bitcast i32* %2 to i8*, !dbg !9970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9968, metadata !DIExpression()), !dbg !9971
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9972
  %5 = load volatile i32, i32* %4, align 4, !dbg !9972
  store volatile i32 %5, i32* %2, align 4, !dbg !9973
  %6 = load volatile i32, i32* %2, align 4, !dbg !9974
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9975
  %8 = load volatile i32, i32* %7, align 4, !dbg !9975
  store volatile i32 %8, i32* %2, align 4, !dbg !9976
  %9 = load volatile i32, i32* %2, align 4, !dbg !9977
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9978
  ret void, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9981, metadata !DIExpression()), !dbg !9982
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9983
  %3 = load volatile i32, i32* %2, align 4, !dbg !9983
  %4 = lshr i32 %3, 7, !dbg !9984
  %5 = and i32 %4, 1, !dbg !9984
  ret i32 %5, !dbg !9985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9990, metadata !DIExpression()), !dbg !9992
  call void @llvm.dbg.value(metadata i8 %1, metadata !9991, metadata !DIExpression()), !dbg !9992
  %3 = zext i8 %1 to i32, !dbg !9993
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9994
  store volatile i32 %3, i32* %4, align 4, !dbg !9995
  ret void, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9999, metadata !DIExpression()), !dbg !10000
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10001
  %3 = load volatile i32, i32* %2, align 4, !dbg !10001
  %4 = lshr i32 %3, 5, !dbg !10002
  %5 = and i32 %4, 1, !dbg !10002
  ret i32 %5, !dbg !10003
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10009
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10010
  %3 = load volatile i32, i32* %2, align 4, !dbg !10010
  %4 = trunc i32 %3 to i8, !dbg !10011
  ret i8 %4, !dbg !10012
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10015, metadata !DIExpression()), !dbg !10021
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10022
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10022
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10022
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10016, metadata !DIExpression()), !dbg !10021
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10023
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10023
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10017, metadata !DIExpression()), !dbg !10021
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10024
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10025
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10025
  %10 = tail call fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %9) #26, !dbg !10027
  br i1 %10, label %11, label %49, !dbg !10028

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10029
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10030
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10030
  %15 = load i8*, i8** %14, align 4, !dbg !10030
  %16 = tail call fastcc i32 @clock_control_on.78(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %16, metadata !10020, metadata !DIExpression()), !dbg !10021
  %17 = icmp eq i32 %16, 0, !dbg !10032
  br i1 %17, label %18, label %49, !dbg !10034

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10035
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10035
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %21, metadata !10020, metadata !DIExpression()), !dbg !10021
  %22 = icmp slt i32 %21, 0, !dbg !10037
  br i1 %22, label %49, label %23, !dbg !10039

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10040
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10040
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10041
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10042
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10043
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10044
  %28 = load i32, i32* %27, align 4, !dbg !10044
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10046

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 4096, metadata !10019, metadata !DIExpression()), !dbg !10021
  br label %31, !dbg !10047

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10018, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 0, metadata !10019, metadata !DIExpression()), !dbg !10021
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10050
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10050
  call void @llvm.dbg.value(metadata i32 %33, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata i32 %32, metadata !10018, metadata !DIExpression()), !dbg !10021
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10051
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10052
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10053
  %36 = load i8, i8* %35, align 4, !dbg !10053, !range !6646
  %37 = icmp eq i8 %36, 0, !dbg !10053
  br i1 %37, label %39, label %38, !dbg !10055

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10056
  br label %39, !dbg !10058

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10059
  %41 = load i32, i32* %40, align 4, !dbg !10059
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10060
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10061
  %43 = load i8, i8* %42, align 4, !dbg !10061, !range !6646
  %44 = icmp eq i8 %43, 0, !dbg !10061
  br i1 %44, label %47, label %45, !dbg !10063

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10064
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10066
  br label %47, !dbg !10067

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10068
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10069
  br label %49, !dbg !10070

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10021
  ret i32 %50, !dbg !10071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10072 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10076, metadata !DIExpression()), !dbg !10080
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10081
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10081
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10081
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10077, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10078, metadata !DIExpression()), !dbg !10080
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10082
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.77(%struct.device* noundef %0) unnamed_addr #1 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10089, metadata !DIExpression()), !dbg !10090
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10091, !srcloc !10093
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) #26, !dbg !10094
  ret i1 %2, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.78(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10098, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i8* %1, metadata !10099, metadata !DIExpression()), !dbg !10101
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10102
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10102
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10102
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10100, metadata !DIExpression()), !dbg !10101
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10103
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10103
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10104
  ret i32 %8, !dbg !10105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10106 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10110, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.value(metadata i8 0, metadata !10111, metadata !DIExpression()), !dbg !10114
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10115
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10113, metadata !DIExpression(DW_OP_deref)), !dbg !10114
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %4, metadata !10112, metadata !DIExpression()), !dbg !10114
  %5 = icmp slt i32 %4, 0, !dbg !10117
  br i1 %5, label %9, label %6, !dbg !10119

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10120
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10113, metadata !DIExpression()), !dbg !10114
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10121
  br label %9, !dbg !10122

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !10123
  ret i32 %10, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata i32 12, metadata !10127, metadata !DIExpression()), !dbg !10130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10131

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10132, metadata !DIExpression()) #24, !dbg !10138
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #24, !dbg !10141, !srcloc !10142
  call void @llvm.dbg.value(metadata i32 %4, metadata !10137, metadata !DIExpression()) #24, !dbg !10138
  %5 = or i32 %4, 12, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %5, metadata !10128, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i32 %5, metadata !10145, metadata !DIExpression()) #24, !dbg !10152
  call void @llvm.dbg.value(metadata i32* %2, metadata !10150, metadata !DIExpression()) #24, !dbg !10152
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #24, !dbg !10154, !srcloc !10155
  call void @llvm.dbg.value(metadata i32 %6, metadata !10151, metadata !DIExpression()) #24, !dbg !10152
  %7 = icmp eq i32 %6, 0, !dbg !10131
  br i1 %7, label %8, label %3, !dbg !10143, !llvm.loop !10156

8:                                                ; preds = %3
  ret void, !dbg !10157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10160, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %1, metadata !10161, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 %2, metadata !10162, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.value(metadata i32 0, metadata !10163, metadata !DIExpression()), !dbg !10164
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10165
  %5 = load volatile i32, i32* %4, align 4, !dbg !10165
  %6 = and i32 %5, -5633, !dbg !10165
  %7 = or i32 %2, %1, !dbg !10165
  %8 = or i32 %7, %6, !dbg !10165
  store volatile i32 %8, i32* %4, align 4, !dbg !10165
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10166
  %10 = load volatile i32, i32* %9, align 4, !dbg !10166
  %11 = and i32 %10, -12289, !dbg !10166
  store volatile i32 %11, i32* %9, align 4, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10170, metadata !DIExpression()), !dbg !10171
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10172
  %3 = load volatile i32, i32* %2, align 4, !dbg !10172
  %4 = or i32 %3, 8, !dbg !10172
  store volatile i32 %4, i32* %2, align 4, !dbg !10172
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10174 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10178, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i32 0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10182
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10182
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10183
  %5 = load i8, i8* %4, align 4, !dbg !10183
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10184
  ret i32 %6, !dbg !10185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.79(%struct.device* noundef %0) unnamed_addr #1 !dbg !10186 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10188, metadata !DIExpression()), !dbg !10189
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10190
  ret i1 %2, !dbg !10191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10194, metadata !DIExpression()), !dbg !10195
  tail call fastcc void @__NVIC_SetPriority.81() #26, !dbg !10196
  store i32 8399, i32* @last_load, align 4, !dbg !10197
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10198
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10199
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10200
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10201
  %3 = or i32 %2, 7, !dbg !10201
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10201
  ret i32 0, !dbg !10202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.81() unnamed_addr #15 !dbg !10203 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10205, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32 1, metadata !10206, metadata !DIExpression()), !dbg !10207
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10208
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10214, metadata !DIExpression()), !dbg !10216
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10217
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10218
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10219
  %5 = add i32 %4, %3, !dbg !10219
  store i32 %5, i32* @cycle_count, align 4, !dbg !10219
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10220
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10221
  %7 = sub i32 %5, %6, !dbg !10224
  %8 = udiv i32 %7, 8400, !dbg !10225
  call void @llvm.dbg.value(metadata i32 %8, metadata !10215, metadata !DIExpression()), !dbg !10216
  %9 = mul nuw i32 %8, 8400, !dbg !10226
  %10 = add i32 %9, %6, !dbg !10227
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10227
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10228
  tail call void @z_arm_int_exit() #25, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10231 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10236
  call void @llvm.dbg.value(metadata i32 %1, metadata !10233, metadata !DIExpression()), !dbg !10237
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10238
  call void @llvm.dbg.value(metadata i32 %2, metadata !10234, metadata !DIExpression()), !dbg !10237
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10239
  call void @llvm.dbg.value(metadata i32 %3, metadata !10235, metadata !DIExpression()), !dbg !10237
  %4 = and i32 %2, 65536, !dbg !10240
  %5 = icmp ne i32 %4, 0, !dbg !10240
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10242
  %8 = load i32, i32* @last_load, align 4, !dbg !10237
  br i1 %7, label %9, label %13, !dbg !10242

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10243
  %11 = add i32 %10, %8, !dbg !10243
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10243
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10245
  br label %13, !dbg !10246

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10247
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10248
  %16 = add i32 %14, %15, !dbg !10249
  ret i32 %16, !dbg !10250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10255, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i1 %1, metadata !10256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10268
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10269
  br i1 %4, label %5, label %8, !dbg !10269

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  %7 = and i32 %6, -2, !dbg !10271
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10271
  store i32 -16777216, i32* @last_load, align 4, !dbg !10273
  br label %54, !dbg !10274

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %9, metadata !10260, metadata !DIExpression()), !dbg !10268
  br i1 %3, label %18, label %10, !dbg !10276

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10276
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10268
  %12 = icmp slt i32 %11, 1, !dbg !10277
  br i1 %12, label %18, label %13, !dbg !10277

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10277
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10277
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10277
  %17 = add nuw nsw i32 %16, 8399, !dbg !10277
  br label %18, !dbg !10277

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10285
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10287, !srcloc !10293
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10287
  call void @llvm.dbg.value(metadata i32 %21, metadata !10290, metadata !DIExpression()) #24, !dbg !10294
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %21, metadata !10284, metadata !DIExpression()) #24, !dbg !10285
  call void @llvm.dbg.value(metadata i32 %21, metadata !10261, metadata !DIExpression()), !dbg !10268
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10295
  call void @llvm.dbg.value(metadata i32 %22, metadata !10266, metadata !DIExpression()), !dbg !10268
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10296
  call void @llvm.dbg.value(metadata i32 %23, metadata !10258, metadata !DIExpression()), !dbg !10268
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10297
  %25 = add i32 %24, %22, !dbg !10297
  store i32 %25, i32* @cycle_count, align 4, !dbg !10297
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10298
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10299
  %27 = sub i32 %25, %26, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %27, metadata !10267, metadata !DIExpression()), !dbg !10268
  %28 = icmp slt i32 %27, 0, !dbg !10301
  br i1 %28, label %38, label %29, !dbg !10303

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10257, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 undef, metadata !10257, metadata !DIExpression()), !dbg !10268
  %30 = add nuw i32 %19, %27, !dbg !10304
  %31 = urem i32 %30, 8400, !dbg !10306
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10257, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10268
  %32 = sub nuw nsw i32 %19, %31, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %32, metadata !10257, metadata !DIExpression()), !dbg !10268
  %33 = icmp ugt i32 %32, 1024, !dbg !10308
  br i1 %33, label %34, label %36, !dbg !10308

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10257, metadata !DIExpression()), !dbg !10268
  %35 = icmp ugt i32 %32, 16766400, !dbg !10309
  br i1 %35, label %38, label %36, !dbg !10311

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10312
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %40, metadata !10259, metadata !DIExpression()), !dbg !10268
  %41 = add nsw i32 %39, -1, !dbg !10314
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10315
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10316
  %42 = icmp ult i32 %23, %40, !dbg !10317
  br i1 %42, label %43, label %48, !dbg !10319

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10320
  %45 = add i32 %23, %9, !dbg !10322
  %46 = sub i32 %45, %40, !dbg !10323
  %47 = add i32 %46, %44, !dbg !10320
  br label %52, !dbg !10324

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10325
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10327
  %51 = add i32 %49, %50, !dbg !10327
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10328
  store i32 %53, i32* @cycle_count, align 4, !dbg !10328
  call void @llvm.dbg.value(metadata i32 %21, metadata !10329, metadata !DIExpression()) #24, !dbg !10335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10335
  call void @llvm.dbg.value(metadata i32 %21, metadata !10337, metadata !DIExpression()) #24, !dbg !10340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !10342, !srcloc !10343
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10345 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10349
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10351, !srcloc !10293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %2, metadata !10290, metadata !DIExpression()) #24, !dbg !10353
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10284, metadata !DIExpression()) #24, !dbg !10349
  call void @llvm.dbg.value(metadata i32 %2, metadata !10347, metadata !DIExpression()), !dbg !10354
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10355
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10356
  %5 = add i32 %4, %3, !dbg !10357
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10358
  %7 = sub i32 %5, %6, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %7, metadata !10348, metadata !DIExpression()), !dbg !10354
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10360
  call void @llvm.dbg.value(metadata i32 %2, metadata !10337, metadata !DIExpression()) #24, !dbg !10362
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10364, !srcloc !10343
  %8 = udiv i32 %7, 8400, !dbg !10365
  ret i32 %8, !dbg !10366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10367 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10278, metadata !DIExpression()) #24, !dbg !10371
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10373, !srcloc !10293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %2, metadata !10290, metadata !DIExpression()) #24, !dbg !10375
  call void @llvm.dbg.value(metadata i32 undef, metadata !10291, metadata !DIExpression()) #24, !dbg !10375
  call void @llvm.dbg.value(metadata i32 %2, metadata !10284, metadata !DIExpression()) #24, !dbg !10371
  call void @llvm.dbg.value(metadata i32 %2, metadata !10369, metadata !DIExpression()), !dbg !10376
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10377
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10378
  %5 = add i32 %4, %3, !dbg !10379
  call void @llvm.dbg.value(metadata i32 %5, metadata !10370, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10334, metadata !DIExpression()) #24, !dbg !10380
  call void @llvm.dbg.value(metadata i32 %2, metadata !10337, metadata !DIExpression()) #24, !dbg !10382
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !10384, !srcloc !10343
  ret i32 %5, !dbg !10385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10386 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10387
  %2 = icmp eq i32 %1, -16777216, !dbg !10389
  br i1 %2, label %3, label %6, !dbg !10390

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10391
  %5 = or i32 %4, 1, !dbg !10391
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10391
  br label %6, !dbg !10393

6:                                                ; preds = %3, %0
  ret void, !dbg !10394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10395 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10396
  %2 = and i32 %1, -2, !dbg !10396
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10396
  ret void, !dbg !10397
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10398 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10424, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i8 %1, metadata !10425, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10426, metadata !DIExpression()), !dbg !10427
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10428
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10428
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10427
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10429
  %8 = load i8, i8* %6, align 4, !dbg !10430
  %9 = zext i8 %8 to i32, !dbg !10431
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10431
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10432
  br i1 %11, label %18, label %24, !dbg !10433

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10427
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10429
  %14 = load i8, i8* %6, align 4, !dbg !10430
  %15 = zext i8 %14 to i32, !dbg !10431
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10431
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10432
  br i1 %17, label %18, label %24, !dbg !10433, !llvm.loop !10434

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10436
  %21 = load i8, i8* %20, align 1, !dbg !10436
  %22 = icmp eq i8 %21, %1, !dbg !10439
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10440
  br i1 %22, label %24, label %12, !dbg !10441

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10427
  ret i32 %25, !dbg !10442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10454, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8 %1, metadata !10455, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %2, metadata !10456, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 0, metadata !10459, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 0, metadata !10460, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8 0, metadata !10461, metadata !DIExpression()), !dbg !10471
  %4 = icmp eq i8 %1, 0, !dbg !10472
  br i1 %4, label %35, label %5, !dbg !10473

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10472
  br label %9, !dbg !10473

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10461, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %29, metadata !10459, metadata !DIExpression()), !dbg !10470
  %8 = icmp eq i32 %34, %6, !dbg !10472
  br i1 %8, label %35, label %9, !dbg !10473, !llvm.loop !10474

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %11, metadata !10459, metadata !DIExpression()), !dbg !10470
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10476
  %13 = load i32, i32* %12, align 4, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %13, metadata !10458, metadata !DIExpression()), !dbg !10470
  %14 = and i32 %13, 31, !dbg !10477
  %15 = icmp ult i32 %14, 16, !dbg !10478
  br i1 %15, label %16, label %20, !dbg !10479

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10480
  %18 = load i32, i32* %17, align 4, !dbg !10480
  %19 = or i32 %18, 32, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %19, metadata !10459, metadata !DIExpression()), !dbg !10470
  br label %28, !dbg !10483

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10484

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10485
  %23 = load i32, i32* %22, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %23, metadata !10463, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10486
  %24 = lshr i32 %23, 7, !dbg !10487
  %25 = and i32 %24, 16, !dbg !10487
  %26 = or i32 %25, %23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %26, metadata !10459, metadata !DIExpression()), !dbg !10470
  br label %28, !dbg !10488

27:                                               ; preds = %20
  br label %28, !dbg !10489

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10470
  call void @llvm.dbg.value(metadata i32 %29, metadata !10459, metadata !DIExpression()), !dbg !10470
  %30 = lshr i32 %13, 5, !dbg !10489
  %31 = and i32 %30, 255, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %31, metadata !10457, metadata !DIExpression()), !dbg !10470
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %32, metadata !10460, metadata !DIExpression()), !dbg !10470
  %33 = icmp slt i32 %32, 0, !dbg !10491
  %34 = add nuw nsw i32 %10, 1, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %34, metadata !10461, metadata !DIExpression()), !dbg !10471
  br i1 %33, label %35, label %7, !dbg !10494

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10500, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %1, metadata !10501, metadata !DIExpression()), !dbg !10504
  call void @llvm.dbg.value(metadata i32 %2, metadata !10502, metadata !DIExpression()), !dbg !10504
  %4 = icmp ugt i32 %0, 175, !dbg !10505
  br i1 %4, label %16, label %5, !dbg !10507

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10508
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10509
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10503, metadata !DIExpression()), !dbg !10504
  %9 = add nsw i32 %6, -8, !dbg !10510
  %10 = icmp ult i32 %9, 3, !dbg !10510
  br i1 %10, label %16, label %11, !dbg !10512

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %8) #26, !dbg !10513
  br i1 %12, label %13, label %16, !dbg !10514

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10515
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !10516
  br label %16, !dbg !10517

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10504
  ret i32 %17, !dbg !10518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.86(%struct.device* noundef %0) unnamed_addr #1 !dbg !10519 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10523, metadata !DIExpression()), !dbg !10524
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10525, !srcloc !10527
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) #26, !dbg !10528
  ret i1 %2, !dbg !10529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.87(%struct.device* noundef %0) unnamed_addr #1 !dbg !10530 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10532, metadata !DIExpression()), !dbg !10533
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10534
  ret i1 %2, !dbg !10535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10536 {
  ret void, !dbg !10537
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10538 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10540, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 2, metadata !10542, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 0, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 2, metadata !10544, metadata !DIExpression()), !dbg !10545
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10546
  %2 = and i32 %1, 12, !dbg !10547
  call void @llvm.dbg.value(metadata i32 %2, metadata !10540, metadata !DIExpression()), !dbg !10545
  %3 = icmp eq i32 %2, 8, !dbg !10548
  br i1 %3, label %4, label %18, !dbg !10548

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10549
  call void @llvm.dbg.value(metadata i32 %5, metadata !10543, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10545
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10551
  %7 = and i32 %6, 63, !dbg !10552
  call void @llvm.dbg.value(metadata i32 %7, metadata !10544, metadata !DIExpression()), !dbg !10545
  %8 = udiv i32 16000000, %7, !dbg !10553
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10553
  %10 = lshr i32 %9, 6, !dbg !10553
  %11 = and i32 %10, 511, !dbg !10553
  %12 = mul i32 %11, %8, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %12, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 %12, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 %12, metadata !10541, metadata !DIExpression()), !dbg !10545
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10555
  %14 = lshr i32 %13, 15, !dbg !10556
  %15 = and i32 %14, 6, !dbg !10556
  %16 = add nuw nsw i32 %15, 2, !dbg !10556
  call void @llvm.dbg.value(metadata i32 %16, metadata !10542, metadata !DIExpression()), !dbg !10545
  %17 = udiv i32 %12, %16, !dbg !10557
  br label %18, !dbg !10558

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10559
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10560
  %21 = lshr i32 %20, 4, !dbg !10561
  %22 = and i32 %21, 15, !dbg !10561
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10562
  %24 = load i8, i8* %23, align 1, !dbg !10562
  %25 = zext i8 %24 to i32, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %25, metadata !10540, metadata !DIExpression()), !dbg !10545
  %26 = lshr i32 %19, %25, !dbg !10563
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10563
  ret void, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10565 {
  ret i32 0, !dbg !10570
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10571 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10598, metadata !DIExpression()), !dbg !10609
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10610
  br i1 %3, label %317, label %4, !dbg !10612

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10613
  %6 = load i32, i32* %5, align 4, !dbg !10613
  %7 = and i32 %6, 1, !dbg !10615
  %8 = icmp eq i32 %7, 0, !dbg !10616
  br i1 %8, label %66, label %9, !dbg !10617

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10618
  %11 = and i32 %10, 12, !dbg !10618
  %12 = icmp eq i32 %11, 4, !dbg !10621
  br i1 %12, label %21, label %13, !dbg !10622

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10623
  %15 = and i32 %14, 12, !dbg !10623
  %16 = icmp eq i32 %15, 8, !dbg !10624
  br i1 %16, label %17, label %29, !dbg !10625

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10626
  %19 = and i32 %18, 4194304, !dbg !10627
  %20 = icmp eq i32 %19, 0, !dbg !10628
  br i1 %20, label %29, label %21, !dbg !10629

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10630
  %23 = and i32 %22, 131072, !dbg !10630
  %24 = icmp eq i32 %23, 0, !dbg !10630
  br i1 %24, label %66, label %25, !dbg !10633

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10634
  %27 = load i32, i32* %26, align 4, !dbg !10634
  %28 = icmp eq i32 %27, 0, !dbg !10635
  br i1 %28, label %317, label %66, !dbg !10636

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10637
  %31 = load i32, i32* %30, align 4, !dbg !10637
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10641

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10642
  %34 = or i32 %33, 65536, !dbg !10642
  br label %45, !dbg !10642

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10644
  %37 = or i32 %36, 262144, !dbg !10644
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10644
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10644
  %39 = or i32 %38, 65536, !dbg !10644
  br label %45, !dbg !10644

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10647
  %42 = and i32 %41, -65537, !dbg !10647
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10647
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10647
  %44 = and i32 %43, -262145, !dbg !10647
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10649
  %47 = load i32, i32* %30, align 4, !dbg !10650
  %48 = icmp eq i32 %47, 0, !dbg !10652
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !10653
  call void @llvm.dbg.value(metadata i32 %49, metadata !10599, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 %49, metadata !10599, metadata !DIExpression()), !dbg !10609
  br i1 %48, label %58, label %50, !dbg !10654

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10655
  %52 = and i32 %51, 131072, !dbg !10657
  %53 = icmp eq i32 %52, 0, !dbg !10657
  br i1 %53, label %54, label %66, !dbg !10658

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !10659
  %56 = sub i32 %55, %49, !dbg !10662
  %57 = icmp ugt i32 %56, 100, !dbg !10663
  br i1 %57, label %317, label %50, !dbg !10664, !llvm.loop !10665

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10667
  %60 = and i32 %59, 131072, !dbg !10667
  %61 = icmp eq i32 %60, 0, !dbg !10667
  br i1 %61, label %66, label %62, !dbg !10669

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !10670
  %64 = sub i32 %63, %49, !dbg !10673
  %65 = icmp ugt i32 %64, 100, !dbg !10674
  br i1 %65, label %317, label %58, !dbg !10675, !llvm.loop !10676

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10678
  %68 = and i32 %67, 2, !dbg !10680
  %69 = icmp eq i32 %68, 0, !dbg !10681
  br i1 %69, label %121, label %70, !dbg !10682

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10683
  %72 = and i32 %71, 12, !dbg !10683
  %73 = icmp eq i32 %72, 0, !dbg !10686
  br i1 %73, label %82, label %74, !dbg !10687

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10688
  %76 = and i32 %75, 12, !dbg !10688
  %77 = icmp eq i32 %76, 8, !dbg !10689
  br i1 %77, label %78, label %90, !dbg !10690

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10691
  %80 = and i32 %79, 4194304, !dbg !10692
  %81 = icmp eq i32 %80, 0, !dbg !10693
  br i1 %81, label %82, label %90, !dbg !10694

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10695
  %84 = and i32 %83, 2, !dbg !10695
  %85 = icmp eq i32 %84, 0, !dbg !10695
  br i1 %85, label %114, label %86, !dbg !10698

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10699
  %88 = load i32, i32* %87, align 4, !dbg !10699
  %89 = icmp eq i32 %88, 1, !dbg !10700
  br i1 %89, label %114, label %317, !dbg !10701

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10702
  %92 = load i32, i32* %91, align 4, !dbg !10702
  %93 = icmp eq i32 %92, 0, !dbg !10705
  br i1 %93, label %104, label %94, !dbg !10706

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10707
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %95, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %96, !dbg !10710

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10711
  %98 = and i32 %97, 2, !dbg !10712
  %99 = icmp eq i32 %98, 0, !dbg !10712
  br i1 %99, label %100, label %114, !dbg !10710

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !10713
  %102 = sub i32 %101, %95, !dbg !10716
  %103 = icmp ugt i32 %102, 2, !dbg !10717
  br i1 %103, label %317, label %96, !dbg !10718, !llvm.loop !10719

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10721
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !10723
  call void @llvm.dbg.value(metadata i32 %105, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %106, !dbg !10724

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10725
  %108 = and i32 %107, 2, !dbg !10725
  %109 = icmp eq i32 %108, 0, !dbg !10725
  br i1 %109, label %121, label %110, !dbg !10724

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !10726
  %112 = sub i32 %111, %105, !dbg !10729
  %113 = icmp ugt i32 %112, 2, !dbg !10730
  br i1 %113, label %317, label %106, !dbg !10731, !llvm.loop !10732

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10734
  %116 = and i32 %115, -249, !dbg !10734
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10734
  %118 = load i32, i32* %117, align 4, !dbg !10734
  %119 = shl i32 %118, 3, !dbg !10734
  %120 = or i32 %119, %116, !dbg !10734
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10734
  br label %121, !dbg !10735

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10735
  %123 = and i32 %122, 8, !dbg !10737
  %124 = icmp eq i32 %123, 0, !dbg !10738
  br i1 %124, label %149, label %125, !dbg !10739

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10740
  %127 = load i32, i32* %126, align 4, !dbg !10740
  %128 = icmp eq i32 %127, 0, !dbg !10743
  br i1 %128, label %139, label %129, !dbg !10744

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10745
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %130, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %131, !dbg !10748

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10749
  %133 = and i32 %132, 2, !dbg !10750
  %134 = icmp eq i32 %133, 0, !dbg !10750
  br i1 %134, label %135, label %149, !dbg !10748

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !10751
  %137 = sub i32 %136, %130, !dbg !10754
  %138 = icmp ugt i32 %137, 2, !dbg !10755
  br i1 %138, label %317, label %131, !dbg !10756, !llvm.loop !10757

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10759
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !10761
  call void @llvm.dbg.value(metadata i32 %140, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %141, !dbg !10762

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10763
  %143 = and i32 %142, 2, !dbg !10763
  %144 = icmp eq i32 %143, 0, !dbg !10763
  br i1 %144, label %149, label %145, !dbg !10762

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !10764
  %147 = sub i32 %146, %140, !dbg !10767
  %148 = icmp ugt i32 %147, 2, !dbg !10768
  br i1 %148, label %317, label %141, !dbg !10769, !llvm.loop !10770

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10772
  %151 = and i32 %150, 4, !dbg !10773
  %152 = icmp eq i32 %151, 0, !dbg !10774
  br i1 %152, label %221, label %153, !dbg !10775

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10601, metadata !DIExpression()), !dbg !10776
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10777
  %155 = and i32 %154, 268435456, !dbg !10777
  %156 = icmp eq i32 %155, 0, !dbg !10777
  br i1 %156, label %157, label %164, !dbg !10778

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10779
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10779
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10605, metadata !DIExpression()), !dbg !10779
  store volatile i32 0, i32* %2, align 4, !dbg !10779
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10779
  %160 = or i32 %159, 268435456, !dbg !10779
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10779
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10779
  %162 = and i32 %161, 268435456, !dbg !10779
  store volatile i32 %162, i32* %2, align 4, !dbg !10779
  %163 = load volatile i32, i32* %2, align 4, !dbg !10779
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10780
  call void @llvm.dbg.value(metadata i32 1, metadata !10601, metadata !DIExpression()), !dbg !10776
  br label %164, !dbg !10781

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10601, metadata !DIExpression()), !dbg !10776
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10782
  %166 = and i32 %165, 256, !dbg !10782
  %167 = icmp eq i32 %166, 0, !dbg !10782
  br i1 %167, label %168, label %180, !dbg !10784

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10785
  %170 = or i32 %169, 256, !dbg !10785
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10785
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %171, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %172, !dbg !10788

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10789
  %174 = and i32 %173, 256, !dbg !10789
  %175 = icmp eq i32 %174, 0, !dbg !10789
  br i1 %175, label %176, label %180, !dbg !10788

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !10790
  %178 = sub i32 %177, %171, !dbg !10793
  %179 = icmp ugt i32 %178, 2, !dbg !10794
  br i1 %179, label %317, label %172, !dbg !10795, !llvm.loop !10796

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10798
  %182 = load i32, i32* %181, align 4, !dbg !10798
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10801

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10802
  %185 = or i32 %184, 1, !dbg !10802
  br label %196, !dbg !10802

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10804
  %188 = or i32 %187, 4, !dbg !10804
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10804
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10804
  %190 = or i32 %189, 1, !dbg !10804
  br label %196, !dbg !10804

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10807
  %193 = and i32 %192, -2, !dbg !10807
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10807
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10807
  %195 = and i32 %194, -5, !dbg !10807
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10809
  %198 = load i32, i32* %181, align 4, !dbg !10810
  %199 = icmp eq i32 %198, 0, !dbg !10812
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %200, metadata !10599, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 %200, metadata !10599, metadata !DIExpression()), !dbg !10609
  br i1 %199, label %209, label %201, !dbg !10814

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10815
  %203 = and i32 %202, 2, !dbg !10817
  %204 = icmp eq i32 %203, 0, !dbg !10817
  br i1 %204, label %205, label %217, !dbg !10818

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !10819
  %207 = sub i32 %206, %200, !dbg !10822
  %208 = icmp ugt i32 %207, 5000, !dbg !10823
  br i1 %208, label %317, label %201, !dbg !10824, !llvm.loop !10825

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10827
  %211 = and i32 %210, 2, !dbg !10827
  %212 = icmp eq i32 %211, 0, !dbg !10827
  br i1 %212, label %217, label %213, !dbg !10829

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !10830
  %215 = sub i32 %214, %200, !dbg !10833
  %216 = icmp ugt i32 %215, 5000, !dbg !10834
  br i1 %216, label %317, label %209, !dbg !10835, !llvm.loop !10836

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10838

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10839
  %220 = and i32 %219, -268435457, !dbg !10839
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10839
  br label %221, !dbg !10842

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10843
  %223 = load i32, i32* %222, align 4, !dbg !10843
  %224 = icmp eq i32 %223, 0, !dbg !10845
  br i1 %224, label %316, label %225, !dbg !10846

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10847
  %227 = and i32 %226, 12, !dbg !10847
  %228 = icmp eq i32 %227, 8, !dbg !10850
  br i1 %228, label %277, label %229, !dbg !10851

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10852
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10855
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !10855
  call void @llvm.dbg.value(metadata i32 %231, metadata !10599, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 %231, metadata !10599, metadata !DIExpression()), !dbg !10609
  br i1 %230, label %232, label %269, !dbg !10856

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10857
  %234 = and i32 %233, 33554432, !dbg !10857
  %235 = icmp eq i32 %234, 0, !dbg !10857
  br i1 %235, label %240, label %236, !dbg !10859

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !10860
  %238 = sub i32 %237, %231, !dbg !10863
  %239 = icmp ugt i32 %238, 2, !dbg !10864
  br i1 %239, label %317, label %232, !dbg !10865, !llvm.loop !10866

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10868
  %242 = load i32, i32* %241, align 4, !dbg !10868
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10868
  %244 = load i32, i32* %243, align 4, !dbg !10868
  %245 = or i32 %244, %242, !dbg !10868
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10868
  %247 = load i32, i32* %246, align 4, !dbg !10868
  %248 = shl i32 %247, 6, !dbg !10868
  %249 = or i32 %245, %248, !dbg !10868
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10868
  %251 = load i32, i32* %250, align 4, !dbg !10868
  %252 = shl i32 %251, 15, !dbg !10868
  %253 = add i32 %252, -65536, !dbg !10868
  %254 = and i32 %253, -65536, !dbg !10868
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10868
  %256 = load i32, i32* %255, align 4, !dbg !10868
  %257 = shl i32 %256, 24, !dbg !10868
  %258 = or i32 %249, %257, !dbg !10868
  %259 = or i32 %258, %254, !dbg !10868
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10868
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10869
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %260, metadata !10599, metadata !DIExpression()), !dbg !10609
  br label %261, !dbg !10871

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10872
  %263 = and i32 %262, 33554432, !dbg !10873
  %264 = icmp eq i32 %263, 0, !dbg !10873
  br i1 %264, label %265, label %316, !dbg !10871

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !10874
  %267 = sub i32 %266, %260, !dbg !10877
  %268 = icmp ugt i32 %267, 2, !dbg !10878
  br i1 %268, label %317, label %261, !dbg !10879, !llvm.loop !10880

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10882
  %271 = and i32 %270, 33554432, !dbg !10882
  %272 = icmp eq i32 %271, 0, !dbg !10882
  br i1 %272, label %316, label %273, !dbg !10884

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !10885
  %275 = sub i32 %274, %231, !dbg !10888
  %276 = icmp ugt i32 %275, 2, !dbg !10889
  br i1 %276, label %317, label %269, !dbg !10890, !llvm.loop !10891

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !10893
  br i1 %278, label %317, label %279, !dbg !10896

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10897
  call void @llvm.dbg.value(metadata i32 %280, metadata !10600, metadata !DIExpression()), !dbg !10609
  %281 = and i32 %280, 4194304, !dbg !10899
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10901
  %283 = load i32, i32* %282, align 4, !dbg !10901
  %284 = icmp eq i32 %281, %283, !dbg !10902
  br i1 %284, label %285, label %317, !dbg !10903

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !10904
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10905
  %288 = load i32, i32* %287, align 4, !dbg !10905
  %289 = icmp eq i32 %286, %288, !dbg !10906
  br i1 %289, label %290, label %317, !dbg !10907

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !10908
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10909
  %293 = load i32, i32* %292, align 4, !dbg !10909
  %294 = shl i32 %293, 6, !dbg !10910
  %295 = icmp eq i32 %291, %294, !dbg !10911
  br i1 %295, label %296, label %317, !dbg !10912

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !10913
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10914
  %299 = load i32, i32* %298, align 4, !dbg !10914
  %300 = shl i32 %299, 15, !dbg !10915
  %301 = add i32 %300, -65536, !dbg !10915
  %302 = and i32 %301, -65536, !dbg !10915
  %303 = icmp eq i32 %297, %302, !dbg !10916
  br i1 %303, label %304, label %317, !dbg !10917

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !10918
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10919
  %307 = load i32, i32* %306, align 4, !dbg !10919
  %308 = shl i32 %307, 24, !dbg !10920
  %309 = icmp eq i32 %305, %308, !dbg !10921
  br i1 %309, label %310, label %317, !dbg !10922

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !10923
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !10924
  %313 = load i32, i32* %312, align 4, !dbg !10924
  %314 = shl i32 %313, 28, !dbg !10925
  %315 = icmp eq i32 %311, %314, !dbg !10926
  br i1 %315, label %316, label %317, !dbg !10927

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !10928

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10609
  ret i32 %318, !dbg !10929
}

; Function Attrs: optsize
declare !dbg !10930 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10932 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !10945, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %1, metadata !10946, metadata !DIExpression()), !dbg !10948
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !10949
  br i1 %3, label %115, label %4, !dbg !10951

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10952
  %6 = and i32 %5, 7, !dbg !10952
  %7 = icmp ult i32 %6, %1, !dbg !10954
  br i1 %7, label %8, label %13, !dbg !10955

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !10956
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !10956
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10958
  %11 = and i32 %10, 7, !dbg !10958
  %12 = icmp eq i32 %11, %1, !dbg !10960
  br i1 %12, label %13, label %115, !dbg !10961

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !10962
  %15 = load i32, i32* %14, align 4, !dbg !10962
  %16 = and i32 %15, 2, !dbg !10964
  %17 = icmp eq i32 %16, 0, !dbg !10965
  br i1 %17, label %39, label %18, !dbg !10966

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !10967
  %20 = icmp eq i32 %19, 0, !dbg !10970
  br i1 %20, label %25, label %21, !dbg !10971

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10972
  %23 = or i32 %22, 7168, !dbg !10972
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10972
  %24 = load i32, i32* %14, align 4, !dbg !10974
  br label %25, !dbg !10976

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !10974
  %27 = and i32 %26, 8, !dbg !10977
  %28 = icmp eq i32 %27, 0, !dbg !10978
  br i1 %28, label %32, label %29, !dbg !10979

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10980
  %31 = or i32 %30, 57344, !dbg !10980
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10980
  br label %32, !dbg !10982

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10983
  %34 = and i32 %33, -241, !dbg !10983
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !10983
  %36 = load i32, i32* %35, align 4, !dbg !10983
  %37 = or i32 %34, %36, !dbg !10983
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10983
  %38 = load i32, i32* %14, align 4, !dbg !10984
  br label %39, !dbg !10986

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !10984
  %41 = and i32 %40, 1, !dbg !10987
  %42 = icmp eq i32 %41, 0, !dbg !10988
  br i1 %42, label %73, label %43, !dbg !10989

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !10990
  %45 = load i32, i32* %44, align 4, !dbg !10990
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !10993

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10994
  %48 = and i32 %47, 131072, !dbg !10997
  %49 = icmp eq i32 %48, 0, !dbg !10997
  br i1 %49, label %115, label %58, !dbg !10998

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10999
  %52 = and i32 %51, 33554432, !dbg !11003
  %53 = icmp eq i32 %52, 0, !dbg !11003
  br i1 %53, label %115, label %58, !dbg !11004

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11005
  %56 = and i32 %55, 2, !dbg !11008
  %57 = icmp eq i32 %56, 0, !dbg !11008
  br i1 %57, label %115, label %58, !dbg !11009

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11010
  %60 = and i32 %59, -4, !dbg !11010
  %61 = or i32 %60, %45, !dbg !11010
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11010
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %62, metadata !10947, metadata !DIExpression()), !dbg !10948
  br label %63, !dbg !11012

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11013
  %65 = and i32 %64, 12, !dbg !11013
  %66 = load i32, i32* %44, align 4, !dbg !11014
  %67 = shl i32 %66, 2, !dbg !11015
  %68 = icmp eq i32 %65, %67, !dbg !11016
  br i1 %68, label %73, label %69, !dbg !11012

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11017
  %71 = sub i32 %70, %62, !dbg !11020
  %72 = icmp ugt i32 %71, 5000, !dbg !11021
  br i1 %72, label %115, label %63, !dbg !11022, !llvm.loop !11023

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11025
  %75 = and i32 %74, 7, !dbg !11025
  %76 = icmp ugt i32 %75, %1, !dbg !11027
  br i1 %76, label %77, label %82, !dbg !11028

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11029
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11029
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11031
  %80 = and i32 %79, 7, !dbg !11031
  %81 = icmp eq i32 %80, %1, !dbg !11033
  br i1 %81, label %82, label %115, !dbg !11034

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11035
  %84 = and i32 %83, 4, !dbg !11037
  %85 = icmp eq i32 %84, 0, !dbg !11038
  br i1 %85, label %93, label %86, !dbg !11039

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11040
  %88 = and i32 %87, -7169, !dbg !11040
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11040
  %90 = load i32, i32* %89, align 4, !dbg !11040
  %91 = or i32 %88, %90, !dbg !11040
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11040
  %92 = load i32, i32* %14, align 4, !dbg !11042
  br label %93, !dbg !11044

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11042
  %95 = and i32 %94, 8, !dbg !11045
  %96 = icmp eq i32 %95, 0, !dbg !11046
  br i1 %96, label %104, label %97, !dbg !11047

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11048
  %99 = and i32 %98, -57345, !dbg !11048
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11048
  %101 = load i32, i32* %100, align 4, !dbg !11048
  %102 = shl i32 %101, 3, !dbg !11048
  %103 = or i32 %102, %99, !dbg !11048
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11048
  br label %104, !dbg !11050

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11051
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11052
  %107 = lshr i32 %106, 4, !dbg !11053
  %108 = and i32 %107, 15, !dbg !11053
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11054
  %110 = load i8, i8* %109, align 1, !dbg !11054
  %111 = zext i8 %110 to i32, !dbg !11054
  %112 = lshr i32 %105, %111, !dbg !11055
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11056
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11057
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11058
  br label %115, !dbg !11059

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !10948
  ret i32 %116, !dbg !11060
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11061 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11063, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11064, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11065, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 0, metadata !11066, metadata !DIExpression()), !dbg !11067
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11068
  %2 = and i32 %1, 12, !dbg !11069
  %3 = icmp eq i32 %2, 8, !dbg !11070
  br i1 %3, label %4, label %21, !dbg !11070

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11071
  %6 = and i32 %5, 63, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %6, metadata !11063, metadata !DIExpression()), !dbg !11067
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11075
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11077
  %9 = lshr i32 %8, 6, !dbg !11077
  %10 = and i32 %9, 511, !dbg !11077
  %11 = zext i32 %10 to i64, !dbg !11077
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11077
  %13 = zext i32 %6 to i64, !dbg !11077
  %14 = udiv i64 %12, %13, !dbg !11077
  %15 = trunc i64 %14 to i32, !dbg !11077
  call void @llvm.dbg.value(metadata i32 %15, metadata !11064, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 %15, metadata !11064, metadata !DIExpression()), !dbg !11067
  call void @llvm.dbg.value(metadata i32 %15, metadata !11064, metadata !DIExpression()), !dbg !11067
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11078
  %17 = lshr i32 %16, 15, !dbg !11079
  %18 = and i32 %17, 6, !dbg !11079
  %19 = add nuw nsw i32 %18, 2, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %19, metadata !11065, metadata !DIExpression()), !dbg !11067
  %20 = udiv i32 %15, %19, !dbg !11080
  call void @llvm.dbg.value(metadata i32 %20, metadata !11066, metadata !DIExpression()), !dbg !11067
  br label %21, !dbg !11081

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11082
  call void @llvm.dbg.value(metadata i32 %22, metadata !11066, metadata !DIExpression()), !dbg !11067
  ret i32 %22, !dbg !11083
}

; Function Attrs: optsize
declare !dbg !11084 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11087 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11091, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata i32 %1, metadata !11092, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.value(metadata i32 %2, metadata !11093, metadata !DIExpression()), !dbg !11108
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11109
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !11109
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11094, metadata !DIExpression()), !dbg !11110
  %7 = icmp eq i32 %0, 0, !dbg !11111
  br i1 %7, label %8, label %24, !dbg !11112

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11113
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11104, metadata !DIExpression()), !dbg !11113
  store volatile i32 0, i32* %5, align 4, !dbg !11113
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11113
  %11 = or i32 %10, 1, !dbg !11113
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11113
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11113
  %13 = and i32 %12, 1, !dbg !11113
  store volatile i32 %13, i32* %5, align 4, !dbg !11113
  %14 = load volatile i32, i32* %5, align 4, !dbg !11113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11114
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11115
  store i32 256, i32* %15, align 4, !dbg !11116
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11117
  store i32 2, i32* %16, align 4, !dbg !11118
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11119
  store i32 3, i32* %17, align 4, !dbg !11120
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11121
  store i32 0, i32* %18, align 4, !dbg !11122
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11123
  store i32 0, i32* %19, align 4, !dbg !11124
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11125
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11126
  %21 = and i32 %20, -123731969, !dbg !11126
  %22 = or i32 %2, %1, !dbg !11126
  %23 = or i32 %22, %21, !dbg !11126
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11126
  br label %24, !dbg !11127

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !11128
  ret void, !dbg !11128
}

; Function Attrs: optsize
declare !dbg !11129 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11133 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11134
  ret void, !dbg !11135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11136 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11137
  ret void, !dbg !11138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11139 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11140
  ret i32 %1, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11142 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11143
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11144
  %3 = lshr i32 %2, 10, !dbg !11145
  %4 = and i32 %3, 7, !dbg !11145
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11146
  %6 = load i8, i8* %5, align 1, !dbg !11146
  %7 = zext i8 %6 to i32, !dbg !11146
  %8 = lshr i32 %1, %7, !dbg !11147
  ret i32 %8, !dbg !11148
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11149 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11150
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11151
  %3 = lshr i32 %2, 13, !dbg !11152
  %4 = and i32 %3, 7, !dbg !11152
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11153
  %6 = load i8, i8* %5, align 1, !dbg !11153
  %7 = zext i8 %6 to i32, !dbg !11153
  %8 = lshr i32 %1, %7, !dbg !11154
  ret i32 %8, !dbg !11155
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11156 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11160, metadata !DIExpression()), !dbg !11161
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11162
  store i32 15, i32* %2, align 4, !dbg !11163
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11164
  %4 = and i32 %3, 262144, !dbg !11166
  %5 = icmp eq i32 %4, 0, !dbg !11167
  br i1 %5, label %8, label %6, !dbg !11168

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11169
  store i32 327680, i32* %7, align 4, !dbg !11171
  br label %15, !dbg !11172

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11173
  %10 = and i32 %9, 65536, !dbg !11175
  %11 = icmp eq i32 %10, 0, !dbg !11176
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11177
  br i1 %11, label %14, label %13, !dbg !11178

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11179
  br label %15, !dbg !11181

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11182
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11184
  %17 = and i32 %16, 1, !dbg !11186
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11187
  store i32 %17, i32* %18, align 4, !dbg !11189
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11190
  %20 = lshr i32 %19, 3, !dbg !11191
  %21 = and i32 %20, 31, !dbg !11191
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11192
  store i32 %21, i32* %22, align 4, !dbg !11193
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11194
  %24 = and i32 %23, 4, !dbg !11196
  %25 = icmp eq i32 %24, 0, !dbg !11197
  br i1 %25, label %28, label %26, !dbg !11198

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11199
  store i32 5, i32* %27, align 4, !dbg !11201
  br label %35, !dbg !11202

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11203
  %30 = and i32 %29, 1, !dbg !11205
  %31 = icmp eq i32 %30, 0, !dbg !11206
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11207
  br i1 %31, label %34, label %33, !dbg !11208

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11209
  br label %35, !dbg !11211

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11212
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11214
  %37 = and i32 %36, 1, !dbg !11216
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11217
  store i32 %37, i32* %38, align 4, !dbg !11219
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11220
  %40 = and i32 %39, 16777216, !dbg !11222
  %41 = icmp eq i32 %40, 0, !dbg !11223
  %42 = select i1 %41, i32 1, i32 2, !dbg !11224
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11225
  store i32 %42, i32* %43, align 4, !dbg !11227
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11228
  %45 = and i32 %44, 4194304, !dbg !11229
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11230
  store i32 %45, i32* %46, align 4, !dbg !11231
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11232
  %48 = and i32 %47, 63, !dbg !11233
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11234
  store i32 %48, i32* %49, align 4, !dbg !11235
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11236
  %51 = lshr i32 %50, 6, !dbg !11237
  %52 = and i32 %51, 511, !dbg !11237
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11238
  store i32 %52, i32* %53, align 4, !dbg !11239
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11240
  %55 = shl i32 %54, 1, !dbg !11241
  %56 = and i32 %55, 393216, !dbg !11241
  %57 = add nuw nsw i32 %56, 131072, !dbg !11241
  %58 = lshr exact i32 %57, 16, !dbg !11242
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11243
  store i32 %58, i32* %59, align 4, !dbg !11244
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11245
  %61 = lshr i32 %60, 24, !dbg !11246
  %62 = and i32 %61, 15, !dbg !11246
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11247
  store i32 %62, i32* %63, align 4, !dbg !11248
  ret void, !dbg !11249
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11250 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11254, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.value(metadata i32* %1, metadata !11255, metadata !DIExpression()), !dbg !11256
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11257
  store i32 15, i32* %3, align 4, !dbg !11258
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11259
  %5 = and i32 %4, 3, !dbg !11260
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11261
  store i32 %5, i32* %6, align 4, !dbg !11262
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11263
  %8 = and i32 %7, 240, !dbg !11264
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11265
  store i32 %8, i32* %9, align 4, !dbg !11266
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11267
  %11 = and i32 %10, 7168, !dbg !11268
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11269
  store i32 %11, i32* %12, align 4, !dbg !11270
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11271
  %14 = lshr i32 %13, 3, !dbg !11272
  %15 = and i32 %14, 7168, !dbg !11272
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11273
  store i32 %15, i32* %16, align 4, !dbg !11274
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11275
  %18 = and i32 %17, 7, !dbg !11276
  store i32 %18, i32* %1, align 4, !dbg !11277
  ret void, !dbg !11278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11279 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11280
  %2 = and i32 %1, 128, !dbg !11280
  %3 = icmp eq i32 %2, 0, !dbg !11280
  br i1 %3, label %5, label %4, !dbg !11282

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11283
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11285
  br label %5, !dbg !11286

5:                                                ; preds = %4, %0
  ret void, !dbg !11287
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11288 {
  ret void, !dbg !11289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11293, metadata !DIExpression()), !dbg !11294
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11295
  ret void, !dbg !11296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11300, metadata !DIExpression()), !dbg !11302
  call void @llvm.dbg.value(metadata i32 1000, metadata !11301, metadata !DIExpression()), !dbg !11302
  %2 = udiv i32 %0, 1000, !dbg !11303
  %3 = add nsw i32 %2, -1, !dbg !11304
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11305
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11306
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11309 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11311, metadata !DIExpression()), !dbg !11313
  %3 = bitcast i32* %2 to i8*, !dbg !11314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11314
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11312, metadata !DIExpression()), !dbg !11315
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11316
  store volatile i32 %4, i32* %2, align 4, !dbg !11315
  %5 = load volatile i32, i32* %2, align 4, !dbg !11317
  %6 = icmp eq i32 %0, -1, !dbg !11318
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11311, metadata !DIExpression()), !dbg !11313
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %8, metadata !11311, metadata !DIExpression()), !dbg !11313
  br label %9, !dbg !11320

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11311, metadata !DIExpression()), !dbg !11313
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11321
  call void @llvm.dbg.value(metadata i32 undef, metadata !11311, metadata !DIExpression()), !dbg !11313
  %12 = shl i32 %11, 15, !dbg !11313
  %13 = ashr i32 %12, 31, !dbg !11313
  %14 = add i32 %13, %10, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %14, metadata !11311, metadata !DIExpression()), !dbg !11313
  %15 = icmp eq i32 %14, 0, !dbg !11320
  br i1 %15, label %16, label %9, !dbg !11320

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11324
  ret void, !dbg !11324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11327, metadata !DIExpression()), !dbg !11328
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11329
  ret void, !dbg !11330
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11336, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata i32 0, metadata !11339, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata i32 0, metadata !11340, metadata !DIExpression()), !dbg !11341
  %2 = icmp eq i32 %0, 0, !dbg !11342
  br i1 %2, label %50, label %3, !dbg !11344

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11345
  %5 = icmp eq i32 %4, 49152, !dbg !11348
  br i1 %5, label %6, label %15, !dbg !11349

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11339, metadata !DIExpression()), !dbg !11341
  %7 = add i32 %0, -64000001, !dbg !11350
  %8 = icmp ult i32 %7, 26000000, !dbg !11350
  br i1 %8, label %15, label %9, !dbg !11350

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11353
  %11 = select i1 %10, i32 0, i32 3, !dbg !11355
  call void @llvm.dbg.value(metadata i32 %11, metadata !11339, metadata !DIExpression()), !dbg !11341
  %12 = add i32 %0, -30000001, !dbg !11356
  %13 = icmp ult i32 %12, 60000000, !dbg !11356
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11356
  call void @llvm.dbg.value(metadata i32 %14, metadata !11339, metadata !DIExpression()), !dbg !11341
  br label %15, !dbg !11356

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11341
  call void @llvm.dbg.value(metadata i32 %16, metadata !11339, metadata !DIExpression()), !dbg !11341
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11359
  %18 = icmp eq i32 %17, 32768, !dbg !11361
  br i1 %18, label %19, label %27, !dbg !11362

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11363
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11366
  br i1 %22, label %27, label %23, !dbg !11366

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11367
  %25 = and i1 %24, %21, !dbg !11370
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %26, metadata !11339, metadata !DIExpression()), !dbg !11341
  br label %27, !dbg !11370

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11371
  call void @llvm.dbg.value(metadata i32 %28, metadata !11339, metadata !DIExpression()), !dbg !11341
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11372
  %30 = icmp eq i32 %29, 16384, !dbg !11374
  br i1 %30, label %31, label %39, !dbg !11375

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11376
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11379
  br i1 %34, label %39, label %35, !dbg !11379

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11380
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11383
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11383
  call void @llvm.dbg.value(metadata i32 %38, metadata !11339, metadata !DIExpression()), !dbg !11341
  br label %39, !dbg !11383

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11371
  call void @llvm.dbg.value(metadata i32 %40, metadata !11339, metadata !DIExpression()), !dbg !11341
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11384
  call void @llvm.dbg.value(metadata i32 2, metadata !11337, metadata !DIExpression()), !dbg !11341
  br label %41, !dbg !11385

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11371
  call void @llvm.dbg.value(metadata i32 %42, metadata !11337, metadata !DIExpression()), !dbg !11341
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %43, metadata !11338, metadata !DIExpression()), !dbg !11341
  %44 = add nsw i32 %42, -1, !dbg !11388
  call void @llvm.dbg.value(metadata i32 %44, metadata !11337, metadata !DIExpression()), !dbg !11341
  %45 = icmp ne i32 %43, %40, !dbg !11389
  %46 = icmp ne i32 %44, 0, !dbg !11390
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11390
  br i1 %47, label %41, label %48, !dbg !11391, !llvm.loop !11392

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11394
  call void @llvm.dbg.value(metadata i32 %51, metadata !11340, metadata !DIExpression()), !dbg !11341
  ret i32 %51, !dbg !11395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11396 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11398
  %2 = and i32 %1, 49152, !dbg !11398
  ret i32 %2, !dbg !11399
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11402, metadata !DIExpression()), !dbg !11403
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11404
  %3 = and i32 %2, -8, !dbg !11404
  %4 = or i32 %3, %0, !dbg !11404
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11404
  ret void, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11406 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11407
  %2 = and i32 %1, 7, !dbg !11407
  ret i32 %2, !dbg !11408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.sys_memory_stats* nocapture noundef readonly %0, %struct.sys_memory_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11409 {
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %0, metadata !11427, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11428, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 0, metadata !11429, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i32 0, metadata !11430, metadata !DIExpression()), !dbg !11431
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11432
  %4 = icmp eq i32 %3, 0, !dbg !11434
  br i1 %4, label %5, label %21, !dbg !11435

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.sys_memory_stats* noundef %0) #26, !dbg !11436
  call void @llvm.dbg.value(metadata i32 %6, metadata !11430, metadata !DIExpression()), !dbg !11431
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11438
  %8 = icmp eq i32 %7, 1, !dbg !11440
  br i1 %8, label %13, label %9, !dbg !11441

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.97() #26, !dbg !11442
  br label %10, !dbg !11444

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.96() #26, !dbg !11445
  %12 = icmp eq i32 %11, 1, !dbg !11446
  br i1 %12, label %13, label %10, !dbg !11444, !llvm.loop !11447

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 0, !dbg !11449
  %15 = load i32, i32* %14, align 4, !dbg !11449
  %16 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 1, !dbg !11450
  %17 = load i32, i32* %16, align 4, !dbg !11450
  %18 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %0, i32 0, i32 2, !dbg !11451
  %19 = load i32, i32* %18, align 4, !dbg !11451
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11452
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.sys_memory_stats* noundef %1) #26, !dbg !11453
  call void @llvm.dbg.value(metadata i32 %20, metadata !11429, metadata !DIExpression()), !dbg !11431
  br label %21, !dbg !11454

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11455
  call void @llvm.dbg.value(metadata i32 %22, metadata !11429, metadata !DIExpression()), !dbg !11431
  ret i32 %22, !dbg !11456
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11457 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11461, metadata !DIExpression()), !dbg !11462
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11463
  %2 = icmp ne i32 %1, 0, !dbg !11465
  call void @llvm.dbg.value(metadata i1 %2, metadata !11461, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11462
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11466
  %4 = icmp ne i32 %3, 0, !dbg !11468
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11469
  %6 = zext i1 %5 to i32, !dbg !11469
  call void @llvm.dbg.value(metadata i32 %6, metadata !11461, metadata !DIExpression()), !dbg !11462
  ret i32 %6, !dbg !11470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11476, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11478
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11479
  %4 = load i32, i32* %3, align 4, !dbg !11479
  %5 = and i32 %4, 63, !dbg !11480
  %6 = udiv i32 %0, %5, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %6, metadata !11477, metadata !DIExpression()), !dbg !11478
  %7 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11482
  %8 = load i32, i32* %7, align 4, !dbg !11482
  %9 = and i32 %8, 511, !dbg !11483
  %10 = mul i32 %9, %6, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %10, metadata !11477, metadata !DIExpression()), !dbg !11478
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11485
  %12 = load i32, i32* %11, align 4, !dbg !11485
  %13 = lshr i32 %12, 15, !dbg !11486
  %14 = and i32 %13, 131070, !dbg !11486
  %15 = add nuw nsw i32 %14, 2, !dbg !11486
  %16 = udiv i32 %10, %15, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %16, metadata !11477, metadata !DIExpression()), !dbg !11478
  ret i32 %16, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.96() unnamed_addr #16 !dbg !11489 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11490
  %2 = lshr i32 %1, 1, !dbg !11491
  %3 = and i32 %2, 1, !dbg !11491
  ret i32 %3, !dbg !11492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.97() unnamed_addr #15 !dbg !11493 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11494
  %2 = or i32 %1, 1, !dbg !11494
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11494
  ret void, !dbg !11495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11498, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 %1, metadata !11499, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 %2, metadata !11500, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.value(metadata i32 %3, metadata !11501, metadata !DIExpression()), !dbg !11502
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11503
  %6 = and i32 %5, -4227072, !dbg !11503
  %7 = or i32 %1, %0, !dbg !11503
  %8 = shl i32 %2, 6, !dbg !11503
  %9 = or i32 %7, %8, !dbg !11503
  %10 = or i32 %9, %6, !dbg !11503
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11503
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11504
  %12 = and i32 %11, -196609, !dbg !11504
  %13 = or i32 %12, %3, !dbg !11504
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11504
  ret void, !dbg !11505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.sys_memory_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11510, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !11511, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 0, metadata !11512, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.value(metadata i32 0, metadata !11513, metadata !DIExpression()), !dbg !11514
  %3 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !11515
  %4 = load i32, i32* %3, align 4, !dbg !11515
  %5 = lshr i32 %4, 4, !dbg !11515
  %6 = and i32 %5, 15, !dbg !11515
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11515
  %8 = load i8, i8* %7, align 1, !dbg !11515
  %9 = zext i8 %8 to i32, !dbg !11515
  %10 = lshr i32 %0, %9, !dbg !11515
  call void @llvm.dbg.value(metadata i32 %10, metadata !11513, metadata !DIExpression()), !dbg !11514
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11516
  %12 = icmp ult i32 %11, %10, !dbg !11518
  br i1 %12, label %13, label %16, !dbg !11519

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11520
  call void @llvm.dbg.value(metadata i32 %14, metadata !11512, metadata !DIExpression()), !dbg !11514
  %15 = icmp eq i32 %14, 0, !dbg !11522
  br i1 %15, label %16, label %30, !dbg !11524

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.99() #26, !dbg !11525
  br label %17, !dbg !11527

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.100() #26, !dbg !11528
  %19 = icmp eq i32 %18, 1, !dbg !11529
  br i1 %19, label %20, label %17, !dbg !11527, !llvm.loop !11530

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11532
  tail call fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %21) #26, !dbg !11533
  tail call fastcc void @LL_RCC_SetSysClkSource.102() #26, !dbg !11534
  br label %22, !dbg !11535

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.103() #26, !dbg !11536
  %24 = icmp eq i32 %23, 8, !dbg !11537
  br i1 %24, label %25, label %22, !dbg !11535, !llvm.loop !11538

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !11540
  %27 = load i32, i32* %26, align 4, !dbg !11540
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %27) #26, !dbg !11541
  %28 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !11542
  %29 = load i32, i32* %28, align 4, !dbg !11542
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %29) #26, !dbg !11543
  br label %30, !dbg !11544

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11545
  %33 = icmp ugt i32 %32, %10, !dbg !11547
  br i1 %33, label %34, label %36, !dbg !11548

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11549
  call void @llvm.dbg.value(metadata i32 %35, metadata !11512, metadata !DIExpression()), !dbg !11514
  br label %36, !dbg !11551

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11514
  call void @llvm.dbg.value(metadata i32 %37, metadata !11512, metadata !DIExpression()), !dbg !11514
  %38 = icmp eq i32 %37, 0, !dbg !11552
  br i1 %38, label %39, label %40, !dbg !11554

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11555
  br label %40, !dbg !11557

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.99() unnamed_addr #15 !dbg !11559 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11560
  %2 = or i32 %1, 16777216, !dbg !11560
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11560
  ret void, !dbg !11561
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.100() unnamed_addr #16 !dbg !11562 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11563
  %2 = lshr i32 %1, 25, !dbg !11564
  %3 = and i32 %2, 1, !dbg !11564
  ret i32 %3, !dbg !11565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.101(i32 noundef %0) unnamed_addr #15 !dbg !11566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11568, metadata !DIExpression()), !dbg !11569
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11570
  %3 = and i32 %2, -241, !dbg !11570
  %4 = or i32 %3, %0, !dbg !11570
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11570
  ret void, !dbg !11571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.102() unnamed_addr #15 !dbg !11572 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11574, metadata !DIExpression()), !dbg !11575
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11576
  %2 = and i32 %1, -4, !dbg !11576
  %3 = or i32 %2, 2, !dbg !11576
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11576
  ret void, !dbg !11577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.103() unnamed_addr #16 !dbg !11578 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11579
  %2 = and i32 %1, 12, !dbg !11579
  ret i32 %2, !dbg !11580
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.104(i32 noundef %0) unnamed_addr #15 !dbg !11581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11583, metadata !DIExpression()), !dbg !11584
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11585
  %3 = and i32 %2, -7169, !dbg !11585
  %4 = or i32 %3, %0, !dbg !11585
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11585
  ret void, !dbg !11586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.105(i32 noundef %0) unnamed_addr #15 !dbg !11587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11589, metadata !DIExpression()), !dbg !11590
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  %3 = and i32 %2, -57345, !dbg !11591
  %4 = or i32 %3, %0, !dbg !11591
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11593 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11594
  %2 = lshr i32 %1, 27, !dbg !11595
  %3 = and i32 %2, 1, !dbg !11595
  ret i32 %3, !dbg !11596
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.sys_memory_stats* nocapture noundef readonly %2, %struct.sys_memory_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11601, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 %1, metadata !11602, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %2, metadata !11603, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %3, metadata !11604, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 0, metadata !11605, metadata !DIExpression()), !dbg !11607
  call void @llvm.dbg.value(metadata i32 0, metadata !11606, metadata !DIExpression()), !dbg !11607
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11608
  %6 = icmp eq i32 %5, 0, !dbg !11610
  br i1 %6, label %7, label %27, !dbg !11611

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.sys_memory_stats* noundef %2) #26, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %8, metadata !11606, metadata !DIExpression()), !dbg !11607
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.106() #26, !dbg !11614
  %10 = icmp eq i32 %9, 1, !dbg !11616
  br i1 %10, label %19, label %11, !dbg !11617

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11618
  br i1 %12, label %13, label %14, !dbg !11621

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11622
  br label %15, !dbg !11624

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.107() #26, !dbg !11625
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.108() #26, !dbg !11627
  br label %16, !dbg !11628

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.106() #26, !dbg !11629
  %18 = icmp eq i32 %17, 1, !dbg !11630
  br i1 %18, label %19, label %16, !dbg !11628, !llvm.loop !11631

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 0, !dbg !11633
  %21 = load i32, i32* %20, align 4, !dbg !11633
  %22 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 1, !dbg !11634
  %23 = load i32, i32* %22, align 4, !dbg !11634
  %24 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %2, i32 0, i32 2, !dbg !11635
  %25 = load i32, i32* %24, align 4, !dbg !11635
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.98(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11636
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.sys_memory_stats* noundef %3) #26, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %26, metadata !11605, metadata !DIExpression()), !dbg !11607
  br label %27, !dbg !11638

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11639
  call void @llvm.dbg.value(metadata i32 %28, metadata !11605, metadata !DIExpression()), !dbg !11607
  ret i32 %28, !dbg !11640
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.106() unnamed_addr #16 !dbg !11641 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11642
  %2 = lshr i32 %1, 17, !dbg !11643
  %3 = and i32 %2, 1, !dbg !11643
  ret i32 %3, !dbg !11644
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11645 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  %2 = or i32 %1, 262144, !dbg !11646
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  ret void, !dbg !11647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.107() unnamed_addr #15 !dbg !11648 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11649
  %2 = and i32 %1, -262145, !dbg !11649
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11649
  ret void, !dbg !11650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.108() unnamed_addr #15 !dbg !11651 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11652
  %2 = or i32 %1, 65536, !dbg !11652
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11652
  ret void, !dbg !11653
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11654 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11657, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11657, metadata !DIExpression()), !dbg !11673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11657, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11673
  ret void, !dbg !11674
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11679, metadata !DIExpression()), !dbg !11681
  %2 = icmp eq i8* %0, null, !dbg !11682
  br i1 %2, label %29, label %3, !dbg !11684

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11685
  %5 = icmp eq i8 %4, 0, !dbg !11686
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11687
  br i1 %6, label %29, label %8, !dbg !11687

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11680, metadata !DIExpression()), !dbg !11681
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11688

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11680, metadata !DIExpression()), !dbg !11681
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11690
  br i1 %10, label %11, label %15, !dbg !11695

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11696
  %13 = load i8*, i8** %12, align 4, !dbg !11696
  %14 = icmp eq i8* %13, %0, !dbg !11697
  br i1 %14, label %29, label %15, !dbg !11698

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11699
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11680, metadata !DIExpression()), !dbg !11681
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11700
  br i1 %17, label %7, label %8, !dbg !11701, !llvm.loop !11702

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11680, metadata !DIExpression()), !dbg !11681
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11704
  br i1 %20, label %21, label %26, !dbg !11708

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11709
  %23 = load i8*, i8** %22, align 4, !dbg !11709
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11710
  %25 = icmp eq i32 %24, 0, !dbg !11711
  br i1 %25, label %29, label %26, !dbg !11712

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11713
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11680, metadata !DIExpression()), !dbg !11681
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11714
  br i1 %28, label %29, label %18, !dbg !11688, !llvm.loop !11715

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11681
  ret %struct.device* %30, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11722, metadata !DIExpression()), !dbg !11723
  %2 = icmp eq %struct.device* %0, null, !dbg !11724
  br i1 %2, label %14, label %3, !dbg !11726

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11727
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11727
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11728
  %7 = load i8, i8* %6, align 1, !dbg !11728
  %8 = and i8 %7, 1, !dbg !11728
  %9 = icmp eq i8 %8, 0, !dbg !11728
  br i1 %9, label %14, label %10, !dbg !11729

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11730
  %12 = load i8, i8* %11, align 1, !dbg !11730
  %13 = icmp eq i8 %12, 0, !dbg !11731
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11723
  ret i1 %15, !dbg !11732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11733 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11738, metadata !DIExpression()), !dbg !11739
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11740
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11742 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11750, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11751, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.value(metadata i8* %2, metadata !11752, metadata !DIExpression()), !dbg !11755
  %5 = bitcast i32* %4 to i8*, !dbg !11756
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11756
  call void @llvm.dbg.value(metadata i32 0, metadata !11753, metadata !DIExpression()), !dbg !11755
  store i32 0, i32* %4, align 4, !dbg !11757
  call void @llvm.dbg.value(metadata i32* %4, metadata !11753, metadata !DIExpression(DW_OP_deref)), !dbg !11755
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11758
  call void @llvm.dbg.value(metadata i16* %6, metadata !11754, metadata !DIExpression()), !dbg !11755
  %7 = load i32, i32* %4, align 4, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %7, metadata !11753, metadata !DIExpression()), !dbg !11755
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11760
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11761
  ret i32 %8, !dbg !11762
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11767, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.value(metadata i32* %1, metadata !11768, metadata !DIExpression()), !dbg !11773
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11774
  %4 = load i16*, i16** %3, align 4, !dbg !11774
  call void @llvm.dbg.value(metadata i16* %4, metadata !11769, metadata !DIExpression()), !dbg !11773
  %5 = icmp eq i16* %4, null, !dbg !11775
  br i1 %5, label %14, label %6, !dbg !11776

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11777
  call void @llvm.dbg.value(metadata i32 %7, metadata !11770, metadata !DIExpression()), !dbg !11777
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11778
  %9 = load i16, i16* %8, align 2, !dbg !11778
  %10 = add i16 %9, -32767, !dbg !11779
  %11 = icmp ult i16 %10, 2, !dbg !11779
  %12 = add i32 %7, 1, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %12, metadata !11770, metadata !DIExpression()), !dbg !11777
  br i1 %11, label %13, label %6, !dbg !11779, !llvm.loop !11782

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11785
  br label %14, !dbg !11786

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11788 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11792, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i32 %1, metadata !11793, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11794, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i8* %3, metadata !11795, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.value(metadata i32 0, metadata !11796, metadata !DIExpression()), !dbg !11804
  %5 = icmp eq i32 %1, 0, !dbg !11805
  br i1 %5, label %16, label %8, !dbg !11806

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11796, metadata !DIExpression()), !dbg !11804
  %7 = icmp eq i32 %15, %1, !dbg !11805
  br i1 %7, label %16, label %8, !dbg !11806, !llvm.loop !11807

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11796, metadata !DIExpression()), !dbg !11804
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11809
  %11 = load i16, i16* %10, align 2, !dbg !11809
  call void @llvm.dbg.value(metadata i16 %11, metadata !11798, metadata !DIExpression()), !dbg !11810
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11811
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11801, metadata !DIExpression()), !dbg !11810
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11812
  call void @llvm.dbg.value(metadata i32 %13, metadata !11802, metadata !DIExpression()), !dbg !11810
  %14 = icmp slt i32 %13, 0, !dbg !11813
  %15 = add nuw i32 %9, 1, !dbg !11815
  call void @llvm.dbg.value(metadata i32 %15, metadata !11796, metadata !DIExpression()), !dbg !11804
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11817 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11821, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11822, metadata !DIExpression()), !dbg !11824
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11823, metadata !DIExpression()), !dbg !11824
  %2 = sext i16 %0 to i32, !dbg !11825
  %3 = icmp slt i16 %0, 1, !dbg !11827
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11828
  %6 = add nsw i32 %2, -1, !dbg !11828
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11828
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11828
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11822, metadata !DIExpression()), !dbg !11824
  ret %struct.device* %8, !dbg !11829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11830 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11832, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11833, metadata !DIExpression()), !dbg !11837
  call void @llvm.dbg.value(metadata i8* %2, metadata !11834, metadata !DIExpression()), !dbg !11837
  %5 = bitcast i32* %4 to i8*, !dbg !11838
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11838
  call void @llvm.dbg.value(metadata i32 0, metadata !11835, metadata !DIExpression()), !dbg !11837
  store i32 0, i32* %4, align 4, !dbg !11839
  call void @llvm.dbg.value(metadata i32* %4, metadata !11835, metadata !DIExpression(DW_OP_deref)), !dbg !11837
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11840
  call void @llvm.dbg.value(metadata i16* %6, metadata !11836, metadata !DIExpression()), !dbg !11837
  %7 = load i32, i32* %4, align 4, !dbg !11841
  call void @llvm.dbg.value(metadata i32 %7, metadata !11835, metadata !DIExpression()), !dbg !11837
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11843
  ret i32 %8, !dbg !11844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11847, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32* %1, metadata !11848, metadata !DIExpression()), !dbg !11852
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11853
  %4 = load i16*, i16** %3, align 4, !dbg !11853
  call void @llvm.dbg.value(metadata i16* %4, metadata !11849, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 0, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i32 0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %5 = icmp eq i16* %4, null, !dbg !11854
  br i1 %5, label %22, label %6, !dbg !11856

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11850, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.value(metadata i16* %8, metadata !11849, metadata !DIExpression()), !dbg !11852
  %9 = load i16, i16* %8, align 2, !dbg !11857
  %10 = icmp eq i16 %9, -32768, !dbg !11861
  call void @llvm.dbg.value(metadata i32 undef, metadata !11850, metadata !DIExpression()), !dbg !11852
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11862
  call void @llvm.dbg.value(metadata i16* %11, metadata !11849, metadata !DIExpression()), !dbg !11852
  %12 = zext i1 %10 to i32, !dbg !11863
  %13 = add i32 %7, %12, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %13, metadata !11850, metadata !DIExpression()), !dbg !11852
  %14 = icmp eq i32 %13, 2, !dbg !11864
  br i1 %14, label %15, label %6, !dbg !11865

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11852
  call void @llvm.dbg.value(metadata i32 %16, metadata !11851, metadata !DIExpression()), !dbg !11852
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11866
  %18 = load i16, i16* %17, align 2, !dbg !11866
  %19 = icmp eq i16 %18, 32767, !dbg !11867
  %20 = add i32 %16, 1, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %20, metadata !11851, metadata !DIExpression()), !dbg !11852
  br i1 %19, label %21, label %15, !dbg !11870, !llvm.loop !11871

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11873
  br label %22, !dbg !11874

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11875
  call void @llvm.dbg.value(metadata i16* %23, metadata !11849, metadata !DIExpression()), !dbg !11852
  ret i16* %23, !dbg !11876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !11877 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11880
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11881
  ret i32* %2, !dbg !11882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !11883 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12031, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12032, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12033, metadata !DIExpression()), !dbg !12034
  ret void, !dbg !12035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12040, metadata !DIExpression()), !dbg !12042
  call void @llvm.dbg.value(metadata i32 %1, metadata !12041, metadata !DIExpression()), !dbg !12042
  ret void, !dbg !12043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12048, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %1, metadata !12049, metadata !DIExpression()), !dbg !12050
  ret void, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12056, metadata !DIExpression()), !dbg !12058
  call void @llvm.dbg.value(metadata i8* %1, metadata !12057, metadata !DIExpression()), !dbg !12058
  ret i32 -134, !dbg !12059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12064, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.value(metadata i8* %1, metadata !12065, metadata !DIExpression()), !dbg !12066
  ret i32 -134, !dbg !12067
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12071, metadata !DIExpression()), !dbg !12072
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12073, !srcloc !12079
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #24, !dbg !12080
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #24, !dbg !12080
  br label %3, !dbg !12081

3:                                                ; preds = %3, %1
  br label %3, !dbg !12082, !llvm.loop !12085
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12092, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12093, metadata !DIExpression()), !dbg !12094
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12095
  unreachable, !dbg !12095
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12098, metadata !DIExpression()), !dbg !12099
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !12100
  unreachable, !dbg !12100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12103, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12104, metadata !DIExpression()), !dbg !12107
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12108, !srcloc !12079
  call void @llvm.dbg.value(metadata i32 undef, metadata !12076, metadata !DIExpression()) #24, !dbg !12110
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #24, !dbg !12110
  call void @llvm.dbg.value(metadata i32 undef, metadata !12105, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12106, metadata !DIExpression()), !dbg !12107
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12111
  br i1 %4, label %6, label %5, !dbg !12113

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12114
  br label %7, !dbg !12115

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12114
  br label %7, !dbg !12118

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %8, metadata !12076, metadata !DIExpression()) #24, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %8, metadata !12105, metadata !DIExpression()), !dbg !12107
  %9 = tail call fastcc %struct.k_thread* @k_current_get.115() #27, !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12106, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12121, metadata !DIExpression()) #24, !dbg !12124
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12126, !srcloc !12127
  tail call fastcc void @k_thread_abort.116(%struct.k_thread* noundef %9) #26, !dbg !12128
  ret void, !dbg !12131
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.115() unnamed_addr #9 !dbg !12132 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.117() #27, !dbg !12136
  ret %struct.k_thread* %1, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.116(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12142, metadata !DIExpression()), !dbg !12143
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12144, !srcloc !12146
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12147
  ret void, !dbg !12148
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.117() unnamed_addr #9 !dbg !12149 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12150, !srcloc !12152
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12153
  ret %struct.k_thread* %1, !dbg !12154
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12155 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12159, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata i32 %1, metadata !12160, metadata !DIExpression()), !dbg !12162
  call void @llvm.dbg.value(metadata i32 %2, metadata !12161, metadata !DIExpression()), !dbg !12162
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12163
  ret void, !dbg !12164
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12169, metadata !DIExpression()), !dbg !12172
  call void @llvm.dbg.value(metadata i8* %1, metadata !12170, metadata !DIExpression()), !dbg !12172
  call void @llvm.dbg.value(metadata i32 %2, metadata !12171, metadata !DIExpression()), !dbg !12172
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12175 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12176
  ret void, !dbg !12177
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12180, metadata !DIExpression()), !dbg !12181
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12182
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12183
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12184
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12185
  %4 = trunc i32 %0 to i8, !dbg !12186
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12187
  store i8 %4, i8* %5, align 4, !dbg !12188
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12189
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12190
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12191
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12192
  store i8* %8, i8** %9, align 4, !dbg !12193
  ret void, !dbg !12194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12197, metadata !DIExpression()), !dbg !12203
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12204
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12198, metadata !DIExpression()), !dbg !12203
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12205
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12199, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.value(metadata i8* null, metadata !12202, metadata !DIExpression()), !dbg !12203
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12206
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12207
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12208
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12209
  ret void, !dbg !12210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12211 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12215, metadata !DIExpression()), !dbg !12216
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12217
  ret i8* %2, !dbg !12218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12224, metadata !DIExpression()), !dbg !12225
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12226
  %3 = load i8, i8* %2, align 1, !dbg !12227
  %4 = and i8 %3, -5, !dbg !12227
  store i8 %4, i8* %2, align 1, !dbg !12227
  ret void, !dbg !12228
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12229 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12232
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12233
  %3 = ptrtoint i8* %2 to i32, !dbg !12242
  %4 = add i32 %3, 2048, !dbg !12243
  call void @llvm.dbg.value(metadata i32 %4, metadata !12237, metadata !DIExpression()) #24, !dbg !12244
  call void @llvm.dbg.value(metadata i32 %4, metadata !12245, metadata !DIExpression()) #24, !dbg !12248
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12250, !srcloc !12251
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12252
  %6 = or i32 %5, 512, !dbg !12252
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12252
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -2, i32 noundef 255) #25, !dbg !12253
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -5, i32 noundef 0) #25, !dbg !12256
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -12, i32 noundef 0) #25, !dbg !12257
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -11, i32 noundef 0) #25, !dbg !12258
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -10, i32 noundef 0) #25, !dbg !12259
  tail call fastcc void @__NVIC_SetPriority.124(i32 noundef -4, i32 noundef 0) #25, !dbg !12260
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12261
  %8 = or i32 %7, 458752, !dbg !12261
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12261
  tail call void @z_arm_fault_init() #25, !dbg !12262
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12263
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12264
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12267
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12268
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12269
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12270
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !12270
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12231, metadata !DIExpression()), !dbg !12271
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12272
  call void @z_device_state_init() #25, !dbg !12273
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12274
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12275
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12276
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !12277
  unreachable, !dbg !12277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1914, metadata !DIExpression()), !dbg !12278
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12279
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12279
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1915, metadata !DIExpression()), !dbg !12278
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1915, metadata !DIExpression()), !dbg !12278
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12280
  br i1 %7, label %8, label %35, !dbg !12281

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1915, metadata !DIExpression()), !dbg !12278
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12282
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12282
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1925, metadata !DIExpression()), !dbg !12283
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12284
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12284
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12285
  call void @llvm.dbg.value(metadata i32 %14, metadata !1929, metadata !DIExpression()), !dbg !12283
  %15 = icmp eq %struct.device* %11, null, !dbg !12286
  br i1 %15, label %32, label %16, !dbg !12288

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12289
  br i1 %17, label %26, label %18, !dbg !12292

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12293
  call void @llvm.dbg.value(metadata i32 %19, metadata !1929, metadata !DIExpression()), !dbg !12283
  %20 = icmp ult i32 %19, 255, !dbg !12295
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12295
  call void @llvm.dbg.value(metadata i32 %21, metadata !1929, metadata !DIExpression()), !dbg !12283
  %22 = trunc i32 %21 to i8, !dbg !12296
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12297
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12297
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12298
  store i8 %22, i8* %25, align 1, !dbg !12299
  br label %26, !dbg !12300

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12301
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12301
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12302
  %30 = load i8, i8* %29, align 1, !dbg !12303
  %31 = or i8 %30, 1, !dbg !12303
  store i8 %31, i8* %29, align 1, !dbg !12303
  br label %32, !dbg !12304

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12305
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1915, metadata !DIExpression()), !dbg !12278
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12280
  br i1 %34, label %8, label %35, !dbg !12281, !llvm.loop !12306

35:                                               ; preds = %32, %1
  ret void, !dbg !12308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.124(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12311, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 %1, metadata !12312, metadata !DIExpression()), !dbg !12313
  %3 = trunc i32 %1 to i8, !dbg !12314
  %4 = shl i8 %3, 4, !dbg !12314
  %5 = and i32 %0, 15, !dbg !12317
  %6 = add nsw i32 %5, -4, !dbg !12318
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12319
  store volatile i8 %4, i8* %7, align 1, !dbg !12320
  ret void, !dbg !12321
}

; Function Attrs: optsize
declare !dbg !12322 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12323 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12326, metadata !DIExpression()), !dbg !12327
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12328
  store i8 1, i8* %2, align 1, !dbg !12329
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12330
  store i8 1, i8* %3, align 4, !dbg !12331
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12332
  store i32 0, i32* %4, align 4, !dbg !12333
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12334
  store i32 0, i32* %5, align 4, !dbg !12335
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12336
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12337
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12338
  ret void, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12340 {
  tail call void @z_sched_init() #25, !dbg !12345
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12346
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0)) #25, !dbg !12347
  call void @llvm.dbg.value(metadata i8* %1, metadata !12344, metadata !DIExpression()), !dbg !12348
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12349
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12350
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12351
  ret i8* %1, !dbg !12352
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12353 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12357, metadata !DIExpression()), !dbg !12358
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12359
  unreachable, !dbg !12360
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12361 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12363, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i8* %1, metadata !12364, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i8* %2, metadata !12365, metadata !DIExpression()), !dbg !12366
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12367
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12368
  tail call void @boot_banner() #25, !dbg !12369
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12370
  tail call void @z_init_static_threads() #25, !dbg !12371
  tail call void @main() #25, !dbg !12372
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12373
  %5 = and i8 %4, -2, !dbg !12373
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12373
  ret void, !dbg !12374
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12375 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12385, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.value(metadata i8* %1, metadata !12386, metadata !DIExpression()), !dbg !12387
  ret void, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12389 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12391, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.value(metadata i8* %1, metadata !12392, metadata !DIExpression()), !dbg !12393
  ret void, !dbg !12394
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12395 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12396, !srcloc !12403
  call void @llvm.dbg.value(metadata i32 %1, metadata !12399, metadata !DIExpression()) #24, !dbg !12404
  %2 = icmp ne i32 %1, 0, !dbg !12405
  ret i1 %2, !dbg !12406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12407 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12408
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12409
  %3 = load i8, i8* %2, align 4, !dbg !12410
  %4 = or i8 %3, 1, !dbg !12410
  store i8 %4, i8* %2, align 4, !dbg !12410
  ret void, !dbg !12411
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12412 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12413
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12414
  %3 = load i8, i8* %2, align 4, !dbg !12415
  %4 = and i8 %3, -2, !dbg !12415
  store i8 %4, i8* %2, align 4, !dbg !12415
  ret void, !dbg !12416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12417 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12419
  %3 = load i8, i8* %2, align 4, !dbg !12419
  %4 = and i8 %3, 1, !dbg !12420
  %5 = icmp ne i8 %4, 0, !dbg !12421
  ret i1 %5, !dbg !12422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12427, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.value(metadata i8* %1, metadata !12428, metadata !DIExpression()), !dbg !12429
  ret i32 -88, !dbg !12430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12435, metadata !DIExpression()), !dbg !12436
  ret i8* null, !dbg !12437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12442, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i8* %1, metadata !12443, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.value(metadata i32 %2, metadata !12444, metadata !DIExpression()), !dbg !12445
  ret i32 -88, !dbg !12446
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2050, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i8* %1, metadata !2051, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 %2, metadata !2052, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 0, metadata !2053, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i8 undef, metadata !2055, metadata !DIExpression()), !dbg !12447
  %4 = icmp eq i8* %1, null, !dbg !12448
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12450
  br i1 %6, label %46, label %7, !dbg !12450

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12451
  %9 = load i8, i8* %8, align 1, !dbg !12451
  call void @llvm.dbg.value(metadata i8 %9, metadata !2055, metadata !DIExpression()), !dbg !12447
  %10 = add i32 %2, -1, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %10, metadata !2052, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i8 0, metadata !2056, metadata !DIExpression()), !dbg !12453
  call void @llvm.dbg.value(metadata i8 %9, metadata !2055, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 0, metadata !2053, metadata !DIExpression()), !dbg !12447
  %11 = icmp eq i8 %9, 0, !dbg !12454
  br i1 %11, label %12, label %15, !dbg !12456

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12457
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12458
  store i8 0, i8* %14, align 1, !dbg !12459
  br label %46, !dbg !12460

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2056, metadata !DIExpression()), !dbg !12453
  call void @llvm.dbg.value(metadata i8 %17, metadata !2055, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 %18, metadata !2053, metadata !DIExpression()), !dbg !12447
  %19 = zext i8 %17 to i32, !dbg !12461
  %20 = zext i8 %16 to i32, !dbg !12462
  %21 = shl nuw i32 1, %20, !dbg !12462
  call void @llvm.dbg.value(metadata i32 %21, metadata !2054, metadata !DIExpression()), !dbg !12447
  %22 = and i32 %21, %19, !dbg !12464
  %23 = icmp eq i32 %22, 0, !dbg !12466
  br i1 %23, label %42, label %24, !dbg !12467

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12468
  %26 = sub i32 %10, %18, !dbg !12469
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12470
  %28 = load i8*, i8** %27, align 4, !dbg !12470
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12471
  %30 = load i32, i32* %29, align 4, !dbg !12471
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12472
  %32 = add i32 %31, %18, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %32, metadata !2053, metadata !DIExpression()), !dbg !12447
  %33 = trunc i32 %21 to i8, !dbg !12474
  %34 = xor i8 %33, -1, !dbg !12474
  %35 = and i8 %17, %34, !dbg !12474
  call void @llvm.dbg.value(metadata i8 %35, metadata !2055, metadata !DIExpression()), !dbg !12447
  %36 = icmp eq i8 %35, 0, !dbg !12475
  br i1 %36, label %12, label %37, !dbg !12477

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12478
  %39 = sub i32 %10, %32, !dbg !12480
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12481
  %41 = add i32 %40, %32, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %41, metadata !2053, metadata !DIExpression()), !dbg !12447
  br label %42, !dbg !12483

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12447
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12447
  call void @llvm.dbg.value(metadata i8 %44, metadata !2055, metadata !DIExpression()), !dbg !12447
  call void @llvm.dbg.value(metadata i32 %43, metadata !2053, metadata !DIExpression()), !dbg !12447
  %45 = add i8 %16, 1, !dbg !12484
  call void @llvm.dbg.value(metadata i8 %45, metadata !2056, metadata !DIExpression()), !dbg !12453
  br label %15, !dbg !12456

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.126, i32 0, i32 0), %3 ], !dbg !12447
  ret i8* %47, !dbg !12485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12486 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12490, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 %1, metadata !12491, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i8* %2, metadata !12492, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 %3, metadata !12493, metadata !DIExpression()), !dbg !12495
  %5 = icmp ult i32 %1, %3, !dbg !12496
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12496
  call void @llvm.dbg.value(metadata i32 %6, metadata !12494, metadata !DIExpression()), !dbg !12495
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12497
  ret i32 %6, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12499 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12503, metadata !DIExpression()), !dbg !12504
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12505
  ret void, !dbg !12506
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12516, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12517, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 %2, metadata !12518, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12519, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i8* %4, metadata !12520, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i8* %5, metadata !12521, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i8* %6, metadata !12522, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 %7, metadata !12523, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i32 %8, metadata !12524, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.value(metadata i8* undef, metadata !12525, metadata !DIExpression()), !dbg !12527
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12528
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !12529
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12530
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12531
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12532
  call void @llvm.dbg.value(metadata i8* %13, metadata !12526, metadata !DIExpression()), !dbg !12527
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12533
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12534
  store i8* null, i8** %14, align 4, !dbg !12535
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12536
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12536
  br i1 %16, label %20, label %17, !dbg !12538

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12539
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12539
  br label %20, !dbg !12540

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12527
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12541
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12543
  ret i8* %13, !dbg !12544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !12545 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12550, metadata !DIExpression()), !dbg !12551
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12552
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12555 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12560, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i32 %1, metadata !12561, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i32 %2, metadata !12562, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.value(metadata i32 %3, metadata !12563, metadata !DIExpression()), !dbg !12564
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12565
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12566
  %6 = trunc i32 %3 to i8, !dbg !12567
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12568
  store i8 %6, i8* %7, align 4, !dbg !12569
  %8 = trunc i32 %2 to i8, !dbg !12570
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12571
  store i8 %8, i8* %9, align 1, !dbg !12572
  %10 = trunc i32 %1 to i8, !dbg !12573
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12574
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12574
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12574
  store i8 %10, i8* %13, align 2, !dbg !12575
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12576
  store i8 0, i8* %14, align 1, !dbg !12577
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12578
  ret void, !dbg !12579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12584, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12585, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 %2, metadata !12586, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 0, metadata !12591, metadata !DIExpression()), !dbg !12592
  %4 = add i32 %2, 7, !dbg !12593
  %5 = and i32 %4, -8, !dbg !12593
  %6 = add i32 %5, 64, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %6, metadata !12587, metadata !DIExpression()), !dbg !12592
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.136(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12595
  call void @llvm.dbg.value(metadata i8* %7, metadata !12590, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 %5, metadata !12588, metadata !DIExpression()), !dbg !12592
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12596
  call void @llvm.dbg.value(metadata i8* %8, metadata !12589, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i32 0, metadata !12591, metadata !DIExpression()), !dbg !12592
  %9 = ptrtoint i8* %7 to i32, !dbg !12597
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12598
  store i32 %9, i32* %10, align 4, !dbg !12599
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12600
  store i32 %5, i32* %11, align 4, !dbg !12601
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12602
  store i32 0, i32* %12, align 4, !dbg !12603
  call void @llvm.dbg.value(metadata i8* %8, metadata !12589, metadata !DIExpression()), !dbg !12592
  ret i8* %8, !dbg !12604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.136(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12605 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12609, metadata !DIExpression()), !dbg !12610
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12611
  ret i8* %2, !dbg !12612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12618, metadata !DIExpression()), !dbg !12619
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12620
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12621
  ret void, !dbg !12622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12623 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12625, metadata !DIExpression()), !dbg !12626
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12627
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12630 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12634, metadata !DIExpression()), !dbg !12635
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12636
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12637
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12638
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12639
  ret void, !dbg !12640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12641 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12646, metadata !DIExpression()), !dbg !12647
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12648
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12649
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12650
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12651
  ret void, !dbg !12652
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12653 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12670, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12661, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12662, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 %2, metadata !12663, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12664, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %4, metadata !12665, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %5, metadata !12666, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i8* %6, metadata !12667, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 %7, metadata !12668, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.value(metadata i32 %8, metadata !12669, metadata !DIExpression()), !dbg !12671
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12672
  %13 = icmp eq i64 %11, -1, !dbg !12673
  br i1 %13, label %15, label %14, !dbg !12675

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12676
  br label %15, !dbg !12678

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12680 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12685, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12684, metadata !DIExpression()), !dbg !12686
  %4 = icmp eq i64 %3, 0, !dbg !12687
  br i1 %4, label %5, label %6, !dbg !12689

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12690
  br label %7, !dbg !12692

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12693
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12696 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12700, metadata !DIExpression()), !dbg !12701
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12702, !srcloc !12704
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12707 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12709, metadata !DIExpression()), !dbg !12711
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12712
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12713
  ret void, !dbg !12714
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12715 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12717, metadata !DIExpression()), !dbg !12737
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12738

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12739
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12735, metadata !DIExpression()), !dbg !12740
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12741

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12717, metadata !DIExpression()), !dbg !12737
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12742
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12742
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12745
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12745
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12746
  %9 = load i32, i32* %8, align 4, !dbg !12746
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12747
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12747
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12748
  %13 = load i8*, i8** %12, align 4, !dbg !12748
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12749
  %15 = load i8*, i8** %14, align 4, !dbg !12749
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12750
  %17 = load i8*, i8** %16, align 4, !dbg !12750
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12751
  %19 = load i32, i32* %18, align 4, !dbg !12751
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12752
  %21 = load i32, i32* %20, align 4, !dbg !12752
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12753
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12754
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12755
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12756
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12756
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12757
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12717, metadata !DIExpression()), !dbg !12737
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12758
  br i1 %27, label %2, label %1, !dbg !12738, !llvm.loop !12760

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !12739
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12735, metadata !DIExpression()), !dbg !12740
  br label %29, !dbg !12741

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !12762
  ret void, !dbg !12763

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12735, metadata !DIExpression()), !dbg !12740
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12764
  %33 = load i32, i32* %32, align 4, !dbg !12764
  %34 = icmp eq i32 %33, -1, !dbg !12768
  br i1 %34, label %43, label %35, !dbg !12769

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12770
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12770
  %38 = icmp sgt i32 %33, 0, !dbg !12772
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12772
  %40 = zext i32 %39 to i64, !dbg !12772
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12772
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12773
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12773
  br label %43, !dbg !12774

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12775
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12735, metadata !DIExpression()), !dbg !12740
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12776
  br i1 %45, label %30, label %29, !dbg !12741, !llvm.loop !12778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12780 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12785, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.value(metadata i64 %0, metadata !12787, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i32 1000, metadata !12792, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i32 10000, metadata !12793, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 1, metadata !12794, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 0, metadata !12795, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 1, metadata !12796, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 0, metadata !12797, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 1, metadata !12798, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i8 0, metadata !12799, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i64 0, metadata !12800, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.value(metadata i64 0, metadata !12800, metadata !DIExpression()), !dbg !12804
  %2 = mul i64 %0, 10, !dbg !12806
  ret i64 %2, !dbg !12812
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12813 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12815, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i8* %1, metadata !12816, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i8* %2, metadata !12817, metadata !DIExpression()), !dbg !12819
  call void @llvm.dbg.value(metadata i8* %3, metadata !12818, metadata !DIExpression()), !dbg !12819
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12820
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12821
  %7 = load i8, i8* %6, align 4, !dbg !12822
  %8 = or i8 %7, 4, !dbg !12822
  store i8 %8, i8* %6, align 4, !dbg !12822
  tail call void @z_thread_essential_clear() #26, !dbg !12823
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12824
  unreachable, !dbg !12824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12829, metadata !DIExpression()), !dbg !12830
  ret i32 -134, !dbg !12831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12836, metadata !DIExpression()), !dbg !12838
  call void @llvm.dbg.value(metadata i32 %1, metadata !12837, metadata !DIExpression()), !dbg !12838
  ret i32 -134, !dbg !12839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !12840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12847, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !12848, metadata !DIExpression()), !dbg !12849
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12850
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !12852
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12849
  ret i32 %6, !dbg !12853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !12854 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12858, metadata !DIExpression()), !dbg !12859
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !12860
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12859
  ret i32 %3, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12863 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12865
  ret void, !dbg !12866
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !12867 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12869, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i8* %1, metadata !12870, metadata !DIExpression()), !dbg !12872
  call void @llvm.dbg.value(metadata i8* %2, metadata !12871, metadata !DIExpression()), !dbg !12872
  br label %4, !dbg !12873

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12874, !srcloc !12881
  call void @llvm.dbg.value(metadata i32 undef, metadata !12877, metadata !DIExpression()) #24, !dbg !12882
  call void @llvm.dbg.value(metadata i32 undef, metadata !12878, metadata !DIExpression()) #24, !dbg !12882
  tail call fastcc void @k_cpu_idle() #26, !dbg !12883
  br label %4, !dbg !12873, !llvm.loop !12884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12886 {
  tail call void @arch_cpu_idle() #25, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: optsize
declare !dbg !12889 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12890 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12894, metadata !DIExpression()), !dbg !12898
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12895, metadata !DIExpression()), !dbg !12898
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12899
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12899
  %5 = load i8, i8* %4, align 2, !dbg !12899
  call void @llvm.dbg.value(metadata i8 %5, metadata !12896, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12898
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12900
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12900
  %8 = load i8, i8* %7, align 2, !dbg !12900
  call void @llvm.dbg.value(metadata i8 %8, metadata !12897, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12898
  %9 = icmp eq i8 %8, %5, !dbg !12901
  %10 = sext i8 %5 to i32, !dbg !12903
  %11 = sext i8 %8 to i32, !dbg !12903
  %12 = sub nsw i32 %11, %10, !dbg !12903
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12903
  ret i32 %13, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12909, metadata !DIExpression()), !dbg !12910
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !12911
  %3 = icmp eq i32 %2, 0, !dbg !12913
  br i1 %3, label %8, label %4, !dbg !12914

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12915
  %6 = add i32 %5, %2, !dbg !12917
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12918
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !12919
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12920
  br label %8, !dbg !12921

8:                                                ; preds = %4, %1
  ret void, !dbg !12922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !12923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12927, metadata !DIExpression()), !dbg !12929
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12930
  call void @llvm.dbg.value(metadata i32 %1, metadata !12928, metadata !DIExpression()), !dbg !12929
  ret i32 %1, !dbg !12931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12936, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 %1, metadata !12937, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 0, metadata !12938, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !12954
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12956, !srcloc !12962
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12956
  call void @llvm.dbg.value(metadata i32 %4, metadata !12959, metadata !DIExpression()) #24, !dbg !12963
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !12963
  call void @llvm.dbg.value(metadata i32 %4, metadata !12953, metadata !DIExpression()) #24, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %4, metadata !12944, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12938, metadata !DIExpression()), !dbg !12946
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12964
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !12967
  %6 = icmp sgt i32 %0, 0, !dbg !12968
  %7 = icmp sgt i32 %5, 2, !dbg !12970
  %8 = select i1 %7, i32 %5, i32 2, !dbg !12970
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !12970
  store i32 %9, i32* @slice_ticks, align 4, !dbg !12971
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12972
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12973
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !12980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !12980
  call void @llvm.dbg.value(metadata i32 %4, metadata !12982, metadata !DIExpression()) #24, !dbg !12985
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !12987, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !12938, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12938, metadata !DIExpression()), !dbg !12946
  ret void, !dbg !12989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !12990 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 %0, metadata !12994, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13009
  call void @llvm.dbg.value(metadata i32 1000, metadata !12997, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i32 10000, metadata !12998, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i8 1, metadata !12999, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i1 true, metadata !13000, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13009
  call void @llvm.dbg.value(metadata i1 true, metadata !13001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13009
  call void @llvm.dbg.value(metadata i8 0, metadata !13002, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i1 true, metadata !13003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13009
  call void @llvm.dbg.value(metadata i1 false, metadata !13004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13009
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !13009
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !13009
  %2 = mul i32 %0, 10, !dbg !13011
  ret i32 %2, !dbg !13017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13020, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13023
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13025, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13025
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13027
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %3, metadata !13021, metadata !DIExpression()), !dbg !13022
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13028
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13030
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13031
  br i1 %6, label %7, label %8, !dbg !13032

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13033
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13039, !srcloc !12988
  br label %24, !dbg !13040

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13041
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13042
  %10 = icmp eq i32 %9, 0, !dbg !13042
  br i1 %10, label %21, label %11, !dbg !13044

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13045
  br i1 %12, label %13, label %21, !dbg !13046

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13047
  %15 = icmp sgt i32 %14, %0, !dbg !13050
  br i1 %15, label %19, label %16, !dbg !13051

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13052
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13052
  call void @llvm.dbg.value(metadata i32 %18, metadata !13021, metadata !DIExpression()), !dbg !13022
  br label %22, !dbg !13054

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13055
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13055
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13057
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13022
  call void @llvm.dbg.value(metadata i32 %23, metadata !13021, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.value(metadata i32 %23, metadata !12974, metadata !DIExpression()) #24, !dbg !13059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %23, metadata !12982, metadata !DIExpression()) #24, !dbg !13061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !13063, !srcloc !12988
  br label %24, !dbg !13064

24:                                               ; preds = %22, %7
  ret void, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13069, metadata !DIExpression()), !dbg !13071
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13072
  %3 = icmp eq i32 %2, 0, !dbg !13072
  br i1 %3, label %16, label %4, !dbg !13073

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13074
  br i1 %5, label %16, label %6, !dbg !13075

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13076
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13076
  %9 = load i8, i8* %8, align 2, !dbg !13076
  %10 = sext i8 %9 to i32, !dbg !13077
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13078
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13079
  br i1 %12, label %16, label %13, !dbg !13080

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13081
  %15 = xor i1 %14, true, !dbg !13082
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13071
  call void @llvm.dbg.value(metadata i1 %17, metadata !13070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13071
  ret i1 %17, !dbg !13083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13084 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13088, metadata !DIExpression()), !dbg !13090
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13091
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13089, metadata !DIExpression()), !dbg !13090
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13092
  br i1 %3, label %5, label %4, !dbg !13094

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13095
  br label %5, !dbg !13097

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13088, metadata !DIExpression()), !dbg !13090
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13098
  ret i32 %6, !dbg !13099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13102, metadata !DIExpression()), !dbg !13104
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13105
  %3 = load i8, i8* %2, align 1, !dbg !13105
  call void @llvm.dbg.value(metadata i8 %3, metadata !13103, metadata !DIExpression()), !dbg !13104
  %4 = and i8 %3, 31, !dbg !13106
  %5 = icmp ne i8 %4, 0, !dbg !13107
  ret i1 %5, !dbg !13108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13109 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13111, metadata !DIExpression()), !dbg !13112
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13113
  br i1 %2, label %3, label %7, !dbg !13115

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13116, metadata !DIExpression()) #24, !dbg !13119
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13122
  %5 = load i8, i8* %4, align 1, !dbg !13123
  %6 = and i8 %5, 127, !dbg !13123
  store i8 %6, i8* %4, align 1, !dbg !13123
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()) #24, !dbg !13127
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13131
  br label %7, !dbg !13132

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !13136
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13138
  %9 = load i8, i8* %8, align 1, !dbg !13139
  %10 = or i8 %9, -128, !dbg !13139
  store i8 %10, i8* %8, align 1, !dbg !13139
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13140, metadata !DIExpression()) #24, !dbg !13143
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13147, metadata !DIExpression()) #24, !dbg !13155
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13153, metadata !DIExpression()) #24, !dbg !13155
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13157
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13154, metadata !DIExpression()) #24, !dbg !13155
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13159
  br i1 %12, label %23, label %13, !dbg !13157

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13154, metadata !DIExpression()) #24, !dbg !13155
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13161
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13154, metadata !DIExpression()) #24, !dbg !13155
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !13162
  %17 = icmp sgt i32 %16, 0, !dbg !13165
  br i1 %17, label %18, label %20, !dbg !13166

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13167
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !13169
  br label %25, !dbg !13170

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !13159
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13154, metadata !DIExpression()) #24, !dbg !13155
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13159
  br i1 %22, label %23, label %13, !dbg !13157, !llvm.loop !13171

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13173
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !13174
  br label %25, !dbg !13175

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13176
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13177
  %28 = zext i1 %27 to i32, !dbg !13177
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13178
  ret void, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13182, metadata !DIExpression()), !dbg !13183
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13184
  ret i1 %2, !dbg !13185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13186 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13188, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13189, metadata !DIExpression()), !dbg !13190
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13191
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13192
  ret void, !dbg !13193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13194 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13198, metadata !DIExpression()), !dbg !13199
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13200
  br i1 %2, label %6, label %3, !dbg !13200

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13201
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13201
  br label %6, !dbg !13200

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13200
  ret %struct._dnode* %7, !dbg !13202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13203 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13207, metadata !DIExpression()), !dbg !13211
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13208, metadata !DIExpression()), !dbg !13211
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13212
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13212
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13209, metadata !DIExpression()), !dbg !13211
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13213
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13214
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13215
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13216
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13217
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13218
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13219
  ret void, !dbg !13220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13221 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13225, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13226, metadata !DIExpression()), !dbg !13227
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13228
  br i1 %3, label %6, label %4, !dbg !13229

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13230
  br label %6, !dbg !13229

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13229
  ret %struct._dnode* %7, !dbg !13231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13232 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13236, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13237, metadata !DIExpression()), !dbg !13239
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13240
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13240
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13238, metadata !DIExpression()), !dbg !13239
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13241
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13242
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13243
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13244
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13245
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13246
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13251, metadata !DIExpression()), !dbg !13253
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13254
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13261, metadata !DIExpression()) #24, !dbg !13263
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13264
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13265
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13265
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13266, metadata !DIExpression()) #24, !dbg !13272
  call void @llvm.dbg.value(metadata i32 %0, metadata !13271, metadata !DIExpression()) #24, !dbg !13272
  %6 = icmp eq i32 %0, 0, !dbg !13275
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13277
  br i1 %6, label %8, label %15, !dbg !13278

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !13279
  br i1 %9, label %15, label %10, !dbg !13281

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !13282
  br i1 %11, label %15, label %12, !dbg !13284

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !13285
  %14 = icmp eq i32 %13, 0, !dbg !13285
  br i1 %14, label %18, label %15, !dbg !13287

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13288
  br i1 %16, label %18, label %17, !dbg !13291

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13292
  br label %18, !dbg !13294

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13277
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13277
  ret void, !dbg !13295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13300, metadata !DIExpression()), !dbg !13303
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13301, metadata !DIExpression()), !dbg !13303
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !13304
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13302, metadata !DIExpression()), !dbg !13303
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13301, metadata !DIExpression()), !dbg !13303
  ret %struct.k_thread* %3, !dbg !13305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13308, metadata !DIExpression()), !dbg !13309
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13310
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13311
  %4 = xor i1 %3, true, !dbg !13312
  ret i1 %4, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13316, metadata !DIExpression()), !dbg !13317
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13318
  %3 = load i16, i16* %2, align 2, !dbg !13318
  %4 = icmp ult i16 %3, 128, !dbg !13319
  %5 = zext i1 %4 to i32, !dbg !13319
  ret i32 %5, !dbg !13320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13321 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13327, metadata !DIExpression()), !dbg !13328
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13329
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13330
  %4 = xor i1 %3, true, !dbg !13331
  ret i1 %4, !dbg !13332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13333 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13339, metadata !DIExpression()), !dbg !13340
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13341
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13341
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13342
  ret i1 %4, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13344 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13346, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13347, metadata !DIExpression()), !dbg !13348
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13349
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13349
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13350
  br i1 %5, label %9, label %6, !dbg !13351

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13352
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13352
  br label %9, !dbg !13351

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13351
  ret %struct._dnode* %10, !dbg !13353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13354 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13358, metadata !DIExpression()), !dbg !13359
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13360
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13360
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13361
  ret i1 %4, !dbg !13362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13363 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13367, metadata !DIExpression()), !dbg !13370
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13371
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13371
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13368, metadata !DIExpression()), !dbg !13370
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13372
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13372
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13369, metadata !DIExpression()), !dbg !13370
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13373
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13374
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13375
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13376
  tail call fastcc void @sys_dnode_init.141(%struct._dnode* noundef %0) #26, !dbg !13377
  ret void, !dbg !13378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.141(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13379 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13381, metadata !DIExpression()), !dbg !13382
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13383
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13385
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13386
  ret void, !dbg !13387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13388 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13392, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.value(metadata i32 128, metadata !13393, metadata !DIExpression()), !dbg !13394
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13395
  %3 = load i8, i8* %2, align 1, !dbg !13395
  %4 = icmp slt i8 %3, 0, !dbg !13396
  ret i1 %4, !dbg !13397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13402, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %1, metadata !13403, metadata !DIExpression()), !dbg !13404
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !13405
  ret i1 %3, !dbg !13406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !13407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13409, metadata !DIExpression()), !dbg !13410
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !13411
  ret i1 %2, !dbg !13412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !13413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13415, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i32 %1, metadata !13416, metadata !DIExpression()), !dbg !13417
  %3 = icmp slt i32 %0, %1, !dbg !13418
  ret i1 %3, !dbg !13419
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13422, metadata !DIExpression()), !dbg !13426
  call void @llvm.dbg.value(metadata i32 0, metadata !13423, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13428
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13430, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13430
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13432
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13432
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13428
  call void @llvm.dbg.value(metadata i32 %3, metadata !13425, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13427
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13433
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13438
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13442, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13423, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13427
  ret void, !dbg !13443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13446, metadata !DIExpression()), !dbg !13447
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13448
  br i1 %2, label %24, label %3, !dbg !13450

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13451
  br i1 %4, label %5, label %24, !dbg !13452

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !13453
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13456
  %7 = load i8, i8* %6, align 1, !dbg !13457
  %8 = or i8 %7, -128, !dbg !13457
  store i8 %8, i8* %6, align 1, !dbg !13457
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13140, metadata !DIExpression()) #24, !dbg !13458
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13147, metadata !DIExpression()) #24, !dbg !13460
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13153, metadata !DIExpression()) #24, !dbg !13460
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13462
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13154, metadata !DIExpression()) #24, !dbg !13460
  %10 = icmp eq %struct._dnode* %9, null, !dbg !13463
  br i1 %10, label %21, label %11, !dbg !13462

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13154, metadata !DIExpression()) #24, !dbg !13460
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !13464
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13154, metadata !DIExpression()) #24, !dbg !13460
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !13465
  %15 = icmp sgt i32 %14, 0, !dbg !13466
  br i1 %15, label %16, label %18, !dbg !13467

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13468
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !13469
  br label %23, !dbg !13470

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !13463
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13154, metadata !DIExpression()) #24, !dbg !13460
  %20 = icmp eq %struct._dnode* %19, null, !dbg !13463
  br i1 %20, label %21, label %11, !dbg !13462, !llvm.loop !13471

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13473
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !13474
  br label %23, !dbg !13475

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13476
  br label %24, !dbg !13477

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !13478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13481, metadata !DIExpression()), !dbg !13482
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13483
  br i1 %2, label %6, label %3, !dbg !13484

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !13485
  %5 = xor i1 %4, true, !dbg !13484
  br label %6, !dbg !13484

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13489, metadata !DIExpression()), !dbg !13493
  call void @llvm.dbg.value(metadata i32 0, metadata !13490, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13495
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13497, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13499
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13499
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13495
  call void @llvm.dbg.value(metadata i32 %3, metadata !13492, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13490, metadata !DIExpression()), !dbg !13494
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !13500
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13503
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13507, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13490, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13490, metadata !DIExpression()), !dbg !13494
  ret void, !dbg !13508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13511, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13514
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13516, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13516
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13518
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13514
  call void @llvm.dbg.value(metadata i32 %3, metadata !13512, metadata !DIExpression()), !dbg !13513
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !13519
  br i1 %4, label %5, label %6, !dbg !13521

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13522
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13527, !srcloc !12988
  br label %8, !dbg !13528

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.146(%struct.k_thread* noundef %0) #26, !dbg !13529
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13530
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13531
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13531
  br label %8, !dbg !13532

8:                                                ; preds = %6, %5
  ret void, !dbg !13532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13535, metadata !DIExpression()), !dbg !13536
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13537
  %3 = load i8, i8* %2, align 1, !dbg !13537
  %4 = and i8 %3, 4, !dbg !13538
  %5 = icmp eq i8 %4, 0, !dbg !13539
  ret i1 %5, !dbg !13540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.146(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13543, metadata !DIExpression()), !dbg !13544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13545
  %3 = load i8, i8* %2, align 1, !dbg !13546
  %4 = and i8 %3, -5, !dbg !13546
  store i8 %4, i8* %2, align 1, !dbg !13546
  ret void, !dbg !13547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13548 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13551, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13550, metadata !DIExpression()), !dbg !13552
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13553
  br i1 %4, label %5, label %9, !dbg !13555

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13556
  br i1 %6, label %7, label %9, !dbg !13557

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !13558, metadata !DIExpression()) #24, !dbg !13564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !13564
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13567
  br label %10, !dbg !13568

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13569
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13574, !srcloc !12988
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !13575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13581
  call void @llvm.dbg.value(metadata i32 %0, metadata !13582, metadata !DIExpression()), !dbg !13587
  %2 = icmp eq i32 %0, 0, !dbg !13589
  br i1 %2, label %3, label %6, !dbg !13590

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13591, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 %4, metadata !13594, metadata !DIExpression()) #24, !dbg !13599
  %5 = icmp eq i32 %4, 0, !dbg !13600
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13581
  ret i1 %7, !dbg !13601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !13602 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13605
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13604, metadata !DIExpression()), !dbg !13606
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13607
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13608
  ret i1 %3, !dbg !13609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13612, metadata !DIExpression()), !dbg !13614
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13615
  call void @llvm.dbg.value(metadata i32 %2, metadata !13613, metadata !DIExpression()), !dbg !13614
  ret i32 %2, !dbg !13616
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13619, metadata !DIExpression()), !dbg !13623
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13624
  call void @llvm.dbg.value(metadata i32 0, metadata !13620, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13626
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13628, !srcloc !12962
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %4, metadata !12959, metadata !DIExpression()) #24, !dbg !13630
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13630
  call void @llvm.dbg.value(metadata i32 %4, metadata !12953, metadata !DIExpression()) #24, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %4, metadata !13622, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()), !dbg !13625
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13631
  br i1 %5, label %6, label %10, !dbg !13635

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13116, metadata !DIExpression()) #24, !dbg !13636
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13639
  %8 = load i8, i8* %7, align 1, !dbg !13640
  %9 = and i8 %8, 127, !dbg !13640
  store i8 %9, i8* %7, align 1, !dbg !13640
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()) #24, !dbg !13641
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13643
  br label %10, !dbg !13644

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13645
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13646
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !13647
  %13 = zext i1 %12 to i32, !dbg !13647
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !13649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13649
  call void @llvm.dbg.value(metadata i32 %4, metadata !12982, metadata !DIExpression()) #24, !dbg !13651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13653, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13620, metadata !DIExpression()), !dbg !13625
  call void @llvm.dbg.value(metadata i32 undef, metadata !13620, metadata !DIExpression()), !dbg !13625
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13654
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13656
  br i1 %15, label %16, label %17, !dbg !13657

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13658
  br label %17, !dbg !13660

17:                                               ; preds = %16, %10
  ret void, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13664, metadata !DIExpression()), !dbg !13665
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13666
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13667
  ret i32 %3, !dbg !13668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13671, metadata !DIExpression()), !dbg !13672
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13673
  %3 = load i8, i8* %2, align 1, !dbg !13674
  %4 = or i8 %3, 16, !dbg !13674
  store i8 %4, i8* %2, align 1, !dbg !13674
  ret void, !dbg !13675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13676 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13677, !srcloc !12962
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13677
  call void @llvm.dbg.value(metadata i32 %2, metadata !12959, metadata !DIExpression()) #24, !dbg !13679
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13679
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13680
  ret void, !dbg !13681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13684, metadata !DIExpression()), !dbg !13685
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13686
  br i1 %2, label %3, label %5, !dbg !13688

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13689
  br label %6, !dbg !13691

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12982, metadata !DIExpression()) #24, !dbg !13692
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13695, !srcloc !12988
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13699, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13702
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13704, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13704
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13706
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13702
  call void @llvm.dbg.value(metadata i32 %3, metadata !13700, metadata !DIExpression()), !dbg !13701
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13707
  br i1 %4, label %6, label %5, !dbg !13709

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13713
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13715, !srcloc !12988
  br label %8, !dbg !13716

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13717
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13718
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13719
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !13719
  br label %8, !dbg !13720

8:                                                ; preds = %6, %5
  ret void, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()), !dbg !13724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13725
  %3 = load i8, i8* %2, align 1, !dbg !13725
  %4 = and i8 %3, 16, !dbg !13726
  %5 = icmp ne i8 %4, 0, !dbg !13727
  ret i1 %5, !dbg !13728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13731, metadata !DIExpression()), !dbg !13732
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13733
  %3 = load i8, i8* %2, align 1, !dbg !13734
  %4 = and i8 %3, -17, !dbg !13734
  store i8 %4, i8* %2, align 1, !dbg !13734
  ret void, !dbg !13735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13736 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13746, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13744, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13745, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.value(metadata i32 0, metadata !13747, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13752
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13754, !srcloc !12962
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !13754
  call void @llvm.dbg.value(metadata i32 %5, metadata !12959, metadata !DIExpression()) #24, !dbg !13756
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %5, metadata !12953, metadata !DIExpression()) #24, !dbg !13752
  call void @llvm.dbg.value(metadata i32 %5, metadata !13749, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !13747, metadata !DIExpression()), !dbg !13751
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %5, metadata !12974, metadata !DIExpression()) #24, !dbg !13760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13760
  call void @llvm.dbg.value(metadata i32 %5, metadata !12982, metadata !DIExpression()) #24, !dbg !13762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !13764, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13747, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !13747, metadata !DIExpression()), !dbg !13751
  ret void, !dbg !13765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13766 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13770, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13768, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13769, metadata !DIExpression()), !dbg !13771
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13772
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13780, metadata !DIExpression()), !dbg !13781
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13782
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13783
  %3 = icmp eq %union.anon* %1, null, !dbg !13784
  br i1 %3, label %21, label %4, !dbg !13786

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13787
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13789
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13790
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13147, metadata !DIExpression()) #24, !dbg !13791
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13153, metadata !DIExpression()) #24, !dbg !13791
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !13793
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13154, metadata !DIExpression()) #24, !dbg !13791
  %8 = icmp eq %struct._dnode* %7, null, !dbg !13794
  br i1 %8, label %19, label %9, !dbg !13793

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13154, metadata !DIExpression()) #24, !dbg !13791
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !13795
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13154, metadata !DIExpression()) #24, !dbg !13791
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !13796
  %13 = icmp sgt i32 %12, 0, !dbg !13797
  br i1 %13, label %14, label %16, !dbg !13798

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13799
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !13800
  br label %21, !dbg !13801

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !13794
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13154, metadata !DIExpression()) #24, !dbg !13791
  %18 = icmp eq %struct._dnode* %17, null, !dbg !13794
  br i1 %18, label %19, label %9, !dbg !13793, !llvm.loop !13802

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13804
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !13805
  br label %21, !dbg !13806

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !13807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13808 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13813, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13812, metadata !DIExpression()), !dbg !13814
  %4 = icmp eq i64 %3, -1, !dbg !13815
  br i1 %4, label %6, label %5, !dbg !13817

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13818
  br label %6, !dbg !13820

6:                                                ; preds = %5, %2
  ret void, !dbg !13821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13822 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13825, metadata !DIExpression()), !dbg !13826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13824, metadata !DIExpression()), !dbg !13826
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13827
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13828
  ret void, !dbg !13829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13830 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13832, metadata !DIExpression()), !dbg !13840
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13841
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13841
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13833, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata i32 0, metadata !13834, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13843
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13845, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13847
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !13843
  call void @llvm.dbg.value(metadata i32 undef, metadata !13836, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()), !dbg !13842
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13848
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !13849
  %7 = load i8, i8* %6, align 1, !dbg !13849
  %8 = and i8 %7, 40, !dbg !13850
  %9 = icmp eq i8 %8, 0, !dbg !13850
  call void @llvm.dbg.value(metadata i1 %9, metadata !13837, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13851
  br i1 %9, label %10, label %17, !dbg !13852

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13853
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !13853
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !13853
  %14 = icmp eq %union.anon* %13, null, !dbg !13857
  br i1 %14, label %16, label %15, !dbg !13858

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13859
  br label %16, !dbg !13861

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.146(%struct.k_thread* noundef nonnull %3) #26, !dbg !13862
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13863
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13864
  br label %17, !dbg !13865

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !13845
  call void @llvm.dbg.value(metadata i32 %18, metadata !12959, metadata !DIExpression()) #24, !dbg !13847
  call void @llvm.dbg.value(metadata i32 %18, metadata !12953, metadata !DIExpression()) #24, !dbg !13843
  call void @llvm.dbg.value(metadata i32 %18, metadata !13836, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !13866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13866
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !13868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !13870, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13834, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()), !dbg !13842
  ret void, !dbg !13871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13874, metadata !DIExpression()), !dbg !13875
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13876
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !13877
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13878
  store %union.anon* null, %union.anon** %2, align 8, !dbg !13879
  ret void, !dbg !13880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13883, metadata !DIExpression()), !dbg !13884
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13885
  %3 = load i8, i8* %2, align 1, !dbg !13886
  %4 = and i8 %3, -3, !dbg !13886
  store i8 %4, i8* %2, align 1, !dbg !13886
  ret void, !dbg !13887
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13892
  br i1 %2, label %3, label %7, !dbg !13894

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13116, metadata !DIExpression()) #24, !dbg !13895
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13898
  %5 = load i8, i8* %4, align 1, !dbg !13899
  %6 = and i8 %5, 127, !dbg !13899
  store i8 %6, i8* %4, align 1, !dbg !13899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()) #24, !dbg !13900
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13902
  br label %7, !dbg !13903

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13904
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13905
  %10 = zext i1 %9 to i32, !dbg !13905
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !13906
  ret void, !dbg !13907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13910, metadata !DIExpression()), !dbg !13911
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13912
  %3 = load i8, i8* %2, align 1, !dbg !13913
  %4 = or i8 %3, 2, !dbg !13913
  store i8 %4, i8* %2, align 1, !dbg !13913
  ret void, !dbg !13914
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata i32 0, metadata !13918, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13923
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13925, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13925
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !13927
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13927
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !13923
  call void @llvm.dbg.value(metadata i32 %3, metadata !13920, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13918, metadata !DIExpression()), !dbg !13922
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13928
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !13931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13931
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !13933
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13935, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13918, metadata !DIExpression()), !dbg !13922
  call void @llvm.dbg.value(metadata i32 undef, metadata !13918, metadata !DIExpression()), !dbg !13922
  ret void, !dbg !13936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13937 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13943, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i32 %0, metadata !13941, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13942, metadata !DIExpression()), !dbg !13948
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13949
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13950
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13951
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13952
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %6, metadata !13944, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i32 0, metadata !13945, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13955
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13957, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13959
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13959
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !13955
  call void @llvm.dbg.value(metadata i32 undef, metadata !13947, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !13945, metadata !DIExpression()), !dbg !13954
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13960
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13964
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !13965
  br i1 %10, label %11, label %12, !dbg !13966

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13967
  br label %12, !dbg !13969

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !13957
  call void @llvm.dbg.value(metadata i32 %13, metadata !12959, metadata !DIExpression()) #24, !dbg !13959
  call void @llvm.dbg.value(metadata i32 %13, metadata !12953, metadata !DIExpression()) #24, !dbg !13955
  call void @llvm.dbg.value(metadata i32 %13, metadata !13947, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !13970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !13972
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !13974, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13945, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata i32 undef, metadata !13945, metadata !DIExpression()), !dbg !13954
  ret i32 %6, !dbg !13975
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13976 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13981, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i64 undef, metadata !13983, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13980, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13982, metadata !DIExpression()), !dbg !13984
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13985
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !13987
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13989, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !13991
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !13991
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !13987
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13992
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !13993
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !13558, metadata !DIExpression()) #24, !dbg !13994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !13994
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !13996
  ret i32 %9, !dbg !13997
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13998 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14002, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14003, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 0, metadata !14004, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14009
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14011, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14013
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !14009
  call void @llvm.dbg.value(metadata i32 undef, metadata !14006, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14003, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()), !dbg !14008
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14014
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14003, metadata !DIExpression()), !dbg !14007
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14017
  br i1 %5, label %7, label %6, !dbg !14019

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14020
  br label %7, !dbg !14022

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %8, metadata !12959, metadata !DIExpression()) #24, !dbg !14013
  call void @llvm.dbg.value(metadata i32 %8, metadata !12953, metadata !DIExpression()) #24, !dbg !14009
  call void @llvm.dbg.value(metadata i32 %8, metadata !14006, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14023
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !14025
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !14027, !srcloc !12988
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14003, metadata !DIExpression()), !dbg !14007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14004, metadata !DIExpression()), !dbg !14008
  ret %struct.k_thread* %4, !dbg !14028
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14029 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14031, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14032, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 0, metadata !14033, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14038
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14040, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !14038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14035, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14032, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14037
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14043
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14032, metadata !DIExpression()), !dbg !14036
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14046
  br i1 %5, label %8, label %6, !dbg !14048

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14049
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14051
  br label %8, !dbg !14052

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %9, metadata !12959, metadata !DIExpression()) #24, !dbg !14042
  call void @llvm.dbg.value(metadata i32 %9, metadata !12953, metadata !DIExpression()) #24, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %9, metadata !14035, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14053
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !14055
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14057, !srcloc !12988
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14032, metadata !DIExpression()), !dbg !14036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14033, metadata !DIExpression()), !dbg !14037
  ret %struct.k_thread* %4, !dbg !14058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14059 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14061, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13917, metadata !DIExpression()) #24, !dbg !14063
  call void @llvm.dbg.value(metadata i32 0, metadata !13918, metadata !DIExpression()) #24, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14066
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14068, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14068
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14070
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !14066
  call void @llvm.dbg.value(metadata i32 %3, metadata !13920, metadata !DIExpression()) #24, !dbg !14065
  call void @llvm.dbg.value(metadata i32 undef, metadata !13918, metadata !DIExpression()) #24, !dbg !14065
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !14074
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14076, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !13918, metadata !DIExpression()) #24, !dbg !14065
  call void @llvm.dbg.value(metadata i32 undef, metadata !13918, metadata !DIExpression()) #24, !dbg !14065
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14077
  ret void, !dbg !14078
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14081, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 %1, metadata !14082, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i8 0, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 0, metadata !14084, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14089
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14091, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14093
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !14089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14086, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata i8 poison, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()), !dbg !14088
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14094
  call void @llvm.dbg.value(metadata i1 %6, metadata !14083, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14087
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14097

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13116, metadata !DIExpression()) #24, !dbg !14098
  %11 = load i8, i8* %4, align 1, !dbg !14104
  %12 = and i8 %11, 127, !dbg !14104
  store i8 %12, i8* %4, align 1, !dbg !14104
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()) #24, !dbg !14105
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14107
  store i8 %9, i8* %8, align 2, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()) #24, !dbg !14109
  %13 = load i8, i8* %4, align 1, !dbg !14111
  %14 = or i8 %13, -128, !dbg !14111
  store i8 %14, i8* %4, align 1, !dbg !14111
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13140, metadata !DIExpression()) #24, !dbg !14112
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13147, metadata !DIExpression()) #24, !dbg !14114
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13153, metadata !DIExpression()) #24, !dbg !14114
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14116
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13154, metadata !DIExpression()) #24, !dbg !14114
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14117
  br i1 %16, label %26, label %17, !dbg !14116

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13154, metadata !DIExpression()) #24, !dbg !14114
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14118
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13154, metadata !DIExpression()) #24, !dbg !14114
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !14119
  %21 = icmp sgt i32 %20, 0, !dbg !14120
  br i1 %21, label %22, label %23, !dbg !14121

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !14122
  br label %27, !dbg !14123

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !14117
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13154, metadata !DIExpression()) #24, !dbg !14114
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14117
  br i1 %25, label %26, label %17, !dbg !14116, !llvm.loop !14124

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !14126
  br label %27, !dbg !14127

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14128
  br label %29, !dbg !14129

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14130
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14091
  call void @llvm.dbg.value(metadata i32 %30, metadata !12959, metadata !DIExpression()) #24, !dbg !14093
  call void @llvm.dbg.value(metadata i32 %30, metadata !12953, metadata !DIExpression()) #24, !dbg !14089
  call void @llvm.dbg.value(metadata i32 %30, metadata !14086, metadata !DIExpression()), !dbg !14088
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14132
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !14134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !14136, !srcloc !12988
  call void @llvm.dbg.value(metadata i8 poison, metadata !14083, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 undef, metadata !14084, metadata !DIExpression()), !dbg !14088
  ret i1 %6, !dbg !14137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14142, metadata !DIExpression()), !dbg !14145
  call void @llvm.dbg.value(metadata i32 %1, metadata !14143, metadata !DIExpression()), !dbg !14145
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14146
  call void @llvm.dbg.value(metadata i1 %3, metadata !14144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14145
  br i1 %3, label %4, label %12, !dbg !14147

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14149
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14150
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14150
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14150
  %9 = load i8, i8* %8, align 1, !dbg !14150
  %10 = icmp eq i8 %9, 0, !dbg !14151
  br i1 %10, label %11, label %12, !dbg !14152

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14153
  br label %12, !dbg !14155

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14157 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14163
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14165, !srcloc !12962
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %2, metadata !12959, metadata !DIExpression()) #24, !dbg !14167
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14167
  call void @llvm.dbg.value(metadata i32 %2, metadata !12953, metadata !DIExpression()) #24, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %2, metadata !14161, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14159, metadata !DIExpression()), !dbg !14162
  tail call fastcc void @z_sched_lock() #26, !dbg !14168
  call void @llvm.dbg.value(metadata i32 %2, metadata !12974, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14171
  call void @llvm.dbg.value(metadata i32 %2, metadata !12982, metadata !DIExpression()) #24, !dbg !14173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14175, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !14159, metadata !DIExpression()), !dbg !14162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14159, metadata !DIExpression()), !dbg !14162
  ret void, !dbg !14176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14177 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14178
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14179
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14179
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14179
  %5 = load i8, i8* %4, align 1, !dbg !14180
  %6 = add i8 %5, -1, !dbg !14180
  store i8 %6, i8* %4, align 1, !dbg !14180
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14181, !srcloc !14183
  ret void, !dbg !14184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14185 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14187, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14191
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14193, !srcloc !12962
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14193
  call void @llvm.dbg.value(metadata i32 %2, metadata !12959, metadata !DIExpression()) #24, !dbg !14195
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14195
  call void @llvm.dbg.value(metadata i32 %2, metadata !12953, metadata !DIExpression()) #24, !dbg !14191
  call void @llvm.dbg.value(metadata i32 %2, metadata !14189, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14190
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14196
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14199
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14199
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14199
  %7 = load i8, i8* %6, align 1, !dbg !14200
  %8 = add i8 %7, 1, !dbg !14200
  store i8 %8, i8* %6, align 1, !dbg !14200
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14201
  call void @llvm.dbg.value(metadata i32 %2, metadata !12974, metadata !DIExpression()) #24, !dbg !14202
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14202
  call void @llvm.dbg.value(metadata i32 %2, metadata !12982, metadata !DIExpression()) #24, !dbg !14204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !14206, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 1, metadata !14187, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14190
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14207
  ret void, !dbg !14208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14209 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14210
  ret %struct.k_thread* %1, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14216, metadata !DIExpression()), !dbg !14221
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14217, metadata !DIExpression()), !dbg !14221
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14222
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14218, metadata !DIExpression()), !dbg !14221
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14223
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14219, metadata !DIExpression()), !dbg !14221
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14224
  call void @llvm.dbg.value(metadata i32 %5, metadata !14220, metadata !DIExpression()), !dbg !14221
  %6 = icmp sgt i32 %5, 0, !dbg !14225
  br i1 %6, label %17, label %7, !dbg !14227

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14228
  br i1 %8, label %17, label %9, !dbg !14230

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14231
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14231
  %12 = load i32, i32* %11, align 8, !dbg !14231
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14233
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14233
  %15 = load i32, i32* %14, align 8, !dbg !14233
  %16 = icmp ult i32 %12, %15, !dbg !14234
  br label %17, !dbg !14235

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14236
  ret i1 %18, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14238 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14255, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14256, metadata !DIExpression()), !dbg !14270
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14271
  %5 = load i32, i32* %4, align 4, !dbg !14272
  %6 = add nsw i32 %5, 1, !dbg !14272
  store i32 %6, i32* %4, align 4, !dbg !14272
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14273
  store i32 %5, i32* %7, align 8, !dbg !14274
  %8 = load i32, i32* %4, align 4, !dbg !14275
  %9 = icmp eq i32 %8, 0, !dbg !14276
  br i1 %9, label %10, label %32, !dbg !14277

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14278
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14278
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14258, metadata !DIExpression()), !dbg !14278
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14278
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14278
  %14 = load i32, i32* %13, align 4, !dbg !14278
  %15 = shl i32 %14, 2, !dbg !14278
  %16 = alloca i8, i32 %15, align 8, !dbg !14278
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14278
  store i8* %16, i8** %17, align 4, !dbg !14278
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14278
  %19 = alloca i8, i32 %14, align 8, !dbg !14278
  store i8* %19, i8** %18, align 4, !dbg !14278
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14278
  store i32 -1, i32* %20, align 4, !dbg !14278
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14267, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14257, metadata !DIExpression()), !dbg !14270
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14281
  br i1 %22, label %23, label %24, !dbg !14278

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !14281
  br label %32, !dbg !14282

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14257, metadata !DIExpression()), !dbg !14270
  %26 = load i32, i32* %4, align 4, !dbg !14283
  %27 = add nsw i32 %26, 1, !dbg !14283
  store i32 %27, i32* %4, align 4, !dbg !14283
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14285
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14285
  store i32 %26, i32* %29, align 8, !dbg !14286
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14267, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14257, metadata !DIExpression()), !dbg !14270
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14281
  br i1 %31, label %23, label %24, !dbg !14278, !llvm.loop !14287

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14289
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14290
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !14291
  ret void, !dbg !14292
}

; Function Attrs: optsize
declare !dbg !14293 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14298 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14303, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14304, metadata !DIExpression()), !dbg !14305
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14306
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14307
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !14308
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14309
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14309
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14311
  br i1 %7, label %8, label %10, !dbg !14312

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14313
  store i32 0, i32* %9, align 4, !dbg !14315
  br label %10, !dbg !14316

10:                                               ; preds = %8, %2
  ret void, !dbg !14317
}

; Function Attrs: optsize
declare !dbg !14318 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14319 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14323, metadata !DIExpression()), !dbg !14326
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14324, metadata !DIExpression()), !dbg !14326
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14327
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14328
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14325, metadata !DIExpression()), !dbg !14326
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14324, metadata !DIExpression()), !dbg !14326
  ret %struct.k_thread* %4, !dbg !14329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14330 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14334, metadata !DIExpression()), !dbg !14335
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !14336
  ret %struct.rbnode* %2, !dbg !14337
}

; Function Attrs: optsize
declare !dbg !14338 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14341 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14353, metadata !DIExpression()), !dbg !14357
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14358
  %3 = load i32, i32* %2, align 4, !dbg !14358
  %4 = icmp eq i32 %3, 0, !dbg !14360
  br i1 %4, label %10, label %5, !dbg !14361

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14354, metadata !DIExpression()), !dbg !14357
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14362, !range !3479
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14363
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14355, metadata !DIExpression()), !dbg !14357
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !14364
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14356, metadata !DIExpression()), !dbg !14357
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14354, metadata !DIExpression()), !dbg !14357
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14357
  ret %struct.k_thread* %11, !dbg !14365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14366 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14370, metadata !DIExpression()), !dbg !14373
  call void @llvm.dbg.value(metadata i32 0, metadata !14371, metadata !DIExpression()), !dbg !14373
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14374
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14372, metadata !DIExpression()), !dbg !14373
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14375
  br i1 %3, label %8, label %4, !dbg !14376

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14377
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14379
  call void @llvm.dbg.value(metadata i32 1, metadata !14371, metadata !DIExpression()), !dbg !14373
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14374
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14372, metadata !DIExpression()), !dbg !14373
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14375
  br i1 %7, label %8, label %4, !dbg !14376, !llvm.loop !14380

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14373
  ret i32 %9, !dbg !14382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !14383 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14385, metadata !DIExpression()), !dbg !14386
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14387
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !14388
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14389
  ret %struct.k_thread* %4, !dbg !14390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !14391 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14400, metadata !DIExpression()), !dbg !14401
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14402
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef nonnull %2) #26, !dbg !14403
  ret void, !dbg !14404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14405 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14409, metadata !DIExpression()), !dbg !14410
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14411
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14412
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14413
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14414
  ret void, !dbg !14415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14416 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14417
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14418
  ret void, !dbg !14419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !14420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14425, metadata !DIExpression()), !dbg !14426
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14427
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14427
  %4 = load i8, i8* %3, align 2, !dbg !14427
  %5 = sext i8 %4 to i32, !dbg !14428
  ret i32 %5, !dbg !14429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14434, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata i32 %1, metadata !14435, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14436, metadata !DIExpression()), !dbg !14437
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14438
  ret void, !dbg !14439
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14440 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14441
  br i1 %1, label %8, label %2, !dbg !14442

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14443
  br i1 %3, label %8, label %4, !dbg !14444

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14445
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14446
  %7 = xor i1 %6, true, !dbg !14444
  br label %8, !dbg !14444

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !14448 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14449, !range !6646
  %2 = icmp eq i8 %1, 0, !dbg !14449
  ret i1 %2, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14454
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14456, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14453, metadata !DIExpression()), !dbg !14459
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14460
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13116, metadata !DIExpression()) #24, !dbg !14463
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !14465
  %4 = load i8, i8* %3, align 1, !dbg !14466
  %5 = and i8 %4, 127, !dbg !14466
  store i8 %5, i8* %3, align 1, !dbg !14466
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13124, metadata !DIExpression()) #24, !dbg !14467
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !14469
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14470
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13133, metadata !DIExpression()) #24, !dbg !14471
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !14473
  %8 = load i8, i8* %7, align 1, !dbg !14474
  %9 = or i8 %8, -128, !dbg !14474
  store i8 %9, i8* %7, align 1, !dbg !14474
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13140, metadata !DIExpression()) #24, !dbg !14475
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13147, metadata !DIExpression()) #24, !dbg !14477
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13153, metadata !DIExpression()) #24, !dbg !14477
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14479
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13154, metadata !DIExpression()) #24, !dbg !14477
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14480
  br i1 %11, label %22, label %12, !dbg !14479

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13154, metadata !DIExpression()) #24, !dbg !14477
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14481
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13154, metadata !DIExpression()) #24, !dbg !14477
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !14482
  %16 = icmp sgt i32 %15, 0, !dbg !14483
  br i1 %16, label %17, label %19, !dbg !14484

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14485
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14486
  br label %24, !dbg !14487

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !14480
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13154, metadata !DIExpression()) #24, !dbg !14477
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14480
  br i1 %21, label %22, label %12, !dbg !14479, !llvm.loop !14488

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !14490
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !14491
  br label %24, !dbg !14492

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !14456
  call void @llvm.dbg.value(metadata i32 %25, metadata !12959, metadata !DIExpression()) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 %25, metadata !12953, metadata !DIExpression()) #24, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %25, metadata !14453, metadata !DIExpression()), !dbg !14459
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13558, metadata !DIExpression()) #24, !dbg !14494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !14494
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !14496
  ret void, !dbg !14497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14498 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14502, metadata !DIExpression()), !dbg !14505
  %3 = icmp eq i64 %2, -1, !dbg !14506
  br i1 %3, label %4, label %6, !dbg !14508

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14509
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !14511
  br label %11, !dbg !14512

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14503, metadata !DIExpression()), !dbg !14505
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14513
  %8 = sext i32 %7 to i64, !dbg !14513
  call void @llvm.dbg.value(metadata i64 %8, metadata !14503, metadata !DIExpression()), !dbg !14505
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !14514
  %10 = trunc i64 %9 to i32, !dbg !14514
  call void @llvm.dbg.value(metadata i32 %10, metadata !14504, metadata !DIExpression()), !dbg !14505
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !14505
  ret i32 %12, !dbg !14515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14520, metadata !DIExpression()), !dbg !14521
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14522, !srcloc !14524
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14525
  ret void, !dbg !14526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14527 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14531, metadata !DIExpression()), !dbg !14535
  %2 = icmp eq i64 %0, 0, !dbg !14536
  br i1 %2, label %3, label %4, !dbg !14538

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !14539
  br label %29, !dbg !14541

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !14533, metadata !DIExpression()), !dbg !14535
  %5 = icmp sgt i64 %0, -3, !dbg !14542
  br i1 %5, label %6, label %10, !dbg !14544

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14545
  %8 = trunc i64 %0 to i32, !dbg !14547
  %9 = add i32 %7, %8, !dbg !14547
  call void @llvm.dbg.value(metadata i32 %9, metadata !14532, metadata !DIExpression()), !dbg !14535
  br label %13, !dbg !14548

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !14549
  %12 = sub i32 -2, %11, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %12, metadata !14532, metadata !DIExpression()), !dbg !14535
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !14551
  call void @llvm.dbg.value(metadata i32 %14, metadata !14532, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14552
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14554, !srcloc !12962
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14554
  call void @llvm.dbg.value(metadata i32 %16, metadata !12959, metadata !DIExpression()) #24, !dbg !14556
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14556
  call void @llvm.dbg.value(metadata i32 %16, metadata !12953, metadata !DIExpression()) #24, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %16, metadata !14534, metadata !DIExpression()), !dbg !14535
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14557
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !14558
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !14559
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14560
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14561
  tail call fastcc void @z_add_thread_timeout.147(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !14561
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14562
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %16, metadata !13558, metadata !DIExpression()) #24, !dbg !14564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !14564
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !14566
  %22 = zext i32 %14 to i64, !dbg !14567
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14568
  %24 = zext i32 %23 to i64, !dbg !14568
  %25 = sub nsw i64 %22, %24, !dbg !14569
  call void @llvm.dbg.value(metadata i64 %25, metadata !14531, metadata !DIExpression()), !dbg !14535
  %26 = icmp sgt i64 %25, 0, !dbg !14570
  %27 = select i1 %26, i64 %25, i64 0, !dbg !14570
  %28 = trunc i64 %27 to i32, !dbg !14570
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !14535
  ret i32 %30, !dbg !14571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14572 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14574, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i64 %0, metadata !12994, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i32 10000, metadata !12997, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i32 1000, metadata !12998, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i8 1, metadata !12999, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i1 false, metadata !13000, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14576
  call void @llvm.dbg.value(metadata i1 false, metadata !13001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14576
  call void @llvm.dbg.value(metadata i8 0, metadata !13002, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i1 false, metadata !13003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14576
  call void @llvm.dbg.value(metadata i1 true, metadata !13004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14576
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14576
  call void @llvm.dbg.value(metadata i64 %0, metadata !12994, metadata !DIExpression()), !dbg !14576
  %2 = udiv i64 %0, 10, !dbg !14578
  ret i64 %2, !dbg !14582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14583 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14584, !srcloc !14586
  tail call void @z_impl_k_yield() #26, !dbg !14587
  ret void, !dbg !14588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14593, metadata !DIExpression()), !dbg !14595
  %2 = sext i32 %0 to i64, !dbg !14596
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14597
  call void @llvm.dbg.value(metadata i64 %3, metadata !14594, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14595
  %4 = shl i64 %3, 32, !dbg !14598
  %5 = ashr exact i64 %4, 32, !dbg !14598
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14599
  call void @llvm.dbg.value(metadata i32 %6, metadata !14594, metadata !DIExpression()), !dbg !14595
  %7 = sext i32 %6 to i64, !dbg !14600
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14601
  %9 = trunc i64 %8 to i32, !dbg !14601
  ret i32 %9, !dbg !14602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !14603 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14605, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i64 %0, metadata !12994, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12997, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i32 10000, metadata !12998, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i8 1, metadata !12999, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i1 false, metadata !13000, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14607
  call void @llvm.dbg.value(metadata i1 true, metadata !13001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14607
  call void @llvm.dbg.value(metadata i8 0, metadata !13002, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i1 false, metadata !13003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14607
  call void @llvm.dbg.value(metadata i1 true, metadata !13004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14607
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14607
  %2 = add i64 %0, 99, !dbg !14609
  call void @llvm.dbg.value(metadata i64 %2, metadata !12994, metadata !DIExpression()), !dbg !14607
  %3 = udiv i64 %2, 100, !dbg !14610
  ret i64 %3, !dbg !14611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !14612 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14614, metadata !DIExpression()), !dbg !14615
  call void @llvm.dbg.value(metadata i64 %0, metadata !12994, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 10000, metadata !12997, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12998, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i8 1, metadata !12999, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i1 false, metadata !13000, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14616
  call void @llvm.dbg.value(metadata i1 false, metadata !13001, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14616
  call void @llvm.dbg.value(metadata i8 0, metadata !13002, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i1 true, metadata !13003, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14616
  call void @llvm.dbg.value(metadata i1 false, metadata !13004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14616
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i64 0, metadata !13005, metadata !DIExpression()), !dbg !14616
  %2 = mul i64 %0, 100, !dbg !14618
  ret i64 %2, !dbg !14620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14623, metadata !DIExpression()), !dbg !14624
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14625
  br i1 %2, label %14, label %3, !dbg !14627

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14628
  %5 = icmp slt i32 %4, 0, !dbg !14630
  br i1 %5, label %6, label %10, !dbg !14631

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14632
  %8 = load i8, i8* %7, align 1, !dbg !14632
  %9 = icmp eq i8 %8, 16, !dbg !14635
  br i1 %9, label %10, label %14, !dbg !14636

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14637
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14638
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14639, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 %11, metadata !13594, metadata !DIExpression()) #24, !dbg !14643
  %12 = icmp eq i32 %11, 0, !dbg !14644
  br i1 %12, label %13, label %14, !dbg !14645

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14646
  br label %14, !dbg !14648

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()), !dbg !14653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14654
  %3 = load i8, i8* %2, align 1, !dbg !14654
  %4 = and i8 %3, 2, !dbg !14655
  %5 = icmp ne i8 %4, 0, !dbg !14656
  ret i1 %5, !dbg !14657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !14658 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14662, metadata !DIExpression()), !dbg !14664
  ret %struct.k_thread* %1, !dbg !14665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14666 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14667, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 %1, metadata !13594, metadata !DIExpression()) #24, !dbg !14670
  %2 = icmp eq i32 %1, 0, !dbg !14671
  br i1 %2, label %3, label %8, !dbg !14672

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14673
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14674
  %6 = icmp ne i32 %5, 0, !dbg !14672
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14678, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14681
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14683, !srcloc !12962
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %3, metadata !12959, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %3, metadata !12953, metadata !DIExpression()) #24, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %3, metadata !14679, metadata !DIExpression()), !dbg !14680
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14686
  %5 = load i8, i8* %4, align 4, !dbg !14686
  %6 = and i8 %5, 1, !dbg !14688
  %7 = icmp eq i8 %6, 0, !dbg !14689
  br i1 %7, label %9, label %8, !dbg !14690

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !14694
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14696, !srcloc !12988
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !14697, !srcloc !14699
  br label %24, !dbg !14700

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14701
  %11 = load i8, i8* %10, align 1, !dbg !14701
  %12 = and i8 %11, 8, !dbg !14703
  %13 = icmp eq i8 %12, 0, !dbg !14704
  br i1 %13, label %15, label %14, !dbg !14705

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !14709
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14711, !srcloc !12988
  br label %24, !dbg !14712

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14713
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14714
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14716
  br i1 %17, label %18, label %23, !dbg !14717

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14718, !srcloc !13598
  call void @llvm.dbg.value(metadata i32 %19, metadata !13594, metadata !DIExpression()) #24, !dbg !14721
  %20 = icmp eq i32 %19, 0, !dbg !14722
  br i1 %20, label %21, label %23, !dbg !14723

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !13558, metadata !DIExpression()) #24, !dbg !14724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !14724
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14727
  br label %23, !dbg !14728

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !12974, metadata !DIExpression()) #24, !dbg !14729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14729
  call void @llvm.dbg.value(metadata i32 %3, metadata !12982, metadata !DIExpression()) #24, !dbg !14731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14733, !srcloc !12988
  br label %24, !dbg !14734

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !14734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14735 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14737, metadata !DIExpression()), !dbg !14738
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14739
  %3 = load i8, i8* %2, align 1, !dbg !14739
  %4 = and i8 %3, 8, !dbg !14741
  %5 = icmp eq i8 %4, 0, !dbg !14742
  br i1 %5, label %6, label %20, !dbg !14743

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14744
  %8 = or i8 %7, 8, !dbg !14744
  store i8 %8, i8* %2, align 1, !dbg !14744
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14746
  br i1 %9, label %10, label %12, !dbg !14748

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13116, metadata !DIExpression()) #24, !dbg !14749
  %11 = and i8 %8, 95, !dbg !14752
  store i8 %11, i8* %2, align 1, !dbg !14752
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13124, metadata !DIExpression()) #24, !dbg !14753
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14755
  br label %12, !dbg !14756

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14757
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14757
  %15 = icmp eq %union.anon* %14, null, !dbg !14759
  br i1 %15, label %17, label %16, !dbg !14760

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14761
  br label %17, !dbg !14763

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14764
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14765
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14766
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14767
  br label %20, !dbg !14768

20:                                               ; preds = %17, %1
  ret void, !dbg !14769
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14770 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14774, metadata !DIExpression()), !dbg !14776
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14777
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14775, metadata !DIExpression()), !dbg !14776
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14778
  br i1 %3, label %10, label %4, !dbg !14779

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14780
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14782
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14783, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.value(metadata i32 0, metadata !14788, metadata !DIExpression()), !dbg !14789
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14791
  store i32 0, i32* %7, align 4, !dbg !14792
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14793
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !14777
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14775, metadata !DIExpression()), !dbg !14776
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14778
  br i1 %9, label %10, label %4, !dbg !14779, !llvm.loop !14794

10:                                               ; preds = %4, %1
  ret void, !dbg !14796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14797 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14802, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14801, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14806
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14808, !srcloc !12962
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14808
  call void @llvm.dbg.value(metadata i32 %4, metadata !12959, metadata !DIExpression()) #24, !dbg !14810
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14810
  call void @llvm.dbg.value(metadata i32 %4, metadata !12953, metadata !DIExpression()) #24, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %4, metadata !14803, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 0, metadata !14804, metadata !DIExpression()), !dbg !14805
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14811
  %6 = load i8, i8* %5, align 1, !dbg !14811
  %7 = and i8 %6, 8, !dbg !14813
  %8 = icmp eq i8 %7, 0, !dbg !14814
  br i1 %8, label %9, label %24, !dbg !14815

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !14802, metadata !DIExpression()), !dbg !14805
  %11 = icmp eq i64 %10, 0, !dbg !14816
  br i1 %11, label %24, label %12, !dbg !14818

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14819
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !14821
  br i1 %14, label %24, label %15, !dbg !14822

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14823
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !14823
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !14824
  %19 = icmp eq %union.anon* %17, %18, !dbg !14825
  br i1 %19, label %24, label %20, !dbg !14826

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14827
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !14829
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14830
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %4, metadata !13558, metadata !DIExpression()) #24, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13563, metadata !DIExpression()) #24, !dbg !14832
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %23, metadata !14804, metadata !DIExpression()), !dbg !14805
  br label %26, !dbg !14835

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !14836
  call void @llvm.dbg.value(metadata i32 %25, metadata !14804, metadata !DIExpression()), !dbg !14805
  call void @llvm.dbg.value(metadata i32 %4, metadata !12974, metadata !DIExpression()) #24, !dbg !14837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %4, metadata !12982, metadata !DIExpression()) #24, !dbg !14839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14841, !srcloc !12988
  br label %26, !dbg !14842

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !14805
  ret i32 %27, !dbg !14843
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14844 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14848, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 %1, metadata !14849, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i8* %2, metadata !14850, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i8 0, metadata !14852, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 0, metadata !14853, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12947, metadata !DIExpression()) #24, !dbg !14858
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14860, !srcloc !12962
  call void @llvm.dbg.value(metadata i32 undef, metadata !12959, metadata !DIExpression()) #24, !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12960, metadata !DIExpression()) #24, !dbg !14862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12953, metadata !DIExpression()) #24, !dbg !14858
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata i8 poison, metadata !14852, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14857
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !14863
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14851, metadata !DIExpression()), !dbg !14856
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14866
  br i1 %7, label %12, label %8, !dbg !14868

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14869, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i32 %1, metadata !14875, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata i8* %2, metadata !14876, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14783, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata i32 %1, metadata !14788, metadata !DIExpression()), !dbg !14880
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !14882
  store i32 %1, i32* %9, align 4, !dbg !14883
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !14884
  store i8* %2, i8** %10, align 4, !dbg !14885
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14886
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !14887
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !14888
  call void @llvm.dbg.value(metadata i8 1, metadata !14852, metadata !DIExpression()), !dbg !14856
  br label %12, !dbg !14889

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !14860
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !14860
  call void @llvm.dbg.value(metadata i32 %14, metadata !12959, metadata !DIExpression()) #24, !dbg !14862
  call void @llvm.dbg.value(metadata i32 %14, metadata !12953, metadata !DIExpression()) #24, !dbg !14858
  call void @llvm.dbg.value(metadata i32 %14, metadata !14855, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.value(metadata i8 poison, metadata !14852, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #24, !dbg !14890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12979, metadata !DIExpression()) #24, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !12982, metadata !DIExpression()) #24, !dbg !14892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !14894, !srcloc !12988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14857
  ret i1 %13, !dbg !14895
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14896 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14902, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata i64 undef, metadata !14904, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14901, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14903, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.value(metadata i8** %4, metadata !14905, metadata !DIExpression()), !dbg !14907
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14908
  call void @llvm.dbg.value(metadata i32 %6, metadata !14906, metadata !DIExpression()), !dbg !14907
  %7 = icmp eq i8** %4, null, !dbg !14909
  br i1 %7, label %12, label %8, !dbg !14911

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14912
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14914
  %11 = load i8*, i8** %10, align 4, !dbg !14914
  store i8* %11, i8** %4, align 4, !dbg !14915
  br label %12, !dbg !14916

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14918 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14920
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14921
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14923 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14933, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14931, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14932, metadata !DIExpression()), !dbg !14950
  %5 = icmp eq i64 %4, -1, !dbg !14951
  br i1 %5, label %55, label %6, !dbg !14953

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14954
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !14955
  call void @llvm.dbg.value(metadata i32 0, metadata !14934, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !14964
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14966, !srcloc !14972
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !14966
  call void @llvm.dbg.value(metadata i32 %9, metadata !14969, metadata !DIExpression()) #24, !dbg !14973
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !14973
  call void @llvm.dbg.value(metadata i32 %9, metadata !14963, metadata !DIExpression()) #24, !dbg !14964
  call void @llvm.dbg.value(metadata i32 %9, metadata !14940, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14934, metadata !DIExpression()), !dbg !14956
  %10 = icmp slt i64 %4, -1, !dbg !14974
  br i1 %10, label %11, label %17, !dbg !14975

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !14976
  %13 = add i64 %4, %12, !dbg !14977
  %14 = sub i64 -2, %13, !dbg !14977
  call void @llvm.dbg.value(metadata i64 %14, metadata !14944, metadata !DIExpression()), !dbg !14978
  %15 = icmp sgt i64 %14, 1, !dbg !14979
  %16 = select i1 %15, i64 %14, i64 1, !dbg !14979
  br label %22, !dbg !14980

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !14981
  %19 = tail call fastcc i32 @elapsed.165() #26, !dbg !14983
  %20 = sext i32 %19 to i64, !dbg !14983
  %21 = add nsw i64 %18, %20, !dbg !14984
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !14985
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14986
  store i64 %23, i64* %24, align 8, !dbg !14987
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !14988
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !14941, metadata !DIExpression()), !dbg !14990
  %26 = icmp eq %struct._timeout* %25, null, !dbg !14991
  br i1 %26, label %42, label %27, !dbg !14991

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !14992
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !14941, metadata !DIExpression()), !dbg !14990
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14996
  %31 = load i64, i64* %30, align 8, !dbg !14996
  %32 = icmp slt i64 %28, %31, !dbg !14997
  br i1 %32, label %33, label %38, !dbg !14998

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !14996
  %35 = sub nsw i64 %31, %28, !dbg !14999
  store i64 %35, i64* %34, align 8, !dbg !14999
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15001
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15002
  tail call fastcc void @sys_dlist_insert.166(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15003
  br label %44, !dbg !15004

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15005
  store i64 %39, i64* %24, align 8, !dbg !15005
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15006
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !14941, metadata !DIExpression()), !dbg !14990
  %41 = icmp eq %struct._timeout* %40, null, !dbg !14991
  br i1 %41, label %42, label %27, !dbg !14991, !llvm.loop !15007

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15009
  tail call fastcc void @sys_dlist_append.167(%struct._dnode* noundef %43) #26, !dbg !15012
  br label %44, !dbg !15013

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15014
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15015
  br i1 %46, label %47, label %54, !dbg !15016

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15017
  call void @llvm.dbg.value(metadata i32 %48, metadata !14947, metadata !DIExpression()), !dbg !15018
  %49 = icmp ne i32 %48, 0, !dbg !15019
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15021
  br i1 %52, label %54, label %53, !dbg !15021

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !15022
  br label %54, !dbg !15024

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15025, metadata !DIExpression()) #24, !dbg !15031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15031
  call void @llvm.dbg.value(metadata i32 %9, metadata !15033, metadata !DIExpression()) #24, !dbg !15036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15038, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !14934, metadata !DIExpression()), !dbg !14956
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.165() unnamed_addr #1 !dbg !15041 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15044
  %2 = icmp eq i32 %1, 0, !dbg !15045
  br i1 %2, label %3, label %5, !dbg !15044

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !15046
  br label %5, !dbg !15044

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15044
  ret i32 %6, !dbg !15047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15048 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.170() #26, !dbg !15054
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15052, metadata !DIExpression()), !dbg !15055
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15056
  ret %struct._timeout* %2, !dbg !15057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.166(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15058 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15062, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15063, metadata !DIExpression()), !dbg !15066
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15067
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15067
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15064, metadata !DIExpression()), !dbg !15066
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15068
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15069
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15070
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15071
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15072
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15073
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15074
  ret void, !dbg !15075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15076 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15080, metadata !DIExpression()), !dbg !15082
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15083
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef %2) #26, !dbg !15084
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15081, metadata !DIExpression()), !dbg !15082
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15085
  ret %struct._timeout* %4, !dbg !15086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.167(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15087 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15092, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15093, metadata !DIExpression()), !dbg !15095
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15096
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15094, metadata !DIExpression()), !dbg !15095
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15097
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15098
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15099
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15100
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15101
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15102
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15103
  ret void, !dbg !15104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15105 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15110
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15107, metadata !DIExpression()), !dbg !15111
  %2 = tail call fastcc i32 @elapsed.165() #26, !dbg !15112
  call void @llvm.dbg.value(metadata i32 %2, metadata !15108, metadata !DIExpression()), !dbg !15111
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15113
  br i1 %3, label %14, label %4, !dbg !15115

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15116
  %6 = load i64, i64* %5, align 8, !dbg !15116
  %7 = sext i32 %2 to i64, !dbg !15117
  %8 = sub nsw i64 %6, %7, !dbg !15118
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15119
  br i1 %9, label %14, label %10, !dbg !15120

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15121
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15121
  %13 = trunc i64 %12 to i32, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %13, metadata !15109, metadata !DIExpression()), !dbg !15111
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15123
  call void @llvm.dbg.value(metadata i32 %15, metadata !15109, metadata !DIExpression()), !dbg !15111
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15124
  %17 = icmp ne i32 %16, 0, !dbg !15126
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15127
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %20, metadata !15109, metadata !DIExpression()), !dbg !15111
  ret i32 %20, !dbg !15128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15129 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15133, metadata !DIExpression()), !dbg !15135
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15134, metadata !DIExpression()), !dbg !15135
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15136
  br i1 %2, label %5, label %3, !dbg !15137

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef nonnull %0) #26, !dbg !15138
  br label %5, !dbg !15137

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15137
  ret %struct._dnode* %6, !dbg !15139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15140 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15142, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15143, metadata !DIExpression()), !dbg !15144
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15145
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15146
  br i1 %3, label %7, label %4, !dbg !15147

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15148
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15148
  br label %7, !dbg !15147

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15147
  ret %struct._dnode* %8, !dbg !15149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.170() unnamed_addr #5 !dbg !15150 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15154, metadata !DIExpression()), !dbg !15155
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.171() #26, !dbg !15156
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15156
  ret %struct._dnode* %3, !dbg !15157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.171() unnamed_addr #5 !dbg !15158 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15162, metadata !DIExpression()), !dbg !15163
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15164
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15165
  ret i1 %2, !dbg !15166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15167 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15171, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.value(metadata i32 -22, metadata !15172, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.value(metadata i32 0, metadata !15173, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15178
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15180, !srcloc !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14969, metadata !DIExpression()) #24, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()) #24, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !15175, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 -22, metadata !15172, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.value(metadata i32 undef, metadata !15173, metadata !DIExpression()), !dbg !15177
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15172, metadata !DIExpression()), !dbg !15176
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %3) #26, !dbg !15183
  br i1 %4, label %5, label %6, !dbg !15187

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15188
  call void @llvm.dbg.value(metadata i32 0, metadata !15172, metadata !DIExpression()), !dbg !15176
  br label %6, !dbg !15190

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15176
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15180
  call void @llvm.dbg.value(metadata i32 %8, metadata !14969, metadata !DIExpression()) #24, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %8, metadata !14963, metadata !DIExpression()) #24, !dbg !15178
  call void @llvm.dbg.value(metadata i32 %8, metadata !15175, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.value(metadata i32 %7, metadata !15172, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.value(metadata i32 undef, metadata !15025, metadata !DIExpression()) #24, !dbg !15191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15191
  call void @llvm.dbg.value(metadata i32 undef, metadata !15033, metadata !DIExpression()) #24, !dbg !15193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15195, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15173, metadata !DIExpression()), !dbg !15177
  ret i32 %7, !dbg !15196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15197 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15203, metadata !DIExpression()), !dbg !15204
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15205
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15205
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15206
  ret i1 %4, !dbg !15207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15208 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15210, metadata !DIExpression()), !dbg !15211
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15212
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15214
  br i1 %3, label %10, label %4, !dbg !15215

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15216
  %6 = load i64, i64* %5, align 8, !dbg !15216
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15218
  %8 = load i64, i64* %7, align 8, !dbg !15219
  %9 = add nsw i64 %8, %6, !dbg !15219
  store i64 %9, i64* %7, align 8, !dbg !15219
  br label %10, !dbg !15220

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15221
  tail call fastcc void @sys_dlist_remove.175(%struct._dnode* noundef %11) #26, !dbg !15222
  ret void, !dbg !15223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.175(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15228, metadata !DIExpression()), !dbg !15231
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15232
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15232
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15229, metadata !DIExpression()), !dbg !15231
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15233
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15233
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15230, metadata !DIExpression()), !dbg !15231
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15234
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15235
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15236
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15237
  tail call fastcc void @sys_dnode_init.176(%struct._dnode* noundef %0) #26, !dbg !15238
  ret void, !dbg !15239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.176(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15242, metadata !DIExpression()), !dbg !15243
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15244
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15245
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15246
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15247
  ret void, !dbg !15248
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15255, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.value(metadata i64 0, metadata !15256, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.value(metadata i32 0, metadata !15257, metadata !DIExpression()), !dbg !15261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15262
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15264, !srcloc !14972
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15264
  call void @llvm.dbg.value(metadata i32 %3, metadata !14969, metadata !DIExpression()) #24, !dbg !15266
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15266
  call void @llvm.dbg.value(metadata i32 %3, metadata !14963, metadata !DIExpression()) #24, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %3, metadata !15259, metadata !DIExpression()), !dbg !15261
  call void @llvm.dbg.value(metadata i64 0, metadata !15256, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.value(metadata i32 undef, metadata !15257, metadata !DIExpression()), !dbg !15261
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15267
  call void @llvm.dbg.value(metadata i64 %4, metadata !15256, metadata !DIExpression()), !dbg !15260
  call void @llvm.dbg.value(metadata i32 %3, metadata !15025, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %3, metadata !15033, metadata !DIExpression()) #24, !dbg !15272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15274, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15257, metadata !DIExpression()), !dbg !15261
  ret i64 %4, !dbg !15275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15278, metadata !DIExpression()), !dbg !15282
  call void @llvm.dbg.value(metadata i64 0, metadata !15279, metadata !DIExpression()), !dbg !15282
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* noundef %0) #26, !dbg !15283
  br i1 %2, label %21, label %3, !dbg !15285

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15286
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15280, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata i64 0, metadata !15279, metadata !DIExpression()), !dbg !15282
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15288
  br i1 %5, label %16, label %6, !dbg !15290

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15280, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata i64 %8, metadata !15279, metadata !DIExpression()), !dbg !15282
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15291
  %10 = load i64, i64* %9, align 8, !dbg !15291
  %11 = add nsw i64 %10, %8, !dbg !15293
  call void @llvm.dbg.value(metadata i64 %11, metadata !15279, metadata !DIExpression()), !dbg !15282
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15294
  br i1 %12, label %16, label %13, !dbg !15296

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15297
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15280, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.value(metadata i64 %11, metadata !15279, metadata !DIExpression()), !dbg !15282
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15288
  br i1 %15, label %16, label %6, !dbg !15290, !llvm.loop !15298

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15282
  call void @llvm.dbg.value(metadata i64 %17, metadata !15279, metadata !DIExpression()), !dbg !15282
  %18 = tail call fastcc i32 @elapsed.165() #26, !dbg !15300
  %19 = sext i32 %18 to i64, !dbg !15300
  %20 = sub nsw i64 %17, %19, !dbg !15301
  br label %21, !dbg !15302

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15282
  ret i64 %22, !dbg !15303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15304 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15308, metadata !DIExpression()), !dbg !15309
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15310
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %2) #26, !dbg !15311
  %4 = xor i1 %3, true, !dbg !15312
  ret i1 %4, !dbg !15313
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15314 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15316, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i64 0, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 0, metadata !15318, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15323
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15325, !srcloc !14972
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %3, metadata !14969, metadata !DIExpression()) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %3, metadata !14963, metadata !DIExpression()) #24, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %3, metadata !15320, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i64 0, metadata !15317, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15322
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15328
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15331
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15317, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15321
  call void @llvm.dbg.value(metadata i32 %3, metadata !15025, metadata !DIExpression()) #24, !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15332
  call void @llvm.dbg.value(metadata i32 %3, metadata !15033, metadata !DIExpression()) #24, !dbg !15334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15336, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15318, metadata !DIExpression()), !dbg !15322
  %6 = add i64 %5, %4, !dbg !15337
  ret i64 %6, !dbg !15338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15339 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15341, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 0, metadata !15342, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15347
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15349, !srcloc !14972
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15349
  call void @llvm.dbg.value(metadata i32 %2, metadata !14969, metadata !DIExpression()) #24, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %2, metadata !14963, metadata !DIExpression()) #24, !dbg !15347
  call void @llvm.dbg.value(metadata i32 %2, metadata !15344, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.value(metadata i32 -1, metadata !15341, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15342, metadata !DIExpression()), !dbg !15346
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15352
  call void @llvm.dbg.value(metadata i32 %3, metadata !15341, metadata !DIExpression()), !dbg !15345
  call void @llvm.dbg.value(metadata i32 %2, metadata !15025, metadata !DIExpression()) #24, !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15355
  call void @llvm.dbg.value(metadata i32 %2, metadata !15033, metadata !DIExpression()) #24, !dbg !15357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15359, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15342, metadata !DIExpression()), !dbg !15346
  ret i32 %3, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15363, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.value(metadata i1 %1, metadata !15364, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15373
  call void @llvm.dbg.value(metadata i32 0, metadata !15365, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15375
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15377, !srcloc !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14969, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()) #24, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15367, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15365, metadata !DIExpression()), !dbg !15374
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15380
  call void @llvm.dbg.value(metadata i32 %4, metadata !15368, metadata !DIExpression()), !dbg !15381
  call void @llvm.dbg.value(metadata i1 undef, metadata !15371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15381
  %5 = icmp slt i32 %4, 2, !dbg !15382
  call void @llvm.dbg.value(metadata i1 %5, metadata !15372, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15381
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !15383
  call void @llvm.dbg.value(metadata i1 %6, metadata !15371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15381
  br i1 %7, label %11, label %8, !dbg !15383

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !15385
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !15385
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !15387
  br label %11, !dbg !15388

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %12, metadata !14969, metadata !DIExpression()) #24, !dbg !15379
  call void @llvm.dbg.value(metadata i32 %12, metadata !14963, metadata !DIExpression()) #24, !dbg !15375
  call void @llvm.dbg.value(metadata i32 %12, metadata !15367, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15025, metadata !DIExpression()) #24, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15033, metadata !DIExpression()) #24, !dbg !15391
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15393, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 1, metadata !15365, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15365, metadata !DIExpression()), !dbg !15374
  ret void, !dbg !15394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15399, metadata !DIExpression()), !dbg !15404
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15406
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15408, !srcloc !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14969, metadata !DIExpression()) #24, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15410
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()) #24, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15404
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15404
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !15411
  %4 = icmp eq %struct._timeout* %3, null, !dbg !15412
  br i1 %4, label %28, label %5, !dbg !15413

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !15414
  %10 = load i64, i64* %9, align 8, !dbg !15414
  %11 = sext i32 %8 to i64, !dbg !15415
  %12 = icmp sgt i64 %10, %11, !dbg !15416
  br i1 %12, label %26, label %13, !dbg !15417

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !15404
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !15401, metadata !DIExpression()), !dbg !15418
  %15 = trunc i64 %10 to i32, !dbg !15419
  call void @llvm.dbg.value(metadata i32 %15, metadata !15403, metadata !DIExpression()), !dbg !15418
  %16 = sext i32 %15 to i64, !dbg !15420
  %17 = load i64, i64* @curr_tick, align 8, !dbg !15421
  %18 = add i64 %17, %16, !dbg !15421
  store i64 %18, i64* @curr_tick, align 8, !dbg !15421
  store i64 0, i64* %9, align 8, !dbg !15422
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !15423
  call void @llvm.dbg.value(metadata i32 %14, metadata !15025, metadata !DIExpression()) #24, !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15424
  call void @llvm.dbg.value(metadata i32 %14, metadata !15033, metadata !DIExpression()) #24, !dbg !15426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15428, !srcloc !15039
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !15429
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !15429
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !15430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15431
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15433, !srcloc !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !14969, metadata !DIExpression()) #24, !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15435
  call void @llvm.dbg.value(metadata i32 undef, metadata !14963, metadata !DIExpression()) #24, !dbg !15431
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15404
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !15436
  %23 = sub nsw i32 %22, %15, !dbg !15436
  store i32 %23, i32* @announce_remaining, align 4, !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15404
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !15411
  %25 = icmp eq %struct._timeout* %24, null, !dbg !15412
  br i1 %25, label %28, label %5, !dbg !15413, !llvm.loop !15437

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !15439
  store i64 %27, i64* %9, align 8, !dbg !15439
  br label %32, !dbg !15442

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !15404
  %31 = sext i32 %30 to i64, !dbg !15443
  br label %32, !dbg !15443

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !15443
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !15404
  %36 = load i64, i64* @curr_tick, align 8, !dbg !15444
  %37 = add i64 %36, %33, !dbg !15444
  store i64 %37, i64* @curr_tick, align 8, !dbg !15444
  store i32 0, i32* @announce_remaining, align 4, !dbg !15445
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !15446
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !15447
  call void @llvm.dbg.value(metadata i32 %35, metadata !15025, metadata !DIExpression()) #24, !dbg !15448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %35, metadata !15033, metadata !DIExpression()) #24, !dbg !15450
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !15452, !srcloc !15039
  ret void, !dbg !15453
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15454 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15458, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata i32 0, metadata !15459, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14957, metadata !DIExpression()) #24, !dbg !15464
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15466, !srcloc !14972
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15466
  call void @llvm.dbg.value(metadata i32 %2, metadata !14969, metadata !DIExpression()) #24, !dbg !15468
  call void @llvm.dbg.value(metadata i32 undef, metadata !14970, metadata !DIExpression()) #24, !dbg !15468
  call void @llvm.dbg.value(metadata i32 %2, metadata !14963, metadata !DIExpression()) #24, !dbg !15464
  call void @llvm.dbg.value(metadata i32 %2, metadata !15461, metadata !DIExpression()), !dbg !15463
  call void @llvm.dbg.value(metadata i64 0, metadata !15458, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.value(metadata i32 undef, metadata !15459, metadata !DIExpression()), !dbg !15463
  %3 = load i64, i64* @curr_tick, align 8, !dbg !15469
  %4 = tail call fastcc i32 @elapsed.165() #26, !dbg !15472
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !15458, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15462
  call void @llvm.dbg.value(metadata i32 %2, metadata !15025, metadata !DIExpression()) #24, !dbg !15473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15030, metadata !DIExpression()) #24, !dbg !15473
  call void @llvm.dbg.value(metadata i32 %2, metadata !15033, metadata !DIExpression()) #24, !dbg !15475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15477, !srcloc !15039
  call void @llvm.dbg.value(metadata i32 undef, metadata !15459, metadata !DIExpression()), !dbg !15463
  %5 = sext i32 %4 to i64, !dbg !15472
  %6 = add i64 %3, %5, !dbg !15478
  ret i64 %6, !dbg !15479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15480 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15481
  %2 = trunc i64 %1 to i32, !dbg !15482
  ret i32 %2, !dbg !15483
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15484 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15485
  ret i64 %1, !dbg !15486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15489, metadata !DIExpression()), !dbg !15496
  %2 = icmp eq i32 %0, 0, !dbg !15497
  br i1 %2, label %10, label %3, !dbg !15499

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15500
  call void @llvm.dbg.value(metadata i32 %4, metadata !15490, metadata !DIExpression()), !dbg !15496
  %5 = mul i32 %0, 84, !dbg !15501
  call void @llvm.dbg.value(metadata i32 %5, metadata !15491, metadata !DIExpression()), !dbg !15496
  br label %6, !dbg !15502

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !15503
  call void @llvm.dbg.value(metadata i32 %7, metadata !15492, metadata !DIExpression()), !dbg !15504
  %8 = sub i32 %7, %4, !dbg !15505
  %9 = icmp ult i32 %8, %5, !dbg !15507
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !15509 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !15510
  ret i32 %1, !dbg !15511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !15512 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15514
  ret i32 %1, !dbg !15515
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15516 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15520, metadata !DIExpression()), !dbg !15522
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15523

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15524
  br label %14, !dbg !15528

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15521, metadata !DIExpression()), !dbg !15522
  %6 = icmp slt i64 %2, -1, !dbg !15529
  br i1 %6, label %7, label %9, !dbg !15532

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15533
  br label %14, !dbg !15534

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15536
  %11 = icmp ugt i64 %2, 1, !dbg !15537
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15537
  %13 = add nsw i64 %10, %12, !dbg !15538
  br label %14, !dbg !15539

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15540
  ret i64 %15, !dbg !15541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15542 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.186, i32 0, i32 0)) #25, !dbg !15544
  ret void, !dbg !15545
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!661, !2, !2213, !27, !124, !2215, !2217, !138, !2243, !2281, !167, !222, !2283, !2294, !2340, !2342, !2370, !2398, !2441, !2512, !2557, !251, !397, !2585, !433, !443, !468, !693, !2590, !828, !894, !1203, !1418, !2628, !1531, !1621, !2630, !2715, !2779, !1672, !2782, !1679, !2041, !2800, !2061, !2802, !2176, !2805}
!llvm.ident = !{!2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807, !2807}
!llvm.module.flags = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !167, file: !184, line: 56, type: !185, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !169, globals: !183, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 379, baseType: !173)
!172 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 224, elements: !174)
!174 = !{!175, !177, !178, !179, !180, !181, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !173, file: !172, line: 372, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !173, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !173, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !173, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !173, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !173, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !173, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!183 = !{!165}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = !{!189, !219}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !187, line: 60, baseType: !190, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DISubroutineType(types: !192)
!192 = !{!103, !193}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !197)
!196 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!197 = !{!198, !201, !202, !203, !212, !213}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 380, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !195, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !195, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !195, file: !196, line: 386, baseType: !204, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !206)
!206 = !{!207, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !205, file: !196, line: 359, baseType: !208, size: 8)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !209)
!209 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !205, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !195, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !195, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !196, line: 43, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !218)
!218 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 65, baseType: !193, size: 32, offset: 32)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !222, file: !225, line: 71, type: !226, isLocal: true, isDefinition: true, align: 32)
!222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !223, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !224, splitDebugInlining: false, nameTableKind: None)
!223 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!224 = !{!220}
!225 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !228)
!228 = !{!229, !248}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !227, file: !187, line: 60, baseType: !230, size: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DISubroutineType(types: !232)
!232 = !{!103, !233}
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !236)
!236 = !{!237, !238, !239, !240, !246, !247}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !235, file: !196, line: 380, baseType: !199, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !235, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !235, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !235, file: !196, line: 386, baseType: !241, size: 32, offset: 96)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !243)
!243 = !{!244, !245}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !242, file: !196, line: 359, baseType: !208, size: 8)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !242, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !235, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !235, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !227, file: !187, line: 65, baseType: !233, size: 32, offset: 32)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "static_regions", scope: !251, file: !258, line: 62, type: !393, isLocal: true, isDefinition: true)
!251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !253, globals: !254, splitDebugInlining: false, nameTableKind: None)
!252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!253 = !{!120, !103, !137, !102}
!254 = !{!255, !249}
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !257, file: !258, line: 198, type: !379, isLocal: true, isDefinition: true)
!257 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !258, file: !258, line: 175, type: !259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !374)
!258 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!259 = !DISubroutineType(types: !260)
!260 = !{null, !261}
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !264)
!263 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!264 = !{!265, !332, !345, !346, !347, !348, !354, !369}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !262, file: !263, line: 247, baseType: !266, size: 384)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !267)
!267 = !{!268, !296, !304, !305, !306, !317, !318, !319}
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 60, baseType: !269, size: 64)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 60, size: 64, elements: !270)
!270 = !{!271, !287}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !269, file: !263, line: 61, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !275)
!275 = !{!276, !282}
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 38, baseType: !277, size: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 38, size: 32, elements: !278)
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !277, file: !273, line: 39, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !277, file: !273, line: 40, baseType: !280, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_member, scope: !274, file: !273, line: 42, baseType: !283, size: 32, offset: 32)
!283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !274, file: !273, line: 42, size: 32, elements: !284)
!284 = !{!285, !286}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !283, file: !273, line: 43, baseType: !280, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !283, file: !273, line: 44, baseType: !280, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !269, file: !263, line: 62, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !288, file: !289, line: 50, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 64, elements: !294)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!294 = !{!295}
!295 = !DISubrange(count: 2)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !266, file: !263, line: 68, baseType: !297, size: 32, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !300)
!299 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !300, file: !299, line: 232, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !274)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !266, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !266, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!306 = !DIDerivedType(tag: DW_TAG_member, scope: !266, file: !263, line: 90, baseType: !307, size: 16, offset: 112)
!307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !266, file: !263, line: 90, size: 16, elements: !308)
!308 = !{!309, !316}
!309 = !DIDerivedType(tag: DW_TAG_member, scope: !307, file: !263, line: 91, baseType: !310, size: 16)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !307, file: !263, line: 91, size: 16, elements: !311)
!311 = !{!312, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !310, file: !263, line: 96, baseType: !313, size: 8)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !314)
!314 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !310, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !307, file: !263, line: 100, baseType: !151, size: 16)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !266, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !266, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !266, file: !263, line: 131, baseType: !320, size: 192, offset: 192)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !321)
!321 = !{!322, !323, !329}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !320, file: !299, line: 245, baseType: !272, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !320, file: !299, line: 246, baseType: !324, size: 32, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DISubroutineType(types: !327)
!327 = !{null, !328}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !320, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !331)
!331 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !262, file: !263, line: 250, baseType: !333, size: 288, offset: 384)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !340, !341, !342, !343, !344}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !333, file: !334, line: 26, baseType: !137, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !333, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !333, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !333, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !333, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !333, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !333, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !333, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !333, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !262, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !262, file: !263, line: 256, baseType: !298, size: 64, offset: 704)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !262, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !262, file: !263, line: 300, baseType: !349, size: 96, offset: 800)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !349, file: !263, line: 153, baseType: !22, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !349, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !262, file: !263, line: 325, baseType: !355, size: 32, offset: 896)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !358)
!357 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !365, !366}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !356, file: !357, line: 5074, baseType: !360, size: 96)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !361)
!361 = !{!362, !363, !364}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !360, file: !113, line: 57, baseType: !116, size: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !360, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !360, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !356, file: !357, line: 5075, baseType: !298, size: 64, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !356, file: !357, line: 5076, baseType: !367, offset: 160)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!368 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !262, file: !263, line: 343, baseType: !370, size: 64, offset: 928)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !371)
!371 = !{!372, !373}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !370, file: !334, line: 63, baseType: !137, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !370, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!374 = !{!375, !376, !377, !378}
!375 = !DILocalVariable(name: "thread", arg: 1, scope: !257, file: !258, line: 175, type: !261)
!376 = !DILocalVariable(name: "region_num", scope: !257, file: !258, line: 200, type: !208)
!377 = !DILocalVariable(name: "guard_start", scope: !257, file: !258, line: 265, type: !22)
!378 = !DILocalVariable(name: "guard_size", scope: !257, file: !258, line: 266, type: !120)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !391)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !382)
!381 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!382 = !{!383, !384, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !380, file: !381, line: 53, baseType: !22, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !380, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !380, file: !381, line: 55, baseType: !386, size: 32, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !389)
!389 = !{!390}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !388, file: !387, line: 150, baseType: !137, size: 32)
!391 = !{!392}
!392 = !DISubrange(count: 1)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 96, elements: !391)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !397, file: !430, line: 39, type: !208, isLocal: true, isDefinition: true)
!397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !399, globals: !429, splitDebugInlining: false, nameTableKind: None)
!398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!399 = !{!400, !102, !103, !417, !208}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !402, line: 1226, baseType: !403)
!402 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 1213, size: 352, elements: !404)
!404 = !{!405, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !403, file: !402, line: 1215, baseType: !406, size: 32)
!406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !403, file: !402, line: 1216, baseType: !176, size: 32, offset: 32)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !403, file: !402, line: 1217, baseType: !176, size: 32, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !403, file: !402, line: 1218, baseType: !176, size: 32, offset: 96)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !403, file: !402, line: 1219, baseType: !176, size: 32, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !403, file: !402, line: 1220, baseType: !176, size: 32, offset: 160)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !403, file: !402, line: 1221, baseType: !176, size: 32, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !403, file: !402, line: 1222, baseType: !176, size: 32, offset: 224)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !403, file: !402, line: 1223, baseType: !176, size: 32, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !403, file: !402, line: 1224, baseType: !176, size: 32, offset: 288)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !403, file: !402, line: 1225, baseType: !176, size: 32, offset: 320)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422, !423, !424}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 29, baseType: !137, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !419, file: !420, line: 37, baseType: !425, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !427)
!427 = !{!428}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !426, file: !387, line: 143, baseType: !137, size: 32)
!429 = !{!395}
!430 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!431 = !DIGlobalVariableExpression(var: !432, expr: !DIExpression())
!432 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !433, file: !440, line: 21, type: !128, isLocal: true, isDefinition: true)
!433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !435, globals: !439, splitDebugInlining: false, nameTableKind: None)
!434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!435 = !{!436, !103, !102}
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !438, line: 22, baseType: !103)
!438 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!439 = !{!431}
!440 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !443, file: !448, line: 13, type: !465, isLocal: true, isDefinition: true)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !445, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!445 = !{!446, !441}
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "mpu_config", scope: !443, file: !448, line: 37, type: !449, isLocal: false, isDefinition: true)
!448 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !420, line: 41, size: 64, elements: !451)
!451 = !{!452, !453}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !450, file: !420, line: 43, baseType: !137, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !450, file: !420, line: 45, baseType: !454, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !420, line: 27, size: 96, elements: !457)
!457 = !{!458, !459, !460}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !456, file: !420, line: 29, baseType: !137, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !456, file: !420, line: 31, baseType: !199, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !456, file: !420, line: 37, baseType: !461, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !387, line: 146, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !387, line: 141, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !462, file: !387, line: 143, baseType: !137, size: 32)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 192, elements: !294)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !468, file: !572, line: 72, type: !656, isLocal: true, isDefinition: true)
!468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !470, retainedTypes: !558, globals: !569, splitDebugInlining: false, nameTableKind: None)
!469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!470 = !{!30, !471}
!471 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !172, line: 65, baseType: !103, size: 32, elements: !472)
!472 = !{!473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557}
!473 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!481 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!482 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!483 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!484 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!485 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!486 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!487 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!488 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!489 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!490 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!491 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!492 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!493 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!494 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!495 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!496 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!497 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!498 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!499 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!500 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!501 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!502 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!503 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!504 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!505 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!506 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!507 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!508 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!509 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!510 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!511 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!512 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!513 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!514 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!515 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!516 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!517 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!518 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!519 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!520 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!521 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!522 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!523 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!524 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!525 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!526 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!527 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!528 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!529 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!530 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!531 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!532 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!533 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!534 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!535 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!536 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!537 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!538 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!539 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!540 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!541 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!542 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!543 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!544 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!545 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!546 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!547 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!548 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!549 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!550 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!551 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!552 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!553 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!554 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!555 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!556 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!557 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!558 = !{!120, !103, !102, !559}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !172, line: 364, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 356, size: 192, elements: !562)
!562 = !{!563, !564, !565, !566, !567, !568}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !561, file: !172, line: 358, baseType: !176, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !561, file: !172, line: 359, baseType: !176, size: 32, offset: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !561, file: !172, line: 360, baseType: !176, size: 32, offset: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !561, file: !172, line: 361, baseType: !176, size: 32, offset: 96)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !561, file: !172, line: 362, baseType: !176, size: 32, offset: 128)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !561, file: !172, line: 363, baseType: !176, size: 32, offset: 160)
!569 = !{!570, !576, !592, !603, !620, !466, !622, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654}
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !468, file: !572, line: 424, type: !573, isLocal: false, isDefinition: true, align: 16)
!572 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !574)
!574 = !{!575}
!575 = !DISubrange(count: 4)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !468, file: !572, line: 424, type: !578, isLocal: false, isDefinition: true, align: 32)
!578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !580)
!580 = !{!581, !582, !583, !584, !590, !591}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !579, file: !196, line: 380, baseType: !199, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !579, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !579, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !579, file: !196, line: 386, baseType: !585, size: 32, offset: 96)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !587)
!587 = !{!588, !589}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !586, file: !196, line: 359, baseType: !208, size: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !586, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !579, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !579, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !468, file: !572, line: 424, type: !594, isLocal: true, isDefinition: true, align: 32)
!594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !596)
!596 = !{!597, !602}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !595, file: !187, line: 60, baseType: !598, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{!103, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !595, file: !187, line: 65, baseType: !601, size: 32, offset: 32)
!603 = !DIGlobalVariableExpression(var: !604, expr: !DIExpression())
!604 = distinct !DIGlobalVariable(name: "exti_data", scope: !468, file: !572, line: 423, type: !605, isLocal: true, isDefinition: true)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !572, line: 107, size: 1472, elements: !606)
!606 = !{!607}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !605, file: !572, line: 109, baseType: !608, size: 1472)
!608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !609, size: 1472, elements: !618)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !572, line: 101, size: 64, elements: !610)
!610 = !{!611, !617}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !609, file: !572, line: 102, baseType: !612, size: 32)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !613, line: 63, baseType: !614)
!613 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{null, !103, !102}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !609, file: !572, line: 103, baseType: !102, size: 32, offset: 32)
!618 = !{!619}
!619 = !DISubrange(count: 23)
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !468, file: !572, line: 424, type: !586, isLocal: true, isDefinition: true, align: 8)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !624, file: !572, line: 493, type: !629, isLocal: true, isDefinition: true, align: 32)
!624 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !572, file: !572, line: 460, type: !625, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !627)
!625 = !DISubroutineType(types: !626)
!626 = !{null, !601}
!627 = !{!628}
!628 = !DILocalVariable(name: "dev", arg: 1, scope: !624, file: !572, line: 460, type: !601)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !630)
!630 = !{!631, !633, !634, !635}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !10, line: 55, baseType: !632, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !629, file: !10, line: 57, baseType: !632, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !629, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !629, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !624, file: !572, line: 497, type: !629, isLocal: true, isDefinition: true, align: 32)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !624, file: !572, line: 507, type: !629, isLocal: true, isDefinition: true, align: 32)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !624, file: !572, line: 512, type: !629, isLocal: true, isDefinition: true, align: 32)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !624, file: !572, line: 516, type: !629, isLocal: true, isDefinition: true, align: 32)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !624, file: !572, line: 523, type: !629, isLocal: true, isDefinition: true, align: 32)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !624, file: !572, line: 527, type: !629, isLocal: true, isDefinition: true, align: 32)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !624, file: !572, line: 581, type: !629, isLocal: true, isDefinition: true, align: 32)
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !624, file: !572, line: 586, type: !629, isLocal: true, isDefinition: true, align: 32)
!652 = !DIGlobalVariableExpression(var: !653, expr: !DIExpression())
!653 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !624, file: !572, line: 591, type: !629, isLocal: true, isDefinition: true, align: 32)
!654 = !DIGlobalVariableExpression(var: !655, expr: !DIExpression())
!655 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !624, file: !572, line: 595, type: !629, isLocal: true, isDefinition: true, align: 32)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 736, elements: !618)
!657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !658)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !172, line: 154, baseType: !471)
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !661, file: !666, line: 22, type: !688, isLocal: false, isDefinition: true, align: 16)
!661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !662, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !663, splitDebugInlining: false, nameTableKind: None)
!662 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!663 = !{!664, !659, !670, !672, !674, !676, !678, !680, !682, !684, !686}
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !661, file: !666, line: 17, type: !667, isLocal: false, isDefinition: true, align: 16)
!666 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 192, elements: !668)
!668 = !{!669}
!669 = !DISubrange(count: 12)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !661, file: !666, line: 29, type: !573, isLocal: false, isDefinition: true, align: 16)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !661, file: !666, line: 36, type: !573, isLocal: false, isDefinition: true, align: 16)
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !661, file: !666, line: 43, type: !573, isLocal: false, isDefinition: true, align: 16)
!676 = !DIGlobalVariableExpression(var: !677, expr: !DIExpression())
!677 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !661, file: !666, line: 50, type: !573, isLocal: false, isDefinition: true, align: 16)
!678 = !DIGlobalVariableExpression(var: !679, expr: !DIExpression())
!679 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !661, file: !666, line: 57, type: !573, isLocal: false, isDefinition: true, align: 16)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !661, file: !666, line: 64, type: !573, isLocal: false, isDefinition: true, align: 16)
!682 = !DIGlobalVariableExpression(var: !683, expr: !DIExpression())
!683 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !661, file: !666, line: 71, type: !573, isLocal: false, isDefinition: true, align: 16)
!684 = !DIGlobalVariableExpression(var: !685, expr: !DIExpression())
!685 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !661, file: !666, line: 78, type: !573, isLocal: false, isDefinition: true, align: 16)
!686 = !DIGlobalVariableExpression(var: !687, expr: !DIExpression())
!687 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !661, file: !666, line: 85, type: !573, isLocal: false, isDefinition: true, align: 16)
!688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !689)
!689 = !{!690}
!690 = !DISubrange(count: 3)
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !693, file: !754, line: 398, type: !787, isLocal: true, isDefinition: true)
!693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !695, retainedTypes: !708, globals: !751, splitDebugInlining: false, nameTableKind: None)
!694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!695 = !{!696, !30, !701}
!696 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 197, baseType: !32, size: 32, elements: !698)
!697 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700}
!699 = !DIEnumerator(name: "SUCCESS", value: 0)
!700 = !DIEnumerator(name: "ERROR", value: 1)
!701 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !702, line: 44, baseType: !32, size: 32, elements: !703)
!702 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !{!704, !705, !706, !707}
!704 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!705 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!706 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!707 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!708 = !{!102, !103, !137, !709, !745, !149}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 510, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 477, size: 1216, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !711, file: !172, line: 479, baseType: !176, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !711, file: !172, line: 480, baseType: !176, size: 32, offset: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !711, file: !172, line: 481, baseType: !176, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !711, file: !172, line: 482, baseType: !176, size: 32, offset: 96)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !711, file: !172, line: 483, baseType: !176, size: 32, offset: 128)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !711, file: !172, line: 484, baseType: !176, size: 32, offset: 160)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !711, file: !172, line: 485, baseType: !720, size: 64, offset: 192)
!720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !294)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !711, file: !172, line: 486, baseType: !176, size: 32, offset: 256)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !711, file: !172, line: 487, baseType: !176, size: 32, offset: 288)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !711, file: !172, line: 488, baseType: !720, size: 64, offset: 320)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !711, file: !172, line: 489, baseType: !176, size: 32, offset: 384)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !711, file: !172, line: 490, baseType: !176, size: 32, offset: 416)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !711, file: !172, line: 491, baseType: !720, size: 64, offset: 448)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !711, file: !172, line: 492, baseType: !176, size: 32, offset: 512)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !711, file: !172, line: 493, baseType: !176, size: 32, offset: 544)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !711, file: !172, line: 494, baseType: !720, size: 64, offset: 576)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !711, file: !172, line: 495, baseType: !176, size: 32, offset: 640)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !711, file: !172, line: 496, baseType: !176, size: 32, offset: 672)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !711, file: !172, line: 497, baseType: !720, size: 64, offset: 704)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !711, file: !172, line: 498, baseType: !176, size: 32, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !711, file: !172, line: 499, baseType: !176, size: 32, offset: 800)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !711, file: !172, line: 500, baseType: !720, size: 64, offset: 832)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !711, file: !172, line: 501, baseType: !176, size: 32, offset: 896)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !711, file: !172, line: 502, baseType: !176, size: 32, offset: 928)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !711, file: !172, line: 503, baseType: !720, size: 64, offset: 960)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !711, file: !172, line: 504, baseType: !176, size: 32, offset: 1024)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !711, file: !172, line: 505, baseType: !176, size: 32, offset: 1056)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !711, file: !172, line: 506, baseType: !137, size: 32, offset: 1088)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !711, file: !172, line: 507, baseType: !176, size: 32, offset: 1120)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !711, file: !172, line: 508, baseType: !176, size: 32, offset: 1152)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !711, file: !172, line: 509, baseType: !176, size: 32, offset: 1184)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !747, line: 343, size: 64, elements: !748)
!747 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!748 = !{!749, !750}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !746, file: !747, line: 344, baseType: !137, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !746, file: !747, line: 345, baseType: !137, size: 32, offset: 32)
!751 = !{!752, !758, !774, !785, !691}
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !693, file: !754, line: 752, type: !755, isLocal: false, isDefinition: true, align: 16)
!754 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 848, elements: !756)
!756 = !{!757}
!757 = !DISubrange(count: 53)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !693, file: !754, line: 752, type: !760, isLocal: false, isDefinition: true, align: 32)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !762)
!762 = !{!763, !764, !765, !766, !772, !773}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !761, file: !196, line: 380, baseType: !199, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !761, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !761, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !761, file: !196, line: 386, baseType: !767, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 32)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !768, file: !196, line: 359, baseType: !208, size: 8)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !768, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !761, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !761, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !693, file: !754, line: 752, type: !776, isLocal: true, isDefinition: true, align: 32)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !778)
!778 = !{!779, !784}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !777, file: !187, line: 60, baseType: !780, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !783}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !777, file: !187, line: 65, baseType: !783, size: 32, offset: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !693, file: !754, line: 752, type: !768, isLocal: true, isDefinition: true, align: 8)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !702, line: 100, size: 224, elements: !788)
!788 = !{!789, !795, !796, !805, !810, !815, !821}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !787, file: !702, line: 101, baseType: !790, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !702, line: 76, baseType: !791)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DISubroutineType(types: !793)
!793 = !{!103, !783, !794}
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !702, line: 56, baseType: !102)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !787, file: !702, line: 102, baseType: !790, size: 32, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !787, file: !702, line: 103, baseType: !797, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !702, line: 83, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!103, !783, !794, !801, !102}
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !702, line: 72, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !783, !794, !102}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !787, file: !702, line: 104, baseType: !806, size: 32, offset: 96)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !702, line: 79, baseType: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DISubroutineType(types: !809)
!809 = !{!103, !783, !794, !149}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !787, file: !702, line: 105, baseType: !811, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !702, line: 88, baseType: !812)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 32)
!813 = !DISubroutineType(types: !814)
!814 = !{!701, !783, !794}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !787, file: !702, line: 106, baseType: !816, size: 32, offset: 160)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !702, line: 92, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DISubroutineType(types: !819)
!819 = !{!103, !783, !794, !820}
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !702, line: 64, baseType: !102)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !787, file: !702, line: 107, baseType: !822, size: 32, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !702, line: 96, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DISubroutineType(types: !825)
!825 = !{!103, !783, !794, !102}
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !828, file: !885, line: 603, type: !887, isLocal: true, isDefinition: true, align: 32)
!828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !830, globals: !882, splitDebugInlining: false, nameTableKind: None)
!829 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!830 = !{!102, !103, !831}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !834, line: 336, size: 160, elements: !835)
!834 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!835 = !{!836, !856, !860, !864, !877}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !833, file: !834, line: 365, baseType: !837, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DISubroutineType(types: !839)
!839 = !{!103, !840, !855}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !196, line: 380, baseType: !199, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !196, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !196, line: 359, baseType: !208, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !833, file: !834, line: 366, baseType: !857, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{null, !840, !209}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !833, file: !834, line: 374, baseType: !861, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 32)
!862 = !DISubroutineType(types: !863)
!863 = !{!103, !840}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !833, file: !834, line: 377, baseType: !865, size: 32, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = !DISubroutineType(types: !867)
!867 = !{!103, !840, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !834, line: 122, size: 64, elements: !871)
!871 = !{!872, !873, !874, !875, !876}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !870, file: !834, line: 123, baseType: !137, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !870, file: !834, line: 124, baseType: !208, size: 8, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !870, file: !834, line: 125, baseType: !208, size: 8, offset: 40)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !870, file: !834, line: 126, baseType: !208, size: 8, offset: 48)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !870, file: !834, line: 127, baseType: !208, size: 8, offset: 56)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !833, file: !834, line: 379, baseType: !878, size: 32, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!103, !840, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!882 = !{!826, !883}
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !828, file: !885, line: 38, type: !886, isLocal: true, isDefinition: true)
!885 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !888, file: !187, line: 60, baseType: !861, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !888, file: !187, line: 65, baseType: !840, size: 32, offset: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !894, file: !1066, line: 762, type: !1178, isLocal: true, isDefinition: true)
!894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !896, retainedTypes: !914, globals: !1063, splitDebugInlining: false, nameTableKind: None)
!895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!896 = !{!30, !897, !903, !908, !701}
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !898, line: 506, baseType: !32, size: 32, elements: !899)
!898 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!899 = !{!900, !901, !902}
!900 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!901 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!902 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !898, line: 512, baseType: !32, size: 32, elements: !904)
!904 = !{!905, !906, !907}
!905 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!906 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!907 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !613, line: 43, baseType: !32, size: 32, elements: !909)
!909 = !{!910, !911, !912, !913}
!910 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!911 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!912 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!913 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!914 = !{!102, !103, !915, !985, !990, !950, !903, !897, !995, !996, !137, !1010, !965, !1022, !1023, !1024}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !898, line: 523, size: 288, elements: !918)
!918 = !{!919, !940, !946, !951, !955, !956, !957, !961, !981}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !917, file: !898, line: 524, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DISubroutineType(types: !922)
!922 = !{!103, !923, !938, !939}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !926)
!926 = !{!927, !928, !929, !930, !936, !937}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !925, file: !196, line: 380, baseType: !199, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !925, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !925, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !925, file: !196, line: 386, baseType: !931, size: 32, offset: 96)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !933)
!933 = !{!934, !935}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !932, file: !196, line: 359, baseType: !208, size: 8)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !932, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !925, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !925, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !898, line: 237, baseType: !208)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !898, line: 257, baseType: !137)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !917, file: !898, line: 530, baseType: !941, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!103, !923, !944}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !898, line: 229, baseType: !137)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !917, file: !898, line: 532, baseType: !947, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!103, !923, !950, !945}
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !898, line: 216, baseType: !137)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !917, file: !898, line: 535, baseType: !952, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!103, !923, !950}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !917, file: !898, line: 537, baseType: !952, size: 32, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !917, file: !898, line: 539, baseType: !952, size: 32, offset: 160)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !917, file: !898, line: 541, baseType: !958, size: 32, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DISubroutineType(types: !960)
!960 = !{!103, !923, !938, !897, !903}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !917, file: !898, line: 544, baseType: !962, size: 32, offset: 224)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!103, !923, !965, !211}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !898, line: 478, size: 96, elements: !967)
!967 = !{!968, !975, !980}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !966, file: !898, line: 482, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !970, line: 33, baseType: !971)
!970 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !970, line: 29, size: 32, elements: !972)
!972 = !{!973}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !971, file: !970, line: 30, baseType: !974, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !966, file: !898, line: 485, baseType: !976, size: 32, offset: 32)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !898, line: 464, baseType: !977)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !923, !965, !950}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !966, file: !898, line: 493, baseType: !950, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !917, file: !898, line: 547, baseType: !982, size: 32, offset: 256)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!137, !923}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !898, line: 428, size: 32, elements: !988)
!988 = !{!989}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !987, file: !898, line: 434, baseType: !950, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !898, line: 441, size: 32, elements: !993)
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !992, file: !898, line: 447, baseType: !950, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 396, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 385, size: 320, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !998, file: !172, line: 387, baseType: !176, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !998, file: !172, line: 388, baseType: !176, size: 32, offset: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !998, file: !172, line: 389, baseType: !176, size: 32, offset: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !998, file: !172, line: 390, baseType: !176, size: 32, offset: 96)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !998, file: !172, line: 391, baseType: !176, size: 32, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !998, file: !172, line: 392, baseType: !176, size: 32, offset: 160)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !998, file: !172, line: 393, baseType: !176, size: 32, offset: 192)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !998, file: !172, line: 394, baseType: !176, size: 32, offset: 224)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !998, file: !172, line: 395, baseType: !1009, size: 64, offset: 256)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 64, elements: !294)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !172, line: 411, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 402, size: 320, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1018, !1019, !1020, !1021}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1012, file: !172, line: 404, baseType: !176, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1012, file: !172, line: 405, baseType: !176, size: 32, offset: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1012, file: !172, line: 406, baseType: !1017, size: 128, offset: 64)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 128, elements: !574)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1012, file: !172, line: 407, baseType: !137, size: 32, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1012, file: !172, line: 408, baseType: !176, size: 32, offset: 224)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1012, file: !172, line: 409, baseType: !176, size: 32, offset: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1012, file: !172, line: 410, baseType: !176, size: 32, offset: 288)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !702, line: 100, size: 224, elements: !1027)
!1027 = !{!1028, !1033, !1034, !1043, !1048, !1053, !1058}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1026, file: !702, line: 101, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !702, line: 76, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!103, !923, !794}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1026, file: !702, line: 102, baseType: !1029, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1026, file: !702, line: 103, baseType: !1035, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !702, line: 83, baseType: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!103, !923, !794, !1039, !102}
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !702, line: 72, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !923, !794, !102}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1026, file: !702, line: 104, baseType: !1044, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !702, line: 79, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!103, !923, !794, !149}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1026, file: !702, line: 105, baseType: !1049, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !702, line: 88, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!701, !923, !794}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1026, file: !702, line: 106, baseType: !1054, size: 32, offset: 160)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !702, line: 92, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!103, !923, !794, !820}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1026, file: !702, line: 107, baseType: !1059, size: 32, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !702, line: 96, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!103, !923, !794, !102}
!1063 = !{!1064, !1070, !1072, !1082, !1084, !1086, !1088, !1093, !1095, !1097, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !1130, !1144, !1146, !1148, !1150, !1152, !1154, !1156, !1158, !1160, !1162, !1164, !1166, !1168, !1170, !1172, !892, !1174, !1176, !1189, !1191, !1193, !1195, !1197, !1199}
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !894, file: !1066, line: 762, type: !1067, isLocal: false, isDefinition: true, align: 16)
!1066 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 112, elements: !1068)
!1068 = !{!1069}
!1069 = !DISubrange(count: 7)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !894, file: !1066, line: 762, type: !924, isLocal: false, isDefinition: true, align: 32)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !894, file: !1066, line: 762, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1076)
!1076 = !{!1077, !1081}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1075, file: !187, line: 60, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!103, !923}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1075, file: !187, line: 65, baseType: !923, size: 32, offset: 32)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !894, file: !1066, line: 766, type: !1067, isLocal: false, isDefinition: true, align: 16)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !894, file: !1066, line: 766, type: !924, isLocal: false, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !894, file: !1066, line: 766, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !894, file: !1066, line: 770, type: !1090, isLocal: false, isDefinition: true, align: 16)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 96, elements: !1091)
!1091 = !{!1092}
!1092 = !DISubrange(count: 6)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !894, file: !1066, line: 770, type: !924, isLocal: false, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !894, file: !1066, line: 770, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !894, file: !1066, line: 774, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 80, elements: !1100)
!1100 = !{!1101}
!1101 = !DISubrange(count: 5)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !894, file: !1066, line: 774, type: !924, isLocal: false, isDefinition: true, align: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !894, file: !1066, line: 774, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !894, file: !1066, line: 778, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !894, file: !1066, line: 778, type: !924, isLocal: false, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !894, file: !1066, line: 778, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !894, file: !1066, line: 782, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !894, file: !1066, line: 782, type: !924, isLocal: false, isDefinition: true, align: 32)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !894, file: !1066, line: 782, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !894, file: !1066, line: 786, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !894, file: !1066, line: 786, type: !924, isLocal: false, isDefinition: true, align: 32)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !894, file: !1066, line: 786, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !894, file: !1066, line: 790, type: !1099, isLocal: false, isDefinition: true, align: 16)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !894, file: !1066, line: 790, type: !924, isLocal: false, isDefinition: true, align: 32)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !894, file: !1066, line: 790, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !894, file: !1066, line: 762, type: !1132, isLocal: true, isDefinition: true)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1133, line: 237, size: 128, elements: !1134)
!1133 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1134 = !{!1135, !1136, !1137}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1132, file: !1133, line: 239, baseType: !992, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1132, file: !1133, line: 241, baseType: !923, size: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1132, file: !1133, line: 243, baseType: !1138, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !970, line: 40, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !970, line: 35, size: 64, elements: !1140)
!1140 = !{!1141, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1139, file: !970, line: 36, baseType: !1142, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1139, file: !970, line: 37, baseType: !1142, size: 32, offset: 32)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !894, file: !1066, line: 762, type: !932, isLocal: true, isDefinition: true, align: 8)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !894, file: !1066, line: 766, type: !1132, isLocal: true, isDefinition: true)
!1148 = !DIGlobalVariableExpression(var: !1149, expr: !DIExpression())
!1149 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !894, file: !1066, line: 766, type: !932, isLocal: true, isDefinition: true, align: 8)
!1150 = !DIGlobalVariableExpression(var: !1151, expr: !DIExpression())
!1151 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !894, file: !1066, line: 770, type: !1132, isLocal: true, isDefinition: true)
!1152 = !DIGlobalVariableExpression(var: !1153, expr: !DIExpression())
!1153 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !894, file: !1066, line: 770, type: !932, isLocal: true, isDefinition: true, align: 8)
!1154 = !DIGlobalVariableExpression(var: !1155, expr: !DIExpression())
!1155 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !894, file: !1066, line: 774, type: !1132, isLocal: true, isDefinition: true)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !894, file: !1066, line: 774, type: !932, isLocal: true, isDefinition: true, align: 8)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !894, file: !1066, line: 778, type: !1132, isLocal: true, isDefinition: true)
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !894, file: !1066, line: 778, type: !932, isLocal: true, isDefinition: true, align: 8)
!1162 = !DIGlobalVariableExpression(var: !1163, expr: !DIExpression())
!1163 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !894, file: !1066, line: 782, type: !1132, isLocal: true, isDefinition: true)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !894, file: !1066, line: 782, type: !932, isLocal: true, isDefinition: true, align: 8)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !894, file: !1066, line: 786, type: !1132, isLocal: true, isDefinition: true)
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !894, file: !1066, line: 786, type: !932, isLocal: true, isDefinition: true, align: 8)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !894, file: !1066, line: 790, type: !1132, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !894, file: !1066, line: 790, type: !932, isLocal: true, isDefinition: true, align: 8)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !894, file: !1066, line: 656, type: !916, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !894, file: !1066, line: 766, type: !1178, isLocal: true, isDefinition: true)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1133, line: 224, size: 160, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1179, file: !1133, line: 226, baseType: !987, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1179, file: !1133, line: 228, baseType: !149, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1179, file: !1133, line: 230, baseType: !103, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1179, file: !1133, line: 231, baseType: !1185, size: 64, offset: 96)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !747, line: 343, size: 64, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1185, file: !747, line: 344, baseType: !137, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1185, file: !747, line: 345, baseType: !137, size: 32, offset: 32)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !894, file: !1066, line: 770, type: !1178, isLocal: true, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !894, file: !1066, line: 774, type: !1178, isLocal: true, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !894, file: !1066, line: 778, type: !1178, isLocal: true, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !894, file: !1066, line: 782, type: !1178, isLocal: true, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !894, file: !1066, line: 786, type: !1178, isLocal: true, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !894, file: !1066, line: 790, type: !1178, isLocal: true, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1203, file: !1342, line: 1914, type: !1401, isLocal: true, isDefinition: true)
!1203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1205, retainedTypes: !1238, globals: !1339, splitDebugInlining: false, nameTableKind: None)
!1204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1205 = !{!30, !1206, !1213, !1220, !1227, !1233, !701}
!1206 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !834, line: 47, baseType: !32, size: 32, elements: !1207)
!1207 = !{!1208, !1209, !1210, !1211, !1212}
!1208 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1209 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1210 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1211 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1212 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !834, line: 75, baseType: !32, size: 32, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219}
!1215 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1216 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1217 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1218 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1219 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !834, line: 92, baseType: !32, size: 32, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1226}
!1222 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1223 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1224 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1225 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1226 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1227 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !834, line: 84, baseType: !32, size: 32, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232}
!1229 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1230 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1231 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1232 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1233 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !834, line: 107, baseType: !32, size: 32, elements: !1234)
!1234 = !{!1235, !1236, !1237}
!1235 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1236 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1237 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1238 = !{!102, !103, !1239, !209, !208, !1288, !137, !794, !1299, !151, !163, !1338}
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !834, line: 336, size: 160, elements: !1242)
!1242 = !{!1243, !1262, !1266, !1270, !1283}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1241, file: !834, line: 365, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1247, !855}
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1260, !1261}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1249, file: !196, line: 380, baseType: !199, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1249, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1249, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1249, file: !196, line: 386, baseType: !1255, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1256, file: !196, line: 359, baseType: !208, size: 8)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1256, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1249, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1249, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1241, file: !834, line: 366, baseType: !1263, size: 32, offset: 32)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !1247, !209}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1241, file: !834, line: 374, baseType: !1267, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!103, !1247}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1241, file: !834, line: 377, baseType: !1271, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!103, !1247, !1274}
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !834, line: 122, size: 64, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1282}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1276, file: !834, line: 123, baseType: !137, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1276, file: !834, line: 124, baseType: !208, size: 8, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1276, file: !834, line: 125, baseType: !208, size: 8, offset: 40)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1276, file: !834, line: 126, baseType: !208, size: 8, offset: 48)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1276, file: !834, line: 127, baseType: !208, size: 8, offset: 56)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1241, file: !834, line: 379, baseType: !1284, size: 32, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!103, !1247, !1287}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !172, line: 648, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 639, size: 224, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295, !1296, !1297, !1298}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1290, file: !172, line: 641, baseType: !176, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1290, file: !172, line: 642, baseType: !176, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1290, file: !172, line: 643, baseType: !176, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1290, file: !172, line: 644, baseType: !176, size: 32, offset: 96)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1290, file: !172, line: 645, baseType: !176, size: 32, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1290, file: !172, line: 646, baseType: !176, size: 32, offset: 160)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1290, file: !172, line: 647, baseType: !176, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !702, line: 100, size: 224, elements: !1302)
!1302 = !{!1303, !1308, !1309, !1318, !1323, !1328, !1333}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1301, file: !702, line: 101, baseType: !1304, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !702, line: 76, baseType: !1305)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!103, !1247, !794}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1301, file: !702, line: 102, baseType: !1304, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1301, file: !702, line: 103, baseType: !1310, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !702, line: 83, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1247, !794, !1314, !102}
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !702, line: 72, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1247, !794, !102}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1301, file: !702, line: 104, baseType: !1319, size: 32, offset: 96)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !702, line: 79, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 32)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!103, !1247, !794, !149}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1301, file: !702, line: 105, baseType: !1324, size: 32, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !702, line: 88, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DISubroutineType(types: !1327)
!1327 = !{!701, !1247, !794}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1301, file: !702, line: 106, baseType: !1329, size: 32, offset: 160)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !702, line: 92, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!103, !1247, !794, !820}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1301, file: !702, line: 107, baseType: !1334, size: 32, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !702, line: 96, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!103, !1247, !794, !102}
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!1339 = !{!1340, !1344, !1346, !1353, !1201, !1355, !1363, !1386, !1389, !1392, !1394}
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1343, isLocal: false, isDefinition: true, align: 16)
!1342 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !159)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1248, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1350)
!1350 = !{!1351, !1352}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1349, file: !187, line: 60, baseType: !1267, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1349, file: !187, line: 65, baseType: !1247, size: 32, offset: 32)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1256, isLocal: true, isDefinition: true, align: 8)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1203, file: !1342, line: 1914, type: !1357, isLocal: true, isDefinition: true)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1358, size: 64, elements: !391)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !747, line: 343, size: 64, elements: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1359, file: !747, line: 344, baseType: !137, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1359, file: !747, line: 345, baseType: !137, size: 32, offset: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1365, isLocal: true, isDefinition: true)
!1365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1367, line: 60, size: 64, elements: !1368)
!1367 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1368 = !{!1369, !1385}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1366, file: !1367, line: 69, baseType: !1370, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1367, line: 50, size: 64, elements: !1373)
!1373 = !{!1374, !1383, !1384}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1372, file: !1367, line: 52, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1377)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1378, line: 37, baseType: !1379)
!1378 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1378, line: 32, size: 64, elements: !1380)
!1380 = !{!1381, !1382}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1379, file: !1378, line: 34, baseType: !137, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1379, file: !1378, line: 36, baseType: !137, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1372, file: !1367, line: 54, baseType: !208, size: 8, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1372, file: !1367, line: 56, baseType: !208, size: 8, offset: 40)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1366, file: !1367, line: 71, baseType: !208, size: 8, offset: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1388, isLocal: true, isDefinition: true)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 64, elements: !391)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1203, file: !1342, line: 1914, type: !1391, isLocal: true, isDefinition: true)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1376, size: 128, elements: !294)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1203, file: !1342, line: 1539, type: !1240, isLocal: true, isDefinition: true)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1203, file: !1342, line: 1914, type: !1396, isLocal: true, isDefinition: true)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1397, line: 74, size: 64, elements: !1398)
!1397 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1398 = !{!1399, !1400}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1396, file: !1397, line: 76, baseType: !137, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1396, file: !1397, line: 78, baseType: !1247, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1397, line: 22, size: 224, elements: !1403)
!1403 = !{!1404, !1405, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1402, file: !1397, line: 24, baseType: !1288, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1402, file: !1397, line: 26, baseType: !1406, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1402, file: !1397, line: 28, baseType: !120, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1402, file: !1397, line: 30, baseType: !211, size: 8, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1402, file: !1397, line: 32, baseType: !103, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1402, file: !1397, line: 34, baseType: !211, size: 8, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1402, file: !1397, line: 36, baseType: !211, size: 8, offset: 168)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1402, file: !1397, line: 38, baseType: !211, size: 8, offset: 176)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1402, file: !1397, line: 40, baseType: !211, size: 8, offset: 184)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1402, file: !1397, line: 41, baseType: !1415, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1418, file: !1496, line: 65, type: !176, isLocal: true, isDefinition: true)
!1418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1420, retainedTypes: !1421, globals: !1493, splitDebugInlining: false, nameTableKind: None)
!1419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1420 = !{!471}
!1421 = !{!1422, !1424, !632, !208, !137, !1432, !1463}
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1423, line: 46, baseType: !330)
!1423 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !1426)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1431}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1426, file: !402, line: 766, baseType: !176, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1426, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1426, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1426, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1435)
!1435 = !{!1436, !1438, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1453, !1458, !1462}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1434, file: !402, line: 413, baseType: !1437, size: 256)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1434, file: !402, line: 414, baseType: !1439, size: 768, offset: 256)
!1439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !1440)
!1440 = !{!1441}
!1441 = !DISubrange(count: 24)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1434, file: !402, line: 415, baseType: !1437, size: 256, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1434, file: !402, line: 416, baseType: !1439, size: 768, offset: 1280)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1434, file: !402, line: 417, baseType: !1437, size: 256, offset: 2048)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1434, file: !402, line: 418, baseType: !1439, size: 768, offset: 2304)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1434, file: !402, line: 419, baseType: !1437, size: 256, offset: 3072)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1434, file: !402, line: 420, baseType: !1439, size: 768, offset: 3328)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1434, file: !402, line: 421, baseType: !1437, size: 256, offset: 4096)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1434, file: !402, line: 422, baseType: !1450, size: 1792, offset: 4352)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !1451)
!1451 = !{!1452}
!1452 = !DISubrange(count: 56)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1434, file: !402, line: 423, baseType: !1454, size: 1920, offset: 6144)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1455, size: 1920, elements: !1456)
!1455 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!1456 = !{!1457}
!1457 = !DISubrange(count: 240)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1434, file: !402, line: 424, baseType: !1459, size: 20608, offset: 8064)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !1460)
!1460 = !{!1461}
!1461 = !DISubrange(count: 644)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1434, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1471, !1472, !1473, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1484, !1485, !1486, !1488, !1490, !1492}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1465, file: !402, line: 447, baseType: !406, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1465, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1465, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1465, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1465, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1465, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1465, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1455, size: 96, elements: !668)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1465, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1465, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1465, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1465, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1465, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1465, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1465, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1465, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 64, elements: !294)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1465, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1465, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1465, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!1487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 128, elements: !574)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1465, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!1489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 160, elements: !1100)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1465, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!1491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !1100)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1465, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1493 = !{!1494, !1520, !1523, !1525, !1527, !1416}
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1418, file: !1496, line: 285, type: !1497, isLocal: true, isDefinition: true, align: 32)
!1496 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1499)
!1499 = !{!1500, !1519}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1498, file: !187, line: 60, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!103, !1504}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1507)
!1507 = !{!1508, !1509, !1510, !1511, !1517, !1518}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1506, file: !196, line: 380, baseType: !199, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1506, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1506, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1506, file: !196, line: 386, baseType: !1512, size: 32, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1513, file: !196, line: 359, baseType: !208, size: 8)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1513, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1506, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1506, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1498, file: !187, line: 65, baseType: !1504, size: 32, offset: 32)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "lock", scope: !1418, file: !1496, line: 34, type: !1522, isLocal: true, isDefinition: true)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "last_load", scope: !1418, file: !1496, line: 36, type: !137, isLocal: true, isDefinition: true)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1418, file: !1496, line: 48, type: !137, isLocal: true, isDefinition: true)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1418, file: !1496, line: 54, type: !137, isLocal: true, isDefinition: true)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1531, file: !1613, line: 22, type: !1615, isLocal: true, isDefinition: true)
!1531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1533, retainedTypes: !1534, globals: !1610, splitDebugInlining: false, nameTableKind: None)
!1532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1533 = !{!897, !903}
!1534 = !{!1535, !1599, !1604, !950, !903, !897, !1609, !102}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !898, line: 523, size: 288, elements: !1538)
!1538 = !{!1539, !1558, !1562, !1566, !1570, !1571, !1572, !1576, !1595}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1537, file: !898, line: 524, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!103, !1543, !938, !939}
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1556, !1557}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1545, file: !196, line: 380, baseType: !199, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1545, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1545, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1545, file: !196, line: 386, baseType: !1551, size: 32, offset: 96)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1552, file: !196, line: 359, baseType: !208, size: 8)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1552, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1545, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1545, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1537, file: !898, line: 530, baseType: !1559, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!103, !1543, !944}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1537, file: !898, line: 532, baseType: !1563, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!103, !1543, !950, !945}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1537, file: !898, line: 535, baseType: !1567, size: 32, offset: 96)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!103, !1543, !950}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1537, file: !898, line: 537, baseType: !1567, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1537, file: !898, line: 539, baseType: !1567, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1537, file: !898, line: 541, baseType: !1573, size: 32, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!103, !1543, !938, !897, !903}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1537, file: !898, line: 544, baseType: !1577, size: 32, offset: 224)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!103, !1543, !1580, !211}
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !898, line: 478, size: 96, elements: !1582)
!1582 = !{!1583, !1589, !1594}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1581, file: !898, line: 482, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !970, line: 33, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !970, line: 29, size: 32, elements: !1586)
!1586 = !{!1587}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1585, file: !970, line: 30, baseType: !1588, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1581, file: !898, line: 485, baseType: !1590, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !898, line: 464, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{null, !1543, !1580, !950}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1581, file: !898, line: 493, baseType: !950, size: 32, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1537, file: !898, line: 547, baseType: !1596, size: 32, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!137, !1543}
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1601)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !898, line: 428, size: 32, elements: !1602)
!1602 = !{!1603}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1601, file: !898, line: 434, baseType: !950, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !898, line: 441, size: 32, elements: !1607)
!1607 = !{!1608}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1606, file: !898, line: 447, baseType: !950, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1610 = !{!1611, !1529}
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1612 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1531, file: !1613, line: 37, type: !1614, isLocal: true, isDefinition: true)
!1613 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 352, elements: !1617)
!1616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1617 = !{!1618}
!1618 = !DISubrange(count: 11)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1621, file: !1662, line: 139, type: !1669, isLocal: false, isDefinition: true)
!1621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1623, globals: !1659, splitDebugInlining: false, nameTableKind: None)
!1622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1623 = !{!1624}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 510, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 477, size: 1216, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1626, file: !172, line: 479, baseType: !176, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1626, file: !172, line: 480, baseType: !176, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1626, file: !172, line: 481, baseType: !176, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1626, file: !172, line: 482, baseType: !176, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1626, file: !172, line: 483, baseType: !176, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1626, file: !172, line: 484, baseType: !176, size: 32, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1626, file: !172, line: 485, baseType: !720, size: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1626, file: !172, line: 486, baseType: !176, size: 32, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1626, file: !172, line: 487, baseType: !176, size: 32, offset: 288)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1626, file: !172, line: 488, baseType: !720, size: 64, offset: 320)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1626, file: !172, line: 489, baseType: !176, size: 32, offset: 384)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1626, file: !172, line: 490, baseType: !176, size: 32, offset: 416)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1626, file: !172, line: 491, baseType: !720, size: 64, offset: 448)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1626, file: !172, line: 492, baseType: !176, size: 32, offset: 512)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1626, file: !172, line: 493, baseType: !176, size: 32, offset: 544)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1626, file: !172, line: 494, baseType: !720, size: 64, offset: 576)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1626, file: !172, line: 495, baseType: !176, size: 32, offset: 640)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1626, file: !172, line: 496, baseType: !176, size: 32, offset: 672)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1626, file: !172, line: 497, baseType: !720, size: 64, offset: 704)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1626, file: !172, line: 498, baseType: !176, size: 32, offset: 768)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1626, file: !172, line: 499, baseType: !176, size: 32, offset: 800)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1626, file: !172, line: 500, baseType: !720, size: 64, offset: 832)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1626, file: !172, line: 501, baseType: !176, size: 32, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1626, file: !172, line: 502, baseType: !176, size: 32, offset: 928)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1626, file: !172, line: 503, baseType: !720, size: 64, offset: 960)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1626, file: !172, line: 504, baseType: !176, size: 32, offset: 1024)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1626, file: !172, line: 505, baseType: !176, size: 32, offset: 1056)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1626, file: !172, line: 506, baseType: !137, size: 32, offset: 1088)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1626, file: !172, line: 507, baseType: !176, size: 32, offset: 1120)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1626, file: !172, line: 508, baseType: !176, size: 32, offset: 1152)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1626, file: !172, line: 509, baseType: !176, size: 32, offset: 1184)
!1659 = !{!1660, !1663, !1619}
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1621, file: !1662, line: 137, type: !137, isLocal: false, isDefinition: true)
!1662 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1621, file: !1662, line: 138, type: !1665, isLocal: false, isDefinition: true)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 128, elements: !1667)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!1667 = !{!1668}
!1668 = !DISubrange(count: 16)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 64, elements: !159)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1672, file: !1675, line: 23, type: !1676, isLocal: false, isDefinition: true)
!1672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1674, splitDebugInlining: false, nameTableKind: None)
!1673 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1674 = !{!1670}
!1675 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1679, file: !1683, line: 86, type: !1931, isLocal: false, isDefinition: true, align: 512)
!1679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1680, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1681, retainedTypes: !1690, globals: !1764, splitDebugInlining: false, nameTableKind: None)
!1680 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!1681 = !{!1682, !30, !471}
!1682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1683, line: 63, baseType: !32, size: 32, elements: !1684)
!1683 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1684 = !{!1685, !1686, !1687, !1688, !1689}
!1685 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1686 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1687 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1688 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1689 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1690 = !{!120, !102, !103, !1691, !1022, !137, !1722, !632, !208, !1747}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1694, line: 51, size: 64, elements: !1695)
!1694 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1695 = !{!1696, !1717}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1693, file: !1694, line: 52, baseType: !1697, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1694, line: 38, baseType: !1698)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 32)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!103, !1701, !1716, !151}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1714, !1715}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !196, line: 380, baseType: !199, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1703, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1703, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1703, file: !196, line: 386, baseType: !1709, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !1711)
!1711 = !{!1712, !1713}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1710, file: !196, line: 359, baseType: !208, size: 8)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1710, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1703, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1703, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1693, file: !1694, line: 53, baseType: !1718, size: 32, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1694, line: 47, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!103, !1701, !1716, !151, !137}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1724, file: !402, line: 447, baseType: !406, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1724, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1724, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1724, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1724, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1724, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1724, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1724, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1724, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1724, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1724, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1724, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1724, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1724, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1724, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1724, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1724, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1724, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1724, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1724, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1724, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1749, file: !402, line: 413, baseType: !1437, size: 256)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1749, file: !402, line: 414, baseType: !1439, size: 768, offset: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1749, file: !402, line: 415, baseType: !1437, size: 256, offset: 1024)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1749, file: !402, line: 416, baseType: !1439, size: 768, offset: 1280)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1749, file: !402, line: 417, baseType: !1437, size: 256, offset: 2048)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1749, file: !402, line: 418, baseType: !1439, size: 768, offset: 2304)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1749, file: !402, line: 419, baseType: !1437, size: 256, offset: 3072)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1749, file: !402, line: 420, baseType: !1439, size: 768, offset: 3328)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1749, file: !402, line: 421, baseType: !1437, size: 256, offset: 4096)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1749, file: !402, line: 422, baseType: !1450, size: 1792, offset: 4352)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1749, file: !402, line: 423, baseType: !1454, size: 1920, offset: 6144)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1749, file: !402, line: 424, baseType: !1459, size: 20608, offset: 8064)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1749, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!1764 = !{!1765, !1887, !1896, !1898, !1677, !1901, !1903, !1908}
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "_kernel", scope: !1679, file: !1683, line: 40, type: !1767, isLocal: false, isDefinition: true)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !299, line: 158, size: 288, elements: !1768)
!1768 = !{!1769, !1882}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1767, file: !299, line: 159, baseType: !1770, size: 192)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 192, elements: !391)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !299, line: 100, size: 192, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1876, !1877, !1878, !1879}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1771, file: !299, line: 102, baseType: !137, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1771, file: !299, line: 105, baseType: !1022, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1771, file: !299, line: 108, baseType: !1776, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1778)
!1778 = !{!1779, !1837, !1849, !1850, !1851, !1852, !1858, !1871}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1777, file: !263, line: 247, baseType: !1780, size: 384)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1781)
!1781 = !{!1782, !1806, !1813, !1814, !1815, !1824, !1825, !1826}
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !263, line: 60, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1780, file: !263, line: 60, size: 64, elements: !1784)
!1784 = !{!1785, !1800}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1783, file: !263, line: 61, baseType: !1786, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1788)
!1788 = !{!1789, !1795}
!1789 = !DIDerivedType(tag: DW_TAG_member, scope: !1787, file: !273, line: 38, baseType: !1790, size: 32)
!1790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1787, file: !273, line: 38, size: 32, elements: !1791)
!1791 = !{!1792, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1790, file: !273, line: 39, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1790, file: !273, line: 40, baseType: !1793, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, scope: !1787, file: !273, line: 42, baseType: !1796, size: 32, offset: 32)
!1796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1787, file: !273, line: 42, size: 32, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1796, file: !273, line: 43, baseType: !1793, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1796, file: !273, line: 44, baseType: !1793, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1783, file: !263, line: 62, baseType: !1801, size: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1802)
!1802 = !{!1803}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1801, file: !289, line: 50, baseType: !1804, size: 64)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 64, elements: !294)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1780, file: !263, line: 68, baseType: !1807, size: 32, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1810)
!1810 = !{!1811}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1809, file: !299, line: 232, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1787)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1780, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1780, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1815 = !DIDerivedType(tag: DW_TAG_member, scope: !1780, file: !263, line: 90, baseType: !1816, size: 16, offset: 112)
!1816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1780, file: !263, line: 90, size: 16, elements: !1817)
!1817 = !{!1818, !1823}
!1818 = !DIDerivedType(tag: DW_TAG_member, scope: !1816, file: !263, line: 91, baseType: !1819, size: 16)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1816, file: !263, line: 91, size: 16, elements: !1820)
!1820 = !{!1821, !1822}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1819, file: !263, line: 96, baseType: !313, size: 8)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1819, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1816, file: !263, line: 100, baseType: !151, size: 16)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1780, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1780, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1780, file: !263, line: 131, baseType: !1827, size: 192, offset: 192)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1828)
!1828 = !{!1829, !1830, !1836}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1827, file: !299, line: 245, baseType: !1786, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1827, file: !299, line: 246, baseType: !1831, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1832)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 32)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{null, !1835}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1827, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1777, file: !263, line: 250, baseType: !1838, size: 288, offset: 384)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !1839)
!1839 = !{!1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1838, file: !334, line: 26, baseType: !137, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1838, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1838, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1838, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1838, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1838, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1838, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1838, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1838, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1777, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1777, file: !263, line: 256, baseType: !1808, size: 64, offset: 704)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1777, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1777, file: !263, line: 300, baseType: !1853, size: 96, offset: 800)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !1854)
!1854 = !{!1855, !1856, !1857}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1853, file: !263, line: 153, baseType: !22, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1853, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1853, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1777, file: !263, line: 325, baseType: !1859, size: 32, offset: 896)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !1861)
!1861 = !{!1862, !1868, !1869}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1860, file: !357, line: 5074, baseType: !1863, size: 96)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1864)
!1864 = !{!1865, !1866, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1863, file: !113, line: 57, baseType: !116, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1863, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1863, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1860, file: !357, line: 5075, baseType: !1808, size: 64, offset: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1860, file: !357, line: 5076, baseType: !1870, offset: 160)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1777, file: !263, line: 343, baseType: !1872, size: 64, offset: 928)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1872, file: !334, line: 63, baseType: !137, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1872, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1771, file: !299, line: 111, baseType: !1776, size: 32, offset: 96)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1771, file: !299, line: 124, baseType: !103, size: 32, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1771, file: !299, line: 127, baseType: !208, size: 8, offset: 160)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1771, file: !299, line: 153, baseType: !1880, offset: 168)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1881, line: 33, elements: !162)
!1881 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1767, file: !299, line: 170, baseType: !1883, size: 96, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1883, file: !299, line: 86, baseType: !1776, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1883, file: !299, line: 90, baseType: !1812, size: 64, offset: 32)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1679, file: !1683, line: 43, type: !1889, isLocal: false, isDefinition: true, align: 512)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 8704, elements: !1894)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1891, line: 47, size: 8, elements: !1892)
!1891 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1890, file: !1891, line: 48, baseType: !109, size: 8)
!1894 = !{!1895}
!1895 = !DISubrange(count: 1088)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1679, file: !1683, line: 44, type: !1777, isLocal: false, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1679, file: !1683, line: 48, type: !1900, isLocal: false, isDefinition: true)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1777, size: 1024, elements: !391)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1679, file: !1683, line: 217, type: !211, isLocal: false, isDefinition: true)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1679, file: !1683, line: 50, type: !1905, isLocal: true, isDefinition: true, align: 512)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 3072, elements: !1906)
!1906 = !{!392, !1907}
!1907 = !DISubrange(count: 384)
!1908 = !DIGlobalVariableExpression(var: !1909, expr: !DIExpression())
!1909 = distinct !DIGlobalVariable(name: "levels", scope: !1910, file: !1683, line: 232, type: !1930, isLocal: true, isDefinition: true)
!1910 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1683, file: !1683, line: 230, type: !1911, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !1913)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{null, !1682}
!1913 = !{!1914, !1915, !1925, !1929}
!1914 = !DILocalVariable(name: "level", arg: 1, scope: !1910, file: !1683, line: 230, type: !1682)
!1915 = !DILocalVariable(name: "entry", scope: !1910, file: !1683, line: 244, type: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !187, line: 51, size: 64, elements: !1919)
!1919 = !{!1920, !1924}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1918, file: !187, line: 60, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!103, !1701}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1918, file: !187, line: 65, baseType: !1701, size: 32, offset: 32)
!1925 = !DILocalVariable(name: "dev", scope: !1926, file: !1683, line: 247, type: !1701)
!1926 = distinct !DILexicalBlock(scope: !1927, file: !1683, line: 246, column: 64)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !1683, line: 246, column: 2)
!1928 = distinct !DILexicalBlock(scope: !1910, file: !1683, line: 246, column: 2)
!1929 = !DILocalVariable(name: "rc", scope: !1926, file: !1683, line: 248, type: !103)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 192, elements: !1091)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1890, size: 16896, elements: !1932)
!1932 = !{!392, !1933}
!1933 = !DISubrange(count: 2112)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "states_str", scope: !1936, file: !1937, line: 276, type: !2058, isLocal: true, isDefinition: true)
!1936 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1937, file: !1937, line: 271, type: !1938, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !2049)
!1937 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!199, !1940, !1022, !120}
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !1943)
!1943 = !{!1944, !2002, !2014, !2015, !2016, !2017, !2023, !2036}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1942, file: !263, line: 247, baseType: !1945, size: 384)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !1946)
!1946 = !{!1947, !1971, !1978, !1979, !1980, !1989, !1990, !1991}
!1947 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !263, line: 60, baseType: !1948, size: 64)
!1948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !263, line: 60, size: 64, elements: !1949)
!1949 = !{!1950, !1965}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1948, file: !263, line: 61, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !1953)
!1953 = !{!1954, !1960}
!1954 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !273, line: 38, baseType: !1955, size: 32)
!1955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !273, line: 38, size: 32, elements: !1956)
!1956 = !{!1957, !1959}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1955, file: !273, line: 39, baseType: !1958, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1955, file: !273, line: 40, baseType: !1958, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !273, line: 42, baseType: !1961, size: 32, offset: 32)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !273, line: 42, size: 32, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1961, file: !273, line: 43, baseType: !1958, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1961, file: !273, line: 44, baseType: !1958, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1948, file: !263, line: 62, baseType: !1966, size: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1966, file: !289, line: 50, baseType: !1969, size: 64)
!1969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1970, size: 64, elements: !294)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1945, file: !263, line: 68, baseType: !1972, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !1975)
!1975 = !{!1976}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1974, file: !299, line: 232, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !1952)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1945, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1945, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !263, line: 90, baseType: !1981, size: 16, offset: 112)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !263, line: 90, size: 16, elements: !1982)
!1982 = !{!1983, !1988}
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !1981, file: !263, line: 91, baseType: !1984, size: 16)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !263, line: 91, size: 16, elements: !1985)
!1985 = !{!1986, !1987}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1984, file: !263, line: 96, baseType: !313, size: 8)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1984, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1981, file: !263, line: 100, baseType: !151, size: 16)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1945, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1945, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1945, file: !263, line: 131, baseType: !1992, size: 192, offset: 192)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !1993)
!1993 = !{!1994, !1995, !2001}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1992, file: !299, line: 245, baseType: !1951, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1992, file: !299, line: 246, baseType: !1996, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !2000}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1992, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1942, file: !263, line: 250, baseType: !2003, size: 288, offset: 384)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2003, file: !334, line: 26, baseType: !137, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2003, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2003, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2003, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2003, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2003, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2003, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2003, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2003, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1942, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1942, file: !263, line: 256, baseType: !1973, size: 64, offset: 704)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1942, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1942, file: !263, line: 300, baseType: !2018, size: 96, offset: 800)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2019)
!2019 = !{!2020, !2021, !2022}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2018, file: !263, line: 153, baseType: !22, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2018, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2018, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1942, file: !263, line: 325, baseType: !2024, size: 32, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2026)
!2026 = !{!2027, !2033, !2034}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2025, file: !357, line: 5074, baseType: !2028, size: 96)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2029)
!2029 = !{!2030, !2031, !2032}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2028, file: !113, line: 57, baseType: !116, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2028, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2028, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2025, file: !357, line: 5075, baseType: !1973, size: 64, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2025, file: !357, line: 5076, baseType: !2035, offset: 160)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1942, file: !263, line: 343, baseType: !2037, size: 64, offset: 928)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2038)
!2038 = !{!2039, !2040}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2037, file: !334, line: 63, baseType: !137, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2037, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2043, globals: !2045, splitDebugInlining: false, nameTableKind: None)
!2042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2043 = !{!102, !199, !1422, !208, !103, !2044, !24, !120, !1022, !22, !137, !163}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!2045 = !{!1934, !2046}
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "states_sz", scope: !1936, file: !1937, line: 279, type: !2048, isLocal: true, isDefinition: true)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1614, size: 256, elements: !159)
!2049 = !{!2050, !2051, !2052, !2053, !2054, !2055, !2056}
!2050 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1936, file: !1937, line: 271, type: !1940)
!2051 = !DILocalVariable(name: "buf", arg: 2, scope: !1936, file: !1937, line: 271, type: !1022)
!2052 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1936, file: !1937, line: 271, type: !120)
!2053 = !DILocalVariable(name: "off", scope: !1936, file: !1937, line: 273, type: !120)
!2054 = !DILocalVariable(name: "bit", scope: !1936, file: !1937, line: 274, type: !208)
!2055 = !DILocalVariable(name: "thread_state", scope: !1936, file: !1937, line: 275, type: !208)
!2056 = !DILocalVariable(name: "index", scope: !2057, file: !1937, line: 293, type: !208)
!2057 = distinct !DILexicalBlock(scope: !1936, file: !1937, line: 293, column: 2)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 256, elements: !159)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2061, file: !2169, line: 56, type: !2158, isLocal: false, isDefinition: true)
!2061 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2062, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2063, globals: !2166, splitDebugInlining: false, nameTableKind: None)
!2062 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2063 = !{!2064, !1022, !102, !2164, !1716, !1422, !632, !103, !137, !163, !2165}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !2066)
!2066 = !{!2067, !2125, !2137, !2138, !2139, !2140, !2146, !2159}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2065, file: !263, line: 247, baseType: !2068, size: 384)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !2069)
!2069 = !{!2070, !2094, !2101, !2102, !2103, !2112, !2113, !2114}
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !263, line: 60, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !263, line: 60, size: 64, elements: !2072)
!2072 = !{!2073, !2088}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2071, file: !263, line: 61, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2075)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2076)
!2076 = !{!2077, !2083}
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !273, line: 38, baseType: !2078, size: 32)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !273, line: 38, size: 32, elements: !2079)
!2079 = !{!2080, !2082}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2078, file: !273, line: 39, baseType: !2081, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2078, file: !273, line: 40, baseType: !2081, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2075, file: !273, line: 42, baseType: !2084, size: 32, offset: 32)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2075, file: !273, line: 42, size: 32, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2084, file: !273, line: 43, baseType: !2081, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2084, file: !273, line: 44, baseType: !2081, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2071, file: !263, line: 62, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !2090)
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2089, file: !289, line: 50, baseType: !2092, size: 64)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 64, elements: !294)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2068, file: !263, line: 68, baseType: !2095, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2097, file: !299, line: 232, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2075)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2068, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2068, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!2103 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !263, line: 90, baseType: !2104, size: 16, offset: 112)
!2104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !263, line: 90, size: 16, elements: !2105)
!2105 = !{!2106, !2111}
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !263, line: 91, baseType: !2107, size: 16)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2104, file: !263, line: 91, size: 16, elements: !2108)
!2108 = !{!2109, !2110}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2107, file: !263, line: 96, baseType: !313, size: 8)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2107, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2104, file: !263, line: 100, baseType: !151, size: 16)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2068, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2068, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2068, file: !263, line: 131, baseType: !2115, size: 192, offset: 192)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2124}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2115, file: !299, line: 245, baseType: !2074, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2115, file: !299, line: 246, baseType: !2119, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2120)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{null, !2123}
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2115, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2065, file: !263, line: 250, baseType: !2126, size: 288, offset: 384)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !2127)
!2127 = !{!2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2126, file: !334, line: 26, baseType: !137, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2126, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2126, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2126, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2126, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2126, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2126, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2126, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2126, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2065, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2065, file: !263, line: 256, baseType: !2096, size: 64, offset: 704)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2065, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2065, file: !263, line: 300, baseType: !2141, size: 96, offset: 800)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2141, file: !263, line: 153, baseType: !22, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2141, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2141, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2065, file: !263, line: 325, baseType: !2147, size: 32, offset: 896)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !2149)
!2149 = !{!2150, !2156, !2157}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2148, file: !357, line: 5074, baseType: !2151, size: 96)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2151, file: !113, line: 57, baseType: !116, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2151, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2151, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2148, file: !357, line: 5075, baseType: !2096, size: 64, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2148, file: !357, line: 5076, baseType: !2158, offset: 160)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2065, file: !263, line: 343, baseType: !2160, size: 64, offset: 928)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2160, file: !334, line: 63, baseType: !137, size: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2160, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 32)
!2166 = !{!2059, !2167, !2170, !2172}
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2061, file: !2169, line: 404, type: !103, isLocal: true, isDefinition: true)
!2169 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2061, file: !2169, line: 405, type: !103, isLocal: true, isDefinition: true)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "pending_current", scope: !2061, file: !2169, line: 425, type: !2064, isLocal: true, isDefinition: true)
!2174 = !DIGlobalVariableExpression(var: !2175, expr: !DIExpression())
!2175 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2176, file: !2206, line: 15, type: !163, isLocal: true, isDefinition: true)
!2176 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2177, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2178, globals: !2203, splitDebugInlining: false, nameTableKind: None)
!2177 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2178 = !{!1422, !102, !632, !137, !163, !103, !2179, !1022, !330}
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !2181)
!2181 = !{!2182, !2197, !2202}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2180, file: !299, line: 245, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !2185)
!2185 = !{!2186, !2192}
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !273, line: 38, baseType: !2187, size: 32)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !273, line: 38, size: 32, elements: !2188)
!2188 = !{!2189, !2191}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2187, file: !273, line: 39, baseType: !2190, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2187, file: !273, line: 40, baseType: !2190, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !273, line: 42, baseType: !2193, size: 32, offset: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !273, line: 42, size: 32, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2193, file: !273, line: 43, baseType: !2190, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2193, file: !273, line: 44, baseType: !2190, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2180, file: !299, line: 246, baseType: !2198, size: 32, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !2199)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 32)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{null, !2179}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2180, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!2203 = !{!2174, !2204, !2208, !2210}
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2176, file: !2206, line: 19, type: !2207, isLocal: true, isDefinition: true)
!2206 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2176, file: !2206, line: 25, type: !103, isLocal: true, isDefinition: true)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2176, file: !2206, line: 17, type: !2212, isLocal: true, isDefinition: true)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !2184)
!2213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2215 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2216, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2216 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2219, splitDebugInlining: false, nameTableKind: None)
!2218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2219 = !{!102, !120, !1716, !24, !2220, !22, !2225, !103, !149, !150}
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !2223)
!2223 = !{!2224}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2222, file: !142, line: 58, baseType: !158, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !2227)
!2227 = !{!2228, !2231, !2232, !2233, !2234, !2235, !2236}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2226, file: !142, line: 69, baseType: !2229, size: 64)
!2229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2230, size: 64, elements: !294)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2226, file: !142, line: 70, baseType: !2230, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2226, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2226, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2226, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2226, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2226, file: !142, line: 77, baseType: !2237, offset: 224)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, elements: !2241)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !2239)
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2238, file: !142, line: 65, baseType: !2230, size: 32)
!2241 = !{!2242}
!2242 = !DISubrange(count: 0)
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2245, retainedTypes: !2265, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2245 = !{!2246, !2254}
!2246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2247, line: 69, baseType: !32, size: 32, elements: !2248)
!2247 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2248 = !{!2249, !2250, !2251, !2252, !2253}
!2249 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2250 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2251 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2252 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2253 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2247, line: 56, baseType: !32, size: 32, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264}
!2256 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2257 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2258 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2259 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2260 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2261 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2262 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2263 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2264 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2265 = !{!103, !2246, !2254, !2266, !314, !218, !2268, !2269, !209, !152, !199, !120, !102, !22, !32, !2271, !2272, !2273, !2274, !2275, !331, !2276, !2267, !2277, !2278, !2279, !2280}
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2247, line: 31, baseType: !2267)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !331)
!2268 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2247, line: 32, baseType: !2270)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!2274 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2284, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2285, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2284 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2285 = !{!2286, !30}
!2286 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2287, line: 27, baseType: !32, size: 32, elements: !2288)
!2287 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2288 = !{!2289, !2290, !2291, !2292, !2293}
!2289 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2290 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2291 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2292 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2293 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2296, retainedTypes: !2297, splitDebugInlining: false, nameTableKind: None)
!2295 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2296 = !{!471, !2286, !30}
!2297 = !{!658, !2298, !102, !103, !632, !137, !208, !2315}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2300)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2301)
!2301 = !{!2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2300, file: !402, line: 413, baseType: !1437, size: 256)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2300, file: !402, line: 414, baseType: !1439, size: 768, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2300, file: !402, line: 415, baseType: !1437, size: 256, offset: 1024)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2300, file: !402, line: 416, baseType: !1439, size: 768, offset: 1280)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2300, file: !402, line: 417, baseType: !1437, size: 256, offset: 2048)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2300, file: !402, line: 418, baseType: !1439, size: 768, offset: 2304)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2300, file: !402, line: 419, baseType: !1437, size: 256, offset: 3072)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2300, file: !402, line: 420, baseType: !1439, size: 768, offset: 3328)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2300, file: !402, line: 421, baseType: !1437, size: 256, offset: 4096)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2300, file: !402, line: 422, baseType: !1450, size: 1792, offset: 4352)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2300, file: !402, line: 423, baseType: !1454, size: 1920, offset: 6144)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2300, file: !402, line: 424, baseType: !1459, size: 20608, offset: 8064)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2300, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2317, file: !402, line: 447, baseType: !406, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2317, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2317, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2317, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2317, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2317, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2317, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2317, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2317, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2317, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2317, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2317, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2317, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2317, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2317, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2317, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2317, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2317, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2317, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2317, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2317, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2340 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2341, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2341 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2344, splitDebugInlining: false, nameTableKind: None)
!2343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2344 = !{!102, !103, !22, !2345}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2348)
!2348 = !{!2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2347, file: !402, line: 447, baseType: !406, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2347, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2347, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2347, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2347, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2347, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2347, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2347, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2347, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2347, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2347, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2347, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2347, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2347, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2347, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2347, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2347, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2347, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2347, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2347, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2347, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2370 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2371, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2372, splitDebugInlining: false, nameTableKind: None)
!2371 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2372 = !{!2373, !102, !103}
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2375)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2376)
!2376 = !{!2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2375, file: !402, line: 447, baseType: !406, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2375, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2375, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2375, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2375, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2375, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2375, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2375, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2375, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2375, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2375, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2375, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2375, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2375, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2375, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2375, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2375, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2375, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2375, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2375, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2375, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2398 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2399, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2400, splitDebugInlining: false, nameTableKind: None)
!2399 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2400 = !{!2401, !137, !102, !103}
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2403, line: 98, size: 256, elements: !2404)
!2403 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2404 = !{!2405, !2410, !2415, !2420, !2425, !2430, !2435, !2440}
!2405 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 99, baseType: !2406, size: 32)
!2406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 99, size: 32, elements: !2407)
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2406, file: !2403, line: 99, baseType: !137, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2406, file: !2403, line: 99, baseType: !137, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 100, baseType: !2411, size: 32, offset: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 100, size: 32, elements: !2412)
!2412 = !{!2413, !2414}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2411, file: !2403, line: 100, baseType: !137, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2411, file: !2403, line: 100, baseType: !137, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 101, baseType: !2416, size: 32, offset: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 101, size: 32, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2416, file: !2403, line: 101, baseType: !137, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2416, file: !2403, line: 101, baseType: !137, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 102, baseType: !2421, size: 32, offset: 96)
!2421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 102, size: 32, elements: !2422)
!2422 = !{!2423, !2424}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2421, file: !2403, line: 102, baseType: !137, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2421, file: !2403, line: 102, baseType: !137, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 103, baseType: !2426, size: 32, offset: 128)
!2426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 103, size: 32, elements: !2427)
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2426, file: !2403, line: 103, baseType: !137, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2426, file: !2403, line: 103, baseType: !137, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 104, baseType: !2431, size: 32, offset: 160)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 104, size: 32, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2431, file: !2403, line: 104, baseType: !137, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2431, file: !2403, line: 104, baseType: !137, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !2403, line: 105, baseType: !2436, size: 32, offset: 192)
!2436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2402, file: !2403, line: 105, size: 32, elements: !2437)
!2437 = !{!2438, !2439}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2436, file: !2403, line: 105, baseType: !137, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2436, file: !2403, line: 105, baseType: !137, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2402, file: !2403, line: 106, baseType: !137, size: 32, offset: 224)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2285, retainedTypes: !2443, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2443 = !{!2444, !102, !103, !2469, !150, !137}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2446, file: !402, line: 447, baseType: !406, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2446, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2446, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2446, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2446, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2446, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2446, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2446, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2446, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2446, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2446, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2446, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2446, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2446, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2446, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2446, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2446, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2446, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2446, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2446, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2446, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2403, line: 141, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2403, line: 97, size: 256, elements: !2472)
!2472 = !{!2473}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2471, file: !2403, line: 107, baseType: !2474, size: 256)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2403, line: 98, size: 256, elements: !2475)
!2475 = !{!2476, !2481, !2486, !2491, !2496, !2501, !2506, !2511}
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 99, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 99, size: 32, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2477, file: !2403, line: 99, baseType: !137, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2477, file: !2403, line: 99, baseType: !137, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 100, baseType: !2482, size: 32, offset: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 100, size: 32, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2482, file: !2403, line: 100, baseType: !137, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2482, file: !2403, line: 100, baseType: !137, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 101, baseType: !2487, size: 32, offset: 64)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 101, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2487, file: !2403, line: 101, baseType: !137, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2487, file: !2403, line: 101, baseType: !137, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 102, baseType: !2492, size: 32, offset: 96)
!2492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 102, size: 32, elements: !2493)
!2493 = !{!2494, !2495}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2492, file: !2403, line: 102, baseType: !137, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2492, file: !2403, line: 102, baseType: !137, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 103, baseType: !2497, size: 32, offset: 128)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 103, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2497, file: !2403, line: 103, baseType: !137, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2497, file: !2403, line: 103, baseType: !137, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 104, baseType: !2502, size: 32, offset: 160)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 104, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2502, file: !2403, line: 104, baseType: !137, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2502, file: !2403, line: 104, baseType: !137, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !2403, line: 105, baseType: !2507, size: 32, offset: 192)
!2507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !2403, line: 105, size: 32, elements: !2508)
!2508 = !{!2509, !2510}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2507, file: !2403, line: 105, baseType: !137, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2507, file: !2403, line: 105, baseType: !137, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2474, file: !2403, line: 106, baseType: !137, size: 32, offset: 224)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1420, retainedTypes: !2514, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2514 = !{!658, !632, !208, !137, !2515, !2532}
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !402, line: 426, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 411, size: 28704, elements: !2518)
!2518 = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2517, file: !402, line: 413, baseType: !1437, size: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2517, file: !402, line: 414, baseType: !1439, size: 768, offset: 256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2517, file: !402, line: 415, baseType: !1437, size: 256, offset: 1024)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2517, file: !402, line: 416, baseType: !1439, size: 768, offset: 1280)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2517, file: !402, line: 417, baseType: !1437, size: 256, offset: 2048)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2517, file: !402, line: 418, baseType: !1439, size: 768, offset: 2304)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2517, file: !402, line: 419, baseType: !1437, size: 256, offset: 3072)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2517, file: !402, line: 420, baseType: !1439, size: 768, offset: 3328)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2517, file: !402, line: 421, baseType: !1437, size: 256, offset: 4096)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2517, file: !402, line: 422, baseType: !1450, size: 1792, offset: 4352)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2517, file: !402, line: 423, baseType: !1454, size: 1920, offset: 6144)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2517, file: !402, line: 424, baseType: !1459, size: 20608, offset: 8064)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2517, file: !402, line: 425, baseType: !176, size: 32, offset: 28672)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2534)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2534, file: !402, line: 447, baseType: !406, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2534, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2534, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2534, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2534, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2534, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2534, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2534, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2534, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2534, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2534, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2534, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2534, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2534, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2534, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2534, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2534, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2534, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2534, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2534, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2534, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2559 = !{!2560, !102, !103}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !402, line: 468, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 445, size: 1120, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2562, file: !402, line: 447, baseType: !406, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2562, file: !402, line: 448, baseType: !176, size: 32, offset: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2562, file: !402, line: 449, baseType: !176, size: 32, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2562, file: !402, line: 450, baseType: !176, size: 32, offset: 96)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2562, file: !402, line: 451, baseType: !176, size: 32, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2562, file: !402, line: 452, baseType: !176, size: 32, offset: 160)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2562, file: !402, line: 453, baseType: !1474, size: 96, offset: 192)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2562, file: !402, line: 454, baseType: !176, size: 32, offset: 288)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2562, file: !402, line: 455, baseType: !176, size: 32, offset: 320)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2562, file: !402, line: 456, baseType: !176, size: 32, offset: 352)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2562, file: !402, line: 457, baseType: !176, size: 32, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2562, file: !402, line: 458, baseType: !176, size: 32, offset: 416)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2562, file: !402, line: 459, baseType: !176, size: 32, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2562, file: !402, line: 460, baseType: !176, size: 32, offset: 480)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2562, file: !402, line: 461, baseType: !1483, size: 64, offset: 512)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2562, file: !402, line: 462, baseType: !406, size: 32, offset: 576)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2562, file: !402, line: 463, baseType: !406, size: 32, offset: 608)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2562, file: !402, line: 464, baseType: !1487, size: 128, offset: 640)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2562, file: !402, line: 465, baseType: !1489, size: 160, offset: 768)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2562, file: !402, line: 466, baseType: !1491, size: 160, offset: 928)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2562, file: !402, line: 467, baseType: !176, size: 32, offset: 1088)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2587, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2587 = !{!109, !1022, !120, !855, !2588, !209, !102}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2592, splitDebugInlining: false, nameTableKind: None)
!2591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2592 = !{!2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 510, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 477, size: 1216, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2595, file: !172, line: 479, baseType: !176, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2595, file: !172, line: 480, baseType: !176, size: 32, offset: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2595, file: !172, line: 481, baseType: !176, size: 32, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2595, file: !172, line: 482, baseType: !176, size: 32, offset: 96)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2595, file: !172, line: 483, baseType: !176, size: 32, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2595, file: !172, line: 484, baseType: !176, size: 32, offset: 160)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2595, file: !172, line: 485, baseType: !720, size: 64, offset: 192)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2595, file: !172, line: 486, baseType: !176, size: 32, offset: 256)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2595, file: !172, line: 487, baseType: !176, size: 32, offset: 288)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2595, file: !172, line: 488, baseType: !720, size: 64, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2595, file: !172, line: 489, baseType: !176, size: 32, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2595, file: !172, line: 490, baseType: !176, size: 32, offset: 416)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2595, file: !172, line: 491, baseType: !720, size: 64, offset: 448)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2595, file: !172, line: 492, baseType: !176, size: 32, offset: 512)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2595, file: !172, line: 493, baseType: !176, size: 32, offset: 544)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2595, file: !172, line: 494, baseType: !720, size: 64, offset: 576)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2595, file: !172, line: 495, baseType: !176, size: 32, offset: 640)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2595, file: !172, line: 496, baseType: !176, size: 32, offset: 672)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2595, file: !172, line: 497, baseType: !720, size: 64, offset: 704)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2595, file: !172, line: 498, baseType: !176, size: 32, offset: 768)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2595, file: !172, line: 499, baseType: !176, size: 32, offset: 800)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2595, file: !172, line: 500, baseType: !720, size: 64, offset: 832)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2595, file: !172, line: 501, baseType: !176, size: 32, offset: 896)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2595, file: !172, line: 502, baseType: !176, size: 32, offset: 928)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2595, file: !172, line: 503, baseType: !720, size: 64, offset: 960)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2595, file: !172, line: 504, baseType: !176, size: 32, offset: 1024)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2595, file: !172, line: 505, baseType: !176, size: 32, offset: 1056)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2595, file: !172, line: 506, baseType: !137, size: 32, offset: 1088)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2595, file: !172, line: 507, baseType: !176, size: 32, offset: 1120)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2595, file: !172, line: 508, baseType: !176, size: 32, offset: 1152)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2595, file: !172, line: 509, baseType: !176, size: 32, offset: 1184)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2630 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2631, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2632, retainedTypes: !2648, splitDebugInlining: false, nameTableKind: None)
!2631 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2632 = !{!2633, !2640, !2644}
!2633 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2634, line: 38, baseType: !32, size: 32, elements: !2635)
!2634 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2635 = !{!2636, !2637, !2638, !2639}
!2636 = !DIEnumerator(name: "HAL_OK", value: 0)
!2637 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2638 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2639 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2640 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 184, baseType: !32, size: 32, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIEnumerator(name: "RESET", value: 0)
!2643 = !DIEnumerator(name: "SET", value: 1)
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 190, baseType: !32, size: 32, elements: !2645)
!2645 = !{!2646, !2647}
!2646 = !DIEnumerator(name: "DISABLE", value: 0)
!2647 = !DIEnumerator(name: "ENABLE", value: 1)
!2648 = !{!102, !2649, !208, !137, !1338, !2684, !2690, !2701, !151, !2702, !163}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 510, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 477, size: 1216, elements: !2652)
!2652 = !{!2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2651, file: !172, line: 479, baseType: !176, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2651, file: !172, line: 480, baseType: !176, size: 32, offset: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2651, file: !172, line: 481, baseType: !176, size: 32, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2651, file: !172, line: 482, baseType: !176, size: 32, offset: 96)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2651, file: !172, line: 483, baseType: !176, size: 32, offset: 128)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2651, file: !172, line: 484, baseType: !176, size: 32, offset: 160)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2651, file: !172, line: 485, baseType: !720, size: 64, offset: 192)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2651, file: !172, line: 486, baseType: !176, size: 32, offset: 256)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2651, file: !172, line: 487, baseType: !176, size: 32, offset: 288)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2651, file: !172, line: 488, baseType: !720, size: 64, offset: 320)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2651, file: !172, line: 489, baseType: !176, size: 32, offset: 384)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2651, file: !172, line: 490, baseType: !176, size: 32, offset: 416)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2651, file: !172, line: 491, baseType: !720, size: 64, offset: 448)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2651, file: !172, line: 492, baseType: !176, size: 32, offset: 512)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2651, file: !172, line: 493, baseType: !176, size: 32, offset: 544)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2651, file: !172, line: 494, baseType: !720, size: 64, offset: 576)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2651, file: !172, line: 495, baseType: !176, size: 32, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2651, file: !172, line: 496, baseType: !176, size: 32, offset: 672)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2651, file: !172, line: 497, baseType: !720, size: 64, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2651, file: !172, line: 498, baseType: !176, size: 32, offset: 768)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2651, file: !172, line: 499, baseType: !176, size: 32, offset: 800)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2651, file: !172, line: 500, baseType: !720, size: 64, offset: 832)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2651, file: !172, line: 501, baseType: !176, size: 32, offset: 896)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2651, file: !172, line: 502, baseType: !176, size: 32, offset: 928)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2651, file: !172, line: 503, baseType: !720, size: 64, offset: 960)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2651, file: !172, line: 504, baseType: !176, size: 32, offset: 1024)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2651, file: !172, line: 505, baseType: !176, size: 32, offset: 1056)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2651, file: !172, line: 506, baseType: !137, size: 32, offset: 1088)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2651, file: !172, line: 507, baseType: !176, size: 32, offset: 1120)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2651, file: !172, line: 508, baseType: !176, size: 32, offset: 1152)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2651, file: !172, line: 509, baseType: !176, size: 32, offset: 1184)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 471, baseType: !2686)
!2686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 467, size: 64, elements: !2687)
!2687 = !{!2688, !2689}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2686, file: !172, line: 469, baseType: !176, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2686, file: !172, line: 470, baseType: !176, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 379, baseType: !2692)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 224, elements: !2693)
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2692, file: !172, line: 372, baseType: !176, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2692, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2692, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2692, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2692, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2692, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2692, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !172, line: 396, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 385, size: 320, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2704, file: !172, line: 387, baseType: !176, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2704, file: !172, line: 388, baseType: !176, size: 32, offset: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2704, file: !172, line: 389, baseType: !176, size: 32, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2704, file: !172, line: 390, baseType: !176, size: 32, offset: 96)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2704, file: !172, line: 391, baseType: !176, size: 32, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2704, file: !172, line: 392, baseType: !176, size: 32, offset: 160)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2704, file: !172, line: 393, baseType: !176, size: 32, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2704, file: !172, line: 394, baseType: !176, size: 32, offset: 224)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2704, file: !172, line: 395, baseType: !1009, size: 64, offset: 256)
!2715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2716, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2717, retainedTypes: !2718, splitDebugInlining: false, nameTableKind: None)
!2716 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2717 = !{!696}
!2718 = !{!2719, !137, !2727, !2733, !2744}
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !402, line: 770, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !402, line: 764, size: 128, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2721, file: !402, line: 766, baseType: !176, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2721, file: !402, line: 767, baseType: !176, size: 32, offset: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2721, file: !402, line: 768, baseType: !176, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2721, file: !402, line: 769, baseType: !406, size: 32, offset: 96)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !172, line: 471, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 467, size: 64, elements: !2730)
!2730 = !{!2731, !2732}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2729, file: !172, line: 469, baseType: !176, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2729, file: !172, line: 470, baseType: !176, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !172, line: 379, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 370, size: 224, elements: !2736)
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2743}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2735, file: !172, line: 372, baseType: !176, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2735, file: !172, line: 373, baseType: !176, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2735, file: !172, line: 374, baseType: !176, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2735, file: !172, line: 375, baseType: !176, size: 32, offset: 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2735, file: !172, line: 376, baseType: !176, size: 32, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2735, file: !172, line: 377, baseType: !176, size: 32, offset: 160)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2735, file: !172, line: 378, baseType: !176, size: 32, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !172, line: 510, baseType: !2746)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 477, size: 1216, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2746, file: !172, line: 479, baseType: !176, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2746, file: !172, line: 480, baseType: !176, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2746, file: !172, line: 481, baseType: !176, size: 32, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2746, file: !172, line: 482, baseType: !176, size: 32, offset: 96)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2746, file: !172, line: 483, baseType: !176, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2746, file: !172, line: 484, baseType: !176, size: 32, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2746, file: !172, line: 485, baseType: !720, size: 64, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2746, file: !172, line: 486, baseType: !176, size: 32, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2746, file: !172, line: 487, baseType: !176, size: 32, offset: 288)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2746, file: !172, line: 488, baseType: !720, size: 64, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2746, file: !172, line: 489, baseType: !176, size: 32, offset: 384)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2746, file: !172, line: 490, baseType: !176, size: 32, offset: 416)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2746, file: !172, line: 491, baseType: !720, size: 64, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2746, file: !172, line: 492, baseType: !176, size: 32, offset: 512)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2746, file: !172, line: 493, baseType: !176, size: 32, offset: 544)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2746, file: !172, line: 494, baseType: !720, size: 64, offset: 576)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2746, file: !172, line: 495, baseType: !176, size: 32, offset: 640)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2746, file: !172, line: 496, baseType: !176, size: 32, offset: 672)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2746, file: !172, line: 497, baseType: !720, size: 64, offset: 704)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2746, file: !172, line: 498, baseType: !176, size: 32, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2746, file: !172, line: 499, baseType: !176, size: 32, offset: 800)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2746, file: !172, line: 500, baseType: !720, size: 64, offset: 832)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2746, file: !172, line: 501, baseType: !176, size: 32, offset: 896)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2746, file: !172, line: 502, baseType: !176, size: 32, offset: 928)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2746, file: !172, line: 503, baseType: !720, size: 64, offset: 960)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2746, file: !172, line: 504, baseType: !176, size: 32, offset: 1024)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2746, file: !172, line: 505, baseType: !176, size: 32, offset: 1056)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2746, file: !172, line: 506, baseType: !137, size: 32, offset: 1088)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2746, file: !172, line: 507, baseType: !176, size: 32, offset: 1120)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2746, file: !172, line: 508, baseType: !176, size: 32, offset: 1152)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2746, file: !172, line: 509, baseType: !176, size: 32, offset: 1184)
!2779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2780, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2781, splitDebugInlining: false, nameTableKind: None)
!2780 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2781 = !{!102, !120}
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2784, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2784 = !{!2785, !2792, !30}
!2785 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2786, line: 14, baseType: !32, size: 32, elements: !2787)
!2786 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2787 = !{!2788, !2789, !2790, !2791}
!2788 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2789 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2790 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2791 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2786, line: 42, baseType: !32, size: 32, elements: !2793)
!2793 = !{!2794, !2795, !2796, !2797, !2798, !2799}
!2794 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2795 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2796 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2797 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2798 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2799 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2801, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2801 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2804, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2804 = !{!22, !102, !103}
!2805 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2806, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2806 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!2807 = !{!"Ubuntu clang version 14.0.6"}
!2808 = !{i32 7, !"Dwarf Version", i32 4}
!2809 = !{i32 2, !"Debug Info Version", i32 3}
!2810 = !{i32 1, !"wchar_size", i32 4}
!2811 = !{i32 1, !"min_enum_size", i32 4}
!2812 = !{i32 1, !"branch-target-enforcement", i32 0}
!2813 = !{i32 1, !"sign-return-address", i32 0}
!2814 = !{i32 1, !"sign-return-address-all", i32 0}
!2815 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2816 = !{i32 7, !"frame-pointer", i32 2}
!2817 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2818, file: !2818, line: 26, type: !2819, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2213, retainedNodes: !162)
!2818 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2819 = !DISubroutineType(types: !2820)
!2820 = !{null}
!2821 = !DILocation(line: 28, column: 1, scope: !2817)
!2822 = !{i64 2155025607, i64 2155025627, i64 2155025690}
!2823 = !DILocation(line: 29, column: 1, scope: !2817)
!2824 = !{i64 2155026022, i64 2155026042, i64 2155026105}
!2825 = !DILocation(line: 30, column: 1, scope: !2817)
!2826 = !{i64 2155026441, i64 2155026461, i64 2155026524}
!2827 = !DILocation(line: 31, column: 1, scope: !2817)
!2828 = !{i64 2155026860, i64 2155026880, i64 2155026943}
!2829 = !DILocation(line: 33, column: 1, scope: !2817)
!2830 = !{i64 2155027152, i64 2155027172, i64 2155027235}
!2831 = !DILocation(line: 35, column: 1, scope: !2817)
!2832 = !{i64 2155027477, i64 2155027497, i64 2155027560}
!2833 = !DILocation(line: 50, column: 1, scope: !2817)
!2834 = !{i64 2155027904, i64 2155027924, i64 2155027987}
!2835 = !DILocation(line: 54, column: 1, scope: !2817)
!2836 = !{i64 2155028343, i64 2155028363, i64 2155028426}
!2837 = !DILocation(line: 61, column: 1, scope: !2817)
!2838 = !{i64 2155028660, i64 2155028680, i64 2155028743}
!2839 = !DILocation(line: 63, column: 1, scope: !2817)
!2840 = !{i64 2155029040, i64 2155029060, i64 2155029123}
!2841 = !DILocation(line: 64, column: 1, scope: !2817)
!2842 = !{i64 2155029562, i64 2155029582, i64 2155029645}
!2843 = !DILocation(line: 65, column: 1, scope: !2817)
!2844 = !{i64 2155030060, i64 2155030080, i64 2155030143}
!2845 = !DILocation(line: 66, column: 1, scope: !2817)
!2846 = !{i64 2155030542, i64 2155030562, i64 2155030625}
!2847 = !DILocation(line: 67, column: 1, scope: !2817)
!2848 = !{i64 2155031049, i64 2155031069, i64 2155031132}
!2849 = !DILocation(line: 68, column: 1, scope: !2817)
!2850 = !{i64 2155031537, i64 2155031557, i64 2155031620}
!2851 = !DILocation(line: 70, column: 1, scope: !2817)
!2852 = !{i64 2155032005, i64 2155032025, i64 2155032088}
!2853 = !DILocation(line: 71, column: 1, scope: !2817)
!2854 = !{i64 2155036508, i64 2155036528, i64 2155036591}
!2855 = !DILocation(line: 72, column: 1, scope: !2817)
!2856 = !{i64 2155036966, i64 2155036986, i64 2155037049}
!2857 = !DILocation(line: 79, column: 1, scope: !2817)
!2858 = !{i64 2155037420, i64 2155037440, i64 2155037503}
!2859 = !DILocation(line: 80, column: 1, scope: !2817)
!2860 = !{i64 2155037931, i64 2155037951, i64 2155038014}
!2861 = !DILocation(line: 82, column: 1, scope: !2817)
!2862 = !{i64 2155038422, i64 2155038442, i64 2155038505}
!2863 = !DILocation(line: 97, column: 1, scope: !2817)
!2864 = !{i64 2155038759, i64 2155038779, i64 2155038842}
!2865 = !DILocation(line: 99, column: 1, scope: !2817)
!2866 = !{i64 2155038977, i64 2155038997, i64 2155039060}
!2867 = !DILocation(line: 102, column: 1, scope: !2817)
!2868 = !{i64 2155039234, i64 2155039254, i64 2155039317}
!2869 = !DILocation(line: 105, column: 1, scope: !2817)
!2870 = !{i64 2155039474, i64 2155039494, i64 2155039557}
!2871 = !DILocation(line: 115, column: 1, scope: !2817)
!2872 = !{i64 2155039813, i64 2155039833, i64 2155039896}
!2873 = !DILocation(line: 118, column: 1, scope: !2817)
!2874 = !{i64 2155040157, i64 2155040177, i64 2155040240}
!2875 = !DILocation(line: 32, column: 1, scope: !2876)
!2876 = !DILexicalBlockFile(scope: !2817, file: !2877, discriminator: 0)
!2877 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2878 = !{i64 2155040513, i64 2155040533, i64 2155040596}
!2879 = !DILocation(line: 33, column: 1, scope: !2876)
!2880 = !{i64 2155041025, i64 2155041045, i64 2155041108}
!2881 = !DILocation(line: 53, column: 1, scope: !2876)
!2882 = !{i64 2155041533, i64 2155041553, i64 2155041616}
!2883 = !DILocation(line: 54, column: 1, scope: !2876)
!2884 = !{i64 2155041951, i64 2155041971, i64 2155042034}
!2885 = !DILocation(line: 55, column: 1, scope: !2876)
!2886 = !{i64 2155042369, i64 2155042389, i64 2155042452}
!2887 = !DILocation(line: 56, column: 1, scope: !2876)
!2888 = !{i64 2155042787, i64 2155042807, i64 2155042870}
!2889 = !DILocation(line: 57, column: 1, scope: !2876)
!2890 = !{i64 2155043205, i64 2155043225, i64 2155043288}
!2891 = !DILocation(line: 58, column: 1, scope: !2876)
!2892 = !{i64 2155043623, i64 2155043643, i64 2155043706}
!2893 = !DILocation(line: 59, column: 1, scope: !2876)
!2894 = !{i64 2155044041, i64 2155044061, i64 2155044124}
!2895 = !DILocation(line: 60, column: 1, scope: !2876)
!2896 = !{i64 2155044465, i64 2155044485, i64 2155044548}
!2897 = !DILocation(line: 61, column: 1, scope: !2876)
!2898 = !{i64 2155044782, i64 2155044802, i64 2155044865}
!2899 = !DILocation(line: 70, column: 1, scope: !2876)
!2900 = !{i64 2155045011, i64 2155045031, i64 2155045094}
!2901 = !DILocation(line: 72, column: 1, scope: !2876)
!2902 = !{i64 2155045343, i64 2155045363, i64 2155045426}
!2903 = !DILocation(line: 73, column: 1, scope: !2876)
!2904 = !{i64 2155045793, i64 2155045813, i64 2155045876}
!2905 = !DILocation(line: 74, column: 1, scope: !2876)
!2906 = !{i64 2155050304, i64 2155050324, i64 2155050387}
!2907 = !DILocation(line: 75, column: 1, scope: !2876)
!2908 = !{i64 2155050754, i64 2155050774, i64 2155050837}
!2909 = !DILocation(line: 76, column: 1, scope: !2876)
!2910 = !{i64 2155051204, i64 2155051224, i64 2155051287}
!2911 = !DILocation(line: 77, column: 1, scope: !2876)
!2912 = !{i64 2155051654, i64 2155051674, i64 2155051737}
!2913 = !DILocation(line: 78, column: 1, scope: !2876)
!2914 = !{i64 2155052104, i64 2155052124, i64 2155052187}
!2915 = !DILocation(line: 79, column: 1, scope: !2876)
!2916 = !{i64 2155052554, i64 2155052574, i64 2155052637}
!2917 = !DILocation(line: 80, column: 1, scope: !2876)
!2918 = !{i64 2155053007, i64 2155053027, i64 2155053090}
!2919 = !DILocation(line: 84, column: 1, scope: !2876)
!2920 = !{i64 2155053339, i64 2155053359, i64 2155053422}
!2921 = !DILocation(line: 91, column: 1, scope: !2876)
!2922 = !{i64 2155053736, i64 2155053756, i64 2155053819}
!2923 = !DILocation(line: 93, column: 1, scope: !2876)
!2924 = !{i64 2155054103, i64 2155054123, i64 2155054186}
!2925 = !DILocation(line: 106, column: 1, scope: !2876)
!2926 = !{i64 2155054373, i64 2155054393, i64 2155054456}
!2927 = !DILocation(line: 11, column: 1, scope: !2928)
!2928 = !DILexicalBlockFile(scope: !2817, file: !2929, discriminator: 0)
!2929 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2930 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !2819, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2931)
!2931 = !{!2932}
!2932 = !DILocalVariable(name: "p", scope: !2930, file: !107, line: 19, type: !102)
!2933 = !DILocation(line: 21, column: 2, scope: !2930)
!2934 = !DILocation(line: 23, column: 2, scope: !2930)
!2935 = !DILocation(line: 24, column: 2, scope: !2930)
!2936 = !DILocation(line: 26, column: 6, scope: !2930)
!2937 = !DILocation(line: 0, scope: !2930)
!2938 = !DILocation(line: 27, column: 2, scope: !2930)
!2939 = !DILocation(line: 29, column: 6, scope: !2930)
!2940 = !DILocation(line: 30, column: 2, scope: !2930)
!2941 = !DILocation(line: 32, column: 2, scope: !2930)
!2942 = !DILocation(line: 33, column: 2, scope: !2930)
!2943 = !DILocation(line: 34, column: 1, scope: !2930)
!2944 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !2819, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2945)
!2945 = !{!2946}
!2946 = !DILocalVariable(name: "stats", scope: !2944, file: !107, line: 38, type: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2948, line: 24, size: 96, elements: !2949)
!2948 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2949 = !{!2950, !2951, !2952}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2947, file: !2948, line: 25, baseType: !120, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2947, file: !2948, line: 26, baseType: !120, size: 32, offset: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2947, file: !2948, line: 27, baseType: !120, size: 32, offset: 64)
!2953 = !DILocation(line: 38, column: 2, scope: !2944)
!2954 = !DILocation(line: 38, column: 26, scope: !2944)
!2955 = !DILocation(line: 40, column: 2, scope: !2944)
!2956 = !DILocation(line: 43, column: 9, scope: !2944)
!2957 = !DILocation(line: 43, column: 32, scope: !2944)
!2958 = !DILocation(line: 44, column: 9, scope: !2944)
!2959 = !DILocation(line: 42, column: 2, scope: !2944)
!2960 = !DILocation(line: 45, column: 1, scope: !2944)
!2961 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2962)
!2962 = !{!2963}
!2963 = !DILocalVariable(name: "c", arg: 1, scope: !2961, file: !127, line: 45, type: !103)
!2964 = !DILocation(line: 0, scope: !2961)
!2965 = !DILocation(line: 50, column: 2, scope: !2961)
!2966 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2967, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2969)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{null, !128}
!2969 = !{!2970}
!2970 = !DILocalVariable(name: "fn", arg: 1, scope: !2966, file: !127, line: 63, type: !128)
!2971 = !DILocation(line: 0, scope: !2966)
!2972 = !DILocation(line: 65, column: 12, scope: !2966)
!2973 = !DILocation(line: 66, column: 1, scope: !2966)
!2974 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2975, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!102}
!2977 = !DILocation(line: 78, column: 9, scope: !2974)
!2978 = !DILocation(line: 78, column: 2, scope: !2974)
!2979 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2980, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2989)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !199, !2982}
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2983, line: 99, baseType: !2984)
!2983 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2983, line: 40, baseType: !2985)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2987)
!2987 = !{!2988}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2986, file: !127, line: 79, baseType: !102, size: 32)
!2989 = !{!2990, !2991, !2992}
!2990 = !DILocalVariable(name: "fmt", arg: 1, scope: !2979, file: !127, line: 113, type: !199)
!2991 = !DILocalVariable(name: "ap", arg: 2, scope: !2979, file: !127, line: 113, type: !2982)
!2992 = !DILocalVariable(name: "ctx", scope: !2993, file: !127, line: 121, type: !2995)
!2993 = distinct !DILexicalBlock(scope: !2994, file: !127, line: 120, column: 27)
!2994 = distinct !DILexicalBlock(scope: !2979, file: !127, line: 120, column: 6)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2995, file: !127, line: 85, baseType: !32, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2995, file: !127, line: 86, baseType: !2999, offset: 32)
!2999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !2241)
!3000 = !DILocation(line: 0, scope: !2979)
!3001 = !DILocation(line: 148, column: 3, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2994, file: !127, line: 138, column: 9)
!3003 = !DILocation(line: 155, column: 1, scope: !2979)
!3004 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !3005, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3007)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!103, !103, !102}
!3007 = !{!3008, !3009}
!3008 = !DILocalVariable(name: "c", arg: 1, scope: !3004, file: !127, line: 107, type: !103)
!3009 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3004, file: !127, line: 107, type: !102)
!3010 = !DILocation(line: 0, scope: !3004)
!3011 = !DILocation(line: 110, column: 9, scope: !3004)
!3012 = !DILocation(line: 110, column: 2, scope: !3004)
!3013 = distinct !DISubprogram(name: "cbvprintf", scope: !3014, file: !3014, line: 739, type: !3015, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3021)
!3014 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!103, !3017, !102, !199, !2982}
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3014, line: 297, baseType: !3018)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!103, null}
!3021 = !{!3022, !3023, !3024, !3025}
!3022 = !DILocalVariable(name: "out", arg: 1, scope: !3013, file: !3014, line: 739, type: !3017)
!3023 = !DILocalVariable(name: "ctx", arg: 2, scope: !3013, file: !3014, line: 739, type: !102)
!3024 = !DILocalVariable(name: "format", arg: 3, scope: !3013, file: !3014, line: 739, type: !199)
!3025 = !DILocalVariable(name: "ap", arg: 4, scope: !3013, file: !3014, line: 739, type: !2982)
!3026 = !DILocation(line: 0, scope: !3013)
!3027 = !DILocation(line: 741, column: 9, scope: !3013)
!3028 = !DILocation(line: 741, column: 2, scope: !3013)
!3029 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !3030, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3032)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{null, !1022, !120}
!3032 = !{!3033, !3034, !3035}
!3033 = !DILocalVariable(name: "c", arg: 1, scope: !3029, file: !127, line: 157, type: !1022)
!3034 = !DILocalVariable(name: "n", arg: 2, scope: !3029, file: !127, line: 157, type: !120)
!3035 = !DILocalVariable(name: "i", scope: !3029, file: !127, line: 159, type: !120)
!3036 = !DILocation(line: 0, scope: !3029)
!3037 = !DILocation(line: 164, column: 16, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !127, line: 164, column: 2)
!3039 = distinct !DILexicalBlock(scope: !3029, file: !127, line: 164, column: 2)
!3040 = !DILocation(line: 164, column: 2, scope: !3039)
!3041 = !DILocation(line: 165, column: 3, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !127, line: 164, column: 26)
!3043 = !DILocation(line: 165, column: 13, scope: !3042)
!3044 = !DILocation(line: 164, column: 22, scope: !3038)
!3045 = distinct !{!3045, !3040, !3046}
!3046 = !DILocation(line: 166, column: 2, scope: !3039)
!3047 = !DILocation(line: 171, column: 1, scope: !3029)
!3048 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !3049, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3051)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !199, null}
!3051 = !{!3052, !3053}
!3052 = !DILocalVariable(name: "fmt", arg: 1, scope: !3048, file: !127, line: 203, type: !199)
!3053 = !DILocalVariable(name: "ap", scope: !3048, file: !127, line: 205, type: !2982)
!3054 = !DILocation(line: 0, scope: !3048)
!3055 = !DILocation(line: 205, column: 2, scope: !3048)
!3056 = !DILocation(line: 205, column: 10, scope: !3048)
!3057 = !DILocation(line: 207, column: 2, scope: !3048)
!3058 = !DILocation(line: 209, column: 2, scope: !3048)
!3059 = !DILocation(line: 211, column: 2, scope: !3048)
!3060 = !DILocation(line: 212, column: 1, scope: !3048)
!3061 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !3062, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!103, !1022, !120, !199, null}
!3064 = !{!3065, !3066, !3067, !3068, !3069}
!3065 = !DILocalVariable(name: "str", arg: 1, scope: !3061, file: !127, line: 239, type: !1022)
!3066 = !DILocalVariable(name: "size", arg: 2, scope: !3061, file: !127, line: 239, type: !120)
!3067 = !DILocalVariable(name: "fmt", arg: 3, scope: !3061, file: !127, line: 239, type: !199)
!3068 = !DILocalVariable(name: "ap", scope: !3061, file: !127, line: 241, type: !2982)
!3069 = !DILocalVariable(name: "ret", scope: !3061, file: !127, line: 242, type: !103)
!3070 = !DILocation(line: 0, scope: !3061)
!3071 = !DILocation(line: 241, column: 2, scope: !3061)
!3072 = !DILocation(line: 241, column: 10, scope: !3061)
!3073 = !DILocation(line: 244, column: 2, scope: !3061)
!3074 = !DILocation(line: 245, column: 8, scope: !3061)
!3075 = !DILocation(line: 246, column: 2, scope: !3061)
!3076 = !DILocation(line: 249, column: 1, scope: !3061)
!3077 = !DILocation(line: 248, column: 2, scope: !3061)
!3078 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !3079, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!103, !1022, !120, !199, !2982}
!3081 = !{!3082, !3083, !3084, !3085, !3086}
!3082 = !DILocalVariable(name: "str", arg: 1, scope: !3078, file: !127, line: 251, type: !1022)
!3083 = !DILocalVariable(name: "size", arg: 2, scope: !3078, file: !127, line: 251, type: !120)
!3084 = !DILocalVariable(name: "fmt", arg: 3, scope: !3078, file: !127, line: 251, type: !199)
!3085 = !DILocalVariable(name: "ap", arg: 4, scope: !3078, file: !127, line: 251, type: !2982)
!3086 = !DILocalVariable(name: "ctx", scope: !3078, file: !127, line: 253, type: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !3088)
!3088 = !{!3089, !3090, !3091}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3087, file: !127, line: 218, baseType: !1022, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3087, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3087, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!3092 = !DILocation(line: 0, scope: !3078)
!3093 = !DILocation(line: 253, column: 2, scope: !3078)
!3094 = !DILocation(line: 253, column: 21, scope: !3078)
!3095 = !DILocation(line: 253, column: 27, scope: !3078)
!3096 = !DILocation(line: 255, column: 2, scope: !3078)
!3097 = !DILocation(line: 257, column: 10, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3078, file: !127, line: 257, column: 6)
!3099 = !DILocation(line: 257, column: 22, scope: !3098)
!3100 = !DILocation(line: 257, column: 16, scope: !3098)
!3101 = !DILocation(line: 257, column: 6, scope: !3078)
!3102 = !DILocation(line: 258, column: 3, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3098, file: !127, line: 257, column: 27)
!3104 = !DILocation(line: 258, column: 18, scope: !3103)
!3105 = !DILocation(line: 259, column: 2, scope: !3103)
!3106 = !DILocation(line: 262, column: 1, scope: !3078)
!3107 = !DILocation(line: 261, column: 2, scope: !3078)
!3108 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !3109, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !3112)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!103, !103, !3111}
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3112 = !{!3113, !3114}
!3113 = !DILocalVariable(name: "c", arg: 1, scope: !3108, file: !127, line: 223, type: !103)
!3114 = !DILocalVariable(name: "ctx", arg: 2, scope: !3108, file: !127, line: 223, type: !3111)
!3115 = !DILocation(line: 0, scope: !3108)
!3116 = !DILocation(line: 225, column: 11, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3108, file: !127, line: 225, column: 6)
!3118 = !DILocation(line: 225, column: 15, scope: !3117)
!3119 = !DILocation(line: 0, scope: !3117)
!3120 = !DILocation(line: 225, column: 23, scope: !3117)
!3121 = !DILocation(line: 225, column: 45, scope: !3117)
!3122 = !DILocation(line: 225, column: 37, scope: !3117)
!3123 = !DILocation(line: 225, column: 6, scope: !3108)
!3124 = !DILocation(line: 226, column: 8, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3117, file: !127, line: 225, column: 50)
!3126 = !DILocation(line: 226, column: 13, scope: !3125)
!3127 = !DILocation(line: 227, column: 3, scope: !3125)
!3128 = !DILocation(line: 230, column: 29, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3108, file: !127, line: 230, column: 6)
!3130 = !DILocation(line: 230, column: 17, scope: !3129)
!3131 = !DILocation(line: 230, column: 6, scope: !3108)
!3132 = !DILocation(line: 231, column: 22, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3129, file: !127, line: 230, column: 34)
!3134 = !DILocation(line: 231, column: 3, scope: !3133)
!3135 = !DILocation(line: 231, column: 26, scope: !3133)
!3136 = !DILocation(line: 232, column: 2, scope: !3133)
!3137 = !DILocation(line: 233, column: 28, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3129, file: !127, line: 232, column: 9)
!3139 = !DILocation(line: 233, column: 22, scope: !3138)
!3140 = !DILocation(line: 233, column: 3, scope: !3138)
!3141 = !DILocation(line: 233, column: 26, scope: !3138)
!3142 = !DILocation(line: 237, column: 1, scope: !3108)
!3143 = distinct !DISubprogram(name: "z_thread_entry", scope: !3144, file: !3144, line: 30, type: !3145, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2215, retainedNodes: !3152)
!3144 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3145 = !DISubroutineType(types: !3146)
!3146 = !{null, !3147, !102, !102, !102}
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3148, line: 46, baseType: !3149)
!3148 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{null, !102, !102, !102}
!3152 = !{!3153, !3154, !3155, !3156}
!3153 = !DILocalVariable(name: "entry", arg: 1, scope: !3143, file: !3144, line: 30, type: !3147)
!3154 = !DILocalVariable(name: "p1", arg: 2, scope: !3143, file: !3144, line: 31, type: !102)
!3155 = !DILocalVariable(name: "p2", arg: 3, scope: !3143, file: !3144, line: 31, type: !102)
!3156 = !DILocalVariable(name: "p3", arg: 4, scope: !3143, file: !3144, line: 31, type: !102)
!3157 = !DILocation(line: 0, scope: !3143)
!3158 = !DILocation(line: 36, column: 2, scope: !3143)
!3159 = !DILocation(line: 38, column: 17, scope: !3143)
!3160 = !DILocation(line: 38, column: 2, scope: !3143)
!3161 = !DILocation(line: 45, column: 2, scope: !3143)
!3162 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !3163, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2215, retainedNodes: !162)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!3165}
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !3166)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !3168)
!3168 = !{!3169, !3227, !3239, !3240, !3241, !3242, !3248, !3261}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3167, file: !263, line: 247, baseType: !3170, size: 384)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !3171)
!3171 = !{!3172, !3196, !3203, !3204, !3205, !3214, !3215, !3216}
!3172 = !DIDerivedType(tag: DW_TAG_member, scope: !3170, file: !263, line: 60, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3170, file: !263, line: 60, size: 64, elements: !3174)
!3174 = !{!3175, !3190}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3173, file: !263, line: 61, baseType: !3176, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !3177)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !3178)
!3178 = !{!3179, !3185}
!3179 = !DIDerivedType(tag: DW_TAG_member, scope: !3177, file: !273, line: 38, baseType: !3180, size: 32)
!3180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3177, file: !273, line: 38, size: 32, elements: !3181)
!3181 = !{!3182, !3184}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3180, file: !273, line: 39, baseType: !3183, size: 32)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3180, file: !273, line: 40, baseType: !3183, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, scope: !3177, file: !273, line: 42, baseType: !3186, size: 32, offset: 32)
!3186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3177, file: !273, line: 42, size: 32, elements: !3187)
!3187 = !{!3188, !3189}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3186, file: !273, line: 43, baseType: !3183, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3186, file: !273, line: 44, baseType: !3183, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3173, file: !263, line: 62, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !3192)
!3192 = !{!3193}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3191, file: !289, line: 50, baseType: !3194, size: 64)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3195, size: 64, elements: !294)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3170, file: !263, line: 68, baseType: !3197, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !3200)
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3199, file: !299, line: 232, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !3177)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3170, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3170, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!3205 = !DIDerivedType(tag: DW_TAG_member, scope: !3170, file: !263, line: 90, baseType: !3206, size: 16, offset: 112)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3170, file: !263, line: 90, size: 16, elements: !3207)
!3207 = !{!3208, !3213}
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !263, line: 91, baseType: !3209, size: 16)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3206, file: !263, line: 91, size: 16, elements: !3210)
!3210 = !{!3211, !3212}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3209, file: !263, line: 96, baseType: !313, size: 8)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3209, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3206, file: !263, line: 100, baseType: !151, size: 16)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3170, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3170, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3170, file: !263, line: 131, baseType: !3217, size: 192, offset: 192)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !3218)
!3218 = !{!3219, !3220, !3226}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3217, file: !299, line: 245, baseType: !3176, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3217, file: !299, line: 246, baseType: !3221, size: 32, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !3222)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{null, !3225}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3217, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3167, file: !263, line: 250, baseType: !3228, size: 288, offset: 384)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !3229)
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3228, file: !334, line: 26, baseType: !137, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3228, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3228, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3228, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3228, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3228, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3228, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3228, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3228, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3167, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3167, file: !263, line: 256, baseType: !3198, size: 64, offset: 704)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3167, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3167, file: !263, line: 300, baseType: !3243, size: 96, offset: 800)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !3244)
!3244 = !{!3245, !3246, !3247}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3243, file: !263, line: 153, baseType: !22, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3243, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3243, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3167, file: !263, line: 325, baseType: !3249, size: 32, offset: 896)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 32)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !3251)
!3251 = !{!3252, !3258, !3259}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3250, file: !357, line: 5074, baseType: !3253, size: 96)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3254)
!3254 = !{!3255, !3256, !3257}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3253, file: !113, line: 57, baseType: !116, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3253, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3253, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3250, file: !357, line: 5075, baseType: !3198, size: 64, offset: 96)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3250, file: !357, line: 5076, baseType: !3260, offset: 160)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3167, file: !263, line: 343, baseType: !3262, size: 64, offset: 928)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !3263)
!3263 = !{!3264, !3265}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3262, file: !334, line: 63, baseType: !137, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3262, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!3266 = !DILocation(line: 535, column: 9, scope: !3162)
!3267 = !DILocation(line: 535, column: 2, scope: !3162)
!3268 = distinct !DISubprogram(name: "k_thread_abort", scope: !3269, file: !3269, line: 188, type: !3270, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2215, retainedNodes: !3272)
!3269 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!3270 = !DISubroutineType(types: !3271)
!3271 = !{null, !3165}
!3272 = !{!3273}
!3273 = !DILocalVariable(name: "thread", arg: 1, scope: !3268, file: !3269, line: 188, type: !3165)
!3274 = !DILocation(line: 0, scope: !3268)
!3275 = !DILocation(line: 197, column: 2, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3268, file: !3269, line: 197, column: 2)
!3277 = !{i64 2154737885}
!3278 = !DILocation(line: 198, column: 2, scope: !3268)
!3279 = !DILocation(line: 199, column: 1, scope: !3268)
!3280 = distinct !DISubprogram(name: "z_current_get", scope: !3269, file: !3269, line: 173, type: !3163, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2215, retainedNodes: !162)
!3281 = !DILocation(line: 180, column: 2, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3280, file: !3269, line: 180, column: 2)
!3283 = !{i64 2154737817}
!3284 = !DILocation(line: 181, column: 9, scope: !3280)
!3285 = !DILocation(line: 181, column: 2, scope: !3280)
!3286 = distinct !DISubprogram(name: "sys_heap_free", scope: !3287, file: !3287, line: 163, type: !3288, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3296)
!3287 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !3290, !102}
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 32)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3292)
!3292 = !{!3293, !3294, !3295}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3291, file: !113, line: 57, baseType: !2225, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3291, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3291, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3296 = !{!3297, !3298, !3299, !3300}
!3297 = !DILocalVariable(name: "heap", arg: 1, scope: !3286, file: !3287, line: 163, type: !3290)
!3298 = !DILocalVariable(name: "mem", arg: 2, scope: !3286, file: !3287, line: 163, type: !102)
!3299 = !DILocalVariable(name: "h", scope: !3286, file: !3287, line: 168, type: !2225)
!3300 = !DILocalVariable(name: "c", scope: !3286, file: !3287, line: 169, type: !2230)
!3301 = !DILocation(line: 0, scope: !3286)
!3302 = !DILocation(line: 165, column: 10, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3286, file: !3287, line: 165, column: 6)
!3304 = !DILocation(line: 165, column: 6, scope: !3286)
!3305 = !DILocation(line: 168, column: 27, scope: !3286)
!3306 = !DILocation(line: 169, column: 16, scope: !3286)
!3307 = !{i32 0, i32 536870912}
!3308 = !DILocation(line: 187, column: 2, scope: !3286)
!3309 = !DILocation(line: 189, column: 44, scope: !3286)
!3310 = !{i32 0, i32 32768}
!3311 = !DILocation(line: 189, column: 24, scope: !3286)
!3312 = !DILocation(line: 189, column: 5, scope: !3286)
!3313 = !DILocation(line: 189, column: 21, scope: !3286)
!3314 = !DILocation(line: 197, column: 2, scope: !3286)
!3315 = !DILocation(line: 198, column: 1, scope: !3286)
!3316 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3287, file: !3287, line: 157, type: !3317, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3319)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!2230, !2225, !102}
!3319 = !{!3320, !3321, !3322, !3323}
!3320 = !DILocalVariable(name: "h", arg: 1, scope: !3316, file: !3287, line: 157, type: !2225)
!3321 = !DILocalVariable(name: "p", arg: 2, scope: !3316, file: !3287, line: 157, type: !102)
!3322 = !DILocalVariable(name: "mem", scope: !3316, file: !3287, line: 159, type: !1716)
!3323 = !DILocalVariable(name: "base", scope: !3316, file: !3287, line: 159, type: !1716)
!3324 = !DILocation(line: 0, scope: !3316)
!3325 = !DILocation(line: 159, column: 39, scope: !3316)
!3326 = !DILocation(line: 160, column: 14, scope: !3316)
!3327 = !DILocation(line: 160, column: 38, scope: !3316)
!3328 = !DILocation(line: 160, column: 46, scope: !3316)
!3329 = !DILocation(line: 160, column: 2, scope: !3316)
!3330 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3331, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3333)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{null, !2225, !2230, !211}
!3333 = !{!3334, !3335, !3336, !3337, !3338}
!3334 = !DILocalVariable(name: "h", arg: 1, scope: !3330, file: !142, line: 147, type: !2225)
!3335 = !DILocalVariable(name: "c", arg: 2, scope: !3330, file: !142, line: 147, type: !2230)
!3336 = !DILocalVariable(name: "used", arg: 3, scope: !3330, file: !142, line: 147, type: !211)
!3337 = !DILocalVariable(name: "buf", scope: !3330, file: !142, line: 149, type: !2220)
!3338 = !DILocalVariable(name: "cmem", scope: !3330, file: !142, line: 150, type: !102)
!3339 = !DILocation(line: 0, scope: !3330)
!3340 = !DILocation(line: 149, column: 22, scope: !3330)
!3341 = !DILocation(line: 0, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !142, line: 159, column: 7)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !142, line: 158, column: 9)
!3344 = distinct !DILexicalBlock(scope: !3330, file: !142, line: 152, column: 6)
!3345 = !DILocation(line: 159, column: 7, scope: !3343)
!3346 = !DILocation(line: 165, column: 1, scope: !3330)
!3347 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3348, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3351)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!3350, !2225, !2230}
!3350 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!3351 = !{!3352, !3353}
!3352 = !DILocalVariable(name: "h", arg: 1, scope: !3347, file: !142, line: 142, type: !2225)
!3353 = !DILocalVariable(name: "c", arg: 2, scope: !3347, file: !142, line: 142, type: !2230)
!3354 = !DILocation(line: 0, scope: !3347)
!3355 = !DILocation(line: 144, column: 9, scope: !3347)
!3356 = !DILocation(line: 144, column: 42, scope: !3347)
!3357 = !DILocation(line: 144, column: 2, scope: !3347)
!3358 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3359, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3361)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!120, !2225, !3350}
!3361 = !{!3362, !3363}
!3362 = !DILocalVariable(name: "h", arg: 1, scope: !3358, file: !142, line: 245, type: !2225)
!3363 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3358, file: !142, line: 245, type: !3350)
!3364 = !DILocation(line: 0, scope: !3358)
!3365 = !DILocation(line: 247, column: 20, scope: !3358)
!3366 = !DILocation(line: 247, column: 33, scope: !3358)
!3367 = !DILocation(line: 247, column: 2, scope: !3358)
!3368 = distinct !DISubprogram(name: "free_chunk", scope: !3287, file: !3287, line: 133, type: !3369, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3371)
!3369 = !DISubroutineType(types: !3370)
!3370 = !{null, !2225, !2230}
!3371 = !{!3372, !3373}
!3372 = !DILocalVariable(name: "h", arg: 1, scope: !3368, file: !3287, line: 133, type: !2225)
!3373 = !DILocalVariable(name: "c", arg: 2, scope: !3368, file: !3287, line: 133, type: !2230)
!3374 = !DILocation(line: 0, scope: !3368)
!3375 = !DILocation(line: 136, column: 21, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3368, file: !3287, line: 136, column: 6)
!3377 = !DILocation(line: 136, column: 7, scope: !3376)
!3378 = !DILocation(line: 136, column: 6, scope: !3368)
!3379 = !DILocation(line: 137, column: 3, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3376, file: !3287, line: 136, column: 41)
!3381 = !DILocation(line: 138, column: 22, scope: !3380)
!3382 = !DILocation(line: 138, column: 3, scope: !3380)
!3383 = !DILocation(line: 139, column: 2, scope: !3380)
!3384 = !DILocation(line: 142, column: 21, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3368, file: !3287, line: 142, column: 6)
!3386 = !{i32 -65535, i32 536903678}
!3387 = !DILocation(line: 142, column: 7, scope: !3385)
!3388 = !DILocation(line: 142, column: 6, scope: !3368)
!3389 = !DILocation(line: 143, column: 3, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3385, file: !3287, line: 142, column: 40)
!3391 = !DILocation(line: 144, column: 19, scope: !3390)
!3392 = !DILocation(line: 144, column: 3, scope: !3390)
!3393 = !DILocation(line: 145, column: 7, scope: !3390)
!3394 = !DILocation(line: 146, column: 2, scope: !3390)
!3395 = !DILocation(line: 148, column: 2, scope: !3368)
!3396 = !DILocation(line: 149, column: 1, scope: !3368)
!3397 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3398, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!2230, !2225, !2230}
!3400 = !{!3401, !3402}
!3401 = !DILocalVariable(name: "h", arg: 1, scope: !3397, file: !142, line: 204, type: !2225)
!3402 = !DILocalVariable(name: "c", arg: 2, scope: !3397, file: !142, line: 204, type: !2230)
!3403 = !DILocation(line: 0, scope: !3397)
!3404 = !DILocation(line: 206, column: 13, scope: !3397)
!3405 = !DILocation(line: 206, column: 11, scope: !3397)
!3406 = !DILocation(line: 206, column: 2, scope: !3397)
!3407 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3408, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!211, !2225, !2230}
!3410 = !{!3411, !3412}
!3411 = !DILocalVariable(name: "h", arg: 1, scope: !3407, file: !142, line: 137, type: !2225)
!3412 = !DILocalVariable(name: "c", arg: 2, scope: !3407, file: !142, line: 137, type: !2230)
!3413 = !DILocation(line: 0, scope: !3407)
!3414 = !DILocation(line: 139, column: 9, scope: !3407)
!3415 = !DILocation(line: 139, column: 42, scope: !3407)
!3416 = !DILocation(line: 139, column: 2, scope: !3407)
!3417 = distinct !DISubprogram(name: "free_list_remove", scope: !3287, file: !3287, line: 60, type: !3369, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3418)
!3418 = !{!3419, !3420, !3421}
!3419 = !DILocalVariable(name: "h", arg: 1, scope: !3417, file: !3287, line: 60, type: !2225)
!3420 = !DILocalVariable(name: "c", arg: 2, scope: !3417, file: !3287, line: 60, type: !2230)
!3421 = !DILocalVariable(name: "bidx", scope: !3422, file: !3287, line: 63, type: !103)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !3287, line: 62, column: 31)
!3423 = distinct !DILexicalBlock(scope: !3417, file: !3287, line: 62, column: 6)
!3424 = !DILocation(line: 0, scope: !3417)
!3425 = !DILocation(line: 63, column: 28, scope: !3422)
!3426 = !DILocation(line: 63, column: 14, scope: !3422)
!3427 = !DILocation(line: 0, scope: !3422)
!3428 = !DILocation(line: 64, column: 3, scope: !3422)
!3429 = !DILocation(line: 66, column: 1, scope: !3417)
!3430 = distinct !DISubprogram(name: "merge_chunks", scope: !3287, file: !3287, line: 125, type: !3431, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3433)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{null, !2225, !2230, !2230}
!3433 = !{!3434, !3435, !3436, !3437}
!3434 = !DILocalVariable(name: "h", arg: 1, scope: !3430, file: !3287, line: 125, type: !2225)
!3435 = !DILocalVariable(name: "lc", arg: 2, scope: !3430, file: !3287, line: 125, type: !2230)
!3436 = !DILocalVariable(name: "rc", arg: 3, scope: !3430, file: !3287, line: 125, type: !2230)
!3437 = !DILocalVariable(name: "newsz", scope: !3430, file: !3287, line: 127, type: !3350)
!3438 = !DILocation(line: 0, scope: !3430)
!3439 = !DILocation(line: 127, column: 20, scope: !3430)
!3440 = !DILocation(line: 127, column: 40, scope: !3430)
!3441 = !DILocation(line: 127, column: 38, scope: !3430)
!3442 = !DILocation(line: 129, column: 2, scope: !3430)
!3443 = !DILocation(line: 130, column: 25, scope: !3430)
!3444 = !DILocation(line: 130, column: 2, scope: !3430)
!3445 = !DILocation(line: 131, column: 1, scope: !3430)
!3446 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3398, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3447)
!3447 = !{!3448, !3449}
!3448 = !DILocalVariable(name: "h", arg: 1, scope: !3446, file: !142, line: 199, type: !2225)
!3449 = !DILocalVariable(name: "c", arg: 2, scope: !3446, file: !142, line: 199, type: !2230)
!3450 = !DILocation(line: 0, scope: !3446)
!3451 = !DILocation(line: 201, column: 13, scope: !3446)
!3452 = !DILocation(line: 201, column: 11, scope: !3446)
!3453 = !DILocation(line: 201, column: 2, scope: !3446)
!3454 = distinct !DISubprogram(name: "free_list_add", scope: !3287, file: !3287, line: 98, type: !3369, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3455)
!3455 = !{!3456, !3457, !3458}
!3456 = !DILocalVariable(name: "h", arg: 1, scope: !3454, file: !3287, line: 98, type: !2225)
!3457 = !DILocalVariable(name: "c", arg: 2, scope: !3454, file: !3287, line: 98, type: !2230)
!3458 = !DILocalVariable(name: "bidx", scope: !3459, file: !3287, line: 101, type: !103)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !3287, line: 100, column: 31)
!3460 = distinct !DILexicalBlock(scope: !3454, file: !3287, line: 100, column: 6)
!3461 = !DILocation(line: 0, scope: !3454)
!3462 = !DILocation(line: 101, column: 28, scope: !3459)
!3463 = !DILocation(line: 101, column: 14, scope: !3459)
!3464 = !DILocation(line: 0, scope: !3459)
!3465 = !DILocation(line: 102, column: 3, scope: !3459)
!3466 = !DILocation(line: 104, column: 1, scope: !3454)
!3467 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3468, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3470)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!103, !2225, !3350}
!3470 = !{!3471, !3472, !3473}
!3471 = !DILocalVariable(name: "h", arg: 1, scope: !3467, file: !142, line: 250, type: !2225)
!3472 = !DILocalVariable(name: "sz", arg: 2, scope: !3467, file: !142, line: 250, type: !3350)
!3473 = !DILocalVariable(name: "usable_sz", scope: !3467, file: !142, line: 252, type: !32)
!3474 = !DILocation(line: 0, scope: !3467)
!3475 = !DILocation(line: 252, column: 32, scope: !3467)
!3476 = !DILocation(line: 252, column: 30, scope: !3467)
!3477 = !DILocation(line: 252, column: 50, scope: !3467)
!3478 = !DILocation(line: 253, column: 14, scope: !3467)
!3479 = !{i32 0, i32 33}
!3480 = !DILocation(line: 253, column: 12, scope: !3467)
!3481 = !DILocation(line: 253, column: 2, scope: !3467)
!3482 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3287, file: !3287, line: 68, type: !3483, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3485)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{null, !2225, !2230, !103}
!3485 = !{!3486, !3487, !3488, !3489, !3491, !3494}
!3486 = !DILocalVariable(name: "h", arg: 1, scope: !3482, file: !3287, line: 68, type: !2225)
!3487 = !DILocalVariable(name: "c", arg: 2, scope: !3482, file: !3287, line: 68, type: !2230)
!3488 = !DILocalVariable(name: "bidx", arg: 3, scope: !3482, file: !3287, line: 68, type: !103)
!3489 = !DILocalVariable(name: "b", scope: !3482, file: !3287, line: 70, type: !3490)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!3491 = !DILocalVariable(name: "second", scope: !3492, file: !3287, line: 84, type: !2230)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !3287, line: 80, column: 9)
!3493 = distinct !DILexicalBlock(scope: !3482, file: !3287, line: 72, column: 6)
!3494 = !DILocalVariable(name: "first", scope: !3492, file: !3287, line: 85, type: !2230)
!3495 = !DILocation(line: 0, scope: !3482)
!3496 = !DILocation(line: 72, column: 9, scope: !3493)
!3497 = !DILocation(line: 72, column: 14, scope: !3493)
!3498 = !DILocation(line: 72, column: 6, scope: !3482)
!3499 = !DILocation(line: 76, column: 23, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3493, file: !3287, line: 72, column: 21)
!3501 = !DILocation(line: 76, column: 6, scope: !3500)
!3502 = !DILocation(line: 76, column: 20, scope: !3500)
!3503 = !DILocation(line: 77, column: 11, scope: !3500)
!3504 = !DILocation(line: 78, column: 3, scope: !3500)
!3505 = !DILocation(line: 79, column: 3, scope: !3500)
!3506 = !DILocation(line: 80, column: 2, scope: !3500)
!3507 = !DILocation(line: 0, scope: !3492)
!3508 = !DILocation(line: 85, column: 21, scope: !3492)
!3509 = !{i32 0, i32 65536}
!3510 = !DILocation(line: 87, column: 3, scope: !3492)
!3511 = !DILocation(line: 88, column: 3, scope: !3492)
!3512 = !DILocation(line: 89, column: 3, scope: !3492)
!3513 = !DILocation(line: 90, column: 3, scope: !3492)
!3514 = !DILocation(line: 94, column: 39, scope: !3482)
!3515 = !DILocation(line: 94, column: 19, scope: !3482)
!3516 = !DILocation(line: 94, column: 5, scope: !3482)
!3517 = !DILocation(line: 94, column: 16, scope: !3482)
!3518 = !DILocation(line: 96, column: 1, scope: !3482)
!3519 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !3431, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3520)
!3520 = !{!3521, !3522, !3523}
!3521 = !DILocalVariable(name: "h", arg: 1, scope: !3519, file: !142, line: 187, type: !2225)
!3522 = !DILocalVariable(name: "c", arg: 2, scope: !3519, file: !142, line: 187, type: !2230)
!3523 = !DILocalVariable(name: "prev", arg: 3, scope: !3519, file: !142, line: 188, type: !2230)
!3524 = !DILocation(line: 0, scope: !3519)
!3525 = !DILocation(line: 190, column: 2, scope: !3519)
!3526 = !DILocation(line: 191, column: 1, scope: !3519)
!3527 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !3431, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3528)
!3528 = !{!3529, !3530, !3531}
!3529 = !DILocalVariable(name: "h", arg: 1, scope: !3527, file: !142, line: 193, type: !2225)
!3530 = !DILocalVariable(name: "c", arg: 2, scope: !3527, file: !142, line: 193, type: !2230)
!3531 = !DILocalVariable(name: "next", arg: 3, scope: !3527, file: !142, line: 194, type: !2230)
!3532 = !DILocation(line: 0, scope: !3527)
!3533 = !DILocation(line: 196, column: 2, scope: !3527)
!3534 = !DILocation(line: 197, column: 1, scope: !3527)
!3535 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3398, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3536)
!3536 = !{!3537, !3538}
!3537 = !DILocalVariable(name: "h", arg: 1, scope: !3535, file: !142, line: 177, type: !2225)
!3538 = !DILocalVariable(name: "c", arg: 2, scope: !3535, file: !142, line: 177, type: !2230)
!3539 = !DILocation(line: 0, scope: !3535)
!3540 = !DILocation(line: 179, column: 9, scope: !3535)
!3541 = !DILocation(line: 179, column: 2, scope: !3535)
!3542 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3543, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!2230, !2225, !2230, !141}
!3545 = !{!3546, !3547, !3548, !3549, !3550}
!3546 = !DILocalVariable(name: "h", arg: 1, scope: !3542, file: !142, line: 107, type: !2225)
!3547 = !DILocalVariable(name: "c", arg: 2, scope: !3542, file: !142, line: 107, type: !2230)
!3548 = !DILocalVariable(name: "f", arg: 3, scope: !3542, file: !142, line: 108, type: !141)
!3549 = !DILocalVariable(name: "buf", scope: !3542, file: !142, line: 110, type: !2220)
!3550 = !DILocalVariable(name: "cmem", scope: !3542, file: !142, line: 111, type: !102)
!3551 = !DILocation(line: 0, scope: !3542)
!3552 = !DILocation(line: 110, column: 22, scope: !3542)
!3553 = !DILocation(line: 111, column: 15, scope: !3542)
!3554 = !DILocation(line: 116, column: 11, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !142, line: 115, column: 9)
!3556 = distinct !DILexicalBlock(scope: !3542, file: !142, line: 113, column: 6)
!3557 = !DILocation(line: 116, column: 10, scope: !3555)
!3558 = !DILocation(line: 118, column: 1, scope: !3542)
!3559 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3560, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!2220, !2225}
!3562 = !{!3563}
!3563 = !DILocalVariable(name: "h", arg: 1, scope: !3559, file: !142, line: 101, type: !2225)
!3564 = !DILocation(line: 0, scope: !3559)
!3565 = !DILocation(line: 104, column: 9, scope: !3559)
!3566 = !DILocation(line: 104, column: 2, scope: !3559)
!3567 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !3568, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3570)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{null, !2225, !2230, !141, !2230}
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3576}
!3571 = !DILocalVariable(name: "h", arg: 1, scope: !3567, file: !142, line: 120, type: !2225)
!3572 = !DILocalVariable(name: "c", arg: 2, scope: !3567, file: !142, line: 120, type: !2230)
!3573 = !DILocalVariable(name: "f", arg: 3, scope: !3567, file: !142, line: 121, type: !141)
!3574 = !DILocalVariable(name: "val", arg: 4, scope: !3567, file: !142, line: 121, type: !2230)
!3575 = !DILocalVariable(name: "buf", scope: !3567, file: !142, line: 125, type: !2220)
!3576 = !DILocalVariable(name: "cmem", scope: !3567, file: !142, line: 126, type: !102)
!3577 = !DILocation(line: 0, scope: !3567)
!3578 = !DILocation(line: 125, column: 22, scope: !3567)
!3579 = !DILocation(line: 126, column: 15, scope: !3567)
!3580 = !DILocation(line: 133, column: 27, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !142, line: 131, column: 9)
!3582 = distinct !DILexicalBlock(scope: !3567, file: !142, line: 128, column: 6)
!3583 = !DILocation(line: 133, column: 4, scope: !3581)
!3584 = !DILocation(line: 133, column: 3, scope: !3581)
!3585 = !DILocation(line: 133, column: 25, scope: !3581)
!3586 = !DILocation(line: 135, column: 1, scope: !3567)
!3587 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !3588, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3590)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!3350, !2225}
!3590 = !{!3591}
!3591 = !DILocalVariable(name: "h", arg: 1, scope: !3587, file: !142, line: 240, type: !2225)
!3592 = !DILocation(line: 0, scope: !3587)
!3593 = !DILocation(line: 242, column: 9, scope: !3587)
!3594 = !DILocation(line: 242, column: 2, scope: !3587)
!3595 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !3596, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3598)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{!3350, !2225, !120}
!3598 = !{!3599, !3600}
!3599 = !DILocalVariable(name: "h", arg: 1, scope: !3595, file: !142, line: 235, type: !2225)
!3600 = !DILocalVariable(name: "bytes", arg: 2, scope: !3595, file: !142, line: 235, type: !120)
!3601 = !DILocation(line: 0, scope: !3595)
!3602 = !DILocation(line: 237, column: 39, scope: !3595)
!3603 = !DILocation(line: 237, column: 9, scope: !3595)
!3604 = !DILocation(line: 237, column: 2, scope: !3595)
!3605 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !3606, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3608)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{!3350, !120}
!3608 = !{!3609}
!3609 = !DILocalVariable(name: "bytes", arg: 1, scope: !3605, file: !142, line: 230, type: !120)
!3610 = !DILocation(line: 0, scope: !3605)
!3611 = !DILocation(line: 232, column: 29, scope: !3605)
!3612 = !DILocation(line: 232, column: 35, scope: !3605)
!3613 = !DILocation(line: 232, column: 2, scope: !3605)
!3614 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !3615, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3617)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{null, !2225, !2230, !3350}
!3617 = !{!3618, !3619, !3620}
!3618 = !DILocalVariable(name: "h", arg: 1, scope: !3614, file: !142, line: 172, type: !2225)
!3619 = !DILocalVariable(name: "c", arg: 2, scope: !3614, file: !142, line: 172, type: !2230)
!3620 = !DILocalVariable(name: "size", arg: 3, scope: !3614, file: !142, line: 172, type: !3350)
!3621 = !DILocation(line: 0, scope: !3614)
!3622 = !DILocation(line: 174, column: 38, scope: !3614)
!3623 = !DILocation(line: 174, column: 2, scope: !3614)
!3624 = !DILocation(line: 175, column: 1, scope: !3614)
!3625 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !3615, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3626)
!3626 = !{!3627, !3628, !3629}
!3627 = !DILocalVariable(name: "h", arg: 1, scope: !3625, file: !142, line: 209, type: !2225)
!3628 = !DILocalVariable(name: "c", arg: 2, scope: !3625, file: !142, line: 209, type: !2230)
!3629 = !DILocalVariable(name: "size", arg: 3, scope: !3625, file: !142, line: 210, type: !3350)
!3630 = !DILocation(line: 0, scope: !3625)
!3631 = !DILocation(line: 212, column: 2, scope: !3625)
!3632 = !DILocation(line: 213, column: 1, scope: !3625)
!3633 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3287, file: !3287, line: 34, type: !3483, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3634)
!3634 = !{!3635, !3636, !3637, !3638, !3639, !3642}
!3635 = !DILocalVariable(name: "h", arg: 1, scope: !3633, file: !3287, line: 34, type: !2225)
!3636 = !DILocalVariable(name: "c", arg: 2, scope: !3633, file: !3287, line: 34, type: !2230)
!3637 = !DILocalVariable(name: "bidx", arg: 3, scope: !3633, file: !3287, line: 34, type: !103)
!3638 = !DILocalVariable(name: "b", scope: !3633, file: !3287, line: 36, type: !3490)
!3639 = !DILocalVariable(name: "first", scope: !3640, file: !3287, line: 47, type: !2230)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3287, line: 46, column: 9)
!3641 = distinct !DILexicalBlock(scope: !3633, file: !3287, line: 42, column: 6)
!3642 = !DILocalVariable(name: "second", scope: !3640, file: !3287, line: 48, type: !2230)
!3643 = !DILocation(line: 0, scope: !3633)
!3644 = !DILocation(line: 36, column: 29, scope: !3633)
!3645 = !DILocation(line: 42, column: 6, scope: !3641)
!3646 = !DILocation(line: 42, column: 28, scope: !3641)
!3647 = !DILocation(line: 42, column: 6, scope: !3633)
!3648 = !DILocation(line: 44, column: 24, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3641, file: !3287, line: 42, column: 34)
!3650 = !DILocation(line: 44, column: 23, scope: !3649)
!3651 = !DILocation(line: 44, column: 6, scope: !3649)
!3652 = !DILocation(line: 44, column: 20, scope: !3649)
!3653 = !DILocation(line: 45, column: 6, scope: !3649)
!3654 = !DILocation(line: 45, column: 11, scope: !3649)
!3655 = !DILocation(line: 46, column: 2, scope: !3649)
!3656 = !DILocation(line: 47, column: 21, scope: !3640)
!3657 = !DILocation(line: 0, scope: !3640)
!3658 = !DILocation(line: 50, column: 6, scope: !3640)
!3659 = !DILocation(line: 50, column: 11, scope: !3640)
!3660 = !DILocation(line: 51, column: 3, scope: !3640)
!3661 = !DILocation(line: 52, column: 3, scope: !3640)
!3662 = !DILocation(line: 56, column: 39, scope: !3633)
!3663 = !DILocation(line: 56, column: 19, scope: !3633)
!3664 = !DILocation(line: 56, column: 5, scope: !3633)
!3665 = !DILocation(line: 56, column: 16, scope: !3633)
!3666 = !DILocation(line: 58, column: 1, scope: !3633)
!3667 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3398, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3668)
!3668 = !{!3669, !3670}
!3669 = !DILocalVariable(name: "h", arg: 1, scope: !3667, file: !142, line: 182, type: !2225)
!3670 = !DILocalVariable(name: "c", arg: 2, scope: !3667, file: !142, line: 182, type: !2230)
!3671 = !DILocation(line: 0, scope: !3667)
!3672 = !DILocation(line: 184, column: 9, scope: !3667)
!3673 = !DILocation(line: 184, column: 2, scope: !3667)
!3674 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3287, file: !3287, line: 200, type: !3675, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3677)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!120, !3290, !102}
!3677 = !{!3678, !3679, !3680, !3681, !3682, !3683, !3684}
!3678 = !DILocalVariable(name: "heap", arg: 1, scope: !3674, file: !3287, line: 200, type: !3290)
!3679 = !DILocalVariable(name: "mem", arg: 2, scope: !3674, file: !3287, line: 200, type: !102)
!3680 = !DILocalVariable(name: "h", scope: !3674, file: !3287, line: 202, type: !2225)
!3681 = !DILocalVariable(name: "c", scope: !3674, file: !3287, line: 203, type: !2230)
!3682 = !DILocalVariable(name: "addr", scope: !3674, file: !3287, line: 204, type: !120)
!3683 = !DILocalVariable(name: "chunk_base", scope: !3674, file: !3287, line: 205, type: !120)
!3684 = !DILocalVariable(name: "chunk_sz", scope: !3674, file: !3287, line: 206, type: !120)
!3685 = !DILocation(line: 0, scope: !3674)
!3686 = !DILocation(line: 202, column: 27, scope: !3674)
!3687 = !DILocation(line: 203, column: 16, scope: !3674)
!3688 = !DILocation(line: 204, column: 16, scope: !3674)
!3689 = !DILocation(line: 205, column: 31, scope: !3674)
!3690 = !DILocation(line: 205, column: 22, scope: !3674)
!3691 = !DILocation(line: 206, column: 20, scope: !3674)
!3692 = !DILocation(line: 206, column: 37, scope: !3674)
!3693 = !DILocation(line: 208, column: 26, scope: !3674)
!3694 = !DILocation(line: 208, column: 18, scope: !3674)
!3695 = !DILocation(line: 208, column: 2, scope: !3674)
!3696 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3287, file: !3287, line: 263, type: !3697, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3699)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!102, !3290, !120}
!3699 = !{!3700, !3701, !3702, !3703, !3704, !3705}
!3700 = !DILocalVariable(name: "heap", arg: 1, scope: !3696, file: !3287, line: 263, type: !3290)
!3701 = !DILocalVariable(name: "bytes", arg: 2, scope: !3696, file: !3287, line: 263, type: !120)
!3702 = !DILocalVariable(name: "h", scope: !3696, file: !3287, line: 265, type: !2225)
!3703 = !DILocalVariable(name: "mem", scope: !3696, file: !3287, line: 266, type: !102)
!3704 = !DILocalVariable(name: "chunk_sz", scope: !3696, file: !3287, line: 272, type: !3350)
!3705 = !DILocalVariable(name: "c", scope: !3696, file: !3287, line: 273, type: !2230)
!3706 = !DILocation(line: 0, scope: !3696)
!3707 = !DILocation(line: 265, column: 27, scope: !3696)
!3708 = !DILocation(line: 268, column: 12, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3696, file: !3287, line: 268, column: 6)
!3710 = !DILocation(line: 268, column: 18, scope: !3709)
!3711 = !DILocation(line: 268, column: 21, scope: !3709)
!3712 = !DILocation(line: 268, column: 6, scope: !3696)
!3713 = !DILocation(line: 272, column: 23, scope: !3696)
!3714 = !DILocation(line: 273, column: 16, scope: !3696)
!3715 = !DILocation(line: 274, column: 8, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3696, file: !3287, line: 274, column: 6)
!3717 = !DILocation(line: 274, column: 6, scope: !3696)
!3718 = !DILocation(line: 279, column: 6, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3696, file: !3287, line: 279, column: 6)
!3720 = !DILocation(line: 279, column: 23, scope: !3719)
!3721 = !DILocation(line: 279, column: 6, scope: !3696)
!3722 = !DILocation(line: 280, column: 24, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3719, file: !3287, line: 279, column: 35)
!3724 = !DILocation(line: 280, column: 3, scope: !3723)
!3725 = !DILocation(line: 281, column: 3, scope: !3723)
!3726 = !DILocation(line: 282, column: 2, scope: !3723)
!3727 = !DILocation(line: 284, column: 2, scope: !3696)
!3728 = !DILocation(line: 286, column: 8, scope: !3696)
!3729 = !DILocation(line: 289, column: 50, scope: !3696)
!3730 = !DILocation(line: 289, column: 30, scope: !3696)
!3731 = !{i32 -4, i32 262133}
!3732 = !DILocation(line: 289, column: 2, scope: !3696)
!3733 = !DILocation(line: 298, column: 2, scope: !3696)
!3734 = !DILocation(line: 299, column: 1, scope: !3696)
!3735 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3736, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3738)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!211, !2225, !120}
!3738 = !{!3739, !3740}
!3739 = !DILocalVariable(name: "h", arg: 1, scope: !3735, file: !142, line: 256, type: !2225)
!3740 = !DILocalVariable(name: "bytes", arg: 2, scope: !3735, file: !142, line: 256, type: !120)
!3741 = !DILocation(line: 0, scope: !3735)
!3742 = !DILocation(line: 262, column: 16, scope: !3735)
!3743 = !DILocation(line: 262, column: 36, scope: !3735)
!3744 = !DILocation(line: 262, column: 30, scope: !3735)
!3745 = !DILocation(line: 262, column: 2, scope: !3735)
!3746 = distinct !DISubprogram(name: "alloc_chunk", scope: !3287, file: !3287, line: 211, type: !3747, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3749)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!2230, !2225, !3350}
!3749 = !{!3750, !3751, !3752, !3753, !3754, !3757, !3758, !3760, !3761, !3764}
!3750 = !DILocalVariable(name: "h", arg: 1, scope: !3746, file: !3287, line: 211, type: !2225)
!3751 = !DILocalVariable(name: "sz", arg: 2, scope: !3746, file: !3287, line: 211, type: !3350)
!3752 = !DILocalVariable(name: "bi", scope: !3746, file: !3287, line: 213, type: !103)
!3753 = !DILocalVariable(name: "b", scope: !3746, file: !3287, line: 214, type: !3490)
!3754 = !DILocalVariable(name: "first", scope: !3755, file: !3287, line: 233, type: !2230)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !3287, line: 232, column: 15)
!3756 = distinct !DILexicalBlock(scope: !3746, file: !3287, line: 232, column: 6)
!3757 = !DILocalVariable(name: "i", scope: !3755, file: !3287, line: 234, type: !103)
!3758 = !DILocalVariable(name: "c", scope: !3759, file: !3287, line: 236, type: !2230)
!3759 = distinct !DILexicalBlock(scope: !3755, file: !3287, line: 235, column: 6)
!3760 = !DILocalVariable(name: "bmask", scope: !3746, file: !3287, line: 249, type: !137)
!3761 = !DILocalVariable(name: "minbucket", scope: !3762, file: !3287, line: 252, type: !103)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !3287, line: 251, column: 19)
!3763 = distinct !DILexicalBlock(scope: !3746, file: !3287, line: 251, column: 6)
!3764 = !DILocalVariable(name: "c", scope: !3762, file: !3287, line: 253, type: !2230)
!3765 = !DILocation(line: 0, scope: !3746)
!3766 = !DILocation(line: 213, column: 11, scope: !3746)
!3767 = !DILocation(line: 232, column: 9, scope: !3756)
!3768 = !DILocation(line: 232, column: 6, scope: !3756)
!3769 = !DILocation(line: 232, column: 6, scope: !3746)
!3770 = !DILocation(line: 236, column: 21, scope: !3759)
!3771 = !DILocation(line: 0, scope: !3755)
!3772 = !DILocation(line: 0, scope: !3759)
!3773 = !DILocation(line: 237, column: 8, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3759, file: !3287, line: 237, column: 8)
!3775 = !DILocation(line: 237, column: 25, scope: !3774)
!3776 = !DILocation(line: 237, column: 8, scope: !3759)
!3777 = !DILocation(line: 238, column: 5, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !3287, line: 237, column: 32)
!3779 = !DILocation(line: 241, column: 14, scope: !3759)
!3780 = !DILocation(line: 241, column: 12, scope: !3759)
!3781 = !DILocation(line: 243, column: 12, scope: !3755)
!3782 = !DILocation(line: 243, column: 16, scope: !3755)
!3783 = distinct !{!3783, !3784, !3785}
!3784 = !DILocation(line: 235, column: 3, scope: !3755)
!3785 = !DILocation(line: 243, column: 35, scope: !3755)
!3786 = !DILocation(line: 249, column: 22, scope: !3746)
!3787 = !DILocation(line: 249, column: 39, scope: !3746)
!3788 = !DILocation(line: 249, column: 36, scope: !3746)
!3789 = !DILocation(line: 251, column: 12, scope: !3763)
!3790 = !DILocation(line: 251, column: 6, scope: !3746)
!3791 = !DILocation(line: 252, column: 19, scope: !3762)
!3792 = !DILocation(line: 0, scope: !3762)
!3793 = !DILocation(line: 253, column: 39, scope: !3762)
!3794 = !DILocation(line: 255, column: 3, scope: !3762)
!3795 = !DILocation(line: 261, column: 1, scope: !3746)
!3796 = distinct !DISubprogram(name: "split_chunks", scope: !3287, file: !3287, line: 109, type: !3431, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3797)
!3797 = !{!3798, !3799, !3800, !3801, !3802, !3803}
!3798 = !DILocalVariable(name: "h", arg: 1, scope: !3796, file: !3287, line: 109, type: !2225)
!3799 = !DILocalVariable(name: "lc", arg: 2, scope: !3796, file: !3287, line: 109, type: !2230)
!3800 = !DILocalVariable(name: "rc", arg: 3, scope: !3796, file: !3287, line: 109, type: !2230)
!3801 = !DILocalVariable(name: "sz0", scope: !3796, file: !3287, line: 114, type: !3350)
!3802 = !DILocalVariable(name: "lsz", scope: !3796, file: !3287, line: 115, type: !3350)
!3803 = !DILocalVariable(name: "rsz", scope: !3796, file: !3287, line: 116, type: !3350)
!3804 = !DILocation(line: 0, scope: !3796)
!3805 = !DILocation(line: 114, column: 18, scope: !3796)
!3806 = !DILocation(line: 115, column: 21, scope: !3796)
!3807 = !DILocation(line: 116, column: 22, scope: !3796)
!3808 = !DILocation(line: 118, column: 2, scope: !3796)
!3809 = !DILocation(line: 119, column: 2, scope: !3796)
!3810 = !DILocation(line: 120, column: 2, scope: !3796)
!3811 = !DILocation(line: 121, column: 25, scope: !3796)
!3812 = !DILocation(line: 121, column: 2, scope: !3796)
!3813 = !DILocation(line: 122, column: 1, scope: !3796)
!3814 = distinct !DISubprogram(name: "chunk_mem", scope: !3287, file: !3287, line: 24, type: !3815, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3817)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!102, !2225, !2230}
!3817 = !{!3818, !3819, !3820, !3821}
!3818 = !DILocalVariable(name: "h", arg: 1, scope: !3814, file: !3287, line: 24, type: !2225)
!3819 = !DILocalVariable(name: "c", arg: 2, scope: !3814, file: !3287, line: 24, type: !2230)
!3820 = !DILocalVariable(name: "buf", scope: !3814, file: !3287, line: 26, type: !2220)
!3821 = !DILocalVariable(name: "ret", scope: !3814, file: !3287, line: 27, type: !1716)
!3822 = !DILocation(line: 0, scope: !3814)
!3823 = !DILocation(line: 26, column: 22, scope: !3814)
!3824 = !DILocation(line: 27, column: 38, scope: !3814)
!3825 = !DILocation(line: 31, column: 2, scope: !3814)
!3826 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !3287, file: !3287, line: 17, type: !3827, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3829)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{null, !2225, !120}
!3829 = !{!3830, !3831}
!3830 = !DILocalVariable(name: "h", arg: 1, scope: !3826, file: !3287, line: 17, type: !2225)
!3831 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3826, file: !3287, line: 17, type: !120)
!3832 = !DILocation(line: 0, scope: !3826)
!3833 = !DILocation(line: 19, column: 5, scope: !3826)
!3834 = !DILocation(line: 19, column: 21, scope: !3826)
!3835 = !DILocation(line: 20, column: 27, scope: !3826)
!3836 = !DILocation(line: 20, column: 25, scope: !3826)
!3837 = !DILocation(line: 21, column: 1, scope: !3826)
!3838 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3287, file: !3287, line: 301, type: !3839, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!102, !3290, !120, !120}
!3841 = !{!3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853}
!3842 = !DILocalVariable(name: "heap", arg: 1, scope: !3838, file: !3287, line: 301, type: !3290)
!3843 = !DILocalVariable(name: "align", arg: 2, scope: !3838, file: !3287, line: 301, type: !120)
!3844 = !DILocalVariable(name: "bytes", arg: 3, scope: !3838, file: !3287, line: 301, type: !120)
!3845 = !DILocalVariable(name: "h", scope: !3838, file: !3287, line: 303, type: !2225)
!3846 = !DILocalVariable(name: "gap", scope: !3838, file: !3287, line: 304, type: !120)
!3847 = !DILocalVariable(name: "rew", scope: !3838, file: !3287, line: 304, type: !120)
!3848 = !DILocalVariable(name: "padded_sz", scope: !3838, file: !3287, line: 335, type: !3350)
!3849 = !DILocalVariable(name: "c0", scope: !3838, file: !3287, line: 336, type: !2230)
!3850 = !DILocalVariable(name: "mem", scope: !3838, file: !3287, line: 341, type: !1716)
!3851 = !DILocalVariable(name: "end", scope: !3838, file: !3287, line: 345, type: !2220)
!3852 = !DILocalVariable(name: "c", scope: !3838, file: !3287, line: 348, type: !2230)
!3853 = !DILocalVariable(name: "c_end", scope: !3838, file: !3287, line: 349, type: !2230)
!3854 = !DILocation(line: 0, scope: !3838)
!3855 = !DILocation(line: 303, column: 27, scope: !3838)
!3856 = !DILocation(line: 313, column: 16, scope: !3838)
!3857 = !DILocation(line: 313, column: 14, scope: !3838)
!3858 = !DILocation(line: 314, column: 12, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3838, file: !3287, line: 314, column: 6)
!3860 = !DILocation(line: 314, column: 6, scope: !3838)
!3861 = !DILocation(line: 315, column: 9, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !3287, line: 314, column: 20)
!3863 = !DILocation(line: 316, column: 9, scope: !3862)
!3864 = !DILocation(line: 318, column: 13, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3287, line: 318, column: 7)
!3866 = distinct !DILexicalBlock(scope: !3859, file: !3287, line: 317, column: 9)
!3867 = !DILocation(line: 318, column: 7, scope: !3866)
!3868 = !DILocation(line: 319, column: 11, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3865, file: !3287, line: 318, column: 39)
!3870 = !DILocation(line: 319, column: 4, scope: !3869)
!3871 = !DILocation(line: 0, scope: !3859)
!3872 = !DILocation(line: 326, column: 12, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3838, file: !3287, line: 326, column: 6)
!3874 = !DILocation(line: 326, column: 17, scope: !3873)
!3875 = !DILocation(line: 326, column: 20, scope: !3873)
!3876 = !DILocation(line: 326, column: 6, scope: !3838)
!3877 = !DILocation(line: 335, column: 50, scope: !3838)
!3878 = !DILocation(line: 335, column: 58, scope: !3838)
!3879 = !DILocation(line: 335, column: 24, scope: !3838)
!3880 = !DILocation(line: 336, column: 17, scope: !3838)
!3881 = !DILocation(line: 338, column: 9, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3838, file: !3287, line: 338, column: 6)
!3883 = !DILocation(line: 338, column: 6, scope: !3838)
!3884 = !DILocation(line: 341, column: 17, scope: !3838)
!3885 = !DILocation(line: 344, column: 20, scope: !3838)
!3886 = !DILocation(line: 344, column: 8, scope: !3838)
!3887 = !DILocation(line: 344, column: 47, scope: !3838)
!3888 = !DILocation(line: 345, column: 39, scope: !3838)
!3889 = !DILocation(line: 348, column: 16, scope: !3838)
!3890 = !DILocation(line: 349, column: 26, scope: !3838)
!3891 = !DILocation(line: 349, column: 24, scope: !3838)
!3892 = !DILocation(line: 353, column: 8, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3838, file: !3287, line: 353, column: 6)
!3894 = !DILocation(line: 353, column: 6, scope: !3838)
!3895 = !DILocation(line: 354, column: 3, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !3287, line: 353, column: 14)
!3897 = !DILocation(line: 355, column: 3, scope: !3896)
!3898 = !DILocation(line: 356, column: 2, scope: !3896)
!3899 = !DILocation(line: 359, column: 6, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3838, file: !3287, line: 359, column: 6)
!3901 = !DILocation(line: 359, column: 24, scope: !3900)
!3902 = !DILocation(line: 359, column: 6, scope: !3838)
!3903 = !DILocation(line: 360, column: 3, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3900, file: !3287, line: 359, column: 33)
!3905 = !DILocation(line: 361, column: 3, scope: !3904)
!3906 = !DILocation(line: 362, column: 2, scope: !3904)
!3907 = !DILocation(line: 364, column: 2, scope: !3838)
!3908 = !DILocation(line: 367, column: 50, scope: !3838)
!3909 = !DILocation(line: 367, column: 30, scope: !3838)
!3910 = !DILocation(line: 367, column: 2, scope: !3838)
!3911 = !DILocation(line: 377, column: 1, scope: !3838)
!3912 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3287, file: !3287, line: 379, type: !3913, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !3915)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!102, !3290, !102, !120, !120}
!3915 = !{!3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3931, !3932}
!3916 = !DILocalVariable(name: "heap", arg: 1, scope: !3912, file: !3287, line: 379, type: !3290)
!3917 = !DILocalVariable(name: "ptr", arg: 2, scope: !3912, file: !3287, line: 379, type: !102)
!3918 = !DILocalVariable(name: "align", arg: 3, scope: !3912, file: !3287, line: 380, type: !120)
!3919 = !DILocalVariable(name: "bytes", arg: 4, scope: !3912, file: !3287, line: 380, type: !120)
!3920 = !DILocalVariable(name: "h", scope: !3912, file: !3287, line: 382, type: !2225)
!3921 = !DILocalVariable(name: "c", scope: !3912, file: !3287, line: 399, type: !2230)
!3922 = !DILocalVariable(name: "rc", scope: !3912, file: !3287, line: 400, type: !2230)
!3923 = !DILocalVariable(name: "align_gap", scope: !3912, file: !3287, line: 401, type: !120)
!3924 = !DILocalVariable(name: "chunks_need", scope: !3912, file: !3287, line: 402, type: !3350)
!3925 = !DILocalVariable(name: "split_size", scope: !3926, file: !3287, line: 435, type: !3350)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !3287, line: 433, column: 61)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !3287, line: 432, column: 13)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !3287, line: 409, column: 13)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !3287, line: 406, column: 13)
!3930 = distinct !DILexicalBlock(scope: !3912, file: !3287, line: 404, column: 6)
!3931 = !DILocalVariable(name: "ptr2", scope: !3912, file: !3287, line: 474, type: !102)
!3932 = !DILocalVariable(name: "prev_size", scope: !3933, file: !3287, line: 477, type: !120)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !3287, line: 476, column: 20)
!3934 = distinct !DILexicalBlock(scope: !3912, file: !3287, line: 476, column: 6)
!3935 = !DILocation(line: 0, scope: !3912)
!3936 = !DILocation(line: 382, column: 27, scope: !3912)
!3937 = !DILocation(line: 385, column: 10, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3912, file: !3287, line: 385, column: 6)
!3939 = !DILocation(line: 385, column: 6, scope: !3912)
!3940 = !DILocation(line: 386, column: 10, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !3287, line: 385, column: 19)
!3942 = !DILocation(line: 386, column: 3, scope: !3941)
!3943 = !DILocation(line: 388, column: 12, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3912, file: !3287, line: 388, column: 6)
!3945 = !DILocation(line: 388, column: 6, scope: !3912)
!3946 = !DILocation(line: 389, column: 3, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3944, file: !3287, line: 388, column: 18)
!3948 = !DILocation(line: 390, column: 3, scope: !3947)
!3949 = !DILocation(line: 395, column: 6, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3912, file: !3287, line: 395, column: 6)
!3951 = !DILocation(line: 395, column: 6, scope: !3912)
!3952 = !DILocation(line: 399, column: 16, scope: !3912)
!3953 = !DILocation(line: 400, column: 17, scope: !3912)
!3954 = !DILocation(line: 401, column: 49, scope: !3912)
!3955 = !DILocation(line: 401, column: 36, scope: !3912)
!3956 = !DILocation(line: 402, column: 52, scope: !3912)
!3957 = !DILocation(line: 402, column: 26, scope: !3912)
!3958 = !DILocation(line: 404, column: 6, scope: !3930)
!3959 = !DILocation(line: 404, column: 12, scope: !3930)
!3960 = !DILocation(line: 404, column: 40, scope: !3930)
!3961 = !DILocation(line: 404, column: 31, scope: !3930)
!3962 = !DILocation(line: 404, column: 6, scope: !3912)
!3963 = !DILocation(line: 406, column: 13, scope: !3929)
!3964 = !DILocation(line: 406, column: 30, scope: !3929)
!3965 = !DILocation(line: 406, column: 13, scope: !3930)
!3966 = !DILocation(line: 409, column: 30, scope: !3928)
!3967 = !DILocation(line: 409, column: 13, scope: !3929)
!3968 = !DILocation(line: 417, column: 22, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3928, file: !3287, line: 409, column: 45)
!3970 = !DILocation(line: 417, column: 37, scope: !3969)
!3971 = !DILocation(line: 416, column: 6, scope: !3969)
!3972 = !DILocation(line: 416, column: 22, scope: !3969)
!3973 = !DILocation(line: 420, column: 24, scope: !3969)
!3974 = !DILocation(line: 420, column: 3, scope: !3969)
!3975 = !DILocation(line: 421, column: 3, scope: !3969)
!3976 = !DILocation(line: 422, column: 3, scope: !3969)
!3977 = !DILocation(line: 431, column: 3, scope: !3969)
!3978 = !DILocation(line: 432, column: 14, scope: !3927)
!3979 = !DILocation(line: 432, column: 32, scope: !3927)
!3980 = !DILocation(line: 433, column: 26, scope: !3927)
!3981 = !DILocation(line: 433, column: 24, scope: !3927)
!3982 = !DILocation(line: 433, column: 44, scope: !3927)
!3983 = !DILocation(line: 432, column: 13, scope: !3928)
!3984 = !DILocation(line: 435, column: 38, scope: !3926)
!3985 = !DILocation(line: 0, scope: !3926)
!3986 = !DILocation(line: 442, column: 42, scope: !3926)
!3987 = !DILocation(line: 442, column: 3, scope: !3926)
!3988 = !DILocation(line: 445, column: 3, scope: !3926)
!3989 = !DILocation(line: 447, column: 20, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3926, file: !3287, line: 447, column: 7)
!3991 = !DILocation(line: 447, column: 18, scope: !3990)
!3992 = !DILocation(line: 447, column: 7, scope: !3926)
!3993 = !DILocation(line: 448, column: 27, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3990, file: !3287, line: 447, column: 39)
!3995 = !DILocation(line: 448, column: 4, scope: !3994)
!3996 = !DILocation(line: 449, column: 4, scope: !3994)
!3997 = !DILocation(line: 450, column: 3, scope: !3994)
!3998 = !DILocation(line: 452, column: 3, scope: !3926)
!3999 = !DILocation(line: 453, column: 3, scope: !3926)
!4000 = !DILocation(line: 474, column: 15, scope: !3912)
!4001 = !DILocation(line: 476, column: 11, scope: !3934)
!4002 = !DILocation(line: 476, column: 6, scope: !3912)
!4003 = !DILocation(line: 477, column: 42, scope: !3933)
!4004 = !DILocation(line: 477, column: 22, scope: !3933)
!4005 = !DILocation(line: 477, column: 60, scope: !3933)
!4006 = !DILocation(line: 0, scope: !3933)
!4007 = !DILocation(line: 479, column: 21, scope: !3933)
!4008 = !DILocation(line: 479, column: 3, scope: !3933)
!4009 = !DILocation(line: 480, column: 3, scope: !3933)
!4010 = !DILocation(line: 481, column: 2, scope: !3933)
!4011 = !DILocation(line: 483, column: 1, scope: !3912)
!4012 = distinct !DISubprogram(name: "sys_heap_init", scope: !3287, file: !3287, line: 485, type: !4013, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2217, retainedNodes: !4015)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{null, !3290, !102, !120}
!4015 = !{!4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025}
!4016 = !DILocalVariable(name: "heap", arg: 1, scope: !4012, file: !3287, line: 485, type: !3290)
!4017 = !DILocalVariable(name: "mem", arg: 2, scope: !4012, file: !3287, line: 485, type: !102)
!4018 = !DILocalVariable(name: "bytes", arg: 3, scope: !4012, file: !3287, line: 485, type: !120)
!4019 = !DILocalVariable(name: "addr", scope: !4012, file: !3287, line: 502, type: !22)
!4020 = !DILocalVariable(name: "end", scope: !4012, file: !3287, line: 503, type: !22)
!4021 = !DILocalVariable(name: "heap_sz", scope: !4012, file: !3287, line: 504, type: !3350)
!4022 = !DILocalVariable(name: "h", scope: !4012, file: !3287, line: 509, type: !2225)
!4023 = !DILocalVariable(name: "nb_buckets", scope: !4012, file: !3287, line: 520, type: !103)
!4024 = !DILocalVariable(name: "chunk0_size", scope: !4012, file: !3287, line: 521, type: !3350)
!4025 = !DILocalVariable(name: "i", scope: !4026, file: !3287, line: 526, type: !103)
!4026 = distinct !DILexicalBlock(scope: !4012, file: !3287, line: 526, column: 2)
!4027 = !DILocation(line: 0, scope: !4012)
!4028 = !DILocation(line: 499, column: 8, scope: !4012)
!4029 = !DILocation(line: 502, column: 19, scope: !4012)
!4030 = !DILocation(line: 503, column: 18, scope: !4012)
!4031 = !DILocation(line: 504, column: 27, scope: !4012)
!4032 = !DILocation(line: 504, column: 35, scope: !4012)
!4033 = !DILocation(line: 509, column: 21, scope: !4012)
!4034 = !DILocation(line: 510, column: 8, scope: !4012)
!4035 = !DILocation(line: 510, column: 13, scope: !4012)
!4036 = !DILocation(line: 511, column: 5, scope: !4012)
!4037 = !DILocation(line: 511, column: 15, scope: !4012)
!4038 = !DILocation(line: 512, column: 5, scope: !4012)
!4039 = !DILocation(line: 512, column: 19, scope: !4012)
!4040 = !DILocation(line: 515, column: 5, scope: !4012)
!4041 = !DILocation(line: 515, column: 16, scope: !4012)
!4042 = !DILocation(line: 516, column: 5, scope: !4012)
!4043 = !DILocation(line: 516, column: 21, scope: !4012)
!4044 = !DILocation(line: 517, column: 5, scope: !4012)
!4045 = !DILocation(line: 517, column: 25, scope: !4012)
!4046 = !DILocation(line: 520, column: 19, scope: !4012)
!4047 = !DILocation(line: 522, column: 21, scope: !4012)
!4048 = !DILocation(line: 521, column: 56, scope: !4012)
!4049 = !DILocation(line: 521, column: 26, scope: !4012)
!4050 = !DILocation(line: 0, scope: !4026)
!4051 = !DILocation(line: 526, column: 20, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4026, file: !3287, line: 526, column: 2)
!4053 = !DILocation(line: 526, column: 2, scope: !4026)
!4054 = !DILocation(line: 531, column: 2, scope: !4012)
!4055 = !DILocation(line: 532, column: 2, scope: !4012)
!4056 = !DILocation(line: 533, column: 2, scope: !4012)
!4057 = !DILocation(line: 536, column: 41, scope: !4012)
!4058 = !DILocation(line: 536, column: 2, scope: !4012)
!4059 = !DILocation(line: 537, column: 2, scope: !4012)
!4060 = !DILocation(line: 540, column: 2, scope: !4012)
!4061 = !DILocation(line: 541, column: 2, scope: !4012)
!4062 = !DILocation(line: 542, column: 2, scope: !4012)
!4063 = !DILocation(line: 544, column: 2, scope: !4012)
!4064 = !DILocation(line: 545, column: 1, scope: !4012)
!4065 = !DILocation(line: 527, column: 17, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4052, file: !3287, line: 526, column: 39)
!4067 = !DILocation(line: 527, column: 22, scope: !4066)
!4068 = !DILocation(line: 526, column: 35, scope: !4052)
!4069 = distinct !{!4069, !4053, !4070}
!4070 = !DILocation(line: 528, column: 2, scope: !4026)
!4071 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !4072, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4094)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!211, !4074}
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 32)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !4076)
!4076 = !{!4077, !4092, !4093}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4075, file: !113, line: 57, baseType: !4078, size: 32)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 32)
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !4080)
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086, !4087}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !4079, file: !142, line: 69, baseType: !2229, size: 64)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !4079, file: !142, line: 70, baseType: !2230, size: 32, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !4079, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4079, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4079, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4079, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !4079, file: !142, line: 77, baseType: !4088, offset: 224)
!4088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4089, elements: !2241)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !4090)
!4090 = !{!4091}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4089, file: !142, line: 65, baseType: !2230, size: 32)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4075, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4075, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!4094 = !{!4095, !4096, !4097, !4098, !4099, !4100, !4106, !4108, !4111, !4112, !4113, !4114, !4115, !4117, !4120}
!4095 = !DILocalVariable(name: "heap", arg: 1, scope: !4071, file: !134, line: 88, type: !4074)
!4096 = !DILocalVariable(name: "h", scope: !4071, file: !134, line: 90, type: !4078)
!4097 = !DILocalVariable(name: "c", scope: !4071, file: !134, line: 91, type: !2230)
!4098 = !DILocalVariable(name: "allocated_bytes", scope: !4071, file: !134, line: 112, type: !120)
!4099 = !DILocalVariable(name: "free_bytes", scope: !4071, file: !134, line: 112, type: !120)
!4100 = !DILocalVariable(name: "stat", scope: !4071, file: !134, line: 113, type: !4101)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2948, line: 24, size: 96, elements: !4102)
!4102 = !{!4103, !4104, !4105}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !4101, file: !2948, line: 25, baseType: !120, size: 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !4101, file: !2948, line: 26, baseType: !120, size: 32, offset: 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !4101, file: !2948, line: 27, baseType: !120, size: 32, offset: 64)
!4106 = !DILocalVariable(name: "b", scope: !4107, file: !134, line: 127, type: !103)
!4107 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 127, column: 2)
!4108 = !DILocalVariable(name: "c0", scope: !4109, file: !134, line: 128, type: !2230)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !134, line: 127, column: 57)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !134, line: 127, column: 2)
!4111 = !DILocalVariable(name: "n", scope: !4109, file: !134, line: 129, type: !137)
!4112 = !DILocalVariable(name: "empty", scope: !4109, file: !134, line: 141, type: !211)
!4113 = !DILocalVariable(name: "zero", scope: !4109, file: !134, line: 142, type: !211)
!4114 = !DILocalVariable(name: "prev_chunk", scope: !4071, file: !134, line: 159, type: !2230)
!4115 = !DILocalVariable(name: "b", scope: !4116, file: !134, line: 179, type: !103)
!4116 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 179, column: 2)
!4117 = !DILocalVariable(name: "c0", scope: !4118, file: !134, line: 180, type: !2230)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !134, line: 179, column: 57)
!4119 = distinct !DILexicalBlock(scope: !4116, file: !134, line: 179, column: 2)
!4120 = !DILocalVariable(name: "n", scope: !4118, file: !134, line: 181, type: !103)
!4121 = !DILocation(line: 0, scope: !4071)
!4122 = !DILocation(line: 90, column: 27, scope: !4071)
!4123 = !DILocation(line: 96, column: 11, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 96, column: 2)
!4125 = !DILocation(line: 96, column: 32, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4124, file: !134, line: 96, column: 2)
!4127 = !DILocation(line: 96, column: 2, scope: !4124)
!4128 = !DILocation(line: 97, column: 8, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !134, line: 97, column: 7)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !134, line: 96, column: 71)
!4131 = !DILocation(line: 97, column: 7, scope: !4130)
!4132 = !DILocation(line: 96, column: 52, scope: !4126)
!4133 = distinct !{!4133, !4127, !4134}
!4134 = !DILocation(line: 100, column: 2, scope: !4124)
!4135 = !DILocation(line: 0, scope: !4124)
!4136 = !DILocation(line: 101, column: 8, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 101, column: 6)
!4138 = !DILocation(line: 101, column: 6, scope: !4071)
!4139 = !DILocation(line: 112, column: 2, scope: !4071)
!4140 = !DILocation(line: 113, column: 2, scope: !4071)
!4141 = !DILocation(line: 113, column: 26, scope: !4071)
!4142 = !DILocation(line: 115, column: 2, scope: !4071)
!4143 = !DILocation(line: 116, column: 2, scope: !4071)
!4144 = !DILocation(line: 117, column: 12, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 117, column: 6)
!4146 = !DILocation(line: 117, column: 31, scope: !4145)
!4147 = !DILocation(line: 117, column: 28, scope: !4145)
!4148 = !DILocation(line: 117, column: 48, scope: !4145)
!4149 = !DILocation(line: 118, column: 12, scope: !4145)
!4150 = !DILocation(line: 118, column: 26, scope: !4145)
!4151 = !DILocation(line: 118, column: 23, scope: !4145)
!4152 = !DILocation(line: 117, column: 6, scope: !4071)
!4153 = !DILocation(line: 0, scope: !4107)
!4154 = !DILocation(line: 127, column: 40, scope: !4110)
!4155 = !DILocation(line: 127, column: 23, scope: !4110)
!4156 = !DILocation(line: 127, column: 20, scope: !4110)
!4157 = !DILocation(line: 127, column: 2, scope: !4107)
!4158 = !DILocation(line: 128, column: 32, scope: !4109)
!4159 = !DILocation(line: 0, scope: !4109)
!4160 = !DILocation(line: 133, column: 18, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !134, line: 133, column: 3)
!4162 = distinct !DILexicalBlock(scope: !4109, file: !134, line: 133, column: 3)
!4163 = !DILocation(line: 133, column: 23, scope: !4161)
!4164 = !DILocation(line: 141, column: 20, scope: !4109)
!4165 = !DILocation(line: 141, column: 36, scope: !4109)
!4166 = !DILocation(line: 141, column: 34, scope: !4109)
!4167 = !DILocation(line: 141, column: 44, scope: !4109)
!4168 = !DILocation(line: 144, column: 7, scope: !4109)
!4169 = !DILocation(line: 133, column: 29, scope: !4161)
!4170 = !DILocation(line: 133, column: 34, scope: !4161)
!4171 = !DILocation(line: 133, column: 3, scope: !4162)
!4172 = !DILocation(line: 135, column: 9, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !134, line: 135, column: 8)
!4174 = distinct !DILexicalBlock(scope: !4161, file: !134, line: 134, column: 40)
!4175 = !DILocation(line: 135, column: 8, scope: !4174)
!4176 = !DILocation(line: 138, column: 4, scope: !4174)
!4177 = !DILocation(line: 134, column: 9, scope: !4161)
!4178 = !DILocation(line: 134, column: 17, scope: !4161)
!4179 = distinct !{!4179, !4171, !4180}
!4180 = !DILocation(line: 139, column: 3, scope: !4162)
!4181 = !DILocation(line: 142, column: 17, scope: !4109)
!4182 = !DILocation(line: 144, column: 13, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4109, file: !134, line: 144, column: 7)
!4184 = !DILocation(line: 148, column: 13, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4109, file: !134, line: 148, column: 7)
!4186 = !DILocation(line: 148, column: 30, scope: !4185)
!4187 = !DILocation(line: 148, column: 35, scope: !4185)
!4188 = !DILocation(line: 148, column: 7, scope: !4109)
!4189 = !DILocation(line: 127, column: 53, scope: !4110)
!4190 = distinct !{!4190, !4157, !4191}
!4191 = !DILocation(line: 151, column: 2, scope: !4107)
!4192 = !DILocation(line: 160, column: 37, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !134, line: 160, column: 2)
!4194 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 160, column: 2)
!4195 = !DILocation(line: 160, column: 11, scope: !4194)
!4196 = !DILocation(line: 160, column: 32, scope: !4193)
!4197 = !DILocation(line: 160, column: 2, scope: !4194)
!4198 = !DILocation(line: 161, column: 8, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !134, line: 161, column: 7)
!4200 = distinct !DILexicalBlock(scope: !4193, file: !134, line: 160, column: 71)
!4201 = !DILocation(line: 161, column: 25, scope: !4199)
!4202 = !DILocation(line: 164, column: 7, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4200, file: !134, line: 164, column: 7)
!4204 = !DILocation(line: 164, column: 24, scope: !4203)
!4205 = !DILocation(line: 164, column: 7, scope: !4200)
!4206 = !DILocation(line: 169, column: 3, scope: !4200)
!4207 = !DILocation(line: 160, column: 52, scope: !4193)
!4208 = distinct !{!4208, !4197, !4209}
!4209 = !DILocation(line: 170, column: 2, scope: !4194)
!4210 = !DILocation(line: 0, scope: !4194)
!4211 = !DILocation(line: 171, column: 8, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 171, column: 6)
!4213 = !DILocation(line: 171, column: 6, scope: !4071)
!4214 = !DILocation(line: 0, scope: !4116)
!4215 = !DILocation(line: 179, column: 23, scope: !4119)
!4216 = !DILocation(line: 179, column: 20, scope: !4119)
!4217 = !DILocation(line: 179, column: 2, scope: !4116)
!4218 = !DILocation(line: 180, column: 32, scope: !4118)
!4219 = !DILocation(line: 0, scope: !4118)
!4220 = !DILocation(line: 183, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4118, file: !134, line: 183, column: 7)
!4222 = !DILocation(line: 183, column: 7, scope: !4118)
!4223 = !DILocation(line: 188, column: 8, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !134, line: 188, column: 8)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !134, line: 187, column: 67)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !134, line: 187, column: 3)
!4227 = distinct !DILexicalBlock(scope: !4118, file: !134, line: 187, column: 3)
!4228 = !DILocation(line: 188, column: 8, scope: !4225)
!4229 = !DILocation(line: 191, column: 4, scope: !4225)
!4230 = !DILocation(line: 187, column: 44, scope: !4226)
!4231 = !DILocation(line: 187, column: 23, scope: !4226)
!4232 = !DILocation(line: 187, column: 3, scope: !4227)
!4233 = distinct !{!4233, !4232, !4234}
!4234 = !DILocation(line: 192, column: 3, scope: !4227)
!4235 = !DILocation(line: 179, column: 40, scope: !4119)
!4236 = !DILocation(line: 179, column: 53, scope: !4119)
!4237 = distinct !{!4237, !4217, !4238}
!4238 = !DILocation(line: 193, column: 2, scope: !4116)
!4239 = !DILocation(line: 198, column: 37, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !134, line: 198, column: 2)
!4241 = distinct !DILexicalBlock(scope: !4071, file: !134, line: 198, column: 2)
!4242 = !DILocation(line: 198, column: 11, scope: !4241)
!4243 = !DILocation(line: 198, column: 32, scope: !4240)
!4244 = !DILocation(line: 198, column: 2, scope: !4241)
!4245 = !DILocation(line: 199, column: 25, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4240, file: !134, line: 198, column: 71)
!4247 = !DILocation(line: 199, column: 24, scope: !4246)
!4248 = !DILocation(line: 199, column: 3, scope: !4246)
!4249 = !DILocation(line: 198, column: 52, scope: !4240)
!4250 = distinct !{!4250, !4244, !4251}
!4251 = !DILocation(line: 200, column: 2, scope: !4241)
!4252 = !DILocation(line: 202, column: 1, scope: !4071)
!4253 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !4254, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4256)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!2230, !4078, !2230}
!4256 = !{!4257, !4258}
!4257 = !DILocalVariable(name: "h", arg: 1, scope: !4253, file: !142, line: 204, type: !4078)
!4258 = !DILocalVariable(name: "c", arg: 2, scope: !4253, file: !142, line: 204, type: !2230)
!4259 = !DILocation(line: 0, scope: !4253)
!4260 = !DILocation(line: 206, column: 13, scope: !4253)
!4261 = !DILocation(line: 206, column: 11, scope: !4253)
!4262 = !DILocation(line: 206, column: 2, scope: !4253)
!4263 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !4264, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4266)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!211, !4078, !2230}
!4266 = !{!4267, !4268}
!4267 = !DILocalVariable(name: "h", arg: 1, scope: !4263, file: !134, line: 31, type: !4078)
!4268 = !DILocalVariable(name: "c", arg: 2, scope: !4263, file: !134, line: 31, type: !2230)
!4269 = !DILocation(line: 0, scope: !4263)
!4270 = !DILocation(line: 33, column: 2, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !134, line: 33, column: 2)
!4272 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 33, column: 2)
!4273 = !DILocation(line: 33, column: 2, scope: !4272)
!4274 = !DILocation(line: 34, column: 2, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !134, line: 34, column: 2)
!4276 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 34, column: 2)
!4277 = !DILocation(line: 34, column: 2, scope: !4276)
!4278 = !DILocation(line: 35, column: 2, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !134, line: 35, column: 2)
!4280 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 35, column: 2)
!4281 = !DILocation(line: 35, column: 2, scope: !4280)
!4282 = !DILocation(line: 36, column: 2, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !134, line: 36, column: 2)
!4284 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 36, column: 2)
!4285 = !DILocation(line: 36, column: 2, scope: !4284)
!4286 = !DILocation(line: 37, column: 2, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !134, line: 37, column: 2)
!4288 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 37, column: 2)
!4289 = !DILocation(line: 37, column: 2, scope: !4288)
!4290 = !DILocation(line: 38, column: 6, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4263, file: !134, line: 38, column: 6)
!4292 = !DILocation(line: 38, column: 6, scope: !4263)
!4293 = !DILocation(line: 41, column: 3, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !134, line: 41, column: 3)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 41, column: 3)
!4296 = distinct !DILexicalBlock(scope: !4291, file: !134, line: 40, column: 9)
!4297 = !DILocation(line: 41, column: 3, scope: !4295)
!4298 = !DILocation(line: 42, column: 3, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4300, file: !134, line: 42, column: 3)
!4300 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 42, column: 3)
!4301 = !DILocation(line: 42, column: 3, scope: !4300)
!4302 = !DILocation(line: 44, column: 4, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !134, line: 44, column: 4)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !134, line: 44, column: 4)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !134, line: 43, column: 32)
!4306 = distinct !DILexicalBlock(scope: !4296, file: !134, line: 43, column: 7)
!4307 = !DILocation(line: 44, column: 4, scope: !4304)
!4308 = !DILocation(line: 45, column: 4, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !134, line: 45, column: 4)
!4310 = distinct !DILexicalBlock(scope: !4305, file: !134, line: 45, column: 4)
!4311 = !DILocation(line: 45, column: 4, scope: !4310)
!4312 = !DILocation(line: 48, column: 2, scope: !4263)
!4313 = !DILocation(line: 49, column: 1, scope: !4263)
!4314 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !4315, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4317)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{null, !4078, !2278, !2278}
!4317 = !{!4318, !4319, !4320, !4321}
!4318 = !DILocalVariable(name: "h", arg: 1, scope: !4314, file: !134, line: 71, type: !4078)
!4319 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !4314, file: !134, line: 71, type: !2278)
!4320 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !4314, file: !134, line: 72, type: !2278)
!4321 = !DILocalVariable(name: "c", scope: !4314, file: !134, line: 74, type: !2230)
!4322 = !DILocation(line: 0, scope: !4314)
!4323 = !DILocation(line: 76, column: 15, scope: !4314)
!4324 = !DILocation(line: 77, column: 14, scope: !4314)
!4325 = !DILocation(line: 79, column: 11, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4314, file: !134, line: 79, column: 2)
!4327 = !DILocation(line: 79, column: 37, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4326, file: !134, line: 79, column: 2)
!4329 = !DILocation(line: 79, column: 32, scope: !4328)
!4330 = !DILocation(line: 79, column: 2, scope: !4326)
!4331 = !DILocation(line: 80, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !134, line: 80, column: 7)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !134, line: 79, column: 71)
!4334 = !DILocation(line: 0, scope: !4332)
!4335 = !DILocation(line: 79, column: 52, scope: !4328)
!4336 = distinct !{!4336, !4330, !4337}
!4337 = !DILocation(line: 85, column: 2, scope: !4326)
!4338 = !DILocation(line: 86, column: 1, scope: !4314)
!4339 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !4340, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4343)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!103, !4074, !4342}
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 32)
!4343 = !{!4344, !4345}
!4344 = !DILocalVariable(name: "heap", arg: 1, scope: !4339, file: !134, line: 416, type: !4074)
!4345 = !DILocalVariable(name: "stats", arg: 2, scope: !4339, file: !134, line: 417, type: !4342)
!4346 = !DILocation(line: 0, scope: !4339)
!4347 = !DILocation(line: 419, column: 12, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4339, file: !134, line: 419, column: 6)
!4349 = !DILocation(line: 419, column: 21, scope: !4348)
!4350 = !DILocation(line: 423, column: 28, scope: !4339)
!4351 = !DILocation(line: 423, column: 34, scope: !4339)
!4352 = !DILocation(line: 423, column: 9, scope: !4339)
!4353 = !DILocation(line: 423, column: 20, scope: !4339)
!4354 = !DILocation(line: 424, column: 33, scope: !4339)
!4355 = !DILocation(line: 424, column: 39, scope: !4339)
!4356 = !DILocation(line: 424, column: 9, scope: !4339)
!4357 = !DILocation(line: 424, column: 25, scope: !4339)
!4358 = !DILocation(line: 425, column: 37, scope: !4339)
!4359 = !DILocation(line: 425, column: 43, scope: !4339)
!4360 = !DILocation(line: 425, column: 9, scope: !4339)
!4361 = !DILocation(line: 425, column: 29, scope: !4339)
!4362 = !DILocation(line: 427, column: 2, scope: !4339)
!4363 = !DILocation(line: 428, column: 1, scope: !4339)
!4364 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !4365, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4367)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!103, !4078, !3350}
!4367 = !{!4368, !4369, !4370}
!4368 = !DILocalVariable(name: "h", arg: 1, scope: !4364, file: !142, line: 250, type: !4078)
!4369 = !DILocalVariable(name: "sz", arg: 2, scope: !4364, file: !142, line: 250, type: !3350)
!4370 = !DILocalVariable(name: "usable_sz", scope: !4364, file: !142, line: 252, type: !32)
!4371 = !DILocation(line: 0, scope: !4364)
!4372 = !DILocation(line: 253, column: 14, scope: !4364)
!4373 = !DILocation(line: 253, column: 12, scope: !4364)
!4374 = !DILocation(line: 253, column: 2, scope: !4364)
!4375 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !4376, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4378)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{null, !4078, !2230, !211}
!4378 = !{!4379, !4380, !4381, !4382, !4383}
!4379 = !DILocalVariable(name: "h", arg: 1, scope: !4375, file: !142, line: 147, type: !4078)
!4380 = !DILocalVariable(name: "c", arg: 2, scope: !4375, file: !142, line: 147, type: !2230)
!4381 = !DILocalVariable(name: "used", arg: 3, scope: !4375, file: !142, line: 147, type: !211)
!4382 = !DILocalVariable(name: "buf", scope: !4375, file: !142, line: 149, type: !153)
!4383 = !DILocalVariable(name: "cmem", scope: !4375, file: !142, line: 150, type: !102)
!4384 = !DILocation(line: 0, scope: !4375)
!4385 = !DILocation(line: 149, column: 22, scope: !4375)
!4386 = !DILocation(line: 0, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !142, line: 159, column: 7)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !142, line: 158, column: 9)
!4389 = distinct !DILexicalBlock(scope: !4375, file: !142, line: 152, column: 6)
!4390 = !DILocation(line: 159, column: 7, scope: !4388)
!4391 = !DILocation(line: 165, column: 1, scope: !4375)
!4392 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !4254, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4393)
!4393 = !{!4394, !4395}
!4394 = !DILocalVariable(name: "h", arg: 1, scope: !4392, file: !142, line: 182, type: !4078)
!4395 = !DILocalVariable(name: "c", arg: 2, scope: !4392, file: !142, line: 182, type: !2230)
!4396 = !DILocation(line: 0, scope: !4392)
!4397 = !DILocation(line: 184, column: 9, scope: !4392)
!4398 = !DILocation(line: 184, column: 2, scope: !4392)
!4399 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !4264, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4400)
!4400 = !{!4401, !4402}
!4401 = !DILocalVariable(name: "h", arg: 1, scope: !4399, file: !142, line: 137, type: !4078)
!4402 = !DILocalVariable(name: "c", arg: 2, scope: !4399, file: !142, line: 137, type: !2230)
!4403 = !DILocation(line: 0, scope: !4399)
!4404 = !DILocation(line: 139, column: 9, scope: !4399)
!4405 = !DILocation(line: 139, column: 42, scope: !4399)
!4406 = !DILocation(line: 139, column: 2, scope: !4399)
!4407 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !4254, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4408)
!4408 = !{!4409, !4410}
!4409 = !DILocalVariable(name: "h", arg: 1, scope: !4407, file: !142, line: 199, type: !4078)
!4410 = !DILocalVariable(name: "c", arg: 2, scope: !4407, file: !142, line: 199, type: !2230)
!4411 = !DILocation(line: 0, scope: !4407)
!4412 = !DILocation(line: 201, column: 13, scope: !4407)
!4413 = !DILocation(line: 201, column: 11, scope: !4407)
!4414 = !DILocation(line: 201, column: 2, scope: !4407)
!4415 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !4416, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!2230, !4078, !2230, !141}
!4418 = !{!4419, !4420, !4421, !4422, !4423}
!4419 = !DILocalVariable(name: "h", arg: 1, scope: !4415, file: !142, line: 107, type: !4078)
!4420 = !DILocalVariable(name: "c", arg: 2, scope: !4415, file: !142, line: 107, type: !2230)
!4421 = !DILocalVariable(name: "f", arg: 3, scope: !4415, file: !142, line: 108, type: !141)
!4422 = !DILocalVariable(name: "buf", scope: !4415, file: !142, line: 110, type: !153)
!4423 = !DILocalVariable(name: "cmem", scope: !4415, file: !142, line: 111, type: !102)
!4424 = !DILocation(line: 0, scope: !4415)
!4425 = !DILocation(line: 110, column: 22, scope: !4415)
!4426 = !DILocation(line: 111, column: 15, scope: !4415)
!4427 = !DILocation(line: 116, column: 11, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !142, line: 115, column: 9)
!4429 = distinct !DILexicalBlock(scope: !4415, file: !142, line: 113, column: 6)
!4430 = !DILocation(line: 116, column: 10, scope: !4428)
!4431 = !DILocation(line: 118, column: 1, scope: !4415)
!4432 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !4433, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4435)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!153, !4078}
!4435 = !{!4436}
!4436 = !DILocalVariable(name: "h", arg: 1, scope: !4432, file: !142, line: 101, type: !4078)
!4437 = !DILocation(line: 0, scope: !4432)
!4438 = !DILocation(line: 104, column: 9, scope: !4432)
!4439 = !DILocation(line: 104, column: 2, scope: !4432)
!4440 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !4441, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4443)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!3350, !4078, !2230}
!4443 = !{!4444, !4445}
!4444 = !DILocalVariable(name: "h", arg: 1, scope: !4440, file: !142, line: 142, type: !4078)
!4445 = !DILocalVariable(name: "c", arg: 2, scope: !4440, file: !142, line: 142, type: !2230)
!4446 = !DILocation(line: 0, scope: !4440)
!4447 = !DILocation(line: 144, column: 9, scope: !4440)
!4448 = !DILocation(line: 144, column: 42, scope: !4440)
!4449 = !DILocation(line: 144, column: 2, scope: !4440)
!4450 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !4451, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4453)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!120, !4078, !3350}
!4453 = !{!4454, !4455}
!4454 = !DILocalVariable(name: "h", arg: 1, scope: !4450, file: !142, line: 245, type: !4078)
!4455 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4450, file: !142, line: 245, type: !3350)
!4456 = !DILocation(line: 0, scope: !4450)
!4457 = !DILocation(line: 247, column: 20, scope: !4450)
!4458 = !DILocation(line: 247, column: 33, scope: !4450)
!4459 = !DILocation(line: 247, column: 2, scope: !4450)
!4460 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !4264, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4461)
!4461 = !{!4462, !4463}
!4462 = !DILocalVariable(name: "h", arg: 1, scope: !4460, file: !134, line: 23, type: !4078)
!4463 = !DILocalVariable(name: "c", arg: 2, scope: !4460, file: !134, line: 23, type: !2230)
!4464 = !DILocation(line: 0, scope: !4460)
!4465 = !DILocation(line: 25, column: 2, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !134, line: 25, column: 2)
!4467 = distinct !DILexicalBlock(scope: !4460, file: !134, line: 25, column: 2)
!4468 = !DILocation(line: 25, column: 2, scope: !4467)
!4469 = !DILocation(line: 26, column: 2, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !134, line: 26, column: 2)
!4471 = distinct !DILexicalBlock(scope: !4460, file: !134, line: 26, column: 2)
!4472 = !DILocation(line: 26, column: 2, scope: !4471)
!4473 = !DILocation(line: 27, column: 2, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !134, line: 27, column: 2)
!4475 = distinct !DILexicalBlock(scope: !4460, file: !134, line: 27, column: 2)
!4476 = !DILocation(line: 29, column: 1, scope: !4460)
!4477 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !4254, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4478)
!4478 = !{!4479, !4480}
!4479 = !DILocalVariable(name: "h", arg: 1, scope: !4477, file: !142, line: 177, type: !4078)
!4480 = !DILocalVariable(name: "c", arg: 2, scope: !4477, file: !142, line: 177, type: !2230)
!4481 = !DILocation(line: 0, scope: !4477)
!4482 = !DILocation(line: 179, column: 9, scope: !4477)
!4483 = !DILocation(line: 179, column: 2, scope: !4477)
!4484 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !4485, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4500)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !4487, !4490, !102, !120, !137, !102, !120, !103, !4493}
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 32)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{!102, !102, !120}
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 32)
!4491 = !DISubroutineType(types: !4492)
!4492 = !{null, !102, !102}
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 32)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !4495)
!4495 = !{!4496, !4497, !4498, !4499}
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !4494, file: !113, line: 63, baseType: !137, size: 32)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !4494, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !4494, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !4494, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!4500 = !{!4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4527, !4529, !4534, !4535, !4537, !4538}
!4501 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !4484, file: !134, line: 300, type: !4487)
!4502 = !DILocalVariable(name: "free_fn", arg: 2, scope: !4484, file: !134, line: 301, type: !4490)
!4503 = !DILocalVariable(name: "arg", arg: 3, scope: !4484, file: !134, line: 302, type: !102)
!4504 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !4484, file: !134, line: 302, type: !120)
!4505 = !DILocalVariable(name: "op_count", arg: 5, scope: !4484, file: !134, line: 303, type: !137)
!4506 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !4484, file: !134, line: 304, type: !102)
!4507 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !4484, file: !134, line: 304, type: !120)
!4508 = !DILocalVariable(name: "target_percent", arg: 8, scope: !4484, file: !134, line: 305, type: !103)
!4509 = !DILocalVariable(name: "result", arg: 9, scope: !4484, file: !134, line: 306, type: !4493)
!4510 = !DILocalVariable(name: "sr", scope: !4484, file: !134, line: 308, type: !4511)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !4512)
!4512 = !{!4513, !4514, !4515, !4516, !4517, !4523, !4524, !4525, !4526}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !4511, file: !134, line: 205, baseType: !4487, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !4511, file: !134, line: 206, baseType: !4490, size: 32, offset: 32)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4511, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !4511, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4511, file: !134, line: 209, baseType: !4518, size: 32, offset: 128)
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 32)
!4519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !4520)
!4520 = !{!4521, !4522}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4519, file: !134, line: 217, baseType: !102, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !4519, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !4511, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !4511, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !4511, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !4511, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!4527 = !DILocalVariable(name: "i", scope: !4528, file: !134, line: 320, type: !137)
!4528 = distinct !DILexicalBlock(scope: !4484, file: !134, line: 320, column: 2)
!4529 = !DILocalVariable(name: "sz", scope: !4530, file: !134, line: 322, type: !120)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !134, line: 321, column: 31)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !134, line: 321, column: 7)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !134, line: 320, column: 42)
!4533 = distinct !DILexicalBlock(scope: !4528, file: !134, line: 320, column: 2)
!4534 = !DILocalVariable(name: "p", scope: !4530, file: !134, line: 323, type: !102)
!4535 = !DILocalVariable(name: "b", scope: !4536, file: !134, line: 334, type: !103)
!4536 = distinct !DILexicalBlock(scope: !4531, file: !134, line: 333, column: 10)
!4537 = !DILocalVariable(name: "p", scope: !4536, file: !134, line: 335, type: !102)
!4538 = !DILocalVariable(name: "sz", scope: !4536, file: !134, line: 336, type: !120)
!4539 = !DILocation(line: 0, scope: !4484)
!4540 = !DILocation(line: 308, column: 2, scope: !4484)
!4541 = !DILocation(line: 308, column: 27, scope: !4484)
!4542 = !DILocation(line: 308, column: 32, scope: !4484)
!4543 = !DILocation(line: 314, column: 34, scope: !4484)
!4544 = !DILocation(line: 318, column: 12, scope: !4484)
!4545 = !DILocation(line: 0, scope: !4528)
!4546 = !DILocation(line: 320, column: 25, scope: !4533)
!4547 = !DILocation(line: 320, column: 2, scope: !4528)
!4548 = !DILocation(line: 346, column: 1, scope: !4484)
!4549 = !DILocation(line: 321, column: 7, scope: !4531)
!4550 = !DILocation(line: 321, column: 7, scope: !4532)
!4551 = !DILocation(line: 322, column: 16, scope: !4530)
!4552 = !DILocation(line: 0, scope: !4530)
!4553 = !DILocation(line: 323, column: 14, scope: !4530)
!4554 = !DILocation(line: 325, column: 24, scope: !4530)
!4555 = !DILocation(line: 326, column: 10, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4530, file: !134, line: 326, column: 8)
!4557 = !DILocation(line: 326, column: 8, scope: !4530)
!4558 = !DILocation(line: 327, column: 30, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !134, line: 326, column: 19)
!4560 = !DILocation(line: 328, column: 34, scope: !4559)
!4561 = !DILocation(line: 328, column: 38, scope: !4559)
!4562 = !DILocation(line: 329, column: 34, scope: !4559)
!4563 = !DILocation(line: 329, column: 37, scope: !4559)
!4564 = !DILocation(line: 330, column: 22, scope: !4559)
!4565 = !DILocation(line: 331, column: 22, scope: !4559)
!4566 = !DILocation(line: 332, column: 4, scope: !4559)
!4567 = !DILocation(line: 334, column: 12, scope: !4536)
!4568 = !DILocation(line: 0, scope: !4536)
!4569 = !DILocation(line: 335, column: 27, scope: !4536)
!4570 = !DILocation(line: 336, column: 29, scope: !4536)
!4571 = !DILocation(line: 338, column: 23, scope: !4536)
!4572 = !DILocation(line: 339, column: 4, scope: !4536)
!4573 = !DILocation(line: 339, column: 47, scope: !4536)
!4574 = !DILocation(line: 339, column: 19, scope: !4536)
!4575 = !DILocation(line: 340, column: 21, scope: !4536)
!4576 = !DILocation(line: 341, column: 21, scope: !4536)
!4577 = !DILocation(line: 342, column: 4, scope: !4536)
!4578 = !DILocation(line: 344, column: 42, scope: !4532)
!4579 = !DILocation(line: 344, column: 39, scope: !4532)
!4580 = !DILocation(line: 344, column: 36, scope: !4532)
!4581 = !DILocation(line: 320, column: 38, scope: !4533)
!4582 = distinct !{!4582, !4547, !4583}
!4583 = !DILocation(line: 345, column: 2, scope: !4528)
!4584 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !4585, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4588)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!211, !4587}
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 32)
!4588 = !{!4589, !4590, !4594, !4595}
!4589 = !DILocalVariable(name: "sr", arg: 1, scope: !4584, file: !134, line: 234, type: !4587)
!4590 = !DILocalVariable(name: "full_pct", scope: !4591, file: !134, line: 259, type: !137)
!4591 = distinct !DILexicalBlock(scope: !4592, file: !134, line: 241, column: 9)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !134, line: 239, column: 13)
!4593 = distinct !DILexicalBlock(scope: !4584, file: !134, line: 237, column: 6)
!4594 = !DILocalVariable(name: "target", scope: !4591, file: !134, line: 260, type: !137)
!4595 = !DILocalVariable(name: "free_chance", scope: !4591, file: !134, line: 261, type: !137)
!4596 = !DILocation(line: 0, scope: !4584)
!4597 = !DILocation(line: 237, column: 10, scope: !4593)
!4598 = !DILocation(line: 237, column: 25, scope: !4593)
!4599 = !DILocation(line: 237, column: 6, scope: !4584)
!4600 = !DILocation(line: 239, column: 39, scope: !4592)
!4601 = !DILocation(line: 239, column: 32, scope: !4592)
!4602 = !DILocation(line: 239, column: 13, scope: !4593)
!4603 = !DILocation(line: 259, column: 34, scope: !4591)
!4604 = !DILocation(line: 259, column: 28, scope: !4591)
!4605 = !DILocation(line: 259, column: 55, scope: !4591)
!4606 = !DILocation(line: 259, column: 49, scope: !4591)
!4607 = !DILocation(line: 0, scope: !4591)
!4608 = !DILocation(line: 260, column: 25, scope: !4591)
!4609 = !DILocation(line: 263, column: 16, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4591, file: !134, line: 263, column: 7)
!4611 = !DILocation(line: 263, column: 7, scope: !4591)
!4612 = !DILocation(line: 264, column: 42, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4610, file: !134, line: 263, column: 38)
!4614 = !DILocation(line: 264, column: 27, scope: !4613)
!4615 = !DILocation(line: 265, column: 3, scope: !4613)
!4616 = !DILocation(line: 267, column: 10, scope: !4591)
!4617 = !DILocation(line: 267, column: 19, scope: !4591)
!4618 = !DILocation(line: 0, scope: !4593)
!4619 = !DILocation(line: 269, column: 1, scope: !4584)
!4620 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !4621, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!120, !4587}
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "sr", arg: 1, scope: !4620, file: !134, line: 274, type: !4587)
!4625 = !DILocalVariable(name: "scale", scope: !4620, file: !134, line: 281, type: !103)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 281, column: 32, scope: !4620)
!4628 = !DILocation(line: 281, column: 18, scope: !4620)
!4629 = !DILocation(line: 283, column: 9, scope: !4620)
!4630 = !DILocation(line: 283, column: 20, scope: !4620)
!4631 = !DILocation(line: 283, column: 18, scope: !4620)
!4632 = !DILocation(line: 283, column: 2, scope: !4620)
!4633 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !4621, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4634)
!4634 = !{!4635}
!4635 = !DILocalVariable(name: "sr", arg: 1, scope: !4633, file: !134, line: 287, type: !4587)
!4636 = !DILocation(line: 0, scope: !4633)
!4637 = !DILocation(line: 289, column: 9, scope: !4633)
!4638 = !DILocation(line: 289, column: 24, scope: !4633)
!4639 = !DILocation(line: 289, column: 18, scope: !4633)
!4640 = !DILocation(line: 289, column: 2, scope: !4633)
!4641 = !DILocation(line: 229, column: 10, scope: !133)
!4642 = !DILocation(line: 229, column: 16, scope: !133)
!4643 = !DILocation(line: 229, column: 40, scope: !133)
!4644 = !DILocation(line: 229, column: 8, scope: !133)
!4645 = !DILocation(line: 231, column: 26, scope: !133)
!4646 = !DILocation(line: 231, column: 9, scope: !133)
!4647 = !DILocation(line: 231, column: 2, scope: !133)
!4648 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !4649, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4651)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{null, !4078, !211}
!4651 = !{!4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4664, !4665, !4666, !4669}
!4652 = !DILocalVariable(name: "h", arg: 1, scope: !4648, file: !134, line: 351, type: !4078)
!4653 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4648, file: !134, line: 351, type: !211)
!4654 = !DILocalVariable(name: "i", scope: !4648, file: !134, line: 353, type: !103)
!4655 = !DILocalVariable(name: "nb_buckets", scope: !4648, file: !134, line: 353, type: !103)
!4656 = !DILocalVariable(name: "free_bytes", scope: !4648, file: !134, line: 354, type: !120)
!4657 = !DILocalVariable(name: "allocated_bytes", scope: !4648, file: !134, line: 354, type: !120)
!4658 = !DILocalVariable(name: "total", scope: !4648, file: !134, line: 354, type: !120)
!4659 = !DILocalVariable(name: "overhead", scope: !4648, file: !134, line: 354, type: !120)
!4660 = !DILocalVariable(name: "first", scope: !4661, file: !134, line: 363, type: !2230)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !134, line: 362, column: 35)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !134, line: 362, column: 2)
!4663 = distinct !DILexicalBlock(scope: !4648, file: !134, line: 362, column: 2)
!4664 = !DILocalVariable(name: "largest", scope: !4661, file: !134, line: 364, type: !3350)
!4665 = !DILocalVariable(name: "count", scope: !4661, file: !134, line: 365, type: !103)
!4666 = !DILocalVariable(name: "curr", scope: !4667, file: !134, line: 368, type: !2230)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !134, line: 367, column: 14)
!4668 = distinct !DILexicalBlock(scope: !4661, file: !134, line: 367, column: 7)
!4669 = !DILocalVariable(name: "c", scope: !4670, file: !134, line: 384, type: !2230)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !134, line: 384, column: 3)
!4671 = distinct !DILexicalBlock(scope: !4672, file: !134, line: 382, column: 19)
!4672 = distinct !DILexicalBlock(scope: !4648, file: !134, line: 382, column: 6)
!4673 = !DILocation(line: 0, scope: !4648)
!4674 = !DILocation(line: 353, column: 39, scope: !4648)
!4675 = !DILocation(line: 353, column: 22, scope: !4648)
!4676 = !DILocation(line: 353, column: 50, scope: !4648)
!4677 = !DILocation(line: 354, column: 2, scope: !4648)
!4678 = !DILocation(line: 357, column: 9, scope: !4648)
!4679 = !DILocation(line: 356, column: 2, scope: !4648)
!4680 = !DILocation(line: 359, column: 2, scope: !4648)
!4681 = !DILocation(line: 362, column: 16, scope: !4662)
!4682 = !DILocation(line: 362, column: 2, scope: !4663)
!4683 = !DILocation(line: 363, column: 35, scope: !4661)
!4684 = !DILocation(line: 0, scope: !4661)
!4685 = !DILocation(line: 367, column: 7, scope: !4668)
!4686 = !DILocation(line: 367, column: 7, scope: !4661)
!4687 = !DILocation(line: 0, scope: !4667)
!4688 = !DILocation(line: 370, column: 10, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4667, file: !134, line: 369, column: 7)
!4690 = !DILocation(line: 371, column: 15, scope: !4689)
!4691 = !DILocation(line: 372, column: 12, scope: !4689)
!4692 = !DILocation(line: 373, column: 18, scope: !4667)
!4693 = !DILocation(line: 373, column: 4, scope: !4689)
!4694 = distinct !{!4694, !4695, !4696}
!4695 = !DILocation(line: 369, column: 4, scope: !4667)
!4696 = !DILocation(line: 373, column: 26, scope: !4667)
!4697 = !DILocation(line: 377, column: 23, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !134, line: 375, column: 14)
!4699 = distinct !DILexicalBlock(scope: !4661, file: !134, line: 375, column: 7)
!4700 = !DILocation(line: 378, column: 20, scope: !4698)
!4701 = !DILocation(line: 376, column: 4, scope: !4698)
!4702 = !DILocation(line: 379, column: 3, scope: !4698)
!4703 = !DILocation(line: 362, column: 31, scope: !4662)
!4704 = distinct !{!4704, !4682, !4705}
!4705 = !DILocation(line: 380, column: 2, scope: !4663)
!4706 = !DILocation(line: 382, column: 6, scope: !4648)
!4707 = !DILocation(line: 383, column: 3, scope: !4671)
!4708 = !DILocation(line: 0, scope: !4670)
!4709 = !DILocation(line: 384, column: 8, scope: !4670)
!4710 = !DILocation(line: 387, column: 11, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !134, line: 384, column: 50)
!4712 = distinct !DILexicalBlock(scope: !4670, file: !134, line: 384, column: 3)
!4713 = !DILocation(line: 390, column: 11, scope: !4711)
!4714 = !DILocation(line: 391, column: 11, scope: !4711)
!4715 = !DILocation(line: 392, column: 11, scope: !4711)
!4716 = !DILocation(line: 385, column: 4, scope: !4711)
!4717 = !DILocation(line: 393, column: 16, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4711, file: !134, line: 393, column: 8)
!4719 = !DILocation(line: 393, column: 10, scope: !4718)
!4720 = !DILocation(line: 393, column: 8, scope: !4711)
!4721 = !DILocation(line: 384, column: 31, scope: !4712)
!4722 = !DILocation(line: 384, column: 3, scope: !4712)
!4723 = distinct !{!4723, !4724, !4725}
!4724 = !DILocation(line: 384, column: 3, scope: !4670)
!4725 = !DILocation(line: 396, column: 3, scope: !4670)
!4726 = !DILocation(line: 399, column: 2, scope: !4648)
!4727 = !DILocation(line: 401, column: 13, scope: !4648)
!4728 = !DILocation(line: 401, column: 23, scope: !4648)
!4729 = !DILocation(line: 401, column: 36, scope: !4648)
!4730 = !DILocation(line: 402, column: 21, scope: !4648)
!4731 = !DILocation(line: 402, column: 34, scope: !4648)
!4732 = !DILocation(line: 402, column: 32, scope: !4648)
!4733 = !DILocation(line: 405, column: 15, scope: !4648)
!4734 = !DILocation(line: 405, column: 33, scope: !4648)
!4735 = !DILocation(line: 405, column: 26, scope: !4648)
!4736 = !DILocation(line: 405, column: 37, scope: !4648)
!4737 = !DILocation(line: 405, column: 45, scope: !4648)
!4738 = !DILocation(line: 403, column: 2, scope: !4648)
!4739 = !DILocation(line: 407, column: 1, scope: !4648)
!4740 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4741, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4743)
!4741 = !DISubroutineType(types: !4742)
!4742 = !{null, !4074, !211}
!4743 = !{!4744, !4745}
!4744 = !DILocalVariable(name: "heap", arg: 1, scope: !4740, file: !134, line: 409, type: !4074)
!4745 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4740, file: !134, line: 409, type: !211)
!4746 = !DILocation(line: 0, scope: !4740)
!4747 = !DILocation(line: 411, column: 24, scope: !4740)
!4748 = !DILocation(line: 411, column: 2, scope: !4740)
!4749 = !DILocation(line: 412, column: 1, scope: !4740)
!4750 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4751, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4753)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{!103, !4074}
!4753 = !{!4754}
!4754 = !DILocalVariable(name: "heap", arg: 1, scope: !4750, file: !134, line: 430, type: !4074)
!4755 = !DILocation(line: 0, scope: !4750)
!4756 = !DILocation(line: 432, column: 11, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4750, file: !134, line: 432, column: 6)
!4758 = !DILocation(line: 432, column: 6, scope: !4750)
!4759 = !DILocation(line: 436, column: 42, scope: !4750)
!4760 = !DILocation(line: 436, column: 48, scope: !4750)
!4761 = !DILocation(line: 436, column: 14, scope: !4750)
!4762 = !DILocation(line: 436, column: 34, scope: !4750)
!4763 = !DILocation(line: 438, column: 2, scope: !4750)
!4764 = !DILocation(line: 439, column: 1, scope: !4750)
!4765 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2247, file: !2247, line: 1338, type: !4766, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !4774)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{!103, !3017, !102, !199, !4768, !137}
!4768 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2983, line: 99, baseType: !4769)
!4769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2983, line: 40, baseType: !4770)
!4770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2247, baseType: !4771)
!4771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4772)
!4772 = !{!4773}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4771, file: !2247, baseType: !102, size: 32)
!4774 = !{!4775, !4776, !4777, !4778, !4779, !4780, !4784, !4785, !4786, !4788, !4793, !4838, !4841, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4853, !4854, !4855, !4859, !4862, !4864, !4867, !4868, !4869, !4874, !4880, !4883, !4887, !4893, !4897, !4900, !4902, !4905}
!4775 = !DILocalVariable(name: "out", arg: 1, scope: !4765, file: !2247, line: 1338, type: !3017)
!4776 = !DILocalVariable(name: "ctx", arg: 2, scope: !4765, file: !2247, line: 1338, type: !102)
!4777 = !DILocalVariable(name: "fp", arg: 3, scope: !4765, file: !2247, line: 1338, type: !199)
!4778 = !DILocalVariable(name: "ap", arg: 4, scope: !4765, file: !2247, line: 1339, type: !4768)
!4779 = !DILocalVariable(name: "flags", arg: 5, scope: !4765, file: !2247, line: 1339, type: !137)
!4780 = !DILocalVariable(name: "buf", scope: !4765, file: !2247, line: 1341, type: !4781)
!4781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4782)
!4782 = !{!4783}
!4783 = !DISubrange(count: 22)
!4784 = !DILocalVariable(name: "count", scope: !4765, file: !2247, line: 1342, type: !120)
!4785 = !DILocalVariable(name: "sint", scope: !4765, file: !2247, line: 1343, type: !2266)
!4786 = !DILocalVariable(name: "tagged_ap", scope: !4765, file: !2247, line: 1345, type: !4787)
!4787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!4788 = !DILocalVariable(name: "rc", scope: !4789, file: !2247, line: 1377, type: !103)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !2247, line: 1377, column: 4)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2247, line: 1376, column: 19)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1376, column: 7)
!4792 = distinct !DILexicalBlock(scope: !4765, file: !2247, line: 1375, column: 19)
!4793 = !DILocalVariable(name: "state", scope: !4792, file: !2247, line: 1395, type: !4794)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4765, file: !2247, line: 1392, size: 192, elements: !4795)
!4795 = !{!4796, !4806}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4794, file: !2247, line: 1393, baseType: !4797, size: 64)
!4797 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2247, line: 166, size: 64, elements: !4798)
!4798 = !{!4799, !4800, !4801, !4803, !4805}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4797, file: !2247, line: 168, baseType: !2266, size: 64)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4797, file: !2247, line: 171, baseType: !2269, size: 64)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4797, file: !2247, line: 174, baseType: !4802, size: 64)
!4802 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4797, file: !2247, line: 177, baseType: !4804, size: 64)
!4804 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4797, file: !2247, line: 180, baseType: !102, size: 32)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4794, file: !2247, line: 1394, baseType: !4807, size: 96, offset: 64)
!4807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2247, line: 189, size: 96, elements: !4808)
!4808 = !{!4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4833}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4807, file: !2247, line: 191, baseType: !211, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4807, file: !2247, line: 194, baseType: !211, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4807, file: !2247, line: 197, baseType: !211, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4807, file: !2247, line: 200, baseType: !211, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4807, file: !2247, line: 203, baseType: !211, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4807, file: !2247, line: 206, baseType: !211, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4807, file: !2247, line: 209, baseType: !211, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4807, file: !2247, line: 212, baseType: !211, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4807, file: !2247, line: 219, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4807, file: !2247, line: 222, baseType: !211, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4807, file: !2247, line: 229, baseType: !211, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4807, file: !2247, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4807, file: !2247, line: 238, baseType: !211, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4807, file: !2247, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4807, file: !2247, line: 244, baseType: !211, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4807, file: !2247, line: 247, baseType: !211, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4807, file: !2247, line: 252, baseType: !211, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4807, file: !2247, line: 257, baseType: !211, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4807, file: !2247, line: 260, baseType: !209, size: 8, offset: 24)
!4828 = !DIDerivedType(tag: DW_TAG_member, scope: !4807, file: !2247, line: 262, baseType: !4829, size: 32, offset: 32)
!4829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4807, file: !2247, line: 262, size: 32, elements: !4830)
!4830 = !{!4831, !4832}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4829, file: !2247, line: 267, baseType: !103, size: 32)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4829, file: !2247, line: 289, baseType: !103, size: 32)
!4833 = !DIDerivedType(tag: DW_TAG_member, scope: !4807, file: !2247, line: 292, baseType: !4834, size: 32, offset: 64)
!4834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4807, file: !2247, line: 292, size: 32, elements: !4835)
!4835 = !{!4836, !4837}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4834, file: !2247, line: 297, baseType: !103, size: 32)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4834, file: !2247, line: 306, baseType: !103, size: 32)
!4838 = !DILocalVariable(name: "conv", scope: !4792, file: !2247, line: 1400, type: !4839)
!4839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4840)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 32)
!4841 = !DILocalVariable(name: "value", scope: !4792, file: !2247, line: 1401, type: !4842)
!4842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4843)
!4843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 32)
!4844 = !DILocalVariable(name: "sp", scope: !4792, file: !2247, line: 1402, type: !199)
!4845 = !DILocalVariable(name: "width", scope: !4792, file: !2247, line: 1403, type: !103)
!4846 = !DILocalVariable(name: "precision", scope: !4792, file: !2247, line: 1404, type: !103)
!4847 = !DILocalVariable(name: "bps", scope: !4792, file: !2247, line: 1405, type: !199)
!4848 = !DILocalVariable(name: "bpe", scope: !4792, file: !2247, line: 1406, type: !199)
!4849 = !DILocalVariable(name: "sign", scope: !4792, file: !2247, line: 1407, type: !109)
!4850 = !DILocalVariable(name: "arg", scope: !4851, file: !2247, line: 1432, type: !103)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !2247, line: 1431, column: 24)
!4852 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1431, column: 7)
!4853 = !DILocalVariable(name: "specifier_cat", scope: !4792, file: !2247, line: 1468, type: !2246)
!4854 = !DILocalVariable(name: "length_mod", scope: !4792, file: !2247, line: 1470, type: !2254)
!4855 = !DILocalVariable(name: "rc", scope: !4856, file: !2247, line: 1575, type: !103)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !2247, line: 1575, column: 4)
!4857 = distinct !DILexicalBlock(scope: !4858, file: !2247, line: 1574, column: 43)
!4858 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1574, column: 7)
!4859 = !DILocalVariable(name: "rc", scope: !4860, file: !2247, line: 1584, type: !103)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1584, column: 4)
!4861 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1582, column: 28)
!4862 = !DILocalVariable(name: "len", scope: !4863, file: !2247, line: 1589, type: !120)
!4863 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1586, column: 13)
!4864 = !DILocalVariable(name: "len", scope: !4865, file: !2247, line: 1641, type: !120)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2247, line: 1640, column: 24)
!4866 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1640, column: 8)
!4867 = !DILocalVariable(name: "nj_len", scope: !4792, file: !2247, line: 1722, type: !120)
!4868 = !DILocalVariable(name: "pad_len", scope: !4792, file: !2247, line: 1723, type: !103)
!4869 = !DILocalVariable(name: "pad", scope: !4870, file: !2247, line: 1751, type: !109)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2247, line: 1750, column: 26)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2247, line: 1750, column: 8)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2247, line: 1747, column: 18)
!4873 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1747, column: 7)
!4874 = !DILocalVariable(name: "rc", scope: !4875, file: !2247, line: 1758, type: !103)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !2247, line: 1758, column: 7)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !2247, line: 1757, column: 21)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2247, line: 1757, column: 10)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2247, line: 1756, column: 26)
!4879 = distinct !DILexicalBlock(scope: !4870, file: !2247, line: 1756, column: 9)
!4880 = !DILocalVariable(name: "rc", scope: !4881, file: !2247, line: 1765, type: !103)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2247, line: 1765, column: 6)
!4882 = distinct !DILexicalBlock(scope: !4870, file: !2247, line: 1764, column: 25)
!4883 = !DILocalVariable(name: "rc", scope: !4884, file: !2247, line: 1774, type: !103)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !2247, line: 1774, column: 4)
!4885 = distinct !DILexicalBlock(scope: !4886, file: !2247, line: 1773, column: 18)
!4886 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1773, column: 7)
!4887 = !DILocalVariable(name: "rc", scope: !4888, file: !2247, line: 1819, type: !103)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2247, line: 1819, column: 5)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !2247, line: 1818, column: 44)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !2247, line: 1818, column: 8)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !2247, line: 1817, column: 10)
!4892 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1777, column: 7)
!4893 = !DILocalVariable(name: "rc", scope: !4894, file: !2247, line: 1823, type: !103)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !2247, line: 1823, column: 5)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !2247, line: 1822, column: 26)
!4896 = distinct !DILexicalBlock(scope: !4891, file: !2247, line: 1822, column: 8)
!4897 = !DILocalVariable(name: "rc", scope: !4898, file: !2247, line: 1828, type: !103)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !2247, line: 1828, column: 5)
!4899 = distinct !DILexicalBlock(scope: !4891, file: !2247, line: 1827, column: 26)
!4900 = !DILocalVariable(name: "rc", scope: !4901, file: !2247, line: 1831, type: !103)
!4901 = distinct !DILexicalBlock(scope: !4891, file: !2247, line: 1831, column: 4)
!4902 = !DILocalVariable(name: "rc", scope: !4903, file: !2247, line: 1836, type: !103)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !2247, line: 1836, column: 4)
!4904 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1835, column: 21)
!4905 = !DILabel(scope: !4861, name: "prec_int_pad0", file: !2247, line: 1634)
!4906 = !DILocation(line: 0, scope: !4765)
!4907 = !DILocation(line: 1341, column: 2, scope: !4765)
!4908 = !DILocation(line: 1341, column: 7, scope: !4765)
!4909 = !DILocation(line: 1375, column: 2, scope: !4765)
!4910 = !DILocation(line: 1342, column: 9, scope: !4765)
!4911 = !DILocation(line: 1375, column: 9, scope: !4765)
!4912 = !DILocation(line: 1377, column: 4, scope: !4789)
!4913 = !DILocation(line: 0, scope: !4789)
!4914 = !DILocation(line: 1377, column: 4, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4789, file: !2247, line: 1377, column: 4)
!4916 = distinct !{!4916, !4909, !4917}
!4917 = !DILocation(line: 1839, column: 2, scope: !4765)
!4918 = !DILocation(line: 1392, column: 3, scope: !4792)
!4919 = !DILocation(line: 1395, column: 5, scope: !4792)
!4920 = !DILocation(line: 0, scope: !4792)
!4921 = !DILocation(line: 1409, column: 8, scope: !4792)
!4922 = !DILocation(line: 1414, column: 13, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1414, column: 7)
!4924 = !DILocation(line: 1414, column: 7, scope: !4792)
!4925 = !DILocation(line: 1415, column: 12, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4923, file: !2247, line: 1414, column: 25)
!4927 = !DILocation(line: 1417, column: 14, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4926, file: !2247, line: 1417, column: 8)
!4929 = !DILocation(line: 1417, column: 8, scope: !4926)
!4930 = !DILocation(line: 1418, column: 21, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4928, file: !2247, line: 1417, column: 19)
!4932 = !DILocation(line: 1419, column: 13, scope: !4931)
!4933 = !DILocation(line: 1420, column: 4, scope: !4931)
!4934 = !DILocation(line: 1421, column: 20, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4923, file: !2247, line: 1421, column: 14)
!4936 = !DILocation(line: 1421, column: 14, scope: !4923)
!4937 = !DILocation(line: 1431, column: 13, scope: !4852)
!4938 = !DILocation(line: 1431, column: 7, scope: !4792)
!4939 = !DILocation(line: 1432, column: 14, scope: !4851)
!4940 = !DILocation(line: 0, scope: !4851)
!4941 = !DILocation(line: 1434, column: 12, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4851, file: !2247, line: 1434, column: 8)
!4943 = !DILocation(line: 1434, column: 8, scope: !4851)
!4944 = !DILocation(line: 1435, column: 24, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4942, file: !2247, line: 1434, column: 17)
!4946 = !DILocation(line: 1436, column: 4, scope: !4945)
!4947 = !DILocation(line: 1439, column: 20, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4852, file: !2247, line: 1439, column: 14)
!4949 = !DILocation(line: 1439, column: 14, scope: !4852)
!4950 = !DILocation(line: 1469, column: 37, scope: !4792)
!4951 = !DILocation(line: 1448, column: 20, scope: !4792)
!4952 = !DILocation(line: 1449, column: 22, scope: !4792)
!4953 = !DILocation(line: 1471, column: 34, scope: !4792)
!4954 = !DILocation(line: 1478, column: 7, scope: !4792)
!4955 = !DILocation(line: 1479, column: 4, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !2247, line: 1478, column: 40)
!4957 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1478, column: 7)
!4958 = !DILocation(line: 1484, column: 19, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !2247, line: 1479, column: 24)
!4960 = !DILocation(line: 1484, column: 17, scope: !4959)
!4961 = !DILocation(line: 1485, column: 5, scope: !4959)
!4962 = !DILocation(line: 1492, column: 20, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !2247, line: 1491, column: 12)
!4964 = distinct !DILexicalBlock(scope: !4959, file: !2247, line: 1487, column: 9)
!4965 = !DILocation(line: 1492, column: 18, scope: !4963)
!4966 = !DILocation(line: 1494, column: 5, scope: !4959)
!4967 = !DILocation(line: 1497, column: 23, scope: !4959)
!4968 = !DILocation(line: 1496, column: 17, scope: !4959)
!4969 = !DILocation(line: 1498, column: 5, scope: !4959)
!4970 = !DILocation(line: 1501, column: 23, scope: !4959)
!4971 = !DILocation(line: 1500, column: 17, scope: !4959)
!4972 = !DILocation(line: 1502, column: 5, scope: !4959)
!4973 = !DILocation(line: 1513, column: 23, scope: !4959)
!4974 = !DILocation(line: 1513, column: 6, scope: !4959)
!4975 = !DILocation(line: 1512, column: 17, scope: !4959)
!4976 = !DILocation(line: 1514, column: 5, scope: !4959)
!4977 = !DILocation(line: 0, scope: !4959)
!4978 = !DILocation(line: 1516, column: 8, scope: !4956)
!4979 = !DILocation(line: 1517, column: 19, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4981, file: !2247, line: 1516, column: 33)
!4981 = distinct !DILexicalBlock(scope: !4956, file: !2247, line: 1516, column: 8)
!4982 = !DILocation(line: 1517, column: 17, scope: !4980)
!4983 = !DILocation(line: 1518, column: 4, scope: !4980)
!4984 = !DILocation(line: 1519, column: 19, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !2247, line: 1518, column: 39)
!4986 = distinct !DILexicalBlock(scope: !4981, file: !2247, line: 1518, column: 15)
!4987 = !DILocation(line: 1519, column: 17, scope: !4985)
!4988 = !DILocation(line: 1520, column: 4, scope: !4985)
!4989 = !DILocation(line: 1522, column: 4, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4991, file: !2247, line: 1521, column: 47)
!4991 = distinct !DILexicalBlock(scope: !4957, file: !2247, line: 1521, column: 14)
!4992 = !DILocation(line: 1527, column: 19, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !2247, line: 1522, column: 24)
!4994 = !DILocation(line: 1527, column: 17, scope: !4993)
!4995 = !DILocation(line: 1528, column: 5, scope: !4993)
!4996 = !DILocation(line: 0, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4993, file: !2247, line: 1530, column: 9)
!4998 = !DILocation(line: 1540, column: 23, scope: !4993)
!4999 = !DILocation(line: 1539, column: 17, scope: !4993)
!5000 = !DILocation(line: 1542, column: 5, scope: !4993)
!5001 = !DILocation(line: 1545, column: 23, scope: !4993)
!5002 = !DILocation(line: 1544, column: 17, scope: !4993)
!5003 = !DILocation(line: 1547, column: 5, scope: !4993)
!5004 = !DILocation(line: 1551, column: 23, scope: !4993)
!5005 = !DILocation(line: 1551, column: 6, scope: !4993)
!5006 = !DILocation(line: 1550, column: 17, scope: !4993)
!5007 = !DILocation(line: 1552, column: 5, scope: !4993)
!5008 = !DILocation(line: 0, scope: !4993)
!5009 = !DILocation(line: 1554, column: 8, scope: !4990)
!5010 = !DILocation(line: 1555, column: 19, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !2247, line: 1554, column: 33)
!5012 = distinct !DILexicalBlock(scope: !4990, file: !2247, line: 1554, column: 8)
!5013 = !DILocation(line: 1555, column: 17, scope: !5011)
!5014 = !DILocation(line: 1556, column: 4, scope: !5011)
!5015 = !DILocation(line: 1557, column: 19, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !2247, line: 1556, column: 39)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !2247, line: 1556, column: 15)
!5018 = !DILocation(line: 1557, column: 17, scope: !5016)
!5019 = !DILocation(line: 1558, column: 4, scope: !5016)
!5020 = !DILocation(line: 0, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !2247, line: 1560, column: 8)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !2247, line: 1559, column: 45)
!5023 = distinct !DILexicalBlock(scope: !4991, file: !2247, line: 1559, column: 14)
!5024 = !DILocation(line: 1566, column: 17, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !2247, line: 1565, column: 46)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !2247, line: 1565, column: 14)
!5027 = !DILocation(line: 1566, column: 15, scope: !5025)
!5028 = !DILocation(line: 1567, column: 3, scope: !5025)
!5029 = !DILocation(line: 1574, column: 21, scope: !4858)
!5030 = !DILocation(line: 1575, column: 4, scope: !4856)
!5031 = !DILocation(line: 0, scope: !4856)
!5032 = !DILocation(line: 1575, column: 4, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !4856, file: !2247, line: 1575, column: 4)
!5034 = !DILocation(line: 1582, column: 17, scope: !4792)
!5035 = !DILocation(line: 1582, column: 3, scope: !4792)
!5036 = !DILocation(line: 1584, column: 4, scope: !4860)
!5037 = !DILocation(line: 0, scope: !4860)
!5038 = !DILocation(line: 1584, column: 4, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4860, file: !2247, line: 1584, column: 4)
!5040 = !DILocation(line: 1587, column: 31, scope: !4863)
!5041 = !DILocation(line: 1591, column: 18, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4863, file: !2247, line: 1591, column: 8)
!5043 = !DILocation(line: 1591, column: 8, scope: !4863)
!5044 = !DILocation(line: 1592, column: 11, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5042, file: !2247, line: 1591, column: 24)
!5046 = !DILocation(line: 0, scope: !4863)
!5047 = !DILocation(line: 1593, column: 4, scope: !5045)
!5048 = !DILocation(line: 1594, column: 11, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5042, file: !2247, line: 1593, column: 11)
!5050 = !DILocation(line: 1604, column: 51, scope: !4861)
!5051 = !DILocation(line: 1604, column: 13, scope: !4861)
!5052 = !DILocation(line: 1604, column: 11, scope: !4861)
!5053 = !DILocation(line: 1606, column: 4, scope: !4861)
!5054 = !DILocation(line: 1609, column: 14, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1609, column: 8)
!5056 = !DILocation(line: 1609, column: 8, scope: !4861)
!5057 = !DILocation(line: 1619, column: 18, scope: !4861)
!5058 = !DILocation(line: 1620, column: 13, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1620, column: 8)
!5060 = !DILocation(line: 1620, column: 8, scope: !4861)
!5061 = !DILocation(line: 1622, column: 36, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5059, file: !2247, line: 1620, column: 18)
!5063 = !DILocation(line: 1622, column: 17, scope: !5062)
!5064 = !DILocation(line: 1623, column: 4, scope: !5062)
!5065 = !DILocation(line: 1632, column: 29, scope: !4861)
!5066 = !DILocation(line: 1632, column: 10, scope: !4861)
!5067 = !DILocation(line: 1632, column: 4, scope: !4861)
!5068 = !DILocation(line: 1407, column: 8, scope: !4792)
!5069 = !DILocation(line: 0, scope: !4861)
!5070 = !DILocation(line: 1634, column: 3, scope: !4861)
!5071 = !DILocation(line: 1640, column: 18, scope: !4866)
!5072 = !DILocation(line: 1640, column: 8, scope: !4861)
!5073 = !DILocation(line: 1729, column: 13, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1729, column: 7)
!5075 = !DILocation(line: 1641, column: 22, scope: !4865)
!5076 = !DILocation(line: 0, scope: !4865)
!5077 = !DILocation(line: 1646, column: 21, scope: !4865)
!5078 = !DILocation(line: 1649, column: 13, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !4865, file: !2247, line: 1649, column: 9)
!5080 = !DILocation(line: 1649, column: 9, scope: !4865)
!5081 = !DILocation(line: 1650, column: 35, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !2247, line: 1649, column: 34)
!5083 = !DILocation(line: 1650, column: 23, scope: !5082)
!5084 = !DILocation(line: 1651, column: 5, scope: !5082)
!5085 = !DILocation(line: 1660, column: 15, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1660, column: 8)
!5087 = !DILocation(line: 1660, column: 19, scope: !5086)
!5088 = !DILocation(line: 1660, column: 8, scope: !4861)
!5089 = !DILocation(line: 1661, column: 23, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5086, file: !2247, line: 1660, column: 28)
!5091 = !DILocation(line: 1661, column: 11, scope: !5090)
!5092 = !DILocation(line: 1665, column: 22, scope: !5090)
!5093 = !DILocation(line: 1666, column: 21, scope: !5090)
!5094 = !DILocation(line: 1668, column: 5, scope: !5090)
!5095 = !DILocation(line: 1677, column: 30, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !2247, line: 1676, column: 49)
!5097 = distinct !DILexicalBlock(scope: !4861, file: !2247, line: 1676, column: 8)
!5098 = !DILocation(line: 1677, column: 5, scope: !5096)
!5099 = !DILocation(line: 1680, column: 4, scope: !4861)
!5100 = !DILocation(line: 0, scope: !5042)
!5101 = !DILocation(line: 1597, column: 14, scope: !4863)
!5102 = !DILocation(line: 1699, column: 11, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1699, column: 7)
!5104 = !DILocation(line: 1699, column: 7, scope: !4792)
!5105 = !DILocation(line: 1725, column: 7, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1725, column: 7)
!5107 = !DILocation(line: 1725, column: 12, scope: !5106)
!5108 = !DILocation(line: 1747, column: 13, scope: !4873)
!5109 = !DILocation(line: 1747, column: 7, scope: !4792)
!5110 = !DILocation(line: 1722, column: 24, scope: !4792)
!5111 = !DILocation(line: 1725, column: 7, scope: !4792)
!5112 = !DILocation(line: 1729, column: 7, scope: !4792)
!5113 = !DILocation(line: 1736, column: 13, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4792, file: !2247, line: 1736, column: 7)
!5115 = !DILocation(line: 1735, column: 19, scope: !4792)
!5116 = !DILocation(line: 1736, column: 7, scope: !4792)
!5117 = !DILocation(line: 1748, column: 10, scope: !4872)
!5118 = !DILocation(line: 1750, column: 15, scope: !4871)
!5119 = !DILocation(line: 1750, column: 8, scope: !4872)
!5120 = !DILocation(line: 0, scope: !4870)
!5121 = !DILocation(line: 1756, column: 15, scope: !4879)
!5122 = !DILocation(line: 1756, column: 9, scope: !4870)
!5123 = !DILocation(line: 1758, column: 7, scope: !4875)
!5124 = !DILocation(line: 0, scope: !4875)
!5125 = !DILocation(line: 1758, column: 7, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !4875, file: !2247, line: 1758, column: 7)
!5127 = !DILocation(line: 1764, column: 5, scope: !4870)
!5128 = !DILocation(line: 0, scope: !4872)
!5129 = !DILocation(line: 1764, column: 20, scope: !4870)
!5130 = !DILocation(line: 1764, column: 17, scope: !4870)
!5131 = !DILocation(line: 1765, column: 6, scope: !4881)
!5132 = !DILocation(line: 0, scope: !4881)
!5133 = !DILocation(line: 1765, column: 6, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !4881, file: !2247, line: 1765, column: 6)
!5135 = distinct !{!5135, !5127, !5136}
!5136 = !DILocation(line: 1766, column: 5, scope: !4870)
!5137 = !DILocation(line: 1773, column: 12, scope: !4886)
!5138 = !DILocation(line: 1773, column: 7, scope: !4792)
!5139 = !DILocation(line: 1773, column: 7, scope: !4886)
!5140 = !DILocation(line: 1774, column: 4, scope: !4884)
!5141 = !DILocation(line: 0, scope: !4884)
!5142 = !DILocation(line: 1774, column: 4, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !4884, file: !2247, line: 1774, column: 4)
!5144 = !DILocation(line: 1818, column: 8, scope: !4890)
!5145 = !DILocation(line: 1818, column: 27, scope: !4890)
!5146 = !DILocation(line: 1818, column: 25, scope: !4890)
!5147 = !DILocation(line: 1818, column: 8, scope: !4891)
!5148 = !DILocation(line: 1819, column: 5, scope: !4888)
!5149 = !DILocation(line: 0, scope: !4888)
!5150 = !DILocation(line: 1819, column: 5, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !4888, file: !2247, line: 1819, column: 5)
!5152 = !DILocation(line: 1822, column: 14, scope: !4896)
!5153 = !DILocation(line: 1822, column: 8, scope: !4891)
!5154 = !DILocation(line: 1823, column: 5, scope: !4894)
!5155 = !DILocation(line: 0, scope: !4894)
!5156 = !DILocation(line: 1823, column: 5, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !4894, file: !2247, line: 1823, column: 5)
!5158 = !DILocation(line: 1826, column: 20, scope: !4891)
!5159 = !DILocation(line: 1827, column: 4, scope: !4891)
!5160 = !DILocation(line: 0, scope: !4891)
!5161 = !DILocation(line: 1827, column: 21, scope: !4891)
!5162 = !DILocation(line: 1827, column: 18, scope: !4891)
!5163 = !DILocation(line: 1828, column: 5, scope: !4898)
!5164 = !DILocation(line: 0, scope: !4898)
!5165 = !DILocation(line: 1828, column: 5, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !4898, file: !2247, line: 1828, column: 5)
!5167 = distinct !{!5167, !5159, !5168}
!5168 = !DILocation(line: 1829, column: 4, scope: !4891)
!5169 = !DILocation(line: 1831, column: 4, scope: !4901)
!5170 = !DILocation(line: 0, scope: !4901)
!5171 = !DILocation(line: 1831, column: 4, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !4901, file: !2247, line: 1831, column: 4)
!5173 = !DILocation(line: 1835, column: 16, scope: !4792)
!5174 = !DILocation(line: 1835, column: 3, scope: !4792)
!5175 = !DILocation(line: 1836, column: 4, scope: !4903)
!5176 = !DILocation(line: 0, scope: !4903)
!5177 = !DILocation(line: 1836, column: 4, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !4903, file: !2247, line: 1836, column: 4)
!5179 = !DILocation(line: 1837, column: 4, scope: !4904)
!5180 = distinct !{!5180, !5174, !5181}
!5181 = !DILocation(line: 1838, column: 3, scope: !4792)
!5182 = !DILocation(line: 1844, column: 1, scope: !4765)
!5183 = distinct !DISubprogram(name: "extract_conversion", scope: !2247, file: !2247, line: 642, type: !5184, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5186)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{!199, !4840, !199}
!5186 = !{!5187, !5188}
!5187 = !DILocalVariable(name: "conv", arg: 1, scope: !5183, file: !2247, line: 642, type: !4840)
!5188 = !DILocalVariable(name: "sp", arg: 2, scope: !5183, file: !2247, line: 643, type: !199)
!5189 = !DILocation(line: 0, scope: !5183)
!5190 = !DILocation(line: 645, column: 10, scope: !5183)
!5191 = !DILocation(line: 653, column: 2, scope: !5183)
!5192 = !DILocation(line: 654, column: 6, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5183, file: !2247, line: 654, column: 6)
!5194 = !DILocation(line: 654, column: 10, scope: !5193)
!5195 = !DILocation(line: 654, column: 6, scope: !5183)
!5196 = !DILocation(line: 655, column: 24, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !2247, line: 654, column: 18)
!5198 = !DILocation(line: 655, column: 19, scope: !5197)
!5199 = !DILocation(line: 656, column: 3, scope: !5197)
!5200 = !DILocation(line: 659, column: 7, scope: !5183)
!5201 = !DILocation(line: 660, column: 7, scope: !5183)
!5202 = !DILocation(line: 661, column: 7, scope: !5183)
!5203 = !DILocation(line: 662, column: 7, scope: !5183)
!5204 = !DILocation(line: 663, column: 7, scope: !5183)
!5205 = !DILocation(line: 665, column: 2, scope: !5183)
!5206 = !DILocation(line: 666, column: 1, scope: !5183)
!5207 = distinct !DISubprogram(name: "outs", scope: !2247, file: !2247, line: 1319, type: !5208, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!103, !3017, !102, !199, !199}
!5210 = !{!5211, !5212, !5213, !5214, !5215, !5216}
!5211 = !DILocalVariable(name: "out", arg: 1, scope: !5207, file: !2247, line: 1319, type: !3017)
!5212 = !DILocalVariable(name: "ctx", arg: 2, scope: !5207, file: !2247, line: 1320, type: !102)
!5213 = !DILocalVariable(name: "sp", arg: 3, scope: !5207, file: !2247, line: 1321, type: !199)
!5214 = !DILocalVariable(name: "ep", arg: 4, scope: !5207, file: !2247, line: 1322, type: !199)
!5215 = !DILocalVariable(name: "count", scope: !5207, file: !2247, line: 1324, type: !120)
!5216 = !DILocalVariable(name: "rc", scope: !5217, file: !2247, line: 1327, type: !103)
!5217 = distinct !DILexicalBlock(scope: !5207, file: !2247, line: 1326, column: 45)
!5218 = !DILocation(line: 0, scope: !5207)
!5219 = !DILocation(line: 1326, column: 2, scope: !5207)
!5220 = !DILocation(line: 1324, column: 9, scope: !5207)
!5221 = !DILocation(line: 1326, column: 13, scope: !5207)
!5222 = !DILocation(line: 1326, column: 19, scope: !5207)
!5223 = !DILocation(line: 1327, column: 21, scope: !5217)
!5224 = !DILocation(line: 1326, column: 36, scope: !5207)
!5225 = !DILocation(line: 1326, column: 39, scope: !5207)
!5226 = !DILocation(line: 1327, column: 24, scope: !5217)
!5227 = !DILocation(line: 1327, column: 16, scope: !5217)
!5228 = !DILocation(line: 1327, column: 12, scope: !5217)
!5229 = !DILocation(line: 0, scope: !5217)
!5230 = !DILocation(line: 1329, column: 10, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5217, file: !2247, line: 1329, column: 7)
!5232 = !DILocation(line: 1329, column: 7, scope: !5217)
!5233 = distinct !{!5233, !5219, !5234}
!5234 = !DILocation(line: 1333, column: 2, scope: !5207)
!5235 = !DILocation(line: 1336, column: 1, scope: !5207)
!5236 = distinct !DISubprogram(name: "encode_uint", scope: !2247, file: !2247, line: 788, type: !5237, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5239)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!1022, !2269, !4840, !1022, !199}
!5239 = !{!5240, !5241, !5242, !5243, !5244, !5245, !5247, !5248}
!5240 = !DILocalVariable(name: "value", arg: 1, scope: !5236, file: !2247, line: 788, type: !2269)
!5241 = !DILocalVariable(name: "conv", arg: 2, scope: !5236, file: !2247, line: 789, type: !4840)
!5242 = !DILocalVariable(name: "bps", arg: 3, scope: !5236, file: !2247, line: 790, type: !1022)
!5243 = !DILocalVariable(name: "bpe", arg: 4, scope: !5236, file: !2247, line: 791, type: !199)
!5244 = !DILocalVariable(name: "upcase", scope: !5236, file: !2247, line: 793, type: !211)
!5245 = !DILocalVariable(name: "radix", scope: !5236, file: !2247, line: 794, type: !5246)
!5246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5247 = !DILocalVariable(name: "bp", scope: !5236, file: !2247, line: 795, type: !1022)
!5248 = !DILocalVariable(name: "lsv", scope: !5249, file: !2247, line: 798, type: !32)
!5249 = distinct !DILexicalBlock(scope: !5236, file: !2247, line: 797, column: 5)
!5250 = !DILocation(line: 0, scope: !5236)
!5251 = !DILocation(line: 793, column: 35, scope: !5236)
!5252 = !DILocation(line: 793, column: 24, scope: !5236)
!5253 = !DILocation(line: 793, column: 16, scope: !5236)
!5254 = !DILocation(line: 794, column: 29, scope: !5236)
!5255 = !DILocation(line: 795, column: 24, scope: !5236)
!5256 = !DILocation(line: 795, column: 17, scope: !5236)
!5257 = !DILocation(line: 797, column: 2, scope: !5236)
!5258 = !DILocation(line: 802, column: 9, scope: !5249)
!5259 = !DILocation(line: 798, column: 22, scope: !5249)
!5260 = !DILocation(line: 0, scope: !5249)
!5261 = !DILocation(line: 800, column: 16, scope: !5249)
!5262 = !DILocation(line: 800, column: 11, scope: !5249)
!5263 = !DILocation(line: 800, column: 4, scope: !5249)
!5264 = !DILocation(line: 800, column: 9, scope: !5249)
!5265 = !DILocation(line: 803, column: 18, scope: !5236)
!5266 = !DILocation(line: 803, column: 24, scope: !5236)
!5267 = !DILocation(line: 803, column: 2, scope: !5249)
!5268 = distinct !{!5268, !5257, !5269}
!5269 = !DILocation(line: 803, column: 37, scope: !5236)
!5270 = !DILocation(line: 808, column: 12, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5236, file: !2247, line: 808, column: 6)
!5272 = !DILocation(line: 808, column: 6, scope: !5236)
!5273 = !DILocation(line: 809, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5271, file: !2247, line: 808, column: 23)
!5275 = !DILocation(line: 813, column: 3, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !2247, line: 811, column: 27)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !2247, line: 811, column: 14)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !2247, line: 809, column: 7)
!5279 = !DILocation(line: 0, scope: !5278)
!5280 = !DILocation(line: 818, column: 2, scope: !5236)
!5281 = distinct !DISubprogram(name: "store_count", scope: !2247, file: !2247, line: 1280, type: !5282, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5286)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !5284, !102, !103}
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 32)
!5285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4807)
!5286 = !{!5287, !5288, !5289}
!5287 = !DILocalVariable(name: "conv", arg: 1, scope: !5281, file: !2247, line: 1280, type: !5284)
!5288 = !DILocalVariable(name: "dp", arg: 2, scope: !5281, file: !2247, line: 1281, type: !102)
!5289 = !DILocalVariable(name: "count", arg: 3, scope: !5281, file: !2247, line: 1282, type: !103)
!5290 = !DILocation(line: 0, scope: !5281)
!5291 = !DILocation(line: 1284, column: 38, scope: !5281)
!5292 = !DILocation(line: 1284, column: 2, scope: !5281)
!5293 = !DILocation(line: 1286, column: 4, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5281, file: !2247, line: 1284, column: 50)
!5295 = !DILocation(line: 1286, column: 14, scope: !5294)
!5296 = !DILocation(line: 1287, column: 3, scope: !5294)
!5297 = !DILocation(line: 1289, column: 24, scope: !5294)
!5298 = !DILocation(line: 1289, column: 22, scope: !5294)
!5299 = !DILocation(line: 1290, column: 3, scope: !5294)
!5300 = !DILocation(line: 1292, column: 18, scope: !5294)
!5301 = !DILocation(line: 1292, column: 4, scope: !5294)
!5302 = !DILocation(line: 1292, column: 16, scope: !5294)
!5303 = !DILocation(line: 1293, column: 3, scope: !5294)
!5304 = !DILocation(line: 1295, column: 4, scope: !5294)
!5305 = !DILocation(line: 1295, column: 15, scope: !5294)
!5306 = !DILocation(line: 1296, column: 3, scope: !5294)
!5307 = !DILocation(line: 1298, column: 22, scope: !5294)
!5308 = !DILocation(line: 1298, column: 4, scope: !5294)
!5309 = !DILocation(line: 1298, column: 20, scope: !5294)
!5310 = !DILocation(line: 1299, column: 3, scope: !5294)
!5311 = !DILocation(line: 1301, column: 21, scope: !5294)
!5312 = !DILocation(line: 1301, column: 4, scope: !5294)
!5313 = !DILocation(line: 1301, column: 19, scope: !5294)
!5314 = !DILocation(line: 1302, column: 3, scope: !5294)
!5315 = !DILocation(line: 1304, column: 4, scope: !5294)
!5316 = !DILocation(line: 1304, column: 17, scope: !5294)
!5317 = !DILocation(line: 1305, column: 3, scope: !5294)
!5318 = !DILocation(line: 1307, column: 4, scope: !5294)
!5319 = !DILocation(line: 1307, column: 20, scope: !5294)
!5320 = !DILocation(line: 1308, column: 3, scope: !5294)
!5321 = !DILocation(line: 1316, column: 1, scope: !5281)
!5322 = distinct !DISubprogram(name: "isupper", scope: !5323, file: !5323, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5324)
!5323 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5324 = !{!5325}
!5325 = !DILocalVariable(name: "a", arg: 1, scope: !5322, file: !5323, line: 16, type: !103)
!5326 = !DILocation(line: 0, scope: !5322)
!5327 = !DILocation(line: 18, column: 29, scope: !5322)
!5328 = !DILocation(line: 18, column: 45, scope: !5322)
!5329 = !DILocation(line: 18, column: 2, scope: !5322)
!5330 = distinct !DISubprogram(name: "conversion_radix", scope: !2247, file: !2247, line: 761, type: !5331, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5333)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{!120, !109}
!5333 = !{!5334}
!5334 = !DILocalVariable(name: "specifier", arg: 1, scope: !5330, file: !2247, line: 761, type: !109)
!5335 = !DILocation(line: 0, scope: !5330)
!5336 = !DILocation(line: 763, column: 2, scope: !5330)
!5337 = !DILocation(line: 770, column: 3, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5330, file: !2247, line: 763, column: 21)
!5339 = !DILocation(line: 774, column: 3, scope: !5338)
!5340 = !DILocation(line: 0, scope: !5338)
!5341 = !DILocation(line: 776, column: 1, scope: !5330)
!5342 = distinct !DISubprogram(name: "extract_flags", scope: !2247, file: !2247, line: 339, type: !5184, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5343)
!5343 = !{!5344, !5345, !5346}
!5344 = !DILocalVariable(name: "conv", arg: 1, scope: !5342, file: !2247, line: 339, type: !4840)
!5345 = !DILocalVariable(name: "sp", arg: 2, scope: !5342, file: !2247, line: 340, type: !199)
!5346 = !DILocalVariable(name: "loop", scope: !5342, file: !2247, line: 342, type: !211)
!5347 = !DILocation(line: 0, scope: !5342)
!5348 = !DILocation(line: 344, column: 2, scope: !5342)
!5349 = !DILocation(line: 345, column: 11, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5342, file: !2247, line: 344, column: 5)
!5351 = !DILocation(line: 345, column: 3, scope: !5350)
!5352 = !DILocation(line: 351, column: 4, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5350, file: !2247, line: 345, column: 16)
!5354 = !DILocation(line: 354, column: 4, scope: !5353)
!5355 = !DILocation(line: 357, column: 4, scope: !5353)
!5356 = !DILocation(line: 360, column: 4, scope: !5353)
!5357 = !DILocation(line: 0, scope: !5353)
!5358 = !DILocation(line: 370, column: 12, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5342, file: !2247, line: 370, column: 6)
!5360 = !DILocation(line: 370, column: 22, scope: !5359)
!5361 = !DILocation(line: 371, column: 19, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5359, file: !2247, line: 370, column: 42)
!5363 = !DILocation(line: 372, column: 2, scope: !5362)
!5364 = !DILocation(line: 376, column: 2, scope: !5342)
!5365 = distinct !DISubprogram(name: "extract_width", scope: !2247, file: !2247, line: 388, type: !5184, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5366)
!5366 = !{!5367, !5368, !5369, !5370}
!5367 = !DILocalVariable(name: "conv", arg: 1, scope: !5365, file: !2247, line: 388, type: !4840)
!5368 = !DILocalVariable(name: "sp", arg: 2, scope: !5365, file: !2247, line: 389, type: !199)
!5369 = !DILocalVariable(name: "wp", scope: !5365, file: !2247, line: 398, type: !199)
!5370 = !DILocalVariable(name: "width", scope: !5365, file: !2247, line: 399, type: !120)
!5371 = !DILocation(line: 0, scope: !5365)
!5372 = !DILocation(line: 391, column: 8, scope: !5365)
!5373 = !DILocation(line: 391, column: 22, scope: !5365)
!5374 = !DILocation(line: 393, column: 6, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5365, file: !2247, line: 393, column: 6)
!5376 = !DILocation(line: 393, column: 10, scope: !5375)
!5377 = !DILocation(line: 393, column: 6, scope: !5365)
!5378 = !DILocation(line: 394, column: 20, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5375, file: !2247, line: 393, column: 18)
!5380 = !DILocation(line: 395, column: 10, scope: !5379)
!5381 = !DILocation(line: 395, column: 3, scope: !5379)
!5382 = !DILocation(line: 399, column: 17, scope: !5365)
!5383 = !DILocation(line: 401, column: 6, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5365, file: !2247, line: 401, column: 6)
!5385 = !DILocation(line: 401, column: 9, scope: !5384)
!5386 = !DILocation(line: 401, column: 6, scope: !5365)
!5387 = !DILocation(line: 402, column: 23, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5384, file: !2247, line: 401, column: 16)
!5389 = !DILocation(line: 403, column: 9, scope: !5388)
!5390 = !DILocation(line: 403, column: 21, scope: !5388)
!5391 = !DILocation(line: 405, column: 11, scope: !5388)
!5392 = !DILocation(line: 404, column: 21, scope: !5388)
!5393 = !DILocation(line: 406, column: 2, scope: !5388)
!5394 = !DILocation(line: 409, column: 1, scope: !5365)
!5395 = distinct !DISubprogram(name: "extract_prec", scope: !2247, file: !2247, line: 420, type: !5184, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5396)
!5396 = !{!5397, !5398, !5399}
!5397 = !DILocalVariable(name: "conv", arg: 1, scope: !5395, file: !2247, line: 420, type: !4840)
!5398 = !DILocalVariable(name: "sp", arg: 2, scope: !5395, file: !2247, line: 421, type: !199)
!5399 = !DILocalVariable(name: "prec", scope: !5395, file: !2247, line: 435, type: !120)
!5400 = !DILocation(line: 0, scope: !5395)
!5401 = !DILocation(line: 423, column: 24, scope: !5395)
!5402 = !DILocation(line: 423, column: 28, scope: !5395)
!5403 = !DILocation(line: 423, column: 8, scope: !5395)
!5404 = !DILocation(line: 423, column: 21, scope: !5395)
!5405 = !DILocation(line: 425, column: 6, scope: !5395)
!5406 = !DILocation(line: 428, column: 2, scope: !5395)
!5407 = !DILocation(line: 430, column: 6, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5395, file: !2247, line: 430, column: 6)
!5409 = !DILocation(line: 430, column: 10, scope: !5408)
!5410 = !DILocation(line: 430, column: 6, scope: !5395)
!5411 = !DILocation(line: 431, column: 19, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5408, file: !2247, line: 430, column: 18)
!5413 = !DILocation(line: 432, column: 10, scope: !5412)
!5414 = !DILocation(line: 432, column: 3, scope: !5412)
!5415 = !DILocation(line: 435, column: 16, scope: !5395)
!5416 = !DILocation(line: 437, column: 8, scope: !5395)
!5417 = !DILocation(line: 437, column: 19, scope: !5395)
!5418 = !DILocation(line: 439, column: 10, scope: !5395)
!5419 = !DILocation(line: 438, column: 20, scope: !5395)
!5420 = !DILocation(line: 441, column: 9, scope: !5395)
!5421 = !DILocation(line: 442, column: 1, scope: !5395)
!5422 = distinct !DISubprogram(name: "extract_length", scope: !2247, file: !2247, line: 453, type: !5184, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5423)
!5423 = !{!5424, !5425}
!5424 = !DILocalVariable(name: "conv", arg: 1, scope: !5422, file: !2247, line: 453, type: !4840)
!5425 = !DILocalVariable(name: "sp", arg: 2, scope: !5422, file: !2247, line: 454, type: !199)
!5426 = !DILocation(line: 0, scope: !5422)
!5427 = !DILocation(line: 456, column: 10, scope: !5422)
!5428 = !DILocation(line: 456, column: 2, scope: !5422)
!5429 = !DILocation(line: 458, column: 8, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5431, file: !2247, line: 458, column: 7)
!5431 = distinct !DILexicalBlock(scope: !5422, file: !2247, line: 456, column: 15)
!5432 = !DILocation(line: 458, column: 7, scope: !5430)
!5433 = !DILocation(line: 458, column: 13, scope: !5430)
!5434 = !DILocation(line: 0, scope: !5430)
!5435 = !DILocation(line: 458, column: 7, scope: !5431)
!5436 = !DILocation(line: 459, column: 21, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5430, file: !2247, line: 458, column: 21)
!5438 = !DILocation(line: 460, column: 4, scope: !5437)
!5439 = !DILocation(line: 461, column: 3, scope: !5437)
!5440 = !DILocation(line: 462, column: 21, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5430, file: !2247, line: 461, column: 10)
!5442 = !DILocation(line: 466, column: 8, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5431, file: !2247, line: 466, column: 7)
!5444 = !DILocation(line: 466, column: 7, scope: !5443)
!5445 = !DILocation(line: 466, column: 13, scope: !5443)
!5446 = !DILocation(line: 0, scope: !5443)
!5447 = !DILocation(line: 466, column: 7, scope: !5431)
!5448 = !DILocation(line: 467, column: 21, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5443, file: !2247, line: 466, column: 21)
!5450 = !DILocation(line: 468, column: 4, scope: !5449)
!5451 = !DILocation(line: 469, column: 3, scope: !5449)
!5452 = !DILocation(line: 470, column: 21, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5443, file: !2247, line: 469, column: 10)
!5454 = !DILocation(line: 474, column: 9, scope: !5431)
!5455 = !DILocation(line: 474, column: 20, scope: !5431)
!5456 = !DILocation(line: 475, column: 3, scope: !5431)
!5457 = !DILocation(line: 476, column: 3, scope: !5431)
!5458 = !DILocation(line: 478, column: 9, scope: !5431)
!5459 = !DILocation(line: 478, column: 20, scope: !5431)
!5460 = !DILocation(line: 479, column: 3, scope: !5431)
!5461 = !DILocation(line: 480, column: 3, scope: !5431)
!5462 = !DILocation(line: 482, column: 9, scope: !5431)
!5463 = !DILocation(line: 482, column: 20, scope: !5431)
!5464 = !DILocation(line: 483, column: 3, scope: !5431)
!5465 = !DILocation(line: 484, column: 3, scope: !5431)
!5466 = !DILocation(line: 486, column: 9, scope: !5431)
!5467 = !DILocation(line: 486, column: 20, scope: !5431)
!5468 = !DILocation(line: 487, column: 3, scope: !5431)
!5469 = !DILocation(line: 492, column: 21, scope: !5431)
!5470 = !DILocation(line: 493, column: 3, scope: !5431)
!5471 = !DILocation(line: 495, column: 9, scope: !5431)
!5472 = !DILocation(line: 495, column: 20, scope: !5431)
!5473 = !DILocation(line: 496, column: 3, scope: !5431)
!5474 = !DILocation(line: 498, column: 2, scope: !5422)
!5475 = distinct !DISubprogram(name: "extract_specifier", scope: !2247, file: !2247, line: 513, type: !5184, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5476)
!5476 = !{!5477, !5478, !5479, !5480}
!5477 = !DILocalVariable(name: "conv", arg: 1, scope: !5475, file: !2247, line: 513, type: !4840)
!5478 = !DILocalVariable(name: "sp", arg: 2, scope: !5475, file: !2247, line: 514, type: !199)
!5479 = !DILocalVariable(name: "unsupported", scope: !5475, file: !2247, line: 516, type: !211)
!5480 = !DILabel(scope: !5481, name: "int_conv", file: !2247, line: 526)
!5481 = distinct !DILexicalBlock(scope: !5475, file: !2247, line: 520, column: 27)
!5482 = !DILocation(line: 0, scope: !5475)
!5483 = !DILocation(line: 518, column: 20, scope: !5475)
!5484 = !DILocation(line: 518, column: 8, scope: !5475)
!5485 = !DILocation(line: 518, column: 18, scope: !5475)
!5486 = !DILocation(line: 520, column: 2, scope: !5475)
!5487 = !DILocation(line: 525, column: 3, scope: !5481)
!5488 = !DILocation(line: 0, scope: !5481)
!5489 = !DILocation(line: 526, column: 1, scope: !5481)
!5490 = !DILocation(line: 528, column: 24, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5481, file: !2247, line: 528, column: 7)
!5492 = !DILocation(line: 528, column: 7, scope: !5481)
!5493 = !DILocation(line: 535, column: 23, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5481, file: !2247, line: 535, column: 7)
!5495 = !DILocation(line: 535, column: 7, scope: !5481)
!5496 = !DILocation(line: 536, column: 36, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5494, file: !2247, line: 535, column: 31)
!5498 = !DILocation(line: 537, column: 3, scope: !5497)
!5499 = !DILocation(line: 570, column: 9, scope: !5481)
!5500 = !DILocation(line: 570, column: 23, scope: !5481)
!5501 = !DILocation(line: 575, column: 4, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !2247, line: 573, column: 48)
!5503 = distinct !DILexicalBlock(scope: !5481, file: !2247, line: 573, column: 7)
!5504 = !DILocation(line: 603, column: 9, scope: !5481)
!5505 = !DILocation(line: 603, column: 23, scope: !5481)
!5506 = !DILocation(line: 605, column: 24, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5481, file: !2247, line: 605, column: 7)
!5508 = !DILocation(line: 605, column: 7, scope: !5481)
!5509 = !DILocation(line: 612, column: 9, scope: !5481)
!5510 = !DILocation(line: 612, column: 23, scope: !5481)
!5511 = !DILocation(line: 619, column: 24, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5481, file: !2247, line: 619, column: 7)
!5513 = !DILocation(line: 619, column: 7, scope: !5481)
!5514 = !DILocation(line: 625, column: 9, scope: !5481)
!5515 = !DILocation(line: 625, column: 17, scope: !5481)
!5516 = !DILocation(line: 626, column: 3, scope: !5481)
!5517 = !DILocation(line: 629, column: 20, scope: !5475)
!5518 = !DILocation(line: 629, column: 8, scope: !5475)
!5519 = !DILocation(line: 518, column: 23, scope: !5475)
!5520 = !DILocation(line: 631, column: 2, scope: !5475)
!5521 = distinct !DISubprogram(name: "extract_decimal", scope: !2247, file: !2247, line: 318, type: !5522, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5525)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{!120, !5524}
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!5525 = !{!5526, !5527, !5528}
!5526 = !DILocalVariable(name: "str", arg: 1, scope: !5521, file: !2247, line: 318, type: !5524)
!5527 = !DILocalVariable(name: "sp", scope: !5521, file: !2247, line: 320, type: !199)
!5528 = !DILocalVariable(name: "val", scope: !5521, file: !2247, line: 321, type: !120)
!5529 = !DILocation(line: 0, scope: !5521)
!5530 = !DILocation(line: 320, column: 19, scope: !5521)
!5531 = !DILocation(line: 323, column: 37, scope: !5521)
!5532 = !DILocation(line: 323, column: 17, scope: !5521)
!5533 = !DILocation(line: 323, column: 9, scope: !5521)
!5534 = !DILocation(line: 323, column: 2, scope: !5521)
!5535 = !DILocation(line: 324, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5521, file: !2247, line: 323, column: 43)
!5537 = !DILocation(line: 324, column: 24, scope: !5536)
!5538 = !DILocation(line: 324, column: 19, scope: !5536)
!5539 = !DILocation(line: 324, column: 27, scope: !5536)
!5540 = distinct !{!5540, !5534, !5541}
!5541 = !DILocation(line: 325, column: 2, scope: !5521)
!5542 = !DILocation(line: 326, column: 7, scope: !5521)
!5543 = !DILocation(line: 327, column: 2, scope: !5521)
!5544 = distinct !DISubprogram(name: "isdigit", scope: !5323, file: !5323, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !5545)
!5545 = !{!5546}
!5546 = !DILocalVariable(name: "a", arg: 1, scope: !5544, file: !5323, line: 43, type: !103)
!5547 = !DILocation(line: 0, scope: !5544)
!5548 = !DILocation(line: 45, column: 29, scope: !5544)
!5549 = !DILocation(line: 45, column: 45, scope: !5544)
!5550 = !DILocation(line: 45, column: 2, scope: !5544)
!5551 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5552, file: !5552, line: 9, type: !2819, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2281, retainedNodes: !162)
!5552 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!5553 = !DILocation(line: 11, column: 1, scope: !5551)
!5554 = !{i64 2147561719, i64 2147561762, i64 2147561802}
!5555 = !DILocation(line: 12, column: 1, scope: !5551)
!5556 = !{i64 2147565946, i64 2147565989, i64 2147566029}
!5557 = !DILocation(line: 13, column: 1, scope: !5551)
!5558 = !{i64 2147566155, i64 2147566198, i64 2147566238}
!5559 = !DILocation(line: 14, column: 1, scope: !5551)
!5560 = !{i64 2147566324, i64 2147566367, i64 2147566407}
!5561 = !DILocation(line: 15, column: 1, scope: !5551)
!5562 = !{i64 2147566487, i64 2147566530, i64 2147566570}
!5563 = !DILocation(line: 16, column: 1, scope: !5551)
!5564 = !{i64 2147566671, i64 2147566714, i64 2147566754}
!5565 = !DILocation(line: 17, column: 1, scope: !5551)
!5566 = !{i64 2147566850, i64 2147566893, i64 2147566933}
!5567 = !DILocation(line: 18, column: 1, scope: !5551)
!5568 = !{i64 2147567092, i64 2147567135, i64 2147567175}
!5569 = !DILocation(line: 19, column: 1, scope: !5551)
!5570 = !{i64 2147567327, i64 2147567370, i64 2147567410}
!5571 = !DILocation(line: 20, column: 1, scope: !5551)
!5572 = !{i64 2147567514, i64 2147567557, i64 2147567597}
!5573 = !DILocation(line: 21, column: 1, scope: !5551)
!5574 = !{i64 2147567730, i64 2147567773, i64 2147567813}
!5575 = !DILocation(line: 22, column: 1, scope: !5551)
!5576 = !{i64 2147567933, i64 2147567976, i64 2147568016}
!5577 = !DILocation(line: 23, column: 1, scope: !5551)
!5578 = !{i64 2147568136, i64 2147568179, i64 2147568219}
!5579 = !DILocation(line: 24, column: 1, scope: !5551)
!5580 = !{i64 2147568311, i64 2147568354, i64 2147568394}
!5581 = !DILocation(line: 25, column: 1, scope: !5551)
!5582 = !{i64 2147568519, i64 2147568562, i64 2147568602}
!5583 = !DILocation(line: 26, column: 1, scope: !5551)
!5584 = !{i64 2147568723, i64 2147568766, i64 2147568806}
!5585 = !DILocation(line: 27, column: 1, scope: !5551)
!5586 = !{i64 2147568916, i64 2147568959, i64 2147568999}
!5587 = !DILocation(line: 28, column: 1, scope: !5551)
!5588 = !{i64 2147569118, i64 2147569161, i64 2147569201}
!5589 = !DILocation(line: 29, column: 1, scope: !5551)
!5590 = !{i64 2147569345, i64 2147569388, i64 2147569428}
!5591 = !DILocation(line: 30, column: 1, scope: !5551)
!5592 = !{i64 2147569547, i64 2147569590, i64 2147569630}
!5593 = !DILocation(line: 31, column: 1, scope: !5551)
!5594 = !{i64 2147569762, i64 2147569805, i64 2147569845}
!5595 = !DILocation(line: 32, column: 1, scope: !5551)
!5596 = !{i64 2147569934, i64 2147569977, i64 2147570017}
!5597 = !DILocation(line: 33, column: 1, scope: !5551)
!5598 = !{i64 2147570136, i64 2147570179, i64 2147570219}
!5599 = !DILocation(line: 34, column: 1, scope: !5551)
!5600 = !{i64 2147570362, i64 2147570405, i64 2147570445}
!5601 = !DILocation(line: 35, column: 1, scope: !5551)
!5602 = !{i64 2147570561, i64 2147570604, i64 2147570644}
!5603 = !DILocation(line: 36, column: 1, scope: !5551)
!5604 = !{i64 2147570736, i64 2147570779, i64 2147570819}
!5605 = !DILocation(line: 37, column: 1, scope: !5551)
!5606 = !{i64 2147570989, i64 2147571032, i64 2147571072}
!5607 = !DILocation(line: 38, column: 1, scope: !5551)
!5608 = !{i64 2147571230, i64 2147571273, i64 2147571313}
!5609 = !DILocation(line: 39, column: 1, scope: !5551)
!5610 = !{i64 2147571465, i64 2147571508, i64 2147571548}
!5611 = !DILocation(line: 40, column: 1, scope: !5551)
!5612 = !{i64 2147571697, i64 2147571740, i64 2147571780}
!5613 = !DILocation(line: 41, column: 1, scope: !5551)
!5614 = !{i64 2147571923, i64 2147571966, i64 2147572006}
!5615 = !DILocation(line: 42, column: 1, scope: !5551)
!5616 = !{i64 2147572149, i64 2147572192, i64 2147572232}
!5617 = !DILocation(line: 43, column: 1, scope: !5551)
!5618 = !{i64 2147572375, i64 2147572418, i64 2147572458}
!5619 = !DILocation(line: 44, column: 1, scope: !5551)
!5620 = !{i64 2147572610, i64 2147572653, i64 2147572693}
!5621 = !DILocation(line: 45, column: 1, scope: !5551)
!5622 = !{i64 2147572836, i64 2147572879, i64 2147572919}
!5623 = !DILocation(line: 46, column: 1, scope: !5551)
!5624 = !{i64 2147573083, i64 2147573126, i64 2147573166}
!5625 = !DILocation(line: 47, column: 1, scope: !5551)
!5626 = !{i64 2147573312, i64 2147573355, i64 2147573395}
!5627 = !DILocation(line: 48, column: 1, scope: !5551)
!5628 = !{i64 2147573544, i64 2147573587, i64 2147573627}
!5629 = !DILocation(line: 49, column: 1, scope: !5551)
!5630 = !{i64 2147573788, i64 2147573831, i64 2147573871}
!5631 = !DILocation(line: 50, column: 1, scope: !5551)
!5632 = !{i64 2147574026, i64 2147574069, i64 2147574109}
!5633 = !DILocation(line: 51, column: 1, scope: !5551)
!5634 = !{i64 2147574300, i64 2147574343, i64 2147574383}
!5635 = !DILocation(line: 52, column: 1, scope: !5551)
!5636 = !{i64 2147574538, i64 2147574581, i64 2147574621}
!5637 = !DILocation(line: 53, column: 1, scope: !5551)
!5638 = !{i64 2147578852, i64 2147578895, i64 2147578935}
!5639 = !DILocation(line: 54, column: 1, scope: !5551)
!5640 = !{i64 2147579096, i64 2147579139, i64 2147579179}
!5641 = !DILocation(line: 55, column: 1, scope: !5551)
!5642 = !{i64 2147579331, i64 2147579374, i64 2147579414}
!5643 = !DILocation(line: 56, column: 1, scope: !5551)
!5644 = !{i64 2147579581, i64 2147579624, i64 2147579664}
!5645 = !DILocation(line: 57, column: 1, scope: !5551)
!5646 = !{i64 2147579828, i64 2147579871, i64 2147579911}
!5647 = !DILocation(line: 58, column: 1, scope: !5551)
!5648 = !{i64 2147580063, i64 2147580106, i64 2147580146}
!5649 = !DILocation(line: 59, column: 1, scope: !5551)
!5650 = !{i64 2147580298, i64 2147580341, i64 2147580381}
!5651 = !DILocation(line: 60, column: 1, scope: !5551)
!5652 = !{i64 2147580533, i64 2147580576, i64 2147580616}
!5653 = !DILocation(line: 61, column: 1, scope: !5551)
!5654 = !{i64 2147580771, i64 2147580814, i64 2147580854}
!5655 = !DILocation(line: 62, column: 1, scope: !5551)
!5656 = !{i64 2147581012, i64 2147581055, i64 2147581095}
!5657 = !DILocation(line: 63, column: 1, scope: !5551)
!5658 = !{i64 2147581292, i64 2147581335, i64 2147581375}
!5659 = !DILocation(line: 64, column: 1, scope: !5551)
!5660 = !{i64 2147581551, i64 2147581594, i64 2147581634}
!5661 = !DILocation(line: 65, column: 1, scope: !5551)
!5662 = !{i64 2147581780, i64 2147581823, i64 2147581863}
!5663 = !DILocation(line: 66, column: 1, scope: !5551)
!5664 = !{i64 2147582006, i64 2147582049, i64 2147582089}
!5665 = !DILocation(line: 67, column: 1, scope: !5551)
!5666 = !{i64 2147582244, i64 2147582287, i64 2147582327}
!5667 = !DILocation(line: 68, column: 1, scope: !5551)
!5668 = !{i64 2147582473, i64 2147582516, i64 2147582556}
!5669 = !DILocation(line: 69, column: 1, scope: !5551)
!5670 = !{i64 2147582681, i64 2147582724, i64 2147582764}
!5671 = !DILocation(line: 70, column: 1, scope: !5551)
!5672 = !{i64 2147582892, i64 2147582935, i64 2147582975}
!5673 = !DILocation(line: 71, column: 1, scope: !5551)
!5674 = !{i64 2147583127, i64 2147583170, i64 2147583210}
!5675 = !DILocation(line: 72, column: 1, scope: !5551)
!5676 = !{i64 2147583356, i64 2147583399, i64 2147583439}
!5677 = !DILocation(line: 73, column: 1, scope: !5551)
!5678 = !{i64 2147583594, i64 2147583637, i64 2147583677}
!5679 = !DILocation(line: 74, column: 1, scope: !5551)
!5680 = !{i64 2147583826, i64 2147583869, i64 2147583909}
!5681 = !DILocation(line: 75, column: 1, scope: !5551)
!5682 = !{i64 2147584052, i64 2147584095, i64 2147584135}
!5683 = !DILocation(line: 76, column: 1, scope: !5551)
!5684 = !{i64 2147584269, i64 2147584312, i64 2147584352}
!5685 = !DILocation(line: 77, column: 1, scope: !5551)
!5686 = !{i64 2147584501, i64 2147584544, i64 2147584584}
!5687 = !DILocation(line: 78, column: 1, scope: !5551)
!5688 = !{i64 2147584727, i64 2147584770, i64 2147584810}
!5689 = !DILocation(line: 79, column: 1, scope: !5551)
!5690 = !{i64 2147584941, i64 2147584984, i64 2147585024}
!5691 = !DILocation(line: 80, column: 1, scope: !5551)
!5692 = !{i64 2147585161, i64 2147585204, i64 2147585244}
!5693 = !DILocation(line: 81, column: 1, scope: !5551)
!5694 = !{i64 2147585393, i64 2147585436, i64 2147585476}
!5695 = !DILocation(line: 82, column: 1, scope: !5551)
!5696 = !{i64 2147585601, i64 2147585644, i64 2147585684}
!5697 = !DILocation(line: 83, column: 1, scope: !5551)
!5698 = !{i64 2147585806, i64 2147585849, i64 2147585889}
!5699 = !DILocation(line: 84, column: 1, scope: !5551)
!5700 = !{i64 2147586023, i64 2147586066, i64 2147586106}
!5701 = !DILocation(line: 85, column: 1, scope: !5551)
!5702 = !{i64 2147586237, i64 2147586280, i64 2147586320}
!5703 = !DILocation(line: 86, column: 1, scope: !5551)
!5704 = !{i64 2147586463, i64 2147586506, i64 2147586546}
!5705 = !DILocation(line: 87, column: 1, scope: !5551)
!5706 = !{i64 2147586683, i64 2147586726, i64 2147586766}
!5707 = !DILocation(line: 88, column: 1, scope: !5551)
!5708 = !{i64 2147590949, i64 2147590992, i64 2147591032}
!5709 = !DILocation(line: 89, column: 1, scope: !5551)
!5710 = !{i64 2147591181, i64 2147591224, i64 2147591264}
!5711 = !DILocation(line: 90, column: 1, scope: !5551)
!5712 = !{i64 2147591416, i64 2147591459, i64 2147591499}
!5713 = !DILocation(line: 91, column: 1, scope: !5551)
!5714 = !{i64 2147591666, i64 2147591709, i64 2147591749}
!5715 = !DILocation(line: 92, column: 1, scope: !5551)
!5716 = !{i64 2147591916, i64 2147591959, i64 2147591999}
!5717 = !DILocation(line: 93, column: 1, scope: !5551)
!5718 = !{i64 2147592154, i64 2147592197, i64 2147592237}
!5719 = !DILocation(line: 94, column: 1, scope: !5551)
!5720 = !{i64 2147592365, i64 2147592408, i64 2147592448}
!5721 = !DILocation(line: 95, column: 1, scope: !5551)
!5722 = !{i64 2147592582, i64 2147592625, i64 2147592665}
!5723 = !DILocation(line: 96, column: 1, scope: !5551)
!5724 = !{i64 2147592778, i64 2147592821, i64 2147592861}
!5725 = !DILocation(line: 97, column: 1, scope: !5551)
!5726 = !{i64 2147592980, i64 2147593023, i64 2147593063}
!5727 = !DILocation(line: 98, column: 1, scope: !5551)
!5728 = !{i64 2147593173, i64 2147593216, i64 2147593256}
!5729 = !DILocation(line: 99, column: 1, scope: !5551)
!5730 = !{i64 2147593381, i64 2147593424, i64 2147593464}
!5731 = !DILocation(line: 100, column: 1, scope: !5551)
!5732 = !{i64 2147593577, i64 2147593620, i64 2147593660}
!5733 = !DILocation(line: 101, column: 1, scope: !5551)
!5734 = !{i64 2147593785, i64 2147593828, i64 2147593868}
!5735 = !DILocation(line: 102, column: 1, scope: !5551)
!5736 = !{i64 2147593996, i64 2147594039, i64 2147594079}
!5737 = !DILocation(line: 103, column: 1, scope: !5551)
!5738 = !{i64 2147594195, i64 2147594238, i64 2147594278}
!5739 = !DILocation(line: 104, column: 1, scope: !5551)
!5740 = !{i64 2147594370, i64 2147594413, i64 2147594453}
!5741 = !DILocation(line: 105, column: 1, scope: !5551)
!5742 = !{i64 2147594554, i64 2147594597, i64 2147594637}
!5743 = !DILocation(line: 106, column: 1, scope: !5551)
!5744 = !{i64 2147594756, i64 2147594799, i64 2147594839}
!5745 = !DILocation(line: 107, column: 1, scope: !5551)
!5746 = !{i64 2147594955, i64 2147594998, i64 2147595038}
!5747 = !DILocation(line: 108, column: 1, scope: !5551)
!5748 = !{i64 2147595121, i64 2147595164, i64 2147595204}
!5749 = !DILocation(line: 109, column: 1, scope: !5551)
!5750 = !{i64 2147595305, i64 2147595348, i64 2147595388}
!5751 = !DILocation(line: 110, column: 1, scope: !5551)
!5752 = !{i64 2147595495, i64 2147595538, i64 2147595578}
!5753 = !DILocation(line: 111, column: 1, scope: !5551)
!5754 = !{i64 2147595679, i64 2147595722, i64 2147595762}
!5755 = !DILocation(line: 112, column: 1, scope: !5551)
!5756 = !{i64 2147595893, i64 2147595936, i64 2147595976}
!5757 = !DILocation(line: 113, column: 1, scope: !5551)
!5758 = !{i64 2147596104, i64 2147596147, i64 2147596187}
!5759 = !DILocation(line: 114, column: 1, scope: !5551)
!5760 = !{i64 2147596327, i64 2147596370, i64 2147596410}
!5761 = !DILocation(line: 115, column: 1, scope: !5551)
!5762 = !{i64 2147596511, i64 2147596554, i64 2147596594}
!5763 = !DILocation(line: 116, column: 1, scope: !5551)
!5764 = !{i64 2147596725, i64 2147596768, i64 2147596808}
!5765 = !DILocation(line: 117, column: 1, scope: !5551)
!5766 = !{i64 2147596891, i64 2147596934, i64 2147596974}
!5767 = !DILocation(line: 118, column: 1, scope: !5551)
!5768 = !{i64 2147597072, i64 2147597115, i64 2147597155}
!5769 = !DILocation(line: 119, column: 1, scope: !5551)
!5770 = !{i64 2147597265, i64 2147597308, i64 2147597348}
!5771 = !DILocation(line: 120, column: 1, scope: !5551)
!5772 = !{i64 2147597491, i64 2147597534, i64 2147597574}
!5773 = !DILocation(line: 121, column: 1, scope: !5551)
!5774 = !{i64 2147597705, i64 2147597748, i64 2147597788}
!5775 = !DILocation(line: 122, column: 1, scope: !5551)
!5776 = !{i64 2147597931, i64 2147597974, i64 2147598014}
!5777 = !DILocation(line: 123, column: 1, scope: !5551)
!5778 = !{i64 2147598148, i64 2147598191, i64 2147598231}
!5779 = !DILocation(line: 124, column: 1, scope: !5551)
!5780 = !{i64 2147598425, i64 2147598468, i64 2147598508}
!5781 = !DILocation(line: 125, column: 1, scope: !5551)
!5782 = !{i64 2147598651, i64 2147598694, i64 2147598734}
!5783 = !DILocation(line: 126, column: 1, scope: !5551)
!5784 = !{i64 2147598859, i64 2147598902, i64 2147598942}
!5785 = !DILocation(line: 127, column: 1, scope: !5551)
!5786 = !{i64 2147599055, i64 2147599098, i64 2147599138}
!5787 = !DILocation(line: 128, column: 1, scope: !5551)
!5788 = !{i64 2147599320, i64 2147599363, i64 2147599403}
!5789 = !DILocation(line: 129, column: 1, scope: !5551)
!5790 = !{i64 2147599534, i64 2147599577, i64 2147599617}
!5791 = !DILocation(line: 130, column: 1, scope: !5551)
!5792 = !{i64 2147599709, i64 2147599752, i64 2147599792}
!5793 = !DILocation(line: 131, column: 1, scope: !5551)
!5794 = !{i64 2147599963, i64 2147600006, i64 2147600046}
!5795 = !DILocation(line: 132, column: 1, scope: !5551)
!5796 = !{i64 2147604223, i64 2147604266, i64 2147604306}
!5797 = !DILocation(line: 133, column: 1, scope: !5551)
!5798 = !{i64 2147604465, i64 2147604508, i64 2147604548}
!5799 = !DILocation(line: 134, column: 1, scope: !5551)
!5800 = !{i64 2147604628, i64 2147604671, i64 2147604711}
!5801 = !DILocation(line: 135, column: 1, scope: !5551)
!5802 = !{i64 2147604815, i64 2147604858, i64 2147604898}
!5803 = !DILocation(line: 136, column: 1, scope: !5551)
!5804 = !{i64 2147605008, i64 2147605051, i64 2147605091}
!5805 = !DILocation(line: 137, column: 1, scope: !5551)
!5806 = !{i64 2147605191, i64 2147605234, i64 2147605274}
!5807 = !DILocation(line: 138, column: 1, scope: !5551)
!5808 = !{i64 2147605405, i64 2147605448, i64 2147605488}
!5809 = !DILocation(line: 139, column: 1, scope: !5551)
!5810 = !{i64 2147605616, i64 2147605659, i64 2147605699}
!5811 = !DILocation(line: 140, column: 1, scope: !5551)
!5812 = !{i64 2147605836, i64 2147605879, i64 2147605919}
!5813 = !DILocation(line: 141, column: 1, scope: !5551)
!5814 = !{i64 2147606043, i64 2147606086, i64 2147606126}
!5815 = !DILocation(line: 142, column: 1, scope: !5551)
!5816 = !{i64 2147606316, i64 2147606359, i64 2147606399}
!5817 = !DILocation(line: 143, column: 1, scope: !5551)
!5818 = !{i64 2147606564, i64 2147606607, i64 2147606647}
!5819 = !DILocation(line: 144, column: 1, scope: !5551)
!5820 = !{i64 2147606763, i64 2147606806, i64 2147606846}
!5821 = !DILocation(line: 145, column: 1, scope: !5551)
!5822 = !{i64 2147606998, i64 2147607041, i64 2147607081}
!5823 = !DILocation(line: 146, column: 1, scope: !5551)
!5824 = !{i64 2147607248, i64 2147607291, i64 2147607331}
!5825 = !DILocation(line: 147, column: 1, scope: !5551)
!5826 = !{i64 2147607450, i64 2147607493, i64 2147607533}
!5827 = !DILocation(line: 148, column: 1, scope: !5551)
!5828 = !{i64 2147607673, i64 2147607716, i64 2147607756}
!5829 = !DILocation(line: 149, column: 1, scope: !5551)
!5830 = !{i64 2147607887, i64 2147607930, i64 2147607970}
!5831 = !DILocation(line: 150, column: 1, scope: !5551)
!5832 = !{i64 2147608131, i64 2147608174, i64 2147608214}
!5833 = !DILocation(line: 151, column: 1, scope: !5551)
!5834 = !{i64 2147608360, i64 2147608403, i64 2147608443}
!5835 = !DILocation(line: 152, column: 1, scope: !5551)
!5836 = !{i64 2147608589, i64 2147608632, i64 2147608672}
!5837 = !DILocation(line: 153, column: 1, scope: !5551)
!5838 = !{i64 2147608797, i64 2147608840, i64 2147608880}
!5839 = !DILocation(line: 154, column: 1, scope: !5551)
!5840 = !{i64 2147609035, i64 2147609078, i64 2147609118}
!5841 = !DILocation(line: 155, column: 1, scope: !5551)
!5842 = !{i64 2147609261, i64 2147609304, i64 2147609344}
!5843 = !DILocation(line: 156, column: 1, scope: !5551)
!5844 = !{i64 2147609520, i64 2147609563, i64 2147609603}
!5845 = !DILocation(line: 157, column: 1, scope: !5551)
!5846 = !{i64 2147609740, i64 2147609783, i64 2147609823}
!5847 = !DILocation(line: 158, column: 1, scope: !5551)
!5848 = !{i64 2147609972, i64 2147610015, i64 2147610055}
!5849 = !DILocation(line: 159, column: 1, scope: !5551)
!5850 = !{i64 2147610213, i64 2147610256, i64 2147610296}
!5851 = !DILocation(line: 160, column: 1, scope: !5551)
!5852 = !{i64 2147610454, i64 2147610497, i64 2147610537}
!5853 = !DILocation(line: 161, column: 1, scope: !5551)
!5854 = !{i64 2147610677, i64 2147610720, i64 2147610760}
!5855 = !DILocation(line: 162, column: 1, scope: !5551)
!5856 = !{i64 2147610894, i64 2147610937, i64 2147610977}
!5857 = !DILocation(line: 163, column: 1, scope: !5551)
!5858 = !{i64 2147611135, i64 2147611178, i64 2147611218}
!5859 = !DILocation(line: 164, column: 1, scope: !5551)
!5860 = !{i64 2147611322, i64 2147611365, i64 2147611405}
!5861 = !DILocation(line: 165, column: 1, scope: !5551)
!5862 = !{i64 2147611509, i64 2147611552, i64 2147611592}
!5863 = !DILocation(line: 166, column: 1, scope: !5551)
!5864 = !{i64 2147611672, i64 2147611715, i64 2147611755}
!5865 = !DILocation(line: 167, column: 1, scope: !5551)
!5866 = !{i64 2147611931, i64 2147611974, i64 2147612014}
!5867 = !DILocation(line: 168, column: 1, scope: !5551)
!5868 = !{i64 2147612154, i64 2147612197, i64 2147612237}
!5869 = !DILocation(line: 169, column: 1, scope: !5551)
!5870 = !{i64 2147612383, i64 2147612426, i64 2147612466}
!5871 = !DILocation(line: 170, column: 1, scope: !5551)
!5872 = !{i64 2147612579, i64 2147612622, i64 2147612662}
!5873 = !DILocation(line: 171, column: 1, scope: !5551)
!5874 = !{i64 2147616852, i64 2147616895, i64 2147616935}
!5875 = !DILocation(line: 172, column: 1, scope: !5551)
!5876 = !{i64 2147617073, i64 2147617116, i64 2147617156}
!5877 = !DILocation(line: 173, column: 1, scope: !5551)
!5878 = !{i64 2147617287, i64 2147617330, i64 2147617370}
!5879 = !DILocation(line: 174, column: 1, scope: !5551)
!5880 = !{i64 2147617477, i64 2147617520, i64 2147617560}
!5881 = !DILocation(line: 175, column: 1, scope: !5551)
!5882 = !{i64 2147617676, i64 2147617719, i64 2147617759}
!5883 = !DILocation(line: 176, column: 1, scope: !5551)
!5884 = !{i64 2147617881, i64 2147617924, i64 2147617964}
!5885 = !DILocation(line: 177, column: 1, scope: !5551)
!5886 = !{i64 2147618101, i64 2147618144, i64 2147618184}
!5887 = !DILocation(line: 178, column: 1, scope: !5551)
!5888 = !{i64 2147618302, i64 2147618345, i64 2147618385}
!5889 = !DILocation(line: 179, column: 1, scope: !5551)
!5890 = !{i64 2147618501, i64 2147618544, i64 2147618584}
!5891 = !DILocation(line: 180, column: 1, scope: !5551)
!5892 = !{i64 2147618706, i64 2147618749, i64 2147618789}
!5893 = !DILocation(line: 181, column: 1, scope: !5551)
!5894 = !{i64 2147618875, i64 2147618918, i64 2147618958}
!5895 = !DILocation(line: 182, column: 1, scope: !5551)
!5896 = !{i64 2147619059, i64 2147619102, i64 2147619142}
!5897 = !DILocation(line: 183, column: 1, scope: !5551)
!5898 = !{i64 2147619243, i64 2147619286, i64 2147619326}
!5899 = !DILocation(line: 184, column: 1, scope: !5551)
!5900 = !{i64 2147619430, i64 2147619473, i64 2147619513}
!5901 = !DILocation(line: 185, column: 1, scope: !5551)
!5902 = !{i64 2147619614, i64 2147619657, i64 2147619697}
!5903 = !DILocation(line: 186, column: 1, scope: !5551)
!5904 = !{i64 2147619852, i64 2147619895, i64 2147619935}
!5905 = !DILocation(line: 187, column: 1, scope: !5551)
!5906 = !{i64 2147620082, i64 2147620125, i64 2147620165}
!5907 = !DILocation(line: 188, column: 1, scope: !5551)
!5908 = !{i64 2147620311, i64 2147620354, i64 2147620394}
!5909 = !DILocation(line: 189, column: 1, scope: !5551)
!5910 = !{i64 2147620498, i64 2147620541, i64 2147620581}
!5911 = !DILocation(line: 190, column: 1, scope: !5551)
!5912 = !{i64 2147620694, i64 2147620737, i64 2147620777}
!5913 = !DILocation(line: 191, column: 1, scope: !5551)
!5914 = !{i64 2147620902, i64 2147620945, i64 2147620985}
!5915 = !DILocation(line: 192, column: 1, scope: !5551)
!5916 = !{i64 2147621114, i64 2147621157, i64 2147621197}
!5917 = !DILocation(line: 193, column: 1, scope: !5551)
!5918 = !{i64 2147621313, i64 2147621356, i64 2147621396}
!5919 = !DILocation(line: 194, column: 1, scope: !5551)
!5920 = !{i64 2147621551, i64 2147621594, i64 2147621634}
!5921 = !DILocation(line: 195, column: 1, scope: !5551)
!5922 = !{i64 2147621747, i64 2147621790, i64 2147621830}
!5923 = !DILocation(line: 196, column: 1, scope: !5551)
!5924 = !{i64 2147621949, i64 2147621992, i64 2147622032}
!5925 = !DILocation(line: 197, column: 1, scope: !5551)
!5926 = !{i64 2147622142, i64 2147622185, i64 2147622225}
!5927 = !DILocation(line: 198, column: 1, scope: !5551)
!5928 = !{i64 2147622376, i64 2147622419, i64 2147622459}
!5929 = !DILocation(line: 199, column: 1, scope: !5551)
!5930 = !{i64 2147622539, i64 2147622582, i64 2147622622}
!5931 = !DILocation(line: 200, column: 1, scope: !5551)
!5932 = !{i64 2147622778, i64 2147622821, i64 2147622861}
!5933 = !DILocation(line: 201, column: 1, scope: !5551)
!5934 = !{i64 2147623017, i64 2147623060, i64 2147623100}
!5935 = !DILocation(line: 202, column: 1, scope: !5551)
!5936 = !{i64 2147623253, i64 2147623296, i64 2147623336}
!5937 = !DILocation(line: 203, column: 1, scope: !5551)
!5938 = !{i64 2147623483, i64 2147623526, i64 2147623566}
!5939 = !DILocation(line: 204, column: 1, scope: !5551)
!5940 = !{i64 2147623670, i64 2147623713, i64 2147623753}
!5941 = !DILocation(line: 205, column: 1, scope: !5551)
!5942 = !{i64 2147623869, i64 2147623912, i64 2147623952}
!5943 = !DILocation(line: 206, column: 1, scope: !5551)
!5944 = !{i64 2147624140, i64 2147624183, i64 2147624223}
!5945 = !DILocation(line: 207, column: 1, scope: !5551)
!5946 = !{i64 2147624315, i64 2147624358, i64 2147624398}
!5947 = !DILocation(line: 208, column: 1, scope: !5551)
!5948 = !{i64 2147624549, i64 2147624592, i64 2147624632}
!5949 = !DILocation(line: 209, column: 1, scope: !5551)
!5950 = !{i64 2147624757, i64 2147624800, i64 2147624840}
!5951 = !DILocation(line: 210, column: 1, scope: !5551)
!5952 = !{i64 2147624975, i64 2147625018, i64 2147625058}
!5953 = !DILocation(line: 211, column: 1, scope: !5551)
!5954 = !{i64 2147625165, i64 2147625208, i64 2147625248}
!5955 = !DILocation(line: 212, column: 1, scope: !5551)
!5956 = !{i64 2147625361, i64 2147625404, i64 2147625444}
!5957 = !DILocation(line: 213, column: 1, scope: !5551)
!5958 = !{i64 2147625567, i64 2147625610, i64 2147625650}
!5959 = !DILocation(line: 214, column: 1, scope: !5551)
!5960 = !{i64 2147625772, i64 2147625815, i64 2147625855}
!5961 = !DILocation(line: 215, column: 1, scope: !5551)
!5962 = !{i64 2147630047, i64 2147630090, i64 2147630130}
!5963 = !DILocation(line: 216, column: 1, scope: !5551)
!5964 = !{i64 2147630273, i64 2147630316, i64 2147630356}
!5965 = !DILocation(line: 217, column: 1, scope: !5551)
!5966 = !{i64 2147630505, i64 2147630548, i64 2147630588}
!5967 = !DILocation(line: 218, column: 1, scope: !5551)
!5968 = !{i64 2147630689, i64 2147630732, i64 2147630772}
!5969 = !DILocation(line: 219, column: 1, scope: !5551)
!5970 = !{i64 2147630898, i64 2147630941, i64 2147630981}
!5971 = !DILocation(line: 220, column: 1, scope: !5551)
!5972 = !{i64 2147631082, i64 2147631125, i64 2147631165}
!5973 = !DILocation(line: 221, column: 1, scope: !5551)
!5974 = !{i64 2147631308, i64 2147631351, i64 2147631391}
!5975 = !DILocation(line: 222, column: 1, scope: !5551)
!5976 = !{i64 2147631534, i64 2147631577, i64 2147631617}
!5977 = !DILocation(line: 223, column: 1, scope: !5551)
!5978 = !{i64 2147631760, i64 2147631803, i64 2147631843}
!5979 = !DILocation(line: 224, column: 1, scope: !5551)
!5980 = !{i64 2147631986, i64 2147632029, i64 2147632069}
!5981 = !DILocation(line: 225, column: 1, scope: !5551)
!5982 = !{i64 2147632212, i64 2147632255, i64 2147632295}
!5983 = !DILocation(line: 226, column: 1, scope: !5551)
!5984 = !{i64 2147632444, i64 2147632487, i64 2147632527}
!5985 = !DILocation(line: 227, column: 1, scope: !5551)
!5986 = !{i64 2147632682, i64 2147632725, i64 2147632765}
!5987 = !DILocation(line: 228, column: 1, scope: !5551)
!5988 = !{i64 2147632902, i64 2147632945, i64 2147632985}
!5989 = !DILocation(line: 229, column: 1, scope: !5551)
!5990 = !{i64 2147633146, i64 2147633189, i64 2147633229}
!5991 = !DILocation(line: 230, column: 1, scope: !5551)
!5992 = !{i64 2147633387, i64 2147633430, i64 2147633470}
!5993 = !DILocation(line: 231, column: 1, scope: !5551)
!5994 = !{i64 2147633622, i64 2147633665, i64 2147633705}
!5995 = !DILocation(line: 232, column: 1, scope: !5551)
!5996 = !{i64 2147633854, i64 2147633897, i64 2147633937}
!5997 = !DILocation(line: 233, column: 1, scope: !5551)
!5998 = !{i64 2147634056, i64 2147634099, i64 2147634139}
!5999 = !DILocation(line: 234, column: 1, scope: !5551)
!6000 = !{i64 2147634306, i64 2147634349, i64 2147634389}
!6001 = !DILocation(line: 235, column: 1, scope: !5551)
!6002 = !{i64 2147634544, i64 2147634587, i64 2147634627}
!6003 = !DILocation(line: 236, column: 1, scope: !5551)
!6004 = !{i64 2147634728, i64 2147634771, i64 2147634811}
!6005 = !DILocation(line: 237, column: 1, scope: !5551)
!6006 = !{i64 2147634952, i64 2147634995, i64 2147635035}
!6007 = !DILocation(line: 238, column: 1, scope: !5551)
!6008 = !{i64 2147635190, i64 2147635233, i64 2147635273}
!6009 = !DILocation(line: 239, column: 1, scope: !5551)
!6010 = !{i64 2147635428, i64 2147635471, i64 2147635511}
!6011 = !DILocation(line: 240, column: 1, scope: !5551)
!6012 = !{i64 2147635621, i64 2147635664, i64 2147635704}
!6013 = !DILocation(line: 241, column: 1, scope: !5551)
!6014 = !{i64 2147635874, i64 2147635917, i64 2147635957}
!6015 = !DILocation(line: 242, column: 1, scope: !5551)
!6016 = !{i64 2147636088, i64 2147636131, i64 2147636171}
!6017 = !DILocation(line: 243, column: 1, scope: !5551)
!6018 = !{i64 2147636296, i64 2147636339, i64 2147636379}
!6019 = !DILocation(line: 244, column: 1, scope: !5551)
!6020 = !{i64 2147636486, i64 2147636529, i64 2147636569}
!6021 = !DILocation(line: 245, column: 1, scope: !5551)
!6022 = !{i64 2147636700, i64 2147636743, i64 2147636783}
!6023 = !DILocation(line: 246, column: 1, scope: !5551)
!6024 = !{i64 2147636962, i64 2147637005, i64 2147637045}
!6025 = !DILocation(line: 247, column: 1, scope: !5551)
!6026 = !{i64 2147637173, i64 2147637216, i64 2147637256}
!6027 = !DILocation(line: 248, column: 1, scope: !5551)
!6028 = !{i64 2147637417, i64 2147637460, i64 2147637500}
!6029 = !DILocation(line: 249, column: 1, scope: !5551)
!6030 = !{i64 2147637628, i64 2147637671, i64 2147637711}
!6031 = !DILocation(line: 250, column: 1, scope: !5551)
!6032 = !{i64 2147637857, i64 2147637900, i64 2147637940}
!6033 = !DILocation(line: 251, column: 1, scope: !5551)
!6034 = !{i64 2147638122, i64 2147638165, i64 2147638205}
!6035 = !DILocation(line: 252, column: 1, scope: !5551)
!6036 = !{i64 2147638327, i64 2147638370, i64 2147638410}
!6037 = !DILocation(line: 253, column: 1, scope: !5551)
!6038 = !{i64 2147642584, i64 2147642627, i64 2147642667}
!6039 = !DILocation(line: 254, column: 1, scope: !5551)
!6040 = !{i64 2147642807, i64 2147642850, i64 2147642890}
!6041 = !DILocation(line: 255, column: 1, scope: !5551)
!6042 = !{i64 2147642970, i64 2147643013, i64 2147643053}
!6043 = !DILocation(line: 256, column: 1, scope: !5551)
!6044 = !{i64 2147643175, i64 2147643218, i64 2147643258}
!6045 = !DILocation(line: 257, column: 1, scope: !5551)
!6046 = !{i64 2147643395, i64 2147643438, i64 2147643478}
!6047 = !DILocation(line: 258, column: 1, scope: !5551)
!6048 = !{i64 2147643609, i64 2147643652, i64 2147643692}
!6049 = !DILocation(line: 259, column: 1, scope: !5551)
!6050 = !{i64 2147643823, i64 2147643866, i64 2147643906}
!6051 = !DILocation(line: 260, column: 1, scope: !5551)
!6052 = !{i64 2147644043, i64 2147644086, i64 2147644126}
!6053 = !DILocation(line: 261, column: 1, scope: !5551)
!6054 = !{i64 2147644254, i64 2147644297, i64 2147644337}
!6055 = !DILocation(line: 262, column: 1, scope: !5551)
!6056 = !{i64 2147644447, i64 2147644490, i64 2147644530}
!6057 = !DILocation(line: 263, column: 1, scope: !5551)
!6058 = !{i64 2147644646, i64 2147644689, i64 2147644729}
!6059 = !DILocation(line: 264, column: 1, scope: !5551)
!6060 = !{i64 2147644818, i64 2147644861, i64 2147644901}
!6061 = !DILocation(line: 265, column: 1, scope: !5551)
!6062 = !{i64 2147645011, i64 2147645054, i64 2147645094}
!6063 = !DILocation(line: 266, column: 1, scope: !5551)
!6064 = !{i64 2147645207, i64 2147645250, i64 2147645290}
!6065 = !DILocation(line: 267, column: 1, scope: !5551)
!6066 = !{i64 2147645434, i64 2147645477, i64 2147645517}
!6067 = !DILocation(line: 268, column: 1, scope: !5551)
!6068 = !{i64 2147645651, i64 2147645694, i64 2147645734}
!6069 = !DILocation(line: 269, column: 1, scope: !5551)
!6070 = !{i64 2147645943, i64 2147645986, i64 2147646026}
!6071 = !DILocation(line: 270, column: 1, scope: !5551)
!6072 = !{i64 2147646175, i64 2147646218, i64 2147646258}
!6073 = !DILocation(line: 271, column: 1, scope: !5551)
!6074 = !{i64 2147646392, i64 2147646435, i64 2147646475}
!6075 = !DILocation(line: 272, column: 1, scope: !5551)
!6076 = !{i64 2147646599, i64 2147646642, i64 2147646682}
!6077 = !DILocation(line: 273, column: 1, scope: !5551)
!6078 = !{i64 2147646800, i64 2147646843, i64 2147646883}
!6079 = !DILocation(line: 274, column: 1, scope: !5551)
!6080 = !{i64 2147647032, i64 2147647075, i64 2147647115}
!6081 = !DILocation(line: 275, column: 1, scope: !5551)
!6082 = !{i64 2147647240, i64 2147647283, i64 2147647323}
!6083 = !DILocation(line: 276, column: 1, scope: !5551)
!6084 = !{i64 2147647430, i64 2147647473, i64 2147647513}
!6085 = !DILocation(line: 277, column: 1, scope: !5551)
!6086 = !{i64 2147647656, i64 2147647699, i64 2147647739}
!6087 = !DILocation(line: 278, column: 1, scope: !5551)
!6088 = !{i64 2147647845, i64 2147647888, i64 2147647928}
!6089 = !DILocation(line: 279, column: 1, scope: !5551)
!6090 = !{i64 2147648116, i64 2147648159, i64 2147648199}
!6091 = !DILocation(line: 280, column: 1, scope: !5551)
!6092 = !{i64 2147648336, i64 2147648379, i64 2147648419}
!6093 = !DILocation(line: 281, column: 1, scope: !5551)
!6094 = !{i64 2147648589, i64 2147648632, i64 2147648672}
!6095 = !DILocation(line: 282, column: 1, scope: !5551)
!6096 = !{i64 2147648797, i64 2147648840, i64 2147648880}
!6097 = !DILocation(line: 283, column: 1, scope: !5551)
!6098 = !{i64 2147649029, i64 2147649072, i64 2147649112}
!6099 = !DILocation(line: 284, column: 1, scope: !5551)
!6100 = !{i64 2147649240, i64 2147649283, i64 2147649323}
!6101 = !DILocation(line: 285, column: 1, scope: !5551)
!6102 = !{i64 2147649430, i64 2147649473, i64 2147649513}
!6103 = !DILocation(line: 286, column: 1, scope: !5551)
!6104 = !{i64 2147649644, i64 2147649687, i64 2147649727}
!6105 = !DILocation(line: 287, column: 1, scope: !5551)
!6106 = !{i64 2147649843, i64 2147649886, i64 2147649926}
!6107 = !DILocation(line: 288, column: 1, scope: !5551)
!6108 = !{i64 2147650030, i64 2147650073, i64 2147650113}
!6109 = !DILocation(line: 289, column: 1, scope: !5551)
!6110 = !{i64 2147650238, i64 2147650281, i64 2147650321}
!6111 = !DILocation(line: 290, column: 1, scope: !5551)
!6112 = !{i64 2147650467, i64 2147650510, i64 2147650550}
!6113 = !DILocation(line: 291, column: 1, scope: !5551)
!6114 = !{i64 2147650669, i64 2147650712, i64 2147650752}
!6115 = !DILocation(line: 292, column: 1, scope: !5551)
!6116 = !{i64 2147650868, i64 2147650911, i64 2147650951}
!6117 = !DILocation(line: 293, column: 1, scope: !5551)
!6118 = !{i64 2147651085, i64 2147651128, i64 2147651168}
!6119 = !DILocation(line: 295, column: 1, scope: !5551)
!6120 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !184, file: !184, line: 30, type: !191, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6121)
!6121 = !{!6122, !6123}
!6122 = !DILocalVariable(name: "arg", arg: 1, scope: !6120, file: !184, line: 30, type: !193)
!6123 = !DILocalVariable(name: "key", scope: !6120, file: !184, line: 32, type: !137)
!6124 = !DILocation(line: 0, scope: !6120)
!6125 = !DILocation(line: 37, column: 2, scope: !6120)
!6126 = !DILocation(line: 38, column: 2, scope: !6120)
!6127 = !DILocation(line: 55, column: 2, scope: !6128, inlinedAt: !6135)
!6128 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6132)
!6129 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!32}
!6132 = !{!6133, !6134}
!6133 = !DILocalVariable(name: "key", scope: !6128, file: !6129, line: 44, type: !32)
!6134 = !DILocalVariable(name: "tmp", scope: !6128, file: !6129, line: 53, type: !32)
!6135 = distinct !DILocation(line: 40, column: 8, scope: !6120)
!6136 = !{i64 2130560}
!6137 = !DILocation(line: 0, scope: !6128, inlinedAt: !6135)
!6138 = !DILocalVariable(name: "key", arg: 1, scope: !6139, file: !6129, line: 84, type: !32)
!6139 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !6142)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{null, !32}
!6142 = !{!6138}
!6143 = !DILocation(line: 0, scope: !6139, inlinedAt: !6144)
!6144 = distinct !DILocation(line: 47, column: 2, scope: !6120)
!6145 = !DILocation(line: 95, column: 2, scope: !6139, inlinedAt: !6144)
!6146 = !{i64 2131377}
!6147 = !DILocation(line: 51, column: 18, scope: !6120)
!6148 = !DILocation(line: 53, column: 2, scope: !6120)
!6149 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6150, file: !6150, line: 1609, type: !2819, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6150 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6151 = !DILocation(line: 1611, column: 3, scope: !6149)
!6152 = !DILocation(line: 1612, column: 1, scope: !6149)
!6153 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6150, file: !6150, line: 1629, type: !2819, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !162)
!6154 = !DILocation(line: 1631, column: 3, scope: !6153)
!6155 = !DILocation(line: 1632, column: 1, scope: !6153)
!6156 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !225, file: !225, line: 26, type: !231, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !222, retainedNodes: !6157)
!6157 = !{!6158}
!6158 = !DILocalVariable(name: "dev", arg: 1, scope: !6156, file: !225, line: 26, type: !233)
!6159 = !DILocation(line: 0, scope: !6156)
!6160 = !DILocation(line: 68, column: 2, scope: !6156)
!6161 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6162, file: !6162, line: 57, type: !6163, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2283, retainedNodes: !6209)
!6162 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6163 = !DISubroutineType(types: !6164)
!6164 = !{null, !32, !6165}
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6166, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6167)
!6167 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2403, line: 141, baseType: !6168)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2403, line: 97, size: 256, elements: !6169)
!6169 = !{!6170}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6168, file: !2403, line: 107, baseType: !6171, size: 256)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2403, line: 98, size: 256, elements: !6172)
!6172 = !{!6173, !6178, !6183, !6188, !6193, !6198, !6203, !6208}
!6173 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 99, baseType: !6174, size: 32)
!6174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 99, size: 32, elements: !6175)
!6175 = !{!6176, !6177}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6174, file: !2403, line: 99, baseType: !137, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6174, file: !2403, line: 99, baseType: !137, size: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 100, baseType: !6179, size: 32, offset: 32)
!6179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 100, size: 32, elements: !6180)
!6180 = !{!6181, !6182}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6179, file: !2403, line: 100, baseType: !137, size: 32)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6179, file: !2403, line: 100, baseType: !137, size: 32)
!6183 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 101, baseType: !6184, size: 32, offset: 64)
!6184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 101, size: 32, elements: !6185)
!6185 = !{!6186, !6187}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6184, file: !2403, line: 101, baseType: !137, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6184, file: !2403, line: 101, baseType: !137, size: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 102, baseType: !6189, size: 32, offset: 96)
!6189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 102, size: 32, elements: !6190)
!6190 = !{!6191, !6192}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6189, file: !2403, line: 102, baseType: !137, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6189, file: !2403, line: 102, baseType: !137, size: 32)
!6193 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 103, baseType: !6194, size: 32, offset: 128)
!6194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 103, size: 32, elements: !6195)
!6195 = !{!6196, !6197}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6194, file: !2403, line: 103, baseType: !137, size: 32)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6194, file: !2403, line: 103, baseType: !137, size: 32)
!6198 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 104, baseType: !6199, size: 32, offset: 160)
!6199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 104, size: 32, elements: !6200)
!6200 = !{!6201, !6202}
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6199, file: !2403, line: 104, baseType: !137, size: 32)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6199, file: !2403, line: 104, baseType: !137, size: 32)
!6203 = !DIDerivedType(tag: DW_TAG_member, scope: !6171, file: !2403, line: 105, baseType: !6204, size: 32, offset: 192)
!6204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6171, file: !2403, line: 105, size: 32, elements: !6205)
!6205 = !{!6206, !6207}
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6204, file: !2403, line: 105, baseType: !137, size: 32)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6204, file: !2403, line: 105, baseType: !137, size: 32)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6171, file: !2403, line: 106, baseType: !137, size: 32, offset: 224)
!6209 = !{!6210, !6211}
!6210 = !DILocalVariable(name: "reason", arg: 1, scope: !6161, file: !6162, line: 57, type: !32)
!6211 = !DILocalVariable(name: "esf", arg: 2, scope: !6161, file: !6162, line: 57, type: !6165)
!6212 = !DILocation(line: 0, scope: !6161)
!6213 = !DILocation(line: 63, column: 2, scope: !6161)
!6214 = !DILocation(line: 64, column: 1, scope: !6161)
!6215 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6162, file: !6162, line: 82, type: !6216, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2283, retainedNodes: !6231)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !6165, !6218}
!6218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6219, size: 32)
!6219 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6220)
!6220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6221)
!6221 = !{!6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6220, file: !334, line: 26, baseType: !137, size: 32)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6220, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6220, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6220, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6220, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6220, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6220, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6220, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6220, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6231 = !{!6232, !6233, !6234}
!6232 = !DILocalVariable(name: "esf", arg: 1, scope: !6215, file: !6162, line: 82, type: !6165)
!6233 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6215, file: !6162, line: 82, type: !6218)
!6234 = !DILocalVariable(name: "reason", scope: !6215, file: !6162, line: 88, type: !32)
!6235 = !DILocation(line: 0, scope: !6215)
!6236 = !DILocation(line: 88, column: 35, scope: !6215)
!6237 = !DILocation(line: 108, column: 2, scope: !6215)
!6238 = !DILocation(line: 131, column: 1, scope: !6215)
!6239 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6162, file: !6162, line: 133, type: !6240, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2283, retainedNodes: !6242)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{null, !102}
!6242 = !{!6243, !6244, !6245}
!6243 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6239, file: !6162, line: 133, type: !102)
!6244 = !DILocalVariable(name: "ssf_contents", scope: !6239, file: !6162, line: 135, type: !149)
!6245 = !DILocalVariable(name: "oops_esf", scope: !6239, file: !6162, line: 136, type: !6167)
!6246 = !DILocation(line: 0, scope: !6239)
!6247 = !DILocation(line: 136, column: 2, scope: !6239)
!6248 = !DILocation(line: 136, column: 15, scope: !6239)
!6249 = !DILocation(line: 139, column: 22, scope: !6239)
!6250 = !DILocation(line: 139, column: 17, scope: !6239)
!6251 = !DILocation(line: 139, column: 20, scope: !6239)
!6252 = !DILocation(line: 141, column: 2, scope: !6239)
!6253 = !DILocation(line: 142, column: 2, scope: !6239)
!6254 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6255, file: !6255, line: 40, type: !6140, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6256)
!6255 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6256 = !{!6257}
!6257 = !DILocalVariable(name: "irq", arg: 1, scope: !6254, file: !6255, line: 40, type: !32)
!6258 = !DILocation(line: 0, scope: !6254)
!6259 = !DILocation(line: 42, column: 2, scope: !6254)
!6260 = !DILocation(line: 43, column: 1, scope: !6254)
!6261 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !402, file: !402, line: 1684, type: !6262, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{null, !658}
!6264 = !{!6265}
!6265 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6261, file: !402, line: 1684, type: !658)
!6266 = !DILocation(line: 0, scope: !6261)
!6267 = !DILocation(line: 1686, column: 23, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6261, file: !402, line: 1686, column: 7)
!6269 = !DILocation(line: 1686, column: 7, scope: !6261)
!6270 = !DILocation(line: 1688, column: 5, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6268, file: !402, line: 1687, column: 3)
!6272 = !{i64 2151023532}
!6273 = !DILocation(line: 1689, column: 81, scope: !6271)
!6274 = !DILocation(line: 1689, column: 60, scope: !6271)
!6275 = !DILocation(line: 1689, column: 34, scope: !6271)
!6276 = !DILocation(line: 1689, column: 5, scope: !6271)
!6277 = !DILocation(line: 1689, column: 43, scope: !6271)
!6278 = !DILocation(line: 1690, column: 5, scope: !6271)
!6279 = !{i64 2151023646}
!6280 = !DILocation(line: 1691, column: 3, scope: !6271)
!6281 = !DILocation(line: 1692, column: 1, scope: !6261)
!6282 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6255, file: !6255, line: 45, type: !6140, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6283)
!6283 = !{!6284}
!6284 = !DILocalVariable(name: "irq", arg: 1, scope: !6282, file: !6255, line: 45, type: !32)
!6285 = !DILocation(line: 0, scope: !6282)
!6286 = !DILocation(line: 47, column: 2, scope: !6282)
!6287 = !DILocation(line: 48, column: 1, scope: !6282)
!6288 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !402, file: !402, line: 1722, type: !6262, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6289)
!6289 = !{!6290}
!6290 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6288, file: !402, line: 1722, type: !658)
!6291 = !DILocation(line: 0, scope: !6288)
!6292 = !DILocation(line: 1724, column: 23, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !402, line: 1724, column: 7)
!6294 = !DILocation(line: 1724, column: 7, scope: !6288)
!6295 = !DILocation(line: 1726, column: 81, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6293, file: !402, line: 1725, column: 3)
!6297 = !DILocation(line: 1726, column: 60, scope: !6296)
!6298 = !DILocation(line: 1726, column: 34, scope: !6296)
!6299 = !DILocation(line: 1726, column: 5, scope: !6296)
!6300 = !DILocation(line: 1726, column: 43, scope: !6296)
!6301 = !DILocation(line: 271, column: 3, scope: !6302, inlinedAt: !6304)
!6302 = distinct !DISubprogram(name: "__DSB", scope: !6303, file: !6303, line: 269, type: !2819, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !162)
!6303 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6304 = distinct !DILocation(line: 1727, column: 5, scope: !6296)
!6305 = !{i64 3477915}
!6306 = !DILocation(line: 260, column: 3, scope: !6307, inlinedAt: !6308)
!6307 = distinct !DISubprogram(name: "__ISB", scope: !6303, file: !6303, line: 258, type: !2819, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !162)
!6308 = distinct !DILocation(line: 1728, column: 5, scope: !6296)
!6309 = !{i64 3477632}
!6310 = !DILocation(line: 1729, column: 3, scope: !6296)
!6311 = !DILocation(line: 1730, column: 1, scope: !6288)
!6312 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6255, file: !6255, line: 50, type: !6313, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6315)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!103, !32}
!6315 = !{!6316}
!6316 = !DILocalVariable(name: "irq", arg: 1, scope: !6312, file: !6255, line: 50, type: !32)
!6317 = !DILocation(line: 0, scope: !6312)
!6318 = !DILocation(line: 52, column: 20, scope: !6312)
!6319 = !DILocation(line: 52, column: 9, scope: !6312)
!6320 = !DILocation(line: 52, column: 41, scope: !6312)
!6321 = !DILocation(line: 52, column: 39, scope: !6312)
!6322 = !DILocation(line: 52, column: 2, scope: !6312)
!6323 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6255, file: !6255, line: 64, type: !6324, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6326)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{null, !32, !32, !137}
!6326 = !{!6327, !6328, !6329}
!6327 = !DILocalVariable(name: "irq", arg: 1, scope: !6323, file: !6255, line: 64, type: !32)
!6328 = !DILocalVariable(name: "prio", arg: 2, scope: !6323, file: !6255, line: 64, type: !32)
!6329 = !DILocalVariable(name: "flags", arg: 3, scope: !6323, file: !6255, line: 64, type: !137)
!6330 = !DILocation(line: 0, scope: !6323)
!6331 = !DILocation(line: 83, column: 8, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !6255, line: 82, column: 9)
!6333 = distinct !DILexicalBlock(scope: !6323, file: !6255, line: 76, column: 6)
!6334 = !DILocation(line: 95, column: 2, scope: !6323)
!6335 = !DILocation(line: 96, column: 1, scope: !6323)
!6336 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6337, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6339)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{null, !658, !137}
!6339 = !{!6340, !6341}
!6340 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6336, file: !402, line: 1814, type: !658)
!6341 = !DILocalVariable(name: "priority", arg: 2, scope: !6336, file: !402, line: 1814, type: !137)
!6342 = !DILocation(line: 0, scope: !6336)
!6343 = !DILocation(line: 0, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6336, file: !402, line: 1816, column: 7)
!6345 = !DILocation(line: 1816, column: 7, scope: !6336)
!6346 = !DILocation(line: 1824, column: 1, scope: !6336)
!6347 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6255, file: !6255, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2294, retainedNodes: !6348)
!6348 = !{!6349}
!6349 = !DILocalVariable(name: "unused", arg: 1, scope: !6347, file: !6255, line: 155, type: !13)
!6350 = !DILocation(line: 0, scope: !6347)
!6351 = !DILocation(line: 159, column: 2, scope: !6347)
!6352 = !DILocation(line: 160, column: 1, scope: !6347)
!6353 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6354, file: !6354, line: 87, type: !2819, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2340, retainedNodes: !162)
!6354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6355 = !DILocation(line: 89, column: 2, scope: !6353)
!6356 = !DILocation(line: 90, column: 2, scope: !6353)
!6357 = !DILocation(line: 91, column: 1, scope: !6353)
!6358 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6354, file: !6354, line: 23, type: !2819, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6359 = !DISubprogram(name: "z_arm_int_exit", scope: !6360, file: !6360, line: 153, type: !2819, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!6360 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6361 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6362, file: !6362, line: 256, type: !2819, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !162)
!6362 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6363 = !DILocation(line: 258, column: 2, scope: !6361)
!6364 = !DILocation(line: 260, column: 2, scope: !6361)
!6365 = !DILocation(line: 262, column: 2, scope: !6361)
!6366 = !DILocation(line: 263, column: 2, scope: !6361)
!6367 = !DILocation(line: 267, column: 2, scope: !6361)
!6368 = !DILocation(line: 268, column: 2, scope: !6361)
!6369 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6362, file: !6362, line: 53, type: !2819, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !162)
!6370 = !DILocation(line: 55, column: 12, scope: !6369)
!6371 = !DILocation(line: 271, column: 3, scope: !6372, inlinedAt: !6373)
!6372 = distinct !DISubprogram(name: "__DSB", scope: !6303, file: !6303, line: 269, type: !2819, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !162)
!6373 = distinct !DILocation(line: 56, column: 2, scope: !6369)
!6374 = !{i64 3476586}
!6375 = !DILocation(line: 260, column: 3, scope: !6376, inlinedAt: !6377)
!6376 = distinct !DISubprogram(name: "__ISB", scope: !6303, file: !6303, line: 258, type: !2819, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !162)
!6377 = distinct !DILocation(line: 57, column: 2, scope: !6369)
!6378 = !{i64 3476303}
!6379 = !DILocation(line: 58, column: 1, scope: !6369)
!6380 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6362, file: !6362, line: 96, type: !2819, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !162)
!6381 = !DILocation(line: 103, column: 13, scope: !6380)
!6382 = !DILocation(line: 975, column: 3, scope: !6383, inlinedAt: !6386)
!6383 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6303, file: !6303, line: 971, type: !135, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !6384)
!6384 = !{!6385}
!6385 = !DILocalVariable(name: "result", scope: !6383, file: !6303, line: 973, type: !137)
!6386 = distinct !DILocation(line: 189, column: 16, scope: !6380)
!6387 = !{i64 3497416}
!6388 = !DILocation(line: 0, scope: !6383, inlinedAt: !6386)
!6389 = !DILocation(line: 189, column: 32, scope: !6380)
!6390 = !DILocalVariable(name: "control", arg: 1, scope: !6391, file: !6303, line: 1001, type: !137)
!6391 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6303, file: !6303, line: 1001, type: !6392, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !6394)
!6392 = !DISubroutineType(types: !6393)
!6393 = !{null, !137}
!6394 = !{!6390}
!6395 = !DILocation(line: 0, scope: !6391, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 189, column: 2, scope: !6380)
!6397 = !DILocation(line: 1003, column: 3, scope: !6391, inlinedAt: !6396)
!6398 = !{i64 3498136}
!6399 = !DILocation(line: 260, column: 3, scope: !6376, inlinedAt: !6400)
!6400 = distinct !DILocation(line: 1004, column: 3, scope: !6391, inlinedAt: !6396)
!6401 = !DILocation(line: 191, column: 1, scope: !6380)
!6402 = distinct !DISubprogram(name: "arch_swap", scope: !6403, file: !6403, line: 33, type: !6313, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !6404)
!6403 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6404 = !{!6405}
!6405 = !DILocalVariable(name: "key", arg: 1, scope: !6402, file: !6403, line: 33, type: !32)
!6406 = !DILocation(line: 0, scope: !6402)
!6407 = !DILocation(line: 36, column: 2, scope: !6402)
!6408 = !DILocation(line: 36, column: 17, scope: !6402)
!6409 = !DILocation(line: 36, column: 25, scope: !6402)
!6410 = !DILocation(line: 37, column: 37, scope: !6402)
!6411 = !DILocation(line: 37, column: 17, scope: !6402)
!6412 = !DILocation(line: 37, column: 35, scope: !6402)
!6413 = !DILocation(line: 41, column: 12, scope: !6402)
!6414 = !DILocalVariable(name: "key", arg: 1, scope: !6415, file: !6129, line: 84, type: !32)
!6415 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2370, retainedNodes: !6416)
!6416 = !{!6414}
!6417 = !DILocation(line: 0, scope: !6415, inlinedAt: !6418)
!6418 = distinct !DILocation(line: 44, column: 2, scope: !6402)
!6419 = !DILocation(line: 95, column: 2, scope: !6415, inlinedAt: !6418)
!6420 = !{i64 2238650}
!6421 = !DILocation(line: 53, column: 9, scope: !6402)
!6422 = !DILocation(line: 53, column: 24, scope: !6402)
!6423 = !DILocation(line: 53, column: 2, scope: !6402)
!6424 = distinct !DISubprogram(name: "arch_new_thread", scope: !6425, file: !6425, line: 56, type: !6426, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !6533)
!6425 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6426 = !DISubroutineType(types: !6427)
!6427 = !{null, !6428, !6528, !1022, !3147, !102, !102, !102}
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6429, size: 32)
!6429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6430)
!6430 = !{!6431, !6489, !6501, !6502, !6503, !6504, !6510, !6523}
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6429, file: !263, line: 247, baseType: !6432, size: 384)
!6432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6433)
!6433 = !{!6434, !6458, !6465, !6466, !6467, !6476, !6477, !6478}
!6434 = !DIDerivedType(tag: DW_TAG_member, scope: !6432, file: !263, line: 60, baseType: !6435, size: 64)
!6435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6432, file: !263, line: 60, size: 64, elements: !6436)
!6436 = !{!6437, !6452}
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6435, file: !263, line: 61, baseType: !6438, size: 64)
!6438 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6439)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6440)
!6440 = !{!6441, !6447}
!6441 = !DIDerivedType(tag: DW_TAG_member, scope: !6439, file: !273, line: 38, baseType: !6442, size: 32)
!6442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6439, file: !273, line: 38, size: 32, elements: !6443)
!6443 = !{!6444, !6446}
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6442, file: !273, line: 39, baseType: !6445, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 32)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6442, file: !273, line: 40, baseType: !6445, size: 32)
!6447 = !DIDerivedType(tag: DW_TAG_member, scope: !6439, file: !273, line: 42, baseType: !6448, size: 32, offset: 32)
!6448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6439, file: !273, line: 42, size: 32, elements: !6449)
!6449 = !{!6450, !6451}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6448, file: !273, line: 43, baseType: !6445, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6448, file: !273, line: 44, baseType: !6445, size: 32)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6435, file: !263, line: 62, baseType: !6453, size: 64)
!6453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !6454)
!6454 = !{!6455}
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6453, file: !289, line: 50, baseType: !6456, size: 64)
!6456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6457, size: 64, elements: !294)
!6457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6453, size: 32)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6432, file: !263, line: 68, baseType: !6459, size: 32, offset: 64)
!6459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6460, size: 32)
!6460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !6461)
!6461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !6462)
!6462 = !{!6463}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6461, file: !299, line: 232, baseType: !6464, size: 64)
!6464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6439)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6432, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6432, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!6467 = !DIDerivedType(tag: DW_TAG_member, scope: !6432, file: !263, line: 90, baseType: !6468, size: 16, offset: 112)
!6468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6432, file: !263, line: 90, size: 16, elements: !6469)
!6469 = !{!6470, !6475}
!6470 = !DIDerivedType(tag: DW_TAG_member, scope: !6468, file: !263, line: 91, baseType: !6471, size: 16)
!6471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6468, file: !263, line: 91, size: 16, elements: !6472)
!6472 = !{!6473, !6474}
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6471, file: !263, line: 96, baseType: !313, size: 8)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6471, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6468, file: !263, line: 100, baseType: !151, size: 16)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6432, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6432, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6432, file: !263, line: 131, baseType: !6479, size: 192, offset: 192)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !6480)
!6480 = !{!6481, !6482, !6488}
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6479, file: !299, line: 245, baseType: !6438, size: 64)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6479, file: !299, line: 246, baseType: !6483, size: 32, offset: 64)
!6483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !6484)
!6484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6485, size: 32)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !6487}
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 32)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6479, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6429, file: !263, line: 250, baseType: !6490, size: 288, offset: 384)
!6490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6491)
!6491 = !{!6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500}
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6490, file: !334, line: 26, baseType: !137, size: 32)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6490, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6490, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6490, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6490, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6490, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6490, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6490, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6490, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6429, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6429, file: !263, line: 256, baseType: !6460, size: 64, offset: 704)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6429, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6429, file: !263, line: 300, baseType: !6505, size: 96, offset: 800)
!6505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !6506)
!6506 = !{!6507, !6508, !6509}
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6505, file: !263, line: 153, baseType: !22, size: 32)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6505, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6505, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6429, file: !263, line: 325, baseType: !6511, size: 32, offset: 896)
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 32)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !6513)
!6513 = !{!6514, !6520, !6521}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6512, file: !357, line: 5074, baseType: !6515, size: 96)
!6515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6516)
!6516 = !{!6517, !6518, !6519}
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6515, file: !113, line: 57, baseType: !116, size: 32)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6515, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6515, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6512, file: !357, line: 5075, baseType: !6460, size: 64, offset: 96)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6512, file: !357, line: 5076, baseType: !6522, offset: 160)
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6429, file: !263, line: 343, baseType: !6524, size: 64, offset: 928)
!6524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !6525)
!6525 = !{!6526, !6527}
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6524, file: !334, line: 63, baseType: !137, size: 32)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6524, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 32)
!6529 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3148, line: 44, baseType: !6530)
!6530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1891, line: 47, size: 8, elements: !6531)
!6531 = !{!6532}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6530, file: !1891, line: 48, baseType: !109, size: 8)
!6533 = !{!6534, !6535, !6536, !6537, !6538, !6539, !6540, !6541}
!6534 = !DILocalVariable(name: "thread", arg: 1, scope: !6424, file: !6425, line: 56, type: !6428)
!6535 = !DILocalVariable(name: "stack", arg: 2, scope: !6424, file: !6425, line: 56, type: !6528)
!6536 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6424, file: !6425, line: 57, type: !1022)
!6537 = !DILocalVariable(name: "entry", arg: 4, scope: !6424, file: !6425, line: 57, type: !3147)
!6538 = !DILocalVariable(name: "p1", arg: 5, scope: !6424, file: !6425, line: 58, type: !102)
!6539 = !DILocalVariable(name: "p2", arg: 6, scope: !6424, file: !6425, line: 58, type: !102)
!6540 = !DILocalVariable(name: "p3", arg: 7, scope: !6424, file: !6425, line: 58, type: !102)
!6541 = !DILocalVariable(name: "iframe", scope: !6424, file: !6425, line: 60, type: !2401)
!6542 = !DILocation(line: 0, scope: !6424)
!6543 = !DILocation(line: 85, column: 11, scope: !6424)
!6544 = !DILocation(line: 93, column: 10, scope: !6424)
!6545 = !DILocation(line: 98, column: 13, scope: !6424)
!6546 = !DILocation(line: 100, column: 15, scope: !6424)
!6547 = !DILocation(line: 100, column: 10, scope: !6424)
!6548 = !DILocation(line: 100, column: 13, scope: !6424)
!6549 = !DILocation(line: 101, column: 15, scope: !6424)
!6550 = !DILocation(line: 101, column: 10, scope: !6424)
!6551 = !DILocation(line: 101, column: 13, scope: !6424)
!6552 = !DILocation(line: 102, column: 15, scope: !6424)
!6553 = !DILocation(line: 102, column: 10, scope: !6424)
!6554 = !DILocation(line: 102, column: 13, scope: !6424)
!6555 = !DILocation(line: 103, column: 15, scope: !6424)
!6556 = !DILocation(line: 103, column: 10, scope: !6424)
!6557 = !DILocation(line: 103, column: 13, scope: !6424)
!6558 = !DILocation(line: 106, column: 10, scope: !6424)
!6559 = !DILocation(line: 106, column: 15, scope: !6424)
!6560 = !DILocation(line: 122, column: 29, scope: !6424)
!6561 = !DILocation(line: 122, column: 23, scope: !6424)
!6562 = !DILocation(line: 122, column: 27, scope: !6424)
!6563 = !DILocation(line: 123, column: 15, scope: !6424)
!6564 = !DILocation(line: 123, column: 23, scope: !6424)
!6565 = !DILocation(line: 143, column: 1, scope: !6424)
!6566 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6425, file: !6425, line: 385, type: !6567, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !6570)
!6567 = !DISubroutineType(types: !6568)
!6568 = !{!137, !6569, !6569}
!6569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!6570 = !{!6571, !6572, !6573, !6576}
!6571 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6566, file: !6425, line: 385, type: !6569)
!6572 = !DILocalVariable(name: "psp", arg: 2, scope: !6566, file: !6425, line: 385, type: !6569)
!6573 = !DILocalVariable(name: "thread", scope: !6566, file: !6425, line: 388, type: !6574)
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6429)
!6576 = !DILocalVariable(name: "guard_len", scope: !6566, file: !6425, line: 405, type: !137)
!6577 = !DILocation(line: 0, scope: !6566)
!6578 = !DILocation(line: 388, column: 34, scope: !6566)
!6579 = !DILocation(line: 390, column: 13, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6566, file: !6425, line: 390, column: 6)
!6581 = !DILocation(line: 390, column: 6, scope: !6566)
!6582 = !DILocation(line: 438, column: 6, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6566, file: !6425, line: 438, column: 6)
!6584 = !DILocation(line: 438, column: 6, scope: !6566)
!6585 = !DILocation(line: 442, column: 3, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !6425, line: 440, column: 22)
!6587 = !DILocation(line: 455, column: 1, scope: !6566)
!6588 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6425, file: !6425, line: 530, type: !6589, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2398, retainedNodes: !6591)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{null, !6428, !1022, !3147}
!6591 = !{!6592, !6593, !6594}
!6592 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6588, file: !6425, line: 530, type: !6428)
!6593 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6588, file: !6425, line: 530, type: !1022)
!6594 = !DILocalVariable(name: "_main", arg: 3, scope: !6588, file: !6425, line: 531, type: !3147)
!6595 = !DILocation(line: 0, scope: !6588)
!6596 = !DILocation(line: 535, column: 11, scope: !6588)
!6597 = !DILocation(line: 560, column: 2, scope: !6588)
!6598 = !DILocation(line: 576, column: 2, scope: !6588)
!6599 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6600 = !DILocation(line: 603, column: 2, scope: !6588)
!6601 = distinct !DISubprogram(name: "z_arm_fault", scope: !6602, file: !6602, line: 1036, type: !6603, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6618)
!6602 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6603 = !DISubroutineType(types: !6604)
!6604 = !{null, !137, !137, !137, !6605}
!6605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6606, size: 32)
!6606 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !334, line: 37, baseType: !6607)
!6607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !6608)
!6608 = !{!6609, !6610, !6611, !6612, !6613, !6614, !6615, !6616, !6617}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6607, file: !334, line: 26, baseType: !137, size: 32)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6607, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6607, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6607, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6607, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6607, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6607, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6607, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6607, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627, !6628}
!6619 = !DILocalVariable(name: "msp", arg: 1, scope: !6601, file: !6602, line: 1036, type: !137)
!6620 = !DILocalVariable(name: "psp", arg: 2, scope: !6601, file: !6602, line: 1036, type: !137)
!6621 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6601, file: !6602, line: 1036, type: !137)
!6622 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6601, file: !6602, line: 1037, type: !6605)
!6623 = !DILocalVariable(name: "reason", scope: !6601, file: !6602, line: 1039, type: !137)
!6624 = !DILocalVariable(name: "fault", scope: !6601, file: !6602, line: 1040, type: !103)
!6625 = !DILocalVariable(name: "recoverable", scope: !6601, file: !6602, line: 1041, type: !211)
!6626 = !DILocalVariable(name: "nested_exc", scope: !6601, file: !6602, line: 1041, type: !211)
!6627 = !DILocalVariable(name: "esf", scope: !6601, file: !6602, line: 1042, type: !2469)
!6628 = !DILocalVariable(name: "esf_copy", scope: !6601, file: !6602, line: 1047, type: !2470)
!6629 = !DILocation(line: 0, scope: !6601)
!6630 = !DILocation(line: 1040, column: 19, scope: !6601)
!6631 = !DILocation(line: 1040, column: 24, scope: !6601)
!6632 = !DILocation(line: 1041, column: 2, scope: !6601)
!6633 = !DILocation(line: 1047, column: 2, scope: !6601)
!6634 = !DILocation(line: 1047, column: 15, scope: !6601)
!6635 = !DILocalVariable(name: "key", arg: 1, scope: !6636, file: !6129, line: 84, type: !32)
!6636 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6637)
!6637 = !{!6635}
!6638 = !DILocation(line: 0, scope: !6636, inlinedAt: !6639)
!6639 = distinct !DILocation(line: 1050, column: 2, scope: !6601)
!6640 = !DILocation(line: 95, column: 2, scope: !6636, inlinedAt: !6639)
!6641 = !{i64 2271894}
!6642 = !DILocation(line: 1055, column: 9, scope: !6601)
!6643 = !DILocation(line: 1063, column: 11, scope: !6601)
!6644 = !DILocation(line: 1064, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6601, file: !6602, line: 1064, column: 6)
!6646 = !{i8 0, i8 2}
!6647 = !DILocation(line: 1064, column: 6, scope: !6601)
!6648 = !DILocation(line: 1070, column: 20, scope: !6601)
!6649 = !DILocation(line: 1070, column: 2, scope: !6601)
!6650 = !DILocation(line: 1089, column: 6, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6601, file: !6602, line: 1089, column: 6)
!6652 = !DILocation(line: 0, scope: !6651)
!6653 = !DILocation(line: 1089, column: 6, scope: !6601)
!6654 = !DILocation(line: 1090, column: 28, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6602, line: 1090, column: 7)
!6656 = distinct !DILexicalBlock(scope: !6651, file: !6602, line: 1089, column: 18)
!6657 = !DILocation(line: 1090, column: 44, scope: !6655)
!6658 = !DILocation(line: 1090, column: 7, scope: !6656)
!6659 = !DILocation(line: 1091, column: 24, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6655, file: !6602, line: 1090, column: 50)
!6661 = !DILocation(line: 1092, column: 3, scope: !6660)
!6662 = !DILocation(line: 1094, column: 23, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6651, file: !6602, line: 1093, column: 9)
!6664 = !DILocation(line: 1097, column: 2, scope: !6601)
!6665 = !DILocation(line: 1098, column: 1, scope: !6601)
!6666 = distinct !DISubprogram(name: "get_esf", scope: !6602, file: !6602, line: 894, type: !6667, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6670)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!2469, !137, !137, !137, !6669}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 32)
!6670 = !{!6671, !6672, !6673, !6674, !6675, !6676}
!6671 = !DILocalVariable(name: "msp", arg: 1, scope: !6666, file: !6602, line: 894, type: !137)
!6672 = !DILocalVariable(name: "psp", arg: 2, scope: !6666, file: !6602, line: 894, type: !137)
!6673 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6666, file: !6602, line: 894, type: !137)
!6674 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6666, file: !6602, line: 895, type: !6669)
!6675 = !DILocalVariable(name: "alternative_state_exc", scope: !6666, file: !6602, line: 897, type: !211)
!6676 = !DILocalVariable(name: "ptr_esf", scope: !6666, file: !6602, line: 898, type: !2469)
!6677 = !DILocation(line: 0, scope: !6666)
!6678 = !DILocation(line: 900, column: 14, scope: !6666)
!6679 = !DILocation(line: 902, column: 49, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6666, file: !6602, line: 902, column: 6)
!6681 = !DILocation(line: 902, column: 6, scope: !6666)
!6682 = !DILocation(line: 983, column: 18, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6666, file: !6602, line: 983, column: 6)
!6684 = !DILocation(line: 991, column: 7, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !6602, line: 990, column: 30)
!6686 = distinct !DILexicalBlock(scope: !6666, file: !6602, line: 990, column: 6)
!6687 = !DILocation(line: 998, column: 16, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !6602, line: 995, column: 10)
!6689 = distinct !DILexicalBlock(scope: !6685, file: !6602, line: 991, column: 7)
!6690 = !DILocation(line: 1002, column: 2, scope: !6666)
!6691 = !DILocation(line: 1003, column: 1, scope: !6666)
!6692 = distinct !DISubprogram(name: "fault_handle", scope: !6602, file: !6602, line: 786, type: !6693, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6695)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!137, !2469, !103, !6669}
!6695 = !{!6696, !6697, !6698, !6699}
!6696 = !DILocalVariable(name: "esf", arg: 1, scope: !6692, file: !6602, line: 786, type: !2469)
!6697 = !DILocalVariable(name: "fault", arg: 2, scope: !6692, file: !6602, line: 786, type: !103)
!6698 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6692, file: !6602, line: 786, type: !6669)
!6699 = !DILocalVariable(name: "reason", scope: !6692, file: !6602, line: 788, type: !137)
!6700 = !DILocation(line: 0, scope: !6692)
!6701 = !DILocation(line: 790, column: 15, scope: !6692)
!6702 = !DILocation(line: 792, column: 2, scope: !6692)
!6703 = !DILocation(line: 794, column: 12, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6692, file: !6602, line: 792, column: 17)
!6705 = !DILocation(line: 795, column: 3, scope: !6704)
!6706 = !DILocation(line: 800, column: 12, scope: !6704)
!6707 = !DILocation(line: 801, column: 3, scope: !6704)
!6708 = !DILocation(line: 803, column: 12, scope: !6704)
!6709 = !DILocation(line: 804, column: 3, scope: !6704)
!6710 = !DILocation(line: 806, column: 12, scope: !6704)
!6711 = !DILocation(line: 807, column: 3, scope: !6704)
!6712 = !DILocation(line: 814, column: 3, scope: !6704)
!6713 = !DILocation(line: 815, column: 3, scope: !6704)
!6714 = !DILocation(line: 829, column: 2, scope: !6692)
!6715 = distinct !DISubprogram(name: "hard_fault", scope: !6602, file: !6602, line: 709, type: !6716, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6718)
!6716 = !DISubroutineType(types: !6717)
!6717 = !{!137, !2469, !6669}
!6718 = !{!6719, !6720, !6721}
!6719 = !DILocalVariable(name: "esf", arg: 1, scope: !6715, file: !6602, line: 709, type: !2469)
!6720 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6715, file: !6602, line: 709, type: !6669)
!6721 = !DILocalVariable(name: "reason", scope: !6715, file: !6602, line: 711, type: !137)
!6722 = !DILocation(line: 0, scope: !6715)
!6723 = !DILocation(line: 732, column: 15, scope: !6715)
!6724 = !DILocation(line: 734, column: 12, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6715, file: !6602, line: 734, column: 6)
!6726 = !DILocation(line: 734, column: 17, scope: !6725)
!6727 = !DILocation(line: 734, column: 41, scope: !6725)
!6728 = !DILocation(line: 734, column: 6, scope: !6715)
!6729 = !DILocation(line: 736, column: 19, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6725, file: !6602, line: 736, column: 13)
!6731 = !DILocation(line: 736, column: 49, scope: !6730)
!6732 = !DILocation(line: 736, column: 13, scope: !6725)
!6733 = !DILocation(line: 738, column: 19, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !6602, line: 738, column: 13)
!6735 = !DILocation(line: 738, column: 24, scope: !6734)
!6736 = !DILocation(line: 738, column: 47, scope: !6734)
!6737 = !DILocation(line: 738, column: 13, scope: !6730)
!6738 = !DILocation(line: 740, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6602, line: 740, column: 7)
!6740 = distinct !DILexicalBlock(scope: !6734, file: !6602, line: 738, column: 53)
!6741 = !DILocation(line: 740, column: 7, scope: !6740)
!6742 = !DILocation(line: 742, column: 24, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !6602, line: 740, column: 38)
!6744 = !DILocation(line: 743, column: 3, scope: !6743)
!6745 = !DILocation(line: 743, column: 20, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6739, file: !6602, line: 743, column: 14)
!6747 = !DILocation(line: 743, column: 25, scope: !6746)
!6748 = !DILocation(line: 743, column: 52, scope: !6746)
!6749 = !DILocation(line: 743, column: 14, scope: !6739)
!6750 = !DILocation(line: 744, column: 13, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !6602, line: 743, column: 58)
!6752 = !DILocation(line: 745, column: 3, scope: !6751)
!6753 = !DILocation(line: 745, column: 20, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6746, file: !6602, line: 745, column: 14)
!6755 = !DILocation(line: 745, column: 25, scope: !6754)
!6756 = !DILocation(line: 745, column: 52, scope: !6754)
!6757 = !DILocation(line: 745, column: 14, scope: !6746)
!6758 = !DILocation(line: 746, column: 13, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6754, file: !6602, line: 745, column: 58)
!6760 = !DILocation(line: 747, column: 3, scope: !6759)
!6761 = !DILocation(line: 747, column: 20, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6754, file: !6602, line: 747, column: 14)
!6763 = !DILocation(line: 747, column: 52, scope: !6762)
!6764 = !DILocation(line: 747, column: 14, scope: !6754)
!6765 = !DILocation(line: 748, column: 13, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6762, file: !6602, line: 747, column: 58)
!6767 = !DILocation(line: 753, column: 3, scope: !6766)
!6768 = !DILocation(line: 766, column: 2, scope: !6715)
!6769 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6602, file: !6602, line: 229, type: !6693, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6770)
!6770 = !{!6771, !6772, !6773, !6774, !6775, !6776, !6779}
!6771 = !DILocalVariable(name: "esf", arg: 1, scope: !6769, file: !6602, line: 229, type: !2469)
!6772 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6769, file: !6602, line: 229, type: !103)
!6773 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6769, file: !6602, line: 230, type: !6669)
!6774 = !DILocalVariable(name: "reason", scope: !6769, file: !6602, line: 232, type: !137)
!6775 = !DILocalVariable(name: "mmfar", scope: !6769, file: !6602, line: 233, type: !137)
!6776 = !DILocalVariable(name: "temp", scope: !6777, file: !6602, line: 254, type: !137)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !6602, line: 244, column: 48)
!6778 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 244, column: 6)
!6779 = !DILocalVariable(name: "min_stack_ptr", scope: !6780, file: !6602, line: 309, type: !137)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6602, line: 308, column: 43)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6602, line: 308, column: 7)
!6782 = distinct !DILexicalBlock(scope: !6783, file: !6602, line: 289, column: 40)
!6783 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 288, column: 6)
!6784 = !DILocation(line: 0, scope: !6769)
!6785 = !DILocation(line: 237, column: 12, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 237, column: 6)
!6787 = !DILocation(line: 241, column: 12, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 241, column: 6)
!6789 = !DILocation(line: 244, column: 12, scope: !6778)
!6790 = !DILocation(line: 244, column: 17, scope: !6778)
!6791 = !DILocation(line: 244, column: 42, scope: !6778)
!6792 = !DILocation(line: 244, column: 6, scope: !6769)
!6793 = !DILocation(line: 254, column: 24, scope: !6777)
!6794 = !DILocation(line: 0, scope: !6777)
!6795 = !DILocation(line: 256, column: 13, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6777, file: !6602, line: 256, column: 7)
!6797 = !DILocation(line: 256, column: 18, scope: !6796)
!6798 = !DILocation(line: 256, column: 44, scope: !6796)
!6799 = !DILocation(line: 256, column: 7, scope: !6777)
!6800 = !DILocation(line: 259, column: 24, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6602, line: 259, column: 8)
!6802 = distinct !DILexicalBlock(scope: !6796, file: !6602, line: 256, column: 50)
!6803 = !DILocation(line: 259, column: 8, scope: !6802)
!6804 = !DILocation(line: 261, column: 15, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !6602, line: 259, column: 30)
!6806 = !DILocation(line: 262, column: 4, scope: !6805)
!6807 = !DILocation(line: 265, column: 12, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 265, column: 6)
!6809 = !DILocation(line: 269, column: 12, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 269, column: 6)
!6811 = !DILocation(line: 288, column: 12, scope: !6783)
!6812 = !DILocation(line: 288, column: 17, scope: !6783)
!6813 = !DILocation(line: 288, column: 41, scope: !6783)
!6814 = !DILocation(line: 289, column: 9, scope: !6783)
!6815 = !DILocation(line: 289, column: 14, scope: !6783)
!6816 = !DILocation(line: 288, column: 6, scope: !6769)
!6817 = !DILocation(line: 308, column: 12, scope: !6781)
!6818 = !DILocation(line: 308, column: 17, scope: !6781)
!6819 = !DILocation(line: 308, column: 7, scope: !6782)
!6820 = !DILocation(line: 310, column: 6, scope: !6780)
!6821 = !DILocation(line: 309, column: 29, scope: !6780)
!6822 = !DILocation(line: 0, scope: !6780)
!6823 = !DILocation(line: 312, column: 8, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6780, file: !6602, line: 312, column: 8)
!6825 = !DILocation(line: 312, column: 8, scope: !6780)
!6826 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6827, file: !6303, line: 1099, type: !137)
!6827 = distinct !DISubprogram(name: "__set_PSP", scope: !6303, file: !6303, line: 1099, type: !6392, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6828)
!6828 = !{!6826}
!6829 = !DILocation(line: 0, scope: !6827, inlinedAt: !6830)
!6830 = distinct !DILocation(line: 338, column: 5, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6824, file: !6602, line: 312, column: 23)
!6832 = !DILocation(line: 1101, column: 3, scope: !6827, inlinedAt: !6830)
!6833 = !{i64 3527555}
!6834 = !DILocation(line: 341, column: 4, scope: !6831)
!6835 = !DILocation(line: 360, column: 12, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6769, file: !6602, line: 360, column: 6)
!6837 = !DILocation(line: 360, column: 17, scope: !6836)
!6838 = !DILocation(line: 360, column: 41, scope: !6836)
!6839 = !DILocation(line: 360, column: 6, scope: !6769)
!6840 = !DILocation(line: 361, column: 14, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6836, file: !6602, line: 360, column: 47)
!6842 = !DILocation(line: 362, column: 2, scope: !6841)
!6843 = !DILocation(line: 366, column: 12, scope: !6769)
!6844 = !DILocation(line: 369, column: 15, scope: !6769)
!6845 = !DILocation(line: 371, column: 2, scope: !6769)
!6846 = distinct !DISubprogram(name: "bus_fault", scope: !6602, file: !6602, line: 383, type: !6847, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6849)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{!103, !2469, !103, !6669}
!6849 = !{!6850, !6851, !6852, !6853, !6854}
!6850 = !DILocalVariable(name: "esf", arg: 1, scope: !6846, file: !6602, line: 383, type: !2469)
!6851 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6846, file: !6602, line: 383, type: !103)
!6852 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6846, file: !6602, line: 383, type: !6669)
!6853 = !DILocalVariable(name: "reason", scope: !6846, file: !6602, line: 385, type: !137)
!6854 = !DILocalVariable(name: "bfar", scope: !6855, file: !6602, line: 405, type: !137)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6602, line: 395, column: 42)
!6856 = distinct !DILexicalBlock(scope: !6846, file: !6602, line: 395, column: 6)
!6857 = !DILocation(line: 0, scope: !6846)
!6858 = !DILocation(line: 389, column: 11, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6846, file: !6602, line: 389, column: 6)
!6860 = !DILocation(line: 392, column: 11, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6846, file: !6602, line: 392, column: 6)
!6862 = !DILocation(line: 395, column: 11, scope: !6856)
!6863 = !DILocation(line: 395, column: 16, scope: !6856)
!6864 = !DILocation(line: 395, column: 6, scope: !6846)
!6865 = !DILocation(line: 405, column: 3, scope: !6855)
!6866 = !DILocation(line: 0, scope: !6855)
!6867 = !DILocation(line: 407, column: 13, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6855, file: !6602, line: 407, column: 7)
!6869 = !DILocation(line: 407, column: 18, scope: !6868)
!6870 = !DILocation(line: 407, column: 44, scope: !6868)
!6871 = !DILocation(line: 407, column: 7, scope: !6855)
!6872 = !DILocation(line: 411, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6602, line: 409, column: 30)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !6602, line: 409, column: 8)
!6875 = distinct !DILexicalBlock(scope: !6868, file: !6602, line: 407, column: 50)
!6876 = !DILocation(line: 412, column: 4, scope: !6873)
!6877 = !DILocation(line: 415, column: 11, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6846, file: !6602, line: 415, column: 6)
!6879 = !DILocation(line: 418, column: 12, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6846, file: !6602, line: 418, column: 6)
!6881 = !DILocation(line: 418, column: 17, scope: !6880)
!6882 = !DILocation(line: 418, column: 41, scope: !6880)
!6883 = !DILocation(line: 418, column: 6, scope: !6846)
!6884 = !DILocation(line: 423, column: 18, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6880, file: !6602, line: 423, column: 13)
!6886 = !DILocation(line: 524, column: 12, scope: !6846)
!6887 = !DILocation(line: 526, column: 15, scope: !6846)
!6888 = !DILocation(line: 528, column: 2, scope: !6846)
!6889 = distinct !DISubprogram(name: "usage_fault", scope: !6602, file: !6602, line: 539, type: !6890, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6894)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!137, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 32)
!6893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2470)
!6894 = !{!6895, !6896}
!6895 = !DILocalVariable(name: "esf", arg: 1, scope: !6889, file: !6602, line: 539, type: !6892)
!6896 = !DILocalVariable(name: "reason", scope: !6889, file: !6602, line: 541, type: !137)
!6897 = !DILocation(line: 0, scope: !6889)
!6898 = !DILocation(line: 546, column: 12, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 546, column: 6)
!6900 = !DILocation(line: 549, column: 12, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 549, column: 6)
!6902 = !DILocation(line: 567, column: 12, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 567, column: 6)
!6904 = !DILocation(line: 570, column: 12, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 570, column: 6)
!6906 = !DILocation(line: 573, column: 12, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 573, column: 6)
!6908 = !DILocation(line: 576, column: 12, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6889, file: !6602, line: 576, column: 6)
!6910 = !DILocation(line: 581, column: 12, scope: !6889)
!6911 = !DILocation(line: 583, column: 2, scope: !6889)
!6912 = distinct !DISubprogram(name: "debug_monitor", scope: !6602, file: !6602, line: 632, type: !6913, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6915)
!6913 = !DISubroutineType(types: !6914)
!6914 = !{null, !2469, !6669}
!6915 = !{!6916, !6917}
!6916 = !DILocalVariable(name: "esf", arg: 1, scope: !6912, file: !6602, line: 632, type: !2469)
!6917 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6912, file: !6602, line: 632, type: !6669)
!6918 = !DILocation(line: 0, scope: !6912)
!6919 = !DILocation(line: 634, column: 15, scope: !6912)
!6920 = !DILocation(line: 652, column: 1, scope: !6912)
!6921 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6602, file: !6602, line: 658, type: !6922, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !6924)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!211, !2469}
!6924 = !{!6925, !6926, !6927}
!6925 = !DILocalVariable(name: "esf", arg: 1, scope: !6921, file: !6602, line: 658, type: !2469)
!6926 = !DILocalVariable(name: "ret_addr", scope: !6921, file: !6602, line: 660, type: !150)
!6927 = !DILocalVariable(name: "fault_insn", scope: !6921, file: !6602, line: 686, type: !151)
!6928 = !DILocation(line: 0, scope: !6921)
!6929 = !DILocation(line: 660, column: 46, scope: !6921)
!6930 = !DILocation(line: 660, column: 23, scope: !6921)
!6931 = !DILocation(line: 682, column: 11, scope: !6921)
!6932 = !DILocation(line: 271, column: 3, scope: !6933, inlinedAt: !6934)
!6933 = distinct !DISubprogram(name: "__DSB", scope: !6303, file: !6303, line: 269, type: !2819, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !162)
!6934 = distinct !DILocation(line: 683, column: 2, scope: !6921)
!6935 = !{i64 3503690}
!6936 = !DILocation(line: 260, column: 3, scope: !6937, inlinedAt: !6938)
!6937 = distinct !DISubprogram(name: "__ISB", scope: !6303, file: !6303, line: 258, type: !2819, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !162)
!6938 = distinct !DILocation(line: 684, column: 2, scope: !6921)
!6939 = !{i64 3503407}
!6940 = !DILocation(line: 686, column: 35, scope: !6921)
!6941 = !DILocation(line: 686, column: 24, scope: !6921)
!6942 = !DILocation(line: 688, column: 11, scope: !6921)
!6943 = !DILocation(line: 271, column: 3, scope: !6933, inlinedAt: !6944)
!6944 = distinct !DILocation(line: 689, column: 2, scope: !6921)
!6945 = !DILocation(line: 260, column: 3, scope: !6937, inlinedAt: !6946)
!6946 = distinct !DILocation(line: 690, column: 2, scope: !6921)
!6947 = !DILocation(line: 693, column: 45, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6921, file: !6602, line: 693, column: 6)
!6949 = !DILocation(line: 699, column: 1, scope: !6921)
!6950 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6602, file: !6602, line: 1107, type: !2819, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !162)
!6951 = !DILocation(line: 1111, column: 11, scope: !6950)
!6952 = !DILocation(line: 1136, column: 1, scope: !6950)
!6953 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6954, file: !6954, line: 26, type: !2819, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !6955)
!6954 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6955 = !{!6956}
!6956 = !DILocalVariable(name: "irq", scope: !6953, file: !6954, line: 28, type: !103)
!6957 = !DILocation(line: 0, scope: !6953)
!6958 = !DILocation(line: 30, column: 2, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6953, file: !6954, line: 30, column: 2)
!6960 = !DILocation(line: 31, column: 3, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6954, line: 30, column: 39)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !6954, line: 30, column: 2)
!6963 = !DILocation(line: 30, column: 35, scope: !6962)
!6964 = !DILocation(line: 30, column: 13, scope: !6962)
!6965 = distinct !{!6965, !6958, !6966}
!6966 = !DILocation(line: 32, column: 2, scope: !6959)
!6967 = !DILocation(line: 33, column: 1, scope: !6953)
!6968 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6337, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !6969)
!6969 = !{!6970, !6971}
!6970 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6968, file: !402, line: 1814, type: !658)
!6971 = !DILocalVariable(name: "priority", arg: 2, scope: !6968, file: !402, line: 1814, type: !137)
!6972 = !DILocation(line: 0, scope: !6968)
!6973 = !DILocation(line: 1816, column: 7, scope: !6968)
!6974 = !DILocation(line: 0, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6968, file: !402, line: 1816, column: 7)
!6976 = !DILocation(line: 1824, column: 1, scope: !6968)
!6977 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6978, file: !6978, line: 27, type: !6979, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !7082)
!6978 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6979 = !DISubroutineType(types: !6980)
!6980 = !{null, !6981}
!6981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !6982)
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 32)
!6983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !6984)
!6984 = !{!6985, !7043, !7055, !7056, !7057, !7058, !7064, !7077}
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6983, file: !263, line: 247, baseType: !6986, size: 384)
!6986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !6987)
!6987 = !{!6988, !7012, !7019, !7020, !7021, !7030, !7031, !7032}
!6988 = !DIDerivedType(tag: DW_TAG_member, scope: !6986, file: !263, line: 60, baseType: !6989, size: 64)
!6989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6986, file: !263, line: 60, size: 64, elements: !6990)
!6990 = !{!6991, !7006}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6989, file: !263, line: 61, baseType: !6992, size: 64)
!6992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !6993)
!6993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !6994)
!6994 = !{!6995, !7001}
!6995 = !DIDerivedType(tag: DW_TAG_member, scope: !6993, file: !273, line: 38, baseType: !6996, size: 32)
!6996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6993, file: !273, line: 38, size: 32, elements: !6997)
!6997 = !{!6998, !7000}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6996, file: !273, line: 39, baseType: !6999, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6996, file: !273, line: 40, baseType: !6999, size: 32)
!7001 = !DIDerivedType(tag: DW_TAG_member, scope: !6993, file: !273, line: 42, baseType: !7002, size: 32, offset: 32)
!7002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6993, file: !273, line: 42, size: 32, elements: !7003)
!7003 = !{!7004, !7005}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7002, file: !273, line: 43, baseType: !6999, size: 32)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7002, file: !273, line: 44, baseType: !6999, size: 32)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6989, file: !263, line: 62, baseType: !7007, size: 64)
!7007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !7008)
!7008 = !{!7009}
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7007, file: !289, line: 50, baseType: !7010, size: 64)
!7010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7011, size: 64, elements: !294)
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7007, size: 32)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6986, file: !263, line: 68, baseType: !7013, size: 32, offset: 64)
!7013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7014, size: 32)
!7014 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !7015)
!7015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !7016)
!7016 = !{!7017}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7015, file: !299, line: 232, baseType: !7018, size: 64)
!7018 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !6993)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6986, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6986, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!7021 = !DIDerivedType(tag: DW_TAG_member, scope: !6986, file: !263, line: 90, baseType: !7022, size: 16, offset: 112)
!7022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6986, file: !263, line: 90, size: 16, elements: !7023)
!7023 = !{!7024, !7029}
!7024 = !DIDerivedType(tag: DW_TAG_member, scope: !7022, file: !263, line: 91, baseType: !7025, size: 16)
!7025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7022, file: !263, line: 91, size: 16, elements: !7026)
!7026 = !{!7027, !7028}
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7025, file: !263, line: 96, baseType: !313, size: 8)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7025, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7022, file: !263, line: 100, baseType: !151, size: 16)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6986, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6986, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6986, file: !263, line: 131, baseType: !7033, size: 192, offset: 192)
!7033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !7034)
!7034 = !{!7035, !7036, !7042}
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7033, file: !299, line: 245, baseType: !6992, size: 64)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7033, file: !299, line: 246, baseType: !7037, size: 32, offset: 64)
!7037 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !7038)
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 32)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{null, !7041}
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 32)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7033, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6983, file: !263, line: 250, baseType: !7044, size: 288, offset: 384)
!7044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !7045)
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7044, file: !334, line: 26, baseType: !137, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7044, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7044, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7044, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7044, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7044, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7044, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7044, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7044, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6983, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6983, file: !263, line: 256, baseType: !7014, size: 64, offset: 704)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6983, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6983, file: !263, line: 300, baseType: !7059, size: 96, offset: 800)
!7059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !7060)
!7060 = !{!7061, !7062, !7063}
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7059, file: !263, line: 153, baseType: !22, size: 32)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7059, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7059, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6983, file: !263, line: 325, baseType: !7065, size: 32, offset: 896)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 32)
!7066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !7067)
!7067 = !{!7068, !7074, !7075}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7066, file: !357, line: 5074, baseType: !7069, size: 96)
!7069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !7070)
!7070 = !{!7071, !7072, !7073}
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7069, file: !113, line: 57, baseType: !116, size: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7069, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7069, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7066, file: !357, line: 5075, baseType: !7014, size: 64, offset: 96)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7066, file: !357, line: 5076, baseType: !7076, offset: 160)
!7076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6983, file: !263, line: 343, baseType: !7078, size: 64, offset: 928)
!7078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !7079)
!7079 = !{!7080, !7081}
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7078, file: !334, line: 63, baseType: !137, size: 32)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7078, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!7082 = !{!7083}
!7083 = !DILocalVariable(name: "thread", arg: 1, scope: !6977, file: !6978, line: 27, type: !6981)
!7084 = !DILocation(line: 0, scope: !6977)
!7085 = !DILocation(line: 29, column: 6, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !6977, file: !6978, line: 29, column: 6)
!7087 = !DILocation(line: 29, column: 15, scope: !7086)
!7088 = !DILocation(line: 29, column: 6, scope: !6977)
!7089 = !DILocation(line: 1031, column: 3, scope: !7090, inlinedAt: !7093)
!7090 = distinct !DISubprogram(name: "__get_IPSR", scope: !6303, file: !6303, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !7091)
!7091 = !{!7092}
!7092 = !DILocalVariable(name: "result", scope: !7090, file: !6303, line: 1029, type: !137)
!7093 = distinct !DILocation(line: 48, column: 10, scope: !7094, inlinedAt: !7098)
!7094 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7095, file: !7095, line: 46, type: !7096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !162)
!7095 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7096 = !DISubroutineType(types: !7097)
!7097 = !{!211}
!7098 = distinct !DILocation(line: 30, column: 7, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6978, line: 30, column: 7)
!7100 = distinct !DILexicalBlock(scope: !7086, file: !6978, line: 29, column: 26)
!7101 = !{i64 3492538}
!7102 = !DILocation(line: 0, scope: !7090, inlinedAt: !7093)
!7103 = !DILocation(line: 48, column: 9, scope: !7094, inlinedAt: !7098)
!7104 = !DILocation(line: 30, column: 7, scope: !7100)
!7105 = !DILocation(line: 42, column: 14, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7099, file: !6978, line: 30, column: 25)
!7107 = !DILocation(line: 48, column: 15, scope: !7106)
!7108 = !DILocation(line: 49, column: 3, scope: !7106)
!7109 = !DILocation(line: 52, column: 2, scope: !6977)
!7110 = !DILocation(line: 53, column: 1, scope: !6977)
!7111 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !258, file: !258, line: 127, type: !2819, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !251, retainedNodes: !162)
!7112 = !DILocation(line: 134, column: 2, scope: !7111)
!7113 = !DILocation(line: 156, column: 1, scope: !7111)
!7114 = !DILocation(line: 0, scope: !257)
!7115 = !DILocation(line: 289, column: 36, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !257, file: !258, line: 285, column: 2)
!7117 = !DILocation(line: 289, column: 42, scope: !7116)
!7118 = !DILocation(line: 300, column: 36, scope: !257)
!7119 = !DILocation(line: 301, column: 35, scope: !257)
!7120 = !DILocation(line: 302, column: 37, scope: !257)
!7121 = !DILocation(line: 311, column: 2, scope: !257)
!7122 = !DILocation(line: 316, column: 1, scope: !257)
!7123 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !430, file: !430, line: 180, type: !2819, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7124 = !DILocation(line: 188, column: 12, scope: !7123)
!7125 = !DILocation(line: 271, column: 3, scope: !7126, inlinedAt: !7127)
!7126 = distinct !DISubprogram(name: "__DSB", scope: !6303, file: !6303, line: 269, type: !2819, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7127 = distinct !DILocation(line: 192, column: 2, scope: !7123)
!7128 = !{i64 3661366}
!7129 = !DILocation(line: 260, column: 3, scope: !7130, inlinedAt: !7131)
!7130 = distinct !DISubprogram(name: "__ISB", scope: !6303, file: !6303, line: 258, type: !2819, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7131 = distinct !DILocation(line: 193, column: 2, scope: !7123)
!7132 = !{i64 3661083}
!7133 = !DILocation(line: 194, column: 1, scope: !7123)
!7134 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !430, file: !430, line: 199, type: !2819, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7135 = !DILocation(line: 282, column: 3, scope: !7136, inlinedAt: !7137)
!7136 = distinct !DISubprogram(name: "__DMB", scope: !6303, file: !6303, line: 280, type: !2819, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !162)
!7137 = distinct !DILocation(line: 202, column: 2, scope: !7134)
!7138 = !{i64 3661642}
!7139 = !DILocation(line: 205, column: 12, scope: !7134)
!7140 = !DILocation(line: 206, column: 1, scope: !7134)
!7141 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !430, file: !430, line: 275, type: !7142, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7155)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !7144, !1666, !6569, !6569}
!7144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 32)
!7145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7146)
!7146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !381, line: 52, size: 96, elements: !7147)
!7147 = !{!7148, !7149, !7150}
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7146, file: !381, line: 53, baseType: !22, size: 32)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7146, file: !381, line: 54, baseType: !120, size: 32, offset: 32)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7146, file: !381, line: 55, baseType: !7151, size: 32, offset: 64)
!7151 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !387, line: 151, baseType: !7152)
!7152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 149, size: 32, elements: !7153)
!7153 = !{!7154}
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7152, file: !387, line: 150, baseType: !137, size: 32)
!7155 = !{!7156, !7157, !7158, !7159}
!7156 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7141, file: !430, line: 276, type: !7144)
!7157 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7141, file: !430, line: 276, type: !1666)
!7158 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7141, file: !430, line: 277, type: !6569)
!7159 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7141, file: !430, line: 277, type: !6569)
!7160 = !DILocation(line: 0, scope: !7141)
!7161 = !DILocation(line: 279, column: 6, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7141, file: !430, line: 279, column: 6)
!7163 = !DILocation(line: 285, column: 1, scope: !7141)
!7164 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7165, file: !7165, line: 220, type: !7166, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7168)
!7165 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7166 = !DISubroutineType(types: !7167)
!7167 = !{!103, !7144, !1666, !6569, !6569}
!7168 = !{!7169, !7170, !7171, !7172, !7173}
!7169 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7164, file: !7165, line: 221, type: !7144)
!7170 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7164, file: !7165, line: 221, type: !1666)
!7171 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7164, file: !7165, line: 222, type: !6569)
!7172 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7164, file: !7165, line: 223, type: !6569)
!7173 = !DILocalVariable(name: "mpu_reg_index", scope: !7164, file: !7165, line: 225, type: !103)
!7174 = !DILocation(line: 0, scope: !7164)
!7175 = !DILocation(line: 225, column: 22, scope: !7164)
!7176 = !DILocation(line: 233, column: 18, scope: !7164)
!7177 = !DILocation(line: 236, column: 23, scope: !7164)
!7178 = !DILocation(line: 236, column: 21, scope: !7164)
!7179 = !DILocation(line: 238, column: 2, scope: !7164)
!7180 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !430, file: !430, line: 105, type: !7181, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7183)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!103, !7144, !208, !208, !211}
!7183 = !{!7184, !7185, !7186, !7187, !7188, !7189}
!7184 = !DILocalVariable(name: "regions", arg: 1, scope: !7180, file: !430, line: 106, type: !7144)
!7185 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7180, file: !430, line: 106, type: !208)
!7186 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7180, file: !430, line: 106, type: !208)
!7187 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7180, file: !430, line: 107, type: !211)
!7188 = !DILocalVariable(name: "i", scope: !7180, file: !430, line: 109, type: !103)
!7189 = !DILocalVariable(name: "reg_index", scope: !7180, file: !430, line: 110, type: !103)
!7190 = !DILocation(line: 0, scope: !7180)
!7191 = !DILocation(line: 110, column: 18, scope: !7180)
!7192 = !DILocation(line: 112, column: 16, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !430, line: 112, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7180, file: !430, line: 112, column: 2)
!7195 = !DILocation(line: 112, column: 2, scope: !7194)
!7196 = !DILocation(line: 113, column: 7, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !430, line: 113, column: 7)
!7198 = distinct !DILexicalBlock(scope: !7193, file: !430, line: 112, column: 36)
!7199 = !DILocation(line: 113, column: 18, scope: !7197)
!7200 = !DILocation(line: 113, column: 23, scope: !7197)
!7201 = !DILocation(line: 113, column: 7, scope: !7198)
!7202 = !DILocation(line: 118, column: 23, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7198, file: !430, line: 118, column: 7)
!7204 = !DILocation(line: 119, column: 7, scope: !7203)
!7205 = !DILocation(line: 118, column: 7, scope: !7198)
!7206 = !DILocation(line: 124, column: 36, scope: !7198)
!7207 = !DILocation(line: 124, column: 15, scope: !7198)
!7208 = !DILocation(line: 126, column: 17, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7198, file: !430, line: 126, column: 7)
!7210 = !DILocation(line: 126, column: 7, scope: !7198)
!7211 = !DILocation(line: 131, column: 12, scope: !7198)
!7212 = !DILocation(line: 132, column: 2, scope: !7198)
!7213 = !DILocation(line: 112, column: 32, scope: !7193)
!7214 = distinct !{!7214, !7195, !7215}
!7215 = !DILocation(line: 132, column: 2, scope: !7194)
!7216 = !DILocation(line: 135, column: 1, scope: !7180)
!7217 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7165, file: !7165, line: 63, type: !7218, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7220)
!7218 = !DISubroutineType(types: !7219)
!7219 = !{!103, !7144}
!7220 = !{!7221, !7222}
!7221 = !DILocalVariable(name: "part", arg: 1, scope: !7217, file: !7165, line: 63, type: !7144)
!7222 = !DILocalVariable(name: "partition_is_valid", scope: !7217, file: !7165, line: 70, type: !103)
!7223 = !DILocation(line: 0, scope: !7217)
!7224 = !DILocation(line: 71, column: 11, scope: !7217)
!7225 = !DILocation(line: 71, column: 37, scope: !7217)
!7226 = !DILocation(line: 72, column: 3, scope: !7217)
!7227 = !DILocation(line: 71, column: 30, scope: !7217)
!7228 = !DILocation(line: 75, column: 11, scope: !7217)
!7229 = !DILocation(line: 75, column: 17, scope: !7217)
!7230 = !DILocation(line: 75, column: 38, scope: !7217)
!7231 = !DILocation(line: 77, column: 2, scope: !7217)
!7232 = distinct !DISubprogram(name: "mpu_configure_region", scope: !430, file: !430, line: 79, type: !7233, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7235)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!103, !1666, !7144}
!7235 = !{!7236, !7237, !7238}
!7236 = !DILocalVariable(name: "index", arg: 1, scope: !7232, file: !430, line: 79, type: !1666)
!7237 = !DILocalVariable(name: "new_region", arg: 2, scope: !7232, file: !430, line: 80, type: !7144)
!7238 = !DILocalVariable(name: "region_conf", scope: !7232, file: !430, line: 82, type: !419)
!7239 = !DILocation(line: 0, scope: !7232)
!7240 = !DILocation(line: 82, column: 2, scope: !7232)
!7241 = !DILocation(line: 82, column: 24, scope: !7232)
!7242 = !DILocation(line: 87, column: 33, scope: !7232)
!7243 = !DILocation(line: 87, column: 14, scope: !7232)
!7244 = !DILocation(line: 87, column: 19, scope: !7232)
!7245 = !DILocation(line: 91, column: 55, scope: !7232)
!7246 = !DILocation(line: 92, column: 16, scope: !7232)
!7247 = !DILocation(line: 92, column: 53, scope: !7232)
!7248 = !DILocation(line: 91, column: 2, scope: !7232)
!7249 = !DILocation(line: 95, column: 9, scope: !7232)
!7250 = !DILocation(line: 97, column: 1, scope: !7232)
!7251 = !DILocation(line: 95, column: 2, scope: !7232)
!7252 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7165, file: !7165, line: 113, type: !7253, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7258)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{null, !7255, !7256, !137, !137}
!7255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 32)
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7257, size: 32)
!7257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7151)
!7258 = !{!7259, !7260, !7261, !7262}
!7259 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7252, file: !7165, line: 114, type: !7255)
!7260 = !DILocalVariable(name: "attr", arg: 2, scope: !7252, file: !7165, line: 115, type: !7256)
!7261 = !DILocalVariable(name: "base", arg: 3, scope: !7252, file: !7165, line: 115, type: !137)
!7262 = !DILocalVariable(name: "size", arg: 4, scope: !7252, file: !7165, line: 115, type: !137)
!7263 = !DILocation(line: 0, scope: !7252)
!7264 = !DILocation(line: 127, column: 23, scope: !7252)
!7265 = !DILocation(line: 127, column: 35, scope: !7252)
!7266 = !DILocation(line: 127, column: 33, scope: !7252)
!7267 = !DILocation(line: 127, column: 10, scope: !7252)
!7268 = !DILocation(line: 127, column: 15, scope: !7252)
!7269 = !DILocation(line: 129, column: 1, scope: !7252)
!7270 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !430, file: !430, line: 57, type: !7271, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7273)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{!103, !1666, !417}
!7273 = !{!7274, !7275}
!7274 = !DILocalVariable(name: "index", arg: 1, scope: !7270, file: !430, line: 57, type: !1666)
!7275 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7270, file: !430, line: 58, type: !417)
!7276 = !DILocation(line: 0, scope: !7270)
!7277 = !DILocation(line: 61, column: 6, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7270, file: !430, line: 61, column: 6)
!7279 = !DILocation(line: 61, column: 12, scope: !7278)
!7280 = !DILocation(line: 61, column: 6, scope: !7270)
!7281 = !DILocation(line: 71, column: 2, scope: !7270)
!7282 = !DILocation(line: 73, column: 2, scope: !7270)
!7283 = !DILocation(line: 74, column: 1, scope: !7270)
!7284 = distinct !DISubprogram(name: "region_init", scope: !7165, file: !7165, line: 29, type: !7285, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7287)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{null, !6569, !417}
!7287 = !{!7288, !7289}
!7288 = !DILocalVariable(name: "index", arg: 1, scope: !7284, file: !7165, line: 29, type: !6569)
!7289 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7284, file: !7165, line: 30, type: !417)
!7290 = !DILocation(line: 0, scope: !7284)
!7291 = !DILocation(line: 33, column: 2, scope: !7284)
!7292 = !DILocation(line: 47, column: 28, scope: !7284)
!7293 = !DILocation(line: 47, column: 33, scope: !7284)
!7294 = !DILocation(line: 48, column: 26, scope: !7284)
!7295 = !DILocation(line: 47, column: 12, scope: !7284)
!7296 = !DILocation(line: 49, column: 32, scope: !7284)
!7297 = !DILocation(line: 49, column: 37, scope: !7284)
!7298 = !DILocation(line: 49, column: 12, scope: !7284)
!7299 = !DILocation(line: 53, column: 1, scope: !7284)
!7300 = distinct !DISubprogram(name: "set_region_number", scope: !7301, file: !7301, line: 32, type: !6392, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7302)
!7301 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "index", arg: 1, scope: !7300, file: !7301, line: 32, type: !137)
!7304 = !DILocation(line: 0, scope: !7300)
!7305 = !DILocation(line: 34, column: 11, scope: !7300)
!7306 = !DILocation(line: 35, column: 1, scope: !7300)
!7307 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7165, file: !7165, line: 88, type: !7308, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7310)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!137, !137}
!7310 = !{!7311}
!7311 = !DILocalVariable(name: "size", arg: 1, scope: !7307, file: !7165, line: 88, type: !137)
!7312 = !DILocation(line: 0, scope: !7307)
!7313 = !DILocation(line: 91, column: 11, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7307, file: !7165, line: 91, column: 6)
!7315 = !DILocation(line: 91, column: 6, scope: !7307)
!7316 = !DILocation(line: 100, column: 11, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7307, file: !7165, line: 100, column: 6)
!7318 = !DILocation(line: 100, column: 6, scope: !7307)
!7319 = !DILocation(line: 104, column: 35, scope: !7307)
!7320 = !DILocation(line: 104, column: 16, scope: !7307)
!7321 = !DILocation(line: 104, column: 50, scope: !7307)
!7322 = !DILocation(line: 104, column: 72, scope: !7307)
!7323 = !DILocation(line: 104, column: 2, scope: !7307)
!7324 = !DILocation(line: 106, column: 1, scope: !7307)
!7325 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !430, file: !430, line: 307, type: !7326, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7328)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{null, !7144, !208}
!7328 = !{!7329, !7330}
!7329 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7325, file: !430, line: 308, type: !7144)
!7330 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7325, file: !430, line: 308, type: !208)
!7331 = !DILocation(line: 0, scope: !7325)
!7332 = !DILocation(line: 310, column: 6, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7325, file: !430, line: 310, column: 6)
!7334 = !DILocation(line: 316, column: 1, scope: !7325)
!7335 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7165, file: !7165, line: 249, type: !7336, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7338)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{!103, !7144, !208}
!7338 = !{!7339, !7340, !7341, !7342}
!7339 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7335, file: !7165, line: 250, type: !7144)
!7340 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7335, file: !7165, line: 250, type: !208)
!7341 = !DILocalVariable(name: "mpu_reg_index", scope: !7335, file: !7165, line: 252, type: !103)
!7342 = !DILocalVariable(name: "i", scope: !7343, file: !7165, line: 264, type: !103)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !7165, line: 264, column: 3)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !7165, line: 261, column: 32)
!7345 = distinct !DILexicalBlock(scope: !7335, file: !7165, line: 261, column: 6)
!7346 = !DILocation(line: 0, scope: !7335)
!7347 = !DILocation(line: 252, column: 22, scope: !7335)
!7348 = !DILocation(line: 258, column: 18, scope: !7335)
!7349 = !DILocation(line: 261, column: 20, scope: !7345)
!7350 = !DILocation(line: 261, column: 6, scope: !7335)
!7351 = !DILocation(line: 0, scope: !7343)
!7352 = !DILocation(line: 265, column: 4, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !7165, line: 264, column: 59)
!7354 = distinct !DILexicalBlock(scope: !7343, file: !7165, line: 264, column: 3)
!7355 = !DILocation(line: 264, column: 55, scope: !7354)
!7356 = !DILocation(line: 264, column: 33, scope: !7354)
!7357 = !DILocation(line: 264, column: 3, scope: !7343)
!7358 = distinct !{!7358, !7357, !7359}
!7359 = !DILocation(line: 266, column: 3, scope: !7343)
!7360 = !DILocation(line: 269, column: 2, scope: !7335)
!7361 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7362, file: !7362, line: 218, type: !6392, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7363)
!7362 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7363 = !{!7364}
!7364 = !DILocalVariable(name: "rnr", arg: 1, scope: !7361, file: !7362, line: 218, type: !137)
!7365 = !DILocation(line: 0, scope: !7361)
!7366 = !DILocation(line: 220, column: 12, scope: !7361)
!7367 = !DILocation(line: 221, column: 13, scope: !7361)
!7368 = !DILocation(line: 222, column: 1, scope: !7361)
!7369 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !430, file: !430, line: 326, type: !7370, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !397, retainedNodes: !7372)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!103}
!7372 = !{!7373}
!7373 = !DILocalVariable(name: "r_index", scope: !7369, file: !430, line: 328, type: !137)
!7374 = !DILocation(line: 330, column: 17, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !430, line: 330, column: 6)
!7376 = !DILocation(line: 330, column: 29, scope: !7375)
!7377 = !DILocation(line: 330, column: 6, scope: !7369)
!7378 = !DILocation(line: 347, column: 2, scope: !7369)
!7379 = !DILocation(line: 0, scope: !7369)
!7380 = !DILocation(line: 364, column: 29, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !430, line: 364, column: 2)
!7382 = distinct !DILexicalBlock(scope: !7369, file: !430, line: 364, column: 2)
!7383 = !DILocation(line: 364, column: 2, scope: !7382)
!7384 = !DILocation(line: 365, column: 25, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7381, file: !430, line: 364, column: 66)
!7386 = !DILocation(line: 365, column: 3, scope: !7385)
!7387 = !DILocation(line: 364, column: 62, scope: !7381)
!7388 = distinct !{!7388, !7383, !7389}
!7389 = !DILocation(line: 366, column: 2, scope: !7382)
!7390 = !DILocation(line: 369, column: 23, scope: !7369)
!7391 = !DILocation(line: 369, column: 21, scope: !7369)
!7392 = !DILocation(line: 372, column: 2, scope: !7369)
!7393 = !DILocation(line: 443, column: 2, scope: !7369)
!7394 = !DILocation(line: 444, column: 1, scope: !7369)
!7395 = distinct !DISubprogram(name: "strcpy", scope: !7396, file: !7396, line: 20, type: !7397, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7401)
!7396 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7397 = !DISubroutineType(types: !7398)
!7398 = !{!1022, !7399, !7400}
!7399 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1022)
!7400 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !199)
!7401 = !{!7402, !7403, !7404}
!7402 = !DILocalVariable(name: "d", arg: 1, scope: !7395, file: !7396, line: 20, type: !7399)
!7403 = !DILocalVariable(name: "s", arg: 2, scope: !7395, file: !7396, line: 20, type: !7400)
!7404 = !DILocalVariable(name: "dest", scope: !7395, file: !7396, line: 22, type: !1022)
!7405 = !DILocation(line: 0, scope: !7395)
!7406 = !DILocation(line: 24, column: 9, scope: !7395)
!7407 = !DILocation(line: 24, column: 12, scope: !7395)
!7408 = !DILocation(line: 24, column: 2, scope: !7395)
!7409 = !DILocation(line: 25, column: 6, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7395, file: !7396, line: 24, column: 21)
!7411 = !DILocation(line: 26, column: 4, scope: !7410)
!7412 = !DILocation(line: 27, column: 4, scope: !7410)
!7413 = distinct !{!7413, !7408, !7414}
!7414 = !DILocation(line: 28, column: 2, scope: !7395)
!7415 = !DILocation(line: 30, column: 5, scope: !7395)
!7416 = !DILocation(line: 32, column: 2, scope: !7395)
!7417 = distinct !DISubprogram(name: "strncpy", scope: !7396, file: !7396, line: 42, type: !7418, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7420)
!7418 = !DISubroutineType(types: !7419)
!7419 = !{!1022, !7399, !7400, !120}
!7420 = !{!7421, !7422, !7423, !7424}
!7421 = !DILocalVariable(name: "d", arg: 1, scope: !7417, file: !7396, line: 42, type: !7399)
!7422 = !DILocalVariable(name: "s", arg: 2, scope: !7417, file: !7396, line: 42, type: !7400)
!7423 = !DILocalVariable(name: "n", arg: 3, scope: !7417, file: !7396, line: 42, type: !120)
!7424 = !DILocalVariable(name: "dest", scope: !7417, file: !7396, line: 44, type: !1022)
!7425 = !DILocation(line: 0, scope: !7417)
!7426 = !DILocation(line: 46, column: 12, scope: !7417)
!7427 = !DILocation(line: 46, column: 17, scope: !7417)
!7428 = !DILocation(line: 46, column: 20, scope: !7417)
!7429 = !DILocation(line: 46, column: 23, scope: !7417)
!7430 = !DILocation(line: 46, column: 2, scope: !7417)
!7431 = !DILocation(line: 47, column: 6, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7417, file: !7396, line: 46, column: 32)
!7433 = !DILocation(line: 48, column: 4, scope: !7432)
!7434 = !DILocation(line: 49, column: 4, scope: !7432)
!7435 = !DILocation(line: 50, column: 4, scope: !7432)
!7436 = distinct !{!7436, !7430, !7437}
!7437 = !DILocation(line: 51, column: 2, scope: !7417)
!7438 = !DILocation(line: 54, column: 6, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7417, file: !7396, line: 53, column: 16)
!7440 = !DILocation(line: 55, column: 4, scope: !7439)
!7441 = !DILocation(line: 56, column: 4, scope: !7439)
!7442 = !DILocation(line: 53, column: 11, scope: !7417)
!7443 = !DILocation(line: 53, column: 2, scope: !7417)
!7444 = distinct !{!7444, !7443, !7445}
!7445 = !DILocation(line: 57, column: 2, scope: !7417)
!7446 = !DILocation(line: 59, column: 2, scope: !7417)
!7447 = distinct !DISubprogram(name: "strchr", scope: !7396, file: !7396, line: 69, type: !7448, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7450)
!7448 = !DISubroutineType(types: !7449)
!7449 = !{!1022, !199, !103}
!7450 = !{!7451, !7452, !7453}
!7451 = !DILocalVariable(name: "s", arg: 1, scope: !7447, file: !7396, line: 69, type: !199)
!7452 = !DILocalVariable(name: "c", arg: 2, scope: !7447, file: !7396, line: 69, type: !103)
!7453 = !DILocalVariable(name: "tmp", scope: !7447, file: !7396, line: 71, type: !109)
!7454 = !DILocation(line: 0, scope: !7447)
!7455 = !DILocation(line: 73, column: 2, scope: !7447)
!7456 = !DILocation(line: 73, column: 10, scope: !7447)
!7457 = !DILocation(line: 73, column: 13, scope: !7447)
!7458 = !DILocation(line: 73, column: 21, scope: !7447)
!7459 = !DILocation(line: 74, column: 4, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7447, file: !7396, line: 73, column: 38)
!7461 = distinct !{!7461, !7455, !7462}
!7462 = !DILocation(line: 75, column: 2, scope: !7447)
!7463 = !DILocation(line: 77, column: 9, scope: !7447)
!7464 = !DILocation(line: 77, column: 2, scope: !7447)
!7465 = distinct !DISubprogram(name: "strrchr", scope: !7396, file: !7396, line: 87, type: !7448, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7466)
!7466 = !{!7467, !7468, !7469}
!7467 = !DILocalVariable(name: "s", arg: 1, scope: !7465, file: !7396, line: 87, type: !199)
!7468 = !DILocalVariable(name: "c", arg: 2, scope: !7465, file: !7396, line: 87, type: !103)
!7469 = !DILocalVariable(name: "match", scope: !7465, file: !7396, line: 89, type: !1022)
!7470 = !DILocation(line: 0, scope: !7465)
!7471 = !DILocation(line: 91, column: 2, scope: !7465)
!7472 = !DILocation(line: 92, column: 7, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7474, file: !7396, line: 92, column: 7)
!7474 = distinct !DILexicalBlock(scope: !7465, file: !7396, line: 91, column: 5)
!7475 = !DILocation(line: 92, column: 10, scope: !7473)
!7476 = !DILocation(line: 92, column: 7, scope: !7474)
!7477 = !DILocation(line: 95, column: 13, scope: !7465)
!7478 = !DILocation(line: 95, column: 2, scope: !7474)
!7479 = distinct !{!7479, !7471, !7480}
!7480 = !DILocation(line: 95, column: 15, scope: !7465)
!7481 = !DILocation(line: 97, column: 2, scope: !7465)
!7482 = distinct !DISubprogram(name: "strlen", scope: !7396, file: !7396, line: 107, type: !7483, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7485)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!120, !199}
!7485 = !{!7486, !7487}
!7486 = !DILocalVariable(name: "s", arg: 1, scope: !7482, file: !7396, line: 107, type: !199)
!7487 = !DILocalVariable(name: "n", scope: !7482, file: !7396, line: 109, type: !120)
!7488 = !DILocation(line: 0, scope: !7482)
!7489 = !DILocation(line: 111, column: 9, scope: !7482)
!7490 = !DILocation(line: 111, column: 12, scope: !7482)
!7491 = !DILocation(line: 111, column: 2, scope: !7482)
!7492 = !DILocation(line: 112, column: 4, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7482, file: !7396, line: 111, column: 21)
!7494 = !DILocation(line: 113, column: 4, scope: !7493)
!7495 = distinct !{!7495, !7491, !7496}
!7496 = !DILocation(line: 114, column: 2, scope: !7482)
!7497 = !DILocation(line: 116, column: 2, scope: !7482)
!7498 = distinct !DISubprogram(name: "strnlen", scope: !7396, file: !7396, line: 126, type: !7499, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!120, !199, !120}
!7501 = !{!7502, !7503, !7504}
!7502 = !DILocalVariable(name: "s", arg: 1, scope: !7498, file: !7396, line: 126, type: !199)
!7503 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7498, file: !7396, line: 126, type: !120)
!7504 = !DILocalVariable(name: "n", scope: !7498, file: !7396, line: 128, type: !120)
!7505 = !DILocation(line: 0, scope: !7498)
!7506 = !DILocation(line: 130, column: 9, scope: !7498)
!7507 = !DILocation(line: 130, column: 12, scope: !7498)
!7508 = !DILocation(line: 130, column: 20, scope: !7498)
!7509 = !DILocation(line: 130, column: 2, scope: !7498)
!7510 = !DILocation(line: 131, column: 4, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7498, file: !7396, line: 130, column: 35)
!7512 = !DILocation(line: 132, column: 4, scope: !7511)
!7513 = distinct !{!7513, !7509, !7514}
!7514 = !DILocation(line: 133, column: 2, scope: !7498)
!7515 = !DILocation(line: 135, column: 2, scope: !7498)
!7516 = distinct !DISubprogram(name: "strcmp", scope: !7396, file: !7396, line: 145, type: !7517, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{!103, !199, !199}
!7519 = !{!7520, !7521}
!7520 = !DILocalVariable(name: "s1", arg: 1, scope: !7516, file: !7396, line: 145, type: !199)
!7521 = !DILocalVariable(name: "s2", arg: 2, scope: !7516, file: !7396, line: 145, type: !199)
!7522 = !DILocation(line: 0, scope: !7516)
!7523 = !DILocation(line: 147, column: 10, scope: !7516)
!7524 = !DILocation(line: 147, column: 17, scope: !7516)
!7525 = !DILocation(line: 147, column: 14, scope: !7516)
!7526 = !DILocation(line: 147, column: 22, scope: !7516)
!7527 = !DILocation(line: 148, column: 5, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7516, file: !7396, line: 147, column: 40)
!7529 = !DILocation(line: 149, column: 5, scope: !7528)
!7530 = distinct !{!7530, !7531, !7532}
!7531 = !DILocation(line: 147, column: 2, scope: !7516)
!7532 = !DILocation(line: 150, column: 2, scope: !7516)
!7533 = !DILocation(line: 152, column: 9, scope: !7516)
!7534 = !DILocation(line: 152, column: 15, scope: !7516)
!7535 = !DILocation(line: 152, column: 13, scope: !7516)
!7536 = !DILocation(line: 152, column: 2, scope: !7516)
!7537 = distinct !DISubprogram(name: "strncmp", scope: !7396, file: !7396, line: 162, type: !7538, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!103, !199, !199, !120}
!7540 = !{!7541, !7542, !7543}
!7541 = !DILocalVariable(name: "s1", arg: 1, scope: !7537, file: !7396, line: 162, type: !199)
!7542 = !DILocalVariable(name: "s2", arg: 2, scope: !7537, file: !7396, line: 162, type: !199)
!7543 = !DILocalVariable(name: "n", arg: 3, scope: !7537, file: !7396, line: 162, type: !120)
!7544 = !DILocation(line: 0, scope: !7537)
!7545 = !DILocation(line: 164, column: 17, scope: !7537)
!7546 = !DILocation(line: 164, column: 21, scope: !7537)
!7547 = !DILocation(line: 164, column: 28, scope: !7537)
!7548 = !DILocation(line: 164, column: 25, scope: !7537)
!7549 = !DILocation(line: 164, column: 33, scope: !7537)
!7550 = !DILocation(line: 165, column: 5, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7537, file: !7396, line: 164, column: 51)
!7552 = !DILocation(line: 166, column: 5, scope: !7551)
!7553 = !DILocation(line: 167, column: 4, scope: !7551)
!7554 = distinct !{!7554, !7555, !7556}
!7555 = !DILocation(line: 164, column: 2, scope: !7537)
!7556 = !DILocation(line: 168, column: 2, scope: !7537)
!7557 = !DILocation(line: 170, column: 25, scope: !7537)
!7558 = !DILocation(line: 170, column: 31, scope: !7537)
!7559 = !DILocation(line: 170, column: 29, scope: !7537)
!7560 = !DILocation(line: 170, column: 9, scope: !7537)
!7561 = !DILocation(line: 170, column: 2, scope: !7537)
!7562 = distinct !DISubprogram(name: "strtok_r", scope: !7396, file: !7396, line: 180, type: !7563, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7566)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!1022, !1022, !199, !7565}
!7565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!7566 = !{!7567, !7568, !7569, !7570, !7571}
!7567 = !DILocalVariable(name: "str", arg: 1, scope: !7562, file: !7396, line: 180, type: !1022)
!7568 = !DILocalVariable(name: "sep", arg: 2, scope: !7562, file: !7396, line: 180, type: !199)
!7569 = !DILocalVariable(name: "state", arg: 3, scope: !7562, file: !7396, line: 180, type: !7565)
!7570 = !DILocalVariable(name: "start", scope: !7562, file: !7396, line: 182, type: !1022)
!7571 = !DILocalVariable(name: "end", scope: !7562, file: !7396, line: 182, type: !1022)
!7572 = !DILocation(line: 0, scope: !7562)
!7573 = !DILocation(line: 184, column: 10, scope: !7562)
!7574 = !DILocation(line: 184, column: 22, scope: !7562)
!7575 = !DILocation(line: 187, column: 9, scope: !7562)
!7576 = !DILocation(line: 187, column: 16, scope: !7562)
!7577 = !DILocation(line: 187, column: 19, scope: !7562)
!7578 = !DILocation(line: 187, column: 2, scope: !7562)
!7579 = !DILocation(line: 188, column: 8, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7562, file: !7396, line: 187, column: 40)
!7581 = distinct !{!7581, !7578, !7582}
!7582 = !DILocation(line: 189, column: 2, scope: !7562)
!7583 = !DILocation(line: 198, column: 9, scope: !7562)
!7584 = !DILocation(line: 198, column: 18, scope: !7562)
!7585 = !DILocation(line: 198, column: 17, scope: !7562)
!7586 = !DILocation(line: 198, column: 2, scope: !7562)
!7587 = !DILocation(line: 199, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7562, file: !7396, line: 198, column: 37)
!7589 = !DILocation(line: 198, column: 14, scope: !7562)
!7590 = distinct !{!7590, !7586, !7591}
!7591 = !DILocation(line: 200, column: 2, scope: !7562)
!7592 = !DILocation(line: 203, column: 8, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !7396, line: 202, column: 20)
!7594 = distinct !DILexicalBlock(scope: !7562, file: !7396, line: 202, column: 6)
!7595 = !DILocation(line: 204, column: 16, scope: !7593)
!7596 = !DILocation(line: 205, column: 2, scope: !7593)
!7597 = !DILocation(line: 210, column: 1, scope: !7562)
!7598 = distinct !DISubprogram(name: "strcat", scope: !7396, file: !7396, line: 212, type: !7397, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7599)
!7599 = !{!7600, !7601}
!7600 = !DILocalVariable(name: "dest", arg: 1, scope: !7598, file: !7396, line: 212, type: !7399)
!7601 = !DILocalVariable(name: "src", arg: 2, scope: !7598, file: !7396, line: 212, type: !7400)
!7602 = !DILocation(line: 0, scope: !7598)
!7603 = !DILocation(line: 214, column: 16, scope: !7598)
!7604 = !DILocation(line: 214, column: 14, scope: !7598)
!7605 = !DILocation(line: 214, column: 2, scope: !7598)
!7606 = !DILocation(line: 215, column: 2, scope: !7598)
!7607 = distinct !DISubprogram(name: "strncat", scope: !7396, file: !7396, line: 218, type: !7418, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7608)
!7608 = !{!7609, !7610, !7611, !7612, !7613}
!7609 = !DILocalVariable(name: "dest", arg: 1, scope: !7607, file: !7396, line: 218, type: !7399)
!7610 = !DILocalVariable(name: "src", arg: 2, scope: !7607, file: !7396, line: 218, type: !7400)
!7611 = !DILocalVariable(name: "n", arg: 3, scope: !7607, file: !7396, line: 219, type: !120)
!7612 = !DILocalVariable(name: "orig_dest", scope: !7607, file: !7396, line: 221, type: !1022)
!7613 = !DILocalVariable(name: "len", scope: !7607, file: !7396, line: 222, type: !120)
!7614 = !DILocation(line: 0, scope: !7607)
!7615 = !DILocation(line: 222, column: 15, scope: !7607)
!7616 = !DILocation(line: 224, column: 7, scope: !7607)
!7617 = !DILocation(line: 225, column: 14, scope: !7607)
!7618 = !DILocation(line: 225, column: 19, scope: !7607)
!7619 = !DILocation(line: 225, column: 11, scope: !7607)
!7620 = !DILocation(line: 225, column: 23, scope: !7607)
!7621 = !DILocation(line: 225, column: 28, scope: !7607)
!7622 = !DILocation(line: 225, column: 2, scope: !7607)
!7623 = !DILocation(line: 226, column: 17, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7607, file: !7396, line: 225, column: 38)
!7625 = !DILocation(line: 226, column: 8, scope: !7624)
!7626 = !DILocation(line: 226, column: 11, scope: !7624)
!7627 = distinct !{!7627, !7622, !7628}
!7628 = !DILocation(line: 227, column: 2, scope: !7607)
!7629 = !DILocation(line: 228, column: 8, scope: !7607)
!7630 = !DILocation(line: 230, column: 2, scope: !7607)
!7631 = distinct !DISubprogram(name: "memcmp", scope: !7396, file: !7396, line: 239, type: !7632, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7634)
!7632 = !DISubroutineType(types: !7633)
!7633 = !{!103, !13, !13, !120}
!7634 = !{!7635, !7636, !7637, !7638, !7639}
!7635 = !DILocalVariable(name: "m1", arg: 1, scope: !7631, file: !7396, line: 239, type: !13)
!7636 = !DILocalVariable(name: "m2", arg: 2, scope: !7631, file: !7396, line: 239, type: !13)
!7637 = !DILocalVariable(name: "n", arg: 3, scope: !7631, file: !7396, line: 239, type: !120)
!7638 = !DILocalVariable(name: "c1", scope: !7631, file: !7396, line: 241, type: !199)
!7639 = !DILocalVariable(name: "c2", scope: !7631, file: !7396, line: 242, type: !199)
!7640 = !DILocation(line: 0, scope: !7631)
!7641 = !DILocation(line: 244, column: 7, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7631, file: !7396, line: 244, column: 6)
!7643 = !DILocation(line: 244, column: 6, scope: !7631)
!7644 = !DILocation(line: 248, column: 10, scope: !7631)
!7645 = !DILocation(line: 248, column: 14, scope: !7631)
!7646 = !DILocation(line: 248, column: 19, scope: !7631)
!7647 = !DILocation(line: 248, column: 2, scope: !7631)
!7648 = !DILocation(line: 248, column: 23, scope: !7631)
!7649 = !DILocation(line: 248, column: 30, scope: !7631)
!7650 = !DILocation(line: 248, column: 27, scope: !7631)
!7651 = !DILocation(line: 249, column: 5, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7631, file: !7396, line: 248, column: 36)
!7653 = !DILocation(line: 250, column: 5, scope: !7652)
!7654 = distinct !{!7654, !7647, !7655}
!7655 = !DILocation(line: 251, column: 2, scope: !7631)
!7656 = !DILocation(line: 253, column: 9, scope: !7631)
!7657 = !DILocation(line: 253, column: 15, scope: !7631)
!7658 = !DILocation(line: 253, column: 13, scope: !7631)
!7659 = !DILocation(line: 253, column: 2, scope: !7631)
!7660 = !DILocation(line: 254, column: 1, scope: !7631)
!7661 = distinct !DISubprogram(name: "memmove", scope: !7396, file: !7396, line: 263, type: !7662, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7664)
!7662 = !DISubroutineType(types: !7663)
!7663 = !{!102, !102, !13, !120}
!7664 = !{!7665, !7666, !7667, !7668, !7669}
!7665 = !DILocalVariable(name: "d", arg: 1, scope: !7661, file: !7396, line: 263, type: !102)
!7666 = !DILocalVariable(name: "s", arg: 2, scope: !7661, file: !7396, line: 263, type: !13)
!7667 = !DILocalVariable(name: "n", arg: 3, scope: !7661, file: !7396, line: 263, type: !120)
!7668 = !DILocalVariable(name: "dest", scope: !7661, file: !7396, line: 265, type: !1022)
!7669 = !DILocalVariable(name: "src", scope: !7661, file: !7396, line: 266, type: !199)
!7670 = !DILocation(line: 0, scope: !7661)
!7671 = !DILocation(line: 268, column: 21, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7661, file: !7396, line: 268, column: 6)
!7673 = !DILocation(line: 268, column: 28, scope: !7672)
!7674 = !DILocation(line: 268, column: 6, scope: !7661)
!7675 = !DILocation(line: 280, column: 12, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7672, file: !7396, line: 278, column: 9)
!7677 = !DILocation(line: 280, column: 3, scope: !7676)
!7678 = !DILocation(line: 275, column: 5, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !7396, line: 274, column: 17)
!7680 = distinct !DILexicalBlock(scope: !7672, file: !7396, line: 268, column: 33)
!7681 = !DILocation(line: 276, column: 14, scope: !7679)
!7682 = !DILocation(line: 276, column: 4, scope: !7679)
!7683 = !DILocation(line: 276, column: 12, scope: !7679)
!7684 = !DILocation(line: 274, column: 12, scope: !7680)
!7685 = !DILocation(line: 274, column: 3, scope: !7680)
!7686 = distinct !{!7686, !7685, !7687}
!7687 = !DILocation(line: 277, column: 3, scope: !7680)
!7688 = !DILocation(line: 281, column: 12, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7676, file: !7396, line: 280, column: 17)
!7690 = !DILocation(line: 281, column: 10, scope: !7689)
!7691 = !DILocation(line: 282, column: 8, scope: !7689)
!7692 = !DILocation(line: 283, column: 7, scope: !7689)
!7693 = !DILocation(line: 284, column: 5, scope: !7689)
!7694 = distinct !{!7694, !7677, !7695}
!7695 = !DILocation(line: 285, column: 3, scope: !7676)
!7696 = !DILocation(line: 288, column: 2, scope: !7661)
!7697 = distinct !DISubprogram(name: "memcpy", scope: !7396, file: !7396, line: 298, type: !7698, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7702)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!102, !7700, !7701, !120}
!7700 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7701 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7702 = !{!7703, !7704, !7705, !7706, !7707}
!7703 = !DILocalVariable(name: "d", arg: 1, scope: !7697, file: !7396, line: 298, type: !7700)
!7704 = !DILocalVariable(name: "s", arg: 2, scope: !7697, file: !7396, line: 298, type: !7701)
!7705 = !DILocalVariable(name: "n", arg: 3, scope: !7697, file: !7396, line: 298, type: !120)
!7706 = !DILocalVariable(name: "d_byte", scope: !7697, file: !7396, line: 302, type: !855)
!7707 = !DILocalVariable(name: "s_byte", scope: !7697, file: !7396, line: 303, type: !2588)
!7708 = !DILocation(line: 0, scope: !7697)
!7709 = !DILocation(line: 337, column: 11, scope: !7697)
!7710 = !DILocation(line: 337, column: 2, scope: !7697)
!7711 = !DILocation(line: 338, column: 25, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7697, file: !7396, line: 337, column: 16)
!7713 = !DILocation(line: 338, column: 17, scope: !7712)
!7714 = !DILocation(line: 338, column: 11, scope: !7712)
!7715 = !DILocation(line: 338, column: 15, scope: !7712)
!7716 = !DILocation(line: 339, column: 4, scope: !7712)
!7717 = distinct !{!7717, !7710, !7718}
!7718 = !DILocation(line: 340, column: 2, scope: !7697)
!7719 = !DILocation(line: 342, column: 2, scope: !7697)
!7720 = distinct !DISubprogram(name: "memset", scope: !7396, file: !7396, line: 352, type: !7721, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7723)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!102, !102, !103, !120}
!7723 = !{!7724, !7725, !7726, !7727, !7728}
!7724 = !DILocalVariable(name: "buf", arg: 1, scope: !7720, file: !7396, line: 352, type: !102)
!7725 = !DILocalVariable(name: "c", arg: 2, scope: !7720, file: !7396, line: 352, type: !103)
!7726 = !DILocalVariable(name: "n", arg: 3, scope: !7720, file: !7396, line: 352, type: !120)
!7727 = !DILocalVariable(name: "d_byte", scope: !7720, file: !7396, line: 356, type: !855)
!7728 = !DILocalVariable(name: "c_byte", scope: !7720, file: !7396, line: 357, type: !209)
!7729 = !DILocation(line: 0, scope: !7720)
!7730 = !DILocation(line: 357, column: 25, scope: !7720)
!7731 = !DILocation(line: 389, column: 11, scope: !7720)
!7732 = !DILocation(line: 389, column: 2, scope: !7720)
!7733 = !DILocation(line: 390, column: 11, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7720, file: !7396, line: 389, column: 16)
!7735 = !DILocation(line: 390, column: 15, scope: !7734)
!7736 = !DILocation(line: 391, column: 4, scope: !7734)
!7737 = distinct !{!7737, !7732, !7738}
!7738 = !DILocation(line: 392, column: 2, scope: !7720)
!7739 = !DILocation(line: 394, column: 2, scope: !7720)
!7740 = distinct !DISubprogram(name: "memchr", scope: !7396, file: !7396, line: 404, type: !7741, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!102, !13, !103, !120}
!7743 = !{!7744, !7745, !7746, !7747}
!7744 = !DILocalVariable(name: "s", arg: 1, scope: !7740, file: !7396, line: 404, type: !13)
!7745 = !DILocalVariable(name: "c", arg: 2, scope: !7740, file: !7396, line: 404, type: !103)
!7746 = !DILocalVariable(name: "n", arg: 3, scope: !7740, file: !7396, line: 404, type: !120)
!7747 = !DILocalVariable(name: "p", scope: !7748, file: !7396, line: 407, type: !2588)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7396, line: 406, column: 14)
!7749 = distinct !DILexicalBlock(scope: !7740, file: !7396, line: 406, column: 6)
!7750 = !DILocation(line: 0, scope: !7740)
!7751 = !DILocation(line: 406, column: 8, scope: !7749)
!7752 = !DILocation(line: 406, column: 6, scope: !7740)
!7753 = !DILocation(line: 409, column: 3, scope: !7748)
!7754 = !DILocation(line: 0, scope: !7748)
!7755 = !DILocation(line: 410, column: 8, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7396, line: 410, column: 8)
!7757 = distinct !DILexicalBlock(scope: !7748, file: !7396, line: 409, column: 6)
!7758 = !DILocation(line: 410, column: 13, scope: !7756)
!7759 = !DILocation(line: 410, column: 8, scope: !7757)
!7760 = distinct !{!7760, !7753, !7761}
!7761 = !DILocation(line: 414, column: 20, scope: !7748)
!7762 = !DILocation(line: 417, column: 2, scope: !7740)
!7763 = !DILocation(line: 418, column: 1, scope: !7740)
!7764 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !440, file: !440, line: 23, type: !2967, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7765)
!7765 = !{!7766}
!7766 = !DILocalVariable(name: "hook", arg: 1, scope: !7764, file: !440, line: 23, type: !128)
!7767 = !DILocation(line: 0, scope: !7764)
!7768 = !DILocation(line: 25, column: 15, scope: !7764)
!7769 = !DILocation(line: 26, column: 1, scope: !7764)
!7770 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !440, file: !440, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7771)
!7771 = !{!7772}
!7772 = !DILocalVariable(name: "c", arg: 1, scope: !7770, file: !440, line: 14, type: !103)
!7773 = !DILocation(line: 0, scope: !7770)
!7774 = !DILocation(line: 18, column: 2, scope: !7770)
!7775 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !440, file: !440, line: 28, type: !7776, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7778)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!103, !103, !436}
!7778 = !{!7779, !7780}
!7779 = !DILocalVariable(name: "c", arg: 1, scope: !7775, file: !440, line: 28, type: !103)
!7780 = !DILocalVariable(name: "stream", arg: 2, scope: !7775, file: !440, line: 28, type: !436)
!7781 = !DILocation(line: 0, scope: !7775)
!7782 = !DILocation(line: 30, column: 27, scope: !7775)
!7783 = !DILocation(line: 30, column: 50, scope: !7775)
!7784 = !DILocation(line: 30, column: 9, scope: !7775)
!7785 = !DILocation(line: 30, column: 2, scope: !7775)
!7786 = distinct !DISubprogram(name: "fputc", scope: !440, file: !440, line: 41, type: !7776, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7787)
!7787 = !{!7788, !7789}
!7788 = !DILocalVariable(name: "c", arg: 1, scope: !7786, file: !440, line: 41, type: !103)
!7789 = !DILocalVariable(name: "stream", arg: 2, scope: !7786, file: !440, line: 41, type: !436)
!7790 = !DILocation(line: 0, scope: !7786)
!7791 = !DILocation(line: 43, column: 9, scope: !7786)
!7792 = !DILocation(line: 43, column: 2, scope: !7786)
!7793 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7794, file: !7794, line: 72, type: !7776, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7795)
!7794 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!7795 = !{!7796, !7797}
!7796 = !DILocalVariable(name: "c", arg: 1, scope: !7793, file: !7794, line: 72, type: !103)
!7797 = !DILocalVariable(name: "stream", arg: 2, scope: !7793, file: !7794, line: 72, type: !436)
!7798 = !DILocation(line: 0, scope: !7793)
!7799 = !DILocation(line: 81, column: 2, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7793, file: !7794, line: 81, column: 2)
!7801 = !{i64 2154803434}
!7802 = !DILocation(line: 82, column: 9, scope: !7793)
!7803 = !DILocation(line: 82, column: 2, scope: !7793)
!7804 = distinct !DISubprogram(name: "fputs", scope: !440, file: !440, line: 46, type: !7805, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7808)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!103, !7400, !7807}
!7807 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!7808 = !{!7809, !7810, !7811, !7812}
!7809 = !DILocalVariable(name: "s", arg: 1, scope: !7804, file: !440, line: 46, type: !7400)
!7810 = !DILocalVariable(name: "stream", arg: 2, scope: !7804, file: !440, line: 46, type: !7807)
!7811 = !DILocalVariable(name: "len", scope: !7804, file: !440, line: 48, type: !103)
!7812 = !DILocalVariable(name: "ret", scope: !7804, file: !440, line: 49, type: !103)
!7813 = !DILocation(line: 0, scope: !7804)
!7814 = !DILocation(line: 48, column: 12, scope: !7804)
!7815 = !DILocation(line: 51, column: 8, scope: !7804)
!7816 = !DILocation(line: 53, column: 13, scope: !7804)
!7817 = !DILocation(line: 53, column: 9, scope: !7804)
!7818 = !DILocation(line: 53, column: 2, scope: !7804)
!7819 = distinct !DISubprogram(name: "fwrite", scope: !440, file: !440, line: 99, type: !7820, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7822)
!7820 = !DISubroutineType(types: !7821)
!7821 = !{!120, !7701, !120, !120, !7807}
!7822 = !{!7823, !7824, !7825, !7826}
!7823 = !DILocalVariable(name: "ptr", arg: 1, scope: !7819, file: !440, line: 99, type: !7701)
!7824 = !DILocalVariable(name: "size", arg: 2, scope: !7819, file: !440, line: 99, type: !120)
!7825 = !DILocalVariable(name: "nitems", arg: 3, scope: !7819, file: !440, line: 99, type: !120)
!7826 = !DILocalVariable(name: "stream", arg: 4, scope: !7819, file: !440, line: 100, type: !7807)
!7827 = !DILocation(line: 0, scope: !7819)
!7828 = !DILocation(line: 102, column: 9, scope: !7819)
!7829 = !DILocation(line: 102, column: 2, scope: !7819)
!7830 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7794, file: !7794, line: 96, type: !7820, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7831)
!7831 = !{!7832, !7833, !7834, !7835}
!7832 = !DILocalVariable(name: "ptr", arg: 1, scope: !7830, file: !7794, line: 96, type: !7701)
!7833 = !DILocalVariable(name: "size", arg: 2, scope: !7830, file: !7794, line: 96, type: !120)
!7834 = !DILocalVariable(name: "nitems", arg: 3, scope: !7830, file: !7794, line: 96, type: !120)
!7835 = !DILocalVariable(name: "stream", arg: 4, scope: !7830, file: !7794, line: 96, type: !7807)
!7836 = !DILocation(line: 0, scope: !7830)
!7837 = !DILocation(line: 107, column: 2, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7830, file: !7794, line: 107, column: 2)
!7839 = !{i64 2154803538}
!7840 = !DILocation(line: 108, column: 9, scope: !7830)
!7841 = !DILocation(line: 108, column: 2, scope: !7830)
!7842 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !440, file: !440, line: 56, type: !7820, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7843)
!7843 = !{!7844, !7845, !7846, !7847, !7848, !7849, !7850, !7851}
!7844 = !DILocalVariable(name: "ptr", arg: 1, scope: !7842, file: !440, line: 56, type: !7701)
!7845 = !DILocalVariable(name: "size", arg: 2, scope: !7842, file: !440, line: 56, type: !120)
!7846 = !DILocalVariable(name: "nitems", arg: 3, scope: !7842, file: !440, line: 57, type: !120)
!7847 = !DILocalVariable(name: "stream", arg: 4, scope: !7842, file: !440, line: 57, type: !7807)
!7848 = !DILocalVariable(name: "i", scope: !7842, file: !440, line: 59, type: !120)
!7849 = !DILocalVariable(name: "j", scope: !7842, file: !440, line: 60, type: !120)
!7850 = !DILocalVariable(name: "p", scope: !7842, file: !440, line: 61, type: !2588)
!7851 = !DILabel(scope: !7842, name: "done", file: !440, line: 82)
!7852 = !DILocation(line: 0, scope: !7842)
!7853 = !DILocation(line: 63, column: 14, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7842, file: !440, line: 63, column: 6)
!7855 = !DILocation(line: 63, column: 24, scope: !7854)
!7856 = !DILocation(line: 72, column: 3, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7842, file: !440, line: 70, column: 5)
!7858 = !DILocation(line: 0, scope: !7857)
!7859 = !DILocation(line: 73, column: 8, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !440, line: 73, column: 8)
!7861 = distinct !DILexicalBlock(scope: !7857, file: !440, line: 72, column: 6)
!7862 = !DILocation(line: 73, column: 29, scope: !7860)
!7863 = !DILocation(line: 73, column: 27, scope: !7860)
!7864 = !DILocation(line: 73, column: 21, scope: !7860)
!7865 = !DILocation(line: 73, column: 33, scope: !7860)
!7866 = !DILocation(line: 73, column: 8, scope: !7861)
!7867 = !DILocation(line: 76, column: 5, scope: !7861)
!7868 = !DILocation(line: 77, column: 14, scope: !7857)
!7869 = !DILocation(line: 77, column: 3, scope: !7861)
!7870 = distinct !{!7870, !7856, !7871}
!7871 = !DILocation(line: 77, column: 17, scope: !7857)
!7872 = !DILocation(line: 79, column: 4, scope: !7857)
!7873 = !DILocation(line: 80, column: 13, scope: !7842)
!7874 = !DILocation(line: 80, column: 2, scope: !7857)
!7875 = distinct !{!7875, !7876, !7877}
!7876 = !DILocation(line: 70, column: 2, scope: !7842)
!7877 = !DILocation(line: 80, column: 16, scope: !7842)
!7878 = !DILocation(line: 82, column: 1, scope: !7842)
!7879 = !DILocation(line: 83, column: 17, scope: !7842)
!7880 = !DILocation(line: 83, column: 2, scope: !7842)
!7881 = !DILocation(line: 84, column: 1, scope: !7842)
!7882 = distinct !DISubprogram(name: "puts", scope: !440, file: !440, line: 106, type: !7883, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !433, retainedNodes: !7885)
!7883 = !DISubroutineType(types: !7884)
!7884 = !{!103, !199}
!7885 = !{!7886}
!7886 = !DILocalVariable(name: "s", arg: 1, scope: !7882, file: !440, line: 106, type: !199)
!7887 = !DILocation(line: 0, scope: !7882)
!7888 = !DILocation(line: 108, column: 6, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7882, file: !440, line: 108, column: 6)
!7890 = !DILocation(line: 108, column: 23, scope: !7889)
!7891 = !DILocation(line: 108, column: 6, scope: !7882)
!7892 = !DILocation(line: 112, column: 9, scope: !7882)
!7893 = !DILocation(line: 112, column: 29, scope: !7882)
!7894 = !DILocation(line: 112, column: 2, scope: !7882)
!7895 = !DILocation(line: 113, column: 1, scope: !7882)
!7896 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !572, file: !572, line: 368, type: !625, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7897)
!7897 = !{!7898}
!7898 = !DILocalVariable(name: "dev", arg: 1, scope: !7896, file: !572, line: 368, type: !601)
!7899 = !DILocation(line: 0, scope: !7896)
!7900 = !DILocation(line: 370, column: 2, scope: !7896)
!7901 = !DILocation(line: 371, column: 1, scope: !7896)
!7902 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !572, file: !572, line: 243, type: !7903, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7905)
!7903 = !DISubroutineType(types: !7904)
!7904 = !{null, !103, !103, !601}
!7905 = !{!7906, !7907, !7908, !7909, !7911}
!7906 = !DILocalVariable(name: "min", arg: 1, scope: !7902, file: !572, line: 243, type: !103)
!7907 = !DILocalVariable(name: "max", arg: 2, scope: !7902, file: !572, line: 243, type: !103)
!7908 = !DILocalVariable(name: "dev", arg: 3, scope: !7902, file: !572, line: 243, type: !601)
!7909 = !DILocalVariable(name: "data", scope: !7902, file: !572, line: 245, type: !7910)
!7910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 32)
!7911 = !DILocalVariable(name: "line", scope: !7902, file: !572, line: 246, type: !103)
!7912 = !DILocation(line: 0, scope: !7902)
!7913 = !DILocation(line: 245, column: 38, scope: !7902)
!7914 = !DILocation(line: 249, column: 24, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !572, line: 249, column: 2)
!7916 = distinct !DILexicalBlock(scope: !7902, file: !572, line: 249, column: 2)
!7917 = !DILocation(line: 249, column: 2, scope: !7916)
!7918 = !DILocation(line: 251, column: 7, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !572, line: 251, column: 7)
!7920 = distinct !DILexicalBlock(scope: !7915, file: !572, line: 249, column: 39)
!7921 = !DILocation(line: 251, column: 7, scope: !7920)
!7922 = !DILocation(line: 253, column: 4, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7919, file: !572, line: 251, column: 36)
!7924 = !DILocation(line: 256, column: 24, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7923, file: !572, line: 256, column: 8)
!7926 = !DILocation(line: 256, column: 9, scope: !7925)
!7927 = !DILocation(line: 256, column: 8, scope: !7923)
!7928 = !DILocation(line: 260, column: 43, scope: !7923)
!7929 = !DILocation(line: 260, column: 4, scope: !7923)
!7930 = !DILocation(line: 261, column: 3, scope: !7923)
!7931 = !DILocation(line: 249, column: 35, scope: !7915)
!7932 = distinct !{!7932, !7917, !7933}
!7933 = !DILocation(line: 262, column: 2, scope: !7916)
!7934 = !DILocation(line: 263, column: 1, scope: !7902)
!7935 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !572, file: !572, line: 158, type: !129, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "line", arg: 1, scope: !7935, file: !572, line: 158, type: !103)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 170, column: 38, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !572, line: 160, column: 17)
!7941 = distinct !DILexicalBlock(scope: !7935, file: !572, line: 160, column: 6)
!7942 = !DILocation(line: 170, column: 10, scope: !7940)
!7943 = !DILocation(line: 176, column: 1, scope: !7935)
!7944 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !572, file: !572, line: 183, type: !7945, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7947)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{null, !103}
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "line", arg: 1, scope: !7944, file: !572, line: 183, type: !103)
!7949 = !DILocation(line: 0, scope: !7944)
!7950 = !DILocation(line: 195, column: 28, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7952, file: !572, line: 185, column: 17)
!7952 = distinct !DILexicalBlock(scope: !7944, file: !572, line: 185, column: 6)
!7953 = !DILocation(line: 195, column: 3, scope: !7951)
!7954 = !DILocation(line: 200, column: 1, scope: !7944)
!7955 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7956, file: !7956, line: 910, type: !6392, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7957)
!7956 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7957 = !{!7958}
!7958 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7955, file: !7956, line: 910, type: !137)
!7959 = !DILocation(line: 0, scope: !7955)
!7960 = !DILocation(line: 912, column: 3, scope: !7955)
!7961 = !DILocation(line: 913, column: 1, scope: !7955)
!7962 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7956, file: !7956, line: 834, type: !7308, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7963)
!7963 = !{!7964}
!7964 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7962, file: !7956, line: 834, type: !137)
!7965 = !DILocation(line: 0, scope: !7962)
!7966 = !DILocation(line: 836, column: 11, scope: !7962)
!7967 = !DILocation(line: 836, column: 40, scope: !7962)
!7968 = !DILocation(line: 836, column: 3, scope: !7962)
!7969 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !572, file: !572, line: 304, type: !625, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7970)
!7970 = !{!7971}
!7971 = !DILocalVariable(name: "dev", arg: 1, scope: !7969, file: !572, line: 304, type: !601)
!7972 = !DILocation(line: 0, scope: !7969)
!7973 = !DILocation(line: 306, column: 2, scope: !7969)
!7974 = !DILocation(line: 307, column: 1, scope: !7969)
!7975 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !572, file: !572, line: 299, type: !625, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7976)
!7976 = !{!7977}
!7977 = !DILocalVariable(name: "dev", arg: 1, scope: !7975, file: !572, line: 299, type: !601)
!7978 = !DILocation(line: 0, scope: !7975)
!7979 = !DILocation(line: 301, column: 2, scope: !7975)
!7980 = !DILocation(line: 302, column: 1, scope: !7975)
!7981 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !572, file: !572, line: 294, type: !625, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7982)
!7982 = !{!7983}
!7983 = !DILocalVariable(name: "dev", arg: 1, scope: !7981, file: !572, line: 294, type: !601)
!7984 = !DILocation(line: 0, scope: !7981)
!7985 = !DILocation(line: 296, column: 2, scope: !7981)
!7986 = !DILocation(line: 297, column: 1, scope: !7981)
!7987 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !572, file: !572, line: 397, type: !625, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7988)
!7988 = !{!7989}
!7989 = !DILocalVariable(name: "dev", arg: 1, scope: !7987, file: !572, line: 397, type: !601)
!7990 = !DILocation(line: 0, scope: !7987)
!7991 = !DILocation(line: 399, column: 2, scope: !7987)
!7992 = !DILocation(line: 400, column: 1, scope: !7987)
!7993 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !572, file: !572, line: 392, type: !625, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !7994)
!7994 = !{!7995}
!7995 = !DILocalVariable(name: "dev", arg: 1, scope: !7993, file: !572, line: 392, type: !601)
!7996 = !DILocation(line: 0, scope: !7993)
!7997 = !DILocation(line: 394, column: 2, scope: !7993)
!7998 = !DILocation(line: 395, column: 1, scope: !7993)
!7999 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !572, file: !572, line: 289, type: !625, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8000)
!8000 = !{!8001}
!8001 = !DILocalVariable(name: "dev", arg: 1, scope: !7999, file: !572, line: 289, type: !601)
!8002 = !DILocation(line: 0, scope: !7999)
!8003 = !DILocation(line: 291, column: 2, scope: !7999)
!8004 = !DILocation(line: 292, column: 1, scope: !7999)
!8005 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !572, file: !572, line: 387, type: !625, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8006)
!8006 = !{!8007}
!8007 = !DILocalVariable(name: "dev", arg: 1, scope: !8005, file: !572, line: 387, type: !601)
!8008 = !DILocation(line: 0, scope: !8005)
!8009 = !DILocation(line: 389, column: 2, scope: !8005)
!8010 = !DILocation(line: 390, column: 1, scope: !8005)
!8011 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !572, file: !572, line: 382, type: !625, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8012)
!8012 = !{!8013}
!8013 = !DILocalVariable(name: "dev", arg: 1, scope: !8011, file: !572, line: 382, type: !601)
!8014 = !DILocation(line: 0, scope: !8011)
!8015 = !DILocation(line: 384, column: 2, scope: !8011)
!8016 = !DILocation(line: 385, column: 1, scope: !8011)
!8017 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !572, file: !572, line: 373, type: !625, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8018)
!8018 = !{!8019}
!8019 = !DILocalVariable(name: "dev", arg: 1, scope: !8017, file: !572, line: 373, type: !601)
!8020 = !DILocation(line: 0, scope: !8017)
!8021 = !DILocation(line: 375, column: 2, scope: !8017)
!8022 = !DILocation(line: 376, column: 1, scope: !8017)
!8023 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !572, file: !572, line: 284, type: !625, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8024)
!8024 = !{!8025}
!8025 = !DILocalVariable(name: "dev", arg: 1, scope: !8023, file: !572, line: 284, type: !601)
!8026 = !DILocation(line: 0, scope: !8023)
!8027 = !DILocation(line: 286, column: 2, scope: !8023)
!8028 = !DILocation(line: 287, column: 1, scope: !8023)
!8029 = distinct !DISubprogram(name: "stm32_exti_init", scope: !572, file: !572, line: 416, type: !599, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8030)
!8030 = !{!8031}
!8031 = !DILocalVariable(name: "dev", arg: 1, scope: !8029, file: !572, line: 416, type: !601)
!8032 = !DILocation(line: 0, scope: !8029)
!8033 = !DILocation(line: 418, column: 2, scope: !8029)
!8034 = !DILocation(line: 420, column: 2, scope: !8029)
!8035 = !DILocation(line: 0, scope: !624)
!8036 = !DILocation(line: 493, column: 2, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !624, file: !572, line: 493, column: 2)
!8038 = !DILocation(line: 497, column: 2, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !624, file: !572, line: 497, column: 2)
!8040 = !DILocation(line: 507, column: 2, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !624, file: !572, line: 507, column: 2)
!8042 = !DILocation(line: 512, column: 2, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !624, file: !572, line: 512, column: 2)
!8044 = !DILocation(line: 516, column: 2, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !624, file: !572, line: 516, column: 2)
!8046 = !DILocation(line: 523, column: 2, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !624, file: !572, line: 523, column: 2)
!8048 = !DILocation(line: 527, column: 2, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !624, file: !572, line: 527, column: 2)
!8050 = !DILocation(line: 581, column: 2, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !624, file: !572, line: 581, column: 2)
!8052 = !DILocation(line: 586, column: 2, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !624, file: !572, line: 586, column: 2)
!8054 = !DILocation(line: 591, column: 2, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !624, file: !572, line: 591, column: 2)
!8056 = !DILocation(line: 595, column: 2, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !624, file: !572, line: 595, column: 2)
!8058 = !DILocation(line: 607, column: 1, scope: !624)
!8059 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !572, file: !572, line: 112, type: !7945, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8060)
!8060 = !{!8061, !8062}
!8061 = !DILocalVariable(name: "line", arg: 1, scope: !8059, file: !572, line: 112, type: !103)
!8062 = !DILocalVariable(name: "irqnum", scope: !8059, file: !572, line: 114, type: !103)
!8063 = !DILocation(line: 0, scope: !8059)
!8064 = !DILocation(line: 121, column: 11, scope: !8059)
!8065 = !DILocation(line: 130, column: 26, scope: !8059)
!8066 = !DILocation(line: 130, column: 2, scope: !8059)
!8067 = !DILocation(line: 134, column: 2, scope: !8059)
!8068 = !DILocation(line: 135, column: 1, scope: !8059)
!8069 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7956, file: !7956, line: 268, type: !6392, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8070)
!8070 = !{!8071}
!8071 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8069, file: !7956, line: 268, type: !137)
!8072 = !DILocation(line: 0, scope: !8069)
!8073 = !DILocation(line: 270, column: 3, scope: !8069)
!8074 = !DILocation(line: 271, column: 1, scope: !8069)
!8075 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !572, file: !572, line: 137, type: !7945, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8076)
!8076 = !{!8077}
!8077 = !DILocalVariable(name: "line", arg: 1, scope: !8075, file: !572, line: 137, type: !103)
!8078 = !DILocation(line: 0, scope: !8075)
!8079 = !DILocation(line: 141, column: 11, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !572, line: 141, column: 6)
!8081 = !DILocation(line: 141, column: 6, scope: !8075)
!8082 = !DILocation(line: 145, column: 28, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8080, file: !572, line: 141, column: 17)
!8084 = !DILocation(line: 145, column: 3, scope: !8083)
!8085 = !DILocation(line: 147, column: 2, scope: !8083)
!8086 = !DILocation(line: 151, column: 1, scope: !8075)
!8087 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7956, file: !7956, line: 309, type: !6392, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8088)
!8088 = !{!8089}
!8089 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8087, file: !7956, line: 309, type: !137)
!8090 = !DILocation(line: 0, scope: !8087)
!8091 = !DILocation(line: 311, column: 3, scope: !8087)
!8092 = !DILocation(line: 312, column: 1, scope: !8087)
!8093 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !572, file: !572, line: 202, type: !8094, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8096)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{null, !103, !103}
!8096 = !{!8097, !8098}
!8097 = !DILocalVariable(name: "line", arg: 1, scope: !8093, file: !572, line: 202, type: !103)
!8098 = !DILocalVariable(name: "trigger", arg: 2, scope: !8093, file: !572, line: 202, type: !103)
!8099 = !DILocation(line: 0, scope: !8093)
!8100 = !DILocation(line: 211, column: 2, scope: !8093)
!8101 = !DILocation(line: 213, column: 36, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8093, file: !572, line: 211, column: 19)
!8103 = !DILocation(line: 213, column: 3, scope: !8102)
!8104 = !DILocation(line: 214, column: 3, scope: !8102)
!8105 = !DILocation(line: 215, column: 3, scope: !8102)
!8106 = !DILocation(line: 217, column: 35, scope: !8102)
!8107 = !DILocation(line: 217, column: 3, scope: !8102)
!8108 = !DILocation(line: 218, column: 3, scope: !8102)
!8109 = !DILocation(line: 219, column: 3, scope: !8102)
!8110 = !DILocation(line: 221, column: 36, scope: !8102)
!8111 = !DILocation(line: 221, column: 3, scope: !8102)
!8112 = !DILocation(line: 222, column: 3, scope: !8102)
!8113 = !DILocation(line: 223, column: 3, scope: !8102)
!8114 = !DILocation(line: 225, column: 35, scope: !8102)
!8115 = !DILocation(line: 225, column: 3, scope: !8102)
!8116 = !DILocation(line: 226, column: 3, scope: !8102)
!8117 = !DILocation(line: 227, column: 3, scope: !8102)
!8118 = !DILocation(line: 232, column: 1, scope: !8093)
!8119 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7956, file: !7956, line: 573, type: !6392, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8120)
!8120 = !{!8121}
!8121 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8119, file: !7956, line: 573, type: !137)
!8122 = !DILocation(line: 0, scope: !8119)
!8123 = !DILocation(line: 575, column: 3, scope: !8119)
!8124 = !DILocation(line: 577, column: 1, scope: !8119)
!8125 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7956, file: !7956, line: 703, type: !6392, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8126)
!8126 = !{!8127}
!8127 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8125, file: !7956, line: 703, type: !137)
!8128 = !DILocation(line: 0, scope: !8125)
!8129 = !DILocation(line: 705, column: 3, scope: !8125)
!8130 = !DILocation(line: 706, column: 1, scope: !8125)
!8131 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7956, file: !7956, line: 529, type: !6392, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8132)
!8132 = !{!8133}
!8133 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8131, file: !7956, line: 529, type: !137)
!8134 = !DILocation(line: 0, scope: !8131)
!8135 = !DILocation(line: 531, column: 3, scope: !8131)
!8136 = !DILocation(line: 533, column: 1, scope: !8131)
!8137 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7956, file: !7956, line: 661, type: !6392, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8138)
!8138 = !{!8139}
!8139 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8137, file: !7956, line: 661, type: !137)
!8140 = !DILocation(line: 0, scope: !8137)
!8141 = !DILocation(line: 663, column: 3, scope: !8137)
!8142 = !DILocation(line: 664, column: 1, scope: !8137)
!8143 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !572, file: !572, line: 433, type: !8144, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8146)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!103, !103, !612, !102}
!8146 = !{!8147, !8148, !8149, !8150, !8152}
!8147 = !DILocalVariable(name: "line", arg: 1, scope: !8143, file: !572, line: 433, type: !103)
!8148 = !DILocalVariable(name: "cb", arg: 2, scope: !8143, file: !572, line: 433, type: !612)
!8149 = !DILocalVariable(name: "arg", arg: 3, scope: !8143, file: !572, line: 433, type: !102)
!8150 = !DILocalVariable(name: "dev", scope: !8143, file: !572, line: 435, type: !8151)
!8151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!8152 = !DILocalVariable(name: "data", scope: !8143, file: !572, line: 436, type: !7910)
!8153 = !DILocation(line: 0, scope: !8143)
!8154 = !DILocation(line: 438, column: 21, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8143, file: !572, line: 438, column: 6)
!8156 = !DILocation(line: 438, column: 6, scope: !8155)
!8157 = !DILocation(line: 438, column: 6, scope: !8143)
!8158 = !DILocation(line: 442, column: 20, scope: !8143)
!8159 = !DILocation(line: 443, column: 17, scope: !8143)
!8160 = !DILocation(line: 443, column: 22, scope: !8143)
!8161 = !DILocation(line: 445, column: 2, scope: !8143)
!8162 = !DILocation(line: 446, column: 1, scope: !8143)
!8163 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !572, file: !572, line: 448, type: !7945, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !468, retainedNodes: !8164)
!8164 = !{!8165, !8166, !8167}
!8165 = !DILocalVariable(name: "line", arg: 1, scope: !8163, file: !572, line: 448, type: !103)
!8166 = !DILocalVariable(name: "dev", scope: !8163, file: !572, line: 450, type: !8151)
!8167 = !DILocalVariable(name: "data", scope: !8163, file: !572, line: 451, type: !7910)
!8168 = !DILocation(line: 0, scope: !8163)
!8169 = !DILocation(line: 453, column: 17, scope: !8163)
!8170 = !DILocation(line: 453, column: 20, scope: !8163)
!8171 = !DILocation(line: 454, column: 17, scope: !8163)
!8172 = !DILocation(line: 454, column: 22, scope: !8163)
!8173 = !DILocation(line: 455, column: 1, scope: !8163)
!8174 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !754, file: !754, line: 183, type: !792, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8175)
!8175 = !{!8176, !8177, !8178, !8179, !8180}
!8176 = !DILocalVariable(name: "dev", arg: 1, scope: !8174, file: !754, line: 183, type: !783)
!8177 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8174, file: !754, line: 184, type: !794)
!8178 = !DILocalVariable(name: "pclken", scope: !8174, file: !754, line: 186, type: !745)
!8179 = !DILocalVariable(name: "reg", scope: !8174, file: !754, line: 187, type: !1338)
!8180 = !DILocalVariable(name: "reg_val", scope: !8174, file: !754, line: 188, type: !137)
!8181 = !DILocation(line: 0, scope: !8174)
!8182 = !DILocation(line: 192, column: 6, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8174, file: !754, line: 192, column: 6)
!8184 = !DILocation(line: 192, column: 6, scope: !8174)
!8185 = !DILocation(line: 197, column: 52, scope: !8174)
!8186 = !DILocation(line: 197, column: 8, scope: !8174)
!8187 = !DILocation(line: 198, column: 12, scope: !8174)
!8188 = !DILocation(line: 199, column: 21, scope: !8174)
!8189 = !DILocation(line: 199, column: 10, scope: !8174)
!8190 = !DILocation(line: 200, column: 7, scope: !8174)
!8191 = !DILocation(line: 202, column: 2, scope: !8174)
!8192 = !DILocation(line: 203, column: 1, scope: !8174)
!8193 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !754, file: !754, line: 205, type: !792, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8194)
!8194 = !{!8195, !8196, !8197, !8198, !8199}
!8195 = !DILocalVariable(name: "dev", arg: 1, scope: !8193, file: !754, line: 205, type: !783)
!8196 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8193, file: !754, line: 206, type: !794)
!8197 = !DILocalVariable(name: "pclken", scope: !8193, file: !754, line: 208, type: !745)
!8198 = !DILocalVariable(name: "reg", scope: !8193, file: !754, line: 209, type: !1338)
!8199 = !DILocalVariable(name: "reg_val", scope: !8193, file: !754, line: 210, type: !137)
!8200 = !DILocation(line: 0, scope: !8193)
!8201 = !DILocation(line: 214, column: 6, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8193, file: !754, line: 214, column: 6)
!8203 = !DILocation(line: 214, column: 6, scope: !8193)
!8204 = !DILocation(line: 219, column: 52, scope: !8193)
!8205 = !DILocation(line: 219, column: 8, scope: !8193)
!8206 = !DILocation(line: 220, column: 12, scope: !8193)
!8207 = !DILocation(line: 221, column: 22, scope: !8193)
!8208 = !DILocation(line: 221, column: 13, scope: !8193)
!8209 = !DILocation(line: 221, column: 10, scope: !8193)
!8210 = !DILocation(line: 222, column: 7, scope: !8193)
!8211 = !DILocation(line: 224, column: 2, scope: !8193)
!8212 = !DILocation(line: 225, column: 1, scope: !8193)
!8213 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !754, file: !754, line: 262, type: !808, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8214)
!8214 = !{!8215, !8216, !8217, !8218, !8219, !8220, !8221, !8222}
!8215 = !DILocalVariable(name: "clock", arg: 1, scope: !8213, file: !754, line: 262, type: !783)
!8216 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8213, file: !754, line: 263, type: !794)
!8217 = !DILocalVariable(name: "rate", arg: 3, scope: !8213, file: !754, line: 264, type: !149)
!8218 = !DILocalVariable(name: "pclken", scope: !8213, file: !754, line: 266, type: !745)
!8219 = !DILocalVariable(name: "ahb_clock", scope: !8213, file: !754, line: 273, type: !137)
!8220 = !DILocalVariable(name: "apb1_clock", scope: !8213, file: !754, line: 274, type: !137)
!8221 = !DILocalVariable(name: "apb2_clock", scope: !8213, file: !754, line: 276, type: !137)
!8222 = !DILocalVariable(name: "ahb3_clock", scope: !8213, file: !754, line: 286, type: !137)
!8223 = !DILocation(line: 0, scope: !8213)
!8224 = !DILocation(line: 273, column: 23, scope: !8213)
!8225 = !DILocation(line: 274, column: 24, scope: !8213)
!8226 = !DILocation(line: 299, column: 18, scope: !8213)
!8227 = !DILocation(line: 299, column: 2, scope: !8213)
!8228 = !DILocation(line: 319, column: 3, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8213, file: !754, line: 299, column: 23)
!8230 = !DILocation(line: 323, column: 3, scope: !8229)
!8231 = !DILocation(line: 346, column: 33, scope: !8229)
!8232 = !DILocation(line: 346, column: 11, scope: !8229)
!8233 = !DILocation(line: 350, column: 3, scope: !8229)
!8234 = !DILocation(line: 354, column: 33, scope: !8229)
!8235 = !DILocation(line: 354, column: 11, scope: !8229)
!8236 = !DILocation(line: 358, column: 3, scope: !8229)
!8237 = !DILocation(line: 374, column: 3, scope: !8229)
!8238 = !DILocation(line: 379, column: 3, scope: !8229)
!8239 = !DILocation(line: 0, scope: !8229)
!8240 = !DILocation(line: 396, column: 1, scope: !8213)
!8241 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !754, file: !754, line: 227, type: !824, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8242)
!8242 = !{!8243, !8244, !8245, !8246, !8247, !8248, !8249, !8250}
!8243 = !DILocalVariable(name: "dev", arg: 1, scope: !8241, file: !754, line: 227, type: !783)
!8244 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8241, file: !754, line: 228, type: !794)
!8245 = !DILocalVariable(name: "data", arg: 3, scope: !8241, file: !754, line: 229, type: !102)
!8246 = !DILocalVariable(name: "pclken", scope: !8241, file: !754, line: 233, type: !745)
!8247 = !DILocalVariable(name: "reg", scope: !8241, file: !754, line: 234, type: !1338)
!8248 = !DILocalVariable(name: "reg_val", scope: !8241, file: !754, line: 235, type: !137)
!8249 = !DILocalVariable(name: "dt_val", scope: !8241, file: !754, line: 235, type: !137)
!8250 = !DILocalVariable(name: "err", scope: !8241, file: !754, line: 236, type: !103)
!8251 = !DILocation(line: 0, scope: !8241)
!8252 = !DILocation(line: 241, column: 30, scope: !8241)
!8253 = !DILocation(line: 241, column: 8, scope: !8241)
!8254 = !DILocation(line: 242, column: 10, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8241, file: !754, line: 242, column: 6)
!8256 = !DILocation(line: 242, column: 6, scope: !8241)
!8257 = !DILocation(line: 247, column: 11, scope: !8241)
!8258 = !DILocation(line: 248, column: 6, scope: !8241)
!8259 = !DILocation(line: 247, column: 44, scope: !8241)
!8260 = !DILocation(line: 250, column: 6, scope: !8241)
!8261 = !DILocation(line: 249, column: 52, scope: !8241)
!8262 = !DILocation(line: 249, column: 8, scope: !8241)
!8263 = !DILocation(line: 251, column: 12, scope: !8241)
!8264 = !DILocation(line: 252, column: 10, scope: !8241)
!8265 = !DILocation(line: 253, column: 7, scope: !8241)
!8266 = !DILocation(line: 255, column: 2, scope: !8241)
!8267 = !DILocation(line: 260, column: 1, scope: !8241)
!8268 = distinct !DISubprogram(name: "enabled_clock", scope: !754, file: !754, line: 100, type: !8269, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8271)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!103, !137}
!8271 = !{!8272, !8273}
!8272 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8268, file: !754, line: 100, type: !137)
!8273 = !DILocalVariable(name: "r", scope: !8268, file: !754, line: 102, type: !103)
!8274 = !DILocation(line: 0, scope: !8268)
!8275 = !DILocation(line: 104, column: 2, scope: !8268)
!8276 = !DILocation(line: 180, column: 2, scope: !8268)
!8277 = !DILocation(line: 181, column: 1, scope: !8268)
!8278 = distinct !DISubprogram(name: "get_bus_clock", scope: !754, file: !754, line: 79, type: !8279, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8281)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!137, !137, !137}
!8281 = !{!8282, !8283}
!8282 = !DILocalVariable(name: "clock", arg: 1, scope: !8278, file: !754, line: 79, type: !137)
!8283 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8278, file: !754, line: 79, type: !137)
!8284 = !DILocation(line: 0, scope: !8278)
!8285 = !DILocation(line: 81, column: 15, scope: !8278)
!8286 = !DILocation(line: 81, column: 2, scope: !8278)
!8287 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !754, file: !754, line: 68, type: !8288, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8290)
!8288 = !DISubroutineType(types: !8289)
!8289 = !{!137, !137, !103, !103, !103}
!8290 = !{!8291, !8292, !8293, !8294}
!8291 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8287, file: !754, line: 68, type: !137)
!8292 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8287, file: !754, line: 69, type: !103)
!8293 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8287, file: !754, line: 70, type: !103)
!8294 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8287, file: !754, line: 71, type: !103)
!8295 = !DILocation(line: 0, scope: !8287)
!8296 = !DILocation(line: 75, column: 22, scope: !8287)
!8297 = !DILocation(line: 76, column: 13, scope: !8287)
!8298 = !DILocation(line: 75, column: 34, scope: !8287)
!8299 = !DILocation(line: 75, column: 2, scope: !8287)
!8300 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !754, file: !754, line: 641, type: !781, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8301)
!8301 = !{!8302, !8303, !8304}
!8302 = !DILocalVariable(name: "dev", arg: 1, scope: !8300, file: !754, line: 641, type: !783)
!8303 = !DILocalVariable(name: "old_flash_freq", scope: !8300, file: !754, line: 664, type: !137)
!8304 = !DILocalVariable(name: "new_flash_freq", scope: !8300, file: !754, line: 665, type: !137)
!8305 = !DILocation(line: 0, scope: !8300)
!8306 = !DILocation(line: 646, column: 2, scope: !8300)
!8307 = !DILocation(line: 667, column: 19, scope: !8300)
!8308 = !DILocation(line: 674, column: 21, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8300, file: !754, line: 674, column: 6)
!8310 = !DILocation(line: 674, column: 6, scope: !8300)
!8311 = !DILocation(line: 675, column: 3, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !754, line: 674, column: 59)
!8313 = !DILocation(line: 676, column: 2, scope: !8312)
!8314 = !DILocation(line: 680, column: 2, scope: !8300)
!8315 = !DILocation(line: 683, column: 2, scope: !8300)
!8316 = !DILocation(line: 690, column: 3, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !754, line: 689, column: 9)
!8318 = distinct !DILexicalBlock(scope: !8300, file: !754, line: 685, column: 6)
!8319 = !DILocation(line: 695, column: 2, scope: !8300)
!8320 = !DILocation(line: 696, column: 2, scope: !8300)
!8321 = !DILocation(line: 696, column: 9, scope: !8300)
!8322 = !DILocation(line: 696, column: 34, scope: !8300)
!8323 = distinct !{!8323, !8320, !8324}
!8324 = !DILocation(line: 697, column: 2, scope: !8300)
!8325 = !DILocation(line: 720, column: 21, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8300, file: !754, line: 720, column: 6)
!8327 = !DILocation(line: 720, column: 6, scope: !8300)
!8328 = !DILocation(line: 721, column: 3, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !754, line: 720, column: 60)
!8330 = !DILocation(line: 722, column: 2, scope: !8329)
!8331 = !DILocation(line: 725, column: 18, scope: !8300)
!8332 = !DILocation(line: 728, column: 2, scope: !8300)
!8333 = !DILocation(line: 730, column: 2, scope: !8300)
!8334 = !DILocation(line: 745, column: 2, scope: !8300)
!8335 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8336, file: !8336, line: 3275, type: !135, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8336 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8337 = !DILocation(line: 3277, column: 21, scope: !8335)
!8338 = !DILocation(line: 3277, column: 3, scope: !8335)
!8339 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !754, file: !754, line: 507, type: !2819, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8340 = !DILocation(line: 516, column: 4, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !754, line: 515, column: 10)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !754, line: 513, column: 7)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !754, line: 510, column: 37)
!8344 = distinct !DILexicalBlock(scope: !8339, file: !754, line: 510, column: 6)
!8345 = !DILocation(line: 526, column: 3, scope: !8343)
!8346 = !DILocation(line: 527, column: 3, scope: !8343)
!8347 = !DILocation(line: 527, column: 10, scope: !8343)
!8348 = !DILocation(line: 527, column: 31, scope: !8343)
!8349 = distinct !{!8349, !8346, !8350}
!8350 = !DILocation(line: 529, column: 3, scope: !8343)
!8351 = !DILocation(line: 583, column: 3, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !754, line: 577, column: 37)
!8353 = distinct !DILexicalBlock(scope: !8339, file: !754, line: 577, column: 6)
!8354 = !DILocation(line: 584, column: 3, scope: !8352)
!8355 = !DILocation(line: 584, column: 10, scope: !8352)
!8356 = !DILocation(line: 584, column: 31, scope: !8352)
!8357 = distinct !{!8357, !8354, !8358}
!8358 = !DILocation(line: 585, column: 3, scope: !8352)
!8359 = !DILocation(line: 627, column: 1, scope: !8339)
!8360 = distinct !DISubprogram(name: "set_up_plls", scope: !754, file: !754, line: 448, type: !2819, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8361 = !DILocation(line: 460, column: 6, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8360, file: !754, line: 460, column: 6)
!8363 = !DILocation(line: 460, column: 31, scope: !8362)
!8364 = !DILocation(line: 460, column: 6, scope: !8360)
!8365 = !DILocation(line: 461, column: 3, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8362, file: !754, line: 460, column: 67)
!8367 = !DILocation(line: 462, column: 3, scope: !8366)
!8368 = !DILocation(line: 463, column: 2, scope: !8366)
!8369 = !DILocation(line: 464, column: 2, scope: !8360)
!8370 = !DILocation(line: 488, column: 2, scope: !8360)
!8371 = !DILocation(line: 492, column: 2, scope: !8360)
!8372 = !DILocation(line: 496, column: 2, scope: !8360)
!8373 = !DILocation(line: 499, column: 2, scope: !8360)
!8374 = !DILocation(line: 500, column: 2, scope: !8360)
!8375 = !DILocation(line: 500, column: 9, scope: !8360)
!8376 = !DILocation(line: 500, column: 30, scope: !8360)
!8377 = distinct !{!8377, !8374, !8378}
!8378 = !DILocation(line: 502, column: 2, scope: !8360)
!8379 = !DILocation(line: 505, column: 1, scope: !8360)
!8380 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8336, file: !8336, line: 3224, type: !6392, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8381)
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8380, file: !8336, line: 3224, type: !137)
!8383 = !DILocation(line: 0, scope: !8380)
!8384 = !DILocation(line: 3226, column: 3, scope: !8380)
!8385 = !DILocation(line: 3227, column: 1, scope: !8380)
!8386 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8336, file: !8336, line: 3188, type: !6392, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8387)
!8387 = !{!8388}
!8388 = !DILocalVariable(name: "Source", arg: 1, scope: !8386, file: !8336, line: 3188, type: !137)
!8389 = !DILocation(line: 0, scope: !8386)
!8390 = !DILocation(line: 3190, column: 3, scope: !8386)
!8391 = !DILocation(line: 3191, column: 1, scope: !8386)
!8392 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8336, file: !8336, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8393 = !DILocation(line: 3206, column: 21, scope: !8392)
!8394 = !DILocation(line: 3206, column: 3, scope: !8392)
!8395 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8336, file: !8336, line: 3240, type: !6392, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8396)
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8395, file: !8336, line: 3240, type: !137)
!8398 = !DILocation(line: 0, scope: !8395)
!8399 = !DILocation(line: 3242, column: 3, scope: !8395)
!8400 = !DILocation(line: 3243, column: 1, scope: !8395)
!8401 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8336, file: !8336, line: 3256, type: !6392, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !8402)
!8402 = !{!8403}
!8403 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8401, file: !8336, line: 3256, type: !137)
!8404 = !DILocation(line: 0, scope: !8401)
!8405 = !DILocation(line: 3258, column: 3, scope: !8401)
!8406 = !DILocation(line: 3259, column: 1, scope: !8401)
!8407 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !754, file: !754, line: 409, type: !2819, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8408 = !DILocation(line: 412, column: 6, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8407, file: !754, line: 412, column: 6)
!8410 = !DILocation(line: 412, column: 27, scope: !8409)
!8411 = !DILocation(line: 412, column: 6, scope: !8407)
!8412 = !DILocation(line: 414, column: 3, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8409, file: !754, line: 412, column: 33)
!8414 = !DILocation(line: 415, column: 3, scope: !8413)
!8415 = !DILocation(line: 415, column: 10, scope: !8413)
!8416 = !DILocation(line: 415, column: 31, scope: !8413)
!8417 = distinct !{!8417, !8414, !8418}
!8418 = !DILocation(line: 417, column: 3, scope: !8413)
!8419 = !DILocation(line: 421, column: 2, scope: !8407)
!8420 = !DILocation(line: 422, column: 2, scope: !8407)
!8421 = !DILocation(line: 422, column: 9, scope: !8407)
!8422 = !DILocation(line: 422, column: 34, scope: !8407)
!8423 = distinct !{!8423, !8420, !8424}
!8424 = !DILocation(line: 423, column: 2, scope: !8407)
!8425 = !DILocation(line: 424, column: 1, scope: !8407)
!8426 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8336, file: !8336, line: 4195, type: !2819, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8427 = !DILocation(line: 4197, column: 3, scope: !8426)
!8428 = !DILocation(line: 4198, column: 1, scope: !8426)
!8429 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8336, file: !8336, line: 4184, type: !2819, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8430 = !DILocation(line: 4186, column: 3, scope: !8429)
!8431 = !DILocation(line: 4187, column: 1, scope: !8429)
!8432 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8336, file: !8336, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8433 = !DILocation(line: 4207, column: 11, scope: !8432)
!8434 = !DILocation(line: 4207, column: 44, scope: !8432)
!8435 = !DILocation(line: 4207, column: 3, scope: !8432)
!8436 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8336, file: !8336, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8437 = !DILocation(line: 3009, column: 11, scope: !8436)
!8438 = !DILocation(line: 3009, column: 44, scope: !8436)
!8439 = !DILocation(line: 3009, column: 3, scope: !8436)
!8440 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8336, file: !8336, line: 2987, type: !2819, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8441 = !DILocation(line: 2989, column: 3, scope: !8440)
!8442 = !DILocation(line: 2990, column: 1, scope: !8440)
!8443 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8336, file: !8336, line: 2939, type: !2819, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8444 = !DILocation(line: 2941, column: 3, scope: !8443)
!8445 = !DILocation(line: 2942, column: 1, scope: !8443)
!8446 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8336, file: !8336, line: 2949, type: !2819, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8447 = !DILocation(line: 2951, column: 3, scope: !8446)
!8448 = !DILocation(line: 2952, column: 1, scope: !8446)
!8449 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8336, file: !8336, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8450 = !DILocation(line: 2971, column: 11, scope: !8449)
!8451 = !DILocation(line: 2971, column: 44, scope: !8449)
!8452 = !DILocation(line: 2971, column: 3, scope: !8449)
!8453 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8336, file: !8336, line: 3143, type: !2819, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8454 = !DILocation(line: 3145, column: 3, scope: !8453)
!8455 = !DILocation(line: 3146, column: 1, scope: !8453)
!8456 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8336, file: !8336, line: 3163, type: !135, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !693, retainedNodes: !162)
!8457 = !DILocation(line: 3165, column: 11, scope: !8456)
!8458 = !DILocation(line: 3165, column: 46, scope: !8456)
!8459 = !DILocation(line: 3165, column: 3, scope: !8456)
!8460 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8461, file: !8461, line: 40, type: !135, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !162)
!8461 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8462 = !DILocation(line: 45, column: 3, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !8461, line: 44, column: 44)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !8461, line: 44, column: 13)
!8465 = distinct !DILexicalBlock(scope: !8460, file: !8461, line: 42, column: 6)
!8466 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8461, file: !8461, line: 56, type: !2819, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !162)
!8467 = !DILocation(line: 58, column: 2, scope: !8466)
!8468 = !DILocation(line: 62, column: 1, scope: !8466)
!8469 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8336, file: !8336, line: 4304, type: !8470, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !8472)
!8470 = !DISubroutineType(types: !8471)
!8471 = !{null, !137, !137, !137, !137}
!8472 = !{!8473, !8474, !8475, !8476}
!8473 = !DILocalVariable(name: "Source", arg: 1, scope: !8469, file: !8336, line: 4304, type: !137)
!8474 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8469, file: !8336, line: 4304, type: !137)
!8475 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8469, file: !8336, line: 4304, type: !137)
!8476 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8469, file: !8336, line: 4304, type: !137)
!8477 = !DILocation(line: 0, scope: !8469)
!8478 = !DILocation(line: 4306, column: 3, scope: !8469)
!8479 = !DILocation(line: 4308, column: 3, scope: !8469)
!8480 = !DILocation(line: 4312, column: 1, scope: !8469)
!8481 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8461, file: !8461, line: 69, type: !2819, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !162)
!8482 = !DILocation(line: 72, column: 2, scope: !8481)
!8483 = !DILocation(line: 73, column: 1, scope: !8481)
!8484 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8485, file: !8485, line: 1185, type: !6392, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2590, retainedNodes: !8486)
!8485 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8486 = !{!8487, !8488}
!8487 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8484, file: !8485, line: 1185, type: !137)
!8488 = !DILocalVariable(name: "tmpreg", scope: !8484, file: !8485, line: 1187, type: !176)
!8489 = !DILocation(line: 0, scope: !8484)
!8490 = !DILocation(line: 1187, column: 3, scope: !8484)
!8491 = !DILocation(line: 1187, column: 17, scope: !8484)
!8492 = !DILocation(line: 1188, column: 3, scope: !8484)
!8493 = !DILocation(line: 1190, column: 12, scope: !8484)
!8494 = !DILocation(line: 1190, column: 10, scope: !8484)
!8495 = !DILocation(line: 1191, column: 9, scope: !8484)
!8496 = !DILocation(line: 1192, column: 1, scope: !8484)
!8497 = distinct !DISubprogram(name: "uart_console_init", scope: !885, file: !885, line: 588, type: !862, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8498)
!8498 = !{!8499}
!8499 = !DILocalVariable(name: "arg", arg: 1, scope: !8497, file: !885, line: 588, type: !840)
!8500 = !DILocation(line: 0, scope: !8497)
!8501 = !DILocation(line: 593, column: 7, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8497, file: !885, line: 593, column: 6)
!8503 = !DILocation(line: 593, column: 6, scope: !8497)
!8504 = !DILocation(line: 597, column: 2, scope: !8497)
!8505 = !DILocation(line: 599, column: 2, scope: !8497)
!8506 = !DILocation(line: 600, column: 1, scope: !8497)
!8507 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !8509, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8511)
!8508 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!8509 = !DISubroutineType(types: !8510)
!8510 = !{!211, !840}
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8507, file: !8508, line: 47, type: !840)
!8513 = !DILocation(line: 0, scope: !8507)
!8514 = !DILocation(line: 55, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8507, file: !8508, line: 55, column: 2)
!8516 = !{i64 2154951514}
!8517 = !DILocation(line: 56, column: 9, scope: !8507)
!8518 = !DILocation(line: 56, column: 2, scope: !8507)
!8519 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !885, file: !885, line: 573, type: !2819, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !162)
!8520 = !DILocation(line: 576, column: 2, scope: !8519)
!8521 = !DILocation(line: 579, column: 2, scope: !8519)
!8522 = !DILocation(line: 581, column: 1, scope: !8519)
!8523 = distinct !DISubprogram(name: "console_out", scope: !885, file: !885, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "c", arg: 1, scope: !8523, file: !885, line: 77, type: !103)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 89, column: 11, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8523, file: !885, line: 89, column: 6)
!8529 = !DILocation(line: 89, column: 6, scope: !8523)
!8530 = !DILocation(line: 90, column: 3, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8528, file: !885, line: 89, column: 17)
!8532 = !DILocation(line: 91, column: 2, scope: !8531)
!8533 = !DILocation(line: 92, column: 34, scope: !8523)
!8534 = !DILocation(line: 92, column: 2, scope: !8523)
!8535 = !DILocation(line: 94, column: 2, scope: !8523)
!8536 = distinct !DISubprogram(name: "uart_poll_out", scope: !8537, file: !8537, line: 95, type: !858, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8538)
!8537 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/sys_heap")
!8538 = !{!8539, !8540}
!8539 = !DILocalVariable(name: "dev", arg: 1, scope: !8536, file: !8537, line: 95, type: !840)
!8540 = !DILocalVariable(name: "out_char", arg: 2, scope: !8536, file: !8537, line: 95, type: !209)
!8541 = !DILocation(line: 0, scope: !8536)
!8542 = !DILocation(line: 105, column: 2, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8536, file: !8537, line: 105, column: 2)
!8544 = !{i64 2155034905}
!8545 = !DILocation(line: 106, column: 2, scope: !8536)
!8546 = !DILocation(line: 107, column: 1, scope: !8536)
!8547 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !834, file: !834, line: 574, type: !858, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8548)
!8548 = !{!8549, !8550, !8551}
!8549 = !DILocalVariable(name: "dev", arg: 1, scope: !8547, file: !834, line: 574, type: !840)
!8550 = !DILocalVariable(name: "out_char", arg: 2, scope: !8547, file: !834, line: 575, type: !209)
!8551 = !DILocalVariable(name: "api", scope: !8547, file: !834, line: 577, type: !831)
!8552 = !DILocation(line: 0, scope: !8547)
!8553 = !DILocation(line: 578, column: 40, scope: !8547)
!8554 = !DILocation(line: 580, column: 7, scope: !8547)
!8555 = !DILocation(line: 580, column: 2, scope: !8547)
!8556 = !DILocation(line: 581, column: 1, scope: !8547)
!8557 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !8509, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !196, line: 730, type: !840)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 732, column: 9, scope: !8557)
!8562 = !DILocation(line: 732, column: 2, scope: !8557)
!8563 = distinct !DISubprogram(name: "uart_register_input", scope: !885, file: !885, line: 560, type: !8564, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !828, retainedNodes: !8609)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{null, !8566, !8566, !8606}
!8566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8567, size: 32)
!8567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !357, line: 2208, size: 128, elements: !8568)
!8568 = !{!8569}
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8567, file: !357, line: 2209, baseType: !8570, size: 128)
!8570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !357, line: 1709, size: 128, elements: !8571)
!8571 = !{!8572, !8585, !8587}
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8570, file: !357, line: 1710, baseType: !8573, size: 64)
!8573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8574, line: 46, baseType: !8575)
!8574 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8574, line: 41, size: 64, elements: !8576)
!8576 = !{!8577, !8584}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8575, file: !8574, line: 42, baseType: !8578, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8579, size: 32)
!8579 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8574, line: 39, baseType: !8580)
!8580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8574, line: 35, size: 32, elements: !8581)
!8581 = !{!8582}
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8580, file: !8574, line: 36, baseType: !8583, size: 32)
!8583 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8574, line: 32, baseType: !137)
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8575, file: !8574, line: 43, baseType: !8578, size: 32, offset: 32)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8570, file: !357, line: 1711, baseType: !8586, offset: 64)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8570, file: !357, line: 1712, baseType: !8588, size: 64, offset: 64)
!8588 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !8589)
!8589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !8590)
!8590 = !{!8591}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8589, file: !299, line: 232, baseType: !8592, size: 64)
!8592 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !8593)
!8593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !8594)
!8594 = !{!8595, !8601}
!8595 = !DIDerivedType(tag: DW_TAG_member, scope: !8593, file: !273, line: 38, baseType: !8596, size: 32)
!8596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8593, file: !273, line: 38, size: 32, elements: !8597)
!8597 = !{!8598, !8600}
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8596, file: !273, line: 39, baseType: !8599, size: 32)
!8599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8593, size: 32)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8596, file: !273, line: 40, baseType: !8599, size: 32)
!8601 = !DIDerivedType(tag: DW_TAG_member, scope: !8593, file: !273, line: 42, baseType: !8602, size: 32, offset: 32)
!8602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8593, file: !273, line: 42, size: 32, elements: !8603)
!8603 = !{!8604, !8605}
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8602, file: !273, line: 43, baseType: !8599, size: 32)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8602, file: !273, line: 44, baseType: !8599, size: 32)
!8606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8607, size: 32)
!8607 = !DISubroutineType(types: !8608)
!8608 = !{!208, !1022, !208}
!8609 = !{!8610, !8611, !8612}
!8610 = !DILocalVariable(name: "avail", arg: 1, scope: !8563, file: !885, line: 560, type: !8566)
!8611 = !DILocalVariable(name: "lines", arg: 2, scope: !8563, file: !885, line: 560, type: !8566)
!8612 = !DILocalVariable(name: "completion", arg: 3, scope: !8563, file: !885, line: 561, type: !8606)
!8613 = !DILocation(line: 0, scope: !8563)
!8614 = !DILocation(line: 566, column: 1, scope: !8563)
!8615 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1066, file: !1066, line: 523, type: !921, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8616)
!8616 = !{!8617, !8618, !8619, !8620, !8621}
!8617 = !DILocalVariable(name: "dev", arg: 1, scope: !8615, file: !1066, line: 523, type: !923)
!8618 = !DILocalVariable(name: "pin", arg: 2, scope: !8615, file: !1066, line: 524, type: !938)
!8619 = !DILocalVariable(name: "flags", arg: 3, scope: !8615, file: !1066, line: 524, type: !939)
!8620 = !DILocalVariable(name: "err", scope: !8615, file: !1066, line: 526, type: !103)
!8621 = !DILocalVariable(name: "pincfg", scope: !8615, file: !1066, line: 527, type: !103)
!8622 = !DILocation(line: 0, scope: !8615)
!8623 = !DILocation(line: 527, column: 2, scope: !8615)
!8624 = !DILocation(line: 532, column: 8, scope: !8615)
!8625 = !DILocation(line: 533, column: 10, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8615, file: !1066, line: 533, column: 6)
!8627 = !DILocation(line: 533, column: 6, scope: !8615)
!8628 = !DILocation(line: 543, column: 13, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8615, file: !1066, line: 543, column: 6)
!8630 = !DILocation(line: 543, column: 28, scope: !8629)
!8631 = !DILocation(line: 543, column: 6, scope: !8615)
!8632 = !DILocation(line: 544, column: 14, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !1066, line: 544, column: 7)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !1066, line: 543, column: 34)
!8635 = !DILocation(line: 544, column: 39, scope: !8633)
!8636 = !DILocation(line: 544, column: 7, scope: !8634)
!8637 = !DILocation(line: 545, column: 38, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8633, file: !1066, line: 544, column: 45)
!8639 = !DILocation(line: 545, column: 4, scope: !8638)
!8640 = !DILocation(line: 546, column: 3, scope: !8638)
!8641 = !DILocation(line: 546, column: 21, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8633, file: !1066, line: 546, column: 14)
!8643 = !DILocation(line: 546, column: 45, scope: !8642)
!8644 = !DILocation(line: 546, column: 14, scope: !8633)
!8645 = !DILocation(line: 547, column: 40, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8642, file: !1066, line: 546, column: 51)
!8647 = !DILocation(line: 547, column: 4, scope: !8646)
!8648 = !DILocation(line: 548, column: 3, scope: !8646)
!8649 = !DILocation(line: 551, column: 32, scope: !8615)
!8650 = !DILocation(line: 551, column: 37, scope: !8615)
!8651 = !DILocation(line: 551, column: 2, scope: !8615)
!8652 = !DILocation(line: 554, column: 6, scope: !8615)
!8653 = !DILocation(line: 562, column: 1, scope: !8615)
!8654 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1066, file: !1066, line: 410, type: !8655, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8657)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{!103, !923, !149}
!8657 = !{!8658, !8659, !8660, !8662}
!8658 = !DILocalVariable(name: "dev", arg: 1, scope: !8654, file: !1066, line: 410, type: !923)
!8659 = !DILocalVariable(name: "value", arg: 2, scope: !8654, file: !1066, line: 410, type: !149)
!8660 = !DILocalVariable(name: "cfg", scope: !8654, file: !1066, line: 412, type: !8661)
!8661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!8662 = !DILocalVariable(name: "gpio", scope: !8654, file: !1066, line: 413, type: !996)
!8663 = !DILocation(line: 0, scope: !8654)
!8664 = !DILocation(line: 412, column: 45, scope: !8654)
!8665 = !DILocation(line: 413, column: 44, scope: !8654)
!8666 = !DILocation(line: 415, column: 11, scope: !8654)
!8667 = !DILocation(line: 415, column: 9, scope: !8654)
!8668 = !DILocation(line: 417, column: 2, scope: !8654)
!8669 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1066, file: !1066, line: 420, type: !948, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8670)
!8670 = !{!8671, !8672, !8673, !8674, !8675, !8676}
!8671 = !DILocalVariable(name: "dev", arg: 1, scope: !8669, file: !1066, line: 420, type: !923)
!8672 = !DILocalVariable(name: "mask", arg: 2, scope: !8669, file: !1066, line: 421, type: !950)
!8673 = !DILocalVariable(name: "value", arg: 3, scope: !8669, file: !1066, line: 422, type: !945)
!8674 = !DILocalVariable(name: "cfg", scope: !8669, file: !1066, line: 424, type: !8661)
!8675 = !DILocalVariable(name: "gpio", scope: !8669, file: !1066, line: 425, type: !996)
!8676 = !DILocalVariable(name: "port_value", scope: !8669, file: !1066, line: 426, type: !137)
!8677 = !DILocation(line: 0, scope: !8669)
!8678 = !DILocation(line: 424, column: 45, scope: !8669)
!8679 = !DILocation(line: 425, column: 44, scope: !8669)
!8680 = !DILocation(line: 430, column: 15, scope: !8669)
!8681 = !DILocation(line: 431, column: 46, scope: !8669)
!8682 = !DILocation(line: 431, column: 44, scope: !8669)
!8683 = !DILocation(line: 431, column: 61, scope: !8669)
!8684 = !DILocation(line: 431, column: 53, scope: !8669)
!8685 = !DILocation(line: 431, column: 2, scope: !8669)
!8686 = !DILocation(line: 435, column: 2, scope: !8669)
!8687 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1066, file: !1066, line: 438, type: !953, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8688)
!8688 = !{!8689, !8690, !8691, !8692}
!8689 = !DILocalVariable(name: "dev", arg: 1, scope: !8687, file: !1066, line: 438, type: !923)
!8690 = !DILocalVariable(name: "pins", arg: 2, scope: !8687, file: !1066, line: 439, type: !950)
!8691 = !DILocalVariable(name: "cfg", scope: !8687, file: !1066, line: 441, type: !8661)
!8692 = !DILocalVariable(name: "gpio", scope: !8687, file: !1066, line: 442, type: !996)
!8693 = !DILocation(line: 0, scope: !8687)
!8694 = !DILocation(line: 441, column: 45, scope: !8687)
!8695 = !DILocation(line: 442, column: 44, scope: !8687)
!8696 = !DILocation(line: 448, column: 2, scope: !8687)
!8697 = !DILocation(line: 450, column: 2, scope: !8687)
!8698 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1066, file: !1066, line: 453, type: !953, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8699)
!8699 = !{!8700, !8701, !8702, !8703}
!8700 = !DILocalVariable(name: "dev", arg: 1, scope: !8698, file: !1066, line: 453, type: !923)
!8701 = !DILocalVariable(name: "pins", arg: 2, scope: !8698, file: !1066, line: 454, type: !950)
!8702 = !DILocalVariable(name: "cfg", scope: !8698, file: !1066, line: 456, type: !8661)
!8703 = !DILocalVariable(name: "gpio", scope: !8698, file: !1066, line: 457, type: !996)
!8704 = !DILocation(line: 0, scope: !8698)
!8705 = !DILocation(line: 456, column: 45, scope: !8698)
!8706 = !DILocation(line: 457, column: 44, scope: !8698)
!8707 = !DILocation(line: 467, column: 2, scope: !8698)
!8708 = !DILocation(line: 470, column: 2, scope: !8698)
!8709 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1066, file: !1066, line: 473, type: !953, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8710)
!8710 = !{!8711, !8712, !8713, !8714}
!8711 = !DILocalVariable(name: "dev", arg: 1, scope: !8709, file: !1066, line: 473, type: !923)
!8712 = !DILocalVariable(name: "pins", arg: 2, scope: !8709, file: !1066, line: 474, type: !950)
!8713 = !DILocalVariable(name: "cfg", scope: !8709, file: !1066, line: 476, type: !8661)
!8714 = !DILocalVariable(name: "gpio", scope: !8709, file: !1066, line: 477, type: !996)
!8715 = !DILocation(line: 0, scope: !8709)
!8716 = !DILocation(line: 476, column: 45, scope: !8709)
!8717 = !DILocation(line: 477, column: 44, scope: !8709)
!8718 = !DILocation(line: 484, column: 2, scope: !8709)
!8719 = !DILocation(line: 487, column: 2, scope: !8709)
!8720 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1066, file: !1066, line: 594, type: !959, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8721)
!8721 = !{!8722, !8723, !8724, !8725, !8726, !8727, !8729, !8730, !8731}
!8722 = !DILocalVariable(name: "dev", arg: 1, scope: !8720, file: !1066, line: 594, type: !923)
!8723 = !DILocalVariable(name: "pin", arg: 2, scope: !8720, file: !1066, line: 595, type: !938)
!8724 = !DILocalVariable(name: "mode", arg: 3, scope: !8720, file: !1066, line: 596, type: !897)
!8725 = !DILocalVariable(name: "trig", arg: 4, scope: !8720, file: !1066, line: 597, type: !903)
!8726 = !DILocalVariable(name: "cfg", scope: !8720, file: !1066, line: 599, type: !8661)
!8727 = !DILocalVariable(name: "data", scope: !8720, file: !1066, line: 600, type: !8728)
!8728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!8729 = !DILocalVariable(name: "edge", scope: !8720, file: !1066, line: 601, type: !103)
!8730 = !DILocalVariable(name: "err", scope: !8720, file: !1066, line: 602, type: !103)
!8731 = !DILabel(scope: !8720, name: "exit", file: !1066, line: 643)
!8732 = !DILocation(line: 0, scope: !8720)
!8733 = !DILocation(line: 599, column: 45, scope: !8720)
!8734 = !DILocation(line: 604, column: 6, scope: !8720)
!8735 = !DILocation(line: 605, column: 34, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8737, file: !1066, line: 605, column: 7)
!8737 = distinct !DILexicalBlock(scope: !8738, file: !1066, line: 604, column: 38)
!8738 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 604, column: 6)
!8739 = !DILocation(line: 605, column: 7, scope: !8736)
!8740 = !DILocation(line: 605, column: 47, scope: !8736)
!8741 = !DILocation(line: 605, column: 39, scope: !8736)
!8742 = !DILocation(line: 605, column: 7, scope: !8737)
!8743 = !DILocation(line: 606, column: 4, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8736, file: !1066, line: 605, column: 53)
!8745 = !DILocation(line: 607, column: 4, scope: !8744)
!8746 = !DILocation(line: 608, column: 4, scope: !8744)
!8747 = !DILocation(line: 609, column: 3, scope: !8744)
!8748 = !DILocation(line: 600, column: 38, scope: !8720)
!8749 = !DILocation(line: 620, column: 30, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 620, column: 6)
!8751 = !DILocation(line: 620, column: 6, scope: !8750)
!8752 = !DILocation(line: 620, column: 57, scope: !8750)
!8753 = !DILocation(line: 620, column: 6, scope: !8720)
!8754 = !DILocation(line: 625, column: 29, scope: !8720)
!8755 = !DILocation(line: 625, column: 2, scope: !8720)
!8756 = !DILocation(line: 627, column: 2, scope: !8720)
!8757 = !DILocation(line: 630, column: 3, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !8720, file: !1066, line: 627, column: 16)
!8759 = !DILocation(line: 633, column: 3, scope: !8758)
!8760 = !DILocation(line: 636, column: 3, scope: !8758)
!8761 = !DILocation(line: 639, column: 2, scope: !8720)
!8762 = !DILocation(line: 641, column: 2, scope: !8720)
!8763 = !DILocation(line: 643, column: 1, scope: !8720)
!8764 = !DILocation(line: 644, column: 2, scope: !8720)
!8765 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1066, file: !1066, line: 647, type: !963, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8766)
!8766 = !{!8767, !8768, !8769, !8770}
!8767 = !DILocalVariable(name: "dev", arg: 1, scope: !8765, file: !1066, line: 647, type: !923)
!8768 = !DILocalVariable(name: "callback", arg: 2, scope: !8765, file: !1066, line: 648, type: !965)
!8769 = !DILocalVariable(name: "set", arg: 3, scope: !8765, file: !1066, line: 649, type: !211)
!8770 = !DILocalVariable(name: "data", scope: !8765, file: !1066, line: 651, type: !8728)
!8771 = !DILocation(line: 0, scope: !8765)
!8772 = !DILocation(line: 651, column: 38, scope: !8765)
!8773 = !DILocation(line: 653, column: 37, scope: !8765)
!8774 = !DILocation(line: 653, column: 9, scope: !8765)
!8775 = !DILocation(line: 653, column: 2, scope: !8765)
!8776 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8777, file: !8777, line: 38, type: !8778, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8781)
!8777 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!103, !8780, !965, !211}
!8780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!8781 = !{!8782, !8783, !8784}
!8782 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8776, file: !8777, line: 38, type: !8780)
!8783 = !DILocalVariable(name: "callback", arg: 2, scope: !8776, file: !8777, line: 39, type: !965)
!8784 = !DILocalVariable(name: "set", arg: 3, scope: !8776, file: !8777, line: 40, type: !211)
!8785 = !DILocation(line: 0, scope: !8776)
!8786 = !DILocation(line: 45, column: 7, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8776, file: !8777, line: 45, column: 6)
!8788 = !DILocation(line: 45, column: 6, scope: !8776)
!8789 = !DILocation(line: 46, column: 56, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !8777, line: 46, column: 7)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !8777, line: 45, column: 38)
!8792 = !DILocation(line: 46, column: 8, scope: !8790)
!8793 = !DILocation(line: 46, column: 7, scope: !8791)
!8794 = !DILocation(line: 51, column: 13, scope: !8787)
!8795 = !DILocation(line: 56, column: 43, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !8777, line: 55, column: 11)
!8797 = distinct !DILexicalBlock(scope: !8776, file: !8777, line: 55, column: 6)
!8798 = !DILocation(line: 56, column: 3, scope: !8796)
!8799 = !DILocation(line: 57, column: 2, scope: !8796)
!8800 = !DILocation(line: 60, column: 1, scope: !8776)
!8801 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !970, file: !970, line: 261, type: !8802, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8804)
!8802 = !DISubroutineType(types: !8803)
!8803 = !{!211, !8780}
!8804 = !{!8805}
!8805 = !DILocalVariable(name: "list", arg: 1, scope: !8801, file: !970, line: 261, type: !8780)
!8806 = !DILocation(line: 0, scope: !8801)
!8807 = !DILocation(line: 261, column: 1, scope: !8801)
!8808 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !970, file: !970, line: 417, type: !8809, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!211, !8780, !1142}
!8811 = !{!8812, !8813, !8814, !8815}
!8812 = !DILocalVariable(name: "list", arg: 1, scope: !8808, file: !970, line: 417, type: !8780)
!8813 = !DILocalVariable(name: "node", arg: 2, scope: !8808, file: !970, line: 417, type: !1142)
!8814 = !DILocalVariable(name: "prev", scope: !8808, file: !970, line: 417, type: !1142)
!8815 = !DILocalVariable(name: "test", scope: !8808, file: !970, line: 417, type: !1142)
!8816 = !DILocation(line: 0, scope: !8808)
!8817 = !DILocation(line: 417, column: 1, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8808, file: !970, line: 417, column: 1)
!8819 = !DILocation(line: 417, column: 1, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8818, file: !970, line: 417, column: 1)
!8821 = !DILocation(line: 417, column: 1, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8823, file: !970, line: 417, column: 1)
!8823 = distinct !DILexicalBlock(scope: !8820, file: !970, line: 417, column: 1)
!8824 = !DILocation(line: 417, column: 1, scope: !8823)
!8825 = distinct !{!8825, !8817, !8817}
!8826 = !DILocation(line: 417, column: 1, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8822, file: !970, line: 417, column: 1)
!8828 = !DILocation(line: 417, column: 1, scope: !8808)
!8829 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !970, file: !970, line: 298, type: !8830, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8832)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{null, !8780, !1142}
!8832 = !{!8833, !8834}
!8833 = !DILocalVariable(name: "list", arg: 1, scope: !8829, file: !970, line: 298, type: !8780)
!8834 = !DILocalVariable(name: "node", arg: 2, scope: !8829, file: !970, line: 298, type: !1142)
!8835 = !DILocation(line: 0, scope: !8829)
!8836 = !DILocation(line: 298, column: 1, scope: !8829)
!8837 = !DILocation(line: 298, column: 1, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8829, file: !970, line: 298, column: 1)
!8839 = !DILocation(line: 298, column: 1, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8838, file: !970, line: 298, column: 1)
!8841 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !970, file: !970, line: 231, type: !8842, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8844)
!8842 = !DISubroutineType(types: !8843)
!8843 = !{!1142, !8780}
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "list", arg: 1, scope: !8841, file: !970, line: 231, type: !8780)
!8846 = !DILocation(line: 0, scope: !8841)
!8847 = !DILocation(line: 233, column: 15, scope: !8841)
!8848 = !DILocation(line: 233, column: 2, scope: !8841)
!8849 = distinct !DISubprogram(name: "z_snode_next_set", scope: !970, file: !970, line: 209, type: !8850, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{null, !1142, !1142}
!8852 = !{!8853, !8854}
!8853 = !DILocalVariable(name: "parent", arg: 1, scope: !8849, file: !970, line: 209, type: !1142)
!8854 = !DILocalVariable(name: "child", arg: 2, scope: !8849, file: !970, line: 209, type: !1142)
!8855 = !DILocation(line: 0, scope: !8849)
!8856 = !DILocation(line: 211, column: 10, scope: !8849)
!8857 = !DILocation(line: 211, column: 15, scope: !8849)
!8858 = !DILocation(line: 212, column: 1, scope: !8849)
!8859 = distinct !DISubprogram(name: "z_slist_head_set", scope: !970, file: !970, line: 214, type: !8830, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8860)
!8860 = !{!8861, !8862}
!8861 = !DILocalVariable(name: "list", arg: 1, scope: !8859, file: !970, line: 214, type: !8780)
!8862 = !DILocalVariable(name: "node", arg: 2, scope: !8859, file: !970, line: 214, type: !1142)
!8863 = !DILocation(line: 0, scope: !8859)
!8864 = !DILocation(line: 216, column: 8, scope: !8859)
!8865 = !DILocation(line: 216, column: 13, scope: !8859)
!8866 = !DILocation(line: 217, column: 1, scope: !8859)
!8867 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !970, file: !970, line: 243, type: !8842, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8868)
!8868 = !{!8869}
!8869 = !DILocalVariable(name: "list", arg: 1, scope: !8867, file: !970, line: 243, type: !8780)
!8870 = !DILocation(line: 0, scope: !8867)
!8871 = !DILocation(line: 245, column: 15, scope: !8867)
!8872 = !DILocation(line: 245, column: 2, scope: !8867)
!8873 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !970, file: !970, line: 219, type: !8830, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8874)
!8874 = !{!8875, !8876}
!8875 = !DILocalVariable(name: "list", arg: 1, scope: !8873, file: !970, line: 219, type: !8780)
!8876 = !DILocalVariable(name: "node", arg: 2, scope: !8873, file: !970, line: 219, type: !1142)
!8877 = !DILocation(line: 0, scope: !8873)
!8878 = !DILocation(line: 221, column: 8, scope: !8873)
!8879 = !DILocation(line: 221, column: 13, scope: !8873)
!8880 = !DILocation(line: 222, column: 1, scope: !8873)
!8881 = distinct !DISubprogram(name: "sys_slist_remove", scope: !970, file: !970, line: 401, type: !8882, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8884)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !8780, !1142, !1142}
!8884 = !{!8885, !8886, !8887}
!8885 = !DILocalVariable(name: "list", arg: 1, scope: !8881, file: !970, line: 401, type: !8780)
!8886 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8881, file: !970, line: 401, type: !1142)
!8887 = !DILocalVariable(name: "node", arg: 3, scope: !8881, file: !970, line: 401, type: !1142)
!8888 = !DILocation(line: 0, scope: !8881)
!8889 = !DILocation(line: 401, column: 1, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8881, file: !970, line: 401, column: 1)
!8891 = !DILocation(line: 0, scope: !8890)
!8892 = !DILocation(line: 401, column: 1, scope: !8881)
!8893 = !DILocation(line: 401, column: 1, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8890, file: !970, line: 401, column: 1)
!8895 = !DILocation(line: 401, column: 1, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8894, file: !970, line: 401, column: 1)
!8897 = !DILocation(line: 401, column: 1, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8896, file: !970, line: 401, column: 1)
!8899 = !DILocation(line: 401, column: 1, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8890, file: !970, line: 401, column: 1)
!8901 = !DILocation(line: 401, column: 1, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8900, file: !970, line: 401, column: 1)
!8903 = !DILocation(line: 401, column: 1, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8902, file: !970, line: 401, column: 1)
!8905 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !970, file: !970, line: 285, type: !8906, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!1142, !1142}
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "node", arg: 1, scope: !8905, file: !970, line: 285, type: !1142)
!8910 = !DILocation(line: 0, scope: !8905)
!8911 = !DILocation(line: 285, column: 1, scope: !8905)
!8912 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !970, file: !970, line: 274, type: !8906, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8913)
!8913 = !{!8914}
!8914 = !DILocalVariable(name: "node", arg: 1, scope: !8912, file: !970, line: 274, type: !1142)
!8915 = !DILocation(line: 0, scope: !8912)
!8916 = !DILocation(line: 274, column: 1, scope: !8912)
!8917 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !970, file: !970, line: 204, type: !8906, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8918)
!8918 = !{!8919}
!8919 = !DILocalVariable(name: "node", arg: 1, scope: !8917, file: !970, line: 204, type: !1142)
!8920 = !DILocation(line: 0, scope: !8917)
!8921 = !DILocation(line: 206, column: 15, scope: !8917)
!8922 = !DILocation(line: 206, column: 2, scope: !8917)
!8923 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1066, file: !1066, line: 342, type: !129, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8924)
!8924 = !{!8925, !8926, !8927}
!8925 = !DILocalVariable(name: "pin", arg: 1, scope: !8923, file: !1066, line: 342, type: !103)
!8926 = !DILocalVariable(name: "line", scope: !8923, file: !1066, line: 344, type: !137)
!8927 = !DILocalVariable(name: "port", scope: !8923, file: !1066, line: 345, type: !103)
!8928 = !DILocation(line: 0, scope: !8923)
!8929 = !DILocation(line: 344, column: 18, scope: !8923)
!8930 = !{i32 983040, i32 0}
!8931 = !DILocation(line: 356, column: 9, scope: !8923)
!8932 = !DILocation(line: 370, column: 2, scope: !8923)
!8933 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1066, file: !1066, line: 37, type: !615, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8934)
!8934 = !{!8935, !8936, !8937}
!8935 = !DILocalVariable(name: "line", arg: 1, scope: !8933, file: !1066, line: 37, type: !103)
!8936 = !DILocalVariable(name: "arg", arg: 2, scope: !8933, file: !1066, line: 37, type: !102)
!8937 = !DILocalVariable(name: "data", scope: !8933, file: !1066, line: 39, type: !8728)
!8938 = !DILocation(line: 0, scope: !8933)
!8939 = !DILocation(line: 41, column: 29, scope: !8933)
!8940 = !DILocation(line: 41, column: 39, scope: !8933)
!8941 = !DILocation(line: 41, column: 44, scope: !8933)
!8942 = !DILocation(line: 41, column: 2, scope: !8933)
!8943 = !DILocation(line: 42, column: 1, scope: !8933)
!8944 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1066, file: !1066, line: 376, type: !8945, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8947)
!8945 = !DISubroutineType(types: !8946)
!8946 = !{!103, !103, !103}
!8947 = !{!8948, !8949, !8950, !8952, !8953}
!8948 = !DILocalVariable(name: "port", arg: 1, scope: !8944, file: !1066, line: 376, type: !103)
!8949 = !DILocalVariable(name: "pin", arg: 2, scope: !8944, file: !1066, line: 376, type: !103)
!8950 = !DILocalVariable(name: "clk", scope: !8944, file: !1066, line: 386, type: !8951)
!8951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!8952 = !DILocalVariable(name: "pclken", scope: !8944, file: !1066, line: 387, type: !1185)
!8953 = !DILocalVariable(name: "ret", scope: !8944, file: !1066, line: 396, type: !103)
!8954 = !DILocation(line: 0, scope: !8944)
!8955 = !DILocation(line: 387, column: 2, scope: !8944)
!8956 = !DILocation(line: 387, column: 22, scope: !8944)
!8957 = !DILocation(line: 399, column: 8, scope: !8944)
!8958 = !DILocation(line: 400, column: 10, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8944, file: !1066, line: 400, column: 6)
!8960 = !DILocation(line: 400, column: 6, scope: !8944)
!8961 = !DILocation(line: 405, column: 2, scope: !8944)
!8962 = !DILocation(line: 407, column: 2, scope: !8944)
!8963 = !DILocation(line: 408, column: 1, scope: !8944)
!8964 = distinct !DISubprogram(name: "clock_control_on", scope: !702, file: !702, line: 123, type: !1031, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8965)
!8965 = !{!8966, !8967, !8968}
!8966 = !DILocalVariable(name: "dev", arg: 1, scope: !8964, file: !702, line: 123, type: !923)
!8967 = !DILocalVariable(name: "sys", arg: 2, scope: !8964, file: !702, line: 124, type: !794)
!8968 = !DILocalVariable(name: "api", scope: !8964, file: !702, line: 126, type: !1024)
!8969 = !DILocation(line: 0, scope: !8964)
!8970 = !DILocation(line: 127, column: 49, scope: !8964)
!8971 = !DILocation(line: 129, column: 14, scope: !8964)
!8972 = !DILocation(line: 129, column: 9, scope: !8964)
!8973 = !DILocation(line: 129, column: 2, scope: !8964)
!8974 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1066, file: !1066, line: 311, type: !8094, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8975)
!8975 = !{!8976, !8977, !8978}
!8976 = !DILocalVariable(name: "port", arg: 1, scope: !8974, file: !1066, line: 311, type: !103)
!8977 = !DILocalVariable(name: "pin", arg: 2, scope: !8974, file: !1066, line: 311, type: !103)
!8978 = !DILocalVariable(name: "line", scope: !8974, file: !1066, line: 313, type: !137)
!8979 = !DILocation(line: 0, scope: !8974)
!8980 = !DILocation(line: 313, column: 18, scope: !8974)
!8981 = !DILocation(line: 337, column: 2, scope: !8974)
!8982 = !DILocation(line: 340, column: 1, scope: !8974)
!8983 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1066, file: !1066, line: 295, type: !8984, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8986)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{!137, !103}
!8986 = !{!8987}
!8987 = !DILocalVariable(name: "pin", arg: 1, scope: !8983, file: !1066, line: 295, type: !103)
!8988 = !DILocation(line: 0, scope: !8983)
!8989 = !DILocation(line: 307, column: 46, scope: !8983)
!8990 = !DILocation(line: 307, column: 27, scope: !8983)
!8991 = !DILocation(line: 307, column: 32, scope: !8983)
!8992 = !DILocation(line: 307, column: 14, scope: !8983)
!8993 = !DILocation(line: 307, column: 39, scope: !8983)
!8994 = !DILocation(line: 307, column: 2, scope: !8983)
!8995 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6150, file: !6150, line: 671, type: !8996, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !8998)
!8996 = !DISubroutineType(types: !8997)
!8997 = !{null, !137, !137}
!8998 = !{!8999, !9000}
!8999 = !DILocalVariable(name: "Port", arg: 1, scope: !8995, file: !6150, line: 671, type: !137)
!9000 = !DILocalVariable(name: "Line", arg: 2, scope: !8995, file: !6150, line: 671, type: !137)
!9001 = !DILocation(line: 0, scope: !8995)
!9002 = !DILocation(line: 673, column: 3, scope: !8995)
!9003 = !DILocalVariable(name: "value", arg: 1, scope: !9004, file: !6303, line: 373, type: !137)
!9004 = distinct !DISubprogram(name: "__RBIT", scope: !6303, file: !6303, line: 373, type: !7308, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9005)
!9005 = !{!9003, !9006}
!9006 = !DILocalVariable(name: "result", scope: !9004, file: !6303, line: 375, type: !137)
!9007 = !DILocation(line: 0, scope: !9004, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 673, column: 3, scope: !8995)
!9009 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9008)
!9010 = !{i64 3499838}
!9011 = !DILocalVariable(name: "value", arg: 1, scope: !9012, file: !6303, line: 403, type: !137)
!9012 = distinct !DISubprogram(name: "__CLZ", scope: !6303, file: !6303, line: 403, type: !9013, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9015)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{!208, !137}
!9015 = !{!9011}
!9016 = !DILocation(line: 0, scope: !9012, inlinedAt: !9017)
!9017 = distinct !DILocation(line: 673, column: 3, scope: !8995)
!9018 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9017)
!9019 = !DILocation(line: 674, column: 1, scope: !8995)
!9020 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8777, file: !8777, line: 69, type: !9021, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{null, !8780, !923, !137}
!9023 = !{!9024, !9025, !9026, !9027, !9028}
!9024 = !DILocalVariable(name: "list", arg: 1, scope: !9020, file: !8777, line: 69, type: !8780)
!9025 = !DILocalVariable(name: "port", arg: 2, scope: !9020, file: !8777, line: 70, type: !923)
!9026 = !DILocalVariable(name: "pins", arg: 3, scope: !9020, file: !8777, line: 71, type: !137)
!9027 = !DILocalVariable(name: "cb", scope: !9020, file: !8777, line: 73, type: !965)
!9028 = !DILocalVariable(name: "tmp", scope: !9020, file: !8777, line: 73, type: !965)
!9029 = !DILocation(line: 0, scope: !9020)
!9030 = !DILocation(line: 75, column: 2, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9020, file: !8777, line: 75, column: 2)
!9032 = !DILocation(line: 0, scope: !9031)
!9033 = !DILocation(line: 76, column: 11, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !8777, line: 76, column: 7)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !8777, line: 75, column: 57)
!9036 = distinct !DILexicalBlock(scope: !9031, file: !8777, line: 75, column: 2)
!9037 = !DILocation(line: 76, column: 20, scope: !9034)
!9038 = !DILocation(line: 76, column: 7, scope: !9035)
!9039 = !DILocation(line: 78, column: 8, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !8777, line: 76, column: 28)
!9041 = !DILocation(line: 78, column: 4, scope: !9040)
!9042 = !DILocation(line: 79, column: 3, scope: !9040)
!9043 = !DILocation(line: 75, column: 2, scope: !9036)
!9044 = !DILocation(line: 81, column: 1, scope: !9020)
!9045 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6150, file: !6150, line: 710, type: !7308, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9046)
!9046 = !{!9047}
!9047 = !DILocalVariable(name: "Line", arg: 1, scope: !9045, file: !6150, line: 710, type: !137)
!9048 = !DILocation(line: 0, scope: !9045)
!9049 = !DILocation(line: 712, column: 21, scope: !9045)
!9050 = !DILocation(line: 0, scope: !9004, inlinedAt: !9051)
!9051 = distinct !DILocation(line: 712, column: 76, scope: !9045)
!9052 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9051)
!9053 = !DILocation(line: 0, scope: !9012, inlinedAt: !9054)
!9054 = distinct !DILocation(line: 712, column: 76, scope: !9045)
!9055 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9054)
!9056 = !DILocation(line: 712, column: 73, scope: !9045)
!9057 = !DILocation(line: 712, column: 3, scope: !9045)
!9058 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9059, file: !9059, line: 910, type: !9060, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9062)
!9059 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !996, !137}
!9062 = !{!9063, !9064}
!9063 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9058, file: !9059, line: 910, type: !996)
!9064 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9058, file: !9059, line: 910, type: !137)
!9065 = !DILocation(line: 0, scope: !9058)
!9066 = !DILocation(line: 912, column: 3, scope: !9058)
!9067 = !DILocation(line: 913, column: 1, scope: !9058)
!9068 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9059, file: !9059, line: 823, type: !9069, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!137, !996}
!9071 = !{!9072}
!9072 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9068, file: !9059, line: 823, type: !996)
!9073 = !DILocation(line: 0, scope: !9068)
!9074 = !DILocation(line: 825, column: 21, scope: !9068)
!9075 = !DILocation(line: 825, column: 3, scope: !9068)
!9076 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9059, file: !9059, line: 812, type: !9060, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9077)
!9077 = !{!9078, !9079}
!9078 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9076, file: !9059, line: 812, type: !996)
!9079 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9076, file: !9059, line: 812, type: !137)
!9080 = !DILocation(line: 0, scope: !9076)
!9081 = !DILocation(line: 814, column: 3, scope: !9076)
!9082 = !DILocation(line: 815, column: 1, scope: !9076)
!9083 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9059, file: !9059, line: 771, type: !9069, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9084)
!9084 = !{!9085}
!9085 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9083, file: !9059, line: 771, type: !996)
!9086 = !DILocation(line: 0, scope: !9083)
!9087 = !DILocation(line: 773, column: 21, scope: !9083)
!9088 = !DILocation(line: 773, column: 3, scope: !9083)
!9089 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1066, file: !1066, line: 47, type: !9090, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9092)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{!103, !939, !2271}
!9092 = !{!9093, !9094}
!9093 = !DILocalVariable(name: "flags", arg: 1, scope: !9089, file: !1066, line: 47, type: !939)
!9094 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9089, file: !1066, line: 47, type: !2271)
!9095 = !DILocation(line: 0, scope: !9089)
!9096 = !DILocation(line: 50, column: 13, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9089, file: !1066, line: 50, column: 6)
!9098 = !DILocation(line: 50, column: 28, scope: !9097)
!9099 = !DILocation(line: 50, column: 6, scope: !9089)
!9100 = !DILocation(line: 53, column: 11, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9097, file: !1066, line: 50, column: 34)
!9102 = !DILocation(line: 55, column: 14, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9101, file: !1066, line: 55, column: 7)
!9104 = !DILocation(line: 55, column: 35, scope: !9103)
!9105 = !DILocation(line: 55, column: 7, scope: !9101)
!9106 = !DILocation(line: 56, column: 14, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1066, line: 56, column: 8)
!9108 = distinct !DILexicalBlock(scope: !9103, file: !1066, line: 55, column: 41)
!9109 = !DILocation(line: 56, column: 8, scope: !9108)
!9110 = !DILocation(line: 0, scope: !9103)
!9111 = !DILocation(line: 66, column: 14, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9101, file: !1066, line: 66, column: 7)
!9113 = !DILocation(line: 66, column: 30, scope: !9112)
!9114 = !DILocation(line: 66, column: 7, scope: !9101)
!9115 = !DILocation(line: 67, column: 12, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9112, file: !1066, line: 66, column: 36)
!9117 = !DILocation(line: 68, column: 3, scope: !9116)
!9118 = !DILocation(line: 68, column: 21, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9112, file: !1066, line: 68, column: 14)
!9120 = !DILocation(line: 68, column: 39, scope: !9119)
!9121 = !DILocation(line: 68, column: 14, scope: !9112)
!9122 = !DILocation(line: 69, column: 12, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !1066, line: 68, column: 45)
!9124 = !DILocation(line: 70, column: 3, scope: !9123)
!9125 = !DILocation(line: 72, column: 21, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9097, file: !1066, line: 72, column: 14)
!9127 = !DILocation(line: 72, column: 35, scope: !9126)
!9128 = !DILocation(line: 72, column: 14, scope: !9097)
!9129 = !DILocation(line: 77, column: 14, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !1066, line: 77, column: 7)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !1066, line: 72, column: 41)
!9132 = !DILocation(line: 77, column: 30, scope: !9130)
!9133 = !DILocation(line: 77, column: 7, scope: !9131)
!9134 = !DILocation(line: 0, scope: !9097)
!9135 = !DILocation(line: 90, column: 1, scope: !9089)
!9136 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1066, file: !1066, line: 157, type: !9137, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !923, !103, !103, !103}
!9139 = !{!9140, !9141, !9142, !9143, !9144, !9145, !9146, !9147, !9148, !9149, !9150}
!9140 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !1066, line: 157, type: !923)
!9141 = !DILocalVariable(name: "pin", arg: 2, scope: !9136, file: !1066, line: 157, type: !103)
!9142 = !DILocalVariable(name: "conf", arg: 3, scope: !9136, file: !1066, line: 158, type: !103)
!9143 = !DILocalVariable(name: "func", arg: 4, scope: !9136, file: !1066, line: 158, type: !103)
!9144 = !DILocalVariable(name: "cfg", scope: !9136, file: !1066, line: 160, type: !8661)
!9145 = !DILocalVariable(name: "gpio", scope: !9136, file: !1066, line: 161, type: !996)
!9146 = !DILocalVariable(name: "pin_ll", scope: !9136, file: !1066, line: 163, type: !103)
!9147 = !DILocalVariable(name: "mode", scope: !9136, file: !1066, line: 227, type: !32)
!9148 = !DILocalVariable(name: "otype", scope: !9136, file: !1066, line: 227, type: !32)
!9149 = !DILocalVariable(name: "ospeed", scope: !9136, file: !1066, line: 227, type: !32)
!9150 = !DILocalVariable(name: "pupd", scope: !9136, file: !1066, line: 227, type: !32)
!9151 = !DILocation(line: 0, scope: !9136)
!9152 = !DILocation(line: 160, column: 45, scope: !9136)
!9153 = !DILocation(line: 161, column: 44, scope: !9136)
!9154 = !DILocation(line: 163, column: 15, scope: !9136)
!9155 = !DILocation(line: 229, column: 14, scope: !9136)
!9156 = !DILocation(line: 246, column: 47, scope: !9136)
!9157 = !DILocation(line: 246, column: 2, scope: !9136)
!9158 = !DILocation(line: 248, column: 43, scope: !9136)
!9159 = !DILocation(line: 248, column: 2, scope: !9136)
!9160 = !DILocation(line: 250, column: 40, scope: !9136)
!9161 = !DILocation(line: 250, column: 2, scope: !9136)
!9162 = !DILocation(line: 252, column: 11, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9136, file: !1066, line: 252, column: 6)
!9164 = !DILocation(line: 252, column: 6, scope: !9136)
!9165 = !DILocation(line: 253, column: 11, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !1066, line: 253, column: 7)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !1066, line: 252, column: 36)
!9168 = !DILocation(line: 253, column: 7, scope: !9167)
!9169 = !DILocation(line: 254, column: 4, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9166, file: !1066, line: 253, column: 16)
!9171 = !DILocation(line: 255, column: 3, scope: !9170)
!9172 = !DILocation(line: 256, column: 4, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9166, file: !1066, line: 255, column: 10)
!9174 = !DILocation(line: 260, column: 40, scope: !9136)
!9175 = !DILocation(line: 260, column: 2, scope: !9136)
!9176 = !DILocation(line: 265, column: 1, scope: !9136)
!9177 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1066, file: !1066, line: 137, type: !8984, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9178)
!9178 = !{!9179, !9180}
!9179 = !DILocalVariable(name: "pin", arg: 1, scope: !9177, file: !1066, line: 137, type: !103)
!9180 = !DILocalVariable(name: "pinval", scope: !9177, file: !1066, line: 139, type: !137)
!9181 = !DILocation(line: 0, scope: !9177)
!9182 = !DILocation(line: 149, column: 13, scope: !9177)
!9183 = !DILocation(line: 151, column: 2, scope: !9177)
!9184 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9059, file: !9059, line: 342, type: !9185, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9187)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{null, !996, !137, !137}
!9187 = !{!9188, !9189, !9190}
!9188 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9184, file: !9059, line: 342, type: !996)
!9189 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9184, file: !9059, line: 342, type: !137)
!9190 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9184, file: !9059, line: 342, type: !137)
!9191 = !DILocation(line: 0, scope: !9184)
!9192 = !DILocation(line: 344, column: 3, scope: !9184)
!9193 = !DILocation(line: 345, column: 1, scope: !9184)
!9194 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9059, file: !9059, line: 413, type: !9185, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9195)
!9195 = !{!9196, !9197, !9198}
!9196 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9194, file: !9059, line: 413, type: !996)
!9197 = !DILocalVariable(name: "Pin", arg: 2, scope: !9194, file: !9059, line: 413, type: !137)
!9198 = !DILocalVariable(name: "Speed", arg: 3, scope: !9194, file: !9059, line: 413, type: !137)
!9199 = !DILocation(line: 0, scope: !9194)
!9200 = !DILocation(line: 415, column: 3, scope: !9194)
!9201 = !DILocation(line: 0, scope: !9004, inlinedAt: !9202)
!9202 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9203 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9202)
!9204 = !DILocation(line: 0, scope: !9012, inlinedAt: !9205)
!9205 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9206 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9205)
!9207 = !DILocation(line: 0, scope: !9004, inlinedAt: !9208)
!9208 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9209 = !DILocation(line: 0, scope: !9012, inlinedAt: !9210)
!9210 = distinct !DILocation(line: 415, column: 3, scope: !9194)
!9211 = !DILocation(line: 417, column: 1, scope: !9194)
!9212 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9059, file: !9059, line: 484, type: !9185, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9213)
!9213 = !{!9214, !9215, !9216}
!9214 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9212, file: !9059, line: 484, type: !996)
!9215 = !DILocalVariable(name: "Pin", arg: 2, scope: !9212, file: !9059, line: 484, type: !137)
!9216 = !DILocalVariable(name: "Pull", arg: 3, scope: !9212, file: !9059, line: 484, type: !137)
!9217 = !DILocation(line: 0, scope: !9212)
!9218 = !DILocation(line: 486, column: 3, scope: !9212)
!9219 = !DILocation(line: 0, scope: !9004, inlinedAt: !9220)
!9220 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9221 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9220)
!9222 = !DILocation(line: 0, scope: !9012, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9224 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9223)
!9225 = !DILocation(line: 0, scope: !9004, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9227 = !DILocation(line: 0, scope: !9012, inlinedAt: !9228)
!9228 = distinct !DILocation(line: 486, column: 3, scope: !9212)
!9229 = !DILocation(line: 487, column: 1, scope: !9212)
!9230 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9059, file: !9059, line: 556, type: !9185, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9231)
!9231 = !{!9232, !9233, !9234}
!9232 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9230, file: !9059, line: 556, type: !996)
!9233 = !DILocalVariable(name: "Pin", arg: 2, scope: !9230, file: !9059, line: 556, type: !137)
!9234 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9230, file: !9059, line: 556, type: !137)
!9235 = !DILocation(line: 0, scope: !9230)
!9236 = !DILocation(line: 558, column: 3, scope: !9230)
!9237 = !DILocation(line: 0, scope: !9004, inlinedAt: !9238)
!9238 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9239 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9238)
!9240 = !DILocation(line: 0, scope: !9012, inlinedAt: !9241)
!9241 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9242 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9241)
!9243 = !DILocation(line: 0, scope: !9004, inlinedAt: !9244)
!9244 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9245 = !DILocation(line: 0, scope: !9012, inlinedAt: !9246)
!9246 = distinct !DILocation(line: 558, column: 3, scope: !9230)
!9247 = !DILocation(line: 560, column: 1, scope: !9230)
!9248 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9059, file: !9059, line: 633, type: !9185, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9249)
!9249 = !{!9250, !9251, !9252}
!9250 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9248, file: !9059, line: 633, type: !996)
!9251 = !DILocalVariable(name: "Pin", arg: 2, scope: !9248, file: !9059, line: 633, type: !137)
!9252 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9248, file: !9059, line: 633, type: !137)
!9253 = !DILocation(line: 0, scope: !9248)
!9254 = !DILocation(line: 635, column: 3, scope: !9248)
!9255 = !DILocation(line: 0, scope: !9004, inlinedAt: !9256)
!9256 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9257 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9256)
!9258 = !DILocation(line: 0, scope: !9012, inlinedAt: !9259)
!9259 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9260 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9259)
!9261 = !DILocation(line: 0, scope: !9004, inlinedAt: !9262)
!9262 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9263 = !DILocation(line: 0, scope: !9012, inlinedAt: !9264)
!9264 = distinct !DILocation(line: 635, column: 3, scope: !9248)
!9265 = !DILocation(line: 637, column: 1, scope: !9248)
!9266 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9059, file: !9059, line: 273, type: !9185, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9267)
!9267 = !{!9268, !9269, !9270}
!9268 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9266, file: !9059, line: 273, type: !996)
!9269 = !DILocalVariable(name: "Pin", arg: 2, scope: !9266, file: !9059, line: 273, type: !137)
!9270 = !DILocalVariable(name: "Mode", arg: 3, scope: !9266, file: !9059, line: 273, type: !137)
!9271 = !DILocation(line: 0, scope: !9266)
!9272 = !DILocation(line: 275, column: 3, scope: !9266)
!9273 = !DILocation(line: 0, scope: !9004, inlinedAt: !9274)
!9274 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9275 = !DILocation(line: 380, column: 4, scope: !9004, inlinedAt: !9274)
!9276 = !DILocation(line: 0, scope: !9012, inlinedAt: !9277)
!9277 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9278 = !DILocation(line: 414, column: 7, scope: !9012, inlinedAt: !9277)
!9279 = !DILocation(line: 0, scope: !9004, inlinedAt: !9280)
!9280 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9281 = !DILocation(line: 0, scope: !9012, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 275, column: 3, scope: !9266)
!9283 = !DILocation(line: 276, column: 1, scope: !9266)
!9284 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1066, file: !1066, line: 698, type: !1079, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9285)
!9285 = !{!9286, !9287, !9288}
!9286 = !DILocalVariable(name: "dev", arg: 1, scope: !9284, file: !1066, line: 698, type: !923)
!9287 = !DILocalVariable(name: "data", scope: !9284, file: !1066, line: 700, type: !8728)
!9288 = !DILocalVariable(name: "ret", scope: !9284, file: !1066, line: 701, type: !103)
!9289 = !DILocation(line: 0, scope: !9284)
!9290 = !DILocation(line: 700, column: 38, scope: !9284)
!9291 = !DILocation(line: 703, column: 8, scope: !9284)
!9292 = !DILocation(line: 703, column: 12, scope: !9284)
!9293 = !DILocation(line: 705, column: 7, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9284, file: !1066, line: 705, column: 6)
!9295 = !DILocation(line: 705, column: 6, scope: !9284)
!9296 = !DILocation(line: 722, column: 8, scope: !9284)
!9297 = !DILocation(line: 723, column: 10, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9284, file: !1066, line: 723, column: 6)
!9299 = !DILocation(line: 723, column: 6, scope: !9284)
!9300 = !DILocation(line: 731, column: 1, scope: !9284)
!9301 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !9302, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9304)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!211, !923}
!9304 = !{!9305}
!9305 = !DILocalVariable(name: "dev", arg: 1, scope: !9301, file: !8508, line: 47, type: !923)
!9306 = !DILocation(line: 0, scope: !9301)
!9307 = !DILocation(line: 55, column: 2, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9301, file: !8508, line: 55, column: 2)
!9309 = !{i64 2154942721}
!9310 = !DILocation(line: 56, column: 9, scope: !9301)
!9311 = !DILocation(line: 56, column: 2, scope: !9301)
!9312 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1066, file: !1066, line: 270, type: !9313, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9315)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{!103, !923, !211}
!9315 = !{!9316, !9317, !9318, !9319, !9320}
!9316 = !DILocalVariable(name: "dev", arg: 1, scope: !9312, file: !1066, line: 270, type: !923)
!9317 = !DILocalVariable(name: "on", arg: 2, scope: !9312, file: !1066, line: 270, type: !211)
!9318 = !DILocalVariable(name: "cfg", scope: !9312, file: !1066, line: 272, type: !8661)
!9319 = !DILocalVariable(name: "ret", scope: !9312, file: !1066, line: 273, type: !103)
!9320 = !DILocalVariable(name: "clk", scope: !9312, file: !1066, line: 278, type: !8951)
!9321 = !DILocation(line: 0, scope: !9312)
!9322 = !DILocation(line: 272, column: 45, scope: !9312)
!9323 = !DILocation(line: 282, column: 38, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !1066, line: 280, column: 10)
!9325 = distinct !DILexicalBlock(scope: !9312, file: !1066, line: 280, column: 6)
!9326 = !DILocation(line: 282, column: 6, scope: !9324)
!9327 = !DILocation(line: 281, column: 9, scope: !9324)
!9328 = !DILocation(line: 293, column: 1, scope: !9312)
!9329 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !9302, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9330)
!9330 = !{!9331}
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9329, file: !196, line: 730, type: !923)
!9332 = !DILocation(line: 0, scope: !9329)
!9333 = !DILocation(line: 732, column: 9, scope: !9329)
!9334 = !DILocation(line: 732, column: 2, scope: !9329)
!9335 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1066, file: !1066, line: 496, type: !9336, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !9338)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!103, !923, !103, !103, !103}
!9338 = !{!9339, !9340, !9341, !9342, !9343, !9344}
!9339 = !DILocalVariable(name: "dev", arg: 1, scope: !9335, file: !1066, line: 496, type: !923)
!9340 = !DILocalVariable(name: "pin", arg: 2, scope: !9335, file: !1066, line: 496, type: !103)
!9341 = !DILocalVariable(name: "conf", arg: 3, scope: !9335, file: !1066, line: 496, type: !103)
!9342 = !DILocalVariable(name: "func", arg: 4, scope: !9335, file: !1066, line: 496, type: !103)
!9343 = !DILocalVariable(name: "ret", scope: !9335, file: !1066, line: 498, type: !103)
!9344 = !DILocalVariable(name: "gpio_out", scope: !9345, file: !1066, line: 508, type: !137)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !1066, line: 507, column: 27)
!9346 = distinct !DILexicalBlock(scope: !9335, file: !1066, line: 507, column: 6)
!9347 = !DILocation(line: 0, scope: !9335)
!9348 = !DILocation(line: 505, column: 2, scope: !9335)
!9349 = !DILocation(line: 507, column: 11, scope: !9346)
!9350 = !DILocation(line: 507, column: 6, scope: !9335)
!9351 = !DILocation(line: 508, column: 28, scope: !9345)
!9352 = !DILocation(line: 0, scope: !9345)
!9353 = !DILocation(line: 510, column: 16, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9345, file: !1066, line: 510, column: 7)
!9355 = !DILocation(line: 0, scope: !9354)
!9356 = !DILocation(line: 510, column: 7, scope: !9345)
!9357 = !DILocation(line: 511, column: 4, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9354, file: !1066, line: 510, column: 32)
!9359 = !DILocation(line: 512, column: 3, scope: !9358)
!9360 = !DILocation(line: 513, column: 4, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !1066, line: 512, column: 39)
!9362 = distinct !DILexicalBlock(scope: !9354, file: !1066, line: 512, column: 14)
!9363 = !DILocation(line: 514, column: 3, scope: !9361)
!9364 = !DILocation(line: 518, column: 1, scope: !9335)
!9365 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1342, file: !1342, line: 526, type: !1245, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9366)
!9366 = !{!9367, !9368, !9369}
!9367 = !DILocalVariable(name: "dev", arg: 1, scope: !9365, file: !1342, line: 526, type: !1247)
!9368 = !DILocalVariable(name: "c", arg: 2, scope: !9365, file: !1342, line: 526, type: !855)
!9369 = !DILocalVariable(name: "config", scope: !9365, file: !1342, line: 528, type: !9370)
!9370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!9371 = !DILocation(line: 0, scope: !9365)
!9372 = !DILocation(line: 528, column: 48, scope: !9365)
!9373 = !DILocation(line: 531, column: 40, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9365, file: !1342, line: 531, column: 6)
!9375 = !DILocation(line: 531, column: 6, scope: !9374)
!9376 = !DILocation(line: 531, column: 6, scope: !9365)
!9377 = !DILocation(line: 532, column: 34, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !1342, line: 531, column: 48)
!9379 = !DILocation(line: 532, column: 3, scope: !9378)
!9380 = !DILocation(line: 533, column: 2, scope: !9378)
!9381 = !DILocation(line: 539, column: 42, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9365, file: !1342, line: 539, column: 6)
!9383 = !DILocation(line: 539, column: 7, scope: !9382)
!9384 = !DILocation(line: 539, column: 6, scope: !9365)
!9385 = !DILocation(line: 543, column: 52, scope: !9365)
!9386 = !DILocation(line: 543, column: 22, scope: !9365)
!9387 = !DILocation(line: 543, column: 5, scope: !9365)
!9388 = !DILocation(line: 545, column: 2, scope: !9365)
!9389 = !DILocation(line: 546, column: 1, scope: !9365)
!9390 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1342, file: !1342, line: 548, type: !1264, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9391)
!9391 = !{!9392, !9393, !9394, !9395}
!9392 = !DILocalVariable(name: "dev", arg: 1, scope: !9390, file: !1342, line: 548, type: !1247)
!9393 = !DILocalVariable(name: "c", arg: 2, scope: !9390, file: !1342, line: 549, type: !209)
!9394 = !DILocalVariable(name: "config", scope: !9390, file: !1342, line: 551, type: !9370)
!9395 = !DILocalVariable(name: "key", scope: !9390, file: !1342, line: 555, type: !32)
!9396 = !DILocation(line: 0, scope: !9390)
!9397 = !DILocation(line: 551, column: 48, scope: !9390)
!9398 = !DILocation(line: 562, column: 2, scope: !9390)
!9399 = !DILocation(line: 563, column: 41, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !1342, line: 563, column: 7)
!9401 = distinct !DILexicalBlock(scope: !9390, file: !1342, line: 562, column: 12)
!9402 = !DILocation(line: 563, column: 7, scope: !9400)
!9403 = !DILocation(line: 563, column: 7, scope: !9401)
!9404 = !DILocation(line: 55, column: 2, scope: !9405, inlinedAt: !9409)
!9405 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9406)
!9406 = !{!9407, !9408}
!9407 = !DILocalVariable(name: "key", scope: !9405, file: !6129, line: 44, type: !32)
!9408 = !DILocalVariable(name: "tmp", scope: !9405, file: !6129, line: 53, type: !32)
!9409 = distinct !DILocation(line: 564, column: 10, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9400, file: !1342, line: 563, column: 49)
!9411 = !{i64 2288251}
!9412 = !DILocation(line: 0, scope: !9405, inlinedAt: !9409)
!9413 = !DILocation(line: 565, column: 42, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9410, file: !1342, line: 565, column: 8)
!9415 = !DILocation(line: 565, column: 8, scope: !9414)
!9416 = !DILocation(line: 565, column: 8, scope: !9410)
!9417 = !DILocalVariable(name: "key", arg: 1, scope: !9418, file: !6129, line: 84, type: !32)
!9418 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9419)
!9419 = !{!9417}
!9420 = !DILocation(line: 0, scope: !9418, inlinedAt: !9421)
!9421 = distinct !DILocation(line: 568, column: 4, scope: !9410)
!9422 = !DILocation(line: 95, column: 2, scope: !9418, inlinedAt: !9421)
!9423 = !{i64 2289068}
!9424 = !DILocation(line: 569, column: 3, scope: !9410)
!9425 = distinct !{!9425, !9398, !9426}
!9426 = !DILocation(line: 570, column: 2, scope: !9390)
!9427 = !DILocation(line: 592, column: 33, scope: !9390)
!9428 = !DILocation(line: 592, column: 2, scope: !9390)
!9429 = !DILocation(line: 0, scope: !9418, inlinedAt: !9430)
!9430 = distinct !DILocation(line: 593, column: 2, scope: !9390)
!9431 = !DILocation(line: 95, column: 2, scope: !9418, inlinedAt: !9430)
!9432 = !DILocation(line: 594, column: 1, scope: !9390)
!9433 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1342, file: !1342, line: 596, type: !1268, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9434)
!9434 = !{!9435, !9436, !9437}
!9435 = !DILocalVariable(name: "dev", arg: 1, scope: !9433, file: !1342, line: 596, type: !1247)
!9436 = !DILocalVariable(name: "config", scope: !9433, file: !1342, line: 598, type: !9370)
!9437 = !DILocalVariable(name: "err", scope: !9433, file: !1342, line: 599, type: !137)
!9438 = !DILocation(line: 0, scope: !9433)
!9439 = !DILocation(line: 598, column: 48, scope: !9433)
!9440 = !DILocation(line: 606, column: 40, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 606, column: 6)
!9442 = !DILocation(line: 606, column: 6, scope: !9441)
!9443 = !DILocation(line: 606, column: 6, scope: !9433)
!9444 = !DILocation(line: 610, column: 39, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 610, column: 6)
!9446 = !DILocation(line: 610, column: 6, scope: !9445)
!9447 = !DILocation(line: 610, column: 6, scope: !9433)
!9448 = !DILocation(line: 614, column: 39, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 614, column: 6)
!9450 = !DILocation(line: 614, column: 6, scope: !9449)
!9451 = !DILocation(line: 614, column: 6, scope: !9433)
!9452 = !DILocation(line: 619, column: 40, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 619, column: 6)
!9454 = !DILocation(line: 619, column: 6, scope: !9453)
!9455 = !DILocation(line: 619, column: 6, scope: !9433)
!9456 = !DILocation(line: 623, column: 10, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 623, column: 6)
!9458 = !DILocation(line: 623, column: 6, scope: !9433)
!9459 = !DILocation(line: 624, column: 34, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9457, file: !1342, line: 623, column: 24)
!9461 = !DILocation(line: 624, column: 3, scope: !9460)
!9462 = !DILocation(line: 625, column: 2, scope: !9460)
!9463 = !DILocation(line: 632, column: 10, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 632, column: 6)
!9465 = !DILocation(line: 632, column: 6, scope: !9433)
!9466 = !DILocation(line: 633, column: 34, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9464, file: !1342, line: 632, column: 32)
!9468 = !DILocation(line: 633, column: 3, scope: !9467)
!9469 = !DILocation(line: 634, column: 2, scope: !9467)
!9470 = !DILocation(line: 636, column: 10, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 636, column: 6)
!9472 = !DILocation(line: 636, column: 6, scope: !9433)
!9473 = !DILocation(line: 637, column: 33, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !1342, line: 636, column: 31)
!9475 = !DILocation(line: 637, column: 3, scope: !9474)
!9476 = !DILocation(line: 638, column: 2, scope: !9474)
!9477 = !DILocation(line: 640, column: 10, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9433, file: !1342, line: 640, column: 6)
!9479 = !DILocation(line: 640, column: 6, scope: !9433)
!9480 = !DILocation(line: 641, column: 33, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9478, file: !1342, line: 640, column: 32)
!9482 = !DILocation(line: 641, column: 3, scope: !9481)
!9483 = !DILocation(line: 642, column: 2, scope: !9481)
!9484 = !DILocation(line: 646, column: 32, scope: !9433)
!9485 = !DILocation(line: 646, column: 2, scope: !9433)
!9486 = !DILocation(line: 648, column: 2, scope: !9433)
!9487 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1342, file: !1342, line: 419, type: !1272, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9488)
!9488 = !{!9489, !9490, !9491, !9492, !9494, !9495, !9496, !9497}
!9489 = !DILocalVariable(name: "dev", arg: 1, scope: !9487, file: !1342, line: 419, type: !1247)
!9490 = !DILocalVariable(name: "cfg", arg: 2, scope: !9487, file: !1342, line: 420, type: !1274)
!9491 = !DILocalVariable(name: "config", scope: !9487, file: !1342, line: 422, type: !9370)
!9492 = !DILocalVariable(name: "data", scope: !9487, file: !1342, line: 423, type: !9493)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!9494 = !DILocalVariable(name: "parity", scope: !9487, file: !1342, line: 424, type: !6569)
!9495 = !DILocalVariable(name: "stopbits", scope: !9487, file: !1342, line: 425, type: !6569)
!9496 = !DILocalVariable(name: "databits", scope: !9487, file: !1342, line: 426, type: !6569)
!9497 = !DILocalVariable(name: "flowctrl", scope: !9487, file: !1342, line: 428, type: !6569)
!9498 = !DILocation(line: 0, scope: !9487)
!9499 = !DILocation(line: 422, column: 48, scope: !9487)
!9500 = !DILocation(line: 423, column: 38, scope: !9487)
!9501 = !DILocation(line: 424, column: 56, scope: !9487)
!9502 = !DILocation(line: 424, column: 51, scope: !9487)
!9503 = !DILocation(line: 424, column: 26, scope: !9487)
!9504 = !DILocation(line: 425, column: 60, scope: !9487)
!9505 = !DILocation(line: 425, column: 55, scope: !9487)
!9506 = !DILocation(line: 425, column: 28, scope: !9487)
!9507 = !DILocation(line: 426, column: 60, scope: !9487)
!9508 = !DILocation(line: 426, column: 55, scope: !9487)
!9509 = !DILocation(line: 426, column: 28, scope: !9487)
!9510 = !DILocation(line: 428, column: 58, scope: !9487)
!9511 = !DILocation(line: 428, column: 53, scope: !9487)
!9512 = !DILocation(line: 428, column: 28, scope: !9487)
!9513 = !DILocation(line: 431, column: 44, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 431, column: 6)
!9515 = !DILocation(line: 438, column: 22, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 437, column: 6)
!9517 = !DILocation(line: 437, column: 6, scope: !9487)
!9518 = !DILocation(line: 448, column: 6, scope: !9487)
!9519 = !DILocation(line: 465, column: 47, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 465, column: 6)
!9521 = !DILocation(line: 475, column: 21, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 475, column: 6)
!9523 = !DILocation(line: 475, column: 6, scope: !9487)
!9524 = !DILocation(line: 476, column: 8, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !1342, line: 476, column: 7)
!9526 = distinct !DILexicalBlock(scope: !9522, file: !1342, line: 475, column: 49)
!9527 = !DILocation(line: 477, column: 34, scope: !9525)
!9528 = !DILocation(line: 476, column: 7, scope: !9526)
!9529 = !DILocation(line: 482, column: 27, scope: !9487)
!9530 = !DILocation(line: 482, column: 2, scope: !9487)
!9531 = !DILocation(line: 484, column: 16, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 484, column: 6)
!9533 = !DILocation(line: 484, column: 13, scope: !9532)
!9534 = !DILocation(line: 484, column: 6, scope: !9487)
!9535 = !DILocation(line: 485, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9532, file: !1342, line: 484, column: 44)
!9537 = !DILocation(line: 486, column: 2, scope: !9536)
!9538 = !DILocation(line: 488, column: 18, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 488, column: 6)
!9540 = !DILocation(line: 488, column: 15, scope: !9539)
!9541 = !DILocation(line: 488, column: 6, scope: !9487)
!9542 = !DILocation(line: 489, column: 3, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !1342, line: 488, column: 48)
!9544 = !DILocation(line: 490, column: 2, scope: !9543)
!9545 = !DILocation(line: 492, column: 18, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 492, column: 6)
!9547 = !DILocation(line: 492, column: 15, scope: !9546)
!9548 = !DILocation(line: 492, column: 6, scope: !9487)
!9549 = !DILocation(line: 493, column: 3, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !1342, line: 492, column: 48)
!9551 = !DILocation(line: 494, column: 2, scope: !9550)
!9552 = !DILocation(line: 496, column: 18, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 496, column: 6)
!9554 = !DILocation(line: 496, column: 15, scope: !9553)
!9555 = !DILocation(line: 496, column: 6, scope: !9487)
!9556 = !DILocation(line: 497, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9553, file: !1342, line: 496, column: 46)
!9558 = !DILocation(line: 498, column: 2, scope: !9557)
!9559 = !DILocation(line: 500, column: 11, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9487, file: !1342, line: 500, column: 6)
!9561 = !DILocation(line: 500, column: 29, scope: !9560)
!9562 = !DILocation(line: 500, column: 20, scope: !9560)
!9563 = !DILocation(line: 500, column: 6, scope: !9487)
!9564 = !DILocation(line: 501, column: 3, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9560, file: !1342, line: 500, column: 40)
!9566 = !DILocation(line: 502, column: 26, scope: !9565)
!9567 = !DILocation(line: 502, column: 19, scope: !9565)
!9568 = !DILocation(line: 503, column: 2, scope: !9565)
!9569 = !DILocation(line: 505, column: 26, scope: !9487)
!9570 = !DILocation(line: 505, column: 2, scope: !9487)
!9571 = !DILocation(line: 506, column: 2, scope: !9487)
!9572 = !DILocation(line: 507, column: 1, scope: !9487)
!9573 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1342, file: !1342, line: 509, type: !1285, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9574)
!9574 = !{!9575, !9576, !9577}
!9575 = !DILocalVariable(name: "dev", arg: 1, scope: !9573, file: !1342, line: 509, type: !1247)
!9576 = !DILocalVariable(name: "cfg", arg: 2, scope: !9573, file: !1342, line: 510, type: !1287)
!9577 = !DILocalVariable(name: "data", scope: !9573, file: !1342, line: 512, type: !9493)
!9578 = !DILocation(line: 0, scope: !9573)
!9579 = !DILocation(line: 512, column: 38, scope: !9573)
!9580 = !DILocation(line: 514, column: 24, scope: !9573)
!9581 = !DILocation(line: 514, column: 7, scope: !9573)
!9582 = !DILocation(line: 514, column: 16, scope: !9573)
!9583 = !DILocation(line: 515, column: 41, scope: !9573)
!9584 = !{i32 0, i32 1537}
!9585 = !DILocation(line: 515, column: 16, scope: !9573)
!9586 = !DILocation(line: 515, column: 7, scope: !9573)
!9587 = !DILocation(line: 515, column: 14, scope: !9573)
!9588 = !DILocation(line: 517, column: 3, scope: !9573)
!9589 = !{i32 0, i32 12289}
!9590 = !DILocation(line: 516, column: 19, scope: !9573)
!9591 = !DILocation(line: 516, column: 7, scope: !9573)
!9592 = !DILocation(line: 516, column: 17, scope: !9573)
!9593 = !DILocation(line: 519, column: 3, scope: !9573)
!9594 = !DILocation(line: 519, column: 33, scope: !9573)
!9595 = !DILocation(line: 518, column: 19, scope: !9573)
!9596 = !DILocation(line: 518, column: 7, scope: !9573)
!9597 = !DILocation(line: 518, column: 17, scope: !9573)
!9598 = !DILocation(line: 521, column: 3, scope: !9573)
!9599 = !{i32 0, i32 769}
!9600 = !DILocation(line: 520, column: 19, scope: !9573)
!9601 = !DILocation(line: 520, column: 7, scope: !9573)
!9602 = !DILocation(line: 520, column: 17, scope: !9573)
!9603 = !DILocation(line: 522, column: 2, scope: !9573)
!9604 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1342, file: !1342, line: 205, type: !9605, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9607)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!137, !1247}
!9607 = !{!9608, !9609}
!9608 = !DILocalVariable(name: "dev", arg: 1, scope: !9604, file: !1342, line: 205, type: !1247)
!9609 = !DILocalVariable(name: "config", scope: !9604, file: !1342, line: 207, type: !9370)
!9610 = !DILocation(line: 0, scope: !9604)
!9611 = !DILocation(line: 207, column: 48, scope: !9604)
!9612 = !DILocation(line: 209, column: 36, scope: !9604)
!9613 = !DILocation(line: 209, column: 9, scope: !9604)
!9614 = !DILocation(line: 209, column: 2, scope: !9604)
!9615 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1342, file: !1342, line: 270, type: !9616, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9618)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!1213, !137}
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "parity", arg: 1, scope: !9615, file: !1342, line: 270, type: !137)
!9620 = !DILocation(line: 0, scope: !9615)
!9621 = !DILocation(line: 272, column: 2, scope: !9615)
!9622 = !DILocation(line: 281, column: 1, scope: !9615)
!9623 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1342, file: !1342, line: 220, type: !9605, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9624)
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "dev", arg: 1, scope: !9623, file: !1342, line: 220, type: !1247)
!9626 = !DILocalVariable(name: "config", scope: !9623, file: !1342, line: 222, type: !9370)
!9627 = !DILocation(line: 0, scope: !9623)
!9628 = !DILocation(line: 222, column: 48, scope: !9623)
!9629 = !DILocation(line: 224, column: 44, scope: !9623)
!9630 = !DILocation(line: 224, column: 9, scope: !9623)
!9631 = !DILocation(line: 224, column: 2, scope: !9623)
!9632 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1342, file: !1342, line: 304, type: !9633, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9635)
!9633 = !DISubroutineType(types: !9634)
!9634 = !{!1227, !137}
!9635 = !{!9636}
!9636 = !DILocalVariable(name: "sb", arg: 1, scope: !9632, file: !1342, line: 304, type: !137)
!9637 = !DILocation(line: 0, scope: !9632)
!9638 = !DILocation(line: 306, column: 2, scope: !9632)
!9639 = !DILocation(line: 0, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9632, file: !1342, line: 306, column: 14)
!9641 = !DILocation(line: 323, column: 1, scope: !9632)
!9642 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1342, file: !1342, line: 235, type: !9605, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9643)
!9643 = !{!9644, !9645}
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !1342, line: 235, type: !1247)
!9645 = !DILocalVariable(name: "config", scope: !9642, file: !1342, line: 237, type: !9370)
!9646 = !DILocation(line: 0, scope: !9642)
!9647 = !DILocation(line: 237, column: 48, scope: !9642)
!9648 = !DILocation(line: 239, column: 39, scope: !9642)
!9649 = !DILocation(line: 239, column: 9, scope: !9642)
!9650 = !DILocation(line: 239, column: 2, scope: !9642)
!9651 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1342, file: !1342, line: 355, type: !9652, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9654)
!9652 = !DISubroutineType(types: !9653)
!9653 = !{!1220, !137, !137}
!9654 = !{!9655, !9656}
!9655 = !DILocalVariable(name: "db", arg: 1, scope: !9651, file: !1342, line: 355, type: !137)
!9656 = !DILocalVariable(name: "p", arg: 2, scope: !9651, file: !1342, line: 356, type: !137)
!9657 = !DILocation(line: 0, scope: !9651)
!9658 = !DILocation(line: 358, column: 2, scope: !9651)
!9659 = !DILocation(line: 384, column: 1, scope: !9651)
!9660 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1342, file: !1342, line: 250, type: !9605, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9661)
!9661 = !{!9662, !9663}
!9662 = !DILocalVariable(name: "dev", arg: 1, scope: !9660, file: !1342, line: 250, type: !1247)
!9663 = !DILocalVariable(name: "config", scope: !9660, file: !1342, line: 252, type: !9370)
!9664 = !DILocation(line: 0, scope: !9660)
!9665 = !DILocation(line: 252, column: 48, scope: !9660)
!9666 = !DILocation(line: 254, column: 40, scope: !9660)
!9667 = !DILocation(line: 254, column: 9, scope: !9660)
!9668 = !DILocation(line: 254, column: 2, scope: !9660)
!9669 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1342, file: !1342, line: 409, type: !9670, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9672)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{!1233, !137}
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "fc", arg: 1, scope: !9669, file: !1342, line: 409, type: !137)
!9674 = !DILocation(line: 0, scope: !9669)
!9675 = !DILocation(line: 411, column: 9, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9669, file: !1342, line: 411, column: 6)
!9677 = !DILocation(line: 416, column: 1, scope: !9669)
!9678 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9679, file: !9679, line: 967, type: !9680, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9682)
!9679 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9680 = !DISubroutineType(types: !9681)
!9681 = !{!137, !1288}
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9678, file: !9679, line: 967, type: !1288)
!9684 = !DILocation(line: 0, scope: !9678)
!9685 = !DILocation(line: 969, column: 21, scope: !9678)
!9686 = !DILocation(line: 969, column: 3, scope: !9678)
!9687 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9679, file: !9679, line: 601, type: !9680, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9687, file: !9679, line: 601, type: !1288)
!9690 = !DILocation(line: 0, scope: !9687)
!9691 = !DILocation(line: 603, column: 21, scope: !9687)
!9692 = !DILocation(line: 603, column: 3, scope: !9687)
!9693 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9679, file: !9679, line: 820, type: !9680, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9694)
!9694 = !{!9695}
!9695 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9693, file: !9679, line: 820, type: !1288)
!9696 = !DILocation(line: 0, scope: !9693)
!9697 = !DILocation(line: 822, column: 21, scope: !9693)
!9698 = !DILocation(line: 822, column: 3, scope: !9693)
!9699 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9679, file: !9679, line: 547, type: !9680, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9700)
!9700 = !{!9701}
!9701 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9699, file: !9679, line: 547, type: !1288)
!9702 = !DILocation(line: 0, scope: !9699)
!9703 = !DILocation(line: 549, column: 21, scope: !9699)
!9704 = !DILocation(line: 549, column: 3, scope: !9699)
!9705 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1342, file: !1342, line: 257, type: !9706, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9708)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!137, !1213}
!9708 = !{!9709}
!9709 = !DILocalVariable(name: "parity", arg: 1, scope: !9705, file: !1342, line: 257, type: !1213)
!9710 = !DILocation(line: 0, scope: !9705)
!9711 = !DILocation(line: 259, column: 2, scope: !9705)
!9712 = !DILocation(line: 268, column: 1, scope: !9705)
!9713 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1342, file: !1342, line: 283, type: !9714, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9716)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!137, !1227}
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "sb", arg: 1, scope: !9713, file: !1342, line: 283, type: !1227)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 285, column: 2, scope: !9713)
!9720 = !DILocation(line: 0, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9713, file: !1342, line: 285, column: 14)
!9722 = !DILocation(line: 302, column: 1, scope: !9713)
!9723 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1342, file: !1342, line: 325, type: !9724, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9726)
!9724 = !DISubroutineType(types: !9725)
!9725 = !{!137, !1220, !1213}
!9726 = !{!9727, !9728}
!9727 = !DILocalVariable(name: "db", arg: 1, scope: !9723, file: !1342, line: 325, type: !1220)
!9728 = !DILocalVariable(name: "p", arg: 2, scope: !9723, file: !1342, line: 326, type: !1213)
!9729 = !DILocation(line: 0, scope: !9723)
!9730 = !DILocation(line: 328, column: 2, scope: !9723)
!9731 = !DILocation(line: 353, column: 1, scope: !9723)
!9732 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1342, file: !1342, line: 393, type: !9733, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9735)
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!137, !1233}
!9735 = !{!9736}
!9736 = !DILocalVariable(name: "fc", arg: 1, scope: !9732, file: !1342, line: 393, type: !1233)
!9737 = !DILocation(line: 0, scope: !9732)
!9738 = !DILocation(line: 395, column: 9, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !1342, line: 395, column: 6)
!9740 = !DILocation(line: 400, column: 1, scope: !9732)
!9741 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9679, file: !9679, line: 424, type: !9742, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !1288}
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9741, file: !9679, line: 424, type: !1288)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 426, column: 3, scope: !9741)
!9748 = !DILocation(line: 427, column: 1, scope: !9741)
!9749 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1342, file: !1342, line: 197, type: !9750, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{null, !1247, !137}
!9752 = !{!9753, !9754, !9755}
!9753 = !DILocalVariable(name: "dev", arg: 1, scope: !9749, file: !1342, line: 197, type: !1247)
!9754 = !DILocalVariable(name: "parity", arg: 2, scope: !9749, file: !1342, line: 198, type: !137)
!9755 = !DILocalVariable(name: "config", scope: !9749, file: !1342, line: 200, type: !9370)
!9756 = !DILocation(line: 0, scope: !9749)
!9757 = !DILocation(line: 200, column: 48, scope: !9749)
!9758 = !DILocation(line: 202, column: 29, scope: !9749)
!9759 = !DILocation(line: 202, column: 2, scope: !9749)
!9760 = !DILocation(line: 203, column: 1, scope: !9749)
!9761 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1342, file: !1342, line: 212, type: !9750, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9762)
!9762 = !{!9763, !9764, !9765}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9761, file: !1342, line: 212, type: !1247)
!9764 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9761, file: !1342, line: 213, type: !137)
!9765 = !DILocalVariable(name: "config", scope: !9761, file: !1342, line: 215, type: !9370)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 215, column: 48, scope: !9761)
!9768 = !DILocation(line: 217, column: 37, scope: !9761)
!9769 = !DILocation(line: 217, column: 2, scope: !9761)
!9770 = !DILocation(line: 218, column: 1, scope: !9761)
!9771 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1342, file: !1342, line: 227, type: !9750, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9772)
!9772 = !{!9773, !9774, !9775}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9771, file: !1342, line: 227, type: !1247)
!9774 = !DILocalVariable(name: "databits", arg: 2, scope: !9771, file: !1342, line: 228, type: !137)
!9775 = !DILocalVariable(name: "config", scope: !9771, file: !1342, line: 230, type: !9370)
!9776 = !DILocation(line: 0, scope: !9771)
!9777 = !DILocation(line: 230, column: 48, scope: !9771)
!9778 = !DILocation(line: 232, column: 32, scope: !9771)
!9779 = !DILocation(line: 232, column: 2, scope: !9771)
!9780 = !DILocation(line: 233, column: 1, scope: !9771)
!9781 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1342, file: !1342, line: 242, type: !9750, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9782)
!9782 = !{!9783, !9784, !9785}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !1342, line: 242, type: !1247)
!9784 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9781, file: !1342, line: 243, type: !137)
!9785 = !DILocalVariable(name: "config", scope: !9781, file: !1342, line: 245, type: !9370)
!9786 = !DILocation(line: 0, scope: !9781)
!9787 = !DILocation(line: 245, column: 48, scope: !9781)
!9788 = !DILocation(line: 247, column: 33, scope: !9781)
!9789 = !DILocation(line: 247, column: 2, scope: !9781)
!9790 = !DILocation(line: 248, column: 1, scope: !9781)
!9791 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1342, file: !1342, line: 107, type: !9750, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9792)
!9792 = !{!9793, !9794, !9795, !9796, !9797}
!9793 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !1342, line: 107, type: !1247)
!9794 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9791, file: !1342, line: 107, type: !137)
!9795 = !DILocalVariable(name: "config", scope: !9791, file: !1342, line: 109, type: !9370)
!9796 = !DILocalVariable(name: "data", scope: !9791, file: !1342, line: 110, type: !9493)
!9797 = !DILocalVariable(name: "clock_rate", scope: !9791, file: !1342, line: 112, type: !137)
!9798 = !DILocation(line: 0, scope: !9791)
!9799 = !DILocation(line: 109, column: 48, scope: !9791)
!9800 = !DILocation(line: 110, column: 38, scope: !9791)
!9801 = !DILocation(line: 112, column: 2, scope: !9791)
!9802 = !DILocation(line: 123, column: 36, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !1342, line: 123, column: 7)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !1342, line: 122, column: 9)
!9805 = distinct !DILexicalBlock(scope: !9791, file: !1342, line: 115, column: 6)
!9806 = !DILocation(line: 124, column: 42, scope: !9803)
!9807 = !DILocation(line: 123, column: 7, scope: !9803)
!9808 = !DILocation(line: 125, column: 22, scope: !9803)
!9809 = !DILocation(line: 123, column: 7, scope: !9804)
!9810 = !DILocation(line: 176, column: 36, scope: !9791)
!9811 = !DILocation(line: 176, column: 3, scope: !9791)
!9812 = !DILocation(line: 179, column: 32, scope: !9791)
!9813 = !DILocation(line: 180, column: 10, scope: !9791)
!9814 = !DILocation(line: 179, column: 3, scope: !9791)
!9815 = !DILocation(line: 195, column: 1, scope: !9791)
!9816 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9679, file: !9679, line: 410, type: !9742, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9817)
!9817 = !{!9818}
!9818 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9816, file: !9679, line: 410, type: !1288)
!9819 = !DILocation(line: 0, scope: !9816)
!9820 = !DILocation(line: 412, column: 3, scope: !9816)
!9821 = !DILocation(line: 413, column: 1, scope: !9816)
!9822 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !702, file: !702, line: 216, type: !1321, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9823)
!9823 = !{!9824, !9825, !9826, !9827}
!9824 = !DILocalVariable(name: "dev", arg: 1, scope: !9822, file: !702, line: 216, type: !1247)
!9825 = !DILocalVariable(name: "sys", arg: 2, scope: !9822, file: !702, line: 217, type: !794)
!9826 = !DILocalVariable(name: "rate", arg: 3, scope: !9822, file: !702, line: 218, type: !149)
!9827 = !DILocalVariable(name: "api", scope: !9822, file: !702, line: 220, type: !1299)
!9828 = !DILocation(line: 0, scope: !9822)
!9829 = !DILocation(line: 221, column: 49, scope: !9822)
!9830 = !DILocation(line: 223, column: 11, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9822, file: !702, line: 223, column: 6)
!9832 = !DILocation(line: 223, column: 20, scope: !9831)
!9833 = !DILocation(line: 223, column: 6, scope: !9822)
!9834 = !DILocation(line: 227, column: 9, scope: !9822)
!9835 = !DILocation(line: 227, column: 2, scope: !9822)
!9836 = !DILocation(line: 228, column: 1, scope: !9822)
!9837 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9679, file: !9679, line: 615, type: !9838, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9840)
!9838 = !DISubroutineType(types: !9839)
!9839 = !{null, !1288, !137}
!9840 = !{!9841, !9842}
!9841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9837, file: !9679, line: 615, type: !1288)
!9842 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9837, file: !9679, line: 615, type: !137)
!9843 = !DILocation(line: 0, scope: !9837)
!9844 = !DILocation(line: 617, column: 3, scope: !9837)
!9845 = !DILocation(line: 618, column: 1, scope: !9837)
!9846 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9679, file: !9679, line: 1020, type: !9847, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{null, !1288, !137, !137, !137}
!9849 = !{!9850, !9851, !9852, !9853}
!9850 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9846, file: !9679, line: 1020, type: !1288)
!9851 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9846, file: !9679, line: 1020, type: !137)
!9852 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9846, file: !9679, line: 1020, type: !137)
!9853 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9846, file: !9679, line: 1021, type: !137)
!9854 = !DILocation(line: 0, scope: !9846)
!9855 = !DILocation(line: 1029, column: 30, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9857, file: !9679, line: 1028, column: 3)
!9857 = distinct !DILexicalBlock(scope: !9846, file: !9679, line: 1023, column: 7)
!9858 = !DILocation(line: 1029, column: 19, scope: !9856)
!9859 = !DILocation(line: 1029, column: 13, scope: !9856)
!9860 = !DILocation(line: 1029, column: 17, scope: !9856)
!9861 = !DILocation(line: 1031, column: 1, scope: !9846)
!9862 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9679, file: !9679, line: 949, type: !9838, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9863)
!9863 = !{!9864, !9865}
!9864 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9862, file: !9679, line: 949, type: !1288)
!9865 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9862, file: !9679, line: 949, type: !137)
!9866 = !DILocation(line: 0, scope: !9862)
!9867 = !DILocation(line: 951, column: 3, scope: !9862)
!9868 = !DILocation(line: 952, column: 1, scope: !9862)
!9869 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9679, file: !9679, line: 588, type: !9838, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9870)
!9870 = !{!9871, !9872}
!9871 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9869, file: !9679, line: 588, type: !1288)
!9872 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9869, file: !9679, line: 588, type: !137)
!9873 = !DILocation(line: 0, scope: !9869)
!9874 = !DILocation(line: 590, column: 3, scope: !9869)
!9875 = !DILocation(line: 591, column: 1, scope: !9869)
!9876 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9679, file: !9679, line: 805, type: !9838, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9877)
!9877 = !{!9878, !9879}
!9878 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9876, file: !9679, line: 805, type: !1288)
!9879 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9876, file: !9679, line: 805, type: !137)
!9880 = !DILocation(line: 0, scope: !9876)
!9881 = !DILocation(line: 807, column: 3, scope: !9876)
!9882 = !DILocation(line: 808, column: 1, scope: !9876)
!9883 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9679, file: !9679, line: 532, type: !9838, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9884)
!9884 = !{!9885, !9886}
!9885 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9883, file: !9679, line: 532, type: !1288)
!9886 = !DILocalVariable(name: "Parity", arg: 2, scope: !9883, file: !9679, line: 532, type: !137)
!9887 = !DILocation(line: 0, scope: !9883)
!9888 = !DILocation(line: 534, column: 3, scope: !9883)
!9889 = !DILocation(line: 535, column: 1, scope: !9883)
!9890 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9679, file: !9679, line: 1770, type: !9680, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9891)
!9891 = !{!9892}
!9892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9890, file: !9679, line: 1770, type: !1288)
!9893 = !DILocation(line: 0, scope: !9890)
!9894 = !DILocation(line: 1772, column: 11, scope: !9890)
!9895 = !DILocation(line: 1772, column: 46, scope: !9890)
!9896 = !DILocation(line: 1772, column: 3, scope: !9890)
!9897 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9679, file: !9679, line: 1737, type: !9680, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9898)
!9898 = !{!9899}
!9899 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9897, file: !9679, line: 1737, type: !1288)
!9900 = !DILocation(line: 0, scope: !9897)
!9901 = !DILocation(line: 1739, column: 11, scope: !9897)
!9902 = !DILocation(line: 1739, column: 3, scope: !9897)
!9903 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9679, file: !9679, line: 1748, type: !9680, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9904)
!9904 = !{!9905}
!9905 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9903, file: !9679, line: 1748, type: !1288)
!9906 = !DILocation(line: 0, scope: !9903)
!9907 = !DILocation(line: 1750, column: 11, scope: !9903)
!9908 = !DILocation(line: 1750, column: 45, scope: !9903)
!9909 = !DILocation(line: 1750, column: 3, scope: !9903)
!9910 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9679, file: !9679, line: 1827, type: !9680, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9911)
!9911 = !{!9912}
!9912 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9910, file: !9679, line: 1827, type: !1288)
!9913 = !DILocation(line: 0, scope: !9910)
!9914 = !DILocation(line: 1829, column: 11, scope: !9910)
!9915 = !DILocation(line: 1829, column: 46, scope: !9910)
!9916 = !DILocation(line: 1829, column: 3, scope: !9910)
!9917 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9679, file: !9679, line: 1992, type: !9742, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9918)
!9918 = !{!9919}
!9919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9917, file: !9679, line: 1992, type: !1288)
!9920 = !DILocation(line: 0, scope: !9917)
!9921 = !DILocation(line: 1994, column: 3, scope: !9917)
!9922 = !DILocation(line: 1995, column: 1, scope: !9917)
!9923 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9679, file: !9679, line: 1934, type: !9742, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9924)
!9924 = !{!9925, !9926}
!9925 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9923, file: !9679, line: 1934, type: !1288)
!9926 = !DILocalVariable(name: "tmpreg", scope: !9923, file: !9679, line: 1936, type: !176)
!9927 = !DILocation(line: 0, scope: !9923)
!9928 = !DILocation(line: 1936, column: 3, scope: !9923)
!9929 = !DILocation(line: 1936, column: 17, scope: !9923)
!9930 = !DILocation(line: 1937, column: 20, scope: !9923)
!9931 = !DILocation(line: 1937, column: 10, scope: !9923)
!9932 = !DILocation(line: 1938, column: 10, scope: !9923)
!9933 = !DILocation(line: 1939, column: 20, scope: !9923)
!9934 = !DILocation(line: 1939, column: 10, scope: !9923)
!9935 = !DILocation(line: 1940, column: 10, scope: !9923)
!9936 = !DILocation(line: 1941, column: 1, scope: !9923)
!9937 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9679, file: !9679, line: 1877, type: !9742, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9938)
!9938 = !{!9939, !9940}
!9939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9937, file: !9679, line: 1877, type: !1288)
!9940 = !DILocalVariable(name: "tmpreg", scope: !9937, file: !9679, line: 1879, type: !176)
!9941 = !DILocation(line: 0, scope: !9937)
!9942 = !DILocation(line: 1879, column: 3, scope: !9937)
!9943 = !DILocation(line: 1879, column: 17, scope: !9937)
!9944 = !DILocation(line: 1880, column: 20, scope: !9937)
!9945 = !DILocation(line: 1880, column: 10, scope: !9937)
!9946 = !DILocation(line: 1881, column: 10, scope: !9937)
!9947 = !DILocation(line: 1882, column: 20, scope: !9937)
!9948 = !DILocation(line: 1882, column: 10, scope: !9937)
!9949 = !DILocation(line: 1883, column: 10, scope: !9937)
!9950 = !DILocation(line: 1884, column: 1, scope: !9937)
!9951 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9679, file: !9679, line: 1896, type: !9742, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9952)
!9952 = !{!9953, !9954}
!9953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9951, file: !9679, line: 1896, type: !1288)
!9954 = !DILocalVariable(name: "tmpreg", scope: !9951, file: !9679, line: 1898, type: !176)
!9955 = !DILocation(line: 0, scope: !9951)
!9956 = !DILocation(line: 1898, column: 3, scope: !9951)
!9957 = !DILocation(line: 1898, column: 17, scope: !9951)
!9958 = !DILocation(line: 1899, column: 20, scope: !9951)
!9959 = !DILocation(line: 1899, column: 10, scope: !9951)
!9960 = !DILocation(line: 1900, column: 10, scope: !9951)
!9961 = !DILocation(line: 1901, column: 20, scope: !9951)
!9962 = !DILocation(line: 1901, column: 10, scope: !9951)
!9963 = !DILocation(line: 1902, column: 10, scope: !9951)
!9964 = !DILocation(line: 1903, column: 1, scope: !9951)
!9965 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9679, file: !9679, line: 1915, type: !9742, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9966)
!9966 = !{!9967, !9968}
!9967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9965, file: !9679, line: 1915, type: !1288)
!9968 = !DILocalVariable(name: "tmpreg", scope: !9965, file: !9679, line: 1917, type: !176)
!9969 = !DILocation(line: 0, scope: !9965)
!9970 = !DILocation(line: 1917, column: 3, scope: !9965)
!9971 = !DILocation(line: 1917, column: 17, scope: !9965)
!9972 = !DILocation(line: 1918, column: 20, scope: !9965)
!9973 = !DILocation(line: 1918, column: 10, scope: !9965)
!9974 = !DILocation(line: 1919, column: 10, scope: !9965)
!9975 = !DILocation(line: 1920, column: 20, scope: !9965)
!9976 = !DILocation(line: 1920, column: 10, scope: !9965)
!9977 = !DILocation(line: 1921, column: 10, scope: !9965)
!9978 = !DILocation(line: 1922, column: 1, scope: !9965)
!9979 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9679, file: !9679, line: 1814, type: !9680, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9980)
!9980 = !{!9981}
!9981 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9979, file: !9679, line: 1814, type: !1288)
!9982 = !DILocation(line: 0, scope: !9979)
!9983 = !DILocation(line: 1816, column: 11, scope: !9979)
!9984 = !DILocation(line: 1816, column: 46, scope: !9979)
!9985 = !DILocation(line: 1816, column: 3, scope: !9979)
!9986 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9679, file: !9679, line: 2426, type: !9987, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{null, !1288, !208}
!9989 = !{!9990, !9991}
!9990 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9986, file: !9679, line: 2426, type: !1288)
!9991 = !DILocalVariable(name: "Value", arg: 2, scope: !9986, file: !9679, line: 2426, type: !208)
!9992 = !DILocation(line: 0, scope: !9986)
!9993 = !DILocation(line: 2428, column: 16, scope: !9986)
!9994 = !DILocation(line: 2428, column: 11, scope: !9986)
!9995 = !DILocation(line: 2428, column: 14, scope: !9986)
!9996 = !DILocation(line: 2429, column: 1, scope: !9986)
!9997 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9679, file: !9679, line: 1792, type: !9680, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !9998)
!9998 = !{!9999}
!9999 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9997, file: !9679, line: 1792, type: !1288)
!10000 = !DILocation(line: 0, scope: !9997)
!10001 = !DILocation(line: 1794, column: 11, scope: !9997)
!10002 = !DILocation(line: 1794, column: 47, scope: !9997)
!10003 = !DILocation(line: 1794, column: 3, scope: !9997)
!10004 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9679, file: !9679, line: 2403, type: !10005, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10007)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{!208, !1288}
!10007 = !{!10008}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10004, file: !9679, line: 2403, type: !1288)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 2405, column: 20, scope: !10004)
!10011 = !DILocation(line: 2405, column: 10, scope: !10004)
!10012 = !DILocation(line: 2405, column: 3, scope: !10004)
!10013 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1342, file: !1342, line: 1583, type: !1268, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10014)
!10014 = !{!10015, !10016, !10017, !10018, !10019, !10020}
!10015 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !1342, line: 1583, type: !1247)
!10016 = !DILocalVariable(name: "config", scope: !10013, file: !1342, line: 1585, type: !9370)
!10017 = !DILocalVariable(name: "data", scope: !10013, file: !1342, line: 1586, type: !9493)
!10018 = !DILocalVariable(name: "ll_parity", scope: !10013, file: !1342, line: 1587, type: !137)
!10019 = !DILocalVariable(name: "ll_datawidth", scope: !10013, file: !1342, line: 1588, type: !137)
!10020 = !DILocalVariable(name: "err", scope: !10013, file: !1342, line: 1589, type: !103)
!10021 = !DILocation(line: 0, scope: !10013)
!10022 = !DILocation(line: 1585, column: 48, scope: !10013)
!10023 = !DILocation(line: 1586, column: 38, scope: !10013)
!10024 = !DILocation(line: 1591, column: 2, scope: !10013)
!10025 = !DILocation(line: 1593, column: 29, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1593, column: 6)
!10027 = !DILocation(line: 1593, column: 7, scope: !10026)
!10028 = !DILocation(line: 1593, column: 6, scope: !10013)
!10029 = !DILocation(line: 1599, column: 31, scope: !10013)
!10030 = !DILocation(line: 1599, column: 71, scope: !10013)
!10031 = !DILocation(line: 1599, column: 8, scope: !10013)
!10032 = !DILocation(line: 1600, column: 10, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1600, column: 6)
!10034 = !DILocation(line: 1600, column: 6, scope: !10013)
!10035 = !DILocation(line: 1616, column: 36, scope: !10013)
!10036 = !DILocation(line: 1616, column: 8, scope: !10013)
!10037 = !DILocation(line: 1617, column: 10, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1617, column: 6)
!10039 = !DILocation(line: 1617, column: 6, scope: !10013)
!10040 = !DILocation(line: 1621, column: 27, scope: !10013)
!10041 = !DILocation(line: 1621, column: 2, scope: !10013)
!10042 = !DILocation(line: 1624, column: 40, scope: !10013)
!10043 = !DILocation(line: 1624, column: 2, scope: !10013)
!10044 = !DILocation(line: 1630, column: 14, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1630, column: 6)
!10046 = !DILocation(line: 1630, column: 6, scope: !10013)
!10047 = !DILocation(line: 1638, column: 2, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !1342, line: 1634, column: 34)
!10049 = distinct !DILexicalBlock(scope: !10045, file: !1342, line: 1634, column: 13)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 1649, column: 35, scope: !10013)
!10052 = !DILocation(line: 1649, column: 2, scope: !10013)
!10053 = !DILocation(line: 1654, column: 14, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1654, column: 6)
!10055 = !DILocation(line: 1654, column: 6, scope: !10013)
!10056 = !DILocation(line: 1655, column: 3, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10054, file: !1342, line: 1654, column: 31)
!10058 = !DILocation(line: 1656, column: 2, scope: !10057)
!10059 = !DILocation(line: 1659, column: 37, scope: !10013)
!10060 = !DILocation(line: 1659, column: 2, scope: !10013)
!10061 = !DILocation(line: 1662, column: 14, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10013, file: !1342, line: 1662, column: 6)
!10063 = !DILocation(line: 1662, column: 6, scope: !10013)
!10064 = !DILocation(line: 1663, column: 37, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10062, file: !1342, line: 1662, column: 27)
!10066 = !DILocation(line: 1663, column: 3, scope: !10065)
!10067 = !DILocation(line: 1664, column: 2, scope: !10065)
!10068 = !DILocation(line: 1684, column: 26, scope: !10013)
!10069 = !DILocation(line: 1684, column: 2, scope: !10013)
!10070 = !DILocation(line: 1722, column: 2, scope: !10013)
!10071 = !DILocation(line: 1724, column: 1, scope: !10013)
!10072 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1342, file: !1342, line: 651, type: !10073, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10075)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{null, !1247}
!10075 = !{!10076, !10077, !10078}
!10076 = !DILocalVariable(name: "dev", arg: 1, scope: !10072, file: !1342, line: 651, type: !1247)
!10077 = !DILocalVariable(name: "data", scope: !10072, file: !1342, line: 653, type: !9493)
!10078 = !DILocalVariable(name: "clk", scope: !10072, file: !1342, line: 654, type: !10079)
!10079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1247)
!10080 = !DILocation(line: 0, scope: !10072)
!10081 = !DILocation(line: 653, column: 38, scope: !10072)
!10082 = !DILocation(line: 656, column: 8, scope: !10072)
!10083 = !DILocation(line: 656, column: 14, scope: !10072)
!10084 = !DILocation(line: 657, column: 1, scope: !10072)
!10085 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !10086, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!211, !1247}
!10088 = !{!10089}
!10089 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !8508, line: 47, type: !1247)
!10090 = !DILocation(line: 0, scope: !10085)
!10091 = !DILocation(line: 55, column: 2, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10085, file: !8508, line: 55, column: 2)
!10093 = !{i64 2155033884}
!10094 = !DILocation(line: 56, column: 9, scope: !10085)
!10095 = !DILocation(line: 56, column: 2, scope: !10085)
!10096 = distinct !DISubprogram(name: "clock_control_on", scope: !702, file: !702, line: 123, type: !1306, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10097)
!10097 = !{!10098, !10099, !10100}
!10098 = !DILocalVariable(name: "dev", arg: 1, scope: !10096, file: !702, line: 123, type: !1247)
!10099 = !DILocalVariable(name: "sys", arg: 2, scope: !10096, file: !702, line: 124, type: !794)
!10100 = !DILocalVariable(name: "api", scope: !10096, file: !702, line: 126, type: !1299)
!10101 = !DILocation(line: 0, scope: !10096)
!10102 = !DILocation(line: 127, column: 49, scope: !10096)
!10103 = !DILocation(line: 129, column: 14, scope: !10096)
!10104 = !DILocation(line: 129, column: 9, scope: !10096)
!10105 = !DILocation(line: 129, column: 2, scope: !10096)
!10106 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1367, file: !1367, line: 342, type: !10107, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10109)
!10107 = !DISubroutineType(types: !10108)
!10108 = !{!103, !1415, !208}
!10109 = !{!10110, !10111, !10112, !10113}
!10110 = !DILocalVariable(name: "config", arg: 1, scope: !10106, file: !1367, line: 342, type: !1415)
!10111 = !DILocalVariable(name: "id", arg: 2, scope: !10106, file: !1367, line: 343, type: !208)
!10112 = !DILocalVariable(name: "ret", scope: !10106, file: !1367, line: 345, type: !103)
!10113 = !DILocalVariable(name: "state", scope: !10106, file: !1367, line: 346, type: !1370)
!10114 = !DILocation(line: 0, scope: !10106)
!10115 = !DILocation(line: 346, column: 2, scope: !10106)
!10116 = !DILocation(line: 348, column: 8, scope: !10106)
!10117 = !DILocation(line: 349, column: 10, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10106, file: !1367, line: 349, column: 6)
!10119 = !DILocation(line: 349, column: 6, scope: !10106)
!10120 = !DILocation(line: 353, column: 44, scope: !10106)
!10121 = !DILocation(line: 353, column: 9, scope: !10106)
!10122 = !DILocation(line: 353, column: 2, scope: !10106)
!10123 = !DILocation(line: 354, column: 1, scope: !10106)
!10124 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9679, file: !9679, line: 497, type: !9838, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10125)
!10125 = !{!10126, !10127, !10128}
!10126 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10124, file: !9679, line: 497, type: !1288)
!10127 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10124, file: !9679, line: 497, type: !137)
!10128 = !DILocalVariable(name: "val", scope: !10129, file: !9679, line: 499, type: !137)
!10129 = distinct !DILexicalBlock(scope: !10124, file: !9679, line: 499, column: 3)
!10130 = !DILocation(line: 0, scope: !10124)
!10131 = !DILocation(line: 499, column: 3, scope: !10129)
!10132 = !DILocalVariable(name: "addr", arg: 1, scope: !10133, file: !6303, line: 476, type: !1338)
!10133 = distinct !DISubprogram(name: "__LDREXW", scope: !6303, file: !6303, line: 476, type: !10134, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10136)
!10134 = !DISubroutineType(types: !10135)
!10135 = !{!137, !1338}
!10136 = !{!10132, !10137}
!10137 = !DILocalVariable(name: "result", scope: !10133, file: !6303, line: 478, type: !137)
!10138 = !DILocation(line: 0, scope: !10133, inlinedAt: !10139)
!10139 = distinct !DILocation(line: 499, column: 3, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10129, file: !9679, line: 499, column: 3)
!10141 = !DILocation(line: 480, column: 4, scope: !10133, inlinedAt: !10139)
!10142 = !{i64 3527445}
!10143 = !DILocation(line: 499, column: 3, scope: !10140)
!10144 = !DILocation(line: 0, scope: !10129)
!10145 = !DILocalVariable(name: "value", arg: 1, scope: !10146, file: !6303, line: 527, type: !137)
!10146 = distinct !DISubprogram(name: "__STREXW", scope: !6303, file: !6303, line: 527, type: !10147, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10149)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{!137, !137, !1338}
!10149 = !{!10145, !10150, !10151}
!10150 = !DILocalVariable(name: "addr", arg: 2, scope: !10146, file: !6303, line: 527, type: !1338)
!10151 = !DILocalVariable(name: "result", scope: !10146, file: !6303, line: 529, type: !137)
!10152 = !DILocation(line: 0, scope: !10146, inlinedAt: !10153)
!10153 = distinct !DILocation(line: 499, column: 3, scope: !10129)
!10154 = !DILocation(line: 531, column: 4, scope: !10146, inlinedAt: !10153)
!10155 = !{i64 3528881}
!10156 = distinct !{!10156, !10131, !10131}
!10157 = !DILocation(line: 500, column: 1, scope: !10124)
!10158 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9679, file: !9679, line: 850, type: !9847, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10159)
!10159 = !{!10160, !10161, !10162, !10163}
!10160 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10158, file: !9679, line: 850, type: !1288)
!10161 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10158, file: !9679, line: 850, type: !137)
!10162 = !DILocalVariable(name: "Parity", arg: 3, scope: !10158, file: !9679, line: 850, type: !137)
!10163 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10158, file: !9679, line: 851, type: !137)
!10164 = !DILocation(line: 0, scope: !10158)
!10165 = !DILocation(line: 853, column: 3, scope: !10158)
!10166 = !DILocation(line: 854, column: 3, scope: !10158)
!10167 = !DILocation(line: 855, column: 1, scope: !10158)
!10168 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9679, file: !9679, line: 1337, type: !9742, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10169)
!10169 = !{!10170}
!10170 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10168, file: !9679, line: 1337, type: !1288)
!10171 = !DILocation(line: 0, scope: !10168)
!10172 = !DILocation(line: 1339, column: 3, scope: !10168)
!10173 = !DILocation(line: 1340, column: 1, scope: !10168)
!10174 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1367, file: !1367, line: 316, type: !10175, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10177)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!103, !1415, !1370}
!10177 = !{!10178, !10179, !10180}
!10178 = !DILocalVariable(name: "config", arg: 1, scope: !10174, file: !1367, line: 317, type: !1415)
!10179 = !DILocalVariable(name: "state", arg: 2, scope: !10174, file: !1367, line: 318, type: !1370)
!10180 = !DILocalVariable(name: "reg", scope: !10174, file: !1367, line: 320, type: !22)
!10181 = !DILocation(line: 0, scope: !10174)
!10182 = !DILocation(line: 329, column: 39, scope: !10174)
!10183 = !DILocation(line: 329, column: 52, scope: !10174)
!10184 = !DILocation(line: 329, column: 9, scope: !10174)
!10185 = !DILocation(line: 329, column: 2, scope: !10174)
!10186 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10086, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1203, retainedNodes: !10187)
!10187 = !{!10188}
!10188 = !DILocalVariable(name: "dev", arg: 1, scope: !10186, file: !196, line: 730, type: !1247)
!10189 = !DILocation(line: 0, scope: !10186)
!10190 = !DILocation(line: 732, column: 9, scope: !10186)
!10191 = !DILocation(line: 732, column: 2, scope: !10186)
!10192 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1496, file: !1496, line: 270, type: !1502, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10193)
!10193 = !{!10194}
!10194 = !DILocalVariable(name: "dev", arg: 1, scope: !10192, file: !1496, line: 270, type: !1504)
!10195 = !DILocation(line: 0, scope: !10192)
!10196 = !DILocation(line: 274, column: 2, scope: !10192)
!10197 = !DILocation(line: 275, column: 12, scope: !10192)
!10198 = !DILocation(line: 276, column: 15, scope: !10192)
!10199 = !DILocation(line: 277, column: 16, scope: !10192)
!10200 = !DILocation(line: 278, column: 15, scope: !10192)
!10201 = !DILocation(line: 279, column: 16, scope: !10192)
!10202 = !DILocation(line: 282, column: 2, scope: !10192)
!10203 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6337, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10204)
!10204 = !{!10205, !10206}
!10205 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10203, file: !402, line: 1814, type: !658)
!10206 = !DILocalVariable(name: "priority", arg: 2, scope: !10203, file: !402, line: 1814, type: !137)
!10207 = !DILocation(line: 0, scope: !10203)
!10208 = !DILocation(line: 1822, column: 46, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !402, line: 1821, column: 3)
!10210 = distinct !DILexicalBlock(scope: !10203, file: !402, line: 1816, column: 7)
!10211 = !DILocation(line: 1824, column: 1, scope: !10203)
!10212 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1496, file: !1496, line: 118, type: !6240, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10213)
!10213 = !{!10214, !10215}
!10214 = !DILocalVariable(name: "arg", arg: 1, scope: !10212, file: !1496, line: 118, type: !102)
!10215 = !DILocalVariable(name: "dticks", scope: !10212, file: !1496, line: 121, type: !137)
!10216 = !DILocation(line: 0, scope: !10212)
!10217 = !DILocation(line: 124, column: 2, scope: !10212)
!10218 = !DILocation(line: 129, column: 17, scope: !10212)
!10219 = !DILocation(line: 129, column: 14, scope: !10212)
!10220 = !DILocation(line: 130, column: 15, scope: !10212)
!10221 = !DILocation(line: 145, column: 27, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !1496, line: 132, column: 16)
!10223 = distinct !DILexicalBlock(scope: !10212, file: !1496, line: 132, column: 6)
!10224 = !DILocation(line: 145, column: 25, scope: !10222)
!10225 = !DILocation(line: 145, column: 45, scope: !10222)
!10226 = !DILocation(line: 146, column: 30, scope: !10222)
!10227 = !DILocation(line: 146, column: 20, scope: !10222)
!10228 = !DILocation(line: 147, column: 3, scope: !10222)
!10229 = !DILocation(line: 151, column: 2, scope: !10212)
!10230 = !DILocation(line: 152, column: 1, scope: !10212)
!10231 = distinct !DISubprogram(name: "elapsed", scope: !1496, file: !1496, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235}
!10233 = !DILocalVariable(name: "val1", scope: !10231, file: !1496, line: 87, type: !137)
!10234 = !DILocalVariable(name: "ctrl", scope: !10231, file: !1496, line: 88, type: !137)
!10235 = !DILocalVariable(name: "val2", scope: !10231, file: !1496, line: 89, type: !137)
!10236 = !DILocation(line: 87, column: 27, scope: !10231)
!10237 = !DILocation(line: 0, scope: !10231)
!10238 = !DILocation(line: 88, column: 27, scope: !10231)
!10239 = !DILocation(line: 89, column: 27, scope: !10231)
!10240 = !DILocation(line: 105, column: 12, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10231, file: !1496, line: 105, column: 6)
!10242 = !DILocation(line: 106, column: 6, scope: !10241)
!10243 = !DILocation(line: 107, column: 16, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10241, file: !1496, line: 106, column: 24)
!10245 = !DILocation(line: 111, column: 18, scope: !10244)
!10246 = !DILocation(line: 112, column: 2, scope: !10244)
!10247 = !DILocation(line: 114, column: 20, scope: !10231)
!10248 = !DILocation(line: 114, column: 30, scope: !10231)
!10249 = !DILocation(line: 114, column: 28, scope: !10231)
!10250 = !DILocation(line: 114, column: 2, scope: !10231)
!10251 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1496, file: !1496, line: 154, type: !10252, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{null, !632, !211}
!10254 = !{!10255, !10256, !10257, !10258, !10259, !10260, !10261, !10266, !10267}
!10255 = !DILocalVariable(name: "ticks", arg: 1, scope: !10251, file: !1496, line: 154, type: !632)
!10256 = !DILocalVariable(name: "idle", arg: 2, scope: !10251, file: !1496, line: 154, type: !211)
!10257 = !DILocalVariable(name: "delay", scope: !10251, file: !1496, line: 169, type: !137)
!10258 = !DILocalVariable(name: "val1", scope: !10251, file: !1496, line: 170, type: !137)
!10259 = !DILocalVariable(name: "val2", scope: !10251, file: !1496, line: 170, type: !137)
!10260 = !DILocalVariable(name: "last_load_", scope: !10251, file: !1496, line: 171, type: !137)
!10261 = !DILocalVariable(name: "key", scope: !10251, file: !1496, line: 176, type: !10262)
!10262 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !10263)
!10263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !10264)
!10264 = !{!10265}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10263, file: !368, line: 33, baseType: !103, size: 32)
!10266 = !DILocalVariable(name: "pending", scope: !10251, file: !1496, line: 178, type: !137)
!10267 = !DILocalVariable(name: "unannounced", scope: !10251, file: !1496, line: 185, type: !137)
!10268 = !DILocation(line: 0, scope: !10251)
!10269 = !DILocation(line: 162, column: 49, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10251, file: !1496, line: 162, column: 6)
!10271 = !DILocation(line: 163, column: 17, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10270, file: !1496, line: 162, column: 78)
!10273 = !DILocation(line: 164, column: 13, scope: !10272)
!10274 = !DILocation(line: 165, column: 3, scope: !10272)
!10275 = !DILocation(line: 171, column: 24, scope: !10251)
!10276 = !DILocation(line: 173, column: 10, scope: !10251)
!10277 = !DILocation(line: 174, column: 10, scope: !10251)
!10278 = !DILocalVariable(name: "l", arg: 1, scope: !10279, file: !368, line: 136, type: !10282)
!10279 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !10280, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10283)
!10280 = !DISubroutineType(types: !10281)
!10281 = !{!10262, !10282}
!10282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!10283 = !{!10278, !10284}
!10284 = !DILocalVariable(name: "k", scope: !10279, file: !368, line: 139, type: !10262)
!10285 = !DILocation(line: 0, scope: !10279, inlinedAt: !10286)
!10286 = distinct !DILocation(line: 176, column: 25, scope: !10251)
!10287 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10292)
!10288 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10289)
!10289 = !{!10290, !10291}
!10290 = !DILocalVariable(name: "key", scope: !10288, file: !6129, line: 44, type: !32)
!10291 = !DILocalVariable(name: "tmp", scope: !10288, file: !6129, line: 53, type: !32)
!10292 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10286)
!10293 = !{i64 2220786}
!10294 = !DILocation(line: 0, scope: !10288, inlinedAt: !10292)
!10295 = !DILocation(line: 178, column: 21, scope: !10251)
!10296 = !DILocation(line: 180, column: 18, scope: !10251)
!10297 = !DILocation(line: 182, column: 14, scope: !10251)
!10298 = !DILocation(line: 183, column: 15, scope: !10251)
!10299 = !DILocation(line: 185, column: 39, scope: !10251)
!10300 = !DILocation(line: 185, column: 37, scope: !10251)
!10301 = !DILocation(line: 187, column: 27, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10251, file: !1496, line: 187, column: 6)
!10303 = !DILocation(line: 187, column: 6, scope: !10251)
!10304 = !DILocation(line: 202, column: 27, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10302, file: !1496, line: 195, column: 9)
!10306 = !DILocation(line: 202, column: 48, scope: !10305)
!10307 = !DILocation(line: 203, column: 9, scope: !10305)
!10308 = !DILocation(line: 204, column: 11, scope: !10305)
!10309 = !DILocation(line: 205, column: 13, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10305, file: !1496, line: 205, column: 7)
!10311 = !DILocation(line: 205, column: 7, scope: !10305)
!10312 = !DILocation(line: 0, scope: !10302)
!10313 = !DILocation(line: 212, column: 18, scope: !10251)
!10314 = !DILocation(line: 214, column: 28, scope: !10251)
!10315 = !DILocation(line: 214, column: 16, scope: !10251)
!10316 = !DILocation(line: 215, column: 15, scope: !10251)
!10317 = !DILocation(line: 227, column: 11, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10251, file: !1496, line: 227, column: 6)
!10319 = !DILocation(line: 227, column: 6, scope: !10251)
!10320 = !DILocation(line: 228, column: 15, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10318, file: !1496, line: 227, column: 19)
!10322 = !DILocation(line: 228, column: 38, scope: !10321)
!10323 = !DILocation(line: 228, column: 24, scope: !10321)
!10324 = !DILocation(line: 229, column: 2, scope: !10321)
!10325 = !DILocation(line: 230, column: 24, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10318, file: !1496, line: 229, column: 9)
!10327 = !DILocation(line: 230, column: 15, scope: !10326)
!10328 = !DILocation(line: 0, scope: !10318)
!10329 = !DILocalVariable(name: "key", arg: 2, scope: !10330, file: !368, line: 190, type: !10262)
!10330 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !10331, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10333)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{null, !10282, !10262}
!10333 = !{!10334, !10329}
!10334 = !DILocalVariable(name: "l", arg: 1, scope: !10330, file: !368, line: 189, type: !10282)
!10335 = !DILocation(line: 0, scope: !10330, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 232, column: 2, scope: !10251)
!10337 = !DILocalVariable(name: "key", arg: 1, scope: !10338, file: !6129, line: 84, type: !32)
!10338 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10339)
!10339 = !{!10337}
!10340 = !DILocation(line: 0, scope: !10338, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10336)
!10342 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10341)
!10343 = !{i64 2221603}
!10344 = !DILocation(line: 234, column: 1, scope: !10251)
!10345 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1496, file: !1496, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10346)
!10346 = !{!10347, !10348}
!10347 = !DILocalVariable(name: "key", scope: !10345, file: !1496, line: 242, type: !10262)
!10348 = !DILocalVariable(name: "cyc", scope: !10345, file: !1496, line: 243, type: !137)
!10349 = !DILocation(line: 0, scope: !10279, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 242, column: 25, scope: !10345)
!10351 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10352)
!10352 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10350)
!10353 = !DILocation(line: 0, scope: !10288, inlinedAt: !10352)
!10354 = !DILocation(line: 0, scope: !10345)
!10355 = !DILocation(line: 243, column: 17, scope: !10345)
!10356 = !DILocation(line: 243, column: 29, scope: !10345)
!10357 = !DILocation(line: 243, column: 27, scope: !10345)
!10358 = !DILocation(line: 243, column: 43, scope: !10345)
!10359 = !DILocation(line: 243, column: 41, scope: !10345)
!10360 = !DILocation(line: 0, scope: !10330, inlinedAt: !10361)
!10361 = distinct !DILocation(line: 245, column: 2, scope: !10345)
!10362 = !DILocation(line: 0, scope: !10338, inlinedAt: !10363)
!10363 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10361)
!10364 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10363)
!10365 = !DILocation(line: 246, column: 13, scope: !10345)
!10366 = !DILocation(line: 246, column: 2, scope: !10345)
!10367 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1496, file: !1496, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !10368)
!10368 = !{!10369, !10370}
!10369 = !DILocalVariable(name: "key", scope: !10367, file: !1496, line: 251, type: !10262)
!10370 = !DILocalVariable(name: "ret", scope: !10367, file: !1496, line: 252, type: !137)
!10371 = !DILocation(line: 0, scope: !10279, inlinedAt: !10372)
!10372 = distinct !DILocation(line: 251, column: 25, scope: !10367)
!10373 = !DILocation(line: 55, column: 2, scope: !10288, inlinedAt: !10374)
!10374 = distinct !DILocation(line: 145, column: 10, scope: !10279, inlinedAt: !10372)
!10375 = !DILocation(line: 0, scope: !10288, inlinedAt: !10374)
!10376 = !DILocation(line: 0, scope: !10367)
!10377 = !DILocation(line: 252, column: 17, scope: !10367)
!10378 = !DILocation(line: 252, column: 29, scope: !10367)
!10379 = !DILocation(line: 252, column: 27, scope: !10367)
!10380 = !DILocation(line: 0, scope: !10330, inlinedAt: !10381)
!10381 = distinct !DILocation(line: 254, column: 2, scope: !10367)
!10382 = !DILocation(line: 0, scope: !10338, inlinedAt: !10383)
!10383 = distinct !DILocation(line: 215, column: 2, scope: !10330, inlinedAt: !10381)
!10384 = !DILocation(line: 95, column: 2, scope: !10338, inlinedAt: !10383)
!10385 = !DILocation(line: 255, column: 2, scope: !10367)
!10386 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1496, file: !1496, line: 258, type: !2819, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !162)
!10387 = !DILocation(line: 260, column: 6, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10386, file: !1496, line: 260, column: 6)
!10389 = !DILocation(line: 260, column: 16, scope: !10388)
!10390 = !DILocation(line: 260, column: 6, scope: !10386)
!10391 = !DILocation(line: 261, column: 17, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !1496, line: 260, column: 34)
!10393 = !DILocation(line: 262, column: 2, scope: !10392)
!10394 = !DILocation(line: 263, column: 1, scope: !10386)
!10395 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1496, file: !1496, line: 265, type: !2819, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1418, retainedNodes: !162)
!10396 = !DILocation(line: 267, column: 16, scope: !10395)
!10397 = !DILocation(line: 268, column: 1, scope: !10395)
!10398 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10399, file: !10399, line: 9, type: !10400, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !10423)
!10399 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10400 = !DISubroutineType(types: !10401)
!10401 = !{!103, !10402, !208, !10422}
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 32)
!10403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10404)
!10404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1367, line: 60, size: 64, elements: !10405)
!10405 = !{!10406, !10421}
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10404, file: !1367, line: 69, baseType: !10407, size: 32)
!10407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10408, size: 32)
!10408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10409)
!10409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1367, line: 50, size: 64, elements: !10410)
!10410 = !{!10411, !10419, !10420}
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10409, file: !1367, line: 52, baseType: !10412, size: 32)
!10412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10413, size: 32)
!10413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10414)
!10414 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1378, line: 37, baseType: !10415)
!10415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1378, line: 32, size: 64, elements: !10416)
!10416 = !{!10417, !10418}
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10415, file: !1378, line: 34, baseType: !137, size: 32)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10415, file: !1378, line: 36, baseType: !137, size: 32, offset: 32)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10409, file: !1367, line: 54, baseType: !208, size: 8, offset: 32)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10409, file: !1367, line: 56, baseType: !208, size: 8, offset: 40)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10404, file: !1367, line: 71, baseType: !208, size: 8, offset: 32)
!10422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10407, size: 32)
!10423 = !{!10424, !10425, !10426}
!10424 = !DILocalVariable(name: "config", arg: 1, scope: !10398, file: !10399, line: 9, type: !10402)
!10425 = !DILocalVariable(name: "id", arg: 2, scope: !10398, file: !10399, line: 9, type: !208)
!10426 = !DILocalVariable(name: "state", arg: 3, scope: !10398, file: !10399, line: 10, type: !10422)
!10427 = !DILocation(line: 0, scope: !10398)
!10428 = !DILocation(line: 12, column: 20, scope: !10398)
!10429 = !DILocation(line: 13, column: 27, scope: !10398)
!10430 = !DILocation(line: 13, column: 42, scope: !10398)
!10431 = !DILocation(line: 13, column: 19, scope: !10398)
!10432 = !DILocation(line: 13, column: 16, scope: !10398)
!10433 = !DILocation(line: 13, column: 2, scope: !10398)
!10434 = distinct !{!10434, !10433, !10435}
!10435 = !DILocation(line: 19, column: 2, scope: !10398)
!10436 = !DILocation(line: 14, column: 23, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !10399, line: 14, column: 7)
!10438 = distinct !DILexicalBlock(scope: !10398, file: !10399, line: 13, column: 54)
!10439 = !DILocation(line: 14, column: 10, scope: !10437)
!10440 = !DILocation(line: 18, column: 11, scope: !10438)
!10441 = !DILocation(line: 14, column: 7, scope: !10438)
!10442 = !DILocation(line: 22, column: 1, scope: !10398)
!10443 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1613, file: !1613, line: 193, type: !10444, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1531, retainedNodes: !10453)
!10444 = !DISubroutineType(types: !10445)
!10445 = !{!103, !10446, !208, !22}
!10446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10447, size: 32)
!10447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10448)
!10448 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1378, line: 37, baseType: !10449)
!10449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1378, line: 32, size: 64, elements: !10450)
!10450 = !{!10451, !10452}
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10449, file: !1378, line: 34, baseType: !137, size: 32)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10449, file: !1378, line: 36, baseType: !137, size: 32, offset: 32)
!10453 = !{!10454, !10455, !10456, !10457, !10458, !10459, !10460, !10461, !10463}
!10454 = !DILocalVariable(name: "pins", arg: 1, scope: !10443, file: !1613, line: 193, type: !10446)
!10455 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10443, file: !1613, line: 193, type: !208)
!10456 = !DILocalVariable(name: "reg", arg: 3, scope: !10443, file: !1613, line: 194, type: !22)
!10457 = !DILocalVariable(name: "pin", scope: !10443, file: !1613, line: 196, type: !137)
!10458 = !DILocalVariable(name: "mux", scope: !10443, file: !1613, line: 196, type: !137)
!10459 = !DILocalVariable(name: "pin_cgf", scope: !10443, file: !1613, line: 197, type: !137)
!10460 = !DILocalVariable(name: "ret", scope: !10443, file: !1613, line: 198, type: !103)
!10461 = !DILocalVariable(name: "i", scope: !10462, file: !1613, line: 209, type: !208)
!10462 = distinct !DILexicalBlock(scope: !10443, file: !1613, line: 209, column: 2)
!10463 = !DILocalVariable(name: "gpio_out", scope: !10464, file: !1613, line: 239, type: !137)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !1613, line: 238, column: 55)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !1613, line: 238, column: 14)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !1613, line: 236, column: 14)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !1613, line: 234, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !1613, line: 209, column: 41)
!10469 = distinct !DILexicalBlock(scope: !10462, file: !1613, line: 209, column: 2)
!10470 = !DILocation(line: 0, scope: !10443)
!10471 = !DILocation(line: 0, scope: !10462)
!10472 = !DILocation(line: 209, column: 25, scope: !10469)
!10473 = !DILocation(line: 209, column: 2, scope: !10462)
!10474 = distinct !{!10474, !10473, !10475}
!10475 = !DILocation(line: 259, column: 2, scope: !10462)
!10476 = !DILocation(line: 210, column: 17, scope: !10468)
!10477 = !DILocation(line: 234, column: 7, scope: !10467)
!10478 = !DILocation(line: 234, column: 33, scope: !10467)
!10479 = !DILocation(line: 234, column: 7, scope: !10468)
!10480 = !DILocation(line: 235, column: 22, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10467, file: !1613, line: 234, column: 49)
!10482 = !DILocation(line: 235, column: 29, scope: !10481)
!10483 = !DILocation(line: 236, column: 3, scope: !10481)
!10484 = !DILocation(line: 236, column: 14, scope: !10467)
!10485 = !DILocation(line: 239, column: 32, scope: !10464)
!10486 = !DILocation(line: 0, scope: !10464)
!10487 = !DILocation(line: 241, column: 8, scope: !10464)
!10488 = !DILocation(line: 246, column: 3, scope: !10464)
!10489 = !DILocation(line: 252, column: 9, scope: !10468)
!10490 = !DILocation(line: 255, column: 9, scope: !10468)
!10491 = !DILocation(line: 256, column: 11, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10468, file: !1613, line: 256, column: 7)
!10493 = !DILocation(line: 209, column: 37, scope: !10469)
!10494 = !DILocation(line: 256, column: 7, scope: !10468)
!10495 = !DILocation(line: 262, column: 1, scope: !10443)
!10496 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1613, file: !1613, line: 176, type: !10497, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1531, retainedNodes: !10499)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{!103, !137, !137, !137}
!10499 = !{!10500, !10501, !10502, !10503}
!10500 = !DILocalVariable(name: "pin", arg: 1, scope: !10496, file: !1613, line: 176, type: !137)
!10501 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10496, file: !1613, line: 176, type: !137)
!10502 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10496, file: !1613, line: 176, type: !137)
!10503 = !DILocalVariable(name: "port_device", scope: !10496, file: !1613, line: 178, type: !1543)
!10504 = !DILocation(line: 0, scope: !10496)
!10505 = !DILocation(line: 180, column: 22, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10496, file: !1613, line: 180, column: 6)
!10507 = !DILocation(line: 180, column: 6, scope: !10496)
!10508 = !DILocation(line: 180, column: 6, scope: !10506)
!10509 = !DILocation(line: 184, column: 16, scope: !10496)
!10510 = !DILocation(line: 186, column: 19, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10496, file: !1613, line: 186, column: 6)
!10512 = !DILocation(line: 186, column: 28, scope: !10511)
!10513 = !DILocation(line: 186, column: 33, scope: !10511)
!10514 = !DILocation(line: 186, column: 6, scope: !10496)
!10515 = !DILocation(line: 190, column: 43, scope: !10496)
!10516 = !DILocation(line: 190, column: 9, scope: !10496)
!10517 = !DILocation(line: 190, column: 2, scope: !10496)
!10518 = !DILocation(line: 191, column: 1, scope: !10496)
!10519 = distinct !DISubprogram(name: "device_is_ready", scope: !8508, file: !8508, line: 47, type: !10520, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1531, retainedNodes: !10522)
!10520 = !DISubroutineType(types: !10521)
!10521 = !{!211, !1543}
!10522 = !{!10523}
!10523 = !DILocalVariable(name: "dev", arg: 1, scope: !10519, file: !8508, line: 47, type: !1543)
!10524 = !DILocation(line: 0, scope: !10519)
!10525 = !DILocation(line: 55, column: 2, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10519, file: !8508, line: 55, column: 2)
!10527 = !{i64 2149458856}
!10528 = !DILocation(line: 56, column: 9, scope: !10519)
!10529 = !DILocation(line: 56, column: 2, scope: !10519)
!10530 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !196, file: !196, line: 730, type: !10520, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1531, retainedNodes: !10531)
!10531 = !{!10532}
!10532 = !DILocalVariable(name: "dev", arg: 1, scope: !10530, file: !196, line: 730, type: !1543)
!10533 = !DILocation(line: 0, scope: !10530)
!10534 = !DILocation(line: 732, column: 9, scope: !10530)
!10535 = !DILocation(line: 732, column: 2, scope: !10530)
!10536 = distinct !DISubprogram(name: "SystemInit", scope: !1662, file: !1662, line: 167, type: !2819, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1621, retainedNodes: !162)
!10537 = !DILocation(line: 182, column: 1, scope: !10536)
!10538 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1662, file: !1662, line: 220, type: !2819, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1621, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543, !10544}
!10540 = !DILocalVariable(name: "tmp", scope: !10538, file: !1662, line: 222, type: !137)
!10541 = !DILocalVariable(name: "pllvco", scope: !10538, file: !1662, line: 222, type: !137)
!10542 = !DILocalVariable(name: "pllp", scope: !10538, file: !1662, line: 222, type: !137)
!10543 = !DILocalVariable(name: "pllsource", scope: !10538, file: !1662, line: 222, type: !137)
!10544 = !DILocalVariable(name: "pllm", scope: !10538, file: !1662, line: 222, type: !137)
!10545 = !DILocation(line: 0, scope: !10538)
!10546 = !DILocation(line: 225, column: 14, scope: !10538)
!10547 = !DILocation(line: 225, column: 19, scope: !10538)
!10548 = !DILocation(line: 227, column: 3, scope: !10538)
!10549 = !DILocation(line: 240, column: 25, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10538, file: !1662, line: 228, column: 3)
!10551 = !DILocation(line: 241, column: 19, scope: !10550)
!10552 = !DILocation(line: 241, column: 27, scope: !10550)
!10553 = !DILocation(line: 0, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10550, file: !1662, line: 243, column: 11)
!10555 = !DILocation(line: 254, column: 22, scope: !10550)
!10556 = !DILocation(line: 254, column: 62, scope: !10550)
!10557 = !DILocation(line: 255, column: 31, scope: !10550)
!10558 = !DILocation(line: 256, column: 7, scope: !10550)
!10559 = !DILocation(line: 0, scope: !10550)
!10560 = !DILocation(line: 263, column: 30, scope: !10538)
!10561 = !DILocation(line: 263, column: 52, scope: !10538)
!10562 = !DILocation(line: 263, column: 9, scope: !10538)
!10563 = !DILocation(line: 265, column: 19, scope: !10538)
!10564 = !DILocation(line: 266, column: 1, scope: !10538)
!10565 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10566, file: !10566, line: 200, type: !10567, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!10566 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!10569}
!10569 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2634, line: 44, baseType: !2633)
!10570 = !DILocation(line: 202, column: 3, scope: !10565)
!10571 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10566, file: !10566, line: 219, type: !10572, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !10597)
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!10569, !10574}
!10574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10575, size: 32)
!10575 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10576, line: 70, baseType: !10577)
!10576 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10577 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10576, line: 49, size: 416, elements: !10578)
!10578 = !{!10579, !10580, !10581, !10582, !10583, !10584, !10585}
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10577, file: !10576, line: 51, baseType: !137, size: 32)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10577, file: !10576, line: 54, baseType: !137, size: 32, offset: 32)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10577, file: !10576, line: 57, baseType: !137, size: 32, offset: 64)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10577, file: !10576, line: 60, baseType: !137, size: 32, offset: 96)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10577, file: !10576, line: 63, baseType: !137, size: 32, offset: 128)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10577, file: !10576, line: 66, baseType: !137, size: 32, offset: 160)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10577, file: !10576, line: 69, baseType: !10586, size: 224, offset: 192)
!10586 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10587, line: 73, baseType: !10588)
!10587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10587, line: 45, size: 224, elements: !10589)
!10589 = !{!10590, !10591, !10592, !10593, !10594, !10595, !10596}
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10588, file: !10587, line: 47, baseType: !137, size: 32)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10588, file: !10587, line: 50, baseType: !137, size: 32, offset: 32)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10588, file: !10587, line: 53, baseType: !137, size: 32, offset: 64)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10588, file: !10587, line: 56, baseType: !137, size: 32, offset: 96)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10588, file: !10587, line: 60, baseType: !137, size: 32, offset: 128)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10588, file: !10587, line: 63, baseType: !137, size: 32, offset: 160)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10588, file: !10587, line: 68, baseType: !137, size: 32, offset: 192)
!10597 = !{!10598, !10599, !10600, !10601, !10605}
!10598 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10571, file: !10566, line: 219, type: !10574)
!10599 = !DILocalVariable(name: "tickstart", scope: !10571, file: !10566, line: 221, type: !137)
!10600 = !DILocalVariable(name: "pll_config", scope: !10571, file: !10566, line: 221, type: !137)
!10601 = !DILocalVariable(name: "pwrclkchanged", scope: !10602, file: !10566, line: 391, type: !10604)
!10602 = distinct !DILexicalBlock(scope: !10603, file: !10566, line: 390, column: 3)
!10603 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 389, column: 6)
!10604 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !697, line: 188, baseType: !2640)
!10605 = !DILocalVariable(name: "tmpreg", scope: !10606, file: !10566, line: 400, type: !176)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !10566, line: 400, column: 7)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !10566, line: 399, column: 5)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !10566, line: 398, column: 8)
!10609 = !DILocation(line: 0, scope: !10571)
!10610 = !DILocation(line: 224, column: 24, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 224, column: 6)
!10612 = !DILocation(line: 224, column: 6, scope: !10571)
!10613 = !DILocation(line: 232, column: 27, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 232, column: 6)
!10615 = !DILocation(line: 232, column: 43, scope: !10614)
!10616 = !DILocation(line: 232, column: 69, scope: !10614)
!10617 = !DILocation(line: 232, column: 6, scope: !10571)
!10618 = !DILocation(line: 237, column: 9, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !10566, line: 237, column: 8)
!10620 = distinct !DILexicalBlock(scope: !10614, file: !10566, line: 233, column: 3)
!10621 = !DILocation(line: 237, column: 39, scope: !10619)
!10622 = !DILocation(line: 237, column: 60, scope: !10619)
!10623 = !DILocation(line: 238, column: 9, scope: !10619)
!10624 = !DILocation(line: 238, column: 39, scope: !10619)
!10625 = !DILocation(line: 238, column: 60, scope: !10619)
!10626 = !DILocation(line: 238, column: 70, scope: !10619)
!10627 = !DILocation(line: 238, column: 78, scope: !10619)
!10628 = !DILocation(line: 238, column: 100, scope: !10619)
!10629 = !DILocation(line: 237, column: 8, scope: !10620)
!10630 = !DILocation(line: 240, column: 11, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10632, file: !10566, line: 240, column: 10)
!10632 = distinct !DILexicalBlock(scope: !10619, file: !10566, line: 239, column: 5)
!10633 = !DILocation(line: 240, column: 57, scope: !10631)
!10634 = !DILocation(line: 240, column: 80, scope: !10631)
!10635 = !DILocation(line: 240, column: 89, scope: !10631)
!10636 = !DILocation(line: 240, column: 10, scope: !10632)
!10637 = !DILocation(line: 248, column: 7, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10639, file: !10566, line: 248, column: 7)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !10566, line: 248, column: 7)
!10640 = distinct !DILexicalBlock(scope: !10619, file: !10566, line: 246, column: 5)
!10641 = !DILocation(line: 248, column: 7, scope: !10639)
!10642 = !DILocation(line: 248, column: 7, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10638, file: !10566, line: 248, column: 7)
!10644 = !DILocation(line: 248, column: 7, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !10566, line: 248, column: 7)
!10646 = distinct !DILexicalBlock(scope: !10638, file: !10566, line: 248, column: 7)
!10647 = !DILocation(line: 248, column: 7, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10646, file: !10566, line: 248, column: 7)
!10649 = !DILocation(line: 0, scope: !10638)
!10650 = !DILocation(line: 251, column: 30, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10640, file: !10566, line: 251, column: 10)
!10652 = !DILocation(line: 251, column: 40, scope: !10651)
!10653 = !DILocation(line: 0, scope: !10651)
!10654 = !DILocation(line: 251, column: 10, scope: !10640)
!10655 = !DILocation(line: 257, column: 15, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10651, file: !10566, line: 252, column: 7)
!10657 = !DILocation(line: 257, column: 51, scope: !10656)
!10658 = !DILocation(line: 257, column: 9, scope: !10656)
!10659 = !DILocation(line: 259, column: 15, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !10566, line: 259, column: 14)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !10566, line: 258, column: 9)
!10662 = !DILocation(line: 259, column: 29, scope: !10660)
!10663 = !DILocation(line: 259, column: 43, scope: !10660)
!10664 = !DILocation(line: 259, column: 14, scope: !10661)
!10665 = distinct !{!10665, !10658, !10666}
!10666 = !DILocation(line: 263, column: 9, scope: !10656)
!10667 = !DILocation(line: 271, column: 15, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10651, file: !10566, line: 266, column: 7)
!10669 = !DILocation(line: 271, column: 9, scope: !10668)
!10670 = !DILocation(line: 273, column: 15, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !10566, line: 273, column: 14)
!10672 = distinct !DILexicalBlock(scope: !10668, file: !10566, line: 272, column: 9)
!10673 = !DILocation(line: 273, column: 29, scope: !10671)
!10674 = !DILocation(line: 273, column: 43, scope: !10671)
!10675 = !DILocation(line: 273, column: 14, scope: !10672)
!10676 = distinct !{!10676, !10669, !10677}
!10677 = !DILocation(line: 277, column: 9, scope: !10668)
!10678 = !DILocation(line: 282, column: 27, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 282, column: 6)
!10680 = !DILocation(line: 282, column: 43, scope: !10679)
!10681 = !DILocation(line: 282, column: 69, scope: !10679)
!10682 = !DILocation(line: 282, column: 6, scope: !10571)
!10683 = !DILocation(line: 289, column: 9, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !10566, line: 289, column: 8)
!10685 = distinct !DILexicalBlock(scope: !10679, file: !10566, line: 283, column: 3)
!10686 = !DILocation(line: 289, column: 39, scope: !10684)
!10687 = !DILocation(line: 289, column: 60, scope: !10684)
!10688 = !DILocation(line: 290, column: 9, scope: !10684)
!10689 = !DILocation(line: 290, column: 39, scope: !10684)
!10690 = !DILocation(line: 290, column: 60, scope: !10684)
!10691 = !DILocation(line: 290, column: 70, scope: !10684)
!10692 = !DILocation(line: 290, column: 78, scope: !10684)
!10693 = !DILocation(line: 290, column: 100, scope: !10684)
!10694 = !DILocation(line: 289, column: 8, scope: !10685)
!10695 = !DILocation(line: 293, column: 11, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !10566, line: 293, column: 10)
!10697 = distinct !DILexicalBlock(scope: !10684, file: !10566, line: 291, column: 5)
!10698 = !DILocation(line: 293, column: 57, scope: !10696)
!10699 = !DILocation(line: 293, column: 80, scope: !10696)
!10700 = !DILocation(line: 293, column: 89, scope: !10696)
!10701 = !DILocation(line: 293, column: 10, scope: !10697)
!10702 = !DILocation(line: 307, column: 30, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !10566, line: 307, column: 10)
!10704 = distinct !DILexicalBlock(scope: !10684, file: !10566, line: 305, column: 5)
!10705 = !DILocation(line: 307, column: 39, scope: !10703)
!10706 = !DILocation(line: 307, column: 10, scope: !10704)
!10707 = !DILocation(line: 310, column: 9, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10703, file: !10566, line: 308, column: 7)
!10709 = !DILocation(line: 313, column: 21, scope: !10708)
!10710 = !DILocation(line: 316, column: 9, scope: !10708)
!10711 = !DILocation(line: 316, column: 15, scope: !10708)
!10712 = !DILocation(line: 316, column: 51, scope: !10708)
!10713 = !DILocation(line: 318, column: 15, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10715, file: !10566, line: 318, column: 14)
!10715 = distinct !DILexicalBlock(scope: !10708, file: !10566, line: 317, column: 9)
!10716 = !DILocation(line: 318, column: 29, scope: !10714)
!10717 = !DILocation(line: 318, column: 43, scope: !10714)
!10718 = !DILocation(line: 318, column: 14, scope: !10715)
!10719 = distinct !{!10719, !10710, !10720}
!10720 = !DILocation(line: 322, column: 9, scope: !10708)
!10721 = !DILocation(line: 330, column: 9, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10703, file: !10566, line: 328, column: 7)
!10723 = !DILocation(line: 333, column: 21, scope: !10722)
!10724 = !DILocation(line: 336, column: 9, scope: !10722)
!10725 = !DILocation(line: 336, column: 15, scope: !10722)
!10726 = !DILocation(line: 338, column: 15, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10728, file: !10566, line: 338, column: 14)
!10728 = distinct !DILexicalBlock(scope: !10722, file: !10566, line: 337, column: 9)
!10729 = !DILocation(line: 338, column: 29, scope: !10727)
!10730 = !DILocation(line: 338, column: 43, scope: !10727)
!10731 = !DILocation(line: 338, column: 14, scope: !10728)
!10732 = distinct !{!10732, !10724, !10733}
!10733 = !DILocation(line: 342, column: 9, scope: !10722)
!10734 = !DILocation(line: 0, scope: !10684)
!10735 = !DILocation(line: 347, column: 27, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 347, column: 6)
!10737 = !DILocation(line: 347, column: 43, scope: !10736)
!10738 = !DILocation(line: 347, column: 69, scope: !10736)
!10739 = !DILocation(line: 347, column: 6, scope: !10571)
!10740 = !DILocation(line: 353, column: 28, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !10566, line: 353, column: 8)
!10742 = distinct !DILexicalBlock(scope: !10736, file: !10566, line: 348, column: 3)
!10743 = !DILocation(line: 353, column: 37, scope: !10741)
!10744 = !DILocation(line: 353, column: 8, scope: !10742)
!10745 = !DILocation(line: 356, column: 7, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10741, file: !10566, line: 354, column: 5)
!10747 = !DILocation(line: 359, column: 19, scope: !10746)
!10748 = !DILocation(line: 362, column: 7, scope: !10746)
!10749 = !DILocation(line: 362, column: 13, scope: !10746)
!10750 = !DILocation(line: 362, column: 49, scope: !10746)
!10751 = !DILocation(line: 364, column: 13, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10753, file: !10566, line: 364, column: 12)
!10753 = distinct !DILexicalBlock(scope: !10746, file: !10566, line: 363, column: 7)
!10754 = !DILocation(line: 364, column: 27, scope: !10752)
!10755 = !DILocation(line: 364, column: 41, scope: !10752)
!10756 = !DILocation(line: 364, column: 12, scope: !10753)
!10757 = distinct !{!10757, !10748, !10758}
!10758 = !DILocation(line: 368, column: 7, scope: !10746)
!10759 = !DILocation(line: 373, column: 7, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10741, file: !10566, line: 371, column: 5)
!10761 = !DILocation(line: 376, column: 19, scope: !10760)
!10762 = !DILocation(line: 379, column: 7, scope: !10760)
!10763 = !DILocation(line: 379, column: 13, scope: !10760)
!10764 = !DILocation(line: 381, column: 13, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !10566, line: 381, column: 12)
!10766 = distinct !DILexicalBlock(scope: !10760, file: !10566, line: 380, column: 7)
!10767 = !DILocation(line: 381, column: 27, scope: !10765)
!10768 = !DILocation(line: 381, column: 41, scope: !10765)
!10769 = !DILocation(line: 381, column: 12, scope: !10766)
!10770 = distinct !{!10770, !10762, !10771}
!10771 = !DILocation(line: 385, column: 7, scope: !10760)
!10772 = !DILocation(line: 389, column: 27, scope: !10603)
!10773 = !DILocation(line: 389, column: 43, scope: !10603)
!10774 = !DILocation(line: 389, column: 69, scope: !10603)
!10775 = !DILocation(line: 389, column: 6, scope: !10571)
!10776 = !DILocation(line: 0, scope: !10602)
!10777 = !DILocation(line: 398, column: 8, scope: !10608)
!10778 = !DILocation(line: 398, column: 8, scope: !10602)
!10779 = !DILocation(line: 400, column: 7, scope: !10606)
!10780 = !DILocation(line: 400, column: 7, scope: !10607)
!10781 = !DILocation(line: 402, column: 5, scope: !10607)
!10782 = !DILocation(line: 404, column: 8, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10602, file: !10566, line: 404, column: 8)
!10784 = !DILocation(line: 404, column: 8, scope: !10602)
!10785 = !DILocation(line: 407, column: 7, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10783, file: !10566, line: 405, column: 5)
!10787 = !DILocation(line: 410, column: 19, scope: !10786)
!10788 = !DILocation(line: 412, column: 7, scope: !10786)
!10789 = !DILocation(line: 412, column: 13, scope: !10786)
!10790 = !DILocation(line: 414, column: 13, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !10566, line: 414, column: 12)
!10792 = distinct !DILexicalBlock(scope: !10786, file: !10566, line: 413, column: 7)
!10793 = !DILocation(line: 414, column: 27, scope: !10791)
!10794 = !DILocation(line: 414, column: 40, scope: !10791)
!10795 = !DILocation(line: 414, column: 12, scope: !10792)
!10796 = distinct !{!10796, !10788, !10797}
!10797 = !DILocation(line: 418, column: 7, scope: !10786)
!10798 = !DILocation(line: 422, column: 5, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10800, file: !10566, line: 422, column: 5)
!10800 = distinct !DILexicalBlock(scope: !10602, file: !10566, line: 422, column: 5)
!10801 = !DILocation(line: 422, column: 5, scope: !10800)
!10802 = !DILocation(line: 422, column: 5, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !10566, line: 422, column: 5)
!10804 = !DILocation(line: 422, column: 5, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !10566, line: 422, column: 5)
!10806 = distinct !DILexicalBlock(scope: !10799, file: !10566, line: 422, column: 5)
!10807 = !DILocation(line: 422, column: 5, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10806, file: !10566, line: 422, column: 5)
!10809 = !DILocation(line: 0, scope: !10799)
!10810 = !DILocation(line: 424, column: 28, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10602, file: !10566, line: 424, column: 8)
!10812 = !DILocation(line: 424, column: 38, scope: !10811)
!10813 = !DILocation(line: 0, scope: !10811)
!10814 = !DILocation(line: 424, column: 8, scope: !10602)
!10815 = !DILocation(line: 430, column: 13, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10811, file: !10566, line: 425, column: 5)
!10817 = !DILocation(line: 430, column: 49, scope: !10816)
!10818 = !DILocation(line: 430, column: 7, scope: !10816)
!10819 = !DILocation(line: 432, column: 13, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !10566, line: 432, column: 12)
!10821 = distinct !DILexicalBlock(scope: !10816, file: !10566, line: 431, column: 7)
!10822 = !DILocation(line: 432, column: 27, scope: !10820)
!10823 = !DILocation(line: 432, column: 41, scope: !10820)
!10824 = !DILocation(line: 432, column: 12, scope: !10821)
!10825 = distinct !{!10825, !10818, !10826}
!10826 = !DILocation(line: 436, column: 7, scope: !10816)
!10827 = !DILocation(line: 444, column: 13, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10811, file: !10566, line: 439, column: 5)
!10829 = !DILocation(line: 444, column: 7, scope: !10828)
!10830 = !DILocation(line: 446, column: 13, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10566, line: 446, column: 12)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !10566, line: 445, column: 7)
!10833 = !DILocation(line: 446, column: 27, scope: !10831)
!10834 = !DILocation(line: 446, column: 41, scope: !10831)
!10835 = !DILocation(line: 446, column: 12, scope: !10832)
!10836 = distinct !{!10836, !10829, !10837}
!10837 = !DILocation(line: 450, column: 7, scope: !10828)
!10838 = !DILocation(line: 454, column: 8, scope: !10602)
!10839 = !DILocation(line: 456, column: 7, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !10566, line: 455, column: 5)
!10841 = distinct !DILexicalBlock(scope: !10602, file: !10566, line: 454, column: 8)
!10842 = !DILocation(line: 457, column: 5, scope: !10840)
!10843 = !DILocation(line: 462, column: 31, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10571, file: !10566, line: 462, column: 7)
!10845 = !DILocation(line: 462, column: 41, scope: !10844)
!10846 = !DILocation(line: 462, column: 7, scope: !10571)
!10847 = !DILocation(line: 465, column: 8, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !10566, line: 465, column: 8)
!10849 = distinct !DILexicalBlock(scope: !10844, file: !10566, line: 463, column: 3)
!10850 = !DILocation(line: 465, column: 38, scope: !10848)
!10851 = !DILocation(line: 465, column: 8, scope: !10849)
!10852 = !DILocation(line: 467, column: 44, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !10566, line: 467, column: 10)
!10854 = distinct !DILexicalBlock(scope: !10848, file: !10566, line: 466, column: 5)
!10855 = !DILocation(line: 0, scope: !10853)
!10856 = !DILocation(line: 467, column: 10, scope: !10854)
!10857 = !DILocation(line: 483, column: 15, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10853, file: !10566, line: 468, column: 7)
!10859 = !DILocation(line: 483, column: 9, scope: !10858)
!10860 = !DILocation(line: 485, column: 15, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !10566, line: 485, column: 14)
!10862 = distinct !DILexicalBlock(scope: !10858, file: !10566, line: 484, column: 9)
!10863 = !DILocation(line: 485, column: 29, scope: !10861)
!10864 = !DILocation(line: 485, column: 43, scope: !10861)
!10865 = !DILocation(line: 485, column: 14, scope: !10862)
!10866 = distinct !{!10866, !10859, !10867}
!10867 = !DILocation(line: 489, column: 9, scope: !10858)
!10868 = !DILocation(line: 492, column: 9, scope: !10858)
!10869 = !DILocation(line: 498, column: 9, scope: !10858)
!10870 = !DILocation(line: 501, column: 21, scope: !10858)
!10871 = !DILocation(line: 504, column: 9, scope: !10858)
!10872 = !DILocation(line: 504, column: 15, scope: !10858)
!10873 = !DILocation(line: 504, column: 51, scope: !10858)
!10874 = !DILocation(line: 506, column: 15, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10876, file: !10566, line: 506, column: 14)
!10876 = distinct !DILexicalBlock(scope: !10858, file: !10566, line: 505, column: 9)
!10877 = !DILocation(line: 506, column: 29, scope: !10875)
!10878 = !DILocation(line: 506, column: 43, scope: !10875)
!10879 = !DILocation(line: 506, column: 14, scope: !10876)
!10880 = distinct !{!10880, !10871, !10881}
!10881 = !DILocation(line: 510, column: 9, scope: !10858)
!10882 = !DILocation(line: 521, column: 15, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10853, file: !10566, line: 513, column: 7)
!10884 = !DILocation(line: 521, column: 9, scope: !10883)
!10885 = !DILocation(line: 523, column: 15, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10887, file: !10566, line: 523, column: 14)
!10887 = distinct !DILexicalBlock(scope: !10883, file: !10566, line: 522, column: 9)
!10888 = !DILocation(line: 523, column: 29, scope: !10886)
!10889 = !DILocation(line: 523, column: 43, scope: !10886)
!10890 = !DILocation(line: 523, column: 14, scope: !10887)
!10891 = distinct !{!10891, !10884, !10892}
!10892 = !DILocation(line: 527, column: 9, scope: !10883)
!10893 = !DILocation(line: 533, column: 44, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !10566, line: 533, column: 10)
!10895 = distinct !DILexicalBlock(scope: !10848, file: !10566, line: 531, column: 5)
!10896 = !DILocation(line: 533, column: 10, scope: !10895)
!10897 = !DILocation(line: 540, column: 27, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !10566, line: 538, column: 7)
!10899 = !DILocation(line: 543, column: 14, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10898, file: !10566, line: 542, column: 13)
!10901 = !DILocation(line: 543, column: 81, scope: !10900)
!10902 = !DILocation(line: 543, column: 55, scope: !10900)
!10903 = !DILocation(line: 543, column: 92, scope: !10900)
!10904 = !DILocation(line: 544, column: 14, scope: !10900)
!10905 = !DILocation(line: 544, column: 80, scope: !10900)
!10906 = !DILocation(line: 544, column: 53, scope: !10900)
!10907 = !DILocation(line: 544, column: 111, scope: !10900)
!10908 = !DILocation(line: 545, column: 14, scope: !10900)
!10909 = !DILocation(line: 545, column: 80, scope: !10900)
!10910 = !DILocation(line: 545, column: 86, scope: !10900)
!10911 = !DILocation(line: 545, column: 53, scope: !10900)
!10912 = !DILocation(line: 545, column: 111, scope: !10900)
!10913 = !DILocation(line: 546, column: 14, scope: !10900)
!10914 = !DILocation(line: 546, column: 82, scope: !10900)
!10915 = !DILocation(line: 546, column: 101, scope: !10900)
!10916 = !DILocation(line: 546, column: 53, scope: !10900)
!10917 = !DILocation(line: 546, column: 126, scope: !10900)
!10918 = !DILocation(line: 547, column: 14, scope: !10900)
!10919 = !DILocation(line: 547, column: 80, scope: !10900)
!10920 = !DILocation(line: 547, column: 85, scope: !10900)
!10921 = !DILocation(line: 547, column: 53, scope: !10900)
!10922 = !DILocation(line: 547, column: 111, scope: !10900)
!10923 = !DILocation(line: 548, column: 14, scope: !10900)
!10924 = !DILocation(line: 548, column: 80, scope: !10900)
!10925 = !DILocation(line: 548, column: 85, scope: !10900)
!10926 = !DILocation(line: 548, column: 53, scope: !10900)
!10927 = !DILocation(line: 542, column: 13, scope: !10898)
!10928 = !DILocation(line: 563, column: 3, scope: !10571)
!10929 = !DILocation(line: 564, column: 1, scope: !10571)
!10930 = !DISubprogram(name: "HAL_GetTick", scope: !10931, file: !10931, line: 234, type: !135, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10931 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10932 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10566, file: !10566, line: 591, type: !10933, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !10944)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{!10569, !10935, !137}
!10935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10936, size: 32)
!10936 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10576, line: 92, baseType: !10937)
!10937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10576, line: 75, size: 160, elements: !10938)
!10938 = !{!10939, !10940, !10941, !10942, !10943}
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !10937, file: !10576, line: 77, baseType: !137, size: 32)
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !10937, file: !10576, line: 80, baseType: !137, size: 32, offset: 32)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10937, file: !10576, line: 83, baseType: !137, size: 32, offset: 64)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10937, file: !10576, line: 86, baseType: !137, size: 32, offset: 96)
!10943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10937, file: !10576, line: 89, baseType: !137, size: 32, offset: 128)
!10944 = !{!10945, !10946, !10947}
!10945 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !10932, file: !10566, line: 591, type: !10935)
!10946 = !DILocalVariable(name: "FLatency", arg: 2, scope: !10932, file: !10566, line: 591, type: !137)
!10947 = !DILocalVariable(name: "tickstart", scope: !10932, file: !10566, line: 593, type: !137)
!10948 = !DILocation(line: 0, scope: !10932)
!10949 = !DILocation(line: 596, column: 24, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 596, column: 6)
!10951 = !DILocation(line: 596, column: 6, scope: !10932)
!10952 = !DILocation(line: 610, column: 17, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 610, column: 6)
!10954 = !DILocation(line: 610, column: 15, scope: !10953)
!10955 = !DILocation(line: 610, column: 6, scope: !10932)
!10956 = !DILocation(line: 613, column: 5, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10953, file: !10566, line: 611, column: 3)
!10958 = !DILocation(line: 617, column: 8, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10957, file: !10566, line: 617, column: 8)
!10960 = !DILocation(line: 617, column: 34, scope: !10959)
!10961 = !DILocation(line: 617, column: 8, scope: !10957)
!10962 = !DILocation(line: 624, column: 27, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 624, column: 6)
!10964 = !DILocation(line: 624, column: 38, scope: !10963)
!10965 = !DILocation(line: 624, column: 60, scope: !10963)
!10966 = !DILocation(line: 624, column: 6, scope: !10932)
!10967 = !DILocation(line: 628, column: 40, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !10566, line: 628, column: 8)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !10566, line: 625, column: 3)
!10970 = !DILocation(line: 628, column: 63, scope: !10968)
!10971 = !DILocation(line: 628, column: 8, scope: !10969)
!10972 = !DILocation(line: 630, column: 7, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10968, file: !10566, line: 629, column: 5)
!10974 = !DILocation(line: 633, column: 29, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10969, file: !10566, line: 633, column: 8)
!10976 = !DILocation(line: 631, column: 5, scope: !10973)
!10977 = !DILocation(line: 633, column: 40, scope: !10975)
!10978 = !DILocation(line: 633, column: 63, scope: !10975)
!10979 = !DILocation(line: 633, column: 8, scope: !10969)
!10980 = !DILocation(line: 635, column: 7, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10975, file: !10566, line: 634, column: 5)
!10982 = !DILocation(line: 636, column: 5, scope: !10981)
!10983 = !DILocation(line: 639, column: 5, scope: !10969)
!10984 = !DILocation(line: 643, column: 27, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 643, column: 6)
!10986 = !DILocation(line: 640, column: 3, scope: !10969)
!10987 = !DILocation(line: 643, column: 38, scope: !10985)
!10988 = !DILocation(line: 643, column: 62, scope: !10985)
!10989 = !DILocation(line: 643, column: 6, scope: !10932)
!10990 = !DILocation(line: 648, column: 27, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !10566, line: 648, column: 8)
!10992 = distinct !DILexicalBlock(scope: !10985, file: !10566, line: 644, column: 3)
!10993 = !DILocation(line: 648, column: 8, scope: !10992)
!10994 = !DILocation(line: 651, column: 10, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !10566, line: 651, column: 10)
!10996 = distinct !DILexicalBlock(scope: !10991, file: !10566, line: 649, column: 5)
!10997 = !DILocation(line: 651, column: 46, scope: !10995)
!10998 = !DILocation(line: 651, column: 10, scope: !10996)
!10999 = !DILocation(line: 661, column: 10, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !10566, line: 661, column: 10)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !10566, line: 659, column: 5)
!11002 = distinct !DILexicalBlock(scope: !10991, file: !10566, line: 657, column: 13)
!11003 = !DILocation(line: 661, column: 46, scope: !11000)
!11004 = !DILocation(line: 661, column: 10, scope: !11001)
!11005 = !DILocation(line: 670, column: 10, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !10566, line: 670, column: 10)
!11007 = distinct !DILexicalBlock(scope: !11002, file: !10566, line: 668, column: 5)
!11008 = !DILocation(line: 670, column: 46, scope: !11006)
!11009 = !DILocation(line: 670, column: 10, scope: !11007)
!11010 = !DILocation(line: 676, column: 5, scope: !10992)
!11011 = !DILocation(line: 679, column: 17, scope: !10992)
!11012 = !DILocation(line: 681, column: 5, scope: !10992)
!11013 = !DILocation(line: 681, column: 12, scope: !10992)
!11014 = !DILocation(line: 681, column: 65, scope: !10992)
!11015 = !DILocation(line: 681, column: 78, scope: !10992)
!11016 = !DILocation(line: 681, column: 42, scope: !10992)
!11017 = !DILocation(line: 683, column: 12, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !10566, line: 683, column: 11)
!11019 = distinct !DILexicalBlock(scope: !10992, file: !10566, line: 682, column: 5)
!11020 = !DILocation(line: 683, column: 26, scope: !11018)
!11021 = !DILocation(line: 683, column: 39, scope: !11018)
!11022 = !DILocation(line: 683, column: 11, scope: !11019)
!11023 = distinct !{!11023, !11012, !11024}
!11024 = !DILocation(line: 687, column: 5, scope: !10992)
!11025 = !DILocation(line: 691, column: 17, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 691, column: 6)
!11027 = !DILocation(line: 691, column: 15, scope: !11026)
!11028 = !DILocation(line: 691, column: 6, scope: !10932)
!11029 = !DILocation(line: 694, column: 5, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11026, file: !10566, line: 692, column: 3)
!11031 = !DILocation(line: 698, column: 8, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11030, file: !10566, line: 698, column: 8)
!11033 = !DILocation(line: 698, column: 34, scope: !11032)
!11034 = !DILocation(line: 698, column: 8, scope: !11030)
!11035 = !DILocation(line: 705, column: 27, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 705, column: 6)
!11037 = !DILocation(line: 705, column: 38, scope: !11036)
!11038 = !DILocation(line: 705, column: 61, scope: !11036)
!11039 = !DILocation(line: 705, column: 6, scope: !10932)
!11040 = !DILocation(line: 708, column: 5, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11036, file: !10566, line: 706, column: 3)
!11042 = !DILocation(line: 712, column: 27, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !10932, file: !10566, line: 712, column: 6)
!11044 = !DILocation(line: 709, column: 3, scope: !11041)
!11045 = !DILocation(line: 712, column: 38, scope: !11043)
!11046 = !DILocation(line: 712, column: 61, scope: !11043)
!11047 = !DILocation(line: 712, column: 6, scope: !10932)
!11048 = !DILocation(line: 715, column: 5, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11043, file: !10566, line: 713, column: 3)
!11050 = !DILocation(line: 716, column: 3, scope: !11049)
!11051 = !DILocation(line: 719, column: 21, scope: !10932)
!11052 = !DILocation(line: 719, column: 70, scope: !10932)
!11053 = !DILocation(line: 719, column: 91, scope: !10932)
!11054 = !DILocation(line: 719, column: 50, scope: !10932)
!11055 = !DILocation(line: 719, column: 47, scope: !10932)
!11056 = !DILocation(line: 719, column: 19, scope: !10932)
!11057 = !DILocation(line: 722, column: 17, scope: !10932)
!11058 = !DILocation(line: 722, column: 3, scope: !10932)
!11059 = !DILocation(line: 724, column: 3, scope: !10932)
!11060 = !DILocation(line: 725, column: 1, scope: !10932)
!11061 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10566, file: !10566, line: 885, type: !135, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !11062)
!11062 = !{!11063, !11064, !11065, !11066}
!11063 = !DILocalVariable(name: "pllm", scope: !11061, file: !10566, line: 887, type: !137)
!11064 = !DILocalVariable(name: "pllvco", scope: !11061, file: !10566, line: 887, type: !137)
!11065 = !DILocalVariable(name: "pllp", scope: !11061, file: !10566, line: 887, type: !137)
!11066 = !DILocalVariable(name: "sysclockfreq", scope: !11061, file: !10566, line: 888, type: !137)
!11067 = !DILocation(line: 0, scope: !11061)
!11068 = !DILocation(line: 891, column: 16, scope: !11061)
!11069 = !DILocation(line: 891, column: 21, scope: !11061)
!11070 = !DILocation(line: 891, column: 3, scope: !11061)
!11071 = !DILocation(line: 907, column: 19, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !10566, line: 904, column: 5)
!11073 = distinct !DILexicalBlock(scope: !11061, file: !10566, line: 892, column: 3)
!11074 = !DILocation(line: 907, column: 27, scope: !11072)
!11075 = !DILocation(line: 908, column: 10, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11072, file: !10566, line: 908, column: 10)
!11077 = !DILocation(line: 0, scope: !11076)
!11078 = !DILocation(line: 918, column: 23, scope: !11072)
!11079 = !DILocation(line: 918, column: 82, scope: !11072)
!11080 = !DILocation(line: 920, column: 28, scope: !11072)
!11081 = !DILocation(line: 921, column: 7, scope: !11072)
!11082 = !DILocation(line: 0, scope: !11073)
!11083 = !DILocation(line: 929, column: 3, scope: !11061)
!11084 = !DISubprogram(name: "HAL_InitTick", scope: !10931, file: !10931, line: 223, type: !11085, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11085 = !DISubroutineType(types: !11086)
!11086 = !{!10569, !137}
!11087 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10566, file: !10566, line: 775, type: !11088, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !11090)
!11088 = !DISubroutineType(types: !11089)
!11089 = !{null, !137, !137, !137}
!11090 = !{!11091, !11092, !11093, !11094, !11104}
!11091 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11087, file: !10566, line: 775, type: !137)
!11092 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11087, file: !10566, line: 775, type: !137)
!11093 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11087, file: !10566, line: 775, type: !137)
!11094 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11087, file: !10566, line: 777, type: !11095)
!11095 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11096, line: 62, baseType: !11097)
!11096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11096, line: 46, size: 160, elements: !11098)
!11098 = !{!11099, !11100, !11101, !11102, !11103}
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11097, file: !11096, line: 48, baseType: !137, size: 32)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11097, file: !11096, line: 51, baseType: !137, size: 32, offset: 32)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11097, file: !11096, line: 54, baseType: !137, size: 32, offset: 64)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11097, file: !11096, line: 57, baseType: !137, size: 32, offset: 96)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11097, file: !11096, line: 60, baseType: !137, size: 32, offset: 128)
!11104 = !DILocalVariable(name: "tmpreg", scope: !11105, file: !10566, line: 787, type: !176)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !10566, line: 787, column: 5)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !10566, line: 783, column: 3)
!11107 = distinct !DILexicalBlock(scope: !11087, file: !10566, line: 782, column: 6)
!11108 = !DILocation(line: 0, scope: !11087)
!11109 = !DILocation(line: 777, column: 3, scope: !11087)
!11110 = !DILocation(line: 777, column: 20, scope: !11087)
!11111 = !DILocation(line: 782, column: 15, scope: !11107)
!11112 = !DILocation(line: 782, column: 6, scope: !11087)
!11113 = !DILocation(line: 787, column: 5, scope: !11105)
!11114 = !DILocation(line: 787, column: 5, scope: !11106)
!11115 = !DILocation(line: 790, column: 21, scope: !11106)
!11116 = !DILocation(line: 790, column: 25, scope: !11106)
!11117 = !DILocation(line: 791, column: 21, scope: !11106)
!11118 = !DILocation(line: 791, column: 26, scope: !11106)
!11119 = !DILocation(line: 792, column: 21, scope: !11106)
!11120 = !DILocation(line: 792, column: 27, scope: !11106)
!11121 = !DILocation(line: 793, column: 21, scope: !11106)
!11122 = !DILocation(line: 793, column: 26, scope: !11106)
!11123 = !DILocation(line: 794, column: 21, scope: !11106)
!11124 = !DILocation(line: 794, column: 31, scope: !11106)
!11125 = !DILocation(line: 795, column: 5, scope: !11106)
!11126 = !DILocation(line: 798, column: 5, scope: !11106)
!11127 = !DILocation(line: 804, column: 3, scope: !11106)
!11128 = !DILocation(line: 830, column: 1, scope: !11087)
!11129 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11096, file: !11096, line: 224, type: !11130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!11130 = !DISubroutineType(types: !11131)
!11131 = !{null, !2702, !11132}
!11132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11095, size: 32)
!11133 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10566, file: !10566, line: 841, type: !2819, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11134 = !DILocation(line: 843, column: 38, scope: !11133)
!11135 = !DILocation(line: 844, column: 1, scope: !11133)
!11136 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10566, file: !10566, line: 850, type: !2819, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11137 = !DILocation(line: 852, column: 38, scope: !11136)
!11138 = !DILocation(line: 853, column: 1, scope: !11136)
!11139 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10566, file: !10566, line: 941, type: !135, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11140 = !DILocation(line: 943, column: 10, scope: !11139)
!11141 = !DILocation(line: 943, column: 3, scope: !11139)
!11142 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10566, file: !10566, line: 952, type: !135, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11143 = !DILocation(line: 955, column: 11, scope: !11142)
!11144 = !DILocation(line: 955, column: 56, scope: !11142)
!11145 = !DILocation(line: 955, column: 78, scope: !11142)
!11146 = !DILocation(line: 955, column: 36, scope: !11142)
!11147 = !DILocation(line: 955, column: 33, scope: !11142)
!11148 = !DILocation(line: 955, column: 3, scope: !11142)
!11149 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10566, file: !10566, line: 964, type: !135, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11150 = !DILocation(line: 967, column: 11, scope: !11149)
!11151 = !DILocation(line: 967, column: 55, scope: !11149)
!11152 = !DILocation(line: 967, column: 77, scope: !11149)
!11153 = !DILocation(line: 967, column: 35, scope: !11149)
!11154 = !DILocation(line: 967, column: 32, scope: !11149)
!11155 = !DILocation(line: 967, column: 3, scope: !11149)
!11156 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10566, file: !10566, line: 977, type: !11157, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !11159)
!11157 = !DISubroutineType(types: !11158)
!11158 = !{null, !10574}
!11159 = !{!11160}
!11160 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11156, file: !10566, line: 977, type: !10574)
!11161 = !DILocation(line: 0, scope: !11156)
!11162 = !DILocation(line: 980, column: 22, scope: !11156)
!11163 = !DILocation(line: 980, column: 37, scope: !11156)
!11164 = !DILocation(line: 983, column: 12, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11156, file: !10566, line: 983, column: 6)
!11166 = !DILocation(line: 983, column: 15, scope: !11165)
!11167 = !DILocation(line: 983, column: 31, scope: !11165)
!11168 = !DILocation(line: 983, column: 6, scope: !11156)
!11169 = !DILocation(line: 985, column: 24, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11165, file: !10566, line: 984, column: 3)
!11171 = !DILocation(line: 985, column: 33, scope: !11170)
!11172 = !DILocation(line: 986, column: 3, scope: !11170)
!11173 = !DILocation(line: 987, column: 17, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11165, file: !10566, line: 987, column: 11)
!11175 = !DILocation(line: 987, column: 20, scope: !11174)
!11176 = !DILocation(line: 987, column: 35, scope: !11174)
!11177 = !DILocation(line: 0, scope: !11174)
!11178 = !DILocation(line: 987, column: 11, scope: !11165)
!11179 = !DILocation(line: 989, column: 33, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11174, file: !10566, line: 988, column: 3)
!11181 = !DILocation(line: 990, column: 3, scope: !11180)
!11182 = !DILocation(line: 993, column: 33, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11174, file: !10566, line: 992, column: 3)
!11184 = !DILocation(line: 997, column: 12, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11156, file: !10566, line: 997, column: 6)
!11186 = !DILocation(line: 997, column: 15, scope: !11185)
!11187 = !DILocation(line: 1003, column: 24, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11185, file: !10566, line: 1002, column: 3)
!11189 = !DILocation(line: 1003, column: 33, scope: !11188)
!11190 = !DILocation(line: 1006, column: 61, scope: !11156)
!11191 = !DILocation(line: 1006, column: 81, scope: !11156)
!11192 = !DILocation(line: 1006, column: 22, scope: !11156)
!11193 = !DILocation(line: 1006, column: 42, scope: !11156)
!11194 = !DILocation(line: 1009, column: 12, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11156, file: !10566, line: 1009, column: 6)
!11196 = !DILocation(line: 1009, column: 17, scope: !11195)
!11197 = !DILocation(line: 1009, column: 35, scope: !11195)
!11198 = !DILocation(line: 1009, column: 6, scope: !11156)
!11199 = !DILocation(line: 1011, column: 24, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !10566, line: 1010, column: 3)
!11201 = !DILocation(line: 1011, column: 33, scope: !11200)
!11202 = !DILocation(line: 1012, column: 3, scope: !11200)
!11203 = !DILocation(line: 1013, column: 17, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11195, file: !10566, line: 1013, column: 11)
!11205 = !DILocation(line: 1013, column: 22, scope: !11204)
!11206 = !DILocation(line: 1013, column: 39, scope: !11204)
!11207 = !DILocation(line: 0, scope: !11204)
!11208 = !DILocation(line: 1013, column: 11, scope: !11195)
!11209 = !DILocation(line: 1015, column: 33, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11204, file: !10566, line: 1014, column: 3)
!11211 = !DILocation(line: 1016, column: 3, scope: !11210)
!11212 = !DILocation(line: 1019, column: 33, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11204, file: !10566, line: 1018, column: 3)
!11214 = !DILocation(line: 1023, column: 12, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11156, file: !10566, line: 1023, column: 6)
!11216 = !DILocation(line: 1023, column: 16, scope: !11215)
!11217 = !DILocation(line: 1029, column: 24, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11215, file: !10566, line: 1028, column: 3)
!11219 = !DILocation(line: 1029, column: 33, scope: !11218)
!11220 = !DILocation(line: 1033, column: 12, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11156, file: !10566, line: 1033, column: 6)
!11222 = !DILocation(line: 1033, column: 15, scope: !11221)
!11223 = !DILocation(line: 1033, column: 30, scope: !11221)
!11224 = !DILocation(line: 1033, column: 6, scope: !11156)
!11225 = !DILocation(line: 1039, column: 28, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11221, file: !10566, line: 1038, column: 3)
!11227 = !DILocation(line: 1039, column: 37, scope: !11226)
!11228 = !DILocation(line: 1041, column: 54, scope: !11156)
!11229 = !DILocation(line: 1041, column: 62, scope: !11156)
!11230 = !DILocation(line: 1041, column: 26, scope: !11156)
!11231 = !DILocation(line: 1041, column: 36, scope: !11156)
!11232 = !DILocation(line: 1042, column: 49, scope: !11156)
!11233 = !DILocation(line: 1042, column: 57, scope: !11156)
!11234 = !DILocation(line: 1042, column: 26, scope: !11156)
!11235 = !DILocation(line: 1042, column: 31, scope: !11156)
!11236 = !DILocation(line: 1043, column: 50, scope: !11156)
!11237 = !DILocation(line: 1043, column: 78, scope: !11156)
!11238 = !DILocation(line: 1043, column: 26, scope: !11156)
!11239 = !DILocation(line: 1043, column: 31, scope: !11156)
!11240 = !DILocation(line: 1044, column: 52, scope: !11156)
!11241 = !DILocation(line: 1044, column: 102, scope: !11156)
!11242 = !DILocation(line: 1044, column: 109, scope: !11156)
!11243 = !DILocation(line: 1044, column: 26, scope: !11156)
!11244 = !DILocation(line: 1044, column: 31, scope: !11156)
!11245 = !DILocation(line: 1045, column: 50, scope: !11156)
!11246 = !DILocation(line: 1045, column: 78, scope: !11156)
!11247 = !DILocation(line: 1045, column: 26, scope: !11156)
!11248 = !DILocation(line: 1045, column: 31, scope: !11156)
!11249 = !DILocation(line: 1046, column: 1, scope: !11156)
!11250 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10566, file: !10566, line: 1056, type: !11251, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !11253)
!11251 = !DISubroutineType(types: !11252)
!11252 = !{null, !10935, !149}
!11253 = !{!11254, !11255}
!11254 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11250, file: !10566, line: 1056, type: !10935)
!11255 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11250, file: !10566, line: 1056, type: !149)
!11256 = !DILocation(line: 0, scope: !11250)
!11257 = !DILocation(line: 1059, column: 22, scope: !11250)
!11258 = !DILocation(line: 1059, column: 32, scope: !11250)
!11259 = !DILocation(line: 1062, column: 53, scope: !11250)
!11260 = !DILocation(line: 1062, column: 58, scope: !11250)
!11261 = !DILocation(line: 1062, column: 22, scope: !11250)
!11262 = !DILocation(line: 1062, column: 35, scope: !11250)
!11263 = !DILocation(line: 1065, column: 54, scope: !11250)
!11264 = !DILocation(line: 1065, column: 59, scope: !11250)
!11265 = !DILocation(line: 1065, column: 22, scope: !11250)
!11266 = !DILocation(line: 1065, column: 36, scope: !11250)
!11267 = !DILocation(line: 1068, column: 55, scope: !11250)
!11268 = !DILocation(line: 1068, column: 60, scope: !11250)
!11269 = !DILocation(line: 1068, column: 22, scope: !11250)
!11270 = !DILocation(line: 1068, column: 37, scope: !11250)
!11271 = !DILocation(line: 1071, column: 56, scope: !11250)
!11272 = !DILocation(line: 1071, column: 79, scope: !11250)
!11273 = !DILocation(line: 1071, column: 22, scope: !11250)
!11274 = !DILocation(line: 1071, column: 37, scope: !11250)
!11275 = !DILocation(line: 1074, column: 34, scope: !11250)
!11276 = !DILocation(line: 1074, column: 38, scope: !11250)
!11277 = !DILocation(line: 1074, column: 14, scope: !11250)
!11278 = !DILocation(line: 1075, column: 1, scope: !11250)
!11279 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10566, file: !10566, line: 1082, type: !2819, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11280 = !DILocation(line: 1085, column: 6, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11279, file: !10566, line: 1085, column: 6)
!11282 = !DILocation(line: 1085, column: 6, scope: !11279)
!11283 = !DILocation(line: 1088, column: 5, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11281, file: !10566, line: 1086, column: 3)
!11285 = !DILocation(line: 1091, column: 5, scope: !11284)
!11286 = !DILocation(line: 1092, column: 3, scope: !11284)
!11287 = !DILocation(line: 1093, column: 1, scope: !11279)
!11288 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10566, file: !10566, line: 1099, type: !2819, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2630, retainedNodes: !162)
!11289 = !DILocation(line: 1104, column: 1, scope: !11288)
!11290 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11291, file: !11291, line: 257, type: !6392, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11292)
!11291 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11292 = !{!11293}
!11293 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11290, file: !11291, line: 257, type: !137)
!11294 = !DILocation(line: 0, scope: !11290)
!11295 = !DILocation(line: 260, column: 3, scope: !11290)
!11296 = !DILocation(line: 261, column: 1, scope: !11290)
!11297 = distinct !DISubprogram(name: "LL_InitTick", scope: !11298, file: !11298, line: 260, type: !8996, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11299)
!11298 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11299 = !{!11300, !11301}
!11300 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11297, file: !11298, line: 260, type: !137)
!11301 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11297, file: !11298, line: 260, type: !137)
!11302 = !DILocation(line: 0, scope: !11297)
!11303 = !DILocation(line: 263, column: 46, scope: !11297)
!11304 = !DILocation(line: 263, column: 55, scope: !11297)
!11305 = !DILocation(line: 263, column: 18, scope: !11297)
!11306 = !DILocation(line: 264, column: 18, scope: !11297)
!11307 = !DILocation(line: 265, column: 18, scope: !11297)
!11308 = !DILocation(line: 267, column: 1, scope: !11297)
!11309 = distinct !DISubprogram(name: "LL_mDelay", scope: !11291, file: !11291, line: 273, type: !6392, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11310)
!11310 = !{!11311, !11312}
!11311 = !DILocalVariable(name: "Delay", arg: 1, scope: !11309, file: !11291, line: 273, type: !137)
!11312 = !DILocalVariable(name: "tmp", scope: !11309, file: !11291, line: 275, type: !176)
!11313 = !DILocation(line: 0, scope: !11309)
!11314 = !DILocation(line: 275, column: 3, scope: !11309)
!11315 = !DILocation(line: 275, column: 18, scope: !11309)
!11316 = !DILocation(line: 275, column: 33, scope: !11309)
!11317 = !DILocation(line: 277, column: 10, scope: !11309)
!11318 = !DILocation(line: 280, column: 12, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11309, file: !11291, line: 280, column: 6)
!11320 = !DILocation(line: 285, column: 3, scope: !11309)
!11321 = !DILocation(line: 287, column: 18, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11323, file: !11291, line: 287, column: 8)
!11323 = distinct !DILexicalBlock(scope: !11309, file: !11291, line: 286, column: 3)
!11324 = !DILocation(line: 292, column: 1, scope: !11309)
!11325 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11291, file: !11291, line: 323, type: !6392, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11326)
!11326 = !{!11327}
!11327 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11325, file: !11291, line: 323, type: !137)
!11328 = !DILocation(line: 0, scope: !11325)
!11329 = !DILocation(line: 326, column: 19, scope: !11325)
!11330 = !DILocation(line: 327, column: 1, scope: !11325)
!11331 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11291, file: !11291, line: 338, type: !11332, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11335)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!11334, !137}
!11334 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !697, line: 201, baseType: !696)
!11335 = !{!11336, !11337, !11338, !11339, !11340}
!11336 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11331, file: !11291, line: 338, type: !137)
!11337 = !DILocalVariable(name: "timeout", scope: !11331, file: !11291, line: 340, type: !137)
!11338 = !DILocalVariable(name: "getlatency", scope: !11331, file: !11291, line: 341, type: !137)
!11339 = !DILocalVariable(name: "latency", scope: !11331, file: !11291, line: 342, type: !137)
!11340 = !DILocalVariable(name: "status", scope: !11331, file: !11291, line: 343, type: !11334)
!11341 = !DILocation(line: 0, scope: !11331)
!11342 = !DILocation(line: 347, column: 21, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11331, file: !11291, line: 347, column: 6)
!11344 = !DILocation(line: 347, column: 6, scope: !11331)
!11345 = !DILocation(line: 353, column: 8, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !11291, line: 353, column: 8)
!11347 = distinct !DILexicalBlock(scope: !11343, file: !11291, line: 352, column: 3)
!11348 = !DILocation(line: 353, column: 40, scope: !11346)
!11349 = !DILocation(line: 353, column: 8, scope: !11347)
!11350 = !DILocation(line: 374, column: 55, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11352, file: !11291, line: 374, column: 10)
!11352 = distinct !DILexicalBlock(scope: !11346, file: !11291, line: 354, column: 5)
!11353 = !DILocation(line: 368, column: 26, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11352, file: !11291, line: 368, column: 10)
!11355 = !DILocation(line: 368, column: 55, scope: !11354)
!11356 = !DILocation(line: 380, column: 57, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11291, line: 380, column: 12)
!11358 = distinct !DILexicalBlock(scope: !11351, file: !11291, line: 379, column: 7)
!11359 = !DILocation(line: 387, column: 8, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11347, file: !11291, line: 387, column: 8)
!11361 = !DILocation(line: 387, column: 40, scope: !11360)
!11362 = !DILocation(line: 387, column: 8, scope: !11347)
!11363 = !DILocation(line: 407, column: 26, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11291, line: 407, column: 10)
!11365 = distinct !DILexicalBlock(scope: !11360, file: !11291, line: 388, column: 5)
!11366 = !DILocation(line: 407, column: 55, scope: !11364)
!11367 = !DILocation(line: 413, column: 28, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11291, line: 413, column: 12)
!11369 = distinct !DILexicalBlock(scope: !11364, file: !11291, line: 412, column: 7)
!11370 = !DILocation(line: 413, column: 57, scope: !11368)
!11371 = !DILocation(line: 0, scope: !11347)
!11372 = !DILocation(line: 420, column: 8, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11347, file: !11291, line: 420, column: 8)
!11374 = !DILocation(line: 420, column: 40, scope: !11373)
!11375 = !DILocation(line: 420, column: 8, scope: !11347)
!11376 = !DILocation(line: 429, column: 26, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !11291, line: 429, column: 10)
!11378 = distinct !DILexicalBlock(scope: !11373, file: !11291, line: 421, column: 5)
!11379 = !DILocation(line: 429, column: 55, scope: !11377)
!11380 = !DILocation(line: 435, column: 28, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !11291, line: 435, column: 12)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !11291, line: 434, column: 7)
!11383 = !DILocation(line: 435, column: 57, scope: !11381)
!11384 = !DILocation(line: 444, column: 5, scope: !11347)
!11385 = !DILocation(line: 448, column: 5, scope: !11347)
!11386 = !DILocation(line: 451, column: 18, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11347, file: !11291, line: 449, column: 5)
!11388 = !DILocation(line: 452, column: 12, scope: !11387)
!11389 = !DILocation(line: 453, column: 26, scope: !11347)
!11390 = !DILocation(line: 453, column: 38, scope: !11347)
!11391 = !DILocation(line: 453, column: 5, scope: !11387)
!11392 = distinct !{!11392, !11385, !11393}
!11393 = !DILocation(line: 453, column: 54, scope: !11347)
!11394 = !DILocation(line: 0, scope: !11343)
!11395 = !DILocation(line: 464, column: 3, scope: !11331)
!11396 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11397, file: !11397, line: 519, type: !135, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11397 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11398 = !DILocation(line: 521, column: 21, scope: !11396)
!11399 = !DILocation(line: 521, column: 3, scope: !11396)
!11400 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6150, file: !6150, line: 1543, type: !6392, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11401)
!11401 = !{!11402}
!11402 = !DILocalVariable(name: "Latency", arg: 1, scope: !11400, file: !6150, line: 1543, type: !137)
!11403 = !DILocation(line: 0, scope: !11400)
!11404 = !DILocation(line: 1545, column: 3, scope: !11400)
!11405 = !DILocation(line: 1546, column: 1, scope: !11400)
!11406 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6150, file: !6150, line: 1569, type: !135, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11407 = !DILocation(line: 1571, column: 21, scope: !11406)
!11408 = !DILocation(line: 1571, column: 3, scope: !11406)
!11409 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11291, file: !11291, line: 483, type: !11410, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11426)
!11410 = !DISubroutineType(types: !11411)
!11411 = !{!11334, !11412, !11419}
!11412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11413, size: 32)
!11413 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11298, line: 114, baseType: !11414)
!11414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11298, line: 94, size: 96, elements: !11415)
!11415 = !{!11416, !11417, !11418}
!11416 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11414, file: !11298, line: 96, baseType: !137, size: 32)
!11417 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11414, file: !11298, line: 102, baseType: !137, size: 32, offset: 32)
!11418 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11414, file: !11298, line: 109, baseType: !137, size: 32, offset: 64)
!11419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11420, size: 32)
!11420 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11298, line: 139, baseType: !11421)
!11421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11298, line: 119, size: 96, elements: !11422)
!11422 = !{!11423, !11424, !11425}
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11421, file: !11298, line: 121, baseType: !137, size: 32)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11421, file: !11298, line: 127, baseType: !137, size: 32, offset: 32)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11421, file: !11298, line: 133, baseType: !137, size: 32, offset: 64)
!11426 = !{!11427, !11428, !11429, !11430}
!11427 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11409, file: !11291, line: 483, type: !11412)
!11428 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11409, file: !11291, line: 484, type: !11419)
!11429 = !DILocalVariable(name: "status", scope: !11409, file: !11291, line: 486, type: !11334)
!11430 = !DILocalVariable(name: "pllfreq", scope: !11409, file: !11291, line: 487, type: !137)
!11431 = !DILocation(line: 0, scope: !11409)
!11432 = !DILocation(line: 490, column: 6, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11409, file: !11291, line: 490, column: 6)
!11434 = !DILocation(line: 490, column: 25, scope: !11433)
!11435 = !DILocation(line: 490, column: 6, scope: !11409)
!11436 = !DILocation(line: 493, column: 15, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11433, file: !11291, line: 491, column: 3)
!11438 = !DILocation(line: 496, column: 8, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11437, file: !11291, line: 496, column: 8)
!11440 = !DILocation(line: 496, column: 29, scope: !11439)
!11441 = !DILocation(line: 496, column: 8, scope: !11437)
!11442 = !DILocation(line: 498, column: 7, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11439, file: !11291, line: 497, column: 5)
!11444 = !DILocation(line: 499, column: 7, scope: !11443)
!11445 = !DILocation(line: 499, column: 14, scope: !11443)
!11446 = !DILocation(line: 499, column: 35, scope: !11443)
!11447 = distinct !{!11447, !11444, !11448}
!11448 = !DILocation(line: 502, column: 7, scope: !11443)
!11449 = !DILocation(line: 506, column: 76, scope: !11437)
!11450 = !DILocation(line: 506, column: 103, scope: !11437)
!11451 = !DILocation(line: 507, column: 54, scope: !11437)
!11452 = !DILocation(line: 506, column: 5, scope: !11437)
!11453 = !DILocation(line: 510, column: 14, scope: !11437)
!11454 = !DILocation(line: 511, column: 3, scope: !11437)
!11455 = !DILocation(line: 0, scope: !11433)
!11456 = !DILocation(line: 518, column: 3, scope: !11409)
!11457 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11291, file: !11291, line: 642, type: !11458, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11460)
!11458 = !DISubroutineType(types: !11459)
!11459 = !{!11334}
!11460 = !{!11461}
!11461 = !DILocalVariable(name: "status", scope: !11457, file: !11291, line: 644, type: !11334)
!11462 = !DILocation(line: 0, scope: !11457)
!11463 = !DILocation(line: 647, column: 6, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11457, file: !11291, line: 647, column: 6)
!11465 = !DILocation(line: 647, column: 27, scope: !11464)
!11466 = !DILocation(line: 663, column: 6, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11457, file: !11291, line: 663, column: 6)
!11468 = !DILocation(line: 663, column: 30, scope: !11467)
!11469 = !DILocation(line: 663, column: 6, scope: !11457)
!11470 = !DILocation(line: 669, column: 3, scope: !11457)
!11471 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11291, file: !11291, line: 611, type: !11472, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11474)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!137, !137, !11412}
!11474 = !{!11475, !11476, !11477}
!11475 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11471, file: !11291, line: 611, type: !137)
!11476 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11471, file: !11291, line: 611, type: !11412)
!11477 = !DILocalVariable(name: "pllfreq", scope: !11471, file: !11291, line: 613, type: !137)
!11478 = !DILocation(line: 0, scope: !11471)
!11479 = !DILocation(line: 622, column: 56, scope: !11471)
!11480 = !DILocation(line: 622, column: 61, scope: !11471)
!11481 = !DILocation(line: 622, column: 32, scope: !11471)
!11482 = !DILocation(line: 626, column: 45, scope: !11471)
!11483 = !DILocation(line: 626, column: 50, scope: !11471)
!11484 = !DILocation(line: 626, column: 21, scope: !11471)
!11485 = !DILocation(line: 630, column: 47, scope: !11471)
!11486 = !DILocation(line: 630, column: 82, scope: !11471)
!11487 = !DILocation(line: 630, column: 21, scope: !11471)
!11488 = !DILocation(line: 633, column: 3, scope: !11471)
!11489 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8336, file: !8336, line: 3007, type: !135, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11490 = !DILocation(line: 3009, column: 11, scope: !11489)
!11491 = !DILocation(line: 3009, column: 44, scope: !11489)
!11492 = !DILocation(line: 3009, column: 3, scope: !11489)
!11493 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8336, file: !8336, line: 2987, type: !2819, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11494 = !DILocation(line: 2989, column: 3, scope: !11493)
!11495 = !DILocation(line: 2990, column: 1, scope: !11493)
!11496 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8336, file: !8336, line: 4304, type: !8470, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11497)
!11497 = !{!11498, !11499, !11500, !11501}
!11498 = !DILocalVariable(name: "Source", arg: 1, scope: !11496, file: !8336, line: 4304, type: !137)
!11499 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11496, file: !8336, line: 4304, type: !137)
!11500 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11496, file: !8336, line: 4304, type: !137)
!11501 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11496, file: !8336, line: 4304, type: !137)
!11502 = !DILocation(line: 0, scope: !11496)
!11503 = !DILocation(line: 4306, column: 3, scope: !11496)
!11504 = !DILocation(line: 4308, column: 3, scope: !11496)
!11505 = !DILocation(line: 4312, column: 1, scope: !11496)
!11506 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11291, file: !11291, line: 681, type: !11507, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11509)
!11507 = !DISubroutineType(types: !11508)
!11508 = !{!11334, !137, !11419}
!11509 = !{!11510, !11511, !11512, !11513}
!11510 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11506, file: !11291, line: 681, type: !137)
!11511 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11506, file: !11291, line: 681, type: !11419)
!11512 = !DILocalVariable(name: "status", scope: !11506, file: !11291, line: 683, type: !11334)
!11513 = !DILocalVariable(name: "hclk_frequency", scope: !11506, file: !11291, line: 684, type: !137)
!11514 = !DILocation(line: 0, scope: !11506)
!11515 = !DILocation(line: 691, column: 20, scope: !11506)
!11516 = !DILocation(line: 694, column: 6, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11506, file: !11291, line: 694, column: 6)
!11518 = !DILocation(line: 694, column: 22, scope: !11517)
!11519 = !DILocation(line: 694, column: 6, scope: !11506)
!11520 = !DILocation(line: 697, column: 14, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11517, file: !11291, line: 695, column: 3)
!11522 = !DILocation(line: 701, column: 13, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11506, file: !11291, line: 701, column: 6)
!11524 = !DILocation(line: 701, column: 6, scope: !11506)
!11525 = !DILocation(line: 704, column: 5, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11523, file: !11291, line: 702, column: 3)
!11527 = !DILocation(line: 705, column: 5, scope: !11526)
!11528 = !DILocation(line: 705, column: 12, scope: !11526)
!11529 = !DILocation(line: 705, column: 33, scope: !11526)
!11530 = distinct !{!11530, !11527, !11531}
!11531 = !DILocation(line: 708, column: 5, scope: !11526)
!11532 = !DILocation(line: 711, column: 49, scope: !11526)
!11533 = !DILocation(line: 711, column: 5, scope: !11526)
!11534 = !DILocation(line: 712, column: 5, scope: !11526)
!11535 = !DILocation(line: 713, column: 5, scope: !11526)
!11536 = !DILocation(line: 713, column: 12, scope: !11526)
!11537 = !DILocation(line: 713, column: 37, scope: !11526)
!11538 = distinct !{!11538, !11535, !11539}
!11539 = !DILocation(line: 716, column: 5, scope: !11526)
!11540 = !DILocation(line: 719, column: 50, scope: !11526)
!11541 = !DILocation(line: 719, column: 5, scope: !11526)
!11542 = !DILocation(line: 720, column: 50, scope: !11526)
!11543 = !DILocation(line: 720, column: 5, scope: !11526)
!11544 = !DILocation(line: 721, column: 3, scope: !11526)
!11545 = !DILocation(line: 724, column: 6, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11506, file: !11291, line: 724, column: 6)
!11547 = !DILocation(line: 724, column: 22, scope: !11546)
!11548 = !DILocation(line: 724, column: 6, scope: !11506)
!11549 = !DILocation(line: 727, column: 14, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11546, file: !11291, line: 725, column: 3)
!11551 = !DILocation(line: 728, column: 3, scope: !11550)
!11552 = !DILocation(line: 731, column: 13, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11506, file: !11291, line: 731, column: 6)
!11554 = !DILocation(line: 731, column: 6, scope: !11506)
!11555 = !DILocation(line: 733, column: 5, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11553, file: !11291, line: 732, column: 3)
!11557 = !DILocation(line: 734, column: 3, scope: !11556)
!11558 = !DILocation(line: 736, column: 3, scope: !11506)
!11559 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8336, file: !8336, line: 4184, type: !2819, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11560 = !DILocation(line: 4186, column: 3, scope: !11559)
!11561 = !DILocation(line: 4187, column: 1, scope: !11559)
!11562 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8336, file: !8336, line: 4205, type: !135, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11563 = !DILocation(line: 4207, column: 11, scope: !11562)
!11564 = !DILocation(line: 4207, column: 44, scope: !11562)
!11565 = !DILocation(line: 4207, column: 3, scope: !11562)
!11566 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8336, file: !8336, line: 3224, type: !6392, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11567)
!11567 = !{!11568}
!11568 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11566, file: !8336, line: 3224, type: !137)
!11569 = !DILocation(line: 0, scope: !11566)
!11570 = !DILocation(line: 3226, column: 3, scope: !11566)
!11571 = !DILocation(line: 3227, column: 1, scope: !11566)
!11572 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8336, file: !8336, line: 3188, type: !6392, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11573)
!11573 = !{!11574}
!11574 = !DILocalVariable(name: "Source", arg: 1, scope: !11572, file: !8336, line: 3188, type: !137)
!11575 = !DILocation(line: 0, scope: !11572)
!11576 = !DILocation(line: 3190, column: 3, scope: !11572)
!11577 = !DILocation(line: 3191, column: 1, scope: !11572)
!11578 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8336, file: !8336, line: 3204, type: !135, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11579 = !DILocation(line: 3206, column: 21, scope: !11578)
!11580 = !DILocation(line: 3206, column: 3, scope: !11578)
!11581 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8336, file: !8336, line: 3240, type: !6392, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11582)
!11582 = !{!11583}
!11583 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11581, file: !8336, line: 3240, type: !137)
!11584 = !DILocation(line: 0, scope: !11581)
!11585 = !DILocation(line: 3242, column: 3, scope: !11581)
!11586 = !DILocation(line: 3243, column: 1, scope: !11581)
!11587 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8336, file: !8336, line: 3256, type: !6392, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11588)
!11588 = !{!11589}
!11589 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11587, file: !8336, line: 3256, type: !137)
!11590 = !DILocation(line: 0, scope: !11587)
!11591 = !DILocation(line: 3258, column: 3, scope: !11587)
!11592 = !DILocation(line: 3259, column: 1, scope: !11587)
!11593 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8336, file: !8336, line: 5153, type: !135, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11594 = !DILocation(line: 5155, column: 11, scope: !11593)
!11595 = !DILocation(line: 5155, column: 47, scope: !11593)
!11596 = !DILocation(line: 5155, column: 3, scope: !11593)
!11597 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11291, file: !11291, line: 540, type: !11598, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !11600)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{!11334, !137, !137, !11412, !11419}
!11600 = !{!11601, !11602, !11603, !11604, !11605, !11606}
!11601 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11597, file: !11291, line: 540, type: !137)
!11602 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11597, file: !11291, line: 540, type: !137)
!11603 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11597, file: !11291, line: 541, type: !11412)
!11604 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11597, file: !11291, line: 541, type: !11419)
!11605 = !DILocalVariable(name: "status", scope: !11597, file: !11291, line: 543, type: !11334)
!11606 = !DILocalVariable(name: "pllfreq", scope: !11597, file: !11291, line: 544, type: !137)
!11607 = !DILocation(line: 0, scope: !11597)
!11608 = !DILocation(line: 551, column: 6, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11597, file: !11291, line: 551, column: 6)
!11610 = !DILocation(line: 551, column: 25, scope: !11609)
!11611 = !DILocation(line: 551, column: 6, scope: !11597)
!11612 = !DILocation(line: 554, column: 15, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11609, file: !11291, line: 552, column: 3)
!11614 = !DILocation(line: 557, column: 8, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11613, file: !11291, line: 557, column: 8)
!11616 = !DILocation(line: 557, column: 29, scope: !11615)
!11617 = !DILocation(line: 557, column: 8, scope: !11613)
!11618 = !DILocation(line: 560, column: 20, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !11291, line: 560, column: 10)
!11620 = distinct !DILexicalBlock(scope: !11615, file: !11291, line: 558, column: 5)
!11621 = !DILocation(line: 560, column: 10, scope: !11620)
!11622 = !DILocation(line: 562, column: 9, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11619, file: !11291, line: 561, column: 7)
!11624 = !DILocation(line: 563, column: 7, scope: !11623)
!11625 = !DILocation(line: 566, column: 9, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11619, file: !11291, line: 565, column: 7)
!11627 = !DILocation(line: 570, column: 7, scope: !11620)
!11628 = !DILocation(line: 571, column: 7, scope: !11620)
!11629 = !DILocation(line: 571, column: 14, scope: !11620)
!11630 = !DILocation(line: 571, column: 35, scope: !11620)
!11631 = distinct !{!11631, !11628, !11632}
!11632 = !DILocation(line: 574, column: 7, scope: !11620)
!11633 = !DILocation(line: 578, column: 76, scope: !11613)
!11634 = !DILocation(line: 578, column: 103, scope: !11613)
!11635 = !DILocation(line: 579, column: 54, scope: !11613)
!11636 = !DILocation(line: 578, column: 5, scope: !11613)
!11637 = !DILocation(line: 582, column: 14, scope: !11613)
!11638 = !DILocation(line: 583, column: 3, scope: !11613)
!11639 = !DILocation(line: 0, scope: !11609)
!11640 = !DILocation(line: 590, column: 3, scope: !11597)
!11641 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8336, file: !8336, line: 2969, type: !135, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11642 = !DILocation(line: 2971, column: 11, scope: !11641)
!11643 = !DILocation(line: 2971, column: 44, scope: !11641)
!11644 = !DILocation(line: 2971, column: 3, scope: !11641)
!11645 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8336, file: !8336, line: 2929, type: !2819, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11646 = !DILocation(line: 2931, column: 3, scope: !11645)
!11647 = !DILocation(line: 2932, column: 1, scope: !11645)
!11648 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8336, file: !8336, line: 2939, type: !2819, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11649 = !DILocation(line: 2941, column: 3, scope: !11648)
!11650 = !DILocation(line: 2942, column: 1, scope: !11648)
!11651 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8336, file: !8336, line: 2949, type: !2819, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2715, retainedNodes: !162)
!11652 = !DILocation(line: 2951, column: 3, scope: !11651)
!11653 = !DILocation(line: 2952, column: 1, scope: !11651)
!11654 = distinct !DISubprogram(name: "z_device_state_init", scope: !11655, file: !11655, line: 23, type: !2819, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11656)
!11655 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11656 = !{!11657}
!11657 = !DILocalVariable(name: "dev", scope: !11654, file: !11655, line: 25, type: !11658)
!11658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11659, size: 32)
!11659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11660)
!11660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !196, line: 378, size: 192, elements: !11661)
!11661 = !{!11662, !11663, !11664, !11665, !11671, !11672}
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11660, file: !196, line: 380, baseType: !199, size: 32)
!11663 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11660, file: !196, line: 382, baseType: !13, size: 32, offset: 32)
!11664 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11660, file: !196, line: 384, baseType: !13, size: 32, offset: 64)
!11665 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11660, file: !196, line: 386, baseType: !11666, size: 32, offset: 96)
!11666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11667, size: 32)
!11667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !196, line: 351, size: 16, elements: !11668)
!11668 = !{!11669, !11670}
!11669 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11667, file: !196, line: 359, baseType: !208, size: 8)
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11667, file: !196, line: 364, baseType: !211, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11660, file: !196, line: 388, baseType: !102, size: 32, offset: 128)
!11672 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11660, file: !196, line: 396, baseType: !214, size: 32, offset: 160)
!11673 = !DILocation(line: 0, scope: !11654)
!11674 = !DILocation(line: 31, column: 1, scope: !11654)
!11675 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11655, file: !11655, line: 33, type: !11676, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11678)
!11676 = !DISubroutineType(types: !11677)
!11677 = !{!11658, !199}
!11678 = !{!11679, !11680}
!11679 = !DILocalVariable(name: "name", arg: 1, scope: !11675, file: !11655, line: 33, type: !199)
!11680 = !DILocalVariable(name: "dev", scope: !11675, file: !11655, line: 35, type: !11658)
!11681 = !DILocation(line: 0, scope: !11675)
!11682 = !DILocation(line: 40, column: 12, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11675, file: !11655, line: 40, column: 6)
!11684 = !DILocation(line: 40, column: 21, scope: !11683)
!11685 = !DILocation(line: 40, column: 25, scope: !11683)
!11686 = !DILocation(line: 40, column: 33, scope: !11683)
!11687 = !DILocation(line: 40, column: 6, scope: !11675)
!11688 = !DILocation(line: 55, column: 2, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11675, file: !11655, line: 55, column: 2)
!11690 = !DILocation(line: 50, column: 7, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !11655, line: 50, column: 7)
!11692 = distinct !DILexicalBlock(scope: !11693, file: !11655, line: 49, column: 57)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !11655, line: 49, column: 2)
!11694 = distinct !DILexicalBlock(scope: !11675, file: !11655, line: 49, column: 2)
!11695 = !DILocation(line: 50, column: 30, scope: !11691)
!11696 = !DILocation(line: 50, column: 39, scope: !11691)
!11697 = !DILocation(line: 50, column: 44, scope: !11691)
!11698 = !DILocation(line: 50, column: 7, scope: !11692)
!11699 = !DILocation(line: 49, column: 53, scope: !11693)
!11700 = !DILocation(line: 49, column: 33, scope: !11693)
!11701 = !DILocation(line: 49, column: 2, scope: !11694)
!11702 = distinct !{!11702, !11701, !11703}
!11703 = !DILocation(line: 53, column: 2, scope: !11694)
!11704 = !DILocation(line: 56, column: 7, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !11655, line: 56, column: 7)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !11655, line: 55, column: 57)
!11707 = distinct !DILexicalBlock(scope: !11689, file: !11655, line: 55, column: 2)
!11708 = !DILocation(line: 56, column: 30, scope: !11705)
!11709 = !DILocation(line: 56, column: 52, scope: !11705)
!11710 = !DILocation(line: 56, column: 34, scope: !11705)
!11711 = !DILocation(line: 56, column: 58, scope: !11705)
!11712 = !DILocation(line: 56, column: 7, scope: !11706)
!11713 = !DILocation(line: 55, column: 53, scope: !11707)
!11714 = !DILocation(line: 55, column: 33, scope: !11707)
!11715 = distinct !{!11715, !11688, !11716}
!11716 = !DILocation(line: 59, column: 2, scope: !11689)
!11717 = !DILocation(line: 62, column: 1, scope: !11675)
!11718 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11655, file: !11655, line: 93, type: !11719, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11721)
!11719 = !DISubroutineType(types: !11720)
!11720 = !{!211, !11658}
!11721 = !{!11722}
!11722 = !DILocalVariable(name: "dev", arg: 1, scope: !11718, file: !11655, line: 93, type: !11658)
!11723 = !DILocation(line: 0, scope: !11718)
!11724 = !DILocation(line: 99, column: 10, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11718, file: !11655, line: 99, column: 6)
!11726 = !DILocation(line: 99, column: 6, scope: !11718)
!11727 = !DILocation(line: 103, column: 14, scope: !11718)
!11728 = !DILocation(line: 103, column: 21, scope: !11718)
!11729 = !DILocation(line: 103, column: 33, scope: !11718)
!11730 = !DILocation(line: 103, column: 49, scope: !11718)
!11731 = !DILocation(line: 103, column: 58, scope: !11718)
!11732 = !DILocation(line: 104, column: 1, scope: !11718)
!11733 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11655, file: !11655, line: 87, type: !11734, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11737)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{!120, !11736}
!11736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11658, size: 32)
!11737 = !{!11738}
!11738 = !DILocalVariable(name: "devices", arg: 1, scope: !11733, file: !11655, line: 87, type: !11736)
!11739 = !DILocation(line: 0, scope: !11733)
!11740 = !DILocation(line: 89, column: 11, scope: !11733)
!11741 = !DILocation(line: 90, column: 2, scope: !11733)
!11742 = distinct !DISubprogram(name: "device_required_foreach", scope: !11655, file: !11655, line: 125, type: !11743, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11749)
!11743 = !DISubroutineType(types: !11744)
!11744 = !{!103, !11658, !11745, !102}
!11745 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !196, line: 471, baseType: !11746)
!11746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11747, size: 32)
!11747 = !DISubroutineType(types: !11748)
!11748 = !{!103, !11658, !102}
!11749 = !{!11750, !11751, !11752, !11753, !11754}
!11750 = !DILocalVariable(name: "dev", arg: 1, scope: !11742, file: !11655, line: 125, type: !11658)
!11751 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11742, file: !11655, line: 126, type: !11745)
!11752 = !DILocalVariable(name: "context", arg: 3, scope: !11742, file: !11655, line: 127, type: !102)
!11753 = !DILocalVariable(name: "handle_count", scope: !11742, file: !11655, line: 129, type: !120)
!11754 = !DILocalVariable(name: "handles", scope: !11742, file: !11655, line: 130, type: !214)
!11755 = !DILocation(line: 0, scope: !11742)
!11756 = !DILocation(line: 129, column: 2, scope: !11742)
!11757 = !DILocation(line: 129, column: 9, scope: !11742)
!11758 = !DILocation(line: 130, column: 35, scope: !11742)
!11759 = !DILocation(line: 132, column: 33, scope: !11742)
!11760 = !DILocation(line: 132, column: 9, scope: !11742)
!11761 = !DILocation(line: 133, column: 1, scope: !11742)
!11762 = !DILocation(line: 132, column: 2, scope: !11742)
!11763 = distinct !DISubprogram(name: "device_required_handles_get", scope: !196, file: !196, line: 493, type: !11764, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11766)
!11764 = !DISubroutineType(types: !11765)
!11765 = !{!214, !11658, !2278}
!11766 = !{!11767, !11768, !11769, !11770}
!11767 = !DILocalVariable(name: "dev", arg: 1, scope: !11763, file: !196, line: 493, type: !11658)
!11768 = !DILocalVariable(name: "count", arg: 2, scope: !11763, file: !196, line: 493, type: !2278)
!11769 = !DILocalVariable(name: "rv", scope: !11763, file: !196, line: 495, type: !214)
!11770 = !DILocalVariable(name: "i", scope: !11771, file: !196, line: 498, type: !120)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !196, line: 497, column: 18)
!11772 = distinct !DILexicalBlock(scope: !11763, file: !196, line: 497, column: 6)
!11773 = !DILocation(line: 0, scope: !11763)
!11774 = !DILocation(line: 495, column: 35, scope: !11763)
!11775 = !DILocation(line: 497, column: 9, scope: !11772)
!11776 = !DILocation(line: 497, column: 6, scope: !11763)
!11777 = !DILocation(line: 0, scope: !11771)
!11778 = !DILocation(line: 500, column: 11, scope: !11771)
!11779 = !DILocation(line: 500, column: 40, scope: !11771)
!11780 = !DILocation(line: 502, column: 4, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11771, file: !196, line: 501, column: 40)
!11782 = distinct !{!11782, !11783, !11784}
!11783 = !DILocation(line: 500, column: 3, scope: !11771)
!11784 = !DILocation(line: 503, column: 3, scope: !11771)
!11785 = !DILocation(line: 504, column: 10, scope: !11771)
!11786 = !DILocation(line: 505, column: 2, scope: !11771)
!11787 = !DILocation(line: 507, column: 2, scope: !11763)
!11788 = distinct !DISubprogram(name: "device_visitor", scope: !11655, file: !11655, line: 106, type: !11789, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11791)
!11789 = !DISubroutineType(types: !11790)
!11790 = !{!103, !214, !120, !11745, !102}
!11791 = !{!11792, !11793, !11794, !11795, !11796, !11798, !11801, !11802}
!11792 = !DILocalVariable(name: "handles", arg: 1, scope: !11788, file: !11655, line: 106, type: !214)
!11793 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11788, file: !11655, line: 107, type: !120)
!11794 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11788, file: !11655, line: 108, type: !11745)
!11795 = !DILocalVariable(name: "context", arg: 4, scope: !11788, file: !11655, line: 109, type: !102)
!11796 = !DILocalVariable(name: "i", scope: !11797, file: !11655, line: 112, type: !120)
!11797 = distinct !DILexicalBlock(scope: !11788, file: !11655, line: 112, column: 2)
!11798 = !DILocalVariable(name: "dh", scope: !11799, file: !11655, line: 113, type: !216)
!11799 = distinct !DILexicalBlock(scope: !11800, file: !11655, line: 112, column: 44)
!11800 = distinct !DILexicalBlock(scope: !11797, file: !11655, line: 112, column: 2)
!11801 = !DILocalVariable(name: "rdev", scope: !11799, file: !11655, line: 114, type: !11658)
!11802 = !DILocalVariable(name: "rc", scope: !11799, file: !11655, line: 115, type: !103)
!11803 = !DILocation(line: 0, scope: !11788)
!11804 = !DILocation(line: 0, scope: !11797)
!11805 = !DILocation(line: 112, column: 23, scope: !11800)
!11806 = !DILocation(line: 112, column: 2, scope: !11797)
!11807 = distinct !{!11807, !11806, !11808}
!11808 = !DILocation(line: 120, column: 2, scope: !11797)
!11809 = !DILocation(line: 113, column: 24, scope: !11799)
!11810 = !DILocation(line: 0, scope: !11799)
!11811 = !DILocation(line: 114, column: 31, scope: !11799)
!11812 = !DILocation(line: 115, column: 12, scope: !11799)
!11813 = !DILocation(line: 117, column: 10, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11799, file: !11655, line: 117, column: 7)
!11815 = !DILocation(line: 112, column: 39, scope: !11800)
!11816 = !DILocation(line: 123, column: 1, scope: !11788)
!11817 = distinct !DISubprogram(name: "device_from_handle", scope: !196, file: !196, line: 439, type: !11818, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11820)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!11658, !216}
!11820 = !{!11821, !11822, !11823}
!11821 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11817, file: !196, line: 439, type: !216)
!11822 = !DILocalVariable(name: "dev", scope: !11817, file: !196, line: 443, type: !11658)
!11823 = !DILocalVariable(name: "numdev", scope: !11817, file: !196, line: 444, type: !120)
!11824 = !DILocation(line: 0, scope: !11817)
!11825 = !DILocation(line: 446, column: 7, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11817, file: !196, line: 446, column: 6)
!11827 = !DILocation(line: 446, column: 18, scope: !11826)
!11828 = !DILocation(line: 446, column: 23, scope: !11826)
!11829 = !DILocation(line: 450, column: 2, scope: !11817)
!11830 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11655, file: !11655, line: 135, type: !11743, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11831)
!11831 = !{!11832, !11833, !11834, !11835, !11836}
!11832 = !DILocalVariable(name: "dev", arg: 1, scope: !11830, file: !11655, line: 135, type: !11658)
!11833 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11830, file: !11655, line: 136, type: !11745)
!11834 = !DILocalVariable(name: "context", arg: 3, scope: !11830, file: !11655, line: 137, type: !102)
!11835 = !DILocalVariable(name: "handle_count", scope: !11830, file: !11655, line: 139, type: !120)
!11836 = !DILocalVariable(name: "handles", scope: !11830, file: !11655, line: 140, type: !214)
!11837 = !DILocation(line: 0, scope: !11830)
!11838 = !DILocation(line: 139, column: 2, scope: !11830)
!11839 = !DILocation(line: 139, column: 9, scope: !11830)
!11840 = !DILocation(line: 140, column: 35, scope: !11830)
!11841 = !DILocation(line: 142, column: 33, scope: !11830)
!11842 = !DILocation(line: 142, column: 9, scope: !11830)
!11843 = !DILocation(line: 143, column: 1, scope: !11830)
!11844 = !DILocation(line: 142, column: 2, scope: !11830)
!11845 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !196, file: !196, line: 573, type: !11764, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2779, retainedNodes: !11846)
!11846 = !{!11847, !11848, !11849, !11850, !11851}
!11847 = !DILocalVariable(name: "dev", arg: 1, scope: !11845, file: !196, line: 573, type: !11658)
!11848 = !DILocalVariable(name: "count", arg: 2, scope: !11845, file: !196, line: 573, type: !2278)
!11849 = !DILocalVariable(name: "rv", scope: !11845, file: !196, line: 575, type: !214)
!11850 = !DILocalVariable(name: "region", scope: !11845, file: !196, line: 576, type: !120)
!11851 = !DILocalVariable(name: "i", scope: !11845, file: !196, line: 577, type: !120)
!11852 = !DILocation(line: 0, scope: !11845)
!11853 = !DILocation(line: 575, column: 35, scope: !11845)
!11854 = !DILocation(line: 579, column: 9, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11845, file: !196, line: 579, column: 6)
!11856 = !DILocation(line: 579, column: 6, scope: !11845)
!11857 = !DILocation(line: 582, column: 8, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !196, line: 582, column: 8)
!11859 = distinct !DILexicalBlock(scope: !11860, file: !196, line: 581, column: 23)
!11860 = distinct !DILexicalBlock(scope: !11855, file: !196, line: 579, column: 18)
!11861 = !DILocation(line: 582, column: 12, scope: !11858)
!11862 = !DILocation(line: 585, column: 6, scope: !11859)
!11863 = !DILocation(line: 0, scope: !11860)
!11864 = !DILocation(line: 581, column: 17, scope: !11860)
!11865 = !DILocation(line: 581, column: 3, scope: !11860)
!11866 = !DILocation(line: 588, column: 10, scope: !11860)
!11867 = !DILocation(line: 588, column: 16, scope: !11860)
!11868 = !DILocation(line: 589, column: 4, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11860, file: !196, line: 588, column: 39)
!11870 = !DILocation(line: 588, column: 3, scope: !11860)
!11871 = distinct !{!11871, !11870, !11872}
!11872 = !DILocation(line: 590, column: 3, scope: !11860)
!11873 = !DILocation(line: 591, column: 10, scope: !11860)
!11874 = !DILocation(line: 592, column: 2, scope: !11860)
!11875 = !DILocation(line: 575, column: 25, scope: !11845)
!11876 = !DILocation(line: 594, column: 2, scope: !11845)
!11877 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1675, file: !1675, line: 49, type: !11878, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1672, retainedNodes: !162)
!11878 = !DISubroutineType(types: !11879)
!11879 = !{!2271}
!11880 = !DILocation(line: 51, column: 10, scope: !11877)
!11881 = !DILocation(line: 51, column: 20, scope: !11877)
!11882 = !DILocation(line: 51, column: 2, scope: !11877)
!11883 = distinct !DISubprogram(name: "coredump", scope: !2786, file: !2786, line: 209, type: !11884, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12030)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{null, !32, !11886, !11930}
!11886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11887, size: 32)
!11887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11888)
!11888 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2403, line: 141, baseType: !11889)
!11889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2403, line: 97, size: 256, elements: !11890)
!11890 = !{!11891}
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11889, file: !2403, line: 107, baseType: !11892, size: 256)
!11892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2403, line: 98, size: 256, elements: !11893)
!11893 = !{!11894, !11899, !11904, !11909, !11914, !11919, !11924, !11929}
!11894 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 99, baseType: !11895, size: 32)
!11895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 99, size: 32, elements: !11896)
!11896 = !{!11897, !11898}
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11895, file: !2403, line: 99, baseType: !137, size: 32)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11895, file: !2403, line: 99, baseType: !137, size: 32)
!11899 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 100, baseType: !11900, size: 32, offset: 32)
!11900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 100, size: 32, elements: !11901)
!11901 = !{!11902, !11903}
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11900, file: !2403, line: 100, baseType: !137, size: 32)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11900, file: !2403, line: 100, baseType: !137, size: 32)
!11904 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 101, baseType: !11905, size: 32, offset: 64)
!11905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 101, size: 32, elements: !11906)
!11906 = !{!11907, !11908}
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11905, file: !2403, line: 101, baseType: !137, size: 32)
!11908 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11905, file: !2403, line: 101, baseType: !137, size: 32)
!11909 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 102, baseType: !11910, size: 32, offset: 96)
!11910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 102, size: 32, elements: !11911)
!11911 = !{!11912, !11913}
!11912 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11910, file: !2403, line: 102, baseType: !137, size: 32)
!11913 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11910, file: !2403, line: 102, baseType: !137, size: 32)
!11914 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 103, baseType: !11915, size: 32, offset: 128)
!11915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 103, size: 32, elements: !11916)
!11916 = !{!11917, !11918}
!11917 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11915, file: !2403, line: 103, baseType: !137, size: 32)
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11915, file: !2403, line: 103, baseType: !137, size: 32)
!11919 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 104, baseType: !11920, size: 32, offset: 160)
!11920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 104, size: 32, elements: !11921)
!11921 = !{!11922, !11923}
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11920, file: !2403, line: 104, baseType: !137, size: 32)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11920, file: !2403, line: 104, baseType: !137, size: 32)
!11924 = !DIDerivedType(tag: DW_TAG_member, scope: !11892, file: !2403, line: 105, baseType: !11925, size: 32, offset: 192)
!11925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11892, file: !2403, line: 105, size: 32, elements: !11926)
!11926 = !{!11927, !11928}
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11925, file: !2403, line: 105, baseType: !137, size: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11925, file: !2403, line: 105, baseType: !137, size: 32)
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11892, file: !2403, line: 106, baseType: !137, size: 32, offset: 224)
!11930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11931, size: 32)
!11931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !263, line: 245, size: 1024, elements: !11932)
!11932 = !{!11933, !11991, !12003, !12004, !12005, !12006, !12012, !12025}
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11931, file: !263, line: 247, baseType: !11934, size: 384)
!11934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !263, line: 57, size: 384, elements: !11935)
!11935 = !{!11936, !11960, !11967, !11968, !11969, !11978, !11979, !11980}
!11936 = !DIDerivedType(tag: DW_TAG_member, scope: !11934, file: !263, line: 60, baseType: !11937, size: 64)
!11937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11934, file: !263, line: 60, size: 64, elements: !11938)
!11938 = !{!11939, !11954}
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11937, file: !263, line: 61, baseType: !11940, size: 64)
!11940 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !273, line: 49, baseType: !11941)
!11941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !273, line: 37, size: 64, elements: !11942)
!11942 = !{!11943, !11949}
!11943 = !DIDerivedType(tag: DW_TAG_member, scope: !11941, file: !273, line: 38, baseType: !11944, size: 32)
!11944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11941, file: !273, line: 38, size: 32, elements: !11945)
!11945 = !{!11946, !11948}
!11946 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11944, file: !273, line: 39, baseType: !11947, size: 32)
!11947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11941, size: 32)
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11944, file: !273, line: 40, baseType: !11947, size: 32)
!11949 = !DIDerivedType(tag: DW_TAG_member, scope: !11941, file: !273, line: 42, baseType: !11950, size: 32, offset: 32)
!11950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11941, file: !273, line: 42, size: 32, elements: !11951)
!11951 = !{!11952, !11953}
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11950, file: !273, line: 43, baseType: !11947, size: 32)
!11953 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11950, file: !273, line: 44, baseType: !11947, size: 32)
!11954 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11937, file: !263, line: 62, baseType: !11955, size: 64)
!11955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !289, line: 49, size: 64, elements: !11956)
!11956 = !{!11957}
!11957 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11955, file: !289, line: 50, baseType: !11958, size: 64)
!11958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11959, size: 64, elements: !294)
!11959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11955, size: 32)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11934, file: !263, line: 68, baseType: !11961, size: 32, offset: 64)
!11961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11962, size: 32)
!11962 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !299, line: 233, baseType: !11963)
!11963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !299, line: 231, size: 64, elements: !11964)
!11964 = !{!11965}
!11965 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11963, file: !299, line: 232, baseType: !11966, size: 64)
!11966 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !273, line: 48, baseType: !11941)
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11934, file: !263, line: 71, baseType: !208, size: 8, offset: 96)
!11968 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11934, file: !263, line: 74, baseType: !208, size: 8, offset: 104)
!11969 = !DIDerivedType(tag: DW_TAG_member, scope: !11934, file: !263, line: 90, baseType: !11970, size: 16, offset: 112)
!11970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11934, file: !263, line: 90, size: 16, elements: !11971)
!11971 = !{!11972, !11977}
!11972 = !DIDerivedType(tag: DW_TAG_member, scope: !11970, file: !263, line: 91, baseType: !11973, size: 16)
!11973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11970, file: !263, line: 91, size: 16, elements: !11974)
!11974 = !{!11975, !11976}
!11975 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11973, file: !263, line: 96, baseType: !313, size: 8)
!11976 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11973, file: !263, line: 97, baseType: !208, size: 8, offset: 8)
!11977 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11970, file: !263, line: 100, baseType: !151, size: 16)
!11978 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11934, file: !263, line: 107, baseType: !137, size: 32, offset: 128)
!11979 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11934, file: !263, line: 127, baseType: !102, size: 32, offset: 160)
!11980 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11934, file: !263, line: 131, baseType: !11981, size: 192, offset: 192)
!11981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !299, line: 244, size: 192, elements: !11982)
!11982 = !{!11983, !11984, !11990}
!11983 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11981, file: !299, line: 245, baseType: !11940, size: 64)
!11984 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11981, file: !299, line: 246, baseType: !11985, size: 32, offset: 64)
!11985 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !299, line: 242, baseType: !11986)
!11986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11987, size: 32)
!11987 = !DISubroutineType(types: !11988)
!11988 = !{null, !11989}
!11989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11981, size: 32)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11981, file: !299, line: 249, baseType: !330, size: 64, offset: 128)
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11931, file: !263, line: 250, baseType: !11992, size: 288, offset: 384)
!11992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !334, line: 25, size: 288, elements: !11993)
!11993 = !{!11994, !11995, !11996, !11997, !11998, !11999, !12000, !12001, !12002}
!11994 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11992, file: !334, line: 26, baseType: !137, size: 32)
!11995 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11992, file: !334, line: 27, baseType: !137, size: 32, offset: 32)
!11996 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11992, file: !334, line: 28, baseType: !137, size: 32, offset: 64)
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11992, file: !334, line: 29, baseType: !137, size: 32, offset: 96)
!11998 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11992, file: !334, line: 30, baseType: !137, size: 32, offset: 128)
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11992, file: !334, line: 31, baseType: !137, size: 32, offset: 160)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11992, file: !334, line: 32, baseType: !137, size: 32, offset: 192)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11992, file: !334, line: 33, baseType: !137, size: 32, offset: 224)
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11992, file: !334, line: 34, baseType: !137, size: 32, offset: 256)
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11931, file: !263, line: 253, baseType: !102, size: 32, offset: 672)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11931, file: !263, line: 256, baseType: !11962, size: 64, offset: 704)
!12005 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11931, file: !263, line: 294, baseType: !103, size: 32, offset: 768)
!12006 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11931, file: !263, line: 300, baseType: !12007, size: 96, offset: 800)
!12007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !263, line: 149, size: 96, elements: !12008)
!12008 = !{!12009, !12010, !12011}
!12009 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12007, file: !263, line: 153, baseType: !22, size: 32)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12007, file: !263, line: 162, baseType: !120, size: 32, offset: 32)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12007, file: !263, line: 168, baseType: !120, size: 32, offset: 64)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11931, file: !263, line: 325, baseType: !12013, size: 32, offset: 896)
!12013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12014, size: 32)
!12014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !357, line: 5073, size: 160, elements: !12015)
!12015 = !{!12016, !12022, !12023}
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12014, file: !357, line: 5074, baseType: !12017, size: 96)
!12017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !12018)
!12018 = !{!12019, !12020, !12021}
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12017, file: !113, line: 57, baseType: !116, size: 32)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12017, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12017, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12014, file: !357, line: 5075, baseType: !11962, size: 64, offset: 96)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12014, file: !357, line: 5076, baseType: !12024, offset: 160)
!12024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !368, line: 43, elements: !162)
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11931, file: !263, line: 343, baseType: !12026, size: 64, offset: 928)
!12026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !334, line: 60, size: 64, elements: !12027)
!12027 = !{!12028, !12029}
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12026, file: !334, line: 63, baseType: !137, size: 32)
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12026, file: !334, line: 66, baseType: !137, size: 32, offset: 32)
!12030 = !{!12031, !12032, !12033}
!12031 = !DILocalVariable(name: "reason", arg: 1, scope: !11883, file: !2786, line: 209, type: !32)
!12032 = !DILocalVariable(name: "esf", arg: 2, scope: !11883, file: !2786, line: 209, type: !11886)
!12033 = !DILocalVariable(name: "thread", arg: 3, scope: !11883, file: !2786, line: 210, type: !11930)
!12034 = !DILocation(line: 0, scope: !11883)
!12035 = !DILocation(line: 212, column: 1, scope: !11883)
!12036 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2786, file: !2786, line: 214, type: !12037, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12039)
!12037 = !DISubroutineType(types: !12038)
!12038 = !{null, !22, !22}
!12039 = !{!12040, !12041}
!12040 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12036, file: !2786, line: 214, type: !22)
!12041 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12036, file: !2786, line: 214, type: !22)
!12042 = !DILocation(line: 0, scope: !12036)
!12043 = !DILocation(line: 216, column: 1, scope: !12036)
!12044 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2786, file: !2786, line: 218, type: !12045, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12047)
!12045 = !DISubroutineType(types: !12046)
!12046 = !{null, !1716, !120}
!12047 = !{!12048, !12049}
!12048 = !DILocalVariable(name: "buf", arg: 1, scope: !12044, file: !2786, line: 218, type: !1716)
!12049 = !DILocalVariable(name: "buflen", arg: 2, scope: !12044, file: !2786, line: 218, type: !120)
!12050 = !DILocation(line: 0, scope: !12044)
!12051 = !DILocation(line: 220, column: 1, scope: !12044)
!12052 = distinct !DISubprogram(name: "coredump_query", scope: !2786, file: !2786, line: 222, type: !12053, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12055)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!103, !2785, !102}
!12055 = !{!12056, !12057}
!12056 = !DILocalVariable(name: "query_id", arg: 1, scope: !12052, file: !2786, line: 222, type: !2785)
!12057 = !DILocalVariable(name: "arg", arg: 2, scope: !12052, file: !2786, line: 222, type: !102)
!12058 = !DILocation(line: 0, scope: !12052)
!12059 = !DILocation(line: 224, column: 2, scope: !12052)
!12060 = distinct !DISubprogram(name: "coredump_cmd", scope: !2786, file: !2786, line: 227, type: !12061, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12063)
!12061 = !DISubroutineType(types: !12062)
!12062 = !{!103, !2792, !102}
!12063 = !{!12064, !12065}
!12064 = !DILocalVariable(name: "query_id", arg: 1, scope: !12060, file: !2786, line: 227, type: !2792)
!12065 = !DILocalVariable(name: "arg", arg: 2, scope: !12060, file: !2786, line: 227, type: !102)
!12066 = !DILocation(line: 0, scope: !12060)
!12067 = !DILocation(line: 229, column: 2, scope: !12060)
!12068 = distinct !DISubprogram(name: "arch_system_halt", scope: !12069, file: !12069, line: 23, type: !6140, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12070)
!12069 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12070 = !{!12071}
!12071 = !DILocalVariable(name: "reason", arg: 1, scope: !12068, file: !12069, line: 23, type: !32)
!12072 = !DILocation(line: 0, scope: !12068)
!12073 = !DILocation(line: 55, column: 2, scope: !12074, inlinedAt: !12078)
!12074 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12075)
!12075 = !{!12076, !12077}
!12076 = !DILocalVariable(name: "key", scope: !12074, file: !6129, line: 44, type: !32)
!12077 = !DILocalVariable(name: "tmp", scope: !12074, file: !6129, line: 53, type: !32)
!12078 = distinct !DILocation(line: 31, column: 8, scope: !12068)
!12079 = !{i64 2240811}
!12080 = !DILocation(line: 0, scope: !12074, inlinedAt: !12078)
!12081 = !DILocation(line: 32, column: 2, scope: !12068)
!12082 = !DILocation(line: 32, column: 2, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !12069, line: 32, column: 2)
!12084 = distinct !DILexicalBlock(scope: !12068, file: !12069, line: 32, column: 2)
!12085 = distinct !{!12085, !12086, !12087}
!12086 = !DILocation(line: 32, column: 2, scope: !12084)
!12087 = !DILocation(line: 34, column: 2, scope: !12084)
!12088 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12069, file: !12069, line: 39, type: !12089, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12091)
!12089 = !DISubroutineType(types: !12090)
!12090 = !{null, !32, !11886}
!12091 = !{!12092, !12093}
!12092 = !DILocalVariable(name: "reason", arg: 1, scope: !12088, file: !12069, line: 39, type: !32)
!12093 = !DILocalVariable(name: "esf", arg: 2, scope: !12088, file: !12069, line: 40, type: !11886)
!12094 = !DILocation(line: 0, scope: !12088)
!12095 = !DILocation(line: 46, column: 2, scope: !12088)
!12096 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12069, file: !12069, line: 81, type: !6140, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12097)
!12097 = !{!12098}
!12098 = !DILocalVariable(name: "reason", arg: 1, scope: !12096, file: !12069, line: 81, type: !32)
!12099 = !DILocation(line: 0, scope: !12096)
!12100 = !DILocation(line: 83, column: 2, scope: !12096)
!12101 = distinct !DISubprogram(name: "z_fatal_error", scope: !12069, file: !12069, line: 96, type: !12089, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12102)
!12102 = !{!12103, !12104, !12105, !12106}
!12103 = !DILocalVariable(name: "reason", arg: 1, scope: !12101, file: !12069, line: 96, type: !32)
!12104 = !DILocalVariable(name: "esf", arg: 2, scope: !12101, file: !12069, line: 96, type: !11886)
!12105 = !DILocalVariable(name: "key", scope: !12101, file: !12069, line: 102, type: !32)
!12106 = !DILocalVariable(name: "thread", scope: !12101, file: !12069, line: 103, type: !11930)
!12107 = !DILocation(line: 0, scope: !12101)
!12108 = !DILocation(line: 55, column: 2, scope: !12074, inlinedAt: !12109)
!12109 = distinct !DILocation(line: 102, column: 21, scope: !12101)
!12110 = !DILocation(line: 0, scope: !12074, inlinedAt: !12109)
!12111 = !DILocation(line: 119, column: 11, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12101, file: !12069, line: 119, column: 6)
!12113 = !DILocation(line: 119, column: 20, scope: !12112)
!12114 = !DILocation(line: 131, column: 2, scope: !12101)
!12115 = !DILocation(line: 151, column: 7, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !12069, line: 146, column: 32)
!12117 = distinct !DILexicalBlock(scope: !12101, file: !12069, line: 146, column: 6)
!12118 = !DILocation(line: 151, column: 21, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12116, file: !12069, line: 151, column: 7)
!12120 = !DILocation(line: 104, column: 4, scope: !12101)
!12121 = !DILocalVariable(name: "key", arg: 1, scope: !12122, file: !6129, line: 84, type: !32)
!12122 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12123)
!12123 = !{!12121}
!12124 = !DILocation(line: 0, scope: !12122, inlinedAt: !12125)
!12125 = distinct !DILocation(line: 186, column: 2, scope: !12101)
!12126 = !DILocation(line: 95, column: 2, scope: !12122, inlinedAt: !12125)
!12127 = !{i64 2241628}
!12128 = !DILocation(line: 189, column: 3, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !12069, line: 188, column: 41)
!12130 = distinct !DILexicalBlock(scope: !12101, file: !12069, line: 188, column: 6)
!12131 = !DILocation(line: 191, column: 1, scope: !12101)
!12132 = distinct !DISubprogram(name: "k_current_get", scope: !357, file: !357, line: 530, type: !12133, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !162)
!12133 = !DISubroutineType(types: !12134)
!12134 = !{!12135}
!12135 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !11930)
!12136 = !DILocation(line: 535, column: 9, scope: !12132)
!12137 = !DILocation(line: 535, column: 2, scope: !12132)
!12138 = distinct !DISubprogram(name: "k_thread_abort", scope: !3269, file: !3269, line: 188, type: !12139, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !12141)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{null, !12135}
!12141 = !{!12142}
!12142 = !DILocalVariable(name: "thread", arg: 1, scope: !12138, file: !3269, line: 188, type: !12135)
!12143 = !DILocation(line: 0, scope: !12138)
!12144 = !DILocation(line: 197, column: 2, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12138, file: !3269, line: 197, column: 2)
!12146 = !{i64 2154741590}
!12147 = !DILocation(line: 198, column: 2, scope: !12138)
!12148 = !DILocation(line: 199, column: 1, scope: !12138)
!12149 = distinct !DISubprogram(name: "z_current_get", scope: !3269, file: !3269, line: 173, type: !12133, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !162)
!12150 = !DILocation(line: 180, column: 2, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12149, file: !3269, line: 180, column: 2)
!12152 = !{i64 2154741522}
!12153 = !DILocation(line: 181, column: 9, scope: !12149)
!12154 = !DILocation(line: 181, column: 2, scope: !12149)
!12155 = distinct !DISubprogram(name: "z_early_memset", scope: !1683, file: !1683, line: 108, type: !12156, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12158)
!12156 = !DISubroutineType(types: !12157)
!12157 = !{null, !102, !103, !120}
!12158 = !{!12159, !12160, !12161}
!12159 = !DILocalVariable(name: "dst", arg: 1, scope: !12155, file: !1683, line: 108, type: !102)
!12160 = !DILocalVariable(name: "c", arg: 2, scope: !12155, file: !1683, line: 108, type: !103)
!12161 = !DILocalVariable(name: "n", arg: 3, scope: !12155, file: !1683, line: 108, type: !120)
!12162 = !DILocation(line: 0, scope: !12155)
!12163 = !DILocation(line: 110, column: 9, scope: !12155)
!12164 = !DILocation(line: 111, column: 1, scope: !12155)
!12165 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1683, file: !1683, line: 121, type: !12166, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12168)
!12166 = !DISubroutineType(types: !12167)
!12167 = !{null, !102, !13, !120}
!12168 = !{!12169, !12170, !12171}
!12169 = !DILocalVariable(name: "dst", arg: 1, scope: !12165, file: !1683, line: 121, type: !102)
!12170 = !DILocalVariable(name: "src", arg: 2, scope: !12165, file: !1683, line: 121, type: !13)
!12171 = !DILocalVariable(name: "n", arg: 3, scope: !12165, file: !1683, line: 121, type: !120)
!12172 = !DILocation(line: 0, scope: !12165)
!12173 = !DILocation(line: 123, column: 9, scope: !12165)
!12174 = !DILocation(line: 124, column: 1, scope: !12165)
!12175 = distinct !DISubprogram(name: "z_bss_zero", scope: !1683, file: !1683, line: 132, type: !2819, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !162)
!12176 = !DILocation(line: 143, column: 2, scope: !12175)
!12177 = !DILocation(line: 168, column: 1, scope: !12175)
!12178 = distinct !DISubprogram(name: "z_init_cpu", scope: !1683, file: !1683, line: 372, type: !7945, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12179)
!12179 = !{!12180}
!12180 = !DILocalVariable(name: "id", arg: 1, scope: !12178, file: !1683, line: 372, type: !103)
!12181 = !DILocation(line: 0, scope: !12178)
!12182 = !DILocation(line: 374, column: 2, scope: !12178)
!12183 = !DILocation(line: 375, column: 34, scope: !12178)
!12184 = !DILocation(line: 375, column: 19, scope: !12178)
!12185 = !DILocation(line: 375, column: 31, scope: !12178)
!12186 = !DILocation(line: 376, column: 24, scope: !12178)
!12187 = !DILocation(line: 376, column: 19, scope: !12178)
!12188 = !DILocation(line: 376, column: 22, scope: !12178)
!12189 = !DILocation(line: 378, column: 26, scope: !12178)
!12190 = !DILocation(line: 378, column: 4, scope: !12178)
!12191 = !DILocation(line: 378, column: 50, scope: !12178)
!12192 = !DILocation(line: 377, column: 19, scope: !12178)
!12193 = !DILocation(line: 377, column: 29, scope: !12178)
!12194 = !DILocation(line: 384, column: 1, scope: !12178)
!12195 = distinct !DISubprogram(name: "init_idle_thread", scope: !1683, file: !1683, line: 343, type: !7945, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12196)
!12196 = !{!12197, !12198, !12199, !12202}
!12197 = !DILocalVariable(name: "i", arg: 1, scope: !12195, file: !1683, line: 343, type: !103)
!12198 = !DILocalVariable(name: "thread", scope: !12195, file: !1683, line: 345, type: !1776)
!12199 = !DILocalVariable(name: "stack", scope: !12195, file: !1683, line: 346, type: !12200)
!12200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12201, size: 32)
!12201 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3148, line: 44, baseType: !1890)
!12202 = !DILocalVariable(name: "tname", scope: !12195, file: !1683, line: 358, type: !1022)
!12203 = !DILocation(line: 0, scope: !12195)
!12204 = !DILocation(line: 345, column: 29, scope: !12195)
!12205 = !DILocation(line: 346, column: 28, scope: !12195)
!12206 = !DILocation(line: 362, column: 37, scope: !12195)
!12207 = !DILocation(line: 362, column: 36, scope: !12195)
!12208 = !DILocation(line: 361, column: 2, scope: !12195)
!12209 = !DILocation(line: 365, column: 2, scope: !12195)
!12210 = !DILocation(line: 370, column: 1, scope: !12195)
!12211 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1891, file: !1891, line: 331, type: !12212, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12214)
!12212 = !DISubroutineType(types: !12213)
!12213 = !{!1022, !12200}
!12214 = !{!12215}
!12215 = !DILocalVariable(name: "sym", arg: 1, scope: !12211, file: !1891, line: 331, type: !12200)
!12216 = !DILocation(line: 0, scope: !12211)
!12217 = !DILocation(line: 333, column: 21, scope: !12211)
!12218 = !DILocation(line: 333, column: 2, scope: !12211)
!12219 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12220, file: !12220, line: 155, type: !12221, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12223)
!12220 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12221 = !DISubroutineType(types: !12222)
!12222 = !{null, !1776}
!12223 = !{!12224}
!12224 = !DILocalVariable(name: "thread", arg: 1, scope: !12219, file: !12220, line: 155, type: !1776)
!12225 = !DILocation(line: 0, scope: !12219)
!12226 = !DILocation(line: 157, column: 15, scope: !12219)
!12227 = !DILocation(line: 157, column: 28, scope: !12219)
!12228 = !DILocation(line: 158, column: 1, scope: !12219)
!12229 = distinct !DISubprogram(name: "z_cstart", scope: !1683, file: !1683, line: 501, type: !2819, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12230)
!12230 = !{!12231}
!12231 = !DILocalVariable(name: "dummy_thread", scope: !12229, file: !1683, line: 518, type: !1777)
!12232 = !DILocation(line: 507, column: 2, scope: !12229)
!12233 = !DILocation(line: 43, column: 14, scope: !12234, inlinedAt: !12238)
!12234 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12235, file: !12235, line: 40, type: !2819, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12236)
!12235 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12236 = !{!12237}
!12237 = !DILocalVariable(name: "msp", scope: !12234, file: !12235, line: 42, type: !137)
!12238 = distinct !DILocation(line: 44, column: 2, scope: !12239, inlinedAt: !12241)
!12239 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12240, file: !12240, line: 42, type: !2819, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !162)
!12240 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12241 = distinct !DILocation(line: 510, column: 2, scope: !12229)
!12242 = !DILocation(line: 43, column: 3, scope: !12234, inlinedAt: !12238)
!12243 = !DILocation(line: 43, column: 60, scope: !12234, inlinedAt: !12238)
!12244 = !DILocation(line: 0, scope: !12234, inlinedAt: !12238)
!12245 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12246, file: !6303, line: 1153, type: !137)
!12246 = distinct !DISubprogram(name: "__set_MSP", scope: !6303, file: !6303, line: 1153, type: !6392, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12247)
!12247 = !{!12245}
!12248 = !DILocation(line: 0, scope: !12246, inlinedAt: !12249)
!12249 = distinct !DILocation(line: 46, column: 2, scope: !12234, inlinedAt: !12238)
!12250 = !DILocation(line: 1155, column: 3, scope: !12246, inlinedAt: !12249)
!12251 = !{i64 3515187}
!12252 = !DILocation(line: 62, column: 11, scope: !12234, inlinedAt: !12238)
!12253 = !DILocation(line: 102, column: 2, scope: !12254, inlinedAt: !12255)
!12254 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7095, file: !7095, line: 97, type: !2819, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !162)
!12255 = distinct !DILocation(line: 45, column: 2, scope: !12239, inlinedAt: !12241)
!12256 = !DILocation(line: 108, column: 2, scope: !12254, inlinedAt: !12255)
!12257 = !DILocation(line: 112, column: 2, scope: !12254, inlinedAt: !12255)
!12258 = !DILocation(line: 113, column: 2, scope: !12254, inlinedAt: !12255)
!12259 = !DILocation(line: 114, column: 2, scope: !12254, inlinedAt: !12255)
!12260 = !DILocation(line: 116, column: 2, scope: !12254, inlinedAt: !12255)
!12261 = !DILocation(line: 123, column: 13, scope: !12254, inlinedAt: !12255)
!12262 = !DILocation(line: 46, column: 2, scope: !12239, inlinedAt: !12241)
!12263 = !DILocation(line: 47, column: 2, scope: !12239, inlinedAt: !12241)
!12264 = !DILocation(line: 174, column: 12, scope: !12265, inlinedAt: !12266)
!12265 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7095, file: !7095, line: 169, type: !2819, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !162)
!12266 = distinct !DILocation(line: 48, column: 2, scope: !12239, inlinedAt: !12241)
!12267 = !DILocation(line: 179, column: 12, scope: !12265, inlinedAt: !12266)
!12268 = !DILocation(line: 50, column: 2, scope: !12239, inlinedAt: !12241)
!12269 = !DILocation(line: 57, column: 2, scope: !12239, inlinedAt: !12241)
!12270 = !DILocation(line: 518, column: 2, scope: !12229)
!12271 = !DILocation(line: 518, column: 18, scope: !12229)
!12272 = !DILocation(line: 520, column: 2, scope: !12229)
!12273 = !DILocation(line: 523, column: 2, scope: !12229)
!12274 = !DILocation(line: 526, column: 2, scope: !12229)
!12275 = !DILocation(line: 527, column: 2, scope: !12229)
!12276 = !DILocation(line: 543, column: 24, scope: !12229)
!12277 = !DILocation(line: 543, column: 2, scope: !12229)
!12278 = !DILocation(line: 0, scope: !1910)
!12279 = !DILocation(line: 246, column: 15, scope: !1928)
!12280 = !DILocation(line: 246, column: 36, scope: !1927)
!12281 = !DILocation(line: 246, column: 2, scope: !1928)
!12282 = !DILocation(line: 247, column: 37, scope: !1926)
!12283 = !DILocation(line: 0, scope: !1926)
!12284 = !DILocation(line: 248, column: 19, scope: !1926)
!12285 = !DILocation(line: 248, column: 12, scope: !1926)
!12286 = !DILocation(line: 250, column: 11, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !1926, file: !1683, line: 250, column: 7)
!12288 = !DILocation(line: 250, column: 7, scope: !1926)
!12289 = !DILocation(line: 254, column: 11, scope: !12290)
!12290 = distinct !DILexicalBlock(scope: !12291, file: !1683, line: 254, column: 8)
!12291 = distinct !DILexicalBlock(scope: !12287, file: !1683, line: 250, column: 20)
!12292 = !DILocation(line: 254, column: 8, scope: !12291)
!12293 = !DILocation(line: 255, column: 9, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12290, file: !1683, line: 254, column: 17)
!12295 = !DILocation(line: 258, column: 9, scope: !12294)
!12296 = !DILocation(line: 261, column: 28, scope: !12294)
!12297 = !DILocation(line: 261, column: 10, scope: !12294)
!12298 = !DILocation(line: 261, column: 17, scope: !12294)
!12299 = !DILocation(line: 261, column: 26, scope: !12294)
!12300 = !DILocation(line: 262, column: 4, scope: !12294)
!12301 = !DILocation(line: 263, column: 9, scope: !12291)
!12302 = !DILocation(line: 263, column: 16, scope: !12291)
!12303 = !DILocation(line: 263, column: 28, scope: !12291)
!12304 = !DILocation(line: 264, column: 3, scope: !12291)
!12305 = !DILocation(line: 246, column: 60, scope: !1927)
!12306 = distinct !{!12306, !12281, !12307}
!12307 = !DILocation(line: 265, column: 2, scope: !1928)
!12308 = !DILocation(line: 266, column: 1, scope: !1910)
!12309 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !402, file: !402, line: 1814, type: !6337, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12310)
!12310 = !{!12311, !12312}
!12311 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12309, file: !402, line: 1814, type: !658)
!12312 = !DILocalVariable(name: "priority", arg: 2, scope: !12309, file: !402, line: 1814, type: !137)
!12313 = !DILocation(line: 0, scope: !12309)
!12314 = !DILocation(line: 1822, column: 48, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12316, file: !402, line: 1821, column: 3)
!12316 = distinct !DILexicalBlock(scope: !12309, file: !402, line: 1816, column: 7)
!12317 = !DILocation(line: 1822, column: 32, scope: !12315)
!12318 = !DILocation(line: 1822, column: 40, scope: !12315)
!12319 = !DILocation(line: 1822, column: 5, scope: !12315)
!12320 = !DILocation(line: 1822, column: 46, scope: !12315)
!12321 = !DILocation(line: 1824, column: 1, scope: !12309)
!12322 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12240, file: !12240, line: 32, type: !2819, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12323 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12324, file: !12324, line: 215, type: !12221, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12325)
!12324 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12325 = !{!12326}
!12326 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12323, file: !12324, line: 215, type: !1776)
!12327 = !DILocation(line: 0, scope: !12323)
!12328 = !DILocation(line: 217, column: 21, scope: !12323)
!12329 = !DILocation(line: 217, column: 34, scope: !12323)
!12330 = !DILocation(line: 221, column: 21, scope: !12323)
!12331 = !DILocation(line: 221, column: 34, scope: !12323)
!12332 = !DILocation(line: 223, column: 27, scope: !12323)
!12333 = !DILocation(line: 223, column: 33, scope: !12323)
!12334 = !DILocation(line: 224, column: 27, scope: !12323)
!12335 = !DILocation(line: 224, column: 32, scope: !12323)
!12336 = !DILocation(line: 232, column: 16, scope: !12323)
!12337 = !DILocation(line: 232, column: 30, scope: !12323)
!12338 = !DILocation(line: 239, column: 24, scope: !12323)
!12339 = !DILocation(line: 240, column: 1, scope: !12323)
!12340 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1683, file: !1683, line: 399, type: !12341, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12343)
!12341 = !DISubroutineType(types: !12342)
!12342 = !{!1022}
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "stack_ptr", scope: !12340, file: !1683, line: 401, type: !1022)
!12345 = !DILocation(line: 404, column: 2, scope: !12340)
!12346 = !DILocation(line: 416, column: 24, scope: !12340)
!12347 = !DILocation(line: 418, column: 14, scope: !12340)
!12348 = !DILocation(line: 0, scope: !12340)
!12349 = !DILocation(line: 423, column: 2, scope: !12340)
!12350 = !DILocation(line: 424, column: 2, scope: !12340)
!12351 = !DILocation(line: 426, column: 2, scope: !12340)
!12352 = !DILocation(line: 428, column: 2, scope: !12340)
!12353 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1683, file: !1683, line: 432, type: !12354, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12356)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{null, !1022}
!12356 = !{!12357}
!12357 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12353, file: !1683, line: 432, type: !1022)
!12358 = !DILocation(line: 0, scope: !12353)
!12359 = !DILocation(line: 435, column: 2, scope: !12353)
!12360 = !DILocation(line: 445, column: 2, scope: !12353)
!12361 = distinct !DISubprogram(name: "bg_thread_main", scope: !1683, file: !1683, line: 277, type: !3150, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1679, retainedNodes: !12362)
!12362 = !{!12363, !12364, !12365}
!12363 = !DILocalVariable(name: "unused1", arg: 1, scope: !12361, file: !1683, line: 277, type: !102)
!12364 = !DILocalVariable(name: "unused2", arg: 2, scope: !12361, file: !1683, line: 277, type: !102)
!12365 = !DILocalVariable(name: "unused3", arg: 3, scope: !12361, file: !1683, line: 277, type: !102)
!12366 = !DILocation(line: 0, scope: !12361)
!12367 = !DILocation(line: 291, column: 20, scope: !12361)
!12368 = !DILocation(line: 293, column: 2, scope: !12361)
!12369 = !DILocation(line: 297, column: 2, scope: !12361)
!12370 = !DILocation(line: 305, column: 2, scope: !12361)
!12371 = !DILocation(line: 307, column: 2, scope: !12361)
!12372 = !DILocation(line: 330, column: 8, scope: !12361)
!12373 = !DILocation(line: 333, column: 34, scope: !12361)
!12374 = !DILocation(line: 339, column: 1, scope: !12361)
!12375 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1937, file: !1937, line: 45, type: !12376, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12384)
!12376 = !DISubroutineType(types: !12377)
!12377 = !{null, !12378, !102}
!12378 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !357, line: 103, baseType: !12379)
!12379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12380, size: 32)
!12380 = !DISubroutineType(types: !12381)
!12381 = !{null, !12382, !102}
!12382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12383, size: 32)
!12383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1942)
!12384 = !{!12385, !12386}
!12385 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12375, file: !1937, line: 45, type: !12378)
!12386 = !DILocalVariable(name: "user_data", arg: 2, scope: !12375, file: !1937, line: 45, type: !102)
!12387 = !DILocation(line: 0, scope: !12375)
!12388 = !DILocation(line: 71, column: 1, scope: !12375)
!12389 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1937, file: !1937, line: 73, type: !12376, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12390)
!12390 = !{!12391, !12392}
!12391 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12389, file: !1937, line: 73, type: !12378)
!12392 = !DILocalVariable(name: "user_data", arg: 2, scope: !12389, file: !1937, line: 73, type: !102)
!12393 = !DILocation(line: 0, scope: !12389)
!12394 = !DILocation(line: 95, column: 1, scope: !12389)
!12395 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1937, file: !1937, line: 97, type: !7096, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!12396 = !DILocation(line: 1031, column: 3, scope: !12397, inlinedAt: !12400)
!12397 = distinct !DISubprogram(name: "__get_IPSR", scope: !6303, file: !6303, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12398)
!12398 = !{!12399}
!12399 = !DILocalVariable(name: "result", scope: !12397, file: !6303, line: 1029, type: !137)
!12400 = distinct !DILocation(line: 48, column: 10, scope: !12401, inlinedAt: !12402)
!12401 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7095, file: !7095, line: 46, type: !7096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!12402 = distinct !DILocation(line: 99, column: 9, scope: !12395)
!12403 = !{i64 3520838}
!12404 = !DILocation(line: 0, scope: !12397, inlinedAt: !12400)
!12405 = !DILocation(line: 48, column: 9, scope: !12401, inlinedAt: !12402)
!12406 = !DILocation(line: 99, column: 2, scope: !12395)
!12407 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1937, file: !1937, line: 106, type: !2819, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!12408 = !DILocation(line: 108, column: 2, scope: !12407)
!12409 = !DILocation(line: 108, column: 17, scope: !12407)
!12410 = !DILocation(line: 108, column: 30, scope: !12407)
!12411 = !DILocation(line: 109, column: 1, scope: !12407)
!12412 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1937, file: !1937, line: 116, type: !2819, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!12413 = !DILocation(line: 118, column: 2, scope: !12412)
!12414 = !DILocation(line: 118, column: 17, scope: !12412)
!12415 = !DILocation(line: 118, column: 30, scope: !12412)
!12416 = !DILocation(line: 119, column: 1, scope: !12412)
!12417 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1937, file: !1937, line: 126, type: !7096, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !162)
!12418 = !DILocation(line: 128, column: 10, scope: !12417)
!12419 = !DILocation(line: 128, column: 25, scope: !12417)
!12420 = !DILocation(line: 128, column: 38, scope: !12417)
!12421 = !DILocation(line: 128, column: 53, scope: !12417)
!12422 = !DILocation(line: 128, column: 2, scope: !12417)
!12423 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1937, file: !1937, line: 187, type: !12424, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12426)
!12424 = !DISubroutineType(types: !12425)
!12425 = !{!103, !1941, !199}
!12426 = !{!12427, !12428}
!12427 = !DILocalVariable(name: "thread", arg: 1, scope: !12423, file: !1937, line: 187, type: !1941)
!12428 = !DILocalVariable(name: "value", arg: 2, scope: !12423, file: !1937, line: 187, type: !199)
!12429 = !DILocation(line: 0, scope: !12423)
!12430 = !DILocation(line: 206, column: 2, scope: !12423)
!12431 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1937, file: !1937, line: 238, type: !12432, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12434)
!12432 = !DISubroutineType(types: !12433)
!12433 = !{!199, !1941}
!12434 = !{!12435}
!12435 = !DILocalVariable(name: "thread", arg: 1, scope: !12431, file: !1937, line: 238, type: !1941)
!12436 = !DILocation(line: 0, scope: !12431)
!12437 = !DILocation(line: 244, column: 2, scope: !12431)
!12438 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1937, file: !1937, line: 248, type: !12439, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12441)
!12439 = !DISubroutineType(types: !12440)
!12440 = !{!103, !1940, !1022, !120}
!12441 = !{!12442, !12443, !12444}
!12442 = !DILocalVariable(name: "thread", arg: 1, scope: !12438, file: !1937, line: 248, type: !1940)
!12443 = !DILocalVariable(name: "buf", arg: 2, scope: !12438, file: !1937, line: 248, type: !1022)
!12444 = !DILocalVariable(name: "size", arg: 3, scope: !12438, file: !1937, line: 248, type: !120)
!12445 = !DILocation(line: 0, scope: !12438)
!12446 = !DILocation(line: 257, column: 2, scope: !12438)
!12447 = !DILocation(line: 0, scope: !1936)
!12448 = !DILocation(line: 281, column: 11, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !1936, file: !1937, line: 281, column: 6)
!12450 = !DILocation(line: 281, column: 20, scope: !12449)
!12451 = !DILocation(line: 275, column: 45, scope: !1936)
!12452 = !DILocation(line: 285, column: 10, scope: !1936)
!12453 = !DILocation(line: 0, scope: !2057)
!12454 = !DILocation(line: 293, column: 39, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !2057, file: !1937, line: 293, column: 2)
!12456 = !DILocation(line: 293, column: 2, scope: !2057)
!12457 = !DILocation(line: 273, column: 14, scope: !1936)
!12458 = !DILocation(line: 309, column: 2, scope: !1936)
!12459 = !DILocation(line: 309, column: 11, scope: !1936)
!12460 = !DILocation(line: 311, column: 2, scope: !1936)
!12461 = !DILocation(line: 293, column: 26, scope: !12455)
!12462 = !DILocation(line: 294, column: 9, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12455, file: !1937, line: 293, column: 54)
!12464 = !DILocation(line: 295, column: 21, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12463, file: !1937, line: 295, column: 7)
!12466 = !DILocation(line: 295, column: 28, scope: !12465)
!12467 = !DILocation(line: 295, column: 7, scope: !12463)
!12468 = !DILocation(line: 299, column: 25, scope: !12463)
!12469 = !DILocation(line: 299, column: 41, scope: !12463)
!12470 = !DILocation(line: 300, column: 7, scope: !12463)
!12471 = !DILocation(line: 300, column: 26, scope: !12463)
!12472 = !DILocation(line: 299, column: 10, scope: !12463)
!12473 = !DILocation(line: 299, column: 7, scope: !12463)
!12474 = !DILocation(line: 302, column: 16, scope: !12463)
!12475 = !DILocation(line: 304, column: 20, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12463, file: !1937, line: 304, column: 7)
!12477 = !DILocation(line: 304, column: 7, scope: !12463)
!12478 = !DILocation(line: 305, column: 26, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12476, file: !1937, line: 304, column: 26)
!12480 = !DILocation(line: 305, column: 42, scope: !12479)
!12481 = !DILocation(line: 305, column: 11, scope: !12479)
!12482 = !DILocation(line: 305, column: 8, scope: !12479)
!12483 = !DILocation(line: 306, column: 3, scope: !12479)
!12484 = !DILocation(line: 293, column: 50, scope: !12455)
!12485 = !DILocation(line: 312, column: 1, scope: !1936)
!12486 = distinct !DISubprogram(name: "copy_bytes", scope: !1937, file: !1937, line: 261, type: !12487, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12489)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!120, !1022, !120, !199, !120}
!12489 = !{!12490, !12491, !12492, !12493, !12494}
!12490 = !DILocalVariable(name: "dest", arg: 1, scope: !12486, file: !1937, line: 261, type: !1022)
!12491 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12486, file: !1937, line: 261, type: !120)
!12492 = !DILocalVariable(name: "src", arg: 3, scope: !12486, file: !1937, line: 261, type: !199)
!12493 = !DILocalVariable(name: "src_size", arg: 4, scope: !12486, file: !1937, line: 261, type: !120)
!12494 = !DILocalVariable(name: "bytes_to_copy", scope: !12486, file: !1937, line: 263, type: !120)
!12495 = !DILocation(line: 0, scope: !12486)
!12496 = !DILocation(line: 265, column: 18, scope: !12486)
!12497 = !DILocation(line: 266, column: 2, scope: !12486)
!12498 = !DILocation(line: 268, column: 2, scope: !12486)
!12499 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1937, file: !1937, line: 383, type: !12500, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{null, !1941}
!12502 = !{!12503}
!12503 = !DILocalVariable(name: "thread", arg: 1, scope: !12499, file: !1937, line: 383, type: !1941)
!12504 = !DILocation(line: 0, scope: !12499)
!12505 = !DILocation(line: 387, column: 2, scope: !12499)
!12506 = !DILocation(line: 388, column: 1, scope: !12499)
!12507 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1937, file: !1937, line: 528, type: !12508, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12515)
!12508 = !DISubroutineType(types: !12509)
!12509 = !{!1022, !1941, !12510, !120, !3147, !102, !102, !102, !103, !137, !199}
!12510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12511, size: 32)
!12511 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3148, line: 44, baseType: !12512)
!12512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1891, line: 47, size: 8, elements: !12513)
!12513 = !{!12514}
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12512, file: !1891, line: 48, baseType: !109, size: 8)
!12515 = !{!12516, !12517, !12518, !12519, !12520, !12521, !12522, !12523, !12524, !12525, !12526}
!12516 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12507, file: !1937, line: 528, type: !1941)
!12517 = !DILocalVariable(name: "stack", arg: 2, scope: !12507, file: !1937, line: 529, type: !12510)
!12518 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12507, file: !1937, line: 529, type: !120)
!12519 = !DILocalVariable(name: "entry", arg: 4, scope: !12507, file: !1937, line: 530, type: !3147)
!12520 = !DILocalVariable(name: "p1", arg: 5, scope: !12507, file: !1937, line: 531, type: !102)
!12521 = !DILocalVariable(name: "p2", arg: 6, scope: !12507, file: !1937, line: 531, type: !102)
!12522 = !DILocalVariable(name: "p3", arg: 7, scope: !12507, file: !1937, line: 531, type: !102)
!12523 = !DILocalVariable(name: "prio", arg: 8, scope: !12507, file: !1937, line: 532, type: !103)
!12524 = !DILocalVariable(name: "options", arg: 9, scope: !12507, file: !1937, line: 532, type: !137)
!12525 = !DILocalVariable(name: "name", arg: 10, scope: !12507, file: !1937, line: 532, type: !199)
!12526 = !DILocalVariable(name: "stack_ptr", scope: !12507, file: !1937, line: 534, type: !1022)
!12527 = !DILocation(line: 0, scope: !12507)
!12528 = !DILocation(line: 550, column: 28, scope: !12507)
!12529 = !DILocation(line: 550, column: 2, scope: !12507)
!12530 = !DILocation(line: 553, column: 34, scope: !12507)
!12531 = !DILocation(line: 553, column: 2, scope: !12507)
!12532 = !DILocation(line: 554, column: 14, scope: !12507)
!12533 = !DILocation(line: 564, column: 2, scope: !12507)
!12534 = !DILocation(line: 567, column: 14, scope: !12507)
!12535 = !DILocation(line: 567, column: 24, scope: !12507)
!12536 = !DILocation(line: 612, column: 7, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12507, file: !1937, line: 612, column: 6)
!12538 = !DILocation(line: 612, column: 6, scope: !12507)
!12539 = !DILocation(line: 627, column: 40, scope: !12507)
!12540 = !DILocation(line: 637, column: 2, scope: !12507)
!12541 = !DILocation(line: 613, column: 15, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12537, file: !1937, line: 612, column: 17)
!12543 = !DILocation(line: 613, column: 29, scope: !12542)
!12544 = !DILocation(line: 638, column: 1, scope: !12507)
!12545 = distinct !DISubprogram(name: "z_waitq_init", scope: !12546, file: !12546, line: 47, type: !12547, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12549)
!12546 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12547 = !DISubroutineType(types: !12548)
!12548 = !{null, !1972}
!12549 = !{!12550}
!12550 = !DILocalVariable(name: "w", arg: 1, scope: !12545, file: !12546, line: 47, type: !1972)
!12551 = !DILocation(line: 0, scope: !12545)
!12552 = !DILocation(line: 49, column: 21, scope: !12545)
!12553 = !DILocation(line: 49, column: 2, scope: !12545)
!12554 = !DILocation(line: 50, column: 1, scope: !12545)
!12555 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1937, file: !1937, line: 791, type: !12556, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12559)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{null, !12558, !103, !137, !32}
!12558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!12559 = !{!12560, !12561, !12562, !12563}
!12560 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12555, file: !1937, line: 791, type: !12558)
!12561 = !DILocalVariable(name: "priority", arg: 2, scope: !12555, file: !1937, line: 791, type: !103)
!12562 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12555, file: !1937, line: 792, type: !137)
!12563 = !DILocalVariable(name: "options", arg: 4, scope: !12555, file: !1937, line: 792, type: !32)
!12564 = !DILocation(line: 0, scope: !12555)
!12565 = !DILocation(line: 795, column: 15, scope: !12555)
!12566 = !DILocation(line: 795, column: 25, scope: !12555)
!12567 = !DILocation(line: 796, column: 30, scope: !12555)
!12568 = !DILocation(line: 796, column: 15, scope: !12555)
!12569 = !DILocation(line: 796, column: 28, scope: !12555)
!12570 = !DILocation(line: 797, column: 30, scope: !12555)
!12571 = !DILocation(line: 797, column: 15, scope: !12555)
!12572 = !DILocation(line: 797, column: 28, scope: !12555)
!12573 = !DILocation(line: 799, column: 22, scope: !12555)
!12574 = !DILocation(line: 799, column: 15, scope: !12555)
!12575 = !DILocation(line: 799, column: 20, scope: !12555)
!12576 = !DILocation(line: 801, column: 15, scope: !12555)
!12577 = !DILocation(line: 801, column: 28, scope: !12555)
!12578 = !DILocation(line: 814, column: 2, scope: !12555)
!12579 = !DILocation(line: 815, column: 1, scope: !12555)
!12580 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1937, file: !1937, line: 449, type: !12581, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12583)
!12581 = !DISubroutineType(types: !12582)
!12582 = !{!1022, !1941, !12510, !120}
!12583 = !{!12584, !12585, !12586, !12587, !12588, !12589, !12590, !12591}
!12584 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12580, file: !1937, line: 449, type: !1941)
!12585 = !DILocalVariable(name: "stack", arg: 2, scope: !12580, file: !1937, line: 450, type: !12510)
!12586 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12580, file: !1937, line: 450, type: !120)
!12587 = !DILocalVariable(name: "stack_obj_size", scope: !12580, file: !1937, line: 452, type: !120)
!12588 = !DILocalVariable(name: "stack_buf_size", scope: !12580, file: !1937, line: 452, type: !120)
!12589 = !DILocalVariable(name: "stack_ptr", scope: !12580, file: !1937, line: 453, type: !1022)
!12590 = !DILocalVariable(name: "stack_buf_start", scope: !12580, file: !1937, line: 453, type: !1022)
!12591 = !DILocalVariable(name: "delta", scope: !12580, file: !1937, line: 454, type: !120)
!12592 = !DILocation(line: 0, scope: !12580)
!12593 = !DILocation(line: 465, column: 20, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12580, file: !1937, line: 463, column: 2)
!12595 = !DILocation(line: 466, column: 21, scope: !12594)
!12596 = !DILocation(line: 473, column: 28, scope: !12580)
!12597 = !DILocation(line: 514, column: 33, scope: !12580)
!12598 = !DILocation(line: 514, column: 25, scope: !12580)
!12599 = !DILocation(line: 514, column: 31, scope: !12580)
!12600 = !DILocation(line: 515, column: 25, scope: !12580)
!12601 = !DILocation(line: 515, column: 30, scope: !12580)
!12602 = !DILocation(line: 516, column: 25, scope: !12580)
!12603 = !DILocation(line: 516, column: 31, scope: !12580)
!12604 = !DILocation(line: 520, column: 2, scope: !12580)
!12605 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1891, file: !1891, line: 331, type: !12606, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12608)
!12606 = !DISubroutineType(types: !12607)
!12607 = !{!1022, !12510}
!12608 = !{!12609}
!12609 = !DILocalVariable(name: "sym", arg: 1, scope: !12605, file: !1891, line: 331, type: !12510)
!12610 = !DILocation(line: 0, scope: !12605)
!12611 = !DILocation(line: 333, column: 21, scope: !12605)
!12612 = !DILocation(line: 333, column: 2, scope: !12605)
!12613 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12614, file: !12614, line: 40, type: !12615, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12617)
!12614 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12615 = !DISubroutineType(types: !12616)
!12616 = !{null, !12558}
!12617 = !{!12618}
!12618 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12613, file: !12614, line: 40, type: !12558)
!12619 = !DILocation(line: 0, scope: !12613)
!12620 = !DILocation(line: 42, column: 31, scope: !12613)
!12621 = !DILocation(line: 42, column: 2, scope: !12613)
!12622 = !DILocation(line: 43, column: 1, scope: !12613)
!12623 = distinct !DISubprogram(name: "z_init_timeout", scope: !12614, file: !12614, line: 25, type: !1998, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12624)
!12624 = !{!12625}
!12625 = !DILocalVariable(name: "to", arg: 1, scope: !12623, file: !12614, line: 25, type: !2000)
!12626 = !DILocation(line: 0, scope: !12623)
!12627 = !DILocation(line: 27, column: 22, scope: !12623)
!12628 = !DILocation(line: 27, column: 2, scope: !12623)
!12629 = !DILocation(line: 28, column: 1, scope: !12623)
!12630 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !12631, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12633)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{null, !2044}
!12633 = !{!12634}
!12634 = !DILocalVariable(name: "node", arg: 1, scope: !12630, file: !273, line: 211, type: !2044)
!12635 = !DILocation(line: 0, scope: !12630)
!12636 = !DILocation(line: 213, column: 8, scope: !12630)
!12637 = !DILocation(line: 213, column: 13, scope: !12630)
!12638 = !DILocation(line: 214, column: 8, scope: !12630)
!12639 = !DILocation(line: 214, column: 13, scope: !12630)
!12640 = !DILocation(line: 215, column: 1, scope: !12630)
!12641 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !12642, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12645)
!12642 = !DISubroutineType(types: !12643)
!12643 = !{null, !12644}
!12644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!12645 = !{!12646}
!12646 = !DILocalVariable(name: "list", arg: 1, scope: !12641, file: !273, line: 197, type: !12644)
!12647 = !DILocation(line: 0, scope: !12641)
!12648 = !DILocation(line: 199, column: 8, scope: !12641)
!12649 = !DILocation(line: 199, column: 13, scope: !12641)
!12650 = !DILocation(line: 200, column: 8, scope: !12641)
!12651 = !DILocation(line: 200, column: 13, scope: !12641)
!12652 = !DILocation(line: 201, column: 1, scope: !12641)
!12653 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1937, file: !1937, line: 641, type: !12654, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12660)
!12654 = !DISubroutineType(types: !12655)
!12655 = !{!1940, !1941, !12510, !120, !3147, !102, !102, !102, !103, !137, !12656}
!12656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1423, line: 67, baseType: !12657)
!12657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 65, size: 64, elements: !12658)
!12658 = !{!12659}
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12657, file: !1423, line: 66, baseType: !1422, size: 64)
!12660 = !{!12661, !12662, !12663, !12664, !12665, !12666, !12667, !12668, !12669, !12670}
!12661 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12653, file: !1937, line: 641, type: !1941)
!12662 = !DILocalVariable(name: "stack", arg: 2, scope: !12653, file: !1937, line: 642, type: !12510)
!12663 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12653, file: !1937, line: 643, type: !120)
!12664 = !DILocalVariable(name: "entry", arg: 4, scope: !12653, file: !1937, line: 643, type: !3147)
!12665 = !DILocalVariable(name: "p1", arg: 5, scope: !12653, file: !1937, line: 644, type: !102)
!12666 = !DILocalVariable(name: "p2", arg: 6, scope: !12653, file: !1937, line: 644, type: !102)
!12667 = !DILocalVariable(name: "p3", arg: 7, scope: !12653, file: !1937, line: 644, type: !102)
!12668 = !DILocalVariable(name: "prio", arg: 8, scope: !12653, file: !1937, line: 645, type: !103)
!12669 = !DILocalVariable(name: "options", arg: 9, scope: !12653, file: !1937, line: 645, type: !137)
!12670 = !DILocalVariable(name: "delay", arg: 10, scope: !12653, file: !1937, line: 645, type: !12656)
!12671 = !DILocation(line: 0, scope: !12653)
!12672 = !DILocation(line: 649, column: 2, scope: !12653)
!12673 = !DILocation(line: 652, column: 7, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12653, file: !1937, line: 652, column: 6)
!12675 = !DILocation(line: 652, column: 6, scope: !12653)
!12676 = !DILocation(line: 653, column: 3, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12674, file: !1937, line: 652, column: 39)
!12678 = !DILocation(line: 654, column: 2, scope: !12677)
!12679 = !DILocation(line: 656, column: 2, scope: !12653)
!12680 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1937, file: !1937, line: 401, type: !12681, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12683)
!12681 = !DISubroutineType(types: !12682)
!12682 = !{null, !1941, !12656}
!12683 = !{!12684, !12685}
!12684 = !DILocalVariable(name: "thread", arg: 1, scope: !12680, file: !1937, line: 401, type: !1941)
!12685 = !DILocalVariable(name: "delay", arg: 2, scope: !12680, file: !1937, line: 401, type: !12656)
!12686 = !DILocation(line: 0, scope: !12680)
!12687 = !DILocation(line: 404, column: 6, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12680, file: !1937, line: 404, column: 6)
!12689 = !DILocation(line: 404, column: 6, scope: !12680)
!12690 = !DILocation(line: 405, column: 3, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12688, file: !1937, line: 404, column: 38)
!12692 = !DILocation(line: 406, column: 2, scope: !12691)
!12693 = !DILocation(line: 407, column: 3, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12688, file: !1937, line: 406, column: 9)
!12695 = !DILocation(line: 413, column: 1, scope: !12680)
!12696 = distinct !DISubprogram(name: "k_thread_start", scope: !3269, file: !3269, line: 205, type: !12697, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12699)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{null, !1940}
!12699 = !{!12700}
!12700 = !DILocalVariable(name: "thread", arg: 1, scope: !12696, file: !3269, line: 205, type: !1940)
!12701 = !DILocation(line: 0, scope: !12696)
!12702 = !DILocation(line: 214, column: 2, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12696, file: !3269, line: 214, column: 2)
!12704 = !{i64 2154766814}
!12705 = !DILocation(line: 215, column: 2, scope: !12696)
!12706 = !DILocation(line: 216, column: 1, scope: !12696)
!12707 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12614, file: !12614, line: 47, type: !12681, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12708)
!12708 = !{!12709, !12710}
!12709 = !DILocalVariable(name: "thread", arg: 1, scope: !12707, file: !12614, line: 47, type: !1941)
!12710 = !DILocalVariable(name: "ticks", arg: 2, scope: !12707, file: !12614, line: 47, type: !12656)
!12711 = !DILocation(line: 0, scope: !12707)
!12712 = !DILocation(line: 49, column: 30, scope: !12707)
!12713 = !DILocation(line: 49, column: 2, scope: !12707)
!12714 = !DILocation(line: 50, column: 1, scope: !12707)
!12715 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1937, file: !1937, line: 748, type: !2819, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12716)
!12716 = !{!12717, !12735}
!12717 = !DILocalVariable(name: "thread_data", scope: !12718, file: !1937, line: 750, type: !12719)
!12718 = distinct !DILexicalBlock(scope: !12715, file: !1937, line: 750, column: 2)
!12719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12720, size: 32)
!12720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !357, line: 620, size: 384, elements: !12721)
!12721 = !{!12722, !12723, !12724, !12725, !12726, !12727, !12728, !12729, !12730, !12731, !12732, !12734}
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12720, file: !357, line: 621, baseType: !1941, size: 32)
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12720, file: !357, line: 622, baseType: !12510, size: 32, offset: 32)
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12720, file: !357, line: 623, baseType: !32, size: 32, offset: 64)
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12720, file: !357, line: 624, baseType: !3147, size: 32, offset: 96)
!12726 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12720, file: !357, line: 625, baseType: !102, size: 32, offset: 128)
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12720, file: !357, line: 626, baseType: !102, size: 32, offset: 160)
!12728 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12720, file: !357, line: 627, baseType: !102, size: 32, offset: 192)
!12729 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12720, file: !357, line: 628, baseType: !103, size: 32, offset: 224)
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12720, file: !357, line: 629, baseType: !137, size: 32, offset: 256)
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12720, file: !357, line: 630, baseType: !632, size: 32, offset: 288)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12720, file: !357, line: 631, baseType: !12733, size: 32, offset: 320)
!12733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 32)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12720, file: !357, line: 632, baseType: !199, size: 32, offset: 352)
!12735 = !DILocalVariable(name: "thread_data", scope: !12736, file: !1937, line: 781, type: !12719)
!12736 = distinct !DILexicalBlock(scope: !12715, file: !1937, line: 781, column: 2)
!12737 = !DILocation(line: 0, scope: !12718)
!12738 = !DILocation(line: 750, column: 2, scope: !12718)
!12739 = !DILocation(line: 780, column: 2, scope: !12715)
!12740 = !DILocation(line: 0, scope: !12736)
!12741 = !DILocation(line: 781, column: 2, scope: !12736)
!12742 = !DILocation(line: 752, column: 17, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !1937, line: 750, column: 38)
!12744 = distinct !DILexicalBlock(scope: !12718, file: !1937, line: 750, column: 2)
!12745 = !DILocation(line: 753, column: 17, scope: !12743)
!12746 = !DILocation(line: 754, column: 17, scope: !12743)
!12747 = !DILocation(line: 755, column: 17, scope: !12743)
!12748 = !DILocation(line: 756, column: 17, scope: !12743)
!12749 = !DILocation(line: 757, column: 17, scope: !12743)
!12750 = !DILocation(line: 758, column: 17, scope: !12743)
!12751 = !DILocation(line: 759, column: 17, scope: !12743)
!12752 = !DILocation(line: 760, column: 17, scope: !12743)
!12753 = !DILocation(line: 751, column: 3, scope: !12743)
!12754 = !DILocation(line: 763, column: 16, scope: !12743)
!12755 = !DILocation(line: 763, column: 29, scope: !12743)
!12756 = !DILocation(line: 763, column: 39, scope: !12743)
!12757 = !DILocation(line: 750, column: 2, scope: !12744)
!12758 = !DILocation(line: 750, column: 2, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12744, file: !1937, line: 750, column: 2)
!12760 = distinct !{!12760, !12738, !12761}
!12761 = !DILocation(line: 764, column: 2, scope: !12718)
!12762 = !DILocation(line: 787, column: 2, scope: !12715)
!12763 = !DILocation(line: 788, column: 1, scope: !12715)
!12764 = !DILocation(line: 782, column: 20, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !1937, line: 782, column: 7)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !1937, line: 781, column: 38)
!12767 = distinct !DILexicalBlock(scope: !12736, file: !1937, line: 781, column: 2)
!12768 = !DILocation(line: 782, column: 31, scope: !12765)
!12769 = !DILocation(line: 782, column: 7, scope: !12766)
!12770 = !DILocation(line: 783, column: 37, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12765, file: !1937, line: 782, column: 51)
!12772 = !DILocation(line: 784, column: 10, scope: !12771)
!12773 = !DILocation(line: 783, column: 4, scope: !12771)
!12774 = !DILocation(line: 785, column: 3, scope: !12771)
!12775 = !DILocation(line: 781, column: 2, scope: !12767)
!12776 = !DILocation(line: 781, column: 2, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12767, file: !1937, line: 781, column: 2)
!12778 = distinct !{!12778, !12741, !12779}
!12779 = !DILocation(line: 786, column: 2, scope: !12736)
!12780 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12781, file: !12781, line: 403, type: !12782, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12784)
!12781 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12782 = !DISubroutineType(types: !12783)
!12783 = !{!163, !163}
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "t", arg: 1, scope: !12780, file: !12781, line: 403, type: !163)
!12786 = !DILocation(line: 0, scope: !12780)
!12787 = !DILocalVariable(name: "t", arg: 1, scope: !12788, file: !12781, line: 102, type: !163)
!12788 = distinct !DISubprogram(name: "z_tmcvt", scope: !12781, file: !12781, line: 102, type: !12789, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12791)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{!163, !163, !137, !137, !211, !211, !211, !211}
!12791 = !{!12787, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799, !12800, !12801}
!12792 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12788, file: !12781, line: 102, type: !137)
!12793 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12788, file: !12781, line: 103, type: !137)
!12794 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12788, file: !12781, line: 103, type: !211)
!12795 = !DILocalVariable(name: "result32", arg: 5, scope: !12788, file: !12781, line: 104, type: !211)
!12796 = !DILocalVariable(name: "round_up", arg: 6, scope: !12788, file: !12781, line: 104, type: !211)
!12797 = !DILocalVariable(name: "round_off", arg: 7, scope: !12788, file: !12781, line: 105, type: !211)
!12798 = !DILocalVariable(name: "mul_ratio", scope: !12788, file: !12781, line: 107, type: !211)
!12799 = !DILocalVariable(name: "div_ratio", scope: !12788, file: !12781, line: 109, type: !211)
!12800 = !DILocalVariable(name: "off", scope: !12788, file: !12781, line: 116, type: !163)
!12801 = !DILocalVariable(name: "rdivisor", scope: !12802, file: !12781, line: 119, type: !137)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !12781, line: 118, column: 18)
!12803 = distinct !DILexicalBlock(scope: !12788, file: !12781, line: 118, column: 6)
!12804 = !DILocation(line: 0, scope: !12788, inlinedAt: !12805)
!12805 = distinct !DILocation(line: 406, column: 9, scope: !12780)
!12806 = !DILocation(line: 145, column: 13, scope: !12807, inlinedAt: !12805)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !12781, line: 144, column: 10)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12781, line: 142, column: 7)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12781, line: 141, column: 24)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !12781, line: 141, column: 13)
!12811 = distinct !DILexicalBlock(scope: !12788, file: !12781, line: 134, column: 6)
!12812 = !DILocation(line: 406, column: 2, scope: !12780)
!12813 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1937, file: !1937, line: 817, type: !3145, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12814)
!12814 = !{!12815, !12816, !12817, !12818}
!12815 = !DILocalVariable(name: "entry", arg: 1, scope: !12813, file: !1937, line: 817, type: !3147)
!12816 = !DILocalVariable(name: "p1", arg: 2, scope: !12813, file: !1937, line: 818, type: !102)
!12817 = !DILocalVariable(name: "p2", arg: 3, scope: !12813, file: !1937, line: 818, type: !102)
!12818 = !DILocalVariable(name: "p3", arg: 4, scope: !12813, file: !1937, line: 818, type: !102)
!12819 = !DILocation(line: 0, scope: !12813)
!12820 = !DILocation(line: 822, column: 2, scope: !12813)
!12821 = !DILocation(line: 822, column: 17, scope: !12813)
!12822 = !DILocation(line: 822, column: 30, scope: !12813)
!12823 = !DILocation(line: 823, column: 2, scope: !12813)
!12824 = !DILocation(line: 845, column: 2, scope: !12813)
!12825 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1937, file: !1937, line: 888, type: !12826, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12828)
!12826 = !DISubroutineType(types: !12827)
!12827 = !{!103, !1941}
!12828 = !{!12829}
!12829 = !DILocalVariable(name: "thread", arg: 1, scope: !12825, file: !1937, line: 888, type: !1941)
!12830 = !DILocation(line: 0, scope: !12825)
!12831 = !DILocation(line: 893, column: 2, scope: !12825)
!12832 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1937, file: !1937, line: 897, type: !12833, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12835)
!12833 = !DISubroutineType(types: !12834)
!12834 = !{!103, !1941, !32}
!12835 = !{!12836, !12837}
!12836 = !DILocalVariable(name: "thread", arg: 1, scope: !12832, file: !1937, line: 897, type: !1941)
!12837 = !DILocalVariable(name: "options", arg: 2, scope: !12832, file: !1937, line: 897, type: !32)
!12838 = !DILocation(line: 0, scope: !12832)
!12839 = !DILocation(line: 902, column: 2, scope: !12832)
!12840 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1937, file: !1937, line: 1072, type: !12841, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12846)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{!103, !1940, !12843}
!12843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12844, size: 32)
!12844 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !263, line: 234, baseType: !12845)
!12845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !263, line: 192, elements: !162)
!12846 = !{!12847, !12848}
!12847 = !DILocalVariable(name: "thread", arg: 1, scope: !12840, file: !1937, line: 1072, type: !1940)
!12848 = !DILocalVariable(name: "stats", arg: 2, scope: !12840, file: !1937, line: 1073, type: !12843)
!12849 = !DILocation(line: 0, scope: !12840)
!12850 = !DILocation(line: 1075, column: 14, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12840, file: !1937, line: 1075, column: 6)
!12852 = !DILocation(line: 1075, column: 23, scope: !12851)
!12853 = !DILocation(line: 1086, column: 1, scope: !12840)
!12854 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1937, file: !1937, line: 1088, type: !12855, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12857)
!12855 = !DISubroutineType(types: !12856)
!12856 = !{!103, !12843}
!12857 = !{!12858}
!12858 = !DILocalVariable(name: "stats", arg: 1, scope: !12854, file: !1937, line: 1088, type: !12843)
!12859 = !DILocation(line: 0, scope: !12854)
!12860 = !DILocation(line: 1094, column: 12, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12854, file: !1937, line: 1094, column: 6)
!12862 = !DILocation(line: 1120, column: 1, scope: !12854)
!12863 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12864, file: !12864, line: 20, type: !2819, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !162)
!12864 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12865 = !DILocation(line: 30, column: 2, scope: !12863)
!12866 = !DILocation(line: 31, column: 1, scope: !12863)
!12867 = distinct !DISubprogram(name: "idle", scope: !12864, file: !12864, line: 33, type: !3150, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !12868)
!12868 = !{!12869, !12870, !12871}
!12869 = !DILocalVariable(name: "unused1", arg: 1, scope: !12867, file: !12864, line: 33, type: !102)
!12870 = !DILocalVariable(name: "unused2", arg: 2, scope: !12867, file: !12864, line: 33, type: !102)
!12871 = !DILocalVariable(name: "unused3", arg: 3, scope: !12867, file: !12864, line: 33, type: !102)
!12872 = !DILocation(line: 0, scope: !12867)
!12873 = !DILocation(line: 41, column: 2, scope: !12867)
!12874 = !DILocation(line: 55, column: 2, scope: !12875, inlinedAt: !12879)
!12875 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !12876)
!12876 = !{!12877, !12878}
!12877 = !DILocalVariable(name: "key", scope: !12875, file: !6129, line: 44, type: !32)
!12878 = !DILocalVariable(name: "tmp", scope: !12875, file: !6129, line: 53, type: !32)
!12879 = distinct !DILocation(line: 62, column: 10, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12867, file: !12864, line: 41, column: 15)
!12881 = !{i64 2239153}
!12882 = !DILocation(line: 0, scope: !12875, inlinedAt: !12879)
!12883 = !DILocation(line: 86, column: 3, scope: !12880)
!12884 = distinct !{!12884, !12873, !12885}
!12885 = !DILocation(line: 105, column: 2, scope: !12867)
!12886 = distinct !DISubprogram(name: "k_cpu_idle", scope: !357, file: !357, line: 5627, type: !2819, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2800, retainedNodes: !162)
!12887 = !DILocation(line: 5629, column: 2, scope: !12886)
!12888 = !DILocation(line: 5630, column: 1, scope: !12886)
!12889 = !DISubprogram(name: "arch_cpu_idle", scope: !3148, file: !3148, line: 167, type: !2819, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!12890 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2169, file: !2169, line: 93, type: !12891, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12893)
!12891 = !DISubroutineType(types: !12892)
!12892 = !{!632, !2064, !2064}
!12893 = !{!12894, !12895, !12896, !12897}
!12894 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12890, file: !2169, line: 93, type: !2064)
!12895 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12890, file: !2169, line: 94, type: !2064)
!12896 = !DILocalVariable(name: "b1", scope: !12890, file: !2169, line: 97, type: !632)
!12897 = !DILocalVariable(name: "b2", scope: !12890, file: !2169, line: 98, type: !632)
!12898 = !DILocation(line: 0, scope: !12890)
!12899 = !DILocation(line: 97, column: 30, scope: !12890)
!12900 = !DILocation(line: 98, column: 30, scope: !12890)
!12901 = !DILocation(line: 100, column: 9, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12890, file: !2169, line: 100, column: 6)
!12903 = !DILocation(line: 100, column: 6, scope: !12890)
!12904 = !DILocation(line: 125, column: 1, scope: !12890)
!12905 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2169, file: !2169, line: 428, type: !12906, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12908)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{null, !2064}
!12908 = !{!12909}
!12909 = !DILocalVariable(name: "curr", arg: 1, scope: !12905, file: !2169, line: 428, type: !2064)
!12910 = !DILocation(line: 0, scope: !12905)
!12911 = !DILocation(line: 434, column: 6, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12905, file: !2169, line: 434, column: 6)
!12913 = !DILocation(line: 434, column: 23, scope: !12912)
!12914 = !DILocation(line: 434, column: 6, scope: !12905)
!12915 = !DILocation(line: 435, column: 50, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12912, file: !2169, line: 434, column: 29)
!12917 = !DILocation(line: 435, column: 48, scope: !12916)
!12918 = !DILocation(line: 435, column: 29, scope: !12916)
!12919 = !DILocation(line: 436, column: 24, scope: !12916)
!12920 = !DILocation(line: 436, column: 3, scope: !12916)
!12921 = !DILocation(line: 437, column: 2, scope: !12916)
!12922 = !DILocation(line: 438, column: 1, scope: !12905)
!12923 = distinct !DISubprogram(name: "slice_time", scope: !2169, file: !2169, line: 407, type: !12924, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12926)
!12924 = !DISubroutineType(types: !12925)
!12925 = !{!103, !2064}
!12926 = !{!12927, !12928}
!12927 = !DILocalVariable(name: "curr", arg: 1, scope: !12923, file: !2169, line: 407, type: !2064)
!12928 = !DILocalVariable(name: "ret", scope: !12923, file: !2169, line: 409, type: !103)
!12929 = !DILocation(line: 0, scope: !12923)
!12930 = !DILocation(line: 409, column: 12, scope: !12923)
!12931 = !DILocation(line: 416, column: 2, scope: !12923)
!12932 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2169, file: !2169, line: 440, type: !12933, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12935)
!12933 = !DISubroutineType(types: !12934)
!12934 = !{null, !632, !103}
!12935 = !{!12936, !12937, !12938, !12944}
!12936 = !DILocalVariable(name: "slice", arg: 1, scope: !12932, file: !2169, line: 440, type: !632)
!12937 = !DILocalVariable(name: "prio", arg: 2, scope: !12932, file: !2169, line: 440, type: !103)
!12938 = !DILocalVariable(name: "__i", scope: !12939, file: !2169, line: 442, type: !12940)
!12939 = distinct !DILexicalBlock(scope: !12932, file: !2169, line: 442, column: 2)
!12940 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !12941)
!12941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !12942)
!12942 = !{!12943}
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12941, file: !368, line: 33, baseType: !103, size: 32)
!12944 = !DILocalVariable(name: "__key", scope: !12939, file: !2169, line: 442, type: !12940)
!12945 = !DILocation(line: 0, scope: !12932)
!12946 = !DILocation(line: 0, scope: !12939)
!12947 = !DILocalVariable(name: "l", arg: 1, scope: !12948, file: !368, line: 136, type: !12951)
!12948 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !12949, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12952)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{!12940, !12951}
!12951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 32)
!12952 = !{!12947, !12953}
!12953 = !DILocalVariable(name: "k", scope: !12948, file: !368, line: 139, type: !12940)
!12954 = !DILocation(line: 0, scope: !12948, inlinedAt: !12955)
!12955 = distinct !DILocation(line: 442, column: 2, scope: !12939)
!12956 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !12961)
!12957 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12958)
!12958 = !{!12959, !12960}
!12959 = !DILocalVariable(name: "key", scope: !12957, file: !6129, line: 44, type: !32)
!12960 = !DILocalVariable(name: "tmp", scope: !12957, file: !6129, line: 53, type: !32)
!12961 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !12955)
!12962 = !{i64 2283124}
!12963 = !DILocation(line: 0, scope: !12957, inlinedAt: !12961)
!12964 = !DILocation(line: 443, column: 29, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12966, file: !2169, line: 442, column: 26)
!12966 = distinct !DILexicalBlock(scope: !12939, file: !2169, line: 442, column: 2)
!12967 = !DILocation(line: 444, column: 17, scope: !12965)
!12968 = !DILocation(line: 445, column: 51, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12965, file: !2169, line: 445, column: 7)
!12970 = !DILocation(line: 445, column: 7, scope: !12965)
!12971 = !DILocation(line: 0, scope: !12965)
!12972 = !DILocation(line: 451, column: 18, scope: !12965)
!12973 = !DILocation(line: 452, column: 3, scope: !12965)
!12974 = !DILocalVariable(name: "key", arg: 2, scope: !12975, file: !368, line: 190, type: !12940)
!12975 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !12976, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12978)
!12976 = !DISubroutineType(types: !12977)
!12977 = !{null, !12951, !12940}
!12978 = !{!12979, !12974}
!12979 = !DILocalVariable(name: "l", arg: 1, scope: !12975, file: !368, line: 189, type: !12951)
!12980 = !DILocation(line: 0, scope: !12975, inlinedAt: !12981)
!12981 = distinct !DILocation(line: 442, column: 2, scope: !12966)
!12982 = !DILocalVariable(name: "key", arg: 1, scope: !12983, file: !6129, line: 84, type: !32)
!12983 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12984)
!12984 = !{!12982}
!12985 = !DILocation(line: 0, scope: !12983, inlinedAt: !12986)
!12986 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !12981)
!12987 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !12986)
!12988 = !{i64 2283941}
!12989 = !DILocation(line: 454, column: 1, scope: !12932)
!12990 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12781, file: !12781, line: 389, type: !7308, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12991)
!12991 = !{!12992}
!12992 = !DILocalVariable(name: "t", arg: 1, scope: !12990, file: !12781, line: 389, type: !137)
!12993 = !DILocation(line: 0, scope: !12990)
!12994 = !DILocalVariable(name: "t", arg: 1, scope: !12995, file: !12781, line: 102, type: !163)
!12995 = distinct !DISubprogram(name: "z_tmcvt", scope: !12781, file: !12781, line: 102, type: !12789, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !12996)
!12996 = !{!12994, !12997, !12998, !12999, !13000, !13001, !13002, !13003, !13004, !13005, !13006}
!12997 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12995, file: !12781, line: 102, type: !137)
!12998 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12995, file: !12781, line: 103, type: !137)
!12999 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12995, file: !12781, line: 103, type: !211)
!13000 = !DILocalVariable(name: "result32", arg: 5, scope: !12995, file: !12781, line: 104, type: !211)
!13001 = !DILocalVariable(name: "round_up", arg: 6, scope: !12995, file: !12781, line: 104, type: !211)
!13002 = !DILocalVariable(name: "round_off", arg: 7, scope: !12995, file: !12781, line: 105, type: !211)
!13003 = !DILocalVariable(name: "mul_ratio", scope: !12995, file: !12781, line: 107, type: !211)
!13004 = !DILocalVariable(name: "div_ratio", scope: !12995, file: !12781, line: 109, type: !211)
!13005 = !DILocalVariable(name: "off", scope: !12995, file: !12781, line: 116, type: !163)
!13006 = !DILocalVariable(name: "rdivisor", scope: !13007, file: !12781, line: 119, type: !137)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !12781, line: 118, column: 18)
!13008 = distinct !DILexicalBlock(scope: !12995, file: !12781, line: 118, column: 6)
!13009 = !DILocation(line: 0, scope: !12995, inlinedAt: !13010)
!13010 = distinct !DILocation(line: 392, column: 9, scope: !12990)
!13011 = !DILocation(line: 143, column: 25, scope: !13012, inlinedAt: !13010)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !12781, line: 142, column: 17)
!13013 = distinct !DILexicalBlock(scope: !13014, file: !12781, line: 142, column: 7)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !12781, line: 141, column: 24)
!13015 = distinct !DILexicalBlock(scope: !13016, file: !12781, line: 141, column: 13)
!13016 = distinct !DILexicalBlock(scope: !12995, file: !12781, line: 134, column: 6)
!13017 = !DILocation(line: 392, column: 2, scope: !12990)
!13018 = distinct !DISubprogram(name: "z_time_slice", scope: !2169, file: !2169, line: 502, type: !7945, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13019)
!13019 = !{!13020, !13021}
!13020 = !DILocalVariable(name: "ticks", arg: 1, scope: !13018, file: !2169, line: 502, type: !103)
!13021 = !DILocalVariable(name: "key", scope: !13018, file: !2169, line: 511, type: !12940)
!13022 = !DILocation(line: 0, scope: !13018)
!13023 = !DILocation(line: 0, scope: !12948, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 511, column: 25, scope: !13018)
!13025 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13026)
!13026 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13024)
!13027 = !DILocation(line: 0, scope: !12957, inlinedAt: !13026)
!13028 = !DILocation(line: 514, column: 6, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13018, file: !2169, line: 514, column: 6)
!13030 = !DILocation(line: 514, column: 25, scope: !13029)
!13031 = !DILocation(line: 514, column: 22, scope: !13029)
!13032 = !DILocation(line: 514, column: 6, scope: !13018)
!13033 = !DILocation(line: 515, column: 3, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13029, file: !2169, line: 514, column: 35)
!13035 = !DILocation(line: 0, scope: !12975, inlinedAt: !13036)
!13036 = distinct !DILocation(line: 516, column: 3, scope: !13034)
!13037 = !DILocation(line: 0, scope: !12983, inlinedAt: !13038)
!13038 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13036)
!13039 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13038)
!13040 = !DILocation(line: 517, column: 3, scope: !13034)
!13041 = !DILocation(line: 519, column: 18, scope: !13018)
!13042 = !DILocation(line: 522, column: 6, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13018, file: !2169, line: 522, column: 6)
!13044 = !DILocation(line: 522, column: 27, scope: !13043)
!13045 = !DILocation(line: 522, column: 30, scope: !13043)
!13046 = !DILocation(line: 522, column: 6, scope: !13018)
!13047 = !DILocation(line: 523, column: 30, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !2169, line: 523, column: 7)
!13049 = distinct !DILexicalBlock(scope: !13043, file: !2169, line: 522, column: 51)
!13050 = !DILocation(line: 523, column: 13, scope: !13048)
!13051 = !DILocation(line: 523, column: 7, scope: !13049)
!13052 = !DILocation(line: 530, column: 10, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13048, file: !2169, line: 523, column: 43)
!13054 = !DILocation(line: 531, column: 3, scope: !13053)
!13055 = !DILocation(line: 532, column: 30, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13048, file: !2169, line: 531, column: 10)
!13057 = !DILocation(line: 535, column: 29, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13043, file: !2169, line: 534, column: 9)
!13059 = !DILocation(line: 0, scope: !12975, inlinedAt: !13060)
!13060 = distinct !DILocation(line: 537, column: 2, scope: !13018)
!13061 = !DILocation(line: 0, scope: !12983, inlinedAt: !13062)
!13062 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13060)
!13063 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13062)
!13064 = !DILocation(line: 538, column: 1, scope: !13018)
!13065 = distinct !DISubprogram(name: "sliceable", scope: !2169, file: !2169, line: 468, type: !13066, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13068)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{!211, !2064}
!13068 = !{!13069, !13070}
!13069 = !DILocalVariable(name: "thread", arg: 1, scope: !13065, file: !2169, line: 468, type: !2064)
!13070 = !DILocalVariable(name: "ret", scope: !13065, file: !2169, line: 470, type: !211)
!13071 = !DILocation(line: 0, scope: !13065)
!13072 = !DILocation(line: 470, column: 13, scope: !13065)
!13073 = !DILocation(line: 471, column: 3, scope: !13065)
!13074 = !DILocation(line: 471, column: 7, scope: !13065)
!13075 = !DILocation(line: 472, column: 3, scope: !13065)
!13076 = !DILocation(line: 472, column: 37, scope: !13065)
!13077 = !DILocation(line: 472, column: 24, scope: !13065)
!13078 = !DILocation(line: 472, column: 43, scope: !13065)
!13079 = !DILocation(line: 472, column: 7, scope: !13065)
!13080 = !DILocation(line: 473, column: 3, scope: !13065)
!13081 = !DILocation(line: 473, column: 7, scope: !13065)
!13082 = !DILocation(line: 473, column: 6, scope: !13065)
!13083 = !DILocation(line: 479, column: 2, scope: !13065)
!13084 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2169, file: !2169, line: 482, type: !13085, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13087)
!13085 = !DISubroutineType(types: !13086)
!13086 = !{!12940, !12940}
!13087 = !{!13088, !13089}
!13088 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13084, file: !2169, line: 482, type: !12940)
!13089 = !DILocalVariable(name: "curr", scope: !13084, file: !2169, line: 484, type: !2064)
!13090 = !DILocation(line: 0, scope: !13084)
!13091 = !DILocation(line: 484, column: 26, scope: !13084)
!13092 = !DILocation(line: 493, column: 7, scope: !13093)
!13093 = distinct !DILexicalBlock(scope: !13084, file: !2169, line: 493, column: 6)
!13094 = !DILocation(line: 493, column: 6, scope: !13084)
!13095 = !DILocation(line: 494, column: 3, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !2169, line: 493, column: 49)
!13097 = !DILocation(line: 495, column: 2, scope: !13096)
!13098 = !DILocation(line: 496, column: 2, scope: !13084)
!13099 = !DILocation(line: 499, column: 1, scope: !13084)
!13100 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12220, file: !12220, line: 106, type: !13066, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13101)
!13101 = !{!13102, !13103}
!13102 = !DILocalVariable(name: "thread", arg: 1, scope: !13100, file: !12220, line: 106, type: !2064)
!13103 = !DILocalVariable(name: "state", scope: !13100, file: !12220, line: 108, type: !208)
!13104 = !DILocation(line: 0, scope: !13100)
!13105 = !DILocation(line: 108, column: 31, scope: !13100)
!13106 = !DILocation(line: 110, column: 16, scope: !13100)
!13107 = !DILocation(line: 111, column: 41, scope: !13100)
!13108 = !DILocation(line: 110, column: 2, scope: !13100)
!13109 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2169, file: !2169, line: 393, type: !12906, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13110)
!13110 = !{!13111}
!13111 = !DILocalVariable(name: "thread", arg: 1, scope: !13109, file: !2169, line: 393, type: !2064)
!13112 = !DILocation(line: 0, scope: !13109)
!13113 = !DILocation(line: 395, column: 6, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13109, file: !2169, line: 395, column: 6)
!13115 = !DILocation(line: 395, column: 6, scope: !13109)
!13116 = !DILocalVariable(name: "thread", arg: 1, scope: !13117, file: !2169, line: 264, type: !2064)
!13117 = distinct !DISubprogram(name: "dequeue_thread", scope: !2169, file: !2169, line: 264, type: !12906, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13118)
!13118 = !{!13116}
!13119 = !DILocation(line: 0, scope: !13117, inlinedAt: !13120)
!13120 = distinct !DILocation(line: 396, column: 3, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13114, file: !2169, line: 395, column: 34)
!13122 = !DILocation(line: 266, column: 15, scope: !13117, inlinedAt: !13120)
!13123 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !13120)
!13124 = !DILocalVariable(name: "thread", arg: 1, scope: !13125, file: !2169, line: 232, type: !2064)
!13125 = distinct !DISubprogram(name: "runq_remove", scope: !2169, file: !2169, line: 232, type: !12906, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13126)
!13126 = !{!13124}
!13127 = !DILocation(line: 0, scope: !13125, inlinedAt: !13128)
!13128 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !13120)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !2169, line: 267, column: 35)
!13130 = distinct !DILexicalBlock(scope: !13117, file: !2169, line: 267, column: 6)
!13131 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !13128)
!13132 = !DILocation(line: 397, column: 2, scope: !13121)
!13133 = !DILocalVariable(name: "thread", arg: 1, scope: !13134, file: !2169, line: 250, type: !2064)
!13134 = distinct !DISubprogram(name: "queue_thread", scope: !2169, file: !2169, line: 250, type: !12906, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13135)
!13135 = !{!13133}
!13136 = !DILocation(line: 0, scope: !13134, inlinedAt: !13137)
!13137 = distinct !DILocation(line: 398, column: 2, scope: !13109)
!13138 = !DILocation(line: 252, column: 15, scope: !13134, inlinedAt: !13137)
!13139 = !DILocation(line: 252, column: 28, scope: !13134, inlinedAt: !13137)
!13140 = !DILocalVariable(name: "thread", arg: 1, scope: !13141, file: !2169, line: 227, type: !2064)
!13141 = distinct !DISubprogram(name: "runq_add", scope: !2169, file: !2169, line: 227, type: !12906, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13142)
!13142 = !{!13140}
!13143 = !DILocation(line: 0, scope: !13141, inlinedAt: !13144)
!13144 = distinct !DILocation(line: 254, column: 3, scope: !13145, inlinedAt: !13137)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !2169, line: 253, column: 35)
!13146 = distinct !DILexicalBlock(scope: !13134, file: !2169, line: 253, column: 6)
!13147 = !DILocalVariable(name: "pq", arg: 1, scope: !13148, file: !2169, line: 181, type: !13151)
!13148 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2169, file: !2169, line: 181, type: !13149, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13152)
!13149 = !DISubroutineType(types: !13150)
!13150 = !{null, !13151, !2064}
!13151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!13152 = !{!13147, !13153, !13154}
!13153 = !DILocalVariable(name: "thread", arg: 2, scope: !13148, file: !2169, line: 182, type: !2064)
!13154 = !DILocalVariable(name: "t", scope: !13148, file: !2169, line: 184, type: !2064)
!13155 = !DILocation(line: 0, scope: !13148, inlinedAt: !13156)
!13156 = distinct !DILocation(line: 229, column: 2, scope: !13141, inlinedAt: !13144)
!13157 = !DILocation(line: 188, column: 2, scope: !13158, inlinedAt: !13156)
!13158 = distinct !DILexicalBlock(scope: !13148, file: !2169, line: 188, column: 2)
!13159 = !DILocation(line: 188, column: 2, scope: !13160, inlinedAt: !13156)
!13160 = distinct !DILexicalBlock(scope: !13158, file: !2169, line: 188, column: 2)
!13161 = !DILocation(line: 0, scope: !13158, inlinedAt: !13156)
!13162 = !DILocation(line: 189, column: 7, scope: !13163, inlinedAt: !13156)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !2169, line: 189, column: 7)
!13164 = distinct !DILexicalBlock(scope: !13160, file: !2169, line: 188, column: 56)
!13165 = !DILocation(line: 189, column: 35, scope: !13163, inlinedAt: !13156)
!13166 = !DILocation(line: 189, column: 7, scope: !13164, inlinedAt: !13156)
!13167 = !DILocation(line: 191, column: 21, scope: !13168, inlinedAt: !13156)
!13168 = distinct !DILexicalBlock(scope: !13163, file: !2169, line: 189, column: 40)
!13169 = !DILocation(line: 190, column: 4, scope: !13168, inlinedAt: !13156)
!13170 = !DILocation(line: 192, column: 4, scope: !13168, inlinedAt: !13156)
!13171 = distinct !{!13171, !13157, !13172}
!13172 = !DILocation(line: 194, column: 2, scope: !13158, inlinedAt: !13156)
!13173 = !DILocation(line: 196, column: 37, scope: !13148, inlinedAt: !13156)
!13174 = !DILocation(line: 196, column: 2, scope: !13148, inlinedAt: !13156)
!13175 = !DILocation(line: 197, column: 1, scope: !13148, inlinedAt: !13156)
!13176 = !DILocation(line: 399, column: 25, scope: !13109)
!13177 = !DILocation(line: 399, column: 22, scope: !13109)
!13178 = !DILocation(line: 399, column: 2, scope: !13109)
!13179 = !DILocation(line: 400, column: 1, scope: !13109)
!13180 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12220, file: !12220, line: 136, type: !13066, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13181)
!13181 = !{!13182}
!13182 = !DILocalVariable(name: "thread", arg: 1, scope: !13180, file: !12220, line: 136, type: !2064)
!13183 = !DILocation(line: 0, scope: !13180)
!13184 = !DILocation(line: 138, column: 9, scope: !13180)
!13185 = !DILocation(line: 138, column: 2, scope: !13180)
!13186 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2169, file: !2169, line: 1137, type: !13149, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13187)
!13187 = !{!13188, !13189}
!13188 = !DILocalVariable(name: "pq", arg: 1, scope: !13186, file: !2169, line: 1137, type: !13151)
!13189 = !DILocalVariable(name: "thread", arg: 2, scope: !13186, file: !2169, line: 1137, type: !2064)
!13190 = !DILocation(line: 0, scope: !13186)
!13191 = !DILocation(line: 1141, column: 33, scope: !13186)
!13192 = !DILocation(line: 1141, column: 2, scope: !13186)
!13193 = !DILocation(line: 1142, column: 1, scope: !13186)
!13194 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !13195, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13197)
!13195 = !DISubroutineType(types: !13196)
!13196 = !{!2165, !13151}
!13197 = !{!13198}
!13198 = !DILocalVariable(name: "list", arg: 1, scope: !13194, file: !273, line: 294, type: !13151)
!13199 = !DILocation(line: 0, scope: !13194)
!13200 = !DILocation(line: 296, column: 9, scope: !13194)
!13201 = !DILocation(line: 296, column: 49, scope: !13194)
!13202 = !DILocation(line: 296, column: 2, scope: !13194)
!13203 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !13204, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13206)
!13204 = !DISubroutineType(types: !13205)
!13205 = !{null, !2165, !2165}
!13206 = !{!13207, !13208, !13209}
!13207 = !DILocalVariable(name: "successor", arg: 1, scope: !13203, file: !273, line: 443, type: !2165)
!13208 = !DILocalVariable(name: "node", arg: 2, scope: !13203, file: !273, line: 443, type: !2165)
!13209 = !DILocalVariable(name: "prev", scope: !13203, file: !273, line: 445, type: !13210)
!13210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2165)
!13211 = !DILocation(line: 0, scope: !13203)
!13212 = !DILocation(line: 445, column: 39, scope: !13203)
!13213 = !DILocation(line: 447, column: 8, scope: !13203)
!13214 = !DILocation(line: 447, column: 13, scope: !13203)
!13215 = !DILocation(line: 448, column: 8, scope: !13203)
!13216 = !DILocation(line: 448, column: 13, scope: !13203)
!13217 = !DILocation(line: 449, column: 8, scope: !13203)
!13218 = !DILocation(line: 449, column: 13, scope: !13203)
!13219 = !DILocation(line: 450, column: 18, scope: !13203)
!13220 = !DILocation(line: 451, column: 1, scope: !13203)
!13221 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !13222, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13224)
!13222 = !DISubroutineType(types: !13223)
!13223 = !{!2165, !13151, !2165}
!13224 = !{!13225, !13226}
!13225 = !DILocalVariable(name: "list", arg: 1, scope: !13221, file: !273, line: 341, type: !13151)
!13226 = !DILocalVariable(name: "node", arg: 2, scope: !13221, file: !273, line: 342, type: !2165)
!13227 = !DILocation(line: 0, scope: !13221)
!13228 = !DILocation(line: 344, column: 15, scope: !13221)
!13229 = !DILocation(line: 344, column: 9, scope: !13221)
!13230 = !DILocation(line: 344, column: 26, scope: !13221)
!13231 = !DILocation(line: 344, column: 2, scope: !13221)
!13232 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !13233, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13235)
!13233 = !DISubroutineType(types: !13234)
!13234 = !{null, !13151, !2165}
!13235 = !{!13236, !13237, !13238}
!13236 = !DILocalVariable(name: "list", arg: 1, scope: !13232, file: !273, line: 404, type: !13151)
!13237 = !DILocalVariable(name: "node", arg: 2, scope: !13232, file: !273, line: 404, type: !2165)
!13238 = !DILocalVariable(name: "tail", scope: !13232, file: !273, line: 406, type: !13210)
!13239 = !DILocation(line: 0, scope: !13232)
!13240 = !DILocation(line: 406, column: 34, scope: !13232)
!13241 = !DILocation(line: 408, column: 8, scope: !13232)
!13242 = !DILocation(line: 408, column: 13, scope: !13232)
!13243 = !DILocation(line: 409, column: 8, scope: !13232)
!13244 = !DILocation(line: 409, column: 13, scope: !13232)
!13245 = !DILocation(line: 411, column: 8, scope: !13232)
!13246 = !DILocation(line: 411, column: 13, scope: !13232)
!13247 = !DILocation(line: 412, column: 13, scope: !13232)
!13248 = !DILocation(line: 413, column: 1, scope: !13232)
!13249 = distinct !DISubprogram(name: "update_cache", scope: !2169, file: !2169, line: 559, type: !7945, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13250)
!13250 = !{!13251, !13252}
!13251 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13249, file: !2169, line: 559, type: !103)
!13252 = !DILocalVariable(name: "thread", scope: !13249, file: !2169, line: 562, type: !2064)
!13253 = !DILocation(line: 0, scope: !13249)
!13254 = !DILocation(line: 239, column: 9, scope: !13255, inlinedAt: !13258)
!13255 = distinct !DISubprogram(name: "runq_best", scope: !2169, file: !2169, line: 237, type: !13256, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!13256 = !DISubroutineType(types: !13257)
!13257 = !{!2064}
!13258 = distinct !DILocation(line: 314, column: 28, scope: !13259, inlinedAt: !13262)
!13259 = distinct !DISubprogram(name: "next_up", scope: !2169, file: !2169, line: 312, type: !13256, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13260)
!13260 = !{!13261}
!13261 = !DILocalVariable(name: "thread", scope: !13259, file: !2169, line: 314, type: !2064)
!13262 = distinct !DILocation(line: 562, column: 28, scope: !13249)
!13263 = !DILocation(line: 0, scope: !13259, inlinedAt: !13262)
!13264 = !DILocation(line: 340, column: 17, scope: !13259, inlinedAt: !13262)
!13265 = !DILocation(line: 340, column: 9, scope: !13259, inlinedAt: !13262)
!13266 = !DILocalVariable(name: "thread", arg: 1, scope: !13267, file: !2169, line: 127, type: !2064)
!13267 = distinct !DISubprogram(name: "should_preempt", scope: !2169, file: !2169, line: 127, type: !13268, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13270)
!13268 = !DISubroutineType(types: !13269)
!13269 = !{!211, !2064, !103}
!13270 = !{!13266, !13271}
!13271 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13267, file: !2169, line: 128, type: !103)
!13272 = !DILocation(line: 0, scope: !13267, inlinedAt: !13273)
!13273 = distinct !DILocation(line: 564, column: 6, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13249, file: !2169, line: 564, column: 6)
!13275 = !DILocation(line: 133, column: 17, scope: !13276, inlinedAt: !13273)
!13276 = distinct !DILexicalBlock(scope: !13267, file: !2169, line: 133, column: 6)
!13277 = !DILocation(line: 0, scope: !13274)
!13278 = !DILocation(line: 133, column: 6, scope: !13267, inlinedAt: !13273)
!13279 = !DILocation(line: 140, column: 6, scope: !13280, inlinedAt: !13273)
!13280 = distinct !DILexicalBlock(scope: !13267, file: !2169, line: 140, column: 6)
!13281 = !DILocation(line: 140, column: 6, scope: !13267, inlinedAt: !13273)
!13282 = !DILocation(line: 150, column: 9, scope: !13283, inlinedAt: !13273)
!13283 = distinct !DILexicalBlock(scope: !13267, file: !2169, line: 149, column: 6)
!13284 = !DILocation(line: 149, column: 6, scope: !13267, inlinedAt: !13273)
!13285 = !DILocation(line: 157, column: 6, scope: !13286, inlinedAt: !13273)
!13286 = distinct !DILexicalBlock(scope: !13267, file: !2169, line: 157, column: 6)
!13287 = !DILocation(line: 564, column: 6, scope: !13249)
!13288 = !DILocation(line: 566, column: 14, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !2169, line: 566, column: 7)
!13290 = distinct !DILexicalBlock(scope: !13274, file: !2169, line: 564, column: 42)
!13291 = !DILocation(line: 566, column: 7, scope: !13290)
!13292 = !DILocation(line: 567, column: 4, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13289, file: !2169, line: 566, column: 27)
!13294 = !DILocation(line: 568, column: 3, scope: !13293)
!13295 = !DILocation(line: 585, column: 1, scope: !13249)
!13296 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2169, file: !2169, line: 1144, type: !13297, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13299)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!2064, !13151}
!13299 = !{!13300, !13301, !13302}
!13300 = !DILocalVariable(name: "pq", arg: 1, scope: !13296, file: !2169, line: 1144, type: !13151)
!13301 = !DILocalVariable(name: "thread", scope: !13296, file: !2169, line: 1146, type: !2064)
!13302 = !DILocalVariable(name: "n", scope: !13296, file: !2169, line: 1147, type: !2165)
!13303 = !DILocation(line: 0, scope: !13296)
!13304 = !DILocation(line: 1147, column: 19, scope: !13296)
!13305 = !DILocation(line: 1152, column: 2, scope: !13296)
!13306 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12220, file: !12220, line: 115, type: !13066, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13307)
!13307 = !{!13308}
!13308 = !DILocalVariable(name: "thread", arg: 1, scope: !13306, file: !12220, line: 115, type: !2064)
!13309 = !DILocation(line: 0, scope: !13306)
!13310 = !DILocation(line: 117, column: 46, scope: !13306)
!13311 = !DILocation(line: 117, column: 10, scope: !13306)
!13312 = !DILocation(line: 117, column: 9, scope: !13306)
!13313 = !DILocation(line: 117, column: 2, scope: !13306)
!13314 = distinct !DISubprogram(name: "is_preempt", scope: !2169, file: !2169, line: 62, type: !12924, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13315)
!13315 = !{!13316}
!13316 = !DILocalVariable(name: "thread", arg: 1, scope: !13314, file: !2169, line: 62, type: !2064)
!13317 = !DILocation(line: 0, scope: !13314)
!13318 = !DILocation(line: 65, column: 22, scope: !13314)
!13319 = !DILocation(line: 65, column: 30, scope: !13314)
!13320 = !DILocation(line: 65, column: 2, scope: !13314)
!13321 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12614, file: !12614, line: 35, type: !13322, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13326)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!211, !13324}
!13324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13325, size: 32)
!13325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!13326 = !{!13327}
!13327 = !DILocalVariable(name: "to", arg: 1, scope: !13321, file: !12614, line: 35, type: !13324)
!13328 = !DILocation(line: 0, scope: !13321)
!13329 = !DILocation(line: 37, column: 35, scope: !13321)
!13330 = !DILocation(line: 37, column: 10, scope: !13321)
!13331 = !DILocation(line: 37, column: 9, scope: !13321)
!13332 = !DILocation(line: 37, column: 2, scope: !13321)
!13333 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !13334, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13338)
!13334 = !DISubroutineType(types: !13335)
!13335 = !{!211, !13336}
!13336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13337, size: 32)
!13337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2074)
!13338 = !{!13339}
!13339 = !DILocalVariable(name: "node", arg: 1, scope: !13333, file: !273, line: 225, type: !13336)
!13340 = !DILocation(line: 0, scope: !13333)
!13341 = !DILocation(line: 227, column: 15, scope: !13333)
!13342 = !DILocation(line: 227, column: 20, scope: !13333)
!13343 = !DILocation(line: 227, column: 2, scope: !13333)
!13344 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !13222, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13345)
!13345 = !{!13346, !13347}
!13346 = !DILocalVariable(name: "list", arg: 1, scope: !13344, file: !273, line: 325, type: !13151)
!13347 = !DILocalVariable(name: "node", arg: 2, scope: !13344, file: !273, line: 326, type: !2165)
!13348 = !DILocation(line: 0, scope: !13344)
!13349 = !DILocation(line: 328, column: 24, scope: !13344)
!13350 = !DILocation(line: 328, column: 15, scope: !13344)
!13351 = !DILocation(line: 328, column: 9, scope: !13344)
!13352 = !DILocation(line: 328, column: 45, scope: !13344)
!13353 = !DILocation(line: 328, column: 2, scope: !13344)
!13354 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !13355, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!211, !13151}
!13357 = !{!13358}
!13358 = !DILocalVariable(name: "list", arg: 1, scope: !13354, file: !273, line: 266, type: !13151)
!13359 = !DILocation(line: 0, scope: !13354)
!13360 = !DILocation(line: 268, column: 15, scope: !13354)
!13361 = !DILocation(line: 268, column: 20, scope: !13354)
!13362 = !DILocation(line: 268, column: 2, scope: !13354)
!13363 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !13364, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13366)
!13364 = !DISubroutineType(types: !13365)
!13365 = !{null, !2165}
!13366 = !{!13367, !13368, !13369}
!13367 = !DILocalVariable(name: "node", arg: 1, scope: !13363, file: !273, line: 496, type: !2165)
!13368 = !DILocalVariable(name: "prev", scope: !13363, file: !273, line: 498, type: !13210)
!13369 = !DILocalVariable(name: "next", scope: !13363, file: !273, line: 499, type: !13210)
!13370 = !DILocation(line: 0, scope: !13363)
!13371 = !DILocation(line: 498, column: 34, scope: !13363)
!13372 = !DILocation(line: 499, column: 34, scope: !13363)
!13373 = !DILocation(line: 501, column: 8, scope: !13363)
!13374 = !DILocation(line: 501, column: 13, scope: !13363)
!13375 = !DILocation(line: 502, column: 8, scope: !13363)
!13376 = !DILocation(line: 502, column: 13, scope: !13363)
!13377 = !DILocation(line: 503, column: 2, scope: !13363)
!13378 = !DILocation(line: 504, column: 1, scope: !13363)
!13379 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !13364, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13380)
!13380 = !{!13381}
!13381 = !DILocalVariable(name: "node", arg: 1, scope: !13379, file: !273, line: 211, type: !2165)
!13382 = !DILocation(line: 0, scope: !13379)
!13383 = !DILocation(line: 213, column: 8, scope: !13379)
!13384 = !DILocation(line: 213, column: 13, scope: !13379)
!13385 = !DILocation(line: 214, column: 8, scope: !13379)
!13386 = !DILocation(line: 214, column: 13, scope: !13379)
!13387 = !DILocation(line: 215, column: 1, scope: !13379)
!13388 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12220, file: !12220, line: 131, type: !13389, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13391)
!13389 = !DISubroutineType(types: !13390)
!13390 = !{!211, !2064, !137}
!13391 = !{!13392, !13393}
!13392 = !DILocalVariable(name: "thread", arg: 1, scope: !13388, file: !12220, line: 131, type: !2064)
!13393 = !DILocalVariable(name: "state", arg: 2, scope: !13388, file: !12220, line: 131, type: !137)
!13394 = !DILocation(line: 0, scope: !13388)
!13395 = !DILocation(line: 133, column: 23, scope: !13388)
!13396 = !DILocation(line: 133, column: 45, scope: !13388)
!13397 = !DILocation(line: 133, column: 2, scope: !13388)
!13398 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12220, file: !12220, line: 211, type: !13399, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13401)
!13399 = !DISubroutineType(types: !13400)
!13400 = !{!211, !103, !103}
!13401 = !{!13402, !13403}
!13402 = !DILocalVariable(name: "prio", arg: 1, scope: !13398, file: !12220, line: 211, type: !103)
!13403 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13398, file: !12220, line: 211, type: !103)
!13404 = !DILocation(line: 0, scope: !13398)
!13405 = !DILocation(line: 213, column: 9, scope: !13398)
!13406 = !DILocation(line: 213, column: 2, scope: !13398)
!13407 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12220, file: !12220, line: 83, type: !13066, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13408)
!13408 = !{!13409}
!13409 = !DILocalVariable(name: "thread", arg: 1, scope: !13407, file: !12220, line: 83, type: !2064)
!13410 = !DILocation(line: 0, scope: !13407)
!13411 = !DILocation(line: 89, column: 16, scope: !13407)
!13412 = !DILocation(line: 89, column: 2, scope: !13407)
!13413 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12220, file: !12220, line: 206, type: !13399, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13414)
!13414 = !{!13415, !13416}
!13415 = !DILocalVariable(name: "prio1", arg: 1, scope: !13413, file: !12220, line: 206, type: !103)
!13416 = !DILocalVariable(name: "prio2", arg: 2, scope: !13413, file: !12220, line: 206, type: !103)
!13417 = !DILocation(line: 0, scope: !13413)
!13418 = !DILocation(line: 208, column: 15, scope: !13413)
!13419 = !DILocation(line: 208, column: 2, scope: !13413)
!13420 = distinct !DISubprogram(name: "z_ready_thread", scope: !2169, file: !2169, line: 635, type: !12906, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13421)
!13421 = !{!13422, !13423, !13425}
!13422 = !DILocalVariable(name: "thread", arg: 1, scope: !13420, file: !2169, line: 635, type: !2064)
!13423 = !DILocalVariable(name: "__i", scope: !13424, file: !2169, line: 637, type: !12940)
!13424 = distinct !DILexicalBlock(scope: !13420, file: !2169, line: 637, column: 2)
!13425 = !DILocalVariable(name: "__key", scope: !13424, file: !2169, line: 637, type: !12940)
!13426 = !DILocation(line: 0, scope: !13420)
!13427 = !DILocation(line: 0, scope: !13424)
!13428 = !DILocation(line: 0, scope: !12948, inlinedAt: !13429)
!13429 = distinct !DILocation(line: 637, column: 2, scope: !13424)
!13430 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13431)
!13431 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13429)
!13432 = !DILocation(line: 0, scope: !12957, inlinedAt: !13431)
!13433 = !DILocation(line: 639, column: 4, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !2169, line: 638, column: 41)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !2169, line: 638, column: 7)
!13436 = distinct !DILexicalBlock(scope: !13437, file: !2169, line: 637, column: 26)
!13437 = distinct !DILexicalBlock(scope: !13424, file: !2169, line: 637, column: 2)
!13438 = !DILocation(line: 0, scope: !12975, inlinedAt: !13439)
!13439 = distinct !DILocation(line: 637, column: 2, scope: !13437)
!13440 = !DILocation(line: 0, scope: !12983, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13439)
!13442 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13441)
!13443 = !DILocation(line: 642, column: 1, scope: !13420)
!13444 = distinct !DISubprogram(name: "ready_thread", scope: !2169, file: !2169, line: 617, type: !12906, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13445)
!13445 = !{!13446}
!13446 = !DILocalVariable(name: "thread", arg: 1, scope: !13444, file: !2169, line: 617, type: !2064)
!13447 = !DILocation(line: 0, scope: !13444)
!13448 = !DILocation(line: 626, column: 7, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13444, file: !2169, line: 626, column: 6)
!13450 = !DILocation(line: 626, column: 34, scope: !13449)
!13451 = !DILocation(line: 626, column: 37, scope: !13449)
!13452 = !DILocation(line: 626, column: 6, scope: !13444)
!13453 = !DILocation(line: 0, scope: !13134, inlinedAt: !13454)
!13454 = distinct !DILocation(line: 629, column: 3, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13449, file: !2169, line: 626, column: 64)
!13456 = !DILocation(line: 252, column: 15, scope: !13134, inlinedAt: !13454)
!13457 = !DILocation(line: 252, column: 28, scope: !13134, inlinedAt: !13454)
!13458 = !DILocation(line: 0, scope: !13141, inlinedAt: !13459)
!13459 = distinct !DILocation(line: 254, column: 3, scope: !13145, inlinedAt: !13454)
!13460 = !DILocation(line: 0, scope: !13148, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 229, column: 2, scope: !13141, inlinedAt: !13459)
!13462 = !DILocation(line: 188, column: 2, scope: !13158, inlinedAt: !13461)
!13463 = !DILocation(line: 188, column: 2, scope: !13160, inlinedAt: !13461)
!13464 = !DILocation(line: 0, scope: !13158, inlinedAt: !13461)
!13465 = !DILocation(line: 189, column: 7, scope: !13163, inlinedAt: !13461)
!13466 = !DILocation(line: 189, column: 35, scope: !13163, inlinedAt: !13461)
!13467 = !DILocation(line: 189, column: 7, scope: !13164, inlinedAt: !13461)
!13468 = !DILocation(line: 191, column: 21, scope: !13168, inlinedAt: !13461)
!13469 = !DILocation(line: 190, column: 4, scope: !13168, inlinedAt: !13461)
!13470 = !DILocation(line: 192, column: 4, scope: !13168, inlinedAt: !13461)
!13471 = distinct !{!13471, !13462, !13472}
!13472 = !DILocation(line: 194, column: 2, scope: !13158, inlinedAt: !13461)
!13473 = !DILocation(line: 196, column: 37, scope: !13148, inlinedAt: !13461)
!13474 = !DILocation(line: 196, column: 2, scope: !13148, inlinedAt: !13461)
!13475 = !DILocation(line: 197, column: 1, scope: !13148, inlinedAt: !13461)
!13476 = !DILocation(line: 630, column: 3, scope: !13455)
!13477 = !DILocation(line: 632, column: 2, scope: !13455)
!13478 = !DILocation(line: 633, column: 1, scope: !13444)
!13479 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12220, file: !12220, line: 120, type: !13066, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13480)
!13480 = !{!13481}
!13481 = !DILocalVariable(name: "thread", arg: 1, scope: !13479, file: !12220, line: 120, type: !2064)
!13482 = !DILocation(line: 0, scope: !13479)
!13483 = !DILocation(line: 122, column: 12, scope: !13479)
!13484 = !DILocation(line: 122, column: 62, scope: !13479)
!13485 = !DILocation(line: 123, column: 4, scope: !13479)
!13486 = !DILocation(line: 122, column: 2, scope: !13479)
!13487 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2169, file: !2169, line: 644, type: !12906, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13488)
!13488 = !{!13489, !13490, !13492}
!13489 = !DILocalVariable(name: "thread", arg: 1, scope: !13487, file: !2169, line: 644, type: !2064)
!13490 = !DILocalVariable(name: "__i", scope: !13491, file: !2169, line: 646, type: !12940)
!13491 = distinct !DILexicalBlock(scope: !13487, file: !2169, line: 646, column: 2)
!13492 = !DILocalVariable(name: "__key", scope: !13491, file: !2169, line: 646, type: !12940)
!13493 = !DILocation(line: 0, scope: !13487)
!13494 = !DILocation(line: 0, scope: !13491)
!13495 = !DILocation(line: 0, scope: !12948, inlinedAt: !13496)
!13496 = distinct !DILocation(line: 646, column: 2, scope: !13491)
!13497 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13496)
!13499 = !DILocation(line: 0, scope: !12957, inlinedAt: !13498)
!13500 = !DILocation(line: 647, column: 3, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13502, file: !2169, line: 646, column: 26)
!13502 = distinct !DILexicalBlock(scope: !13491, file: !2169, line: 646, column: 2)
!13503 = !DILocation(line: 0, scope: !12975, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 646, column: 2, scope: !13502)
!13505 = !DILocation(line: 0, scope: !12983, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13504)
!13507 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13506)
!13508 = !DILocation(line: 649, column: 1, scope: !13487)
!13509 = distinct !DISubprogram(name: "z_sched_start", scope: !2169, file: !2169, line: 651, type: !12906, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13510)
!13510 = !{!13511, !13512}
!13511 = !DILocalVariable(name: "thread", arg: 1, scope: !13509, file: !2169, line: 651, type: !2064)
!13512 = !DILocalVariable(name: "key", scope: !13509, file: !2169, line: 653, type: !12940)
!13513 = !DILocation(line: 0, scope: !13509)
!13514 = !DILocation(line: 0, scope: !12948, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 653, column: 25, scope: !13509)
!13516 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13517)
!13517 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13515)
!13518 = !DILocation(line: 0, scope: !12957, inlinedAt: !13517)
!13519 = !DILocation(line: 655, column: 6, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13509, file: !2169, line: 655, column: 6)
!13521 = !DILocation(line: 655, column: 6, scope: !13509)
!13522 = !DILocation(line: 0, scope: !12975, inlinedAt: !13523)
!13523 = distinct !DILocation(line: 656, column: 3, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13520, file: !2169, line: 655, column: 36)
!13525 = !DILocation(line: 0, scope: !12983, inlinedAt: !13526)
!13526 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13523)
!13527 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13526)
!13528 = !DILocation(line: 657, column: 3, scope: !13524)
!13529 = !DILocation(line: 660, column: 2, scope: !13509)
!13530 = !DILocation(line: 661, column: 2, scope: !13509)
!13531 = !DILocation(line: 662, column: 2, scope: !13509)
!13532 = !DILocation(line: 663, column: 1, scope: !13509)
!13533 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12220, file: !12220, line: 126, type: !13066, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13534)
!13534 = !{!13535}
!13535 = !DILocalVariable(name: "thread", arg: 1, scope: !13533, file: !12220, line: 126, type: !2064)
!13536 = !DILocation(line: 0, scope: !13533)
!13537 = !DILocation(line: 128, column: 23, scope: !13533)
!13538 = !DILocation(line: 128, column: 36, scope: !13533)
!13539 = !DILocation(line: 128, column: 56, scope: !13533)
!13540 = !DILocation(line: 128, column: 2, scope: !13533)
!13541 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12220, file: !12220, line: 155, type: !12906, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13542)
!13542 = !{!13543}
!13543 = !DILocalVariable(name: "thread", arg: 1, scope: !13541, file: !12220, line: 155, type: !2064)
!13544 = !DILocation(line: 0, scope: !13541)
!13545 = !DILocation(line: 157, column: 15, scope: !13541)
!13546 = !DILocation(line: 157, column: 28, scope: !13541)
!13547 = !DILocation(line: 158, column: 1, scope: !13541)
!13548 = distinct !DISubprogram(name: "z_reschedule", scope: !2169, file: !2169, line: 967, type: !12976, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13549)
!13549 = !{!13550, !13551}
!13550 = !DILocalVariable(name: "lock", arg: 1, scope: !13548, file: !2169, line: 967, type: !12951)
!13551 = !DILocalVariable(name: "key", arg: 2, scope: !13548, file: !2169, line: 967, type: !12940)
!13552 = !DILocation(line: 0, scope: !13548)
!13553 = !DILocation(line: 969, column: 6, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13548, file: !2169, line: 969, column: 6)
!13555 = !DILocation(line: 969, column: 23, scope: !13554)
!13556 = !DILocation(line: 969, column: 26, scope: !13554)
!13557 = !DILocation(line: 969, column: 6, scope: !13548)
!13558 = !DILocalVariable(name: "key", arg: 2, scope: !13559, file: !12324, line: 193, type: !12940)
!13559 = distinct !DISubprogram(name: "z_swap", scope: !12324, file: !12324, line: 193, type: !13560, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13562)
!13560 = !DISubroutineType(types: !13561)
!13561 = !{!103, !12951, !12940}
!13562 = !{!13563, !13558}
!13563 = !DILocalVariable(name: "lock", arg: 1, scope: !13559, file: !12324, line: 193, type: !12951)
!13564 = !DILocation(line: 0, scope: !13559, inlinedAt: !13565)
!13565 = distinct !DILocation(line: 970, column: 3, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13554, file: !2169, line: 969, column: 39)
!13567 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !13565)
!13568 = !DILocation(line: 971, column: 2, scope: !13566)
!13569 = !DILocation(line: 0, scope: !12975, inlinedAt: !13570)
!13570 = distinct !DILocation(line: 972, column: 3, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13554, file: !2169, line: 971, column: 9)
!13572 = !DILocation(line: 0, scope: !12983, inlinedAt: !13573)
!13573 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13570)
!13574 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13573)
!13575 = !DILocation(line: 975, column: 1, scope: !13548)
!13576 = distinct !DISubprogram(name: "resched", scope: !2169, file: !2169, line: 940, type: !13577, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13579)
!13577 = !DISubroutineType(types: !13578)
!13578 = !{!211, !137}
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "key", arg: 1, scope: !13576, file: !2169, line: 940, type: !137)
!13581 = !DILocation(line: 0, scope: !13576)
!13582 = !DILocalVariable(name: "key", arg: 1, scope: !13583, file: !6129, line: 112, type: !32)
!13583 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6129, file: !6129, line: 112, type: !13584, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13586)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{!211, !32}
!13586 = !{!13582}
!13587 = !DILocation(line: 0, scope: !13583, inlinedAt: !13588)
!13588 = distinct !DILocation(line: 946, column: 9, scope: !13576)
!13589 = !DILocation(line: 115, column: 13, scope: !13583, inlinedAt: !13588)
!13590 = !DILocation(line: 946, column: 32, scope: !13576)
!13591 = !DILocation(line: 1031, column: 3, scope: !13592, inlinedAt: !13595)
!13592 = distinct !DISubprogram(name: "__get_IPSR", scope: !6303, file: !6303, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13593)
!13593 = !{!13594}
!13594 = !DILocalVariable(name: "result", scope: !13592, file: !6303, line: 1029, type: !137)
!13595 = distinct !DILocation(line: 48, column: 10, scope: !13596, inlinedAt: !13597)
!13596 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7095, file: !7095, line: 46, type: !7096, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!13597 = distinct !DILocation(line: 946, column: 36, scope: !13576)
!13598 = !{i64 3537995}
!13599 = !DILocation(line: 0, scope: !13592, inlinedAt: !13595)
!13600 = !DILocation(line: 48, column: 9, scope: !13596, inlinedAt: !13597)
!13601 = !DILocation(line: 946, column: 2, scope: !13576)
!13602 = distinct !DISubprogram(name: "need_swap", scope: !2169, file: !2169, line: 953, type: !7096, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13603)
!13603 = !{!13604}
!13604 = !DILocalVariable(name: "new_thread", scope: !13602, file: !2169, line: 959, type: !2064)
!13605 = !DILocation(line: 962, column: 31, scope: !13602)
!13606 = !DILocation(line: 0, scope: !13602)
!13607 = !DILocation(line: 963, column: 23, scope: !13602)
!13608 = !DILocation(line: 963, column: 20, scope: !13602)
!13609 = !DILocation(line: 963, column: 2, scope: !13602)
!13610 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12324, file: !12324, line: 181, type: !6313, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13611)
!13611 = !{!13612, !13613}
!13612 = !DILocalVariable(name: "key", arg: 1, scope: !13610, file: !12324, line: 181, type: !32)
!13613 = !DILocalVariable(name: "ret", scope: !13610, file: !12324, line: 183, type: !103)
!13614 = !DILocation(line: 0, scope: !13610)
!13615 = !DILocation(line: 185, column: 8, scope: !13610)
!13616 = !DILocation(line: 186, column: 2, scope: !13610)
!13617 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2169, file: !2169, line: 665, type: !12906, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13618)
!13618 = !{!13619, !13620, !13622}
!13619 = !DILocalVariable(name: "thread", arg: 1, scope: !13617, file: !2169, line: 665, type: !2064)
!13620 = !DILocalVariable(name: "__i", scope: !13621, file: !2169, line: 671, type: !12940)
!13621 = distinct !DILexicalBlock(scope: !13617, file: !2169, line: 671, column: 2)
!13622 = !DILocalVariable(name: "__key", scope: !13621, file: !2169, line: 671, type: !12940)
!13623 = !DILocation(line: 0, scope: !13617)
!13624 = !DILocation(line: 669, column: 8, scope: !13617)
!13625 = !DILocation(line: 0, scope: !13621)
!13626 = !DILocation(line: 0, scope: !12948, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 671, column: 2, scope: !13621)
!13628 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13629)
!13629 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13627)
!13630 = !DILocation(line: 0, scope: !12957, inlinedAt: !13629)
!13631 = !DILocation(line: 672, column: 7, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !2169, line: 672, column: 7)
!13633 = distinct !DILexicalBlock(scope: !13634, file: !2169, line: 671, column: 26)
!13634 = distinct !DILexicalBlock(scope: !13621, file: !2169, line: 671, column: 2)
!13635 = !DILocation(line: 672, column: 7, scope: !13633)
!13636 = !DILocation(line: 0, scope: !13117, inlinedAt: !13637)
!13637 = distinct !DILocation(line: 673, column: 4, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13632, file: !2169, line: 672, column: 35)
!13639 = !DILocation(line: 266, column: 15, scope: !13117, inlinedAt: !13637)
!13640 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !13637)
!13641 = !DILocation(line: 0, scope: !13125, inlinedAt: !13642)
!13642 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !13637)
!13643 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !13642)
!13644 = !DILocation(line: 674, column: 3, scope: !13638)
!13645 = !DILocation(line: 675, column: 3, scope: !13633)
!13646 = !DILocation(line: 676, column: 26, scope: !13633)
!13647 = !DILocation(line: 676, column: 23, scope: !13633)
!13648 = !DILocation(line: 676, column: 3, scope: !13633)
!13649 = !DILocation(line: 0, scope: !12975, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 671, column: 2, scope: !13634)
!13651 = !DILocation(line: 0, scope: !12983, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13650)
!13653 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13652)
!13654 = !DILocation(line: 679, column: 16, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13617, file: !2169, line: 679, column: 6)
!13656 = !DILocation(line: 679, column: 13, scope: !13655)
!13657 = !DILocation(line: 679, column: 6, scope: !13617)
!13658 = !DILocation(line: 680, column: 3, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13655, file: !2169, line: 679, column: 26)
!13660 = !DILocation(line: 681, column: 2, scope: !13659)
!13661 = !DILocation(line: 684, column: 1, scope: !13617)
!13662 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12614, file: !12614, line: 52, type: !12924, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13663)
!13663 = !{!13664}
!13664 = !DILocalVariable(name: "thread", arg: 1, scope: !13662, file: !12614, line: 52, type: !2064)
!13665 = !DILocation(line: 0, scope: !13662)
!13666 = !DILocation(line: 54, column: 39, scope: !13662)
!13667 = !DILocation(line: 54, column: 9, scope: !13662)
!13668 = !DILocation(line: 54, column: 2, scope: !13662)
!13669 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12220, file: !12220, line: 141, type: !12906, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13670)
!13670 = !{!13671}
!13671 = !DILocalVariable(name: "thread", arg: 1, scope: !13669, file: !12220, line: 141, type: !2064)
!13672 = !DILocation(line: 0, scope: !13669)
!13673 = !DILocation(line: 143, column: 15, scope: !13669)
!13674 = !DILocation(line: 143, column: 28, scope: !13669)
!13675 = !DILocation(line: 146, column: 1, scope: !13669)
!13676 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12220, file: !12220, line: 73, type: !2819, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!13677 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13678)
!13678 = distinct !DILocation(line: 75, column: 30, scope: !13676)
!13679 = !DILocation(line: 0, scope: !12957, inlinedAt: !13678)
!13680 = !DILocation(line: 75, column: 9, scope: !13676)
!13681 = !DILocation(line: 76, column: 1, scope: !13676)
!13682 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2169, file: !2169, line: 977, type: !6392, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13683)
!13683 = !{!13684}
!13684 = !DILocalVariable(name: "key", arg: 1, scope: !13682, file: !2169, line: 977, type: !137)
!13685 = !DILocation(line: 0, scope: !13682)
!13686 = !DILocation(line: 979, column: 6, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13682, file: !2169, line: 979, column: 6)
!13688 = !DILocation(line: 979, column: 6, scope: !13682)
!13689 = !DILocation(line: 980, column: 3, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13687, file: !2169, line: 979, column: 20)
!13691 = !DILocation(line: 981, column: 2, scope: !13690)
!13692 = !DILocation(line: 0, scope: !12983, inlinedAt: !13693)
!13693 = distinct !DILocation(line: 982, column: 3, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13687, file: !2169, line: 981, column: 9)
!13695 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13693)
!13696 = !DILocation(line: 985, column: 1, scope: !13682)
!13697 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2169, file: !2169, line: 695, type: !12906, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13698)
!13698 = !{!13699, !13700}
!13699 = !DILocalVariable(name: "thread", arg: 1, scope: !13697, file: !2169, line: 695, type: !2064)
!13700 = !DILocalVariable(name: "key", scope: !13697, file: !2169, line: 699, type: !12940)
!13701 = !DILocation(line: 0, scope: !13697)
!13702 = !DILocation(line: 0, scope: !12948, inlinedAt: !13703)
!13703 = distinct !DILocation(line: 699, column: 25, scope: !13697)
!13704 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13705)
!13705 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13703)
!13706 = !DILocation(line: 0, scope: !12957, inlinedAt: !13705)
!13707 = !DILocation(line: 702, column: 7, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13697, file: !2169, line: 702, column: 6)
!13709 = !DILocation(line: 702, column: 6, scope: !13697)
!13710 = !DILocation(line: 0, scope: !12975, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 703, column: 3, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13708, file: !2169, line: 702, column: 38)
!13713 = !DILocation(line: 0, scope: !12983, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13711)
!13715 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13714)
!13716 = !DILocation(line: 704, column: 3, scope: !13712)
!13717 = !DILocation(line: 707, column: 2, scope: !13697)
!13718 = !DILocation(line: 708, column: 2, scope: !13697)
!13719 = !DILocation(line: 710, column: 2, scope: !13697)
!13720 = !DILocation(line: 713, column: 1, scope: !13697)
!13721 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12220, file: !12220, line: 96, type: !13066, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13722)
!13722 = !{!13723}
!13723 = !DILocalVariable(name: "thread", arg: 1, scope: !13721, file: !12220, line: 96, type: !2064)
!13724 = !DILocation(line: 0, scope: !13721)
!13725 = !DILocation(line: 98, column: 23, scope: !13721)
!13726 = !DILocation(line: 98, column: 36, scope: !13721)
!13727 = !DILocation(line: 98, column: 57, scope: !13721)
!13728 = !DILocation(line: 98, column: 2, scope: !13721)
!13729 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12220, file: !12220, line: 148, type: !12906, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13730)
!13730 = !{!13731}
!13731 = !DILocalVariable(name: "thread", arg: 1, scope: !13729, file: !12220, line: 148, type: !2064)
!13732 = !DILocation(line: 0, scope: !13729)
!13733 = !DILocation(line: 150, column: 15, scope: !13729)
!13734 = !DILocation(line: 150, column: 28, scope: !13729)
!13735 = !DILocation(line: 153, column: 1, scope: !13729)
!13736 = distinct !DISubprogram(name: "z_pend_thread", scope: !2169, file: !2169, line: 770, type: !13737, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13743)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{null, !2064, !2095, !13739}
!13739 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1423, line: 67, baseType: !13740)
!13740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 65, size: 64, elements: !13741)
!13741 = !{!13742}
!13742 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13740, file: !1423, line: 66, baseType: !1422, size: 64)
!13743 = !{!13744, !13745, !13746, !13747, !13749}
!13744 = !DILocalVariable(name: "thread", arg: 1, scope: !13736, file: !2169, line: 770, type: !2064)
!13745 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13736, file: !2169, line: 770, type: !2095)
!13746 = !DILocalVariable(name: "timeout", arg: 3, scope: !13736, file: !2169, line: 771, type: !13739)
!13747 = !DILocalVariable(name: "__i", scope: !13748, file: !2169, line: 774, type: !12940)
!13748 = distinct !DILexicalBlock(scope: !13736, file: !2169, line: 774, column: 2)
!13749 = !DILocalVariable(name: "__key", scope: !13748, file: !2169, line: 774, type: !12940)
!13750 = !DILocation(line: 0, scope: !13736)
!13751 = !DILocation(line: 0, scope: !13748)
!13752 = !DILocation(line: 0, scope: !12948, inlinedAt: !13753)
!13753 = distinct !DILocation(line: 774, column: 2, scope: !13748)
!13754 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13755)
!13755 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13753)
!13756 = !DILocation(line: 0, scope: !12957, inlinedAt: !13755)
!13757 = !DILocation(line: 775, column: 3, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !2169, line: 774, column: 26)
!13759 = distinct !DILexicalBlock(scope: !13748, file: !2169, line: 774, column: 2)
!13760 = !DILocation(line: 0, scope: !12975, inlinedAt: !13761)
!13761 = distinct !DILocation(line: 774, column: 2, scope: !13759)
!13762 = !DILocation(line: 0, scope: !12983, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13761)
!13764 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13763)
!13765 = !DILocation(line: 777, column: 1, scope: !13736)
!13766 = distinct !DISubprogram(name: "pend_locked", scope: !2169, file: !2169, line: 760, type: !13737, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13767)
!13767 = !{!13768, !13769, !13770}
!13768 = !DILocalVariable(name: "thread", arg: 1, scope: !13766, file: !2169, line: 760, type: !2064)
!13769 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13766, file: !2169, line: 760, type: !2095)
!13770 = !DILocalVariable(name: "timeout", arg: 3, scope: !13766, file: !2169, line: 761, type: !13739)
!13771 = !DILocation(line: 0, scope: !13766)
!13772 = !DILocation(line: 766, column: 2, scope: !13766)
!13773 = !DILocation(line: 767, column: 2, scope: !13766)
!13774 = !DILocation(line: 768, column: 1, scope: !13766)
!13775 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2169, file: !2169, line: 740, type: !13776, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13778)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{null, !2064, !2095}
!13778 = !{!13779, !13780}
!13779 = !DILocalVariable(name: "thread", arg: 1, scope: !13775, file: !2169, line: 740, type: !2064)
!13780 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13775, file: !2169, line: 740, type: !2095)
!13781 = !DILocation(line: 0, scope: !13775)
!13782 = !DILocation(line: 742, column: 2, scope: !13775)
!13783 = !DILocation(line: 743, column: 2, scope: !13775)
!13784 = !DILocation(line: 747, column: 13, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13775, file: !2169, line: 747, column: 6)
!13786 = !DILocation(line: 747, column: 6, scope: !13775)
!13787 = !DILocation(line: 748, column: 16, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13785, file: !2169, line: 747, column: 22)
!13789 = !DILocation(line: 748, column: 26, scope: !13788)
!13790 = !DILocation(line: 749, column: 28, scope: !13788)
!13791 = !DILocation(line: 0, scope: !13148, inlinedAt: !13792)
!13792 = distinct !DILocation(line: 749, column: 3, scope: !13788)
!13793 = !DILocation(line: 188, column: 2, scope: !13158, inlinedAt: !13792)
!13794 = !DILocation(line: 188, column: 2, scope: !13160, inlinedAt: !13792)
!13795 = !DILocation(line: 0, scope: !13158, inlinedAt: !13792)
!13796 = !DILocation(line: 189, column: 7, scope: !13163, inlinedAt: !13792)
!13797 = !DILocation(line: 189, column: 35, scope: !13163, inlinedAt: !13792)
!13798 = !DILocation(line: 189, column: 7, scope: !13164, inlinedAt: !13792)
!13799 = !DILocation(line: 191, column: 21, scope: !13168, inlinedAt: !13792)
!13800 = !DILocation(line: 190, column: 4, scope: !13168, inlinedAt: !13792)
!13801 = !DILocation(line: 192, column: 4, scope: !13168, inlinedAt: !13792)
!13802 = distinct !{!13802, !13793, !13803}
!13803 = !DILocation(line: 194, column: 2, scope: !13158, inlinedAt: !13792)
!13804 = !DILocation(line: 196, column: 37, scope: !13148, inlinedAt: !13792)
!13805 = !DILocation(line: 196, column: 2, scope: !13148, inlinedAt: !13792)
!13806 = !DILocation(line: 197, column: 1, scope: !13148, inlinedAt: !13792)
!13807 = !DILocation(line: 751, column: 1, scope: !13775)
!13808 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2169, file: !2169, line: 753, type: !13809, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13811)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{null, !2064, !13739}
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "thread", arg: 1, scope: !13808, file: !2169, line: 753, type: !2064)
!13813 = !DILocalVariable(name: "timeout", arg: 2, scope: !13808, file: !2169, line: 753, type: !13739)
!13814 = !DILocation(line: 0, scope: !13808)
!13815 = !DILocation(line: 755, column: 7, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13808, file: !2169, line: 755, column: 6)
!13817 = !DILocation(line: 755, column: 6, scope: !13808)
!13818 = !DILocation(line: 756, column: 3, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13816, file: !2169, line: 755, column: 41)
!13820 = !DILocation(line: 757, column: 2, scope: !13819)
!13821 = !DILocation(line: 758, column: 1, scope: !13808)
!13822 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12614, file: !12614, line: 47, type: !13809, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13823)
!13823 = !{!13824, !13825}
!13824 = !DILocalVariable(name: "thread", arg: 1, scope: !13822, file: !12614, line: 47, type: !2064)
!13825 = !DILocalVariable(name: "ticks", arg: 2, scope: !13822, file: !12614, line: 47, type: !13739)
!13826 = !DILocation(line: 0, scope: !13822)
!13827 = !DILocation(line: 49, column: 30, scope: !13822)
!13828 = !DILocation(line: 49, column: 2, scope: !13822)
!13829 = !DILocation(line: 50, column: 1, scope: !13822)
!13830 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2169, file: !2169, line: 795, type: !2121, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13831)
!13831 = !{!13832, !13833, !13834, !13836, !13837}
!13832 = !DILocalVariable(name: "timeout", arg: 1, scope: !13830, file: !2169, line: 795, type: !2123)
!13833 = !DILocalVariable(name: "thread", scope: !13830, file: !2169, line: 797, type: !2064)
!13834 = !DILocalVariable(name: "__i", scope: !13835, file: !2169, line: 800, type: !12940)
!13835 = distinct !DILexicalBlock(scope: !13830, file: !2169, line: 800, column: 2)
!13836 = !DILocalVariable(name: "__key", scope: !13835, file: !2169, line: 800, type: !12940)
!13837 = !DILocalVariable(name: "killed", scope: !13838, file: !2169, line: 801, type: !211)
!13838 = distinct !DILexicalBlock(scope: !13839, file: !2169, line: 800, column: 26)
!13839 = distinct !DILexicalBlock(scope: !13835, file: !2169, line: 800, column: 2)
!13840 = !DILocation(line: 0, scope: !13830)
!13841 = !DILocation(line: 797, column: 28, scope: !13830)
!13842 = !DILocation(line: 0, scope: !13835)
!13843 = !DILocation(line: 0, scope: !12948, inlinedAt: !13844)
!13844 = distinct !DILocation(line: 800, column: 2, scope: !13835)
!13845 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13846)
!13846 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13844)
!13847 = !DILocation(line: 0, scope: !12957, inlinedAt: !13846)
!13848 = !DILocation(line: 801, column: 27, scope: !13838)
!13849 = !DILocation(line: 801, column: 32, scope: !13838)
!13850 = !DILocation(line: 801, column: 61, scope: !13838)
!13851 = !DILocation(line: 0, scope: !13838)
!13852 = !DILocation(line: 804, column: 7, scope: !13838)
!13853 = !DILocation(line: 805, column: 21, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !2169, line: 805, column: 8)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !2169, line: 804, column: 16)
!13856 = distinct !DILexicalBlock(scope: !13838, file: !2169, line: 804, column: 7)
!13857 = !DILocation(line: 805, column: 31, scope: !13854)
!13858 = !DILocation(line: 805, column: 8, scope: !13855)
!13859 = !DILocation(line: 806, column: 5, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13854, file: !2169, line: 805, column: 40)
!13861 = !DILocation(line: 807, column: 4, scope: !13860)
!13862 = !DILocation(line: 808, column: 4, scope: !13855)
!13863 = !DILocation(line: 809, column: 4, scope: !13855)
!13864 = !DILocation(line: 810, column: 4, scope: !13855)
!13865 = !DILocation(line: 811, column: 3, scope: !13855)
!13866 = !DILocation(line: 0, scope: !12975, inlinedAt: !13867)
!13867 = distinct !DILocation(line: 800, column: 2, scope: !13839)
!13868 = !DILocation(line: 0, scope: !12983, inlinedAt: !13869)
!13869 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13867)
!13870 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13869)
!13871 = !DILocation(line: 813, column: 1, scope: !13830)
!13872 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2169, file: !2169, line: 779, type: !12906, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13873)
!13873 = !{!13874}
!13874 = !DILocalVariable(name: "thread", arg: 1, scope: !13872, file: !2169, line: 779, type: !2064)
!13875 = !DILocation(line: 0, scope: !13872)
!13876 = !DILocation(line: 781, column: 2, scope: !13872)
!13877 = !DILocation(line: 782, column: 2, scope: !13872)
!13878 = !DILocation(line: 783, column: 15, scope: !13872)
!13879 = !DILocation(line: 783, column: 25, scope: !13872)
!13880 = !DILocation(line: 784, column: 1, scope: !13872)
!13881 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12220, file: !12220, line: 165, type: !12906, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13882)
!13882 = !{!13883}
!13883 = !DILocalVariable(name: "thread", arg: 1, scope: !13881, file: !12220, line: 165, type: !2064)
!13884 = !DILocation(line: 0, scope: !13881)
!13885 = !DILocation(line: 167, column: 15, scope: !13881)
!13886 = !DILocation(line: 167, column: 28, scope: !13881)
!13887 = !DILocation(line: 168, column: 1, scope: !13881)
!13888 = distinct !DISubprogram(name: "unready_thread", scope: !2169, file: !2169, line: 731, type: !12906, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13889)
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "thread", arg: 1, scope: !13888, file: !2169, line: 731, type: !2064)
!13891 = !DILocation(line: 0, scope: !13888)
!13892 = !DILocation(line: 733, column: 6, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13888, file: !2169, line: 733, column: 6)
!13894 = !DILocation(line: 733, column: 6, scope: !13888)
!13895 = !DILocation(line: 0, scope: !13117, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 734, column: 3, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13893, file: !2169, line: 733, column: 34)
!13898 = !DILocation(line: 266, column: 15, scope: !13117, inlinedAt: !13896)
!13899 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !13896)
!13900 = !DILocation(line: 0, scope: !13125, inlinedAt: !13901)
!13901 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !13896)
!13902 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !13901)
!13903 = !DILocation(line: 735, column: 2, scope: !13897)
!13904 = !DILocation(line: 736, column: 25, scope: !13888)
!13905 = !DILocation(line: 736, column: 22, scope: !13888)
!13906 = !DILocation(line: 736, column: 2, scope: !13888)
!13907 = !DILocation(line: 737, column: 1, scope: !13888)
!13908 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12220, file: !12220, line: 160, type: !12906, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13909)
!13909 = !{!13910}
!13910 = !DILocalVariable(name: "thread", arg: 1, scope: !13908, file: !12220, line: 160, type: !2064)
!13911 = !DILocation(line: 0, scope: !13908)
!13912 = !DILocation(line: 162, column: 15, scope: !13908)
!13913 = !DILocation(line: 162, column: 28, scope: !13908)
!13914 = !DILocation(line: 163, column: 1, scope: !13908)
!13915 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2169, file: !2169, line: 786, type: !12906, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13916)
!13916 = !{!13917, !13918, !13920}
!13917 = !DILocalVariable(name: "thread", arg: 1, scope: !13915, file: !2169, line: 786, type: !2064)
!13918 = !DILocalVariable(name: "__i", scope: !13919, file: !2169, line: 788, type: !12940)
!13919 = distinct !DILexicalBlock(scope: !13915, file: !2169, line: 788, column: 2)
!13920 = !DILocalVariable(name: "__key", scope: !13919, file: !2169, line: 788, type: !12940)
!13921 = !DILocation(line: 0, scope: !13915)
!13922 = !DILocation(line: 0, scope: !13919)
!13923 = !DILocation(line: 0, scope: !12948, inlinedAt: !13924)
!13924 = distinct !DILocation(line: 788, column: 2, scope: !13919)
!13925 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13926)
!13926 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13924)
!13927 = !DILocation(line: 0, scope: !12957, inlinedAt: !13926)
!13928 = !DILocation(line: 789, column: 3, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !2169, line: 788, column: 26)
!13930 = distinct !DILexicalBlock(scope: !13919, file: !2169, line: 788, column: 2)
!13931 = !DILocation(line: 0, scope: !12975, inlinedAt: !13932)
!13932 = distinct !DILocation(line: 788, column: 2, scope: !13930)
!13933 = !DILocation(line: 0, scope: !12983, inlinedAt: !13934)
!13934 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13932)
!13935 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13934)
!13936 = !DILocation(line: 791, column: 1, scope: !13915)
!13937 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2169, file: !2169, line: 816, type: !13938, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13940)
!13938 = !DISubroutineType(types: !13939)
!13939 = !{!103, !137, !2095, !13739}
!13940 = !{!13941, !13942, !13943, !13944, !13945, !13947}
!13941 = !DILocalVariable(name: "key", arg: 1, scope: !13937, file: !2169, line: 816, type: !137)
!13942 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13937, file: !2169, line: 816, type: !2095)
!13943 = !DILocalVariable(name: "timeout", arg: 3, scope: !13937, file: !2169, line: 816, type: !13739)
!13944 = !DILocalVariable(name: "ret", scope: !13937, file: !2169, line: 828, type: !103)
!13945 = !DILocalVariable(name: "__i", scope: !13946, file: !2169, line: 829, type: !12940)
!13946 = distinct !DILexicalBlock(scope: !13937, file: !2169, line: 829, column: 2)
!13947 = !DILocalVariable(name: "__key", scope: !13946, file: !2169, line: 829, type: !12940)
!13948 = !DILocation(line: 0, scope: !13937)
!13949 = !DILocation(line: 823, column: 14, scope: !13937)
!13950 = !DILocation(line: 823, column: 2, scope: !13937)
!13951 = !DILocation(line: 826, column: 20, scope: !13937)
!13952 = !DILocation(line: 826, column: 18, scope: !13937)
!13953 = !DILocation(line: 828, column: 12, scope: !13937)
!13954 = !DILocation(line: 0, scope: !13946)
!13955 = !DILocation(line: 0, scope: !12948, inlinedAt: !13956)
!13956 = distinct !DILocation(line: 829, column: 2, scope: !13946)
!13957 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13958)
!13958 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13956)
!13959 = !DILocation(line: 0, scope: !12957, inlinedAt: !13958)
!13960 = !DILocation(line: 830, column: 7, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13962, file: !2169, line: 830, column: 7)
!13962 = distinct !DILexicalBlock(scope: !13963, file: !2169, line: 829, column: 26)
!13963 = distinct !DILexicalBlock(scope: !13946, file: !2169, line: 829, column: 2)
!13964 = !DILocation(line: 830, column: 26, scope: !13961)
!13965 = !DILocation(line: 830, column: 23, scope: !13961)
!13966 = !DILocation(line: 830, column: 7, scope: !13962)
!13967 = !DILocation(line: 831, column: 20, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13961, file: !2169, line: 830, column: 36)
!13969 = !DILocation(line: 832, column: 3, scope: !13968)
!13970 = !DILocation(line: 0, scope: !12975, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 829, column: 2, scope: !13963)
!13972 = !DILocation(line: 0, scope: !12983, inlinedAt: !13973)
!13973 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !13971)
!13974 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !13973)
!13975 = !DILocation(line: 834, column: 2, scope: !13937)
!13976 = distinct !DISubprogram(name: "z_pend_curr", scope: !2169, file: !2169, line: 840, type: !13977, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !13979)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{!103, !12951, !12940, !2095, !13739}
!13979 = !{!13980, !13981, !13982, !13983}
!13980 = !DILocalVariable(name: "lock", arg: 1, scope: !13976, file: !2169, line: 840, type: !12951)
!13981 = !DILocalVariable(name: "key", arg: 2, scope: !13976, file: !2169, line: 840, type: !12940)
!13982 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13976, file: !2169, line: 841, type: !2095)
!13983 = !DILocalVariable(name: "timeout", arg: 4, scope: !13976, file: !2169, line: 841, type: !13739)
!13984 = !DILocation(line: 0, scope: !13976)
!13985 = !DILocation(line: 844, column: 20, scope: !13976)
!13986 = !DILocation(line: 844, column: 18, scope: !13976)
!13987 = !DILocation(line: 0, scope: !12948, inlinedAt: !13988)
!13988 = distinct !DILocation(line: 856, column: 9, scope: !13976)
!13989 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !13990)
!13990 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !13988)
!13991 = !DILocation(line: 0, scope: !12957, inlinedAt: !13990)
!13992 = !DILocation(line: 857, column: 14, scope: !13976)
!13993 = !DILocation(line: 857, column: 2, scope: !13976)
!13994 = !DILocation(line: 0, scope: !13559, inlinedAt: !13995)
!13995 = distinct !DILocation(line: 859, column: 9, scope: !13976)
!13996 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !13995)
!13997 = !DILocation(line: 859, column: 2, scope: !13976)
!13998 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2169, file: !2169, line: 862, type: !13999, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14001)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{!2064, !2095}
!14001 = !{!14002, !14003, !14004, !14006}
!14002 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13998, file: !2169, line: 862, type: !2095)
!14003 = !DILocalVariable(name: "thread", scope: !13998, file: !2169, line: 864, type: !2064)
!14004 = !DILocalVariable(name: "__i", scope: !14005, file: !2169, line: 866, type: !12940)
!14005 = distinct !DILexicalBlock(scope: !13998, file: !2169, line: 866, column: 2)
!14006 = !DILocalVariable(name: "__key", scope: !14005, file: !2169, line: 866, type: !12940)
!14007 = !DILocation(line: 0, scope: !13998)
!14008 = !DILocation(line: 0, scope: !14005)
!14009 = !DILocation(line: 0, scope: !12948, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 866, column: 2, scope: !14005)
!14011 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14012)
!14012 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14010)
!14013 = !DILocation(line: 0, scope: !12957, inlinedAt: !14012)
!14014 = !DILocation(line: 867, column: 12, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !2169, line: 866, column: 26)
!14016 = distinct !DILexicalBlock(scope: !14005, file: !2169, line: 866, column: 2)
!14017 = !DILocation(line: 869, column: 14, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14015, file: !2169, line: 869, column: 7)
!14019 = !DILocation(line: 869, column: 7, scope: !14015)
!14020 = !DILocation(line: 870, column: 4, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14018, file: !2169, line: 869, column: 23)
!14022 = !DILocation(line: 871, column: 3, scope: !14021)
!14023 = !DILocation(line: 0, scope: !12975, inlinedAt: !14024)
!14024 = distinct !DILocation(line: 866, column: 2, scope: !14016)
!14025 = !DILocation(line: 0, scope: !12983, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14024)
!14027 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14026)
!14028 = !DILocation(line: 874, column: 2, scope: !13998)
!14029 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2169, file: !2169, line: 877, type: !13999, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14030)
!14030 = !{!14031, !14032, !14033, !14035}
!14031 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14029, file: !2169, line: 877, type: !2095)
!14032 = !DILocalVariable(name: "thread", scope: !14029, file: !2169, line: 879, type: !2064)
!14033 = !DILocalVariable(name: "__i", scope: !14034, file: !2169, line: 881, type: !12940)
!14034 = distinct !DILexicalBlock(scope: !14029, file: !2169, line: 881, column: 2)
!14035 = !DILocalVariable(name: "__key", scope: !14034, file: !2169, line: 881, type: !12940)
!14036 = !DILocation(line: 0, scope: !14029)
!14037 = !DILocation(line: 0, scope: !14034)
!14038 = !DILocation(line: 0, scope: !12948, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 881, column: 2, scope: !14034)
!14040 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14041)
!14041 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14039)
!14042 = !DILocation(line: 0, scope: !12957, inlinedAt: !14041)
!14043 = !DILocation(line: 882, column: 12, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !2169, line: 881, column: 26)
!14045 = distinct !DILexicalBlock(scope: !14034, file: !2169, line: 881, column: 2)
!14046 = !DILocation(line: 884, column: 14, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14044, file: !2169, line: 884, column: 7)
!14048 = !DILocation(line: 884, column: 7, scope: !14044)
!14049 = !DILocation(line: 885, column: 4, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14047, file: !2169, line: 884, column: 23)
!14051 = !DILocation(line: 886, column: 10, scope: !14050)
!14052 = !DILocation(line: 887, column: 3, scope: !14050)
!14053 = !DILocation(line: 0, scope: !12975, inlinedAt: !14054)
!14054 = distinct !DILocation(line: 881, column: 2, scope: !14045)
!14055 = !DILocation(line: 0, scope: !12983, inlinedAt: !14056)
!14056 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14054)
!14057 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14056)
!14058 = !DILocation(line: 890, column: 2, scope: !14029)
!14059 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2169, file: !2169, line: 893, type: !12906, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14060)
!14060 = !{!14061}
!14061 = !DILocalVariable(name: "thread", arg: 1, scope: !14059, file: !2169, line: 893, type: !2064)
!14062 = !DILocation(line: 0, scope: !14059)
!14063 = !DILocation(line: 0, scope: !13915, inlinedAt: !14064)
!14064 = distinct !DILocation(line: 895, column: 2, scope: !14059)
!14065 = !DILocation(line: 0, scope: !13919, inlinedAt: !14064)
!14066 = !DILocation(line: 0, scope: !12948, inlinedAt: !14067)
!14067 = distinct !DILocation(line: 788, column: 2, scope: !13919, inlinedAt: !14064)
!14068 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14069)
!14069 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14067)
!14070 = !DILocation(line: 0, scope: !12957, inlinedAt: !14069)
!14071 = !DILocation(line: 789, column: 3, scope: !13929, inlinedAt: !14064)
!14072 = !DILocation(line: 0, scope: !12975, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 788, column: 2, scope: !13930, inlinedAt: !14064)
!14074 = !DILocation(line: 0, scope: !12983, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14073)
!14076 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14075)
!14077 = !DILocation(line: 896, column: 8, scope: !14059)
!14078 = !DILocation(line: 897, column: 1, scope: !14059)
!14079 = distinct !DISubprogram(name: "z_set_prio", scope: !2169, file: !2169, line: 902, type: !13268, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14080)
!14080 = !{!14081, !14082, !14083, !14084, !14086}
!14081 = !DILocalVariable(name: "thread", arg: 1, scope: !14079, file: !2169, line: 902, type: !2064)
!14082 = !DILocalVariable(name: "prio", arg: 2, scope: !14079, file: !2169, line: 902, type: !103)
!14083 = !DILocalVariable(name: "need_sched", scope: !14079, file: !2169, line: 904, type: !211)
!14084 = !DILocalVariable(name: "__i", scope: !14085, file: !2169, line: 906, type: !12940)
!14085 = distinct !DILexicalBlock(scope: !14079, file: !2169, line: 906, column: 2)
!14086 = !DILocalVariable(name: "__key", scope: !14085, file: !2169, line: 906, type: !12940)
!14087 = !DILocation(line: 0, scope: !14079)
!14088 = !DILocation(line: 0, scope: !14085)
!14089 = !DILocation(line: 0, scope: !12948, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 906, column: 2, scope: !14085)
!14091 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14090)
!14093 = !DILocation(line: 0, scope: !12957, inlinedAt: !14092)
!14094 = !DILocation(line: 907, column: 16, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !2169, line: 906, column: 26)
!14096 = distinct !DILexicalBlock(scope: !14085, file: !2169, line: 906, column: 2)
!14097 = !DILocation(line: 909, column: 7, scope: !14095)
!14098 = !DILocation(line: 0, scope: !13117, inlinedAt: !14099)
!14099 = distinct !DILocation(line: 912, column: 5, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !2169, line: 911, column: 63)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !2169, line: 911, column: 8)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2169, line: 909, column: 19)
!14103 = distinct !DILexicalBlock(scope: !14095, file: !2169, line: 909, column: 7)
!14104 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !14099)
!14105 = !DILocation(line: 0, scope: !13125, inlinedAt: !14106)
!14106 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !14099)
!14107 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !14106)
!14108 = !DILocation(line: 913, column: 23, scope: !14100)
!14109 = !DILocation(line: 0, scope: !13134, inlinedAt: !14110)
!14110 = distinct !DILocation(line: 914, column: 5, scope: !14100)
!14111 = !DILocation(line: 252, column: 28, scope: !13134, inlinedAt: !14110)
!14112 = !DILocation(line: 0, scope: !13141, inlinedAt: !14113)
!14113 = distinct !DILocation(line: 254, column: 3, scope: !13145, inlinedAt: !14110)
!14114 = !DILocation(line: 0, scope: !13148, inlinedAt: !14115)
!14115 = distinct !DILocation(line: 229, column: 2, scope: !13141, inlinedAt: !14113)
!14116 = !DILocation(line: 188, column: 2, scope: !13158, inlinedAt: !14115)
!14117 = !DILocation(line: 188, column: 2, scope: !13160, inlinedAt: !14115)
!14118 = !DILocation(line: 0, scope: !13158, inlinedAt: !14115)
!14119 = !DILocation(line: 189, column: 7, scope: !13163, inlinedAt: !14115)
!14120 = !DILocation(line: 189, column: 35, scope: !13163, inlinedAt: !14115)
!14121 = !DILocation(line: 189, column: 7, scope: !13164, inlinedAt: !14115)
!14122 = !DILocation(line: 190, column: 4, scope: !13168, inlinedAt: !14115)
!14123 = !DILocation(line: 192, column: 4, scope: !13168, inlinedAt: !14115)
!14124 = distinct !{!14124, !14116, !14125}
!14125 = !DILocation(line: 194, column: 2, scope: !13158, inlinedAt: !14115)
!14126 = !DILocation(line: 196, column: 2, scope: !13148, inlinedAt: !14115)
!14127 = !DILocation(line: 197, column: 1, scope: !13148, inlinedAt: !14115)
!14128 = !DILocation(line: 918, column: 4, scope: !14102)
!14129 = !DILocation(line: 919, column: 3, scope: !14102)
!14130 = !DILocation(line: 920, column: 22, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14103, file: !2169, line: 919, column: 10)
!14132 = !DILocation(line: 0, scope: !12975, inlinedAt: !14133)
!14133 = distinct !DILocation(line: 906, column: 2, scope: !14096)
!14134 = !DILocation(line: 0, scope: !12983, inlinedAt: !14135)
!14135 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14133)
!14136 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14135)
!14137 = !DILocation(line: 926, column: 2, scope: !14079)
!14138 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2169, file: !2169, line: 929, type: !14139, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14141)
!14139 = !DISubroutineType(types: !14140)
!14140 = !{null, !2064, !103}
!14141 = !{!14142, !14143, !14144}
!14142 = !DILocalVariable(name: "thread", arg: 1, scope: !14138, file: !2169, line: 929, type: !2064)
!14143 = !DILocalVariable(name: "prio", arg: 2, scope: !14138, file: !2169, line: 929, type: !103)
!14144 = !DILocalVariable(name: "need_sched", scope: !14138, file: !2169, line: 931, type: !211)
!14145 = !DILocation(line: 0, scope: !14138)
!14146 = !DILocation(line: 931, column: 20, scope: !14138)
!14147 = !DILocation(line: 935, column: 17, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14138, file: !2169, line: 935, column: 6)
!14149 = !DILocation(line: 935, column: 20, scope: !14148)
!14150 = !DILocation(line: 935, column: 35, scope: !14148)
!14151 = !DILocation(line: 935, column: 48, scope: !14148)
!14152 = !DILocation(line: 935, column: 6, scope: !14138)
!14153 = !DILocation(line: 936, column: 3, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14148, file: !2169, line: 935, column: 55)
!14155 = !DILocation(line: 937, column: 2, scope: !14154)
!14156 = !DILocation(line: 938, column: 1, scope: !14138)
!14157 = distinct !DISubprogram(name: "k_sched_lock", scope: !2169, file: !2169, line: 987, type: !2819, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14158)
!14158 = !{!14159, !14161}
!14159 = !DILocalVariable(name: "__i", scope: !14160, file: !2169, line: 989, type: !12940)
!14160 = distinct !DILexicalBlock(scope: !14157, file: !2169, line: 989, column: 2)
!14161 = !DILocalVariable(name: "__key", scope: !14160, file: !2169, line: 989, type: !12940)
!14162 = !DILocation(line: 0, scope: !14160)
!14163 = !DILocation(line: 0, scope: !12948, inlinedAt: !14164)
!14164 = distinct !DILocation(line: 989, column: 2, scope: !14160)
!14165 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14166)
!14166 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14164)
!14167 = !DILocation(line: 0, scope: !12957, inlinedAt: !14166)
!14168 = !DILocation(line: 992, column: 3, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14170, file: !2169, line: 989, column: 26)
!14170 = distinct !DILexicalBlock(scope: !14160, file: !2169, line: 989, column: 2)
!14171 = !DILocation(line: 0, scope: !12975, inlinedAt: !14172)
!14172 = distinct !DILocation(line: 989, column: 2, scope: !14170)
!14173 = !DILocation(line: 0, scope: !12983, inlinedAt: !14174)
!14174 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14172)
!14175 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14174)
!14176 = !DILocation(line: 994, column: 1, scope: !14157)
!14177 = distinct !DISubprogram(name: "z_sched_lock", scope: !12220, file: !12220, line: 251, type: !2819, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14178 = !DILocation(line: 256, column: 4, scope: !14177)
!14179 = !DILocation(line: 256, column: 19, scope: !14177)
!14180 = !DILocation(line: 256, column: 2, scope: !14177)
!14181 = !DILocation(line: 258, column: 2, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14177, file: !12220, line: 258, column: 2)
!14183 = !{i64 2154865990}
!14184 = !DILocation(line: 259, column: 1, scope: !14177)
!14185 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2169, file: !2169, line: 996, type: !2819, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14186)
!14186 = !{!14187, !14189}
!14187 = !DILocalVariable(name: "__i", scope: !14188, file: !2169, line: 998, type: !12940)
!14188 = distinct !DILexicalBlock(scope: !14185, file: !2169, line: 998, column: 2)
!14189 = !DILocalVariable(name: "__key", scope: !14188, file: !2169, line: 998, type: !12940)
!14190 = !DILocation(line: 0, scope: !14188)
!14191 = !DILocation(line: 0, scope: !12948, inlinedAt: !14192)
!14192 = distinct !DILocation(line: 998, column: 2, scope: !14188)
!14193 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14192)
!14195 = !DILocation(line: 0, scope: !12957, inlinedAt: !14194)
!14196 = !DILocation(line: 1002, column: 5, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14198, file: !2169, line: 998, column: 26)
!14198 = distinct !DILexicalBlock(scope: !14188, file: !2169, line: 998, column: 2)
!14199 = !DILocation(line: 1002, column: 20, scope: !14197)
!14200 = !DILocation(line: 1002, column: 3, scope: !14197)
!14201 = !DILocation(line: 1003, column: 3, scope: !14197)
!14202 = !DILocation(line: 0, scope: !12975, inlinedAt: !14203)
!14203 = distinct !DILocation(line: 998, column: 2, scope: !14198)
!14204 = !DILocation(line: 0, scope: !12983, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14203)
!14206 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14205)
!14207 = !DILocation(line: 1011, column: 2, scope: !14185)
!14208 = !DILocation(line: 1012, column: 1, scope: !14185)
!14209 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2169, file: !2169, line: 1014, type: !13256, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14210 = !DILocation(line: 1028, column: 25, scope: !14209)
!14211 = !DILocation(line: 1028, column: 2, scope: !14209)
!14212 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2169, file: !2169, line: 1155, type: !14213, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14215)
!14213 = !DISubroutineType(types: !14214)
!14214 = !{!211, !2093, !2093}
!14215 = !{!14216, !14217, !14218, !14219, !14220}
!14216 = !DILocalVariable(name: "a", arg: 1, scope: !14212, file: !2169, line: 1155, type: !2093)
!14217 = !DILocalVariable(name: "b", arg: 2, scope: !14212, file: !2169, line: 1155, type: !2093)
!14218 = !DILocalVariable(name: "thread_a", scope: !14212, file: !2169, line: 1157, type: !2064)
!14219 = !DILocalVariable(name: "thread_b", scope: !14212, file: !2169, line: 1157, type: !2064)
!14220 = !DILocalVariable(name: "cmp", scope: !14212, file: !2169, line: 1158, type: !632)
!14221 = !DILocation(line: 0, scope: !14212)
!14222 = !DILocation(line: 1160, column: 13, scope: !14212)
!14223 = !DILocation(line: 1161, column: 13, scope: !14212)
!14224 = !DILocation(line: 1163, column: 8, scope: !14212)
!14225 = !DILocation(line: 1165, column: 10, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14212, file: !2169, line: 1165, column: 6)
!14227 = !DILocation(line: 1165, column: 6, scope: !14212)
!14228 = !DILocation(line: 1167, column: 17, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14226, file: !2169, line: 1167, column: 13)
!14230 = !DILocation(line: 1167, column: 13, scope: !14226)
!14231 = !DILocation(line: 1170, column: 25, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14229, file: !2169, line: 1169, column: 9)
!14233 = !DILocation(line: 1170, column: 52, scope: !14232)
!14234 = !DILocation(line: 1170, column: 35, scope: !14232)
!14235 = !DILocation(line: 1170, column: 3, scope: !14232)
!14236 = !DILocation(line: 0, scope: !14226)
!14237 = !DILocation(line: 1173, column: 1, scope: !14212)
!14238 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2169, file: !2169, line: 1175, type: !14239, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14254)
!14239 = !DISubroutineType(types: !14240)
!14240 = !{null, !14241, !2064}
!14241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14242, size: 32)
!14242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14243, line: 37, size: 128, elements: !14244)
!14243 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14244 = !{!14245, !14253}
!14245 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14242, file: !14243, line: 38, baseType: !14246, size: 96)
!14246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !289, line: 83, size: 96, elements: !14247)
!14247 = !{!14248, !14249, !14252}
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14246, file: !289, line: 84, baseType: !2093, size: 32)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14246, file: !289, line: 85, baseType: !14250, size: 32, offset: 32)
!14250 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !289, line: 81, baseType: !14251)
!14251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14213, size: 32)
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14246, file: !289, line: 86, baseType: !103, size: 32, offset: 64)
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14242, file: !14243, line: 39, baseType: !103, size: 32, offset: 96)
!14254 = !{!14255, !14256, !14257, !14258, !14267}
!14255 = !DILocalVariable(name: "pq", arg: 1, scope: !14238, file: !2169, line: 1175, type: !14241)
!14256 = !DILocalVariable(name: "thread", arg: 2, scope: !14238, file: !2169, line: 1175, type: !2064)
!14257 = !DILocalVariable(name: "t", scope: !14238, file: !2169, line: 1177, type: !2064)
!14258 = !DILocalVariable(name: "__f", scope: !14259, file: !2169, line: 1190, type: !14262)
!14259 = distinct !DILexicalBlock(scope: !14260, file: !2169, line: 1190, column: 3)
!14260 = distinct !DILexicalBlock(scope: !14261, file: !2169, line: 1189, column: 27)
!14261 = distinct !DILexicalBlock(scope: !14238, file: !2169, line: 1189, column: 6)
!14262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !289, line: 155, size: 96, elements: !14263)
!14263 = !{!14264, !14265, !14266}
!14264 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14262, file: !289, line: 156, baseType: !2164, size: 32)
!14265 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14262, file: !289, line: 157, baseType: !1716, size: 32, offset: 32)
!14266 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14262, file: !289, line: 158, baseType: !632, size: 32, offset: 64)
!14267 = !DILocalVariable(name: "n", scope: !14268, file: !2169, line: 1190, type: !2093)
!14268 = distinct !DILexicalBlock(scope: !14269, file: !2169, line: 1190, column: 3)
!14269 = distinct !DILexicalBlock(scope: !14259, file: !2169, line: 1190, column: 3)
!14270 = !DILocation(line: 0, scope: !14238)
!14271 = !DILocation(line: 1181, column: 31, scope: !14238)
!14272 = !DILocation(line: 1181, column: 45, scope: !14238)
!14273 = !DILocation(line: 1181, column: 15, scope: !14238)
!14274 = !DILocation(line: 1181, column: 25, scope: !14238)
!14275 = !DILocation(line: 1189, column: 11, scope: !14261)
!14276 = !DILocation(line: 1189, column: 7, scope: !14261)
!14277 = !DILocation(line: 1189, column: 6, scope: !14238)
!14278 = !DILocation(line: 1190, column: 3, scope: !14259)
!14279 = !DILocation(line: 1190, column: 3, scope: !14268)
!14280 = !DILocation(line: 0, scope: !14268)
!14281 = !DILocation(line: 1190, column: 3, scope: !14269)
!14282 = !DILocation(line: 1193, column: 2, scope: !14260)
!14283 = !DILocation(line: 1191, column: 42, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14269, file: !2169, line: 1190, column: 54)
!14285 = !DILocation(line: 1191, column: 12, scope: !14284)
!14286 = !DILocation(line: 1191, column: 22, scope: !14284)
!14287 = distinct !{!14287, !14278, !14288}
!14288 = !DILocation(line: 1192, column: 3, scope: !14259)
!14289 = !DILocation(line: 1195, column: 17, scope: !14238)
!14290 = !DILocation(line: 1195, column: 37, scope: !14238)
!14291 = !DILocation(line: 1195, column: 2, scope: !14238)
!14292 = !DILocation(line: 1196, column: 1, scope: !14238)
!14293 = !DISubprogram(name: "z_rb_foreach_next", scope: !289, file: !289, line: 176, type: !14294, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14294 = !DISubroutineType(types: !14295)
!14295 = !{!2093, !14296, !14297}
!14296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14246, size: 32)
!14297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14262, size: 32)
!14298 = !DISubprogram(name: "rb_insert", scope: !289, file: !289, line: 105, type: !14299, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{null, !14296, !2093}
!14301 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2169, file: !2169, line: 1198, type: !14239, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14302)
!14302 = !{!14303, !14304}
!14303 = !DILocalVariable(name: "pq", arg: 1, scope: !14301, file: !2169, line: 1198, type: !14241)
!14304 = !DILocalVariable(name: "thread", arg: 2, scope: !14301, file: !2169, line: 1198, type: !2064)
!14305 = !DILocation(line: 0, scope: !14301)
!14306 = !DILocation(line: 1202, column: 17, scope: !14301)
!14307 = !DILocation(line: 1202, column: 37, scope: !14301)
!14308 = !DILocation(line: 1202, column: 2, scope: !14301)
!14309 = !DILocation(line: 1204, column: 16, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14301, file: !2169, line: 1204, column: 6)
!14311 = !DILocation(line: 1204, column: 7, scope: !14310)
!14312 = !DILocation(line: 1204, column: 6, scope: !14301)
!14313 = !DILocation(line: 1205, column: 7, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14310, file: !2169, line: 1204, column: 22)
!14315 = !DILocation(line: 1205, column: 22, scope: !14314)
!14316 = !DILocation(line: 1206, column: 2, scope: !14314)
!14317 = !DILocation(line: 1207, column: 1, scope: !14301)
!14318 = !DISubprogram(name: "rb_remove", scope: !289, file: !289, line: 110, type: !14299, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14319 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2169, file: !2169, line: 1209, type: !14320, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14322)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{!2064, !14241}
!14322 = !{!14323, !14324, !14325}
!14323 = !DILocalVariable(name: "pq", arg: 1, scope: !14319, file: !2169, line: 1209, type: !14241)
!14324 = !DILocalVariable(name: "thread", scope: !14319, file: !2169, line: 1211, type: !2064)
!14325 = !DILocalVariable(name: "n", scope: !14319, file: !2169, line: 1212, type: !2093)
!14326 = !DILocation(line: 0, scope: !14319)
!14327 = !DILocation(line: 1212, column: 37, scope: !14319)
!14328 = !DILocation(line: 1212, column: 21, scope: !14319)
!14329 = !DILocation(line: 1217, column: 2, scope: !14319)
!14330 = distinct !DISubprogram(name: "rb_get_min", scope: !289, file: !289, line: 115, type: !14331, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14333)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!2093, !14296}
!14333 = !{!14334}
!14334 = !DILocalVariable(name: "tree", arg: 1, scope: !14330, file: !289, line: 115, type: !14296)
!14335 = !DILocation(line: 0, scope: !14330)
!14336 = !DILocation(line: 117, column: 9, scope: !14330)
!14337 = !DILocation(line: 117, column: 2, scope: !14330)
!14338 = !DISubprogram(name: "z_rb_get_minmax", scope: !289, file: !289, line: 100, type: !14339, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!14339 = !DISubroutineType(types: !14340)
!14340 = !{!2093, !14296, !208}
!14341 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2169, file: !2169, line: 1246, type: !14342, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14352)
!14342 = !DISubroutineType(types: !14343)
!14343 = !{!2064, !14344}
!14344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14345, size: 32)
!14345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14243, line: 53, size: 2080, elements: !14346)
!14346 = !{!14347, !14351}
!14347 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14345, file: !14243, line: 54, baseType: !14348, size: 2048)
!14348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2100, size: 2048, elements: !14349)
!14349 = !{!14350}
!14350 = !DISubrange(count: 32)
!14351 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14345, file: !14243, line: 55, baseType: !32, size: 32, offset: 2048)
!14352 = !{!14353, !14354, !14355, !14356}
!14353 = !DILocalVariable(name: "pq", arg: 1, scope: !14341, file: !2169, line: 1246, type: !14344)
!14354 = !DILocalVariable(name: "thread", scope: !14341, file: !2169, line: 1252, type: !2064)
!14355 = !DILocalVariable(name: "l", scope: !14341, file: !2169, line: 1253, type: !13151)
!14356 = !DILocalVariable(name: "n", scope: !14341, file: !2169, line: 1254, type: !2165)
!14357 = !DILocation(line: 0, scope: !14341)
!14358 = !DILocation(line: 1248, column: 11, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14341, file: !2169, line: 1248, column: 6)
!14360 = !DILocation(line: 1248, column: 7, scope: !14359)
!14361 = !DILocation(line: 1248, column: 6, scope: !14341)
!14362 = !DILocation(line: 1253, column: 31, scope: !14341)
!14363 = !DILocation(line: 1253, column: 20, scope: !14341)
!14364 = !DILocation(line: 1254, column: 19, scope: !14341)
!14365 = !DILocation(line: 1260, column: 1, scope: !14341)
!14366 = distinct !DISubprogram(name: "z_unpend_all", scope: !2169, file: !2169, line: 1262, type: !14367, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14369)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{!103, !2095}
!14369 = !{!14370, !14371, !14372}
!14370 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14366, file: !2169, line: 1262, type: !2095)
!14371 = !DILocalVariable(name: "need_sched", scope: !14366, file: !2169, line: 1264, type: !103)
!14372 = !DILocalVariable(name: "thread", scope: !14366, file: !2169, line: 1265, type: !2064)
!14373 = !DILocation(line: 0, scope: !14366)
!14374 = !DILocation(line: 1267, column: 19, scope: !14366)
!14375 = !DILocation(line: 1267, column: 41, scope: !14366)
!14376 = !DILocation(line: 1267, column: 2, scope: !14366)
!14377 = !DILocation(line: 1268, column: 3, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14366, file: !2169, line: 1267, column: 50)
!14379 = !DILocation(line: 1269, column: 3, scope: !14378)
!14380 = distinct !{!14380, !14376, !14381}
!14381 = !DILocation(line: 1271, column: 2, scope: !14366)
!14382 = !DILocation(line: 1273, column: 2, scope: !14366)
!14383 = distinct !DISubprogram(name: "z_waitq_head", scope: !12546, file: !12546, line: 52, type: !13999, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14384)
!14384 = !{!14385}
!14385 = !DILocalVariable(name: "w", arg: 1, scope: !14383, file: !12546, line: 52, type: !2095)
!14386 = !DILocation(line: 0, scope: !14383)
!14387 = !DILocation(line: 54, column: 52, scope: !14383)
!14388 = !DILocation(line: 54, column: 28, scope: !14383)
!14389 = !DILocation(line: 54, column: 9, scope: !14383)
!14390 = !DILocation(line: 54, column: 2, scope: !14383)
!14391 = distinct !DISubprogram(name: "init_ready_q", scope: !2169, file: !2169, line: 1276, type: !14392, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14399)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{null, !14394}
!14394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14395, size: 32)
!14395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !299, line: 83, size: 96, elements: !14396)
!14396 = !{!14397, !14398}
!14397 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14395, file: !299, line: 86, baseType: !2064, size: 32)
!14398 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14395, file: !299, line: 90, baseType: !2100, size: 64, offset: 32)
!14399 = !{!14400}
!14400 = !DILocalVariable(name: "rq", arg: 1, scope: !14391, file: !2169, line: 1276, type: !14394)
!14401 = !DILocation(line: 0, scope: !14391)
!14402 = !DILocation(line: 1289, column: 22, scope: !14391)
!14403 = !DILocation(line: 1289, column: 2, scope: !14391)
!14404 = !DILocation(line: 1291, column: 1, scope: !14391)
!14405 = distinct !DISubprogram(name: "sys_dlist_init", scope: !273, file: !273, line: 197, type: !14406, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14408)
!14406 = !DISubroutineType(types: !14407)
!14407 = !{null, !13151}
!14408 = !{!14409}
!14409 = !DILocalVariable(name: "list", arg: 1, scope: !14405, file: !273, line: 197, type: !13151)
!14410 = !DILocation(line: 0, scope: !14405)
!14411 = !DILocation(line: 199, column: 8, scope: !14405)
!14412 = !DILocation(line: 199, column: 13, scope: !14405)
!14413 = !DILocation(line: 200, column: 8, scope: !14405)
!14414 = !DILocation(line: 200, column: 13, scope: !14405)
!14415 = !DILocation(line: 201, column: 1, scope: !14405)
!14416 = distinct !DISubprogram(name: "z_sched_init", scope: !2169, file: !2169, line: 1293, type: !2819, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14417 = !DILocation(line: 1302, column: 2, scope: !14416)
!14418 = !DILocation(line: 1306, column: 2, scope: !14416)
!14419 = !DILocation(line: 1309, column: 1, scope: !14416)
!14420 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2169, file: !2169, line: 1311, type: !14421, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14424)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!103, !14423}
!14423 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !263, line: 347, baseType: !2064)
!14424 = !{!14425}
!14425 = !DILocalVariable(name: "thread", arg: 1, scope: !14420, file: !2169, line: 1311, type: !14423)
!14426 = !DILocation(line: 0, scope: !14420)
!14427 = !DILocation(line: 1313, column: 22, scope: !14420)
!14428 = !DILocation(line: 1313, column: 9, scope: !14420)
!14429 = !DILocation(line: 1313, column: 2, scope: !14420)
!14430 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2169, file: !2169, line: 1325, type: !14431, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14433)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{null, !14423, !103}
!14433 = !{!14434, !14435, !14436}
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14430, file: !2169, line: 1325, type: !14423)
!14435 = !DILocalVariable(name: "prio", arg: 2, scope: !14430, file: !2169, line: 1325, type: !103)
!14436 = !DILocalVariable(name: "th", scope: !14430, file: !2169, line: 1334, type: !2064)
!14437 = !DILocation(line: 0, scope: !14430)
!14438 = !DILocation(line: 1336, column: 2, scope: !14430)
!14439 = !DILocation(line: 1337, column: 1, scope: !14430)
!14440 = distinct !DISubprogram(name: "k_can_yield", scope: !2169, file: !2169, line: 1384, type: !7096, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14441 = !DILocation(line: 1386, column: 11, scope: !14440)
!14442 = !DILocation(line: 1386, column: 29, scope: !14440)
!14443 = !DILocation(line: 1386, column: 32, scope: !14440)
!14444 = !DILocation(line: 1386, column: 46, scope: !14440)
!14445 = !DILocation(line: 1387, column: 28, scope: !14440)
!14446 = !DILocation(line: 1387, column: 4, scope: !14440)
!14447 = !DILocation(line: 1386, column: 2, scope: !14440)
!14448 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !357, file: !357, line: 989, type: !7096, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14449 = !DILocation(line: 993, column: 10, scope: !14448)
!14450 = !DILocation(line: 993, column: 2, scope: !14448)
!14451 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2169, file: !2169, line: 1390, type: !2819, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14452)
!14452 = !{!14453}
!14453 = !DILocalVariable(name: "key", scope: !14451, file: !2169, line: 1396, type: !12940)
!14454 = !DILocation(line: 0, scope: !12948, inlinedAt: !14455)
!14455 = distinct !DILocation(line: 1396, column: 25, scope: !14451)
!14456 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14455)
!14458 = !DILocation(line: 0, scope: !12957, inlinedAt: !14457)
!14459 = !DILocation(line: 0, scope: !14451)
!14460 = !DILocation(line: 1400, column: 18, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14462, file: !2169, line: 1399, column: 36)
!14462 = distinct !DILexicalBlock(scope: !14451, file: !2169, line: 1398, column: 6)
!14463 = !DILocation(line: 0, scope: !13117, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 1400, column: 3, scope: !14461)
!14465 = !DILocation(line: 266, column: 15, scope: !13117, inlinedAt: !14464)
!14466 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !14464)
!14467 = !DILocation(line: 0, scope: !13125, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !14464)
!14469 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !14468)
!14470 = !DILocation(line: 1402, column: 15, scope: !14451)
!14471 = !DILocation(line: 0, scope: !13134, inlinedAt: !14472)
!14472 = distinct !DILocation(line: 1402, column: 2, scope: !14451)
!14473 = !DILocation(line: 252, column: 15, scope: !13134, inlinedAt: !14472)
!14474 = !DILocation(line: 252, column: 28, scope: !13134, inlinedAt: !14472)
!14475 = !DILocation(line: 0, scope: !13141, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 254, column: 3, scope: !13145, inlinedAt: !14472)
!14477 = !DILocation(line: 0, scope: !13148, inlinedAt: !14478)
!14478 = distinct !DILocation(line: 229, column: 2, scope: !13141, inlinedAt: !14476)
!14479 = !DILocation(line: 188, column: 2, scope: !13158, inlinedAt: !14478)
!14480 = !DILocation(line: 188, column: 2, scope: !13160, inlinedAt: !14478)
!14481 = !DILocation(line: 0, scope: !13158, inlinedAt: !14478)
!14482 = !DILocation(line: 189, column: 7, scope: !13163, inlinedAt: !14478)
!14483 = !DILocation(line: 189, column: 35, scope: !13163, inlinedAt: !14478)
!14484 = !DILocation(line: 189, column: 7, scope: !13164, inlinedAt: !14478)
!14485 = !DILocation(line: 191, column: 21, scope: !13168, inlinedAt: !14478)
!14486 = !DILocation(line: 190, column: 4, scope: !13168, inlinedAt: !14478)
!14487 = !DILocation(line: 192, column: 4, scope: !13168, inlinedAt: !14478)
!14488 = distinct !{!14488, !14479, !14489}
!14489 = !DILocation(line: 194, column: 2, scope: !13158, inlinedAt: !14478)
!14490 = !DILocation(line: 196, column: 37, scope: !13148, inlinedAt: !14478)
!14491 = !DILocation(line: 196, column: 2, scope: !13148, inlinedAt: !14478)
!14492 = !DILocation(line: 197, column: 1, scope: !13148, inlinedAt: !14478)
!14493 = !DILocation(line: 1403, column: 2, scope: !14451)
!14494 = !DILocation(line: 0, scope: !13559, inlinedAt: !14495)
!14495 = distinct !DILocation(line: 1404, column: 2, scope: !14451)
!14496 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !14495)
!14497 = !DILocation(line: 1405, column: 1, scope: !14451)
!14498 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2169, file: !2169, line: 1459, type: !14499, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14501)
!14499 = !DISubroutineType(types: !14500)
!14500 = !{!632, !13739}
!14501 = !{!14502, !14503, !14504}
!14502 = !DILocalVariable(name: "timeout", arg: 1, scope: !14498, file: !2169, line: 1459, type: !13739)
!14503 = !DILocalVariable(name: "ticks", scope: !14498, file: !2169, line: 1461, type: !1422)
!14504 = !DILocalVariable(name: "ret", scope: !14498, file: !2169, line: 1480, type: !632)
!14505 = !DILocation(line: 0, scope: !14498)
!14506 = !DILocation(line: 1468, column: 6, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14498, file: !2169, line: 1468, column: 6)
!14508 = !DILocation(line: 1468, column: 6, scope: !14498)
!14509 = !DILocation(line: 1469, column: 20, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14507, file: !2169, line: 1468, column: 40)
!14511 = !DILocation(line: 1469, column: 3, scope: !14510)
!14512 = !DILocation(line: 1473, column: 3, scope: !14510)
!14513 = !DILocation(line: 1478, column: 10, scope: !14498)
!14514 = !DILocation(line: 1480, column: 16, scope: !14498)
!14515 = !DILocation(line: 1485, column: 1, scope: !14498)
!14516 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3269, file: !3269, line: 310, type: !14517, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14519)
!14517 = !DISubroutineType(types: !14518)
!14518 = !{null, !14423}
!14519 = !{!14520}
!14520 = !DILocalVariable(name: "thread", arg: 1, scope: !14516, file: !3269, line: 310, type: !14423)
!14521 = !DILocation(line: 0, scope: !14516)
!14522 = !DILocation(line: 319, column: 2, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14516, file: !3269, line: 319, column: 2)
!14524 = !{i64 2154784379}
!14525 = !DILocation(line: 320, column: 2, scope: !14516)
!14526 = !DILocation(line: 321, column: 1, scope: !14516)
!14527 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2169, file: !2169, line: 1415, type: !14528, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14530)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{!632, !1422}
!14530 = !{!14531, !14532, !14533, !14534}
!14531 = !DILocalVariable(name: "ticks", arg: 1, scope: !14527, file: !2169, line: 1415, type: !1422)
!14532 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14527, file: !2169, line: 1418, type: !137)
!14533 = !DILocalVariable(name: "timeout", scope: !14527, file: !2169, line: 1430, type: !13739)
!14534 = !DILocalVariable(name: "key", scope: !14527, file: !2169, line: 1437, type: !12940)
!14535 = !DILocation(line: 0, scope: !14527)
!14536 = !DILocation(line: 1425, column: 12, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14527, file: !2169, line: 1425, column: 6)
!14538 = !DILocation(line: 1425, column: 6, scope: !14527)
!14539 = !DILocation(line: 1426, column: 3, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14537, file: !2169, line: 1425, column: 18)
!14541 = !DILocation(line: 1427, column: 3, scope: !14540)
!14542 = !DILocation(line: 1431, column: 24, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14527, file: !2169, line: 1431, column: 6)
!14544 = !DILocation(line: 1431, column: 6, scope: !14527)
!14545 = !DILocation(line: 1432, column: 35, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14543, file: !2169, line: 1431, column: 30)
!14547 = !DILocation(line: 1432, column: 27, scope: !14546)
!14548 = !DILocation(line: 1433, column: 2, scope: !14546)
!14549 = !DILocation(line: 1434, column: 27, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14543, file: !2169, line: 1433, column: 9)
!14551 = !DILocation(line: 0, scope: !14543)
!14552 = !DILocation(line: 0, scope: !12948, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 1437, column: 25, scope: !14527)
!14554 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14553)
!14556 = !DILocation(line: 0, scope: !12957, inlinedAt: !14555)
!14557 = !DILocation(line: 1440, column: 20, scope: !14527)
!14558 = !DILocation(line: 1440, column: 18, scope: !14527)
!14559 = !DILocation(line: 1442, column: 2, scope: !14527)
!14560 = !DILocation(line: 1443, column: 23, scope: !14527)
!14561 = !DILocation(line: 1443, column: 2, scope: !14527)
!14562 = !DILocation(line: 1444, column: 29, scope: !14527)
!14563 = !DILocation(line: 1444, column: 2, scope: !14527)
!14564 = !DILocation(line: 0, scope: !13559, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 1446, column: 8, scope: !14527)
!14566 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !14565)
!14567 = !DILocation(line: 1450, column: 10, scope: !14527)
!14568 = !DILocation(line: 1450, column: 45, scope: !14527)
!14569 = !DILocation(line: 1450, column: 43, scope: !14527)
!14570 = !DILocation(line: 1451, column: 6, scope: !14527)
!14571 = !DILocation(line: 1457, column: 1, scope: !14527)
!14572 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12781, file: !12781, line: 1103, type: !12782, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14573)
!14573 = !{!14574}
!14574 = !DILocalVariable(name: "t", arg: 1, scope: !14572, file: !12781, line: 1103, type: !163)
!14575 = !DILocation(line: 0, scope: !14572)
!14576 = !DILocation(line: 0, scope: !12995, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 1106, column: 9, scope: !14572)
!14578 = !DILocation(line: 139, column: 13, scope: !14579, inlinedAt: !14577)
!14579 = distinct !DILexicalBlock(scope: !14580, file: !12781, line: 138, column: 10)
!14580 = distinct !DILexicalBlock(scope: !14581, file: !12781, line: 136, column: 7)
!14581 = distinct !DILexicalBlock(scope: !13016, file: !12781, line: 134, column: 17)
!14582 = !DILocation(line: 1106, column: 2, scope: !14572)
!14583 = distinct !DISubprogram(name: "k_yield", scope: !3269, file: !3269, line: 140, type: !2819, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14584 = !DILocation(line: 148, column: 2, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14583, file: !3269, line: 148, column: 2)
!14586 = !{i64 2154783699}
!14587 = !DILocation(line: 149, column: 2, scope: !14583)
!14588 = !DILocation(line: 150, column: 1, scope: !14583)
!14589 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2169, file: !2169, line: 1495, type: !14590, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14592)
!14590 = !DISubroutineType(types: !14591)
!14591 = !{!632, !103}
!14592 = !{!14593, !14594}
!14593 = !DILocalVariable(name: "us", arg: 1, scope: !14589, file: !2169, line: 1495, type: !103)
!14594 = !DILocalVariable(name: "ticks", scope: !14589, file: !2169, line: 1497, type: !632)
!14595 = !DILocation(line: 0, scope: !14589)
!14596 = !DILocation(line: 1501, column: 31, scope: !14589)
!14597 = !DILocation(line: 1501, column: 10, scope: !14589)
!14598 = !DILocation(line: 1502, column: 23, scope: !14589)
!14599 = !DILocation(line: 1502, column: 10, scope: !14589)
!14600 = !DILocation(line: 1506, column: 31, scope: !14589)
!14601 = !DILocation(line: 1506, column: 9, scope: !14589)
!14602 = !DILocation(line: 1506, column: 2, scope: !14589)
!14603 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12781, file: !12781, line: 571, type: !12782, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14604)
!14604 = !{!14605}
!14605 = !DILocalVariable(name: "t", arg: 1, scope: !14603, file: !12781, line: 571, type: !163)
!14606 = !DILocation(line: 0, scope: !14603)
!14607 = !DILocation(line: 0, scope: !12995, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 574, column: 9, scope: !14603)
!14609 = !DILocation(line: 135, column: 5, scope: !14581, inlinedAt: !14608)
!14610 = !DILocation(line: 139, column: 13, scope: !14579, inlinedAt: !14608)
!14611 = !DILocation(line: 574, column: 2, scope: !14603)
!14612 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12781, file: !12781, line: 1187, type: !12782, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14613)
!14613 = !{!14614}
!14614 = !DILocalVariable(name: "t", arg: 1, scope: !14612, file: !12781, line: 1187, type: !163)
!14615 = !DILocation(line: 0, scope: !14612)
!14616 = !DILocation(line: 0, scope: !12995, inlinedAt: !14617)
!14617 = distinct !DILocation(line: 1190, column: 9, scope: !14612)
!14618 = !DILocation(line: 145, column: 13, scope: !14619, inlinedAt: !14617)
!14619 = distinct !DILexicalBlock(scope: !13013, file: !12781, line: 144, column: 10)
!14620 = !DILocation(line: 1190, column: 2, scope: !14612)
!14621 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2169, file: !2169, line: 1517, type: !14517, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14622)
!14622 = !{!14623}
!14623 = !DILocalVariable(name: "thread", arg: 1, scope: !14621, file: !2169, line: 1517, type: !14423)
!14624 = !DILocation(line: 0, scope: !14621)
!14625 = !DILocation(line: 1521, column: 6, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14621, file: !2169, line: 1521, column: 6)
!14627 = !DILocation(line: 1521, column: 6, scope: !14621)
!14628 = !DILocation(line: 1525, column: 6, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14621, file: !2169, line: 1525, column: 6)
!14630 = !DILocation(line: 1525, column: 37, scope: !14629)
!14631 = !DILocation(line: 1525, column: 6, scope: !14621)
!14632 = !DILocation(line: 1527, column: 20, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !2169, line: 1527, column: 7)
!14634 = distinct !DILexicalBlock(scope: !14629, file: !2169, line: 1525, column: 42)
!14635 = !DILocation(line: 1527, column: 33, scope: !14633)
!14636 = !DILocation(line: 1527, column: 7, scope: !14634)
!14637 = !DILocation(line: 1532, column: 2, scope: !14621)
!14638 = !DILocation(line: 1533, column: 2, scope: !14621)
!14639 = !DILocation(line: 1031, column: 3, scope: !13592, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 48, column: 10, scope: !13596, inlinedAt: !14641)
!14641 = distinct !DILocation(line: 1537, column: 7, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14621, file: !2169, line: 1537, column: 6)
!14643 = !DILocation(line: 0, scope: !13592, inlinedAt: !14640)
!14644 = !DILocation(line: 48, column: 9, scope: !13596, inlinedAt: !14641)
!14645 = !DILocation(line: 1537, column: 6, scope: !14621)
!14646 = !DILocation(line: 1538, column: 3, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14642, file: !2169, line: 1537, column: 25)
!14648 = !DILocation(line: 1539, column: 2, scope: !14647)
!14649 = !DILocation(line: 1540, column: 1, scope: !14621)
!14650 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12220, file: !12220, line: 101, type: !13066, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14651)
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14650, file: !12220, line: 101, type: !2064)
!14653 = !DILocation(line: 0, scope: !14650)
!14654 = !DILocation(line: 103, column: 23, scope: !14650)
!14655 = !DILocation(line: 103, column: 36, scope: !14650)
!14656 = !DILocation(line: 103, column: 55, scope: !14650)
!14657 = !DILocation(line: 103, column: 2, scope: !14650)
!14658 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2169, file: !2169, line: 1567, type: !14659, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{!14423}
!14661 = !{!14662}
!14662 = !DILocalVariable(name: "ret", scope: !14658, file: !2169, line: 1577, type: !14423)
!14663 = !DILocation(line: 1577, column: 30, scope: !14658)
!14664 = !DILocation(line: 0, scope: !14658)
!14665 = !DILocation(line: 1582, column: 2, scope: !14658)
!14666 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2169, file: !2169, line: 1593, type: !7370, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !162)
!14667 = !DILocation(line: 1031, column: 3, scope: !13592, inlinedAt: !14668)
!14668 = distinct !DILocation(line: 48, column: 10, scope: !13596, inlinedAt: !14669)
!14669 = distinct !DILocation(line: 1595, column: 10, scope: !14666)
!14670 = !DILocation(line: 0, scope: !13592, inlinedAt: !14668)
!14671 = !DILocation(line: 48, column: 9, scope: !13596, inlinedAt: !14669)
!14672 = !DILocation(line: 1595, column: 27, scope: !14666)
!14673 = !DILocation(line: 1595, column: 41, scope: !14666)
!14674 = !DILocation(line: 1595, column: 30, scope: !14666)
!14675 = !DILocation(line: 1595, column: 2, scope: !14666)
!14676 = distinct !DISubprogram(name: "z_thread_abort", scope: !2169, file: !2169, line: 1725, type: !12906, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14677)
!14677 = !{!14678, !14679}
!14678 = !DILocalVariable(name: "thread", arg: 1, scope: !14676, file: !2169, line: 1725, type: !2064)
!14679 = !DILocalVariable(name: "key", scope: !14676, file: !2169, line: 1727, type: !12940)
!14680 = !DILocation(line: 0, scope: !14676)
!14681 = !DILocation(line: 0, scope: !12948, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 1727, column: 25, scope: !14676)
!14683 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14682)
!14685 = !DILocation(line: 0, scope: !12957, inlinedAt: !14684)
!14686 = !DILocation(line: 1729, column: 20, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14676, file: !2169, line: 1729, column: 6)
!14688 = !DILocation(line: 1729, column: 33, scope: !14687)
!14689 = !DILocation(line: 1729, column: 48, scope: !14687)
!14690 = !DILocation(line: 1729, column: 6, scope: !14676)
!14691 = !DILocation(line: 0, scope: !12975, inlinedAt: !14692)
!14692 = distinct !DILocation(line: 1730, column: 3, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14687, file: !2169, line: 1729, column: 54)
!14694 = !DILocation(line: 0, scope: !12983, inlinedAt: !14695)
!14695 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14692)
!14696 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14695)
!14697 = !DILocation(line: 1732, column: 3, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14693, file: !2169, line: 1732, column: 3)
!14699 = !{i64 2155521109, i64 2155521125, i64 2155521151, i64 2155521179, i64 2155521199}
!14700 = !DILocation(line: 1733, column: 3, scope: !14693)
!14701 = !DILocation(line: 1736, column: 20, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14676, file: !2169, line: 1736, column: 6)
!14703 = !DILocation(line: 1736, column: 33, scope: !14702)
!14704 = !DILocation(line: 1736, column: 49, scope: !14702)
!14705 = !DILocation(line: 1736, column: 6, scope: !14676)
!14706 = !DILocation(line: 0, scope: !12975, inlinedAt: !14707)
!14707 = distinct !DILocation(line: 1737, column: 3, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14702, file: !2169, line: 1736, column: 56)
!14709 = !DILocation(line: 0, scope: !12983, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14707)
!14711 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14710)
!14712 = !DILocation(line: 1738, column: 3, scope: !14708)
!14713 = !DILocation(line: 1775, column: 2, scope: !14676)
!14714 = !DILocation(line: 1776, column: 16, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14676, file: !2169, line: 1776, column: 6)
!14716 = !DILocation(line: 1776, column: 13, scope: !14715)
!14717 = !DILocation(line: 1776, column: 25, scope: !14715)
!14718 = !DILocation(line: 1031, column: 3, scope: !13592, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 48, column: 10, scope: !13596, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 1776, column: 29, scope: !14715)
!14721 = !DILocation(line: 0, scope: !13592, inlinedAt: !14719)
!14722 = !DILocation(line: 48, column: 9, scope: !13596, inlinedAt: !14720)
!14723 = !DILocation(line: 1776, column: 6, scope: !14676)
!14724 = !DILocation(line: 0, scope: !13559, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 1777, column: 3, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14715, file: !2169, line: 1776, column: 47)
!14727 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !14725)
!14728 = !DILocation(line: 1779, column: 2, scope: !14726)
!14729 = !DILocation(line: 0, scope: !12975, inlinedAt: !14730)
!14730 = distinct !DILocation(line: 1780, column: 2, scope: !14676)
!14731 = !DILocation(line: 0, scope: !12983, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14730)
!14733 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14732)
!14734 = !DILocation(line: 1781, column: 1, scope: !14676)
!14735 = distinct !DISubprogram(name: "end_thread", scope: !2169, file: !2169, line: 1690, type: !12906, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14736)
!14736 = !{!14737}
!14737 = !DILocalVariable(name: "thread", arg: 1, scope: !14735, file: !2169, line: 1690, type: !2064)
!14738 = !DILocation(line: 0, scope: !14735)
!14739 = !DILocation(line: 1695, column: 20, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14735, file: !2169, line: 1695, column: 6)
!14741 = !DILocation(line: 1695, column: 33, scope: !14740)
!14742 = !DILocation(line: 1695, column: 49, scope: !14740)
!14743 = !DILocation(line: 1695, column: 6, scope: !14735)
!14744 = !DILocation(line: 1697, column: 29, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14740, file: !2169, line: 1695, column: 56)
!14746 = !DILocation(line: 1698, column: 7, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14745, file: !2169, line: 1698, column: 7)
!14748 = !DILocation(line: 1698, column: 7, scope: !14745)
!14749 = !DILocation(line: 0, scope: !13117, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 1699, column: 4, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14747, file: !2169, line: 1698, column: 35)
!14752 = !DILocation(line: 266, column: 28, scope: !13117, inlinedAt: !14750)
!14753 = !DILocation(line: 0, scope: !13125, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 268, column: 3, scope: !13129, inlinedAt: !14750)
!14755 = !DILocation(line: 234, column: 2, scope: !13125, inlinedAt: !14754)
!14756 = !DILocation(line: 1700, column: 3, scope: !14751)
!14757 = !DILocation(line: 1701, column: 20, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14745, file: !2169, line: 1701, column: 7)
!14759 = !DILocation(line: 1701, column: 30, scope: !14758)
!14760 = !DILocation(line: 1701, column: 7, scope: !14745)
!14761 = !DILocation(line: 1702, column: 4, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14758, file: !2169, line: 1701, column: 39)
!14763 = !DILocation(line: 1703, column: 3, scope: !14762)
!14764 = !DILocation(line: 1704, column: 9, scope: !14745)
!14765 = !DILocation(line: 1705, column: 23, scope: !14745)
!14766 = !DILocation(line: 1705, column: 3, scope: !14745)
!14767 = !DILocation(line: 1706, column: 3, scope: !14745)
!14768 = !DILocation(line: 1722, column: 2, scope: !14745)
!14769 = !DILocation(line: 1723, column: 1, scope: !14735)
!14770 = distinct !DISubprogram(name: "unpend_all", scope: !2169, file: !2169, line: 1674, type: !14771, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14773)
!14771 = !DISubroutineType(types: !14772)
!14772 = !{null, !2095}
!14773 = !{!14774, !14775}
!14774 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14770, file: !2169, line: 1674, type: !2095)
!14775 = !DILocalVariable(name: "thread", scope: !14770, file: !2169, line: 1676, type: !2064)
!14776 = !DILocation(line: 0, scope: !14770)
!14777 = !DILocation(line: 1678, column: 19, scope: !14770)
!14778 = !DILocation(line: 1678, column: 41, scope: !14770)
!14779 = !DILocation(line: 1678, column: 2, scope: !14770)
!14780 = !DILocation(line: 1679, column: 3, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14770, file: !2169, line: 1678, column: 50)
!14782 = !DILocation(line: 1680, column: 9, scope: !14781)
!14783 = !DILocalVariable(name: "thread", arg: 1, scope: !14784, file: !12240, line: 65, type: !2064)
!14784 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12240, file: !12240, line: 65, type: !14785, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14787)
!14785 = !DISubroutineType(types: !14786)
!14786 = !{null, !2064, !32}
!14787 = !{!14783, !14788}
!14788 = !DILocalVariable(name: "value", arg: 2, scope: !14784, file: !12240, line: 65, type: !32)
!14789 = !DILocation(line: 0, scope: !14784, inlinedAt: !14790)
!14790 = distinct !DILocation(line: 1681, column: 3, scope: !14781)
!14791 = !DILocation(line: 67, column: 15, scope: !14784, inlinedAt: !14790)
!14792 = !DILocation(line: 67, column: 33, scope: !14784, inlinedAt: !14790)
!14793 = !DILocation(line: 1682, column: 3, scope: !14781)
!14794 = distinct !{!14794, !14779, !14795}
!14795 = !DILocation(line: 1683, column: 2, scope: !14770)
!14796 = !DILocation(line: 1684, column: 1, scope: !14770)
!14797 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2169, file: !2169, line: 1794, type: !14798, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!103, !2064, !13739}
!14800 = !{!14801, !14802, !14803, !14804}
!14801 = !DILocalVariable(name: "thread", arg: 1, scope: !14797, file: !2169, line: 1794, type: !2064)
!14802 = !DILocalVariable(name: "timeout", arg: 2, scope: !14797, file: !2169, line: 1794, type: !13739)
!14803 = !DILocalVariable(name: "key", scope: !14797, file: !2169, line: 1796, type: !12940)
!14804 = !DILocalVariable(name: "ret", scope: !14797, file: !2169, line: 1797, type: !103)
!14805 = !DILocation(line: 0, scope: !14797)
!14806 = !DILocation(line: 0, scope: !12948, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 1796, column: 25, scope: !14797)
!14808 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14809)
!14809 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14807)
!14810 = !DILocation(line: 0, scope: !12957, inlinedAt: !14809)
!14811 = !DILocation(line: 1801, column: 20, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14797, file: !2169, line: 1801, column: 6)
!14813 = !DILocation(line: 1801, column: 33, scope: !14812)
!14814 = !DILocation(line: 1801, column: 49, scope: !14812)
!14815 = !DILocation(line: 1801, column: 6, scope: !14797)
!14816 = !DILocation(line: 1803, column: 13, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14812, file: !2169, line: 1803, column: 13)
!14818 = !DILocation(line: 1803, column: 13, scope: !14812)
!14819 = !DILocation(line: 1805, column: 24, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !2169, line: 1805, column: 13)
!14821 = !DILocation(line: 1805, column: 21, scope: !14820)
!14822 = !DILocation(line: 1805, column: 34, scope: !14820)
!14823 = !DILocation(line: 1806, column: 20, scope: !14820)
!14824 = !DILocation(line: 1806, column: 44, scope: !14820)
!14825 = !DILocation(line: 1806, column: 30, scope: !14820)
!14826 = !DILocation(line: 1805, column: 13, scope: !14817)
!14827 = !DILocation(line: 1810, column: 42, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14820, file: !2169, line: 1808, column: 9)
!14829 = !DILocation(line: 1810, column: 3, scope: !14828)
!14830 = !DILocation(line: 1811, column: 22, scope: !14828)
!14831 = !DILocation(line: 1811, column: 3, scope: !14828)
!14832 = !DILocation(line: 0, scope: !13559, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 1814, column: 9, scope: !14828)
!14834 = !DILocation(line: 196, column: 9, scope: !13559, inlinedAt: !14833)
!14835 = !DILocation(line: 1817, column: 3, scope: !14828)
!14836 = !DILocation(line: 0, scope: !14812)
!14837 = !DILocation(line: 0, scope: !12975, inlinedAt: !14838)
!14838 = distinct !DILocation(line: 1822, column: 2, scope: !14797)
!14839 = !DILocation(line: 0, scope: !12983, inlinedAt: !14840)
!14840 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14838)
!14841 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14840)
!14842 = !DILocation(line: 1823, column: 2, scope: !14797)
!14843 = !DILocation(line: 1824, column: 1, scope: !14797)
!14844 = distinct !DISubprogram(name: "z_sched_wake", scope: !2169, file: !2169, line: 1882, type: !14845, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14847)
!14845 = !DISubroutineType(types: !14846)
!14846 = !{!211, !2095, !103, !102}
!14847 = !{!14848, !14849, !14850, !14851, !14852, !14853, !14855}
!14848 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14844, file: !2169, line: 1882, type: !2095)
!14849 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14844, file: !2169, line: 1882, type: !103)
!14850 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14844, file: !2169, line: 1882, type: !102)
!14851 = !DILocalVariable(name: "thread", scope: !14844, file: !2169, line: 1884, type: !2064)
!14852 = !DILocalVariable(name: "ret", scope: !14844, file: !2169, line: 1885, type: !211)
!14853 = !DILocalVariable(name: "__i", scope: !14854, file: !2169, line: 1887, type: !12940)
!14854 = distinct !DILexicalBlock(scope: !14844, file: !2169, line: 1887, column: 2)
!14855 = !DILocalVariable(name: "__key", scope: !14854, file: !2169, line: 1887, type: !12940)
!14856 = !DILocation(line: 0, scope: !14844)
!14857 = !DILocation(line: 0, scope: !14854)
!14858 = !DILocation(line: 0, scope: !12948, inlinedAt: !14859)
!14859 = distinct !DILocation(line: 1887, column: 2, scope: !14854)
!14860 = !DILocation(line: 55, column: 2, scope: !12957, inlinedAt: !14861)
!14861 = distinct !DILocation(line: 145, column: 10, scope: !12948, inlinedAt: !14859)
!14862 = !DILocation(line: 0, scope: !12957, inlinedAt: !14861)
!14863 = !DILocation(line: 1888, column: 12, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14865, file: !2169, line: 1887, column: 26)
!14865 = distinct !DILexicalBlock(scope: !14854, file: !2169, line: 1887, column: 2)
!14866 = !DILocation(line: 1890, column: 14, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14864, file: !2169, line: 1890, column: 7)
!14868 = !DILocation(line: 1890, column: 7, scope: !14864)
!14869 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !14871, line: 134, type: !2064)
!14870 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14871, file: !14871, line: 134, type: !14872, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14874)
!14871 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14872 = !DISubroutineType(types: !14873)
!14873 = !{null, !2064, !32, !102}
!14874 = !{!14869, !14875, !14876}
!14875 = !DILocalVariable(name: "value", arg: 2, scope: !14870, file: !14871, line: 135, type: !32)
!14876 = !DILocalVariable(name: "data", arg: 3, scope: !14870, file: !14871, line: 136, type: !102)
!14877 = !DILocation(line: 0, scope: !14870, inlinedAt: !14878)
!14878 = distinct !DILocation(line: 1891, column: 4, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14867, file: !2169, line: 1890, column: 23)
!14880 = !DILocation(line: 0, scope: !14784, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 138, column: 2, scope: !14870, inlinedAt: !14878)
!14882 = !DILocation(line: 67, column: 15, scope: !14784, inlinedAt: !14881)
!14883 = !DILocation(line: 67, column: 33, scope: !14784, inlinedAt: !14881)
!14884 = !DILocation(line: 139, column: 15, scope: !14870, inlinedAt: !14878)
!14885 = !DILocation(line: 139, column: 25, scope: !14870, inlinedAt: !14878)
!14886 = !DILocation(line: 1894, column: 4, scope: !14879)
!14887 = !DILocation(line: 1895, column: 10, scope: !14879)
!14888 = !DILocation(line: 1896, column: 4, scope: !14879)
!14889 = !DILocation(line: 1898, column: 3, scope: !14879)
!14890 = !DILocation(line: 0, scope: !12975, inlinedAt: !14891)
!14891 = distinct !DILocation(line: 1887, column: 2, scope: !14865)
!14892 = !DILocation(line: 0, scope: !12983, inlinedAt: !14893)
!14893 = distinct !DILocation(line: 215, column: 2, scope: !12975, inlinedAt: !14891)
!14894 = !DILocation(line: 95, column: 2, scope: !12983, inlinedAt: !14893)
!14895 = !DILocation(line: 1901, column: 2, scope: !14844)
!14896 = distinct !DISubprogram(name: "z_sched_wait", scope: !2169, file: !2169, line: 1904, type: !14897, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2061, retainedNodes: !14900)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!103, !12951, !12940, !2095, !13739, !14899}
!14899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!14900 = !{!14901, !14902, !14903, !14904, !14905, !14906}
!14901 = !DILocalVariable(name: "lock", arg: 1, scope: !14896, file: !2169, line: 1904, type: !12951)
!14902 = !DILocalVariable(name: "key", arg: 2, scope: !14896, file: !2169, line: 1904, type: !12940)
!14903 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14896, file: !2169, line: 1905, type: !2095)
!14904 = !DILocalVariable(name: "timeout", arg: 4, scope: !14896, file: !2169, line: 1905, type: !13739)
!14905 = !DILocalVariable(name: "data", arg: 5, scope: !14896, file: !2169, line: 1905, type: !14899)
!14906 = !DILocalVariable(name: "ret", scope: !14896, file: !2169, line: 1907, type: !103)
!14907 = !DILocation(line: 0, scope: !14896)
!14908 = !DILocation(line: 1907, column: 12, scope: !14896)
!14909 = !DILocation(line: 1909, column: 11, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14896, file: !2169, line: 1909, column: 6)
!14911 = !DILocation(line: 1909, column: 6, scope: !14896)
!14912 = !DILocation(line: 1910, column: 11, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14910, file: !2169, line: 1909, column: 20)
!14914 = !DILocation(line: 1910, column: 26, scope: !14913)
!14915 = !DILocation(line: 1910, column: 9, scope: !14913)
!14916 = !DILocation(line: 1911, column: 2, scope: !14913)
!14917 = !DILocation(line: 1912, column: 2, scope: !14896)
!14918 = distinct !DISubprogram(name: "z_data_copy", scope: !14919, file: !14919, line: 22, type: !2819, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !162)
!14919 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14920 = !DILocation(line: 24, column: 2, scope: !14918)
!14921 = !DILocation(line: 27, column: 2, scope: !14918)
!14922 = !DILocation(line: 71, column: 1, scope: !14918)
!14923 = distinct !DISubprogram(name: "z_add_timeout", scope: !2206, file: !2206, line: 88, type: !14924, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !14930)
!14924 = !DISubroutineType(types: !14925)
!14925 = !{null, !2179, !2198, !14926}
!14926 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1423, line: 67, baseType: !14927)
!14927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1423, line: 65, size: 64, elements: !14928)
!14928 = !{!14929}
!14929 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14927, file: !1423, line: 66, baseType: !1422, size: 64)
!14930 = !{!14931, !14932, !14933, !14934, !14940, !14941, !14944, !14947}
!14931 = !DILocalVariable(name: "to", arg: 1, scope: !14923, file: !2206, line: 88, type: !2179)
!14932 = !DILocalVariable(name: "fn", arg: 2, scope: !14923, file: !2206, line: 88, type: !2198)
!14933 = !DILocalVariable(name: "timeout", arg: 3, scope: !14923, file: !2206, line: 89, type: !14926)
!14934 = !DILocalVariable(name: "__i", scope: !14935, file: !2206, line: 102, type: !14936)
!14935 = distinct !DILexicalBlock(scope: !14923, file: !2206, line: 102, column: 2)
!14936 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !368, line: 106, baseType: !14937)
!14937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !368, line: 32, size: 32, elements: !14938)
!14938 = !{!14939}
!14939 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14937, file: !368, line: 33, baseType: !103, size: 32)
!14940 = !DILocalVariable(name: "__key", scope: !14935, file: !2206, line: 102, type: !14936)
!14941 = !DILocalVariable(name: "t", scope: !14942, file: !2206, line: 103, type: !2179)
!14942 = distinct !DILexicalBlock(scope: !14943, file: !2206, line: 102, column: 24)
!14943 = distinct !DILexicalBlock(scope: !14935, file: !2206, line: 102, column: 2)
!14944 = !DILocalVariable(name: "ticks", scope: !14945, file: !2206, line: 107, type: !1422)
!14945 = distinct !DILexicalBlock(scope: !14946, file: !2206, line: 106, column: 39)
!14946 = distinct !DILexicalBlock(scope: !14942, file: !2206, line: 105, column: 7)
!14947 = !DILocalVariable(name: "next_time", scope: !14948, file: !2206, line: 137, type: !632)
!14948 = distinct !DILexicalBlock(scope: !14949, file: !2206, line: 127, column: 22)
!14949 = distinct !DILexicalBlock(scope: !14942, file: !2206, line: 127, column: 7)
!14950 = !DILocation(line: 0, scope: !14923)
!14951 = !DILocation(line: 91, column: 6, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14923, file: !2206, line: 91, column: 6)
!14953 = !DILocation(line: 91, column: 6, scope: !14923)
!14954 = !DILocation(line: 100, column: 6, scope: !14923)
!14955 = !DILocation(line: 100, column: 9, scope: !14923)
!14956 = !DILocation(line: 0, scope: !14935)
!14957 = !DILocalVariable(name: "l", arg: 1, scope: !14958, file: !368, line: 136, type: !14961)
!14958 = distinct !DISubprogram(name: "k_spin_lock", scope: !368, file: !368, line: 136, type: !14959, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !14962)
!14959 = !DISubroutineType(types: !14960)
!14960 = !{!14936, !14961}
!14961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!14962 = !{!14957, !14963}
!14963 = !DILocalVariable(name: "k", scope: !14958, file: !368, line: 139, type: !14936)
!14964 = !DILocation(line: 0, scope: !14958, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 102, column: 2, scope: !14935)
!14966 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !14971)
!14967 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6129, file: !6129, line: 42, type: !6130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !14968)
!14968 = !{!14969, !14970}
!14969 = !DILocalVariable(name: "key", scope: !14967, file: !6129, line: 44, type: !32)
!14970 = !DILocalVariable(name: "tmp", scope: !14967, file: !6129, line: 53, type: !32)
!14971 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !14965)
!14972 = !{i64 2244666}
!14973 = !DILocation(line: 0, scope: !14967, inlinedAt: !14971)
!14974 = !DILocation(line: 106, column: 33, scope: !14946)
!14975 = !DILocation(line: 105, column: 7, scope: !14942)
!14976 = !DILocation(line: 107, column: 50, scope: !14945)
!14977 = !DILocation(line: 107, column: 48, scope: !14945)
!14978 = !DILocation(line: 0, scope: !14945)
!14979 = !DILocation(line: 109, column: 17, scope: !14945)
!14980 = !DILocation(line: 110, column: 3, scope: !14945)
!14981 = !DILocation(line: 111, column: 31, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14946, file: !2206, line: 110, column: 10)
!14983 = !DILocation(line: 111, column: 37, scope: !14982)
!14984 = !DILocation(line: 111, column: 35, scope: !14982)
!14985 = !DILocation(line: 0, scope: !14946)
!14986 = !DILocation(line: 109, column: 8, scope: !14945)
!14987 = !DILocation(line: 109, column: 15, scope: !14945)
!14988 = !DILocation(line: 114, column: 12, scope: !14989)
!14989 = distinct !DILexicalBlock(scope: !14942, file: !2206, line: 114, column: 3)
!14990 = !DILocation(line: 0, scope: !14942)
!14991 = !DILocation(line: 114, column: 3, scope: !14989)
!14992 = !DILocation(line: 115, column: 24, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !2206, line: 115, column: 8)
!14994 = distinct !DILexicalBlock(scope: !14995, file: !2206, line: 114, column: 45)
!14995 = distinct !DILexicalBlock(scope: !14989, file: !2206, line: 114, column: 3)
!14996 = !DILocation(line: 115, column: 11, scope: !14993)
!14997 = !DILocation(line: 115, column: 18, scope: !14993)
!14998 = !DILocation(line: 115, column: 8, scope: !14994)
!14999 = !DILocation(line: 116, column: 15, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14993, file: !2206, line: 115, column: 32)
!15001 = !DILocation(line: 117, column: 26, scope: !15000)
!15002 = !DILocation(line: 117, column: 37, scope: !15000)
!15003 = !DILocation(line: 117, column: 5, scope: !15000)
!15004 = !DILocation(line: 123, column: 7, scope: !14942)
!15005 = !DILocation(line: 120, column: 15, scope: !14994)
!15006 = !DILocation(line: 114, column: 36, scope: !14995)
!15007 = distinct !{!15007, !14991, !15008}
!15008 = !DILocation(line: 121, column: 3, scope: !14989)
!15009 = !DILocation(line: 124, column: 41, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15011, file: !2206, line: 123, column: 18)
!15011 = distinct !DILexicalBlock(scope: !14942, file: !2206, line: 123, column: 7)
!15012 = !DILocation(line: 124, column: 4, scope: !15010)
!15013 = !DILocation(line: 125, column: 3, scope: !15010)
!15014 = !DILocation(line: 127, column: 13, scope: !14949)
!15015 = !DILocation(line: 127, column: 10, scope: !14949)
!15016 = !DILocation(line: 127, column: 7, scope: !14942)
!15017 = !DILocation(line: 137, column: 24, scope: !14948)
!15018 = !DILocation(line: 0, scope: !14948)
!15019 = !DILocation(line: 139, column: 18, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !14948, file: !2206, line: 139, column: 8)
!15021 = !DILocation(line: 139, column: 23, scope: !15020)
!15022 = !DILocation(line: 141, column: 5, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15020, file: !2206, line: 140, column: 48)
!15024 = !DILocation(line: 142, column: 4, scope: !15023)
!15025 = !DILocalVariable(name: "key", arg: 2, scope: !15026, file: !368, line: 190, type: !14936)
!15026 = distinct !DISubprogram(name: "k_spin_unlock", scope: !368, file: !368, line: 189, type: !15027, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15029)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{null, !14961, !14936}
!15029 = !{!15030, !15025}
!15030 = !DILocalVariable(name: "l", arg: 1, scope: !15026, file: !368, line: 189, type: !14961)
!15031 = !DILocation(line: 0, scope: !15026, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 102, column: 2, scope: !14943)
!15033 = !DILocalVariable(name: "key", arg: 1, scope: !15034, file: !6129, line: 84, type: !32)
!15034 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6129, file: !6129, line: 84, type: !6140, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15035)
!15035 = !{!15033}
!15036 = !DILocation(line: 0, scope: !15034, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15032)
!15038 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15037)
!15039 = !{i64 2245483}
!15040 = !DILocation(line: 148, column: 1, scope: !14923)
!15041 = distinct !DISubprogram(name: "elapsed", scope: !2206, file: !2206, line: 62, type: !15042, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !162)
!15042 = !DISubroutineType(types: !15043)
!15043 = !{!632}
!15044 = !DILocation(line: 64, column: 9, scope: !15041)
!15045 = !DILocation(line: 64, column: 28, scope: !15041)
!15046 = !DILocation(line: 64, column: 35, scope: !15041)
!15047 = !DILocation(line: 64, column: 2, scope: !15041)
!15048 = distinct !DISubprogram(name: "first", scope: !2206, file: !2206, line: 39, type: !15049, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15051)
!15049 = !DISubroutineType(types: !15050)
!15050 = !{!2179}
!15051 = !{!15052}
!15052 = !DILocalVariable(name: "t", scope: !15048, file: !2206, line: 41, type: !15053)
!15053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!15054 = !DILocation(line: 41, column: 19, scope: !15048)
!15055 = !DILocation(line: 0, scope: !15048)
!15056 = !DILocation(line: 43, column: 9, scope: !15048)
!15057 = !DILocation(line: 43, column: 2, scope: !15048)
!15058 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !273, file: !273, line: 443, type: !15059, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15061)
!15059 = !DISubroutineType(types: !15060)
!15060 = !{null, !15053, !15053}
!15061 = !{!15062, !15063, !15064}
!15062 = !DILocalVariable(name: "successor", arg: 1, scope: !15058, file: !273, line: 443, type: !15053)
!15063 = !DILocalVariable(name: "node", arg: 2, scope: !15058, file: !273, line: 443, type: !15053)
!15064 = !DILocalVariable(name: "prev", scope: !15058, file: !273, line: 445, type: !15065)
!15065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15053)
!15066 = !DILocation(line: 0, scope: !15058)
!15067 = !DILocation(line: 445, column: 39, scope: !15058)
!15068 = !DILocation(line: 447, column: 8, scope: !15058)
!15069 = !DILocation(line: 447, column: 13, scope: !15058)
!15070 = !DILocation(line: 448, column: 8, scope: !15058)
!15071 = !DILocation(line: 448, column: 13, scope: !15058)
!15072 = !DILocation(line: 449, column: 8, scope: !15058)
!15073 = !DILocation(line: 449, column: 13, scope: !15058)
!15074 = !DILocation(line: 450, column: 18, scope: !15058)
!15075 = !DILocation(line: 451, column: 1, scope: !15058)
!15076 = distinct !DISubprogram(name: "next", scope: !2206, file: !2206, line: 46, type: !15077, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15079)
!15077 = !DISubroutineType(types: !15078)
!15078 = !{!2179, !2179}
!15079 = !{!15080, !15081}
!15080 = !DILocalVariable(name: "t", arg: 1, scope: !15076, file: !2206, line: 46, type: !2179)
!15081 = !DILocalVariable(name: "n", scope: !15076, file: !2206, line: 48, type: !15053)
!15082 = !DILocation(line: 0, scope: !15076)
!15083 = !DILocation(line: 48, column: 58, scope: !15076)
!15084 = !DILocation(line: 48, column: 19, scope: !15076)
!15085 = !DILocation(line: 50, column: 9, scope: !15076)
!15086 = !DILocation(line: 50, column: 2, scope: !15076)
!15087 = distinct !DISubprogram(name: "sys_dlist_append", scope: !273, file: !273, line: 404, type: !15088, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15091)
!15088 = !DISubroutineType(types: !15089)
!15089 = !{null, !15090, !15053}
!15090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!15091 = !{!15092, !15093, !15094}
!15092 = !DILocalVariable(name: "list", arg: 1, scope: !15087, file: !273, line: 404, type: !15090)
!15093 = !DILocalVariable(name: "node", arg: 2, scope: !15087, file: !273, line: 404, type: !15053)
!15094 = !DILocalVariable(name: "tail", scope: !15087, file: !273, line: 406, type: !15065)
!15095 = !DILocation(line: 0, scope: !15087)
!15096 = !DILocation(line: 406, column: 34, scope: !15087)
!15097 = !DILocation(line: 408, column: 8, scope: !15087)
!15098 = !DILocation(line: 408, column: 13, scope: !15087)
!15099 = !DILocation(line: 409, column: 8, scope: !15087)
!15100 = !DILocation(line: 409, column: 13, scope: !15087)
!15101 = !DILocation(line: 411, column: 8, scope: !15087)
!15102 = !DILocation(line: 411, column: 13, scope: !15087)
!15103 = !DILocation(line: 412, column: 13, scope: !15087)
!15104 = !DILocation(line: 413, column: 1, scope: !15087)
!15105 = distinct !DISubprogram(name: "next_timeout", scope: !2206, file: !2206, line: 67, type: !15042, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15106)
!15106 = !{!15107, !15108, !15109}
!15107 = !DILocalVariable(name: "to", scope: !15105, file: !2206, line: 69, type: !2179)
!15108 = !DILocalVariable(name: "ticks_elapsed", scope: !15105, file: !2206, line: 70, type: !632)
!15109 = !DILocalVariable(name: "ret", scope: !15105, file: !2206, line: 71, type: !632)
!15110 = !DILocation(line: 69, column: 24, scope: !15105)
!15111 = !DILocation(line: 0, scope: !15105)
!15112 = !DILocation(line: 70, column: 26, scope: !15105)
!15113 = !DILocation(line: 73, column: 10, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15105, file: !2206, line: 73, column: 6)
!15115 = !DILocation(line: 73, column: 19, scope: !15114)
!15116 = !DILocation(line: 74, column: 21, scope: !15114)
!15117 = !DILocation(line: 74, column: 30, scope: !15114)
!15118 = !DILocation(line: 74, column: 28, scope: !15114)
!15119 = !DILocation(line: 74, column: 45, scope: !15114)
!15120 = !DILocation(line: 73, column: 6, scope: !15105)
!15121 = !DILocation(line: 77, column: 9, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15114, file: !2206, line: 76, column: 9)
!15123 = !DILocation(line: 0, scope: !15114)
!15124 = !DILocation(line: 81, column: 20, scope: !15125)
!15125 = distinct !DILexicalBlock(scope: !15105, file: !2206, line: 81, column: 6)
!15126 = !DILocation(line: 81, column: 6, scope: !15125)
!15127 = !DILocation(line: 81, column: 32, scope: !15125)
!15128 = !DILocation(line: 85, column: 2, scope: !15105)
!15129 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !273, file: !273, line: 341, type: !15130, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15132)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!15053, !15090, !15053}
!15132 = !{!15133, !15134}
!15133 = !DILocalVariable(name: "list", arg: 1, scope: !15129, file: !273, line: 341, type: !15090)
!15134 = !DILocalVariable(name: "node", arg: 2, scope: !15129, file: !273, line: 342, type: !15053)
!15135 = !DILocation(line: 0, scope: !15129)
!15136 = !DILocation(line: 344, column: 15, scope: !15129)
!15137 = !DILocation(line: 344, column: 9, scope: !15129)
!15138 = !DILocation(line: 344, column: 26, scope: !15129)
!15139 = !DILocation(line: 344, column: 2, scope: !15129)
!15140 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !273, file: !273, line: 325, type: !15130, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15141)
!15141 = !{!15142, !15143}
!15142 = !DILocalVariable(name: "list", arg: 1, scope: !15140, file: !273, line: 325, type: !15090)
!15143 = !DILocalVariable(name: "node", arg: 2, scope: !15140, file: !273, line: 326, type: !15053)
!15144 = !DILocation(line: 0, scope: !15140)
!15145 = !DILocation(line: 328, column: 24, scope: !15140)
!15146 = !DILocation(line: 328, column: 15, scope: !15140)
!15147 = !DILocation(line: 328, column: 9, scope: !15140)
!15148 = !DILocation(line: 328, column: 45, scope: !15140)
!15149 = !DILocation(line: 328, column: 2, scope: !15140)
!15150 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !273, file: !273, line: 294, type: !15151, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15153)
!15151 = !DISubroutineType(types: !15152)
!15152 = !{!15053, !15090}
!15153 = !{!15154}
!15154 = !DILocalVariable(name: "list", arg: 1, scope: !15150, file: !273, line: 294, type: !15090)
!15155 = !DILocation(line: 0, scope: !15150)
!15156 = !DILocation(line: 296, column: 9, scope: !15150)
!15157 = !DILocation(line: 296, column: 2, scope: !15150)
!15158 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !273, file: !273, line: 266, type: !15159, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15161)
!15159 = !DISubroutineType(types: !15160)
!15160 = !{!211, !15090}
!15161 = !{!15162}
!15162 = !DILocalVariable(name: "list", arg: 1, scope: !15158, file: !273, line: 266, type: !15090)
!15163 = !DILocation(line: 0, scope: !15158)
!15164 = !DILocation(line: 268, column: 15, scope: !15158)
!15165 = !DILocation(line: 268, column: 20, scope: !15158)
!15166 = !DILocation(line: 268, column: 2, scope: !15158)
!15167 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2206, file: !2206, line: 150, type: !15168, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15170)
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!103, !2179}
!15170 = !{!15171, !15172, !15173, !15175}
!15171 = !DILocalVariable(name: "to", arg: 1, scope: !15167, file: !2206, line: 150, type: !2179)
!15172 = !DILocalVariable(name: "ret", scope: !15167, file: !2206, line: 152, type: !103)
!15173 = !DILocalVariable(name: "__i", scope: !15174, file: !2206, line: 154, type: !14936)
!15174 = distinct !DILexicalBlock(scope: !15167, file: !2206, line: 154, column: 2)
!15175 = !DILocalVariable(name: "__key", scope: !15174, file: !2206, line: 154, type: !14936)
!15176 = !DILocation(line: 0, scope: !15167)
!15177 = !DILocation(line: 0, scope: !15174)
!15178 = !DILocation(line: 0, scope: !14958, inlinedAt: !15179)
!15179 = distinct !DILocation(line: 154, column: 2, scope: !15174)
!15180 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15179)
!15182 = !DILocation(line: 0, scope: !14967, inlinedAt: !15181)
!15183 = !DILocation(line: 155, column: 7, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !2206, line: 155, column: 7)
!15185 = distinct !DILexicalBlock(scope: !15186, file: !2206, line: 154, column: 24)
!15186 = distinct !DILexicalBlock(scope: !15174, file: !2206, line: 154, column: 2)
!15187 = !DILocation(line: 155, column: 7, scope: !15185)
!15188 = !DILocation(line: 156, column: 4, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15184, file: !2206, line: 155, column: 39)
!15190 = !DILocation(line: 158, column: 3, scope: !15189)
!15191 = !DILocation(line: 0, scope: !15026, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 154, column: 2, scope: !15186)
!15193 = !DILocation(line: 0, scope: !15034, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15192)
!15195 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15194)
!15196 = !DILocation(line: 161, column: 2, scope: !15167)
!15197 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !273, file: !273, line: 225, type: !15198, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15202)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{!211, !15200}
!15200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15201, size: 32)
!15201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!15202 = !{!15203}
!15203 = !DILocalVariable(name: "node", arg: 1, scope: !15197, file: !273, line: 225, type: !15200)
!15204 = !DILocation(line: 0, scope: !15197)
!15205 = !DILocation(line: 227, column: 15, scope: !15197)
!15206 = !DILocation(line: 227, column: 20, scope: !15197)
!15207 = !DILocation(line: 227, column: 2, scope: !15197)
!15208 = distinct !DISubprogram(name: "remove_timeout", scope: !2206, file: !2206, line: 53, type: !2200, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15209)
!15209 = !{!15210}
!15210 = !DILocalVariable(name: "t", arg: 1, scope: !15208, file: !2206, line: 53, type: !2179)
!15211 = !DILocation(line: 0, scope: !15208)
!15212 = !DILocation(line: 55, column: 6, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15208, file: !2206, line: 55, column: 6)
!15214 = !DILocation(line: 55, column: 14, scope: !15213)
!15215 = !DILocation(line: 55, column: 6, scope: !15208)
!15216 = !DILocation(line: 56, column: 25, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15213, file: !2206, line: 55, column: 23)
!15218 = !DILocation(line: 56, column: 12, scope: !15217)
!15219 = !DILocation(line: 56, column: 19, scope: !15217)
!15220 = !DILocation(line: 57, column: 2, scope: !15217)
!15221 = !DILocation(line: 59, column: 23, scope: !15208)
!15222 = !DILocation(line: 59, column: 2, scope: !15208)
!15223 = !DILocation(line: 60, column: 1, scope: !15208)
!15224 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !273, file: !273, line: 496, type: !15225, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15227)
!15225 = !DISubroutineType(types: !15226)
!15226 = !{null, !15053}
!15227 = !{!15228, !15229, !15230}
!15228 = !DILocalVariable(name: "node", arg: 1, scope: !15224, file: !273, line: 496, type: !15053)
!15229 = !DILocalVariable(name: "prev", scope: !15224, file: !273, line: 498, type: !15065)
!15230 = !DILocalVariable(name: "next", scope: !15224, file: !273, line: 499, type: !15065)
!15231 = !DILocation(line: 0, scope: !15224)
!15232 = !DILocation(line: 498, column: 34, scope: !15224)
!15233 = !DILocation(line: 499, column: 34, scope: !15224)
!15234 = !DILocation(line: 501, column: 8, scope: !15224)
!15235 = !DILocation(line: 501, column: 13, scope: !15224)
!15236 = !DILocation(line: 502, column: 8, scope: !15224)
!15237 = !DILocation(line: 502, column: 13, scope: !15224)
!15238 = !DILocation(line: 503, column: 2, scope: !15224)
!15239 = !DILocation(line: 504, column: 1, scope: !15224)
!15240 = distinct !DISubprogram(name: "sys_dnode_init", scope: !273, file: !273, line: 211, type: !15225, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15241)
!15241 = !{!15242}
!15242 = !DILocalVariable(name: "node", arg: 1, scope: !15240, file: !273, line: 211, type: !15053)
!15243 = !DILocation(line: 0, scope: !15240)
!15244 = !DILocation(line: 213, column: 8, scope: !15240)
!15245 = !DILocation(line: 213, column: 13, scope: !15240)
!15246 = !DILocation(line: 214, column: 8, scope: !15240)
!15247 = !DILocation(line: 214, column: 13, scope: !15240)
!15248 = !DILocation(line: 215, column: 1, scope: !15240)
!15249 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2206, file: !2206, line: 183, type: !15250, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15254)
!15250 = !DISubroutineType(types: !15251)
!15251 = !{!1422, !15252}
!15252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15253, size: 32)
!15253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2180)
!15254 = !{!15255, !15256, !15257, !15259}
!15255 = !DILocalVariable(name: "timeout", arg: 1, scope: !15249, file: !2206, line: 183, type: !15252)
!15256 = !DILocalVariable(name: "ticks", scope: !15249, file: !2206, line: 185, type: !1422)
!15257 = !DILocalVariable(name: "__i", scope: !15258, file: !2206, line: 187, type: !14936)
!15258 = distinct !DILexicalBlock(scope: !15249, file: !2206, line: 187, column: 2)
!15259 = !DILocalVariable(name: "__key", scope: !15258, file: !2206, line: 187, type: !14936)
!15260 = !DILocation(line: 0, scope: !15249)
!15261 = !DILocation(line: 0, scope: !15258)
!15262 = !DILocation(line: 0, scope: !14958, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 187, column: 2, scope: !15258)
!15264 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15265)
!15265 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15263)
!15266 = !DILocation(line: 0, scope: !14967, inlinedAt: !15265)
!15267 = !DILocation(line: 188, column: 11, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15269, file: !2206, line: 187, column: 24)
!15269 = distinct !DILexicalBlock(scope: !15258, file: !2206, line: 187, column: 2)
!15270 = !DILocation(line: 0, scope: !15026, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 187, column: 2, scope: !15269)
!15272 = !DILocation(line: 0, scope: !15034, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15271)
!15274 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15273)
!15275 = !DILocation(line: 191, column: 2, scope: !15249)
!15276 = distinct !DISubprogram(name: "timeout_rem", scope: !2206, file: !2206, line: 165, type: !15250, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15277)
!15277 = !{!15278, !15279, !15280}
!15278 = !DILocalVariable(name: "timeout", arg: 1, scope: !15276, file: !2206, line: 165, type: !15252)
!15279 = !DILocalVariable(name: "ticks", scope: !15276, file: !2206, line: 167, type: !1422)
!15280 = !DILocalVariable(name: "t", scope: !15281, file: !2206, line: 173, type: !2179)
!15281 = distinct !DILexicalBlock(scope: !15276, file: !2206, line: 173, column: 2)
!15282 = !DILocation(line: 0, scope: !15276)
!15283 = !DILocation(line: 169, column: 6, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15276, file: !2206, line: 169, column: 6)
!15285 = !DILocation(line: 169, column: 6, scope: !15276)
!15286 = !DILocation(line: 173, column: 28, scope: !15281)
!15287 = !DILocation(line: 0, scope: !15281)
!15288 = !DILocation(line: 173, column: 39, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15281, file: !2206, line: 173, column: 2)
!15290 = !DILocation(line: 173, column: 2, scope: !15281)
!15291 = !DILocation(line: 174, column: 15, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15289, file: !2206, line: 173, column: 61)
!15293 = !DILocation(line: 174, column: 9, scope: !15292)
!15294 = !DILocation(line: 175, column: 15, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15292, file: !2206, line: 175, column: 7)
!15296 = !DILocation(line: 175, column: 7, scope: !15292)
!15297 = !DILocation(line: 173, column: 52, scope: !15289)
!15298 = distinct !{!15298, !15290, !15299}
!15299 = !DILocation(line: 178, column: 2, scope: !15281)
!15300 = !DILocation(line: 180, column: 17, scope: !15276)
!15301 = !DILocation(line: 180, column: 15, scope: !15276)
!15302 = !DILocation(line: 180, column: 2, scope: !15276)
!15303 = !DILocation(line: 181, column: 1, scope: !15276)
!15304 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12614, file: !12614, line: 35, type: !15305, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15307)
!15305 = !DISubroutineType(types: !15306)
!15306 = !{!211, !15252}
!15307 = !{!15308}
!15308 = !DILocalVariable(name: "to", arg: 1, scope: !15304, file: !12614, line: 35, type: !15252)
!15309 = !DILocation(line: 0, scope: !15304)
!15310 = !DILocation(line: 37, column: 35, scope: !15304)
!15311 = !DILocation(line: 37, column: 10, scope: !15304)
!15312 = !DILocation(line: 37, column: 9, scope: !15304)
!15313 = !DILocation(line: 37, column: 2, scope: !15304)
!15314 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2206, file: !2206, line: 194, type: !15250, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15315)
!15315 = !{!15316, !15317, !15318, !15320}
!15316 = !DILocalVariable(name: "timeout", arg: 1, scope: !15314, file: !2206, line: 194, type: !15252)
!15317 = !DILocalVariable(name: "ticks", scope: !15314, file: !2206, line: 196, type: !1422)
!15318 = !DILocalVariable(name: "__i", scope: !15319, file: !2206, line: 198, type: !14936)
!15319 = distinct !DILexicalBlock(scope: !15314, file: !2206, line: 198, column: 2)
!15320 = !DILocalVariable(name: "__key", scope: !15319, file: !2206, line: 198, type: !14936)
!15321 = !DILocation(line: 0, scope: !15314)
!15322 = !DILocation(line: 0, scope: !15319)
!15323 = !DILocation(line: 0, scope: !14958, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 198, column: 2, scope: !15319)
!15325 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15324)
!15327 = !DILocation(line: 0, scope: !14967, inlinedAt: !15326)
!15328 = !DILocation(line: 199, column: 11, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15330, file: !2206, line: 198, column: 24)
!15330 = distinct !DILexicalBlock(scope: !15319, file: !2206, line: 198, column: 2)
!15331 = !DILocation(line: 199, column: 23, scope: !15329)
!15332 = !DILocation(line: 0, scope: !15026, inlinedAt: !15333)
!15333 = distinct !DILocation(line: 198, column: 2, scope: !15330)
!15334 = !DILocation(line: 0, scope: !15034, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15333)
!15336 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15335)
!15337 = !DILocation(line: 199, column: 21, scope: !15329)
!15338 = !DILocation(line: 202, column: 2, scope: !15314)
!15339 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2206, file: !2206, line: 205, type: !15042, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15340)
!15340 = !{!15341, !15342, !15344}
!15341 = !DILocalVariable(name: "ret", scope: !15339, file: !2206, line: 207, type: !632)
!15342 = !DILocalVariable(name: "__i", scope: !15343, file: !2206, line: 209, type: !14936)
!15343 = distinct !DILexicalBlock(scope: !15339, file: !2206, line: 209, column: 2)
!15344 = !DILocalVariable(name: "__key", scope: !15343, file: !2206, line: 209, type: !14936)
!15345 = !DILocation(line: 0, scope: !15339)
!15346 = !DILocation(line: 0, scope: !15343)
!15347 = !DILocation(line: 0, scope: !14958, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 209, column: 2, scope: !15343)
!15349 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15348)
!15351 = !DILocation(line: 0, scope: !14967, inlinedAt: !15350)
!15352 = !DILocation(line: 210, column: 9, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15354, file: !2206, line: 209, column: 24)
!15354 = distinct !DILexicalBlock(scope: !15343, file: !2206, line: 209, column: 2)
!15355 = !DILocation(line: 0, scope: !15026, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 209, column: 2, scope: !15354)
!15357 = !DILocation(line: 0, scope: !15034, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15356)
!15359 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15358)
!15360 = !DILocation(line: 212, column: 2, scope: !15339)
!15361 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2206, file: !2206, line: 215, type: !10252, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15362)
!15362 = !{!15363, !15364, !15365, !15367, !15368, !15371, !15372}
!15363 = !DILocalVariable(name: "ticks", arg: 1, scope: !15361, file: !2206, line: 215, type: !632)
!15364 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15361, file: !2206, line: 215, type: !211)
!15365 = !DILocalVariable(name: "__i", scope: !15366, file: !2206, line: 217, type: !14936)
!15366 = distinct !DILexicalBlock(scope: !15361, file: !2206, line: 217, column: 2)
!15367 = !DILocalVariable(name: "__key", scope: !15366, file: !2206, line: 217, type: !14936)
!15368 = !DILocalVariable(name: "next_to", scope: !15369, file: !2206, line: 218, type: !103)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !2206, line: 217, column: 24)
!15370 = distinct !DILexicalBlock(scope: !15366, file: !2206, line: 217, column: 2)
!15371 = !DILocalVariable(name: "sooner", scope: !15369, file: !2206, line: 219, type: !211)
!15372 = !DILocalVariable(name: "imminent", scope: !15369, file: !2206, line: 221, type: !211)
!15373 = !DILocation(line: 0, scope: !15361)
!15374 = !DILocation(line: 0, scope: !15366)
!15375 = !DILocation(line: 0, scope: !14958, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 217, column: 2, scope: !15366)
!15377 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15376)
!15379 = !DILocation(line: 0, scope: !14967, inlinedAt: !15378)
!15380 = !DILocation(line: 218, column: 17, scope: !15369)
!15381 = !DILocation(line: 0, scope: !15369)
!15382 = !DILocation(line: 221, column: 27, scope: !15369)
!15383 = !DILocation(line: 233, column: 17, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15369, file: !2206, line: 233, column: 7)
!15385 = !DILocation(line: 234, column: 26, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15384, file: !2206, line: 233, column: 56)
!15387 = !DILocation(line: 234, column: 4, scope: !15386)
!15388 = !DILocation(line: 235, column: 3, scope: !15386)
!15389 = !DILocation(line: 0, scope: !15026, inlinedAt: !15390)
!15390 = distinct !DILocation(line: 217, column: 2, scope: !15370)
!15391 = !DILocation(line: 0, scope: !15034, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15390)
!15393 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15392)
!15394 = !DILocation(line: 237, column: 1, scope: !15361)
!15395 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2206, file: !2206, line: 239, type: !15396, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15398)
!15396 = !DISubroutineType(types: !15397)
!15397 = !{null, !632}
!15398 = !{!15399, !15400, !15401, !15403}
!15399 = !DILocalVariable(name: "ticks", arg: 1, scope: !15395, file: !2206, line: 239, type: !632)
!15400 = !DILocalVariable(name: "key", scope: !15395, file: !2206, line: 245, type: !14936)
!15401 = !DILocalVariable(name: "t", scope: !15402, file: !2206, line: 262, type: !2179)
!15402 = distinct !DILexicalBlock(scope: !15395, file: !2206, line: 261, column: 67)
!15403 = !DILocalVariable(name: "dt", scope: !15402, file: !2206, line: 263, type: !103)
!15404 = !DILocation(line: 0, scope: !15395)
!15405 = !DILocation(line: 242, column: 2, scope: !15395)
!15406 = !DILocation(line: 0, scope: !14958, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 245, column: 25, scope: !15395)
!15408 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15407)
!15410 = !DILocation(line: 0, scope: !14967, inlinedAt: !15409)
!15411 = !DILocation(line: 261, column: 9, scope: !15395)
!15412 = !DILocation(line: 261, column: 17, scope: !15395)
!15413 = !DILocation(line: 261, column: 25, scope: !15395)
!15414 = !DILocation(line: 261, column: 37, scope: !15395)
!15415 = !DILocation(line: 261, column: 47, scope: !15395)
!15416 = !DILocation(line: 261, column: 44, scope: !15395)
!15417 = !DILocation(line: 261, column: 2, scope: !15395)
!15418 = !DILocation(line: 0, scope: !15402)
!15419 = !DILocation(line: 263, column: 12, scope: !15402)
!15420 = !DILocation(line: 265, column: 16, scope: !15402)
!15421 = !DILocation(line: 265, column: 13, scope: !15402)
!15422 = !DILocation(line: 266, column: 13, scope: !15402)
!15423 = !DILocation(line: 267, column: 3, scope: !15402)
!15424 = !DILocation(line: 0, scope: !15026, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 269, column: 3, scope: !15402)
!15426 = !DILocation(line: 0, scope: !15034, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15425)
!15428 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15427)
!15429 = !DILocation(line: 270, column: 6, scope: !15402)
!15430 = !DILocation(line: 270, column: 3, scope: !15402)
!15431 = !DILocation(line: 0, scope: !14958, inlinedAt: !15432)
!15432 = distinct !DILocation(line: 271, column: 9, scope: !15402)
!15433 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15432)
!15435 = !DILocation(line: 0, scope: !14967, inlinedAt: !15434)
!15436 = !DILocation(line: 272, column: 22, scope: !15402)
!15437 = distinct !{!15437, !15417, !15438}
!15438 = !DILocation(line: 273, column: 2, scope: !15395)
!15439 = !DILocation(line: 276, column: 19, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15441, file: !2206, line: 275, column: 23)
!15441 = distinct !DILexicalBlock(scope: !15395, file: !2206, line: 275, column: 6)
!15442 = !DILocation(line: 277, column: 2, scope: !15440)
!15443 = !DILocation(line: 279, column: 15, scope: !15395)
!15444 = !DILocation(line: 279, column: 12, scope: !15395)
!15445 = !DILocation(line: 280, column: 21, scope: !15395)
!15446 = !DILocation(line: 282, column: 24, scope: !15395)
!15447 = !DILocation(line: 282, column: 2, scope: !15395)
!15448 = !DILocation(line: 0, scope: !15026, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 284, column: 2, scope: !15395)
!15450 = !DILocation(line: 0, scope: !15034, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15449)
!15452 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15451)
!15453 = !DILocation(line: 285, column: 1, scope: !15395)
!15454 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2206, file: !2206, line: 287, type: !15455, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15457)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{!330}
!15457 = !{!15458, !15459, !15461}
!15458 = !DILocalVariable(name: "t", scope: !15454, file: !2206, line: 289, type: !163)
!15459 = !DILocalVariable(name: "__i", scope: !15460, file: !2206, line: 291, type: !14936)
!15460 = distinct !DILexicalBlock(scope: !15454, file: !2206, line: 291, column: 2)
!15461 = !DILocalVariable(name: "__key", scope: !15460, file: !2206, line: 291, type: !14936)
!15462 = !DILocation(line: 0, scope: !15454)
!15463 = !DILocation(line: 0, scope: !15460)
!15464 = !DILocation(line: 0, scope: !14958, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 291, column: 2, scope: !15460)
!15466 = !DILocation(line: 55, column: 2, scope: !14967, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 145, column: 10, scope: !14958, inlinedAt: !15465)
!15468 = !DILocation(line: 0, scope: !14967, inlinedAt: !15467)
!15469 = !DILocation(line: 292, column: 7, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !2206, line: 291, column: 24)
!15471 = distinct !DILexicalBlock(scope: !15460, file: !2206, line: 291, column: 2)
!15472 = !DILocation(line: 292, column: 19, scope: !15470)
!15473 = !DILocation(line: 0, scope: !15026, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 291, column: 2, scope: !15471)
!15475 = !DILocation(line: 0, scope: !15034, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 215, column: 2, scope: !15026, inlinedAt: !15474)
!15477 = !DILocation(line: 95, column: 2, scope: !15034, inlinedAt: !15476)
!15478 = !DILocation(line: 292, column: 17, scope: !15470)
!15479 = !DILocation(line: 294, column: 2, scope: !15454)
!15480 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2206, file: !2206, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !162)
!15481 = !DILocation(line: 300, column: 19, scope: !15480)
!15482 = !DILocation(line: 300, column: 9, scope: !15480)
!15483 = !DILocation(line: 300, column: 2, scope: !15480)
!15484 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2206, file: !2206, line: 306, type: !15455, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !162)
!15485 = !DILocation(line: 308, column: 9, scope: !15484)
!15486 = !DILocation(line: 308, column: 2, scope: !15484)
!15487 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2206, file: !2206, line: 319, type: !6392, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15488)
!15488 = !{!15489, !15490, !15491, !15492}
!15489 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15487, file: !2206, line: 319, type: !137)
!15490 = !DILocalVariable(name: "start_cycles", scope: !15487, file: !2206, line: 328, type: !137)
!15491 = !DILocalVariable(name: "cycles_to_wait", scope: !15487, file: !2206, line: 331, type: !137)
!15492 = !DILocalVariable(name: "current_cycles", scope: !15493, file: !2206, line: 338, type: !137)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !2206, line: 337, column: 11)
!15494 = distinct !DILexicalBlock(scope: !15495, file: !2206, line: 337, column: 2)
!15495 = distinct !DILexicalBlock(scope: !15487, file: !2206, line: 337, column: 2)
!15496 = !DILocation(line: 0, scope: !15487)
!15497 = !DILocation(line: 322, column: 19, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15487, file: !2206, line: 322, column: 6)
!15499 = !DILocation(line: 322, column: 6, scope: !15487)
!15500 = !DILocation(line: 328, column: 26, scope: !15487)
!15501 = !DILocation(line: 333, column: 43, scope: !15487)
!15502 = !DILocation(line: 337, column: 2, scope: !15487)
!15503 = !DILocation(line: 338, column: 29, scope: !15493)
!15504 = !DILocation(line: 0, scope: !15493)
!15505 = !DILocation(line: 341, column: 23, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15493, file: !2206, line: 341, column: 7)
!15507 = !DILocation(line: 341, column: 39, scope: !15506)
!15508 = !DILocation(line: 349, column: 1, scope: !15487)
!15509 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !357, file: !357, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !162)
!15510 = !DILocation(line: 1677, column: 9, scope: !15509)
!15511 = !DILocation(line: 1677, column: 2, scope: !15509)
!15512 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !15513, file: !15513, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !162)
!15513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15514 = !DILocation(line: 26, column: 9, scope: !15512)
!15515 = !DILocation(line: 26, column: 2, scope: !15512)
!15516 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2206, file: !2206, line: 364, type: !15517, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2176, retainedNodes: !15519)
!15517 = !DISubroutineType(types: !15518)
!15518 = !{!163, !14926}
!15519 = !{!15520, !15521}
!15520 = !DILocalVariable(name: "timeout", arg: 1, scope: !15516, file: !2206, line: 364, type: !14926)
!15521 = !DILocalVariable(name: "dt", scope: !15516, file: !2206, line: 366, type: !1422)
!15522 = !DILocation(line: 0, scope: !15516)
!15523 = !DILocation(line: 368, column: 6, scope: !15516)
!15524 = !DILocation(line: 371, column: 10, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15526, file: !2206, line: 370, column: 47)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2206, line: 370, column: 13)
!15527 = distinct !DILexicalBlock(scope: !15516, file: !2206, line: 368, column: 6)
!15528 = !DILocation(line: 371, column: 3, scope: !15525)
!15529 = !DILocation(line: 376, column: 58, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !2206, line: 376, column: 7)
!15531 = distinct !DILexicalBlock(scope: !15526, file: !2206, line: 372, column: 9)
!15532 = !DILocation(line: 376, column: 7, scope: !15531)
!15533 = !DILocation(line: 376, column: 43, scope: !15530)
!15534 = !DILocation(line: 377, column: 4, scope: !15535)
!15535 = distinct !DILexicalBlock(scope: !15530, file: !2206, line: 376, column: 64)
!15536 = !DILocation(line: 379, column: 10, scope: !15531)
!15537 = !DILocation(line: 379, column: 33, scope: !15531)
!15538 = !DILocation(line: 379, column: 31, scope: !15531)
!15539 = !DILocation(line: 379, column: 3, scope: !15531)
!15540 = !DILocation(line: 0, scope: !15527)
!15541 = !DILocation(line: 381, column: 1, scope: !15516)
!15542 = distinct !DISubprogram(name: "boot_banner", scope: !15543, file: !15543, line: 26, type: !2819, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2805, retainedNodes: !162)
!15543 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15544 = !DILocation(line: 34, column: 2, scope: !15542)
!15545 = !DILocation(line: 36, column: 1, scope: !15542)
