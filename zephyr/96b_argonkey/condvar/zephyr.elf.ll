; ModuleID = 'build/96b_argonkey/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236517 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236497 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236487 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236587 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236577 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236567 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236557 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236547 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236537 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236527 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237860 to i8*), void (i8*)* inttoptr (i32 134236507 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.102 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.103 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.104 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.4.100 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !753
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !736
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.100, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !709
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !725
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !769
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !771
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !773
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !775
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !777
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !779
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !781
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !783
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !785
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !787
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.105 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !822
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !917
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !906
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !958
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !817
@.str.114 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1024
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1305
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1275
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1261
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1203
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !815
@.str.1.122 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1307
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1279
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1277
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1217
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !813
@.str.2.123 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1320
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1283
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1281
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1226
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !811
@.str.3.124 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1322
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1287
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !809
@.str.4.125 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1324
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1291
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1289
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !807
@.str.5.126 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1326
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1295
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1293
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1247
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !805
@.str.6.127 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1328
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1299
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1297
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1253
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !803
@.str.7.128 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1330
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1303
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1301
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1259
@.str.8.115 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.121 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.117 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.120 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.116 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.118 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.119 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.132 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.132, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1332
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !819
@.str.1.135 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1488
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1543
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1486
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1545
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1477
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1479
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1532
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1535
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1537
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1540
@.str.2.137 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.138 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.139 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.140 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.141 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.144 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.146 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.147 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.105, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !890
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1556
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1665
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1667
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1663
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1658
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1632
@.str.151 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.153 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.154 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.156 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1669
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1201
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1215
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1224
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.124, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.125, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.126, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1245
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.127, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1251
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.128, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1257
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1759
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1800
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1803
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1810
@.str.188 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.192 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.193 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.194 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.198 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.199 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.200 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.201 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.202 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.197 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.196 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.198, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.199, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.200, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.201, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.202, i32 0, i32 0)], align 4
@.str.204 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.204, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1817
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2042
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2030
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2037
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2049
@.str.5.210 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2054
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.214 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.221, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.222, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.223, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.224, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.225, i32 0, i32 0)], align 4, !dbg !2082
@.str.219 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.220 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.221 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.222 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.223 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.224 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.218 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.225 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2197
@.str.8.217 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.228 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.229 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.230 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.231 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.235 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.236 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.239 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.240 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.249 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.250 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.251 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.256 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.257 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.258 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.259 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.260 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2210
@.str.4.268 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.261 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.262 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.263 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.264 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.265 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2321
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2432
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2435
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2437
@.str.269 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.291 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.276 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.298 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.310 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.279 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.305 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.275 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.315 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.316 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.324 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.325 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.326 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.329 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.270 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.271 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.272 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.273 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.274 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.278 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.295 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.306 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.307 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2039
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2047
@.str.23.319 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.334 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2439
@.str.335 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.336 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.337 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.338 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.339 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.340 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.351 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.352 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.353 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2464
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2494
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2499
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1904
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2497
@.str.4.354 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.355 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.356 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.360 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.361 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.379 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3085 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3143, !srcloc !3146
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3193, !srcloc !3194
  ret void, !dbg !3195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3198 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3202, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i8* undef, metadata !3203, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i8* undef, metadata !3204, metadata !DIExpression()), !dbg !3207
  %4 = ptrtoint i8* %0 to i32, !dbg !3208
  call void @llvm.dbg.value(metadata i32 %4, metadata !3206, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.value(metadata i32 0, metadata !3205, metadata !DIExpression()), !dbg !3207
  br label %5, !dbg !3209

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3205, metadata !DIExpression()), !dbg !3207
  tail call fastcc void @k_mutex_lock() #24, !dbg !3211
  %7 = load i32, i32* @count, align 4, !dbg !3214
  %8 = add nsw i32 %7, 1, !dbg !3214
  store i32 %8, i32* @count, align 4, !dbg !3214
  %9 = icmp eq i32 %8, 12, !dbg !3215
  br i1 %9, label %10, label %12, !dbg !3217

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3218
  tail call fastcc void @k_condvar_signal() #24, !dbg !3220
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3221
  %11 = load i32, i32* @count, align 4, !dbg !3222
  br label %12, !dbg !3223

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3222
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3224
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3225
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3226
  %14 = add nuw nsw i32 %6, 1, !dbg !3227
  call void @llvm.dbg.value(metadata i32 %14, metadata !3205, metadata !DIExpression()), !dbg !3207
  %15 = icmp eq i32 %14, 10, !dbg !3228
  br i1 %15, label %16, label %5, !dbg !3209, !llvm.loop !3229

16:                                               ; preds = %12
  ret void, !dbg !3231
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3232 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3243, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3242, metadata !DIExpression()), !dbg !3244
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3245, !srcloc !3247
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3248
  ret void, !dbg !3249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3250 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3255, metadata !DIExpression()), !dbg !3256
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3257, !srcloc !3259
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3260
  ret void, !dbg !3261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3262 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3266, metadata !DIExpression()), !dbg !3267
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3268, !srcloc !3270
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3271
  ret void, !dbg !3272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3273 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3277, metadata !DIExpression()), !dbg !3278
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3279, !srcloc !3281
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3282
  ret void, !dbg !3283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3286, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata i8* undef, metadata !3287, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata i8* undef, metadata !3288, metadata !DIExpression()), !dbg !3290
  %4 = ptrtoint i8* %0 to i32, !dbg !3291
  call void @llvm.dbg.value(metadata i32 %4, metadata !3289, metadata !DIExpression()), !dbg !3290
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3292
  tail call fastcc void @k_mutex_lock() #24, !dbg !3293
  %5 = load i32, i32* @count, align 4, !dbg !3294
  %6 = icmp slt i32 %5, 12, !dbg !3295
  br i1 %6, label %7, label %12, !dbg !3296

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3297
  tail call fastcc void @k_condvar_wait() #24, !dbg !3299
  %9 = load i32, i32* @count, align 4, !dbg !3300
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3301
  %10 = load i32, i32* @count, align 4, !dbg !3294
  %11 = icmp slt i32 %10, 12, !dbg !3295
  br i1 %11, label %7, label %12, !dbg !3296, !llvm.loop !3302

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3304
  %13 = load i32, i32* @count, align 4, !dbg !3305
  %14 = add nsw i32 %13, 125, !dbg !3305
  store i32 %14, i32* @count, align 4, !dbg !3305
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3306
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3307
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3308
  ret void, !dbg !3309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3310 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3316, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3314, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3315, metadata !DIExpression()), !dbg !3317
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3318, !srcloc !3320
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3321
  ret void, !dbg !3322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3323 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3325, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 2, metadata !3326, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 3, metadata !3327, metadata !DIExpression()), !dbg !3329
  store i32 0, i32* @count, align 4, !dbg !3330
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3331
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3332
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3333
  call void @llvm.dbg.value(metadata i32 0, metadata !3328, metadata !DIExpression()), !dbg !3329
  br label %1, !dbg !3334

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3328, metadata !DIExpression()), !dbg !3329
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3336
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3339
  %4 = add nuw nsw i32 %2, 1, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %4, metadata !3328, metadata !DIExpression()), !dbg !3329
  %5 = icmp eq i32 %4, 3, !dbg !3341
  br i1 %5, label %6, label %1, !dbg !3334, !llvm.loop !3342

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3344
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3345
  ret void, !dbg !3346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3347 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3366, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3357, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3358, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 1024, metadata !3359, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3360, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* %3, metadata !3361, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* null, metadata !3362, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i8* null, metadata !3363, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 10, metadata !3364, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3365, metadata !DIExpression()), !dbg !3367
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3368, !srcloc !3370
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3371
  ret void, !dbg !3372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3373 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3378, metadata !DIExpression()), !dbg !3379
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3377, metadata !DIExpression()), !dbg !3379
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3380, !srcloc !3382
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3383
  ret void, !dbg !3384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3385 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %0, metadata !3396, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %1, metadata !3397, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %2, metadata !3398, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %3, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %0, metadata !3401, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %0, metadata !3402, metadata !DIExpression()), !dbg !3463
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3464
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3464
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3405, metadata !DIExpression()), !dbg !3465
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3466
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3466
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3408, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 0, metadata !3409, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 0, metadata !3410, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 -1, metadata !3411, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 0, metadata !3414, metadata !DIExpression()), !dbg !3463
  %12 = and i32 %2, 4, !dbg !3468
  %13 = icmp eq i32 %12, 0, !dbg !3469
  call void @llvm.dbg.value(metadata i1 %13, metadata !3415, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3463
  %14 = lshr i32 %2, 3, !dbg !3470
  %15 = and i32 %14, 7, !dbg !3470
  %16 = add nuw nsw i32 %15, 1, !dbg !3471
  call void @llvm.dbg.value(metadata i32 %16, metadata !3416, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 0, metadata !3417, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %0, metadata !3418, metadata !DIExpression()), !dbg !3463
  %17 = ptrtoint i8* %0 to i32, !dbg !3472
  %18 = and i32 %17, 3, !dbg !3474
  %19 = icmp eq i32 %18, 0, !dbg !3474
  br i1 %19, label %20, label %320, !dbg !3475

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3476
  call void @llvm.dbg.value(metadata i8* %21, metadata !3402, metadata !DIExpression()), !dbg !3463
  %22 = icmp eq i8* %0, null, !dbg !3477
  %23 = and i32 %1, 7, !dbg !3479
  %24 = sub nuw nsw i32 8, %23, !dbg !3479
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3479
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3479
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3479
  call void @llvm.dbg.value(metadata i32 %27, metadata !3397, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %26, metadata !3402, metadata !DIExpression()), !dbg !3463
  br i1 %22, label %33, label %28, !dbg !3480

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3482
  %30 = sub i32 4, %17, !dbg !3482
  %31 = add i32 %30, %29, !dbg !3483
  %32 = icmp ugt i32 %31, %27, !dbg !3484
  br i1 %32, label %320, label %33, !dbg !3485

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3486
  call void @llvm.dbg.value(metadata i8* %34, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %3, metadata !3413, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 4, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 4, metadata !3403, metadata !DIExpression()), !dbg !3463
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3487

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %42, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %43, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %44, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %45, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %72, metadata !3411, metadata !DIExpression()), !dbg !3463
  br i1 %46, label %73, label %47, !dbg !3488

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3489
  %49 = zext i1 %48 to i32, !dbg !3493
  %50 = add nsw i32 %72, %49, !dbg !3493
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3493
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %52, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %51, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %50, metadata !3411, metadata !DIExpression()), !dbg !3463
  br label %53, !dbg !3494

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %40, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %58, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %57, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %56, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %54, metadata !3411, metadata !DIExpression()), !dbg !3463
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3495
  call void @llvm.dbg.value(metadata i8* %60, metadata !3399, metadata !DIExpression()), !dbg !3463
  %61 = load i8, i8* %60, align 1, !dbg !3497
  %62 = icmp eq i8 %61, 0, !dbg !3498
  br i1 %62, label %226, label %63, !dbg !3499, !llvm.loop !3500

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3488

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3503

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3414, metadata !DIExpression()), !dbg !3463
  %75 = add nsw i32 %72, -1, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %75, metadata !3411, metadata !DIExpression()), !dbg !3463
  br label %53, !dbg !3505

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3506

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 4, metadata !3403, metadata !DIExpression()), !dbg !3463
  br label %53, !dbg !3507

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 4, metadata !3403, metadata !DIExpression()), !dbg !3463
  br label %53, !dbg !3508

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3509
  %81 = icmp eq i8 %80, 108, !dbg !3511
  br i1 %81, label %82, label %109, !dbg !3512

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3513
  %84 = load i8, i8* %83, align 1, !dbg !3513
  %85 = icmp eq i8 %84, 108, !dbg !3516
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3517
  %89 = add i32 %88, 7, !dbg !3517
  %90 = and i32 %89, -8, !dbg !3517
  %91 = inttoptr i32 %90 to i8*, !dbg !3517
  %92 = inttoptr i32 %90 to double*, !dbg !3517
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3517
  %94 = load double, double* %92, align 8, !dbg !3517
  call void @llvm.dbg.value(metadata i8* %93, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 8, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 8, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata double %94, metadata !3431, metadata !DIExpression()), !dbg !3519
  %95 = ptrtoint i8* %43 to i32, !dbg !3520
  %96 = add i32 %95, 7, !dbg !3520
  %97 = and i32 %96, -8, !dbg !3520
  %98 = inttoptr i32 %97 to i8*, !dbg !3521
  call void @llvm.dbg.value(metadata i8* %98, metadata !3402, metadata !DIExpression()), !dbg !3463
  br i1 %22, label %104, label %99, !dbg !3522

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3523
  %101 = icmp ugt i32 %100, %196, !dbg !3527
  br i1 %101, label %320, label %102, !dbg !3528

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3529
  store double %94, double* %103, align 8, !dbg !3529
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3532
  call void @llvm.dbg.value(metadata i8* %105, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3414, metadata !DIExpression()), !dbg !3463
  br label %53, !dbg !3533

107:                                              ; preds = %73, %73
  br label %109, !dbg !3534

108:                                              ; preds = %73
  br label %109, !dbg !3534

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3463
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3463
  call void @llvm.dbg.value(metadata i32 %113, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %112, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3417, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  %114 = ptrtoint i8* %43 to i32, !dbg !3534
  %115 = add i32 %114, -1, !dbg !3534
  %116 = add i32 %115, %112, !dbg !3534
  %117 = sub i32 0, %112, !dbg !3534
  %118 = and i32 %116, %117, !dbg !3534
  %119 = inttoptr i32 %118 to i8*, !dbg !3535
  call void @llvm.dbg.value(metadata i8* %119, metadata !3402, metadata !DIExpression()), !dbg !3463
  br i1 %22, label %124, label %120, !dbg !3536

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3538
  %122 = add i32 %121, %118, !dbg !3539
  %123 = icmp ugt i32 %122, %196, !dbg !3540
  br i1 %123, label %320, label %124, !dbg !3541

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3542

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3535
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %127, metadata !3400, metadata !DIExpression()), !dbg !3463
  %128 = bitcast i8* %41 to i8**, !dbg !3543
  %129 = load i8*, i8** %128, align 4, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %129, metadata !3413, metadata !DIExpression()), !dbg !3463
  br label %130, !dbg !3544

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3463
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3545
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3463
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3546
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3463
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3463
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3463
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3463
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3463
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3463
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3547
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %142, metadata !3397, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %141, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %140, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %139, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %138, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %137, metadata !3408, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %136, metadata !3416, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %135, metadata !3409, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %133, metadata !3413, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %132, metadata !3411, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %131, metadata !3410, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.label(metadata !3462), !dbg !3549
  br i1 %22, label %146, label %144, !dbg !3550

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3551
  store i8* %133, i8** %145, align 4, !dbg !3554
  br label %146, !dbg !3555

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %147, metadata !3416, metadata !DIExpression()), !dbg !3463
  %148 = icmp sgt i32 %136, 0, !dbg !3557
  br i1 %148, label %152, label %149, !dbg !3558

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3559
  %151 = zext i1 %150 to i32, !dbg !3559
  br label %152, !dbg !3558

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3558
  %154 = icmp eq i32 %153, 0, !dbg !3558
  call void @llvm.dbg.value(metadata i1 %154, metadata !3440, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3560
  call void @llvm.dbg.value(metadata i1 %36, metadata !3443, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3560
  %155 = or i1 %36, %154, !dbg !3561
  br i1 %155, label %156, label %192, !dbg !3561

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3562
  %158 = sub i32 %157, %17, !dbg !3562
  %159 = lshr i32 %158, 2, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %159, metadata !3444, metadata !DIExpression()), !dbg !3564
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3565
  br i1 %161, label %162, label %163, !dbg !3565

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3567
  unreachable, !dbg !3567

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3572
  br i1 %164, label %165, label %166, !dbg !3574

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3575
  unreachable, !dbg !3575

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3580

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3581
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3584
  store i8 %168, i8* %169, align 1, !dbg !3585
  %170 = trunc i32 %132 to i8, !dbg !3586
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3587
  store i8 %170, i8* %171, align 1, !dbg !3588
  br i1 %154, label %175, label %172, !dbg !3589

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3590
  store i8 %173, i8* %169, align 1, !dbg !3590
  %174 = add i32 %131, 1, !dbg !3593
  call void @llvm.dbg.value(metadata i32 %174, metadata !3410, metadata !DIExpression()), !dbg !3463
  br label %187, !dbg !3594

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %176, metadata !3409, metadata !DIExpression()), !dbg !3463
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3597

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %179, metadata !3397, metadata !DIExpression()), !dbg !3463
  br label %187, !dbg !3601

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3602

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %182, metadata !3397, metadata !DIExpression()), !dbg !3463
  br label %187, !dbg !3606

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3607
  %185 = add i32 %142, 2, !dbg !3609
  %186 = add i32 %185, %184, !dbg !3610
  call void @llvm.dbg.value(metadata i32 %186, metadata !3397, metadata !DIExpression()), !dbg !3463
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3463
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3463
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3463
  call void @llvm.dbg.value(metadata i32 %190, metadata !3397, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %189, metadata !3409, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %188, metadata !3410, metadata !DIExpression()), !dbg !3463
  %191 = add nuw nsw i32 %137, 1, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %191, metadata !3408, metadata !DIExpression()), !dbg !3463
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3463
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3546
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3463
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3547
  call void @llvm.dbg.value(metadata i32 %196, metadata !3397, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %195, metadata !3408, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %194, metadata !3409, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %193, metadata !3410, metadata !DIExpression()), !dbg !3463
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3612
  call void @llvm.dbg.value(metadata i8* %197, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %143, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %141, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %139, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %138, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3417, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %132, metadata !3411, metadata !DIExpression()), !dbg !3463
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3495
  call void @llvm.dbg.value(metadata i8* %198, metadata !3399, metadata !DIExpression()), !dbg !3463
  %199 = load i8, i8* %198, align 1, !dbg !3497
  %200 = icmp eq i8 %199, 0, !dbg !3498
  br i1 %200, label %226, label %63, !dbg !3499

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3613

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3614
  call void @llvm.dbg.value(metadata i8* %203, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 undef, metadata !3447, metadata !DIExpression()), !dbg !3615
  br i1 %22, label %219, label %204, !dbg !3616

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3614
  %206 = load i32, i32* %205, align 4, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %206, metadata !3447, metadata !DIExpression()), !dbg !3615
  %207 = inttoptr i32 %118 to i32*, !dbg !3617
  store i32 %206, i32* %207, align 4, !dbg !3620
  br label %219, !dbg !3621

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3622
  %210 = add i32 %209, 7, !dbg !3622
  %211 = and i32 %210, -8, !dbg !3622
  %212 = inttoptr i32 %211 to i8*, !dbg !3622
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3622
  call void @llvm.dbg.value(metadata i8* %213, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i64 undef, metadata !3453, metadata !DIExpression()), !dbg !3623
  br i1 %22, label %219, label %214, !dbg !3624

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3622
  %216 = load i64, i64* %215, align 8, !dbg !3622
  call void @llvm.dbg.value(metadata i64 %216, metadata !3453, metadata !DIExpression()), !dbg !3623
  %217 = inttoptr i32 %118 to i64*, !dbg !3625
  store i64 %216, i64* %217, align 8, !dbg !3630
  br label %219, !dbg !3631

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3632
  unreachable, !dbg !3632

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3637
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3637
  call void @llvm.dbg.value(metadata i8* %221, metadata !3400, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %40, metadata !3399, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %222, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %113, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %112, metadata !3404, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3417, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 poison, metadata !3414, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %72, metadata !3411, metadata !DIExpression()), !dbg !3463
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3495
  call void @llvm.dbg.value(metadata i8* %223, metadata !3399, metadata !DIExpression()), !dbg !3463
  %224 = load i8, i8* %223, align 1, !dbg !3497
  %225 = icmp eq i8 %224, 0, !dbg !3498
  br i1 %225, label %226, label %38, !dbg !3499

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3638
  %228 = ptrtoint i8* %227 to i32, !dbg !3639
  %229 = sub i32 %228, %17, !dbg !3639
  %230 = lshr i32 %229, 2, !dbg !3641
  %231 = icmp ugt i32 %229, 1023, !dbg !3642
  br i1 %231, label %232, label %233, !dbg !3643

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3644
  unreachable, !dbg !3644

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3649

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3650
  %236 = add i32 %235, %229, !dbg !3653
  br label %320, !dbg !3654

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3655
  store i8 %238, i8* %0, align 1, !dbg !3656
  %239 = trunc i32 %194 to i8, !dbg !3657
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3659
  store i8 %240, i8* %242, align 1, !dbg !3661
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3662
  store i8 %241, i8* %243, align 1, !dbg !3663
  %244 = trunc i32 %193 to i8, !dbg !3664
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3665
  store i8 %244, i8* %245, align 1, !dbg !3666
  %246 = icmp eq i32 %193, 0, !dbg !3667
  %247 = xor i1 %246, true, !dbg !3668
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3668
  call void @llvm.dbg.value(metadata i8* %227, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 0, metadata !3412, metadata !DIExpression()), !dbg !3463
  br i1 %249, label %250, label %269, !dbg !3668

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3669

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %254, metadata !3412, metadata !DIExpression()), !dbg !3463
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3670
  %256 = load i8, i8* %255, align 1, !dbg !3670
  %257 = icmp sgt i8 %256, -1, !dbg !3672
  br i1 %257, label %265, label %258, !dbg !3673

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3456, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3674
  %259 = ptrtoint i8* %253 to i32, !dbg !3675
  %260 = add i32 %251, %259, !dbg !3677
  %261 = icmp ugt i32 %260, %196, !dbg !3678
  br i1 %261, label %320, label %262, !dbg !3679

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3680
  call void @llvm.dbg.value(metadata i8 %263, metadata !3456, metadata !DIExpression()), !dbg !3674
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %264, metadata !3402, metadata !DIExpression()), !dbg !3463
  store i8 %263, i8* %253, align 1, !dbg !3682
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3612
  call void @llvm.dbg.value(metadata i8* %266, metadata !3402, metadata !DIExpression()), !dbg !3463
  %267 = add nuw i32 %254, 1, !dbg !3683
  call void @llvm.dbg.value(metadata i32 %267, metadata !3412, metadata !DIExpression()), !dbg !3463
  %268 = icmp eq i32 %267, %195, !dbg !3684
  br i1 %268, label %269, label %252, !dbg !3669, !llvm.loop !3685

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3612
  call void @llvm.dbg.value(metadata i8* %270, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 0, metadata !3412, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %133, metadata !3413, metadata !DIExpression()), !dbg !3463
  %271 = icmp eq i32 %195, 0, !dbg !3687
  br i1 %271, label %316, label %272, !dbg !3690

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3690

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %276, metadata !3413, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %277, metadata !3412, metadata !DIExpression()), !dbg !3463
  br i1 %246, label %282, label %278, !dbg !3691

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3694
  %280 = load i8, i8* %279, align 1, !dbg !3694
  %281 = icmp sgt i8 %280, -1, !dbg !3695
  br i1 %281, label %282, label %311, !dbg !3696

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3697

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3403, metadata !DIExpression()), !dbg !3463
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3698
  %285 = load i8, i8* %284, align 1, !dbg !3698
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3701
  call void @llvm.dbg.value(metadata i8* %286, metadata !3402, metadata !DIExpression()), !dbg !3463
  store i8 %285, i8* %275, align 1, !dbg !3702
  br label %297, !dbg !3703

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3704
  %289 = load i8, i8* %288, align 1, !dbg !3704
  %290 = zext i8 %289 to i32, !dbg !3704
  %291 = shl nuw nsw i32 %290, 2, !dbg !3706
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3707
  %293 = bitcast i8* %292 to i8**, !dbg !3708
  %294 = load i8*, i8** %293, align 4, !dbg !3708
  call void @llvm.dbg.value(metadata i8* %294, metadata !3413, metadata !DIExpression()), !dbg !3463
  store i8* null, i8** %293, align 4, !dbg !3709
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3710
  %296 = add i32 %295, 1, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %296, metadata !3403, metadata !DIExpression()), !dbg !3463
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3463
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3712
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3463
  call void @llvm.dbg.value(metadata i8* %300, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i32 %299, metadata !3403, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %298, metadata !3413, metadata !DIExpression()), !dbg !3463
  %301 = ptrtoint i8* %300 to i32, !dbg !3713
  %302 = add i32 %273, %299, !dbg !3715
  %303 = add i32 %302, %301, !dbg !3716
  %304 = icmp ugt i32 %303, %196, !dbg !3717
  br i1 %304, label %320, label %305, !dbg !3718

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3719
  %307 = load i8, i8* %306, align 1, !dbg !3719
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3720
  call void @llvm.dbg.value(metadata i8* %308, metadata !3402, metadata !DIExpression()), !dbg !3463
  store i8 %307, i8* %300, align 1, !dbg !3721
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3722
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %310, metadata !3402, metadata !DIExpression()), !dbg !3463
  br label %311, !dbg !3724

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3725
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3463
  call void @llvm.dbg.value(metadata i8* %313, metadata !3402, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8* %312, metadata !3413, metadata !DIExpression()), !dbg !3463
  %314 = add nuw i32 %277, 1, !dbg !3726
  call void @llvm.dbg.value(metadata i32 %314, metadata !3412, metadata !DIExpression()), !dbg !3463
  %315 = icmp eq i32 %314, %195, !dbg !3687
  br i1 %315, label %316, label %274, !dbg !3690, !llvm.loop !3727

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3612
  %318 = ptrtoint i8* %317 to i32, !dbg !3729
  %319 = sub i32 %318, %17, !dbg !3729
  br label %320, !dbg !3730

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3731
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3731
  ret i32 %321, !dbg !3731
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3732 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3736, metadata !DIExpression()), !dbg !3737
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3738
  ret i1 %2, !dbg !3739
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3745, metadata !DIExpression()), !dbg !3746
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3747
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3748
  %4 = and i1 %2, %3, !dbg !3748
  ret i1 %4, !dbg !3749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3750 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3754, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %1, metadata !3755, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i32 %2, metadata !3756, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.value(metadata i8* %3, metadata !3757, metadata !DIExpression()), !dbg !3760
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3761
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3758, metadata !DIExpression()), !dbg !3762
  call void @llvm.va_start(i8* nonnull %6), !dbg !3763
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3764
  %8 = load i32, i32* %7, align 4, !dbg !3764
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3764
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3764
  call void @llvm.dbg.value(metadata i32 %10, metadata !3759, metadata !DIExpression()), !dbg !3760
  call void @llvm.va_end(i8* nonnull %6), !dbg !3765
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3766
  ret i32 %10, !dbg !3767
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3768 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3780, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3781, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8* %2, metadata !3782, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8* %3, metadata !3783, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8* %3, metadata !3784, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8* %3, metadata !3785, metadata !DIExpression()), !dbg !3799
  %5 = icmp eq i8* %3, null, !dbg !3800
  br i1 %5, label %45, label %6, !dbg !3802

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3794, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3799
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3803
  %8 = load i8, i8* %7, align 1, !dbg !3803
  %9 = zext i8 %8 to i32, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %9, metadata !3795, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i8 undef, metadata !3796, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata i8 undef, metadata !3797, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata i32 0, metadata !3793, metadata !DIExpression()), !dbg !3799
  %10 = icmp eq i8 %8, 0, !dbg !3805
  br i1 %10, label %39, label %11, !dbg !3808

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3809
  call void @llvm.dbg.value(metadata i8 %12, metadata !3794, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %13 = zext i8 %12 to i32, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %13, metadata !3794, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %14 = shl nuw nsw i32 %13, 2, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %14, metadata !3794, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3812
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3813
  %17 = load i8, i8* %16, align 1, !dbg !3813
  call void @llvm.dbg.value(metadata i8 %17, metadata !3796, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %18 = zext i8 %17 to i32, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %18, metadata !3796, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3815
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3816
  %21 = load i8, i8* %20, align 1, !dbg !3816
  call void @llvm.dbg.value(metadata i8 %21, metadata !3797, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %22 = zext i8 %21 to i32, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %22, metadata !3797, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %23 = shl nuw nsw i32 %22, 1, !dbg !3818
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3791, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3799
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3819
  call void @llvm.dbg.value(metadata i8* %24, metadata !3791, metadata !DIExpression()), !dbg !3799
  br label %25, !dbg !3808

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3791, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.value(metadata i32 %27, metadata !3793, metadata !DIExpression()), !dbg !3799
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %28, metadata !3791, metadata !DIExpression()), !dbg !3799
  %29 = load i8, i8* %26, align 1, !dbg !3822
  %30 = zext i8 %29 to i32, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %30, metadata !3798, metadata !DIExpression()), !dbg !3799
  %31 = shl nuw nsw i32 %30, 2, !dbg !3823
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3824
  %33 = bitcast i8* %32 to i8**, !dbg !3825
  call void @llvm.dbg.value(metadata i8** %33, metadata !3792, metadata !DIExpression()), !dbg !3799
  store i8* %28, i8** %33, align 4, !dbg !3826
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3827
  %35 = add i32 %34, 1, !dbg !3828
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3829
  call void @llvm.dbg.value(metadata i8* %36, metadata !3791, metadata !DIExpression()), !dbg !3799
  %37 = add nuw nsw i32 %27, 1, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %37, metadata !3793, metadata !DIExpression()), !dbg !3799
  %38 = icmp eq i32 %37, %9, !dbg !3805
  br i1 %38, label %39, label %25, !dbg !3808, !llvm.loop !3831

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %40, metadata !3784, metadata !DIExpression()), !dbg !3799
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3834
  %42 = bitcast i8* %41 to i8**, !dbg !3834
  %43 = load i8*, i8** %42, align 1, !dbg !3834
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3835
  br label %45, !dbg !3836

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3799
  ret i32 %46, !dbg !3837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3838 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3842, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3843, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i8* %2, metadata !3844, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i8* %3, metadata !3845, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i8* %4, metadata !3846, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.value(metadata i8* %4, metadata !3847, metadata !DIExpression()), !dbg !3852
  %6 = ptrtoint i8* %4 to i32, !dbg !3853
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3853
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3853
  ret i32 %8, !dbg !3854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3859, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 %1, metadata !3860, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 0, metadata !3862, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i32 0, metadata !3863, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 poison, metadata !3862, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8* %0, metadata !3859, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3864
  %3 = load i8, i8* %0, align 1, !dbg !3865
  call void @llvm.dbg.value(metadata i8 %3, metadata !3861, metadata !DIExpression()), !dbg !3864
  %4 = icmp eq i8 %3, 0, !dbg !3866
  br i1 %4, label %29, label %5, !dbg !3867

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %8, metadata !3863, metadata !DIExpression()), !dbg !3864
  br i1 %9, label %11, label %22, !dbg !3869

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3871
  br i1 %12, label %13, label %17, !dbg !3875

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3876
  br i1 %14, label %29, label %15, !dbg !3879

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3880
  br i1 %16, label %29, label %22, !dbg !3882

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3883
  %19 = xor i1 %18, true, !dbg !3885
  %20 = zext i1 %18 to i32, !dbg !3885
  %21 = add nsw i32 %8, %20, !dbg !3885
  br label %22, !dbg !3885

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3864
  call void @llvm.dbg.value(metadata i32 %24, metadata !3863, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8 poison, metadata !3862, metadata !DIExpression()), !dbg !3864
  %25 = icmp eq i8 %6, 37, !dbg !3886
  %26 = xor i1 %25, %23, !dbg !3888
  call void @llvm.dbg.value(metadata i8* %10, metadata !3859, metadata !DIExpression()), !dbg !3864
  call void @llvm.dbg.value(metadata i8* %10, metadata !3859, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3864
  %27 = load i8, i8* %10, align 1, !dbg !3865
  call void @llvm.dbg.value(metadata i8 %27, metadata !3861, metadata !DIExpression()), !dbg !3864
  %28 = icmp eq i8 %27, 0, !dbg !3866
  br i1 %28, label %29, label %5, !dbg !3867, !llvm.loop !3889

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3864
  ret i1 %30, !dbg !3891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3892 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3896, metadata !DIExpression()), !dbg !3897
  %2 = add i8 %0, -64, !dbg !3898
  %3 = icmp ult i8 %2, 59, !dbg !3898
  ret i1 %3, !dbg !3899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3900 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3908, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %1, metadata !3909, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3910, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %3, metadata !3911, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %4, metadata !3912, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i16* %5, metadata !3913, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %6, metadata !3914, metadata !DIExpression()), !dbg !3977
  %11 = icmp eq i8* %0, null, !dbg !3978
  br i1 %11, label %12, label %13, !dbg !3981

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3982
  unreachable, !dbg !3982

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3915, metadata !DIExpression()), !dbg !3977
  %14 = bitcast i8* %0 to i32*, !dbg !3984
  call void @llvm.dbg.value(metadata i32* %14, metadata !3916, metadata !DIExpression()), !dbg !3977
  %15 = and i32 %4, 8, !dbg !3985
  %16 = icmp eq i32 %15, 0, !dbg !3986
  call void @llvm.dbg.value(metadata i1 %16, metadata !3920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %0, metadata !3923, metadata !DIExpression()), !dbg !3977
  %17 = icmp eq i32 %1, 0, !dbg !3987
  br i1 %17, label %18, label %20, !dbg !3988

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3989
  br label %20, !dbg !3988

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3988
  call void @llvm.dbg.value(metadata i32 %21, metadata !3909, metadata !DIExpression()), !dbg !3977
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3990
  %23 = load i8, i8* %22, align 1, !dbg !3990
  %24 = zext i8 %23 to i32, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %24, metadata !3918, metadata !DIExpression()), !dbg !3977
  %25 = icmp ne i8 %23, 0, !dbg !3992
  %26 = and i32 %4, 1, !dbg !3993
  %27 = icmp ne i32 %26, 0, !dbg !3993
  %28 = and i1 %27, %25, !dbg !3993
  call void @llvm.dbg.value(metadata i1 %28, metadata !3922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3977
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3994
  %30 = load i8, i8* %29, align 1, !dbg !3994
  %31 = zext i8 %30 to i32, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %31, metadata !3919, metadata !DIExpression()), !dbg !3977
  %32 = icmp ne i8 %30, 0, !dbg !3996
  %33 = and i32 %4, 2, !dbg !3997
  %34 = icmp ne i32 %33, 0, !dbg !3997
  %35 = and i1 %34, %32, !dbg !3997
  call void @llvm.dbg.value(metadata i1 %35, metadata !3921, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3977
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3998
  br i1 %36, label %41, label %37, !dbg !3998

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4000
  br i1 %38, label %287, label %39, !dbg !4003

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4004
  br label %287, !dbg !4006

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4007
  %43 = zext i8 %42 to i32, !dbg !4008
  %44 = shl nuw nsw i32 %43, 2, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %44, metadata !3917, metadata !DIExpression()), !dbg !3977
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4010
  %46 = bitcast i8* %45 to i8**, !dbg !4011
  %47 = load i8*, i8** %46, align 4, !dbg !4011
  call void @llvm.dbg.value(metadata i8* %47, metadata !3926, metadata !DIExpression()), !dbg !3977
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4012
  call void @llvm.dbg.value(metadata i8* %48, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 0, metadata !3928, metadata !DIExpression()), !dbg !3977
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4013
  br i1 %49, label %50, label %135, !dbg !4014

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3925, metadata !DIExpression()), !dbg !3977
  br i1 %28, label %51, label %76, !dbg !4015

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %48, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 0, metadata !3928, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !4016
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4017

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %55, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %56, metadata !3928, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %57, metadata !3929, metadata !DIExpression()), !dbg !4016
  %58 = load i8, i8* %55, align 1, !dbg !4018
  %59 = zext i8 %58 to i32, !dbg !4019
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4019
  %61 = bitcast i32* %60 to i8**, !dbg !4020
  %62 = load i8*, i8** %61, align 4, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %62, metadata !3935, metadata !DIExpression()), !dbg !4021
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %63, metadata !3938, metadata !DIExpression()), !dbg !4021
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4023
  br i1 %65, label %66, label %70, !dbg !4023

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4025
  %68 = add nuw i32 %56, 1, !dbg !4027
  call void @llvm.dbg.value(metadata i32 %68, metadata !3928, metadata !DIExpression()), !dbg !3977
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4028
  store i16 %67, i16* %69, align 2, !dbg !4029
  br label %70, !dbg !4030

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3977
  call void @llvm.dbg.value(metadata i32 %71, metadata !3928, metadata !DIExpression()), !dbg !3977
  %72 = add nsw i32 %63, %54, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %72, metadata !3925, metadata !DIExpression()), !dbg !3977
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4032
  call void @llvm.dbg.value(metadata i8* %73, metadata !3927, metadata !DIExpression()), !dbg !3977
  %74 = add nuw nsw i32 %57, 1, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %74, metadata !3929, metadata !DIExpression()), !dbg !4016
  %75 = icmp eq i32 %74, %24, !dbg !4034
  br i1 %75, label %82, label %53, !dbg !4017, !llvm.loop !4035

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4037
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4037
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4037
  br label %82, !dbg !4037

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4040
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3977
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4041
  call void @llvm.dbg.value(metadata i1 undef, metadata !3939, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !3940, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %85, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %84, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %83, metadata !3928, metadata !DIExpression()), !dbg !3977
  %86 = icmp eq i8 %30, 0, !dbg !4044
  br i1 %86, label %287, label %87, !dbg !4045

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4046
  %89 = icmp eq i32 %88, 0, !dbg !4047
  call void @llvm.dbg.value(metadata i1 %89, metadata !3939, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4042
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4045

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8* %96, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %97, metadata !3928, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %98, metadata !3940, metadata !DIExpression()), !dbg !4043
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %99, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 undef, metadata !3942, metadata !DIExpression()), !dbg !4049
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4050
  call void @llvm.dbg.value(metadata i8* %100, metadata !3927, metadata !DIExpression()), !dbg !3977
  %101 = load i8, i8* %99, align 1, !dbg !4051
  call void @llvm.dbg.value(metadata i8 %101, metadata !3945, metadata !DIExpression()), !dbg !4049
  %102 = zext i8 %101 to i32, !dbg !4052
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4052
  %104 = bitcast i32* %103 to i8**, !dbg !4053
  %105 = load i8*, i8** %104, align 4, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %105, metadata !3946, metadata !DIExpression()), !dbg !4049
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4054
  call void @llvm.dbg.value(metadata i1 %106, metadata !3947, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4049
  br i1 %16, label %113, label %107, !dbg !4055

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4057
  call void @llvm.dbg.value(metadata i8 %108, metadata !3942, metadata !DIExpression()), !dbg !4049
  %109 = zext i8 %108 to i32, !dbg !4058
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4059
  br i1 %110, label %111, label %113, !dbg !4060

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4061
  %112 = add nsw i32 %95, -2, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %112, metadata !3925, metadata !DIExpression()), !dbg !3977
  br label %130, !dbg !4068

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4069

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4070

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %116, metadata !3925, metadata !DIExpression()), !dbg !3977
  br label %130, !dbg !4075

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4076

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3973), !dbg !4077
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4078
  call void @llvm.dbg.value(metadata i32 %119, metadata !3948, metadata !DIExpression()), !dbg !4049
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4079
  br i1 %121, label %122, label %126, !dbg !4079

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4081
  %124 = add nuw i32 %97, 1, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %124, metadata !3928, metadata !DIExpression()), !dbg !3977
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4084
  store i16 %123, i16* %125, align 2, !dbg !4085
  br label %126, !dbg !4086

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3977
  call void @llvm.dbg.value(metadata i32 %127, metadata !3928, metadata !DIExpression()), !dbg !3977
  %128 = add i32 %95, -1, !dbg !4087
  %129 = add i32 %128, %119, !dbg !4088
  call void @llvm.dbg.value(metadata i32 %129, metadata !3925, metadata !DIExpression()), !dbg !3977
  br label %130, !dbg !4089

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3977
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4049
  call void @llvm.dbg.value(metadata i32 %132, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %131, metadata !3928, metadata !DIExpression()), !dbg !3977
  %133 = add nuw nsw i32 %98, 1, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %100, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %133, metadata !3940, metadata !DIExpression()), !dbg !4043
  %134 = icmp eq i32 %133, %31, !dbg !4044
  br i1 %134, label %287, label %94, !dbg !4045, !llvm.loop !4091

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3950, metadata !DIExpression()), !dbg !4093
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3951, metadata !DIExpression()), !dbg !4094
  br i1 %28, label %136, label %138, !dbg !4095

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3952, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 0, metadata !3953, metadata !DIExpression()), !dbg !3977
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %137, metadata !3954, metadata !DIExpression()), !dbg !3977
  br label %143, !dbg !4099

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4100
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4100

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3954, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 undef, metadata !3953, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 0, metadata !3952, metadata !DIExpression()), !dbg !3977
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4102
  br label %148, !dbg !4105

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %151, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 0, metadata !3956, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8 %149, metadata !3953, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 %150, metadata !3952, metadata !DIExpression()), !dbg !3977
  %152 = icmp eq i8 %30, 0, !dbg !4108
  br i1 %152, label %153, label %155, !dbg !4109

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4110
  br label %160, !dbg !4109

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4109

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4110
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4111
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4112
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3977
  call void @llvm.dbg.value(metadata i8 undef, metadata !3949, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3977
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4113
  %166 = load i8, i8* %165, align 1, !dbg !4113
  %167 = zext i8 %162 to i32, !dbg !4114
  %168 = add i8 %166, %162, !dbg !4115
  call void @llvm.dbg.value(metadata i8 %168, metadata !3949, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3977
  %169 = icmp eq i32 %33, 0, !dbg !4116
  %170 = lshr i8 %163, 1, !dbg !4117
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4117
  call void @llvm.dbg.value(metadata i8 %171, metadata !3949, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3977
  %172 = icmp eq i32 %26, 0, !dbg !4118
  %173 = icmp eq i32 %161, 0, !dbg !4110
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4110
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4110
  call void @llvm.dbg.value(metadata i8 %175, metadata !3949, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3977
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3964, metadata !DIExpression()), !dbg !4119
  %176 = load i32, i32* %14, align 1, !dbg !4120
  store i8 %168, i8* %165, align 1, !dbg !4121
  store i8 %175, i8* %22, align 1, !dbg !4121
  store i8 %171, i8* %29, align 1, !dbg !4121
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4122
  call void @llvm.dbg.value(metadata i32 %177, metadata !3955, metadata !DIExpression()), !dbg !3977
  %178 = icmp slt i32 %177, 0, !dbg !4123
  br i1 %178, label %287, label %240, !dbg !4125

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %181, metadata !3956, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i8 %182, metadata !3953, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 %183, metadata !3952, metadata !DIExpression()), !dbg !3977
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %184, metadata !3927, metadata !DIExpression()), !dbg !3977
  %185 = load i8, i8* %180, align 1, !dbg !4127
  call void @llvm.dbg.value(metadata i8 %185, metadata !3958, metadata !DIExpression()), !dbg !4128
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4129
  call void @llvm.dbg.value(metadata i8* %186, metadata !3927, metadata !DIExpression()), !dbg !3977
  %187 = load i8, i8* %184, align 1, !dbg !4130
  call void @llvm.dbg.value(metadata i8 %187, metadata !3961, metadata !DIExpression()), !dbg !4128
  %188 = zext i8 %187 to i32, !dbg !4131
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4131
  %190 = bitcast i32* %189 to i8**, !dbg !4132
  %191 = load i8*, i8** %190, align 4, !dbg !4132
  call void @llvm.dbg.value(metadata i8* %191, metadata !3962, metadata !DIExpression()), !dbg !4128
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4133
  call void @llvm.dbg.value(metadata i1 %192, metadata !3963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4128
  br i1 %16, label %196, label %193, !dbg !4134

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4136
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4137
  br i1 %195, label %235, label %196, !dbg !4138

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4139

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4140

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4143
  br i1 %199, label %201, label %200, !dbg !4148

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4149
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4149
  unreachable, !dbg !4149

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4143
  %203 = add nuw nsw i8 %183, 1, !dbg !4151
  call void @llvm.dbg.value(metadata i8 %203, metadata !3952, metadata !DIExpression()), !dbg !3977
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4152
  br label %231, !dbg !4153

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4154

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4155
  br i1 %207, label %209, label %208, !dbg !4160

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4161
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4161
  unreachable, !dbg !4161

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4155
  %211 = add nuw nsw i8 %182, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i8 %211, metadata !3953, metadata !DIExpression()), !dbg !3977
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4164
  br label %231, !dbg !4165

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4166

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4168
  br i1 %215, label %217, label %216, !dbg !4173

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4174
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4174
  unreachable, !dbg !4174

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4168
  %219 = add nuw nsw i8 %183, 1, !dbg !4176
  call void @llvm.dbg.value(metadata i8 %219, metadata !3952, metadata !DIExpression()), !dbg !3977
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4177
  br label %231, !dbg !4178

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4179
  br i1 %222, label %224, label %223, !dbg !4183

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4184
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4184
  unreachable, !dbg !4184

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4179
  %226 = add nuw nsw i8 %182, 1, !dbg !4186
  call void @llvm.dbg.value(metadata i8 %226, metadata !3953, metadata !DIExpression()), !dbg !3977
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4187
  store i8 %185, i8* %227, align 1, !dbg !4188
  %228 = add nuw nsw i8 %182, 2, !dbg !4189
  call void @llvm.dbg.value(metadata i8 %228, metadata !3953, metadata !DIExpression()), !dbg !3977
  %229 = zext i8 %226 to i32, !dbg !4190
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4190
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4191
  br label %235, !dbg !4192

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3977
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4112
  call void @llvm.dbg.value(metadata i8 %237, metadata !3953, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i8 %236, metadata !3952, metadata !DIExpression()), !dbg !3977
  %238 = add nuw nsw i32 %181, 1, !dbg !4192
  call void @llvm.dbg.value(metadata i8* %186, metadata !3927, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 %238, metadata !3956, metadata !DIExpression()), !dbg !4107
  %239 = icmp eq i32 %238, %31, !dbg !4108
  br i1 %239, label %160, label %179, !dbg !4109, !llvm.loop !4193

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %177, metadata !3925, metadata !DIExpression()), !dbg !3977
  store i32 %176, i32* %14, align 1, !dbg !4195
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4196
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %243, metadata !3955, metadata !DIExpression()), !dbg !3977
  %244 = icmp slt i32 %243, 0, !dbg !4198
  br i1 %244, label %287, label %245, !dbg !4200

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3977
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4201
  %248 = add nuw nsw i32 %44, %24, !dbg !4201
  %249 = sub i32 %247, %248, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %249, metadata !3965, metadata !DIExpression()), !dbg !3977
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %250, metadata !3955, metadata !DIExpression()), !dbg !3977
  %251 = icmp slt i32 %250, 0, !dbg !4203
  br i1 %251, label %287, label %252, !dbg !4205

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %253, metadata !3925, metadata !DIExpression()), !dbg !3977
  %254 = add nuw nsw i32 %253, %250, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %254, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.value(metadata i32 0, metadata !3966, metadata !DIExpression()), !dbg !4208
  %255 = icmp eq i8 %162, 0, !dbg !4209
  br i1 %255, label %284, label %256, !dbg !4210

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4210

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3966, metadata !DIExpression()), !dbg !4208
  call void @llvm.dbg.value(metadata i32 %260, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4211
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4212
  %262 = load i8, i8* %261, align 1, !dbg !4212
  call void @llvm.dbg.value(metadata i8 %262, metadata !3968, metadata !DIExpression()), !dbg !4213
  store i8 %262, i8* %10, align 1, !dbg !4214
  %263 = zext i8 %262 to i32, !dbg !4215
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4215
  %265 = bitcast i32* %264 to i8**, !dbg !4216
  %266 = load i8*, i8** %265, align 4, !dbg !4216
  call void @llvm.dbg.value(metadata i8* %266, metadata !3971, metadata !DIExpression()), !dbg !4213
  br i1 %257, label %270, label %267, !dbg !4217

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4218
  %269 = load i16, i16* %268, align 2, !dbg !4218
  br label %270, !dbg !4217

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4217
  call void @llvm.dbg.value(metadata i32 undef, metadata !3972, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4213
  call void @llvm.dbg.value(metadata i8* %10, metadata !3968, metadata !DIExpression(DW_OP_deref)), !dbg !4213
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4219
  call void @llvm.dbg.value(metadata i32 %272, metadata !3955, metadata !DIExpression()), !dbg !3977
  %273 = icmp slt i32 %272, 0, !dbg !4220
  br i1 %273, label %277, label %274, !dbg !4222

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3972, metadata !DIExpression()), !dbg !4213
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3925, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3977
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %275, metadata !3955, metadata !DIExpression()), !dbg !3977
  %276 = icmp slt i32 %275, 0, !dbg !4224
  br i1 %276, label %277, label %279, !dbg !4226

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4227
  call void @llvm.dbg.value(metadata i32 undef, metadata !3925, metadata !DIExpression()), !dbg !3977
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4228
  call void @llvm.dbg.value(metadata i32 %280, metadata !3925, metadata !DIExpression()), !dbg !3977
  %281 = add nsw i32 %280, %275, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %281, metadata !3925, metadata !DIExpression()), !dbg !3977
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4227
  %282 = add nuw nsw i32 %259, 1, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %282, metadata !3966, metadata !DIExpression()), !dbg !4208
  %283 = icmp eq i32 %282, %167, !dbg !4209
  br i1 %283, label %284, label %258, !dbg !4210, !llvm.loop !4231

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4207
  call void @llvm.dbg.value(metadata i32 %285, metadata !3925, metadata !DIExpression()), !dbg !3977
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4233
  br label %287, !dbg !4234

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3977
  ret i32 %288, !dbg !4235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4236 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4240, metadata !DIExpression()), !dbg !4248
  %2 = icmp eq i8* %0, null, !dbg !4249
  br i1 %2, label %3, label %4, !dbg !4252

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4253
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4253
  unreachable, !dbg !4253

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4241, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i8* %0, metadata !4242, metadata !DIExpression()), !dbg !4248
  %5 = load i8, i8* %0, align 1, !dbg !4255
  %6 = zext i8 %5 to i32, !dbg !4255
  %7 = shl nuw nsw i32 %6, 2, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %7, metadata !4243, metadata !DIExpression()), !dbg !4248
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4257
  %9 = load i8, i8* %8, align 1, !dbg !4257
  %10 = zext i8 %9 to i32, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %10, metadata !4244, metadata !DIExpression()), !dbg !4248
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4258
  %12 = load i8, i8* %11, align 1, !dbg !4258
  %13 = zext i8 %12 to i32, !dbg !4258
  call void @llvm.dbg.value(metadata i32 %13, metadata !4245, metadata !DIExpression()), !dbg !4248
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4259
  call void @llvm.dbg.value(metadata i8* %14, metadata !4241, metadata !DIExpression()), !dbg !4248
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4260
  call void @llvm.dbg.value(metadata i8* %15, metadata !4241, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4246, metadata !DIExpression()), !dbg !4261
  %16 = icmp eq i8 %9, 0, !dbg !4262
  br i1 %16, label %17, label %22, !dbg !4264

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4248
  %19 = ptrtoint i8* %18 to i32, !dbg !4265
  %20 = ptrtoint i8* %0 to i32, !dbg !4265
  %21 = sub i32 %19, %20, !dbg !4265
  ret i32 %21, !dbg !4266

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4246, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata i8* %24, metadata !4241, metadata !DIExpression()), !dbg !4248
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %25, metadata !4241, metadata !DIExpression()), !dbg !4248
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4269
  %27 = add i32 %26, 1, !dbg !4270
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %28, metadata !4241, metadata !DIExpression()), !dbg !4248
  %29 = add nuw nsw i32 %23, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %29, metadata !4246, metadata !DIExpression()), !dbg !4261
  %30 = icmp eq i32 %29, %10, !dbg !4262
  br i1 %30, label %17, label %22, !dbg !4264, !llvm.loop !4273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4275 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4279, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata i8* %1, metadata !4280, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata i8* %2, metadata !4281, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata i16 %3, metadata !4282, metadata !DIExpression()), !dbg !4283
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4284
  br i1 %5, label %6, label %9, !dbg !4286

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4287
  %8 = add i32 %7, 1, !dbg !4289
  br label %20, !dbg !4290

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4291
  br i1 %10, label %13, label %11, !dbg !4292

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4292
  br label %16, !dbg !4292

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4293
  %15 = add i32 %14, 1, !dbg !4294
  br label %16, !dbg !4292

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4292
  %18 = and i32 %17, 65535, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %17, metadata !4282, metadata !DIExpression()), !dbg !4283
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4296
  br label %20, !dbg !4297

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4283
  ret i32 %21, !dbg !4298
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4301, metadata !DIExpression()), !dbg !4302
  ret i32 0, !dbg !4303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4304 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4308, metadata !DIExpression()), !dbg !4309
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4310
  ret void, !dbg !4311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4312 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4315
  ret i8* %1, !dbg !4316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4317 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4328, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i8* %0, metadata !4327, metadata !DIExpression()), !dbg !4339
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4340
  ret void, !dbg !4342
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4347, metadata !DIExpression()), !dbg !4349
  call void @llvm.dbg.value(metadata i8* %1, metadata !4348, metadata !DIExpression()), !dbg !4349
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4350
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4350
  ret i32 %4, !dbg !4351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4352 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4359, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4356, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %1, metadata !4357, metadata !DIExpression()), !dbg !4360
  call void @llvm.dbg.value(metadata i8* %2, metadata !4358, metadata !DIExpression()), !dbg !4360
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4361
  ret void, !dbg !4362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4367, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 %1, metadata !4368, metadata !DIExpression()), !dbg !4370
  call void @llvm.dbg.value(metadata i32 0, metadata !4369, metadata !DIExpression()), !dbg !4370
  %3 = icmp eq i32 %1, 0, !dbg !4371
  br i1 %3, label %13, label %4, !dbg !4374

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4369, metadata !DIExpression()), !dbg !4370
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4375
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4377
  %8 = load i8, i8* %7, align 1, !dbg !4377
  %9 = zext i8 %8 to i32, !dbg !4377
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4375
  %11 = add nuw i32 %5, 1, !dbg !4378
  call void @llvm.dbg.value(metadata i32 %11, metadata !4369, metadata !DIExpression()), !dbg !4370
  %12 = icmp eq i32 %11, %1, !dbg !4371
  br i1 %12, label %13, label %4, !dbg !4374, !llvm.loop !4379

13:                                               ; preds = %4, %2
  ret void, !dbg !4381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4382 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4386, metadata !DIExpression()), !dbg !4388
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4389
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4387, metadata !DIExpression()), !dbg !4390
  call void @llvm.va_start(i8* nonnull %3), !dbg !4391
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4392
  %5 = load i32, i32* %4, align 4, !dbg !4392
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4392
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4392
  call void @llvm.va_end(i8* nonnull %3), !dbg !4393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4394
  ret void, !dbg !4394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4395 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4399, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4404
  call void @llvm.dbg.value(metadata i8* %2, metadata !4401, metadata !DIExpression()), !dbg !4404
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4405
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4402, metadata !DIExpression()), !dbg !4406
  call void @llvm.va_start(i8* nonnull %5), !dbg !4407
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4408
  %7 = load i32, i32* %6, align 4, !dbg !4408
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4408
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4408
  call void @llvm.dbg.value(metadata i32 %9, metadata !4403, metadata !DIExpression()), !dbg !4404
  call void @llvm.va_end(i8* nonnull %5), !dbg !4409
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4410
  ret i32 %9, !dbg !4411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4412 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4419, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %0, metadata !4416, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i32 %1, metadata !4417, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.value(metadata i8* %2, metadata !4418, metadata !DIExpression()), !dbg !4426
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4427
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4420, metadata !DIExpression()), !dbg !4428
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4429
  store i8* %0, i8** %7, align 4, !dbg !4429
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4429
  store i32 %1, i32* %8, align 4, !dbg !4429
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4429
  store i32 0, i32* %9, align 4, !dbg !4429
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4430
  %10 = load i32, i32* %9, align 4, !dbg !4431
  %11 = load i32, i32* %8, align 4, !dbg !4433
  %12 = icmp slt i32 %10, %11, !dbg !4434
  br i1 %12, label %13, label %15, !dbg !4435

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4436
  store i8 0, i8* %14, align 1, !dbg !4438
  br label %15, !dbg !4439

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4440
  ret i32 %10, !dbg !4441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4447, metadata !DIExpression()), !dbg !4449
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4448, metadata !DIExpression()), !dbg !4449
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4450
  %4 = load i8*, i8** %3, align 4, !dbg !4450
  %5 = icmp eq i8* %4, null, !dbg !4452
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4453
  br i1 %5, label %12, label %8, !dbg !4454

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4455
  %10 = load i32, i32* %9, align 4, !dbg !4455
  %11 = icmp slt i32 %7, %10, !dbg !4456
  br i1 %11, label %15, label %12, !dbg !4457

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4458
  %14 = add nsw i32 %7, 1, !dbg !4460
  store i32 %14, i32* %13, align 4, !dbg !4460
  br label %25, !dbg !4461

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4462
  %17 = icmp eq i32 %7, %16, !dbg !4464
  br i1 %17, label %18, label %21, !dbg !4465

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4466
  store i32 %19, i32* %6, align 4, !dbg !4466
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4468
  store i8 0, i8* %20, align 1, !dbg !4469
  br label %25, !dbg !4470

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4471
  %23 = add nsw i32 %7, 1, !dbg !4473
  store i32 %23, i32* %6, align 4, !dbg !4473
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4474
  store i8 %22, i8* %24, align 1, !dbg !4475
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4476
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4477 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4482, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %1, metadata !4483, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %2, metadata !4484, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.value(metadata i8* %3, metadata !4485, metadata !DIExpression()), !dbg !4486
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4487
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4488
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4489
  unreachable, !dbg !4490
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4491 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4598
  ret %struct.k_thread* %1, !dbg !4599
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4600 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4604, metadata !DIExpression()), !dbg !4605
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4606, !srcloc !4608
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4609
  ret void, !dbg !4610
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4611 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4612, !srcloc !4614
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4615
  ret %struct.k_thread* %1, !dbg !4616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4617 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4627, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %1, metadata !4628, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %2, metadata !4629, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %4, metadata !4631, metadata !DIExpression()), !dbg !4756
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4757
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4757
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4632, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i32 0, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i1 undef, metadata !4638, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4756
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4759

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4759

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4760
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %30, metadata !4629, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %29, metadata !4636, metadata !DIExpression()), !dbg !4756
  %31 = load i8, i8* %30, align 1, !dbg !4761
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4759

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4761
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %34, metadata !4629, metadata !DIExpression()), !dbg !4756
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %35, metadata !4640, metadata !DIExpression()), !dbg !4763
  %36 = icmp slt i32 %35, 0, !dbg !4764
  %37 = add i32 %29, 1, !dbg !4762
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %36, label %365, label %28, !llvm.loop !4766

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4768
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4645, metadata !DIExpression()), !dbg !4769
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4769
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4688, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4691, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* %30, metadata !4694, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 -1, metadata !4695, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 -1, metadata !4696, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* null, metadata !4697, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* %14, metadata !4698, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8 0, metadata !4699, metadata !DIExpression()), !dbg !4770
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %39, metadata !4629, metadata !DIExpression()), !dbg !4756
  %40 = load i24, i24* %15, align 8, !dbg !4772
  %41 = and i24 %40, 256, !dbg !4772
  %42 = icmp eq i24 %41, 0, !dbg !4772
  br i1 %42, label %51, label %43, !dbg !4774

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %44, metadata !4630, metadata !DIExpression()), !dbg !4756
  %45 = bitcast i8* %27 to i32*, !dbg !4775
  %46 = load i32, i32* %45, align 4, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %46, metadata !4695, metadata !DIExpression()), !dbg !4770
  %47 = icmp slt i32 %46, 0, !dbg !4777
  br i1 %47, label %48, label %56, !dbg !4779

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4780
  store i24 %49, i24* %15, align 8, !dbg !4780
  %50 = sub nsw i32 0, %46, !dbg !4782
  call void @llvm.dbg.value(metadata i32 %50, metadata !4695, metadata !DIExpression()), !dbg !4770
  br label %56, !dbg !4783

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4784
  %53 = icmp eq i24 %52, 0, !dbg !4784
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4786
  br label %56, !dbg !4786

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4787
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4770
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %58, metadata !4695, metadata !DIExpression()), !dbg !4770
  %60 = and i24 %57, 1024, !dbg !4787
  %61 = icmp eq i24 %60, 0, !dbg !4787
  br i1 %61, label %69, label %62, !dbg !4788

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %63, metadata !4630, metadata !DIExpression()), !dbg !4756
  %64 = bitcast i8* %59 to i32*, !dbg !4789
  %65 = load i32, i32* %64, align 4, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %65, metadata !4700, metadata !DIExpression()), !dbg !4790
  %66 = icmp slt i32 %65, 0, !dbg !4791
  br i1 %66, label %67, label %74, !dbg !4793

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4794
  store i24 %68, i24* %15, align 8, !dbg !4794
  br label %74, !dbg !4796

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4797
  %71 = icmp eq i24 %70, 0, !dbg !4797
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4799
  br label %74, !dbg !4799

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4800
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4770
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4770
  call void @llvm.dbg.value(metadata i8* %77, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %76, metadata !4696, metadata !DIExpression()), !dbg !4770
  store i32 0, i32* %16, align 4, !dbg !4801
  store i32 0, i32* %17, align 8, !dbg !4802
  %78 = lshr i24 %75, 16, !dbg !4800
  call void @llvm.dbg.value(metadata i24 %78, metadata !4703, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4770
  %79 = lshr i24 %75, 11, !dbg !4803
  %80 = and i24 %79, 15, !dbg !4803
  %81 = zext i24 %80 to i32, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %81, metadata !4704, metadata !DIExpression()), !dbg !4770
  %82 = trunc i24 %78 to i3, !dbg !4804
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4804

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4805

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %85, metadata !4630, metadata !DIExpression()), !dbg !4756
  %86 = bitcast i8* %77 to i32*, !dbg !4808
  %87 = load i32, i32* %86, align 4, !dbg !4808
  %88 = sext i32 %87 to i64, !dbg !4808
  store i64 %88, i64* %20, align 8, !dbg !4810
  br label %115, !dbg !4811

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %90, metadata !4630, metadata !DIExpression()), !dbg !4756
  %91 = bitcast i8* %77 to i32*, !dbg !4812
  %92 = load i32, i32* %91, align 4, !dbg !4812
  %93 = sext i32 %92 to i64, !dbg !4812
  store i64 %93, i64* %20, align 8, !dbg !4815
  br label %115, !dbg !4816

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4817
  %96 = add i32 %95, 7, !dbg !4817
  %97 = and i32 %96, -8, !dbg !4817
  %98 = inttoptr i32 %97 to i8*, !dbg !4817
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4817
  call void @llvm.dbg.value(metadata i8* %99, metadata !4630, metadata !DIExpression()), !dbg !4756
  %100 = inttoptr i32 %97 to i64*, !dbg !4817
  %101 = load i64, i64* %100, align 8, !dbg !4817
  store i64 %101, i64* %20, align 8, !dbg !4818
  br label %115, !dbg !4819

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4820
  %104 = add i32 %103, 7, !dbg !4820
  %105 = and i32 %104, -8, !dbg !4820
  %106 = inttoptr i32 %105 to i8*, !dbg !4820
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %107, metadata !4630, metadata !DIExpression()), !dbg !4756
  %108 = inttoptr i32 %105 to i64*, !dbg !4820
  %109 = load i64, i64* %108, align 8, !dbg !4820
  store i64 %109, i64* %20, align 8, !dbg !4821
  br label %115, !dbg !4822

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4823
  call void @llvm.dbg.value(metadata i8* %111, metadata !4630, metadata !DIExpression()), !dbg !4756
  %112 = bitcast i8* %77 to i32*, !dbg !4823
  %113 = load i32, i32* %112, align 4, !dbg !4823
  %114 = sext i32 %113 to i64, !dbg !4824
  store i64 %114, i64* %20, align 8, !dbg !4825
  br label %115, !dbg !4826

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4827
  call void @llvm.dbg.value(metadata i8* %117, metadata !4630, metadata !DIExpression()), !dbg !4756
  %118 = trunc i24 %79 to i4, !dbg !4828
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4828

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4829
  %121 = ashr exact i64 %120, 56, !dbg !4829
  store i64 %121, i64* %20, align 8, !dbg !4832
  br label %177, !dbg !4833

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4834
  %124 = ashr exact i64 %123, 48, !dbg !4834
  store i64 %124, i64* %20, align 8, !dbg !4837
  br label %177, !dbg !4838

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4839

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %127, metadata !4630, metadata !DIExpression()), !dbg !4756
  %128 = bitcast i8* %77 to i32*, !dbg !4842
  %129 = load i32, i32* %128, align 4, !dbg !4842
  %130 = zext i32 %129 to i64, !dbg !4842
  store i64 %130, i64* %20, align 8, !dbg !4844
  br label %157, !dbg !4845

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %132, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %132, metadata !4630, metadata !DIExpression()), !dbg !4756
  %133 = bitcast i8* %77 to i32*, !dbg !4846
  %134 = load i32, i32* %133, align 4, !dbg !4846
  %135 = zext i32 %134 to i64, !dbg !4846
  store i64 %135, i64* %20, align 8, !dbg !4846
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4848
  %138 = add i32 %137, 7, !dbg !4848
  %139 = and i32 %138, -8, !dbg !4848
  %140 = inttoptr i32 %139 to i8*, !dbg !4848
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %141, metadata !4630, metadata !DIExpression()), !dbg !4756
  %142 = inttoptr i32 %139 to i64*, !dbg !4848
  %143 = load i64, i64* %142, align 8, !dbg !4848
  store i64 %143, i64* %20, align 8, !dbg !4849
  br label %157, !dbg !4850

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4851
  %146 = add i32 %145, 7, !dbg !4851
  %147 = and i32 %146, -8, !dbg !4851
  %148 = inttoptr i32 %147 to i8*, !dbg !4851
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %149, metadata !4630, metadata !DIExpression()), !dbg !4756
  %150 = inttoptr i32 %147 to i64*, !dbg !4851
  %151 = load i64, i64* %150, align 8, !dbg !4851
  store i64 %151, i64* %20, align 8, !dbg !4852
  br label %157, !dbg !4853

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %153, metadata !4630, metadata !DIExpression()), !dbg !4756
  %154 = bitcast i8* %77 to i32*, !dbg !4854
  %155 = load i32, i32* %154, align 4, !dbg !4854
  %156 = zext i32 %155 to i64, !dbg !4855
  store i64 %156, i64* %20, align 8, !dbg !4856
  br label %157, !dbg !4857

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4858
  call void @llvm.dbg.value(metadata i8* %159, metadata !4630, metadata !DIExpression()), !dbg !4756
  %160 = trunc i24 %79 to i4, !dbg !4859
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4859

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4860
  store i64 %162, i64* %20, align 8, !dbg !4863
  br label %177, !dbg !4864

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4865
  store i64 %164, i64* %20, align 8, !dbg !4868
  br label %177, !dbg !4869

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4870
  %167 = add i32 %166, 7, !dbg !4870
  %168 = and i32 %167, -8, !dbg !4870
  %169 = inttoptr i32 %168 to i8*, !dbg !4870
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %170, metadata !4630, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %170, metadata !4630, metadata !DIExpression()), !dbg !4756
  %171 = inttoptr i32 %168 to double*, !dbg !4870
  %172 = load double, double* %171, align 8, !dbg !4870
  store double %172, double* %19, align 8, !dbg !4870
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %174, metadata !4630, metadata !DIExpression()), !dbg !4756
  %175 = bitcast i8* %77 to i8**, !dbg !4874
  %176 = load i8*, i8** %175, align 4, !dbg !4874
  store i8* %176, i8** %18, align 8, !dbg !4877
  br label %177, !dbg !4878

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4770
  call void @llvm.dbg.value(metadata i8* %178, metadata !4630, metadata !DIExpression()), !dbg !4756
  %179 = and i24 %75, 3, !dbg !4879
  %180 = icmp eq i24 %179, 0, !dbg !4879
  br i1 %180, label %185, label %181, !dbg !4879

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4880
  call void @llvm.dbg.value(metadata i32 %182, metadata !4705, metadata !DIExpression()), !dbg !4881
  %183 = icmp slt i32 %182, 0, !dbg !4882
  %184 = add i32 %182, %29, !dbg !4880
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4884
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4885

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %188, metadata !4709, metadata !DIExpression()), !dbg !4887
  %189 = icmp slt i32 %188, 0, !dbg !4888
  %190 = add i32 %29, 1, !dbg !4886
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %192, metadata !4697, metadata !DIExpression()), !dbg !4770
  %193 = icmp sgt i32 %76, -1, !dbg !4891
  br i1 %193, label %194, label %196, !dbg !4893

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4894
  call void @llvm.dbg.value(metadata i32 %195, metadata !4712, metadata !DIExpression()), !dbg !4896
  br label %241, !dbg !4897

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %197, metadata !4712, metadata !DIExpression()), !dbg !4896
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4697, metadata !DIExpression()), !dbg !4770
  %199 = load i64, i64* %20, align 8, !dbg !4900
  %200 = trunc i64 %199 to i8, !dbg !4901
  store i8 %200, i8* %10, align 1, !dbg !4902
  call void @llvm.dbg.value(metadata i8* %23, metadata !4698, metadata !DIExpression()), !dbg !4770
  br label %245, !dbg !4903

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4904
  %203 = icmp eq i24 %202, 0, !dbg !4904
  %204 = trunc i24 %75 to i8, !dbg !4906
  %205 = shl i8 %204, 1, !dbg !4906
  %206 = and i8 %205, 32, !dbg !4906
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4906
  call void @llvm.dbg.value(metadata i8 %207, metadata !4699, metadata !DIExpression()), !dbg !4770
  %208 = load i64, i64* %20, align 8, !dbg !4907
  call void @llvm.dbg.value(metadata i64 %208, metadata !4637, metadata !DIExpression()), !dbg !4756
  %209 = icmp slt i64 %208, 0, !dbg !4908
  br i1 %209, label %210, label %212, !dbg !4910

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4699, metadata !DIExpression()), !dbg !4770
  %211 = sub nsw i64 0, %208, !dbg !4911
  store i64 %211, i64* %20, align 8, !dbg !4913
  br label %212, !dbg !4914

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4770
  call void @llvm.dbg.value(metadata i8 %213, metadata !4699, metadata !DIExpression()), !dbg !4770
  %214 = load i64, i64* %20, align 8, !dbg !4915
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %215, metadata !4697, metadata !DIExpression()), !dbg !4770
  br label %216, !dbg !4917

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4918
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4919
  call void @llvm.dbg.value(metadata i8* %218, metadata !4697, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8 %217, metadata !4699, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.label(metadata !4755), !dbg !4920
  %219 = icmp sgt i32 %76, -1, !dbg !4921
  br i1 %219, label %222, label %220, !dbg !4922

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4923
  br label %245, !dbg !4922

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4925
  %224 = sub i32 %22, %223, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %224, metadata !4714, metadata !DIExpression()), !dbg !4926
  %225 = load i24, i24* %15, align 8, !dbg !4927
  %226 = and i24 %225, -65, !dbg !4927
  store i24 %226, i24* %15, align 8, !dbg !4927
  %227 = icmp ugt i32 %76, %224, !dbg !4928
  br i1 %227, label %228, label %245, !dbg !4930

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4931
  store i32 %229, i32* %16, align 4, !dbg !4933
  br label %245, !dbg !4934

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4935
  %232 = icmp eq i8* %231, null, !dbg !4937
  br i1 %232, label %245, label %233, !dbg !4938

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4939
  %235 = zext i32 %234 to i64, !dbg !4939
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4941
  call void @llvm.dbg.value(metadata i8* %236, metadata !4697, metadata !DIExpression()), !dbg !4770
  %237 = load i24, i24* %15, align 8, !dbg !4942
  %238 = or i24 %237, 1048576, !dbg !4942
  store i24 %238, i24* %15, align 8, !dbg !4942
  store i8 120, i8* %21, align 1, !dbg !4943
  br label %216, !dbg !4944

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4945
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4948
  br label %363, !dbg !4949

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4950
  call void @llvm.dbg.value(metadata i32 %242, metadata !4712, metadata !DIExpression()), !dbg !4896
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4951
  call void @llvm.dbg.value(metadata i32 -1, metadata !4696, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 %29, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8* %192, metadata !4697, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* %243, metadata !4698, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8 0, metadata !4699, metadata !DIExpression()), !dbg !4770
  %244 = icmp eq i8* %192, null, !dbg !4952
  br i1 %244, label %363, label %245, !dbg !4954, !llvm.loop !4766

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4923
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata i32 0, metadata !4718, metadata !DIExpression()), !dbg !4770
  %250 = zext i8 %249 to i32, !dbg !4955
  %251 = icmp eq i8 %249, 0, !dbg !4957
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata i32 undef, metadata !4717, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata i32 undef, metadata !4717, metadata !DIExpression()), !dbg !4770
  %252 = icmp sgt i32 %58, 0, !dbg !4958
  br i1 %252, label %253, label %302, !dbg !4959

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4923
  %255 = icmp eq i24 %254, 0, !dbg !4923
  %256 = ptrtoint i8* %248 to i32, !dbg !4960
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  %257 = ptrtoint i8* %247 to i32, !dbg !4960
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  %258 = xor i1 %251, true, !dbg !4961
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  %259 = sext i1 %258 to i32, !dbg !4961
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  %260 = lshr i24 %246, 19, !dbg !4962
  %261 = and i24 %260, 1, !dbg !4962
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4962
  %263 = zext i24 %262 to i32, !dbg !4962
  %264 = add i32 %257, %259, !dbg !4962
  %265 = add i32 %256, %263, !dbg !4962
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  %266 = and i24 %246, 4194304, !dbg !4963
  %267 = icmp eq i24 %266, 0, !dbg !4963
  %268 = load i32, i32* %16, align 4, !dbg !4965
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4717, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4770
  call void @llvm.dbg.value(metadata i32 undef, metadata !4717, metadata !DIExpression()), !dbg !4770
  %269 = load i32, i32* %17, align 8, !dbg !4966
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4966
  call void @llvm.dbg.value(metadata i32 undef, metadata !4717, metadata !DIExpression()), !dbg !4770
  %271 = add i32 %264, %58, !dbg !4966
  %272 = add i32 %265, %268, !dbg !4966
  %273 = add i32 %272, %270, !dbg !4967
  %274 = sub i32 %271, %273, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %274, metadata !4695, metadata !DIExpression()), !dbg !4770
  %275 = and i24 %246, 4, !dbg !4968
  %276 = icmp eq i24 %275, 0, !dbg !4968
  br i1 %276, label %277, label %302, !dbg !4969

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4719, metadata !DIExpression()), !dbg !4970
  %278 = and i24 %246, 64, !dbg !4971
  %279 = icmp eq i24 %278, 0, !dbg !4971
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4972
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4972
  %282 = select i1 %279, i32 32, i32 48, !dbg !4972
  br i1 %280, label %287, label %283, !dbg !4972

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %284, metadata !4724, metadata !DIExpression()), !dbg !4974
  %285 = icmp slt i32 %284, 0, !dbg !4975
  %286 = add i32 %29, 1, !dbg !4973
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4770
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %290, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 undef, metadata !4719, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i8 %288, metadata !4699, metadata !DIExpression()), !dbg !4770
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4977
  %292 = add i32 %291, -1, !dbg !4977
  br label %293, !dbg !4977

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4978
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %295, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %294, metadata !4695, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i32 %294, metadata !4695, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4770
  %296 = icmp sgt i32 %294, 0, !dbg !4979
  br i1 %296, label %297, label %302, !dbg !4977

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %298, metadata !4695, metadata !DIExpression()), !dbg !4770
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %299, metadata !4730, metadata !DIExpression()), !dbg !4982
  %300 = icmp slt i32 %299, 0, !dbg !4983
  %301 = add i32 %295, 1, !dbg !4981
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %300, label %361, label %293, !llvm.loop !4985

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4770
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4770
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %305, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %304, metadata !4695, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8 %303, metadata !4699, metadata !DIExpression()), !dbg !4770
  %306 = icmp eq i8 %303, 0, !dbg !4987
  br i1 %306, label %312, label %307, !dbg !4988

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4989
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4990
  call void @llvm.dbg.value(metadata i32 %309, metadata !4733, metadata !DIExpression()), !dbg !4991
  %310 = icmp slt i32 %309, 0, !dbg !4992
  %311 = add i32 %305, 1, !dbg !4990
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %313, metadata !4636, metadata !DIExpression()), !dbg !4756
  %314 = lshr i24 %246, 20, !dbg !4994
  %315 = lshr i24 %246, 19, !dbg !4995
  %316 = or i24 %314, %315, !dbg !4996
  %317 = and i24 %316, 1, !dbg !4996
  %318 = icmp eq i24 %317, 0, !dbg !4996
  br i1 %318, label %323, label %319, !dbg !4997

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %320, metadata !4737, metadata !DIExpression()), !dbg !4999
  %321 = icmp slt i32 %320, 0, !dbg !5000
  %322 = add i32 %313, 1, !dbg !4998
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %324, metadata !4636, metadata !DIExpression()), !dbg !4756
  %325 = and i24 %246, 1048576, !dbg !5002
  %326 = icmp eq i24 %325, 0, !dbg !5002
  br i1 %326, label %333, label %327, !dbg !5003

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5004
  %329 = zext i8 %328 to i32, !dbg !5004
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %330, metadata !4743, metadata !DIExpression()), !dbg !5005
  %331 = icmp slt i32 %330, 0, !dbg !5006
  %332 = add i32 %324, 1, !dbg !5004
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %334, metadata !4636, metadata !DIExpression()), !dbg !4756
  %335 = load i32, i32* %16, align 4, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %335, metadata !4718, metadata !DIExpression()), !dbg !4770
  br label %336, !dbg !5009

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5010
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %338, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %337, metadata !4718, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4770
  %339 = icmp sgt i32 %337, 0, !dbg !5011
  br i1 %339, label %340, label %345, !dbg !5009

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %341, metadata !4718, metadata !DIExpression()), !dbg !4770
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %342, metadata !4747, metadata !DIExpression()), !dbg !5014
  %343 = icmp slt i32 %342, 0, !dbg !5015
  %344 = add i32 %338, 1, !dbg !5013
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %343, label %361, label %336, !llvm.loop !5017

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %346, metadata !4750, metadata !DIExpression()), !dbg !5020
  %347 = icmp slt i32 %346, 0, !dbg !5021
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %349, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %304, metadata !4695, metadata !DIExpression()), !dbg !4770
  %350 = icmp sgt i32 %304, 0, !dbg !5023
  br i1 %350, label %351, label %363, !dbg !5024

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5024
  %353 = add i32 %352, %338, !dbg !5024
  br label %354, !dbg !5024

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %355, metadata !4695, metadata !DIExpression()), !dbg !4770
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5025
  call void @llvm.dbg.value(metadata i32 %356, metadata !4752, metadata !DIExpression()), !dbg !5026
  %357 = icmp slt i32 %356, 0, !dbg !5027
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5029
  call void @llvm.dbg.value(metadata i32 undef, metadata !4636, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4756
  call void @llvm.dbg.value(metadata i32 %359, metadata !4695, metadata !DIExpression()), !dbg !4770
  %360 = icmp sgt i32 %355, 1, !dbg !5023
  br i1 %360, label %354, label %363, !dbg !5024, !llvm.loop !5030

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4767
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4760
  call void @llvm.dbg.value(metadata i32 %364, metadata !4636, metadata !DIExpression()), !dbg !4756
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4767
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4756
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5032
  ret i32 %366, !dbg !5032
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5033 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5037, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.value(metadata i8* %1, metadata !5038, metadata !DIExpression()), !dbg !5039
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5040
  store i24 0, i24* %3, align 4, !dbg !5040
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5040
  store i8 0, i8* %4, align 1, !dbg !5040
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5040
  store i32 0, i32* %5, align 4, !dbg !5040
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5040
  store i32 0, i32* %6, align 4, !dbg !5040
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %7, metadata !5038, metadata !DIExpression()), !dbg !5039
  %8 = load i8, i8* %7, align 1, !dbg !5042
  %9 = icmp eq i8 %8, 37, !dbg !5044
  br i1 %9, label %10, label %12, !dbg !5045

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5046
  call void @llvm.dbg.value(metadata i8* %11, metadata !5038, metadata !DIExpression()), !dbg !5039
  store i8 37, i8* %4, align 1, !dbg !5048
  br label %18, !dbg !5049

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %13, metadata !5038, metadata !DIExpression()), !dbg !5039
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5051
  call void @llvm.dbg.value(metadata i8* %14, metadata !5038, metadata !DIExpression()), !dbg !5039
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5052
  call void @llvm.dbg.value(metadata i8* %15, metadata !5038, metadata !DIExpression()), !dbg !5039
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %16, metadata !5038, metadata !DIExpression()), !dbg !5039
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %17, metadata !5038, metadata !DIExpression()), !dbg !5039
  br label %18, !dbg !5055

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5039
  ret i8* %19, !dbg !5056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5057 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5061, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %1, metadata !5062, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %2, metadata !5063, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %3, metadata !5064, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i32 0, metadata !5065, metadata !DIExpression()), !dbg !5068
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5069

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5070
  call void @llvm.dbg.value(metadata i32 %9, metadata !5065, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.value(metadata i8* %8, metadata !5063, metadata !DIExpression()), !dbg !5068
  %10 = icmp ult i8* %8, %3, !dbg !5071
  br i1 %10, label %11, label %13, !dbg !5072

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5073
  br label %17, !dbg !5072

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5074

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5075
  %16 = icmp eq i8 %15, 0, !dbg !5074
  br i1 %16, label %24, label %17, !dbg !5069

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5073
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5076
  call void @llvm.dbg.value(metadata i8* %19, metadata !5063, metadata !DIExpression()), !dbg !5068
  %20 = zext i8 %18 to i32, !dbg !5077
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %21, metadata !5066, metadata !DIExpression()), !dbg !5079
  %22 = icmp slt i32 %21, 0, !dbg !5080
  %23 = add i32 %9, 1, !dbg !5082
  call void @llvm.dbg.value(metadata i32 undef, metadata !5065, metadata !DIExpression()), !dbg !5068
  br i1 %22, label %24, label %7, !llvm.loop !5083

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5068
  ret i32 %25, !dbg !5085
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5086 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5090, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5091, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %2, metadata !5092, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %3, metadata !5093, metadata !DIExpression()), !dbg !5100
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5101
  %6 = load i8, i8* %5, align 1, !dbg !5101
  %7 = zext i8 %6 to i32, !dbg !5102
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5103
  %9 = icmp eq i32 %8, 0, !dbg !5103
  call void @llvm.dbg.value(metadata i1 %9, metadata !5094, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5100
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5104
  call void @llvm.dbg.value(metadata i32 %10, metadata !5095, metadata !DIExpression()), !dbg !5100
  %11 = ptrtoint i8* %3 to i32, !dbg !5105
  %12 = ptrtoint i8* %2 to i32, !dbg !5105
  %13 = sub i32 %11, %12, !dbg !5105
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %14, metadata !5097, metadata !DIExpression()), !dbg !5100
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5107

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5100
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5090, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i8* %18, metadata !5097, metadata !DIExpression()), !dbg !5100
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5108
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5109
  call void @llvm.dbg.value(metadata i32 %25, metadata !5098, metadata !DIExpression()), !dbg !5110
  %26 = icmp ult i32 %25, 10, !dbg !5111
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5112
  %28 = add i32 %27, %25, !dbg !5110
  %29 = trunc i32 %28 to i8, !dbg !5112
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5113
  call void @llvm.dbg.value(metadata i8* %30, metadata !5097, metadata !DIExpression()), !dbg !5100
  store i8 %29, i8* %30, align 1, !dbg !5114
  call void @llvm.dbg.value(metadata i64 %22, metadata !5090, metadata !DIExpression()), !dbg !5100
  %31 = icmp uge i64 %19, %15, !dbg !5115
  %32 = icmp ugt i8* %30, %2, !dbg !5116
  %33 = and i1 %31, %32, !dbg !5116
  br i1 %33, label %17, label %34, !dbg !5117, !llvm.loop !5118

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5120
  %36 = load i24, i24* %35, align 4, !dbg !5120
  %37 = and i24 %36, 32, !dbg !5120
  %38 = icmp eq i24 %37, 0, !dbg !5120
  br i1 %38, label %44, label %39, !dbg !5122

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5123

40:                                               ; preds = %39
  br label %41, !dbg !5125

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5129
  store i24 %43, i24* %35, align 4, !dbg !5129
  br label %44, !dbg !5130

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5131 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5137, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i8* %1, metadata !5138, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.value(metadata i32 %2, metadata !5139, metadata !DIExpression()), !dbg !5140
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5141
  %5 = load i24, i24* %4, align 4, !dbg !5141
  %6 = lshr i24 %5, 11, !dbg !5141
  %7 = and i24 %6, 15, !dbg !5141
  %8 = zext i24 %7 to i32, !dbg !5141
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5142

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5143
  store i32 %2, i32* %10, align 4, !dbg !5145
  br label %28, !dbg !5146

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5147
  store i8 %12, i8* %1, align 1, !dbg !5148
  br label %28, !dbg !5149

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5150
  %15 = bitcast i8* %1 to i16*, !dbg !5151
  store i16 %14, i16* %15, align 2, !dbg !5152
  br label %28, !dbg !5153

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5154
  store i32 %2, i32* %17, align 4, !dbg !5155
  br label %28, !dbg !5156

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5157
  %20 = bitcast i8* %1 to i64*, !dbg !5158
  store i64 %19, i64* %20, align 8, !dbg !5159
  br label %28, !dbg !5160

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5161
  %23 = bitcast i8* %1 to i64*, !dbg !5162
  store i64 %22, i64* %23, align 8, !dbg !5163
  br label %28, !dbg !5164

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5165
  store i32 %2, i32* %25, align 4, !dbg !5166
  br label %28, !dbg !5167

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5168
  store i32 %2, i32* %27, align 4, !dbg !5169
  br label %28, !dbg !5170

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5171
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5175, metadata !DIExpression()), !dbg !5176
  %2 = add i32 %0, -65, !dbg !5177
  %3 = icmp ult i32 %2, 26, !dbg !5178
  %4 = zext i1 %3 to i32, !dbg !5178
  ret i32 %4, !dbg !5179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5180 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5184, metadata !DIExpression()), !dbg !5185
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5186

2:                                                ; preds = %1
  br label %4, !dbg !5187

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5189

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5190
  ret i32 %5, !dbg !5191
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5192 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5194, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i8 1, metadata !5196, metadata !DIExpression()), !dbg !5197
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5198

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5196, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i8* %5, metadata !5195, metadata !DIExpression()), !dbg !5197
  %6 = load i8, i8* %5, align 1, !dbg !5199
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5201

7:                                                ; preds = %4
  br label %11, !dbg !5202

8:                                                ; preds = %4
  br label %11, !dbg !5204

9:                                                ; preds = %4
  br label %11, !dbg !5205

10:                                               ; preds = %4
  br label %11, !dbg !5206

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5207
  %14 = or i24 %13, %12, !dbg !5207
  store i24 %14, i24* %3, align 4, !dbg !5207
  call void @llvm.dbg.value(metadata i8 poison, metadata !5196, metadata !DIExpression()), !dbg !5197
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5195, metadata !DIExpression()), !dbg !5197
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5196, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i8* %15, metadata !5195, metadata !DIExpression()), !dbg !5197
  %17 = load i24, i24* %3, align 4, !dbg !5208
  %18 = and i24 %17, 68, !dbg !5210
  %19 = icmp eq i24 %18, 68, !dbg !5210
  br i1 %19, label %20, label %22, !dbg !5210

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5211
  store i24 %21, i24* %3, align 4, !dbg !5211
  br label %22, !dbg !5213

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5214
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5215 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5217, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i8* %1, metadata !5218, metadata !DIExpression()), !dbg !5221
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5222
  %5 = load i24, i24* %4, align 4, !dbg !5223
  %6 = or i24 %5, 128, !dbg !5223
  store i24 %6, i24* %4, align 4, !dbg !5223
  call void @llvm.dbg.value(metadata i8* %1, metadata !5218, metadata !DIExpression()), !dbg !5221
  %7 = load i8, i8* %1, align 1, !dbg !5224
  %8 = icmp eq i8 %7, 42, !dbg !5226
  br i1 %8, label %9, label %12, !dbg !5227

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5228
  store i24 %10, i24* %4, align 4, !dbg !5228
  call void @llvm.dbg.value(metadata i8* %1, metadata !5218, metadata !DIExpression()), !dbg !5221
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5230
  call void @llvm.dbg.value(metadata i8* %11, metadata !5218, metadata !DIExpression()), !dbg !5221
  store i8* %11, i8** %3, align 4, !dbg !5230
  br label %29, !dbg !5231

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5219, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.value(metadata i8** %3, metadata !5218, metadata !DIExpression(DW_OP_deref)), !dbg !5221
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5232
  call void @llvm.dbg.value(metadata i32 %13, metadata !5220, metadata !DIExpression()), !dbg !5221
  %14 = load i8*, i8** %3, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %14, metadata !5218, metadata !DIExpression()), !dbg !5221
  %15 = icmp eq i8* %14, %1, !dbg !5235
  br i1 %15, label %29, label %16, !dbg !5236

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5237
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5239
  store i32 %13, i32* %18, align 4, !dbg !5240
  %19 = lshr i32 %13, 31, !dbg !5241
  %20 = lshr i24 %17, 1, !dbg !5242
  %21 = and i24 %20, 1, !dbg !5242
  %22 = zext i24 %21 to i32, !dbg !5242
  %23 = or i32 %19, %22, !dbg !5242
  %24 = trunc i32 %23 to i24, !dbg !5242
  %25 = shl nuw nsw i24 %24, 1, !dbg !5242
  %26 = and i24 %17, -131, !dbg !5242
  %27 = or i24 %26, 128, !dbg !5242
  %28 = or i24 %25, %27, !dbg !5242
  store i24 %28, i24* %4, align 4, !dbg !5242
  br label %29, !dbg !5243

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5221
  ret i8* %30, !dbg !5244
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5245 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5247, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5250
  %4 = load i8, i8* %1, align 1, !dbg !5251
  %5 = icmp eq i8 %4, 46, !dbg !5252
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5253
  %7 = load i24, i24* %6, align 4, !dbg !5254
  %8 = select i1 %5, i24 512, i24 0, !dbg !5254
  %9 = and i24 %7, -513, !dbg !5254
  %10 = or i24 %9, %8, !dbg !5254
  store i24 %10, i24* %6, align 4, !dbg !5254
  br i1 %5, label %11, label %32, !dbg !5255

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5250
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %12, metadata !5248, metadata !DIExpression()), !dbg !5250
  store i8* %12, i8** %3, align 4, !dbg !5256
  %13 = load i8, i8* %12, align 1, !dbg !5257
  %14 = icmp eq i8 %13, 42, !dbg !5259
  br i1 %14, label %15, label %18, !dbg !5260

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5261
  store i24 %16, i24* %6, align 4, !dbg !5261
  call void @llvm.dbg.value(metadata i8* %12, metadata !5248, metadata !DIExpression()), !dbg !5250
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5263
  call void @llvm.dbg.value(metadata i8* %17, metadata !5248, metadata !DIExpression()), !dbg !5250
  store i8* %17, i8** %3, align 4, !dbg !5263
  br label %32, !dbg !5264

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5248, metadata !DIExpression(DW_OP_deref)), !dbg !5250
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5265
  call void @llvm.dbg.value(metadata i32 %19, metadata !5249, metadata !DIExpression()), !dbg !5250
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5266
  store i32 %19, i32* %20, align 4, !dbg !5267
  %21 = lshr i32 %19, 31, !dbg !5268
  %22 = load i24, i24* %6, align 4, !dbg !5269
  %23 = lshr i24 %22, 1, !dbg !5269
  %24 = and i24 %23, 1, !dbg !5269
  %25 = zext i24 %24 to i32, !dbg !5269
  %26 = or i32 %21, %25, !dbg !5269
  %27 = trunc i32 %26 to i24, !dbg !5269
  %28 = shl nuw nsw i24 %27, 1, !dbg !5269
  %29 = and i24 %22, -3, !dbg !5269
  %30 = or i24 %28, %29, !dbg !5269
  store i24 %30, i24* %6, align 4, !dbg !5269
  %31 = load i8*, i8** %3, align 4, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %31, metadata !5248, metadata !DIExpression()), !dbg !5250
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5250
  ret i8* %33, !dbg !5271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5272 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5274, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i8* %1, metadata !5275, metadata !DIExpression()), !dbg !5276
  %3 = load i8, i8* %1, align 1, !dbg !5277
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5278

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %5, metadata !5275, metadata !DIExpression()), !dbg !5276
  %6 = load i8, i8* %5, align 1, !dbg !5282
  %7 = icmp eq i8 %6, 104, !dbg !5283
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5284
  %9 = load i24, i24* %8, align 4, !dbg !5284
  %10 = and i24 %9, -30721, !dbg !5284
  br i1 %7, label %11, label %14, !dbg !5285

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5286
  store i24 %12, i24* %8, align 4, !dbg !5286
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5288
  call void @llvm.dbg.value(metadata i8* %13, metadata !5275, metadata !DIExpression()), !dbg !5276
  br label %56, !dbg !5289

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5290
  store i24 %15, i24* %8, align 4, !dbg !5290
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %17, metadata !5275, metadata !DIExpression()), !dbg !5276
  %18 = load i8, i8* %17, align 1, !dbg !5294
  %19 = icmp eq i8 %18, 108, !dbg !5295
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5296
  %21 = load i24, i24* %20, align 4, !dbg !5296
  %22 = and i24 %21, -30721, !dbg !5296
  br i1 %19, label %23, label %26, !dbg !5297

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5298
  store i24 %24, i24* %20, align 4, !dbg !5298
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %25, metadata !5275, metadata !DIExpression()), !dbg !5276
  br label %56, !dbg !5301

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5302
  store i24 %27, i24* %20, align 4, !dbg !5302
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5304
  %30 = load i24, i24* %29, align 4, !dbg !5305
  %31 = and i24 %30, -30721, !dbg !5305
  %32 = or i24 %31, 10240, !dbg !5305
  store i24 %32, i24* %29, align 4, !dbg !5305
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5306
  call void @llvm.dbg.value(metadata i8* %33, metadata !5275, metadata !DIExpression()), !dbg !5276
  br label %56, !dbg !5307

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5308
  %36 = load i24, i24* %35, align 4, !dbg !5309
  %37 = and i24 %36, -30721, !dbg !5309
  %38 = or i24 %37, 12288, !dbg !5309
  store i24 %38, i24* %35, align 4, !dbg !5309
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5310
  call void @llvm.dbg.value(metadata i8* %39, metadata !5275, metadata !DIExpression()), !dbg !5276
  br label %56, !dbg !5311

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %42 = load i24, i24* %41, align 4, !dbg !5313
  %43 = and i24 %42, -30721, !dbg !5313
  %44 = or i24 %43, 14336, !dbg !5313
  store i24 %44, i24* %41, align 4, !dbg !5313
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5314
  call void @llvm.dbg.value(metadata i8* %45, metadata !5275, metadata !DIExpression()), !dbg !5276
  br label %56, !dbg !5315

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5316
  %48 = load i24, i24* %47, align 4, !dbg !5317
  %49 = and i24 %48, -30723, !dbg !5317
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5318
  call void @llvm.dbg.value(metadata i8* %50, metadata !5275, metadata !DIExpression()), !dbg !5276
  %51 = or i24 %49, 16386, !dbg !5319
  store i24 %51, i24* %47, align 4, !dbg !5319
  br label %56, !dbg !5320

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5321
  %54 = load i24, i24* %53, align 4, !dbg !5322
  %55 = and i24 %54, -30721, !dbg !5322
  store i24 %55, i24* %53, align 4, !dbg !5322
  br label %56, !dbg !5323

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5275, metadata !DIExpression()), !dbg !5276
  ret i8* %57, !dbg !5324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5325 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5327, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i8* %1, metadata !5328, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i8 0, metadata !5329, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i8* %1, metadata !5328, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5332
  %3 = load i8, i8* %1, align 1, !dbg !5333
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5334
  store i8 %3, i8* %4, align 1, !dbg !5335
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5336

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5337

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5338
  %9 = load i24, i24* %8, align 4, !dbg !5338
  %10 = and i24 %9, -458753, !dbg !5338
  %11 = or i24 %10, %7, !dbg !5338
  call void @llvm.dbg.label(metadata !5330), !dbg !5339
  %12 = and i24 %9, 30720, !dbg !5340
  %13 = icmp eq i24 %12, 16384, !dbg !5340
  %14 = zext i1 %13 to i24, !dbg !5342
  %15 = or i24 %11, %14, !dbg !5342
  %16 = icmp eq i8 %3, 99, !dbg !5343
  br i1 %16, label %17, label %43, !dbg !5345

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5346
  %19 = icmp ne i24 %18, 0, !dbg !5346
  call void @llvm.dbg.value(metadata i1 %19, metadata !5329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5332
  br label %43, !dbg !5348

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5349
  %22 = load i24, i24* %21, align 4, !dbg !5350
  %23 = and i24 %22, -458753, !dbg !5350
  %24 = or i24 %23, 262144, !dbg !5350
  call void @llvm.dbg.value(metadata i8 1, metadata !5329, metadata !DIExpression()), !dbg !5332
  br label %43, !dbg !5351

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5354
  %27 = load i24, i24* %26, align 4, !dbg !5355
  %28 = and i24 %27, -458753, !dbg !5355
  %29 = or i24 %28, 196608, !dbg !5355
  %30 = and i24 %27, 30720, !dbg !5356
  %31 = icmp eq i24 %30, 16384, !dbg !5356
  br label %43, !dbg !5358

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5359
  %34 = load i24, i24* %33, align 4, !dbg !5360
  %35 = and i24 %34, -458753, !dbg !5360
  %36 = or i24 %35, 196608, !dbg !5360
  %37 = and i24 %34, 30720, !dbg !5361
  %38 = icmp ne i24 %37, 0, !dbg !5361
  br label %43, !dbg !5363

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5364
  %41 = load i24, i24* %40, align 4, !dbg !5365
  %42 = or i24 %41, 1, !dbg !5365
  br label %43, !dbg !5366

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5367
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5368
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5369
  call void @llvm.dbg.value(metadata i8* %48, metadata !5328, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i8 poison, metadata !5329, metadata !DIExpression()), !dbg !5332
  %49 = lshr i24 %44, 1, !dbg !5367
  %50 = and i24 %49, 1, !dbg !5367
  %51 = zext i24 %50 to i32, !dbg !5367
  %52 = or i32 %51, %47, !dbg !5367
  %53 = trunc i32 %52 to i24, !dbg !5367
  %54 = shl nuw nsw i24 %53, 1, !dbg !5367
  %55 = and i24 %44, -3, !dbg !5367
  %56 = or i24 %54, %55, !dbg !5367
  store i24 %56, i24* %46, align 4, !dbg !5367
  ret i8* %48, !dbg !5370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5371 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5375, metadata !DIExpression()), !dbg !5378
  %2 = load i8*, i8** %0, align 4, !dbg !5379
  call void @llvm.dbg.value(metadata i8* %2, metadata !5376, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 0, metadata !5377, metadata !DIExpression()), !dbg !5378
  %3 = load i8, i8* %2, align 1, !dbg !5380
  %4 = zext i8 %3 to i32, !dbg !5381
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5382
  %6 = icmp eq i32 %5, 0, !dbg !5383
  br i1 %6, label %19, label %7, !dbg !5383

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5377, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i8* %10, metadata !5376, metadata !DIExpression()), !dbg !5378
  %11 = mul i32 %9, 10, !dbg !5384
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5386
  call void @llvm.dbg.value(metadata i8* %12, metadata !5376, metadata !DIExpression()), !dbg !5378
  %13 = add i32 %11, -48, !dbg !5387
  %14 = add i32 %13, %8, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %14, metadata !5377, metadata !DIExpression()), !dbg !5378
  %15 = load i8, i8* %12, align 1, !dbg !5380
  %16 = zext i8 %15 to i32, !dbg !5381
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5382
  %18 = icmp eq i32 %17, 0, !dbg !5383
  br i1 %18, label %19, label %7, !dbg !5383, !llvm.loop !5389

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5378
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5378
  store i8* %20, i8** %0, align 4, !dbg !5391
  ret i32 %21, !dbg !5392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5395, metadata !DIExpression()), !dbg !5396
  %2 = add i32 %0, -48, !dbg !5397
  %3 = icmp ult i32 %2, 10, !dbg !5398
  %4 = zext i1 %3 to i32, !dbg !5398
  ret i32 %4, !dbg !5399
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5400 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5405, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 %1, metadata !5406, metadata !DIExpression()), !dbg !5407
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5408, !srcloc !5410
  ret void, !dbg !5411
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5412 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5414, metadata !DIExpression()), !dbg !5422
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5423
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5423
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5415, metadata !DIExpression()), !dbg !5424
  call void @llvm.va_start(i8* nonnull %3), !dbg !5425
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5426
  %5 = load i32, i32* %4, align 4, !dbg !5426
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5426
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5426
  call void @llvm.va_end(i8* nonnull %3), !dbg !5427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5428
  ret void, !dbg !5428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5429 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6085, !srcloc !6086
  ret void, !dbg !6087
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6088 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6090, metadata !DIExpression()), !dbg !6092
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6093
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6094
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6095, !srcloc !6104
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6095
  call void @llvm.dbg.value(metadata i32 %3, metadata !6101, metadata !DIExpression()) #23, !dbg !6105
  call void @llvm.dbg.value(metadata i32 undef, metadata !6102, metadata !DIExpression()) #23, !dbg !6105
  call void @llvm.dbg.value(metadata i32 %3, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32 %3, metadata !6106, metadata !DIExpression()) #23, !dbg !6111
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6113, !srcloc !6114
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6115
  ret i32 0, !dbg !6116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6117 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6119
  %2 = or i32 %1, 512, !dbg !6119
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6119
  ret void, !dbg !6120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6122
  %2 = or i32 %1, 1024, !dbg !6122
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6122
  ret void, !dbg !6123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6126, metadata !DIExpression()), !dbg !6127
  ret i32 0, !dbg !6128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6129 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6132, metadata !DIExpression()), !dbg !6140
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6141
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6141
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6133, metadata !DIExpression()), !dbg !6142
  call void @llvm.va_start(i8* nonnull %3), !dbg !6143
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6144
  %5 = load i32, i32* %4, align 4, !dbg !6144
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6144
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6144
  call void @llvm.va_end(i8* nonnull %3), !dbg !6145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6146
  ret void, !dbg !6146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6147 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i8* %0, metadata !6151, metadata !DIExpression()), !dbg !6153
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6154
  ret void, !dbg !6155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6160, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %1, metadata !6161, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %2, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %1, metadata !6163, metadata !DIExpression()), !dbg !6164
  %4 = icmp eq i32 %2, 0, !dbg !6165
  br i1 %4, label %14, label %5, !dbg !6166

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6164
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6166

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %10, metadata !6162, metadata !DIExpression()), !dbg !6164
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6167
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6169
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %11, metadata !6162, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i8* %12, metadata !6163, metadata !DIExpression()), !dbg !6164
  br i1 %13, label %14, label %8, !dbg !6170, !llvm.loop !6171

14:                                               ; preds = %8, %3
  ret void, !dbg !6173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6179, metadata !DIExpression()), !dbg !6180
  %2 = add i32 %0, -1, !dbg !6181
  %3 = icmp ult i32 %2, 4, !dbg !6181
  %4 = shl i32 %2, 3, !dbg !6181
  %5 = lshr i32 1145657157, %4, !dbg !6181
  %6 = trunc i32 %5 to i8, !dbg !6181
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6181
  ret i8 %7, !dbg !6182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6183 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6187, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i32 %1, metadata !6188, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i32 0, metadata !6189, metadata !DIExpression()), !dbg !6199
  br label %4, !dbg !6200

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6201
  call void @llvm.dbg.value(metadata i32 0, metadata !6191, metadata !DIExpression()), !dbg !6202
  br label %16, !dbg !6203

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6189, metadata !DIExpression()), !dbg !6199
  %6 = icmp ult i32 %5, %1, !dbg !6204
  br i1 %6, label %7, label %11, !dbg !6208

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6209
  %9 = load i8, i8* %8, align 1, !dbg !6209
  %10 = zext i8 %9 to i32, !dbg !6211
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6212
  br label %12, !dbg !6213

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6214
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6216
  call void @llvm.dbg.value(metadata i32 %13, metadata !6189, metadata !DIExpression()), !dbg !6199
  %14 = icmp eq i32 %13, 8, !dbg !6217
  br i1 %14, label %3, label %4, !dbg !6200, !llvm.loop !6218

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6220
  ret void, !dbg !6221

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6191, metadata !DIExpression()), !dbg !6202
  %18 = icmp ult i32 %17, %1, !dbg !6222
  br i1 %18, label %19, label %26, !dbg !6223

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6224
  %21 = load i8, i8* %20, align 1, !dbg !6224
  call void @llvm.dbg.value(metadata i8 %21, metadata !6193, metadata !DIExpression()), !dbg !6225
  %22 = zext i8 %21 to i32, !dbg !6226
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6227
  %24 = icmp eq i32 %23, 0, !dbg !6228
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6227
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6229
  br label %27, !dbg !6230

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6231
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6233
  call void @llvm.dbg.value(metadata i32 %28, metadata !6191, metadata !DIExpression()), !dbg !6202
  %29 = icmp eq i32 %28, 8, !dbg !6234
  br i1 %29, label %15, label %16, !dbg !6203, !llvm.loop !6235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6239, metadata !DIExpression()), !dbg !6240
  %2 = add i32 %0, -32, !dbg !6241
  %3 = icmp ult i32 %2, 95, !dbg !6241
  %4 = zext i1 %3 to i32, !dbg !6241
  ret i32 %4, !dbg !6242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6292, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6293, metadata !DIExpression()), !dbg !6294
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6295
  br i1 %3, label %5, label %4, !dbg !6297

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6298
  br label %5, !dbg !6300

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6301
  ret void, !dbg !6302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6303 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6307, metadata !DIExpression()), !dbg !6308
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6309
  %3 = load i32, i32* %2, align 4, !dbg !6309
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6309
  %5 = load i32, i32* %4, align 4, !dbg !6309
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6309
  %7 = load i32, i32* %6, align 4, !dbg !6309
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6309
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6314
  %9 = load i32, i32* %8, align 4, !dbg !6314
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6314
  %11 = load i32, i32* %10, align 4, !dbg !6314
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6314
  %13 = load i32, i32* %12, align 4, !dbg !6314
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6314
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6319
  %15 = load i32, i32* %14, align 4, !dbg !6319
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6319
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6324
  %17 = load i32, i32* %16, align 4, !dbg !6324
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6324
  ret void, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6330 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6347, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6348, metadata !DIExpression()), !dbg !6350
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6351
  %4 = load i32, i32* %3, align 4, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %4, metadata !6349, metadata !DIExpression()), !dbg !6350
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6354 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6358, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.value(metadata i8* %0, metadata !6359, metadata !DIExpression()), !dbg !6361
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6362
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6362
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6360, metadata !DIExpression()), !dbg !6363
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6363
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6364
  %5 = bitcast i8* %4 to i32*, !dbg !6364
  %6 = load i32, i32* %5, align 4, !dbg !6364
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6365
  store i32 %6, i32* %7, align 4, !dbg !6366
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6367
  unreachable, !dbg !6368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6372, metadata !DIExpression()), !dbg !6373
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  %2 = icmp sgt i32 %0, -1, !dbg !6382
  br i1 %2, label %3, label %8, !dbg !6384

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6385, !srcloc !6387
  %4 = and i32 %0, 31, !dbg !6388
  %5 = shl nuw i32 1, %4, !dbg !6389
  %6 = lshr i32 %0, 5, !dbg !6390
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6391
  store volatile i32 %5, i32* %7, align 4, !dbg !6392
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6393, !srcloc !6394
  br label %8, !dbg !6395

8:                                                ; preds = %3, %1
  ret void, !dbg !6396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6399, metadata !DIExpression()), !dbg !6400
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6401
  ret void, !dbg !6402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6405, metadata !DIExpression()), !dbg !6406
  %2 = icmp sgt i32 %0, -1, !dbg !6407
  br i1 %2, label %3, label %8, !dbg !6409

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6410
  %5 = shl nuw i32 1, %4, !dbg !6412
  %6 = lshr i32 %0, 5, !dbg !6413
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6414
  store volatile i32 %5, i32* %7, align 4, !dbg !6415
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6416, !srcloc !6420
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6421, !srcloc !6424
  br label %8, !dbg !6425

8:                                                ; preds = %3, %1
  ret void, !dbg !6426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6431, metadata !DIExpression()), !dbg !6432
  %2 = lshr i32 %0, 5, !dbg !6433
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6434
  %4 = load volatile i32, i32* %3, align 4, !dbg !6434
  %5 = and i32 %0, 31, !dbg !6435
  %6 = shl nuw i32 1, %5, !dbg !6435
  %7 = and i32 %4, %6, !dbg !6436
  ret i32 %7, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6442, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %1, metadata !6443, metadata !DIExpression()), !dbg !6445
  call void @llvm.dbg.value(metadata i32 %2, metadata !6444, metadata !DIExpression()), !dbg !6445
  %4 = add i32 %1, 1, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %4, metadata !6443, metadata !DIExpression()), !dbg !6445
  %5 = icmp ult i32 %4, 16, !dbg !6449
  br i1 %5, label %7, label %6, !dbg !6452

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6453
  unreachable, !dbg !6453

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6455
  ret void, !dbg !6456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6461, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.value(metadata i32 %1, metadata !6462, metadata !DIExpression()), !dbg !6463
  %3 = trunc i32 %1 to i8, !dbg !6464
  %4 = shl i8 %3, 4, !dbg !6464
  %5 = and i32 %0, 15, !dbg !6466
  %6 = add nsw i32 %5, -4, !dbg !6466
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6466
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6466
  %9 = icmp slt i32 %0, 0, !dbg !6466
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6466
  store volatile i8 %4, i8* %10, align 1, !dbg !6464
  ret void, !dbg !6467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6468 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6470, metadata !DIExpression()), !dbg !6471
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6472
  ret void, !dbg !6473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6474 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6476
  tail call void @z_arm_int_exit() #25, !dbg !6477
  ret void, !dbg !6478
}

; Function Attrs: optsize
declare !dbg !6479 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6480 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6482 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6484
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6485
  tail call void @z_bss_zero() #25, !dbg !6486
  tail call void @z_data_copy() #25, !dbg !6487
  tail call void @z_arm_interrupt_init() #25, !dbg !6488
  tail call void @z_cstart() #27, !dbg !6489
  unreachable, !dbg !6489
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6490 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6491
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6492, !srcloc !6495
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6496, !srcloc !6499
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6501 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6502
  %2 = and i32 %1, -15728641, !dbg !6502
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6502
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6503, !srcloc !6510
  call void @llvm.dbg.value(metadata i32 %3, metadata !6508, metadata !DIExpression()) #23, !dbg !6511
  %4 = and i32 %3, -5, !dbg !6512
  call void @llvm.dbg.value(metadata i32 %4, metadata !6513, metadata !DIExpression()) #23, !dbg !6518
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6522, !srcloc !6499
  ret void, !dbg !6524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6528, metadata !DIExpression()), !dbg !6529
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6530
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6531
  store i32 %0, i32* %3, align 4, !dbg !6532
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6533
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6534
  store i32 %4, i32* %5, align 4, !dbg !6535
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6536
  %7 = or i32 %6, 268435456, !dbg !6536
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6536
  call void @llvm.dbg.value(metadata i32 0, metadata !6537, metadata !DIExpression()) #23, !dbg !6540
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6542, !srcloc !6543
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6544
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6545
  %10 = load i32, i32* %9, align 4, !dbg !6545
  ret i32 %10, !dbg !6546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6547 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6660, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6661, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %2, metadata !6662, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6663, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %4, metadata !6664, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %5, metadata !6665, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %6, metadata !6666, metadata !DIExpression()), !dbg !6668
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6669
  call void @llvm.dbg.value(metadata i8* %8, metadata !6667, metadata !DIExpression()), !dbg !6668
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6670
  %10 = bitcast i8* %9 to i32*, !dbg !6670
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6671
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6672
  %12 = bitcast i8* %8 to i32*, !dbg !6673
  store i32 %11, i32* %12, align 4, !dbg !6674
  %13 = ptrtoint i8* %4 to i32, !dbg !6675
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6676
  %15 = bitcast i8* %14 to i32*, !dbg !6676
  store i32 %13, i32* %15, align 4, !dbg !6677
  %16 = ptrtoint i8* %5 to i32, !dbg !6678
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6679
  %18 = bitcast i8* %17 to i32*, !dbg !6679
  store i32 %16, i32* %18, align 4, !dbg !6680
  %19 = ptrtoint i8* %6 to i32, !dbg !6681
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6682
  %21 = bitcast i8* %20 to i32*, !dbg !6682
  store i32 %19, i32* %21, align 4, !dbg !6683
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6684
  %23 = bitcast i8* %22 to i32*, !dbg !6684
  store i32 16777216, i32* %23, align 4, !dbg !6685
  %24 = ptrtoint i8* %8 to i32, !dbg !6686
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6687
  store i32 %24, i32* %25, align 8, !dbg !6688
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6689
  store i32 0, i32* %26, align 4, !dbg !6690
  ret void, !dbg !6691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6697, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata i32 %1, metadata !6698, metadata !DIExpression()), !dbg !6703
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6704
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6699, metadata !DIExpression()), !dbg !6703
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6705
  br i1 %4, label %19, label %5, !dbg !6707

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6702, metadata !DIExpression()), !dbg !6703
  %6 = icmp eq i32 %0, -22, !dbg !6708
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6708
  %8 = load i32, i32* %7, align 4, !dbg !6708
  br i1 %6, label %16, label %9, !dbg !6710

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6708
  %11 = icmp ule i32 %10, %0, !dbg !6708
  %12 = icmp ugt i32 %8, %0, !dbg !6708
  %13 = and i1 %12, %11, !dbg !6708
  %14 = icmp ugt i32 %8, %1, !dbg !6708
  %15 = and i1 %14, %13, !dbg !6708
  br i1 %15, label %18, label %19, !dbg !6708

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6708
  br i1 %17, label %18, label %19, !dbg !6710

18:                                               ; preds = %9, %16
  br label %19, !dbg !6711

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6703
  ret i32 %20, !dbg !6713
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6714 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6718, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata i8* %1, metadata !6719, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6720, metadata !DIExpression()), !dbg !6721
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6722
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6723
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6724, !srcloc !6725
  unreachable, !dbg !6726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6727 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6745, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %1, metadata !6746, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %2, metadata !6747, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6748, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 0, metadata !6749, metadata !DIExpression()), !dbg !6755
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6756
  call void @llvm.dbg.value(metadata i32 %8, metadata !6750, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6755
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6757
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6757
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6758
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6758
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6754, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6760, metadata !DIExpression()) #23, !dbg !6763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6765, !srcloc !6766
  call void @llvm.dbg.value(metadata i8* %6, metadata !6752, metadata !DIExpression(DW_OP_deref)), !dbg !6755
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6767
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6753, metadata !DIExpression()), !dbg !6755
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6768
  br i1 %11, label %12, label %13, !dbg !6771

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6772
  unreachable, !dbg !6772

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6774
  call void @llvm.dbg.value(metadata i32 %14, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %5, metadata !6751, metadata !DIExpression(DW_OP_deref)), !dbg !6755
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6775
  call void @llvm.dbg.value(metadata i32 %15, metadata !6749, metadata !DIExpression()), !dbg !6755
  %16 = load i8, i8* %5, align 1, !dbg !6776, !range !6778
  call void @llvm.dbg.value(metadata i8 %16, metadata !6751, metadata !DIExpression()), !dbg !6755
  %17 = icmp eq i8 %16, 0, !dbg !6776
  br i1 %17, label %18, label %35, !dbg !6779

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6780
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6781
  %21 = load i8, i8* %6, align 1, !dbg !6782, !range !6778
  call void @llvm.dbg.value(metadata i8 %21, metadata !6752, metadata !DIExpression()), !dbg !6755
  %22 = icmp eq i8 %21, 0, !dbg !6782
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6784
  %24 = load i32, i32* %23, align 4, !dbg !6784
  br i1 %22, label %30, label %25, !dbg !6785

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6786
  %27 = icmp eq i32 %26, 0, !dbg !6789
  br i1 %27, label %28, label %34, !dbg !6790

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6791
  br label %32, !dbg !6793

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6794
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6784
  br label %34, !dbg !6796

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6796
  br label %35, !dbg !6797

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6797
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6797
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6797
  ret void, !dbg !6797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6803, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 %1, metadata !6804, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 %2, metadata !6805, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i8* %3, metadata !6806, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i8 0, metadata !6807, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6808, metadata !DIExpression()), !dbg !6809
  store i8 0, i8* %3, align 1, !dbg !6810
  %5 = icmp ugt i32 %2, -16777217, !dbg !6811
  br i1 %5, label %6, label %17, !dbg !6813

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6814
  %8 = icmp eq i32 %7, 8, !dbg !6814
  br i1 %8, label %9, label %10, !dbg !6814

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6816
  br label %17, !dbg !6822

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6823
  %12 = icmp eq i32 %11, 0, !dbg !6823
  br i1 %12, label %13, label %14, !dbg !6824

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6808, metadata !DIExpression()), !dbg !6809
  store i8 1, i8* %3, align 1, !dbg !6827
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6809
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6808, metadata !DIExpression()), !dbg !6809
  br label %17, !dbg !6830

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6809
  ret %struct.__esf* %18, !dbg !6831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6832 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6836, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i32 %1, metadata !6837, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i8* %2, metadata !6838, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  store i8 0, i8* %2, align 1, !dbg !6841
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6842

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %5, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %12, !dbg !6845

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6846
  call void @llvm.dbg.value(metadata i32 %7, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %12, !dbg !6847

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6848
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %12, !dbg !6849

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6850
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %12, !dbg !6851

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6852
  br label %12, !dbg !6853

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6854
  br label %12, !dbg !6855

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6840
  call void @llvm.dbg.value(metadata i32 %13, metadata !6839, metadata !DIExpression()), !dbg !6840
  ret i32 %13, !dbg !6856
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6857 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6861, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i8* %1, metadata !6862, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.value(metadata i32 0, metadata !6863, metadata !DIExpression()), !dbg !6864
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6865
  store i8 0, i8* %1, align 1, !dbg !6870
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6871
  %4 = and i32 %3, 2, !dbg !6873
  %5 = icmp eq i32 %4, 0, !dbg !6874
  br i1 %5, label %7, label %6, !dbg !6875

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6876
  br label %38, !dbg !6882

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6883
  %9 = icmp sgt i32 %8, -1, !dbg !6885
  br i1 %9, label %11, label %10, !dbg !6886

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6887
  br label %38, !dbg !6893

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6894
  %13 = and i32 %12, 1073741824, !dbg !6896
  %14 = icmp eq i32 %13, 0, !dbg !6897
  br i1 %14, label %37, label %15, !dbg !6898

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6899
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6905
  br i1 %16, label %17, label %21, !dbg !6907

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6908
  %19 = load i32, i32* %18, align 4, !dbg !6908
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6908
  %20 = load i32, i32* %18, align 4, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %20, metadata !6863, metadata !DIExpression()), !dbg !6864
  br label %38, !dbg !6915

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6916
  %23 = and i32 %22, 255, !dbg !6918
  %24 = icmp eq i32 %23, 0, !dbg !6919
  br i1 %24, label %27, label %25, !dbg !6920

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6921
  call void @llvm.dbg.value(metadata i32 %26, metadata !6863, metadata !DIExpression()), !dbg !6864
  br label %38, !dbg !6923

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  %29 = and i32 %28, 65280, !dbg !6926
  %30 = icmp eq i32 %29, 0, !dbg !6927
  br i1 %30, label %32, label %31, !dbg !6928

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6929
  call void @llvm.dbg.value(metadata i32 0, metadata !6863, metadata !DIExpression()), !dbg !6864
  br label %38, !dbg !6931

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6932
  %34 = icmp ult i32 %33, 65536, !dbg !6934
  br i1 %34, label %36, label %35, !dbg !6935

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6936
  call void @llvm.dbg.value(metadata i32 0, metadata !6863, metadata !DIExpression()), !dbg !6864
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !6938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6938
  unreachable, !dbg !6938

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !6943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6943
  unreachable, !dbg !6943

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6864
  call void @llvm.dbg.value(metadata i32 %39, metadata !6863, metadata !DIExpression()), !dbg !6864
  ret i32 %39, !dbg !6948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6949 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6951, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i32 %1, metadata !6952, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i8* %2, metadata !6953, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i32 0, metadata !6954, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.value(metadata i32 -22, metadata !6955, metadata !DIExpression()), !dbg !6964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6965
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %5 = and i32 %4, 16, !dbg !6972
  %6 = icmp eq i32 %5, 0, !dbg !6973
  br i1 %6, label %8, label %7, !dbg !6974

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6975
  br label %8, !dbg !6981

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6982
  %10 = and i32 %9, 8, !dbg !6984
  %11 = icmp eq i32 %10, 0, !dbg !6985
  br i1 %11, label %13, label %12, !dbg !6986

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6987
  br label %13, !dbg !6993

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6994
  %15 = and i32 %14, 2, !dbg !6995
  %16 = icmp eq i32 %15, 0, !dbg !6996
  br i1 %16, label %27, label %17, !dbg !6997

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6998
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %18, metadata !6956, metadata !DIExpression()), !dbg !7004
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7005
  %20 = and i32 %19, 128, !dbg !7007
  %21 = icmp eq i32 %20, 0, !dbg !7008
  br i1 %21, label %27, label %22, !dbg !7009

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6955, metadata !DIExpression()), !dbg !6964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7010
  %23 = icmp eq i32 %1, 0, !dbg !7016
  br i1 %23, label %27, label %24, !dbg !7018

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7019
  %26 = and i32 %25, -129, !dbg !7019
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7019
  br label %27, !dbg !7021

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6964
  call void @llvm.dbg.value(metadata i32 %28, metadata !6955, metadata !DIExpression()), !dbg !6964
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7022
  %30 = and i32 %29, 1, !dbg !7024
  %31 = icmp eq i32 %30, 0, !dbg !7025
  br i1 %31, label %33, label %32, !dbg !7026

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7027
  br label %33, !dbg !7033

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7034
  %35 = and i32 %34, 32, !dbg !7036
  %36 = icmp eq i32 %35, 0, !dbg !7037
  br i1 %36, label %38, label %37, !dbg !7038

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7039
  br label %38, !dbg !7045

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  %40 = and i32 %39, 16, !dbg !7047
  %41 = icmp eq i32 %40, 0, !dbg !7047
  br i1 %41, label %42, label %46, !dbg !7048

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7049
  %44 = and i32 %43, 2, !dbg !7050
  %45 = icmp eq i32 %44, 0, !dbg !7050
  br i1 %45, label %60, label %46, !dbg !7051

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7052
  %48 = and i32 %47, 2048, !dbg !7053
  %49 = icmp eq i32 %48, 0, !dbg !7053
  br i1 %49, label %60, label %50, !dbg !7054

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7055
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7056
  call void @llvm.dbg.value(metadata i32 %52, metadata !6959, metadata !DIExpression()), !dbg !7057
  %53 = icmp eq i32 %52, 0, !dbg !7058
  br i1 %53, label %55, label %54, !dbg !7060

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7061, metadata !DIExpression()) #23, !dbg !7064
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7067, !srcloc !7068
  call void @llvm.dbg.value(metadata i32 2, metadata !6954, metadata !DIExpression()), !dbg !6964
  br label %60, !dbg !7069

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7070
  %57 = and i32 %56, 16, !dbg !7070
  %58 = icmp eq i32 %57, 0, !dbg !7070
  br i1 %58, label %60, label %59, !dbg !7074

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7075
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7075
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7075
  unreachable, !dbg !7075

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6964
  call void @llvm.dbg.value(metadata i32 %61, metadata !6954, metadata !DIExpression()), !dbg !6964
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7077
  %63 = and i32 %62, 32, !dbg !7079
  %64 = icmp eq i32 %63, 0, !dbg !7080
  br i1 %64, label %68, label %65, !dbg !7081

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7082
  %67 = and i32 %66, -8193, !dbg !7082
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7082
  br label %68, !dbg !7084

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7085
  %70 = or i32 %69, 255, !dbg !7085
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7085
  store i8 0, i8* %2, align 1, !dbg !7086
  ret i32 %61, !dbg !7087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7088 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7092, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i32 %0, metadata !7093, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i8* %1, metadata !7094, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.value(metadata i32 0, metadata !7095, metadata !DIExpression()), !dbg !7099
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7100
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7105
  %4 = and i32 %3, 4096, !dbg !7107
  %5 = icmp eq i32 %4, 0, !dbg !7107
  br i1 %5, label %7, label %6, !dbg !7108

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7109
  br label %7, !dbg !7115

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7116
  %9 = and i32 %8, 2048, !dbg !7118
  %10 = icmp eq i32 %9, 0, !dbg !7118
  br i1 %10, label %12, label %11, !dbg !7119

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7120
  br label %12, !dbg !7126

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7127
  %14 = and i32 %13, 512, !dbg !7128
  %15 = icmp eq i32 %14, 0, !dbg !7128
  br i1 %15, label %26, label %16, !dbg !7129

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7130
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7135
  call void @llvm.dbg.value(metadata i32 %17, metadata !7096, metadata !DIExpression()), !dbg !7136
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7137
  %19 = and i32 %18, 32768, !dbg !7139
  %20 = icmp eq i32 %19, 0, !dbg !7140
  br i1 %20, label %26, label %21, !dbg !7141

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7142
  %22 = icmp eq i32 %0, 0, !dbg !7148
  br i1 %22, label %26, label %23, !dbg !7150

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  %25 = and i32 %24, -32769, !dbg !7151
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  br label %26, !dbg !7153

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7154
  %28 = and i32 %27, 1024, !dbg !7156
  %29 = icmp eq i32 %28, 0, !dbg !7156
  br i1 %29, label %31, label %30, !dbg !7157

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7158
  br label %31, !dbg !7164

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7165
  %33 = and i32 %32, 256, !dbg !7167
  %34 = icmp eq i32 %33, 0, !dbg !7168
  br i1 %34, label %35, label %39, !dbg !7169

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7170
  %37 = and i32 %36, 8192, !dbg !7172
  %38 = icmp eq i32 %37, 0, !dbg !7172
  br i1 %38, label %41, label %39, !dbg !7173

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7174
  br label %41, !dbg !7175

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7175
  %43 = or i32 %42, 65280, !dbg !7175
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7175
  store i8 0, i8* %1, align 1, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7178 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7184, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 0, metadata !7185, metadata !DIExpression()), !dbg !7186
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7187
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7192
  %2 = and i32 %1, 33554432, !dbg !7194
  %3 = icmp eq i32 %2, 0, !dbg !7195
  br i1 %3, label %5, label %4, !dbg !7196

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7197
  br label %5, !dbg !7203

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7204
  %7 = and i32 %6, 16777216, !dbg !7206
  %8 = icmp eq i32 %7, 0, !dbg !7207
  br i1 %8, label %10, label %9, !dbg !7208

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7209
  br label %10, !dbg !7215

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7216
  %12 = and i32 %11, 524288, !dbg !7218
  %13 = icmp eq i32 %12, 0, !dbg !7219
  br i1 %13, label %15, label %14, !dbg !7220

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7221
  br label %15, !dbg !7227

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7228
  %17 = and i32 %16, 262144, !dbg !7230
  %18 = icmp eq i32 %17, 0, !dbg !7231
  br i1 %18, label %20, label %19, !dbg !7232

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7233
  br label %20, !dbg !7239

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7240
  %22 = and i32 %21, 131072, !dbg !7242
  %23 = icmp eq i32 %22, 0, !dbg !7243
  br i1 %23, label %25, label %24, !dbg !7244

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7245
  br label %25, !dbg !7251

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7252
  %27 = and i32 %26, 65536, !dbg !7254
  %28 = icmp eq i32 %27, 0, !dbg !7255
  br i1 %28, label %30, label %29, !dbg !7256

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7257
  br label %30, !dbg !7263

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7264
  %32 = or i32 %31, -65536, !dbg !7264
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7264
  ret void, !dbg !7265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7266 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7270, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i8* %0, metadata !7271, metadata !DIExpression()), !dbg !7272
  store i8 0, i8* %0, align 1, !dbg !7273
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69) #25, !dbg !7274
  ret void, !dbg !7279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7280 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %0, metadata !7285, metadata !DIExpression()), !dbg !7286
  %2 = icmp slt i32 %0, 16, !dbg !7287
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7287
  %4 = add nsw i32 %0, -16, !dbg !7287
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7287
  ret void, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7293 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7297, metadata !DIExpression()), !dbg !7300
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7301
  %3 = load i32, i32* %2, align 4, !dbg !7301
  %4 = inttoptr i32 %3 to i16*, !dbg !7302
  call void @llvm.dbg.value(metadata i16* %4, metadata !7298, metadata !DIExpression()), !dbg !7300
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7303
  %6 = or i32 %5, 256, !dbg !7303
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7303
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7304, !srcloc !7307
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7308, !srcloc !7311
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7312
  %8 = load i16, i16* %7, align 2, !dbg !7313
  call void @llvm.dbg.value(metadata i16 %8, metadata !7299, metadata !DIExpression()), !dbg !7300
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7314
  %10 = and i32 %9, -257, !dbg !7314
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7314
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7315, !srcloc !7307
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7317, !srcloc !7311
  %11 = icmp eq i16 %8, -8446, !dbg !7319
  ret i1 %11, !dbg !7321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7322 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7323
  %2 = or i32 %1, 16, !dbg !7323
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7325 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7328, metadata !DIExpression()), !dbg !7329
  br label %1, !dbg !7330

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7328, metadata !DIExpression()), !dbg !7329
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7332
  %3 = add nuw nsw i32 %2, 1, !dbg !7335
  call void @llvm.dbg.value(metadata i32 %3, metadata !7328, metadata !DIExpression()), !dbg !7329
  %4 = icmp eq i32 %3, 97, !dbg !7336
  br i1 %4, label %5, label %1, !dbg !7330, !llvm.loop !7337

5:                                                ; preds = %1
  ret void, !dbg !7339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #14 !dbg !7340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7342, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata i32 1, metadata !7343, metadata !DIExpression()), !dbg !7344
  %2 = and i32 %0, 15, !dbg !7345
  %3 = add nsw i32 %2, -4, !dbg !7345
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7345
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7345
  %6 = icmp slt i32 %0, 0, !dbg !7345
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7345
  store volatile i8 16, i8* %7, align 1, !dbg !7346
  ret void, !dbg !7348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7458, metadata !DIExpression()), !dbg !7459
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7460
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7462
  br i1 %3, label %4, label %12, !dbg !7463

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7464, !srcloc !7476
  call void @llvm.dbg.value(metadata i32 %5, metadata !7467, metadata !DIExpression()) #23, !dbg !7477
  %6 = icmp eq i32 %5, 0, !dbg !7478
  br i1 %6, label %12, label %7, !dbg !7479

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7480
  %9 = or i32 %8, 268435456, !dbg !7480
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7480
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7482
  %11 = and i32 %10, -32769, !dbg !7482
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7482
  br label %12, !dbg !7483

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7484
  ret void, !dbg !7485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7486 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7489
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7490
  %3 = load i32, i32* %2, align 4, !dbg !7490
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7489
  %4 = add i32 %3, -64, !dbg !7492
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7489
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7493
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7494
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7495
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7489
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7496
  ret void, !dbg !7497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7498 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7499
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7500, !srcloc !7503
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7504, !srcloc !7507
  ret void, !dbg !7508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7509 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7510, !srcloc !7513
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7514
  ret void, !dbg !7515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7516 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7531, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8 %1, metadata !7532, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %3, metadata !7534, metadata !DIExpression()), !dbg !7535
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7536
  %6 = icmp eq i32 %5, -22, !dbg !7538
  br i1 %6, label %7, label %9, !dbg !7539

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7540
  %8 = zext i8 %1 to i32, !dbg !7540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7540
  unreachable, !dbg !7540

9:                                                ; preds = %4
  ret void, !dbg !7545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7546 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7551, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i8 %1, metadata !7552, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 undef, metadata !7553, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.value(metadata i32 undef, metadata !7554, metadata !DIExpression()), !dbg !7556
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7557
  call void @llvm.dbg.value(metadata i8 %3, metadata !7555, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7556
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %4, metadata !7555, metadata !DIExpression()), !dbg !7556
  %5 = trunc i32 %4 to i8, !dbg !7559
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7560
  ret i32 %4, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7562 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7566, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8 %1, metadata !7567, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i8 %2, metadata !7568, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i1 %3, metadata !7569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7572
  %5 = zext i8 %2 to i32, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %5, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 0, metadata !7570, metadata !DIExpression()), !dbg !7572
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 0, metadata !7570, metadata !DIExpression()), !dbg !7572
  %7 = icmp eq i8 %1, 0, !dbg !7574
  br i1 %7, label %30, label %8, !dbg !7577

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7571, metadata !DIExpression()), !dbg !7572
  call void @llvm.dbg.value(metadata i32 %10, metadata !7570, metadata !DIExpression()), !dbg !7572
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7578
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7581
  %13 = load i32, i32* %12, align 4, !dbg !7581
  %14 = icmp eq i32 %13, 0, !dbg !7582
  br i1 %14, label %26, label %15, !dbg !7583

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7584

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7586
  %18 = icmp eq i32 %17, 0, !dbg !7586
  br i1 %18, label %19, label %20, !dbg !7587

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7588
  br label %30, !dbg !7594

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7595
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %22, metadata !7571, metadata !DIExpression()), !dbg !7572
  %23 = icmp eq i32 %22, -22, !dbg !7597
  br i1 %23, label %30, label %24, !dbg !7599

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %25, metadata !7571, metadata !DIExpression()), !dbg !7572
  br label %26, !dbg !7601

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7572
  call void @llvm.dbg.value(metadata i32 %27, metadata !7571, metadata !DIExpression()), !dbg !7572
  %28 = add nuw nsw i32 %10, 1, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %28, metadata !7570, metadata !DIExpression()), !dbg !7572
  %29 = icmp eq i32 %28, %6, !dbg !7574
  br i1 %29, label %30, label %8, !dbg !7577, !llvm.loop !7603

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7572
  ret i32 %31, !dbg !7605
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7606 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7610, metadata !DIExpression()), !dbg !7612
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7613
  %3 = load i32, i32* %2, align 4, !dbg !7613
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7614, !range !7615
  %5 = icmp ult i32 %4, 2, !dbg !7614
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7616
  br i1 %7, label %8, label %15, !dbg !7616

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7617
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7618
  %11 = load i32, i32* %10, align 4, !dbg !7618
  %12 = and i32 %11, %9, !dbg !7619
  %13 = icmp eq i32 %12, 0, !dbg !7620
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7611, metadata !DIExpression()), !dbg !7612
  ret i32 %16, !dbg !7621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7622 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7626, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7627, metadata !DIExpression()), !dbg !7629
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7630
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7630
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7628, metadata !DIExpression()), !dbg !7631
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7632
  %6 = load i32, i32* %5, align 4, !dbg !7632
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7633
  store i32 %6, i32* %7, align 4, !dbg !7634
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7635
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7636
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7637
  %11 = load i32, i32* %10, align 4, !dbg !7637
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7638
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7639
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7640
  ret i32 %12, !dbg !7641
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7642 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7649, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7650, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i32 undef, metadata !7651, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i32 %2, metadata !7652, metadata !DIExpression()), !dbg !7653
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7654
  %5 = load i32, i32* %4, align 4, !dbg !7654
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7655
  %7 = or i32 %6, %5, !dbg !7656
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7657
  store i32 %7, i32* %8, align 4, !dbg !7658
  ret void, !dbg !7659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7660 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7664, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7665, metadata !DIExpression()), !dbg !7666
  %3 = zext i8 %0 to i32, !dbg !7667
  %4 = icmp ugt i8 %0, 7, !dbg !7669
  br i1 %4, label %5, label %6, !dbg !7670

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7671
  br label %7, !dbg !7677

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7678
  br label %7, !dbg !7679

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7666
  ret i32 %8, !dbg !7680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7685, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7686, metadata !DIExpression()), !dbg !7687
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7688
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7689
  %4 = load i32, i32* %3, align 4, !dbg !7689
  %5 = and i32 %4, -32, !dbg !7690
  %6 = or i32 %5, %0, !dbg !7691
  %7 = or i32 %6, 16, !dbg !7691
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7692
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7693
  %9 = load i32, i32* %8, align 4, !dbg !7693
  %10 = or i32 %9, 1, !dbg !7694
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7695
  ret void, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7700, metadata !DIExpression()), !dbg !7701
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7708, metadata !DIExpression()), !dbg !7709
  %2 = icmp ult i32 %0, 33, !dbg !7710
  br i1 %2, label %11, label %3, !dbg !7712

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7713
  br i1 %4, label %11, label %5, !dbg !7715

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7716
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7717, !range !7615
  %8 = mul nsw i32 %7, -2, !dbg !7718
  %9 = add nsw i32 %8, 62, !dbg !7718
  %10 = and i32 %9, 62, !dbg !7719
  br label %11, !dbg !7720

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7709
  ret i32 %12, !dbg !7721
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7722 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7726, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.value(metadata i8 %1, metadata !7727, metadata !DIExpression()), !dbg !7728
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7729
  %4 = icmp eq i32 %3, -22, !dbg !7731
  br i1 %4, label %5, label %7, !dbg !7732

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7733
  %6 = zext i8 %1 to i32, !dbg !7733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7733
  unreachable, !dbg !7733

7:                                                ; preds = %2
  ret void, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7739 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7743, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i8 %1, metadata !7744, metadata !DIExpression()), !dbg !7750
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7751
  call void @llvm.dbg.value(metadata i8 %3, metadata !7745, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7750
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7752
  call void @llvm.dbg.value(metadata i32 %4, metadata !7745, metadata !DIExpression()), !dbg !7750
  %5 = icmp ne i32 %4, -22, !dbg !7753
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7754
  call void @llvm.dbg.value(metadata i32 %4, metadata !7746, metadata !DIExpression()), !dbg !7755
  br i1 %7, label %8, label %12, !dbg !7754

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7746, metadata !DIExpression()), !dbg !7755
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7756
  %10 = add i32 %9, 1, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %10, metadata !7746, metadata !DIExpression()), !dbg !7755
  %11 = icmp eq i32 %10, 8, !dbg !7760
  br i1 %11, label %12, label %8, !dbg !7761, !llvm.loop !7762

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7768, metadata !DIExpression()), !dbg !7769
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7770
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7771
  ret void, !dbg !7772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7773 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7778
  %2 = icmp ugt i32 %1, 8, !dbg !7780
  br i1 %2, label %3, label %4, !dbg !7781

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7782
  unreachable, !dbg !7782

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7787
  call void @llvm.dbg.value(metadata i32 0, metadata !7777, metadata !DIExpression()), !dbg !7788
  %5 = icmp eq i32 %1, 0, !dbg !7789
  br i1 %5, label %13, label %6, !dbg !7792

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7792

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7777, metadata !DIExpression()), !dbg !7788
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7793
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7795
  %11 = add nuw i32 %9, 1, !dbg !7796
  call void @llvm.dbg.value(metadata i32 %11, metadata !7777, metadata !DIExpression()), !dbg !7788
  %12 = icmp eq i32 %11, %1, !dbg !7789
  br i1 %12, label %13, label %8, !dbg !7792, !llvm.loop !7797

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7799
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7800
  tail call void @arm_core_mpu_enable() #24, !dbg !7801
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7802
  %16 = and i32 %15, 65280, !dbg !7802
  %17 = icmp eq i32 %16, 2048, !dbg !7802
  br i1 %17, label %19, label %18, !dbg !7805

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7806
  unreachable, !dbg !7806

19:                                               ; preds = %13
  ret i32 0, !dbg !7808
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7816, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8* %1, metadata !7817, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8* %0, metadata !7818, metadata !DIExpression()), !dbg !7819
  %3 = load i8, i8* %1, align 1, !dbg !7820
  %4 = icmp eq i8 %3, 0, !dbg !7821
  br i1 %4, label %13, label %5, !dbg !7822

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7816, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8* %8, metadata !7817, metadata !DIExpression()), !dbg !7819
  store i8 %6, i8* %7, align 1, !dbg !7823
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7825
  call void @llvm.dbg.value(metadata i8* %9, metadata !7816, metadata !DIExpression()), !dbg !7819
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7826
  call void @llvm.dbg.value(metadata i8* %10, metadata !7817, metadata !DIExpression()), !dbg !7819
  %11 = load i8, i8* %10, align 1, !dbg !7820
  %12 = icmp eq i8 %11, 0, !dbg !7821
  br i1 %12, label %13, label %5, !dbg !7822, !llvm.loop !7827

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7829
  ret i8* %0, !dbg !7830
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7835, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %1, metadata !7836, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 %2, metadata !7837, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %0, metadata !7838, metadata !DIExpression()), !dbg !7839
  %4 = icmp eq i32 %2, 0, !dbg !7840
  br i1 %4, label %22, label %5, !dbg !7841

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7835, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 %7, metadata !7837, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i8* %8, metadata !7836, metadata !DIExpression()), !dbg !7839
  %9 = load i8, i8* %8, align 1, !dbg !7842
  %10 = icmp eq i8 %9, 0, !dbg !7843
  br i1 %10, label %16, label %11, !dbg !7844

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7845
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7847
  call void @llvm.dbg.value(metadata i8* %12, metadata !7836, metadata !DIExpression()), !dbg !7839
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7848
  call void @llvm.dbg.value(metadata i8* %13, metadata !7835, metadata !DIExpression()), !dbg !7839
  %14 = add i32 %7, -1, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %14, metadata !7837, metadata !DIExpression()), !dbg !7839
  %15 = icmp eq i32 %14, 0, !dbg !7840
  br i1 %15, label %22, label %5, !dbg !7841, !llvm.loop !7850

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7835, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.value(metadata i32 %18, metadata !7837, metadata !DIExpression()), !dbg !7839
  store i8 0, i8* %17, align 1, !dbg !7852
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7854
  call void @llvm.dbg.value(metadata i8* %19, metadata !7835, metadata !DIExpression()), !dbg !7839
  %20 = add i32 %18, -1, !dbg !7855
  call void @llvm.dbg.value(metadata i32 %20, metadata !7837, metadata !DIExpression()), !dbg !7839
  %21 = icmp eq i32 %20, 0, !dbg !7856
  br i1 %21, label %22, label %16, !dbg !7857, !llvm.loop !7858

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7865, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.value(metadata i32 %1, metadata !7866, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.value(metadata i32 %1, metadata !7867, metadata !DIExpression()), !dbg !7868
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7869

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7865, metadata !DIExpression()), !dbg !7868
  %6 = load i8, i8* %5, align 1, !dbg !7870
  %7 = icmp eq i8 %6, %3, !dbg !7871
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7872
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7873
  call void @llvm.dbg.value(metadata i8* %10, metadata !7865, metadata !DIExpression()), !dbg !7868
  br i1 %9, label %11, label %4, !dbg !7872, !llvm.loop !7875

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7877
  ret i8* %12, !dbg !7878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7881, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i32 %1, metadata !7882, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* null, metadata !7883, metadata !DIExpression()), !dbg !7884
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7885

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7884
  call void @llvm.dbg.value(metadata i8* %6, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.value(metadata i8* %5, metadata !7881, metadata !DIExpression()), !dbg !7884
  %7 = load i8, i8* %5, align 1, !dbg !7886
  %8 = icmp eq i8 %7, %3, !dbg !7889
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %9, metadata !7883, metadata !DIExpression()), !dbg !7884
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7891
  call void @llvm.dbg.value(metadata i8* %10, metadata !7881, metadata !DIExpression()), !dbg !7884
  %11 = icmp eq i8 %7, 0, !dbg !7892
  br i1 %11, label %12, label %4, !dbg !7892, !llvm.loop !7893

12:                                               ; preds = %4
  ret i8* %9, !dbg !7895
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7900, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32 0, metadata !7901, metadata !DIExpression()), !dbg !7902
  %2 = load i8, i8* %0, align 1, !dbg !7903
  %3 = icmp eq i8 %2, 0, !dbg !7904
  br i1 %3, label %11, label %4, !dbg !7905

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7901, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i8* %6, metadata !7900, metadata !DIExpression()), !dbg !7902
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7906
  call void @llvm.dbg.value(metadata i8* %7, metadata !7900, metadata !DIExpression()), !dbg !7902
  %8 = add i32 %5, 1, !dbg !7908
  call void @llvm.dbg.value(metadata i32 %8, metadata !7901, metadata !DIExpression()), !dbg !7902
  %9 = load i8, i8* %7, align 1, !dbg !7903
  %10 = icmp eq i8 %9, 0, !dbg !7904
  br i1 %10, label %11, label %4, !dbg !7905, !llvm.loop !7909

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7902
  ret i32 %12, !dbg !7911
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7912 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7916, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 %1, metadata !7917, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i32 0, metadata !7918, metadata !DIExpression()), !dbg !7919
  %3 = load i8, i8* %0, align 1, !dbg !7920
  %4 = icmp ne i8 %3, 0, !dbg !7921
  %5 = icmp ne i32 %1, 0, !dbg !7922
  %6 = and i1 %4, %5, !dbg !7922
  br i1 %6, label %7, label %16, !dbg !7923

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7918, metadata !DIExpression()), !dbg !7919
  call void @llvm.dbg.value(metadata i8* %9, metadata !7916, metadata !DIExpression()), !dbg !7919
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7924
  call void @llvm.dbg.value(metadata i8* %10, metadata !7916, metadata !DIExpression()), !dbg !7919
  %11 = add nuw i32 %8, 1, !dbg !7926
  call void @llvm.dbg.value(metadata i32 %11, metadata !7918, metadata !DIExpression()), !dbg !7919
  %12 = load i8, i8* %10, align 1, !dbg !7920
  %13 = icmp ne i8 %12, 0, !dbg !7921
  %14 = icmp ult i32 %11, %1, !dbg !7922
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7922
  br i1 %15, label %7, label %16, !dbg !7923, !llvm.loop !7927

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7919
  ret i32 %17, !dbg !7929
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7930 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7934, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i8* %1, metadata !7935, metadata !DIExpression()), !dbg !7936
  %3 = load i8, i8* %0, align 1, !dbg !7937
  %4 = load i8, i8* %1, align 1, !dbg !7938
  %5 = icmp ne i8 %3, %4, !dbg !7939
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7940
  br i1 %7, label %18, label %8, !dbg !7940

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7935, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i8* %10, metadata !7934, metadata !DIExpression()), !dbg !7936
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7941
  call void @llvm.dbg.value(metadata i8* %11, metadata !7934, metadata !DIExpression()), !dbg !7936
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7943
  call void @llvm.dbg.value(metadata i8* %12, metadata !7935, metadata !DIExpression()), !dbg !7936
  %13 = load i8, i8* %11, align 1, !dbg !7937
  %14 = load i8, i8* %12, align 1, !dbg !7938
  %15 = icmp ne i8 %13, %14, !dbg !7939
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7940
  br i1 %17, label %18, label %8, !dbg !7940, !llvm.loop !7944

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7937
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7938
  %21 = zext i8 %19 to i32, !dbg !7947
  %22 = zext i8 %20 to i32, !dbg !7948
  %23 = sub nsw i32 %21, %22, !dbg !7949
  ret i32 %23, !dbg !7950
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7951 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7955, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i8* %1, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i32 %2, metadata !7957, metadata !DIExpression()), !dbg !7958
  %4 = icmp eq i32 %2, 0, !dbg !7959
  br i1 %4, label %23, label %5, !dbg !7959

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7957, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i8* %7, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i8* %8, metadata !7955, metadata !DIExpression()), !dbg !7958
  %9 = load i8, i8* %8, align 1, !dbg !7960
  %10 = load i8, i8* %7, align 1, !dbg !7961
  %11 = icmp ne i8 %9, %10, !dbg !7962
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7963
  br i1 %13, label %19, label %14, !dbg !7963

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7964
  call void @llvm.dbg.value(metadata i8* %15, metadata !7955, metadata !DIExpression()), !dbg !7958
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7966
  call void @llvm.dbg.value(metadata i8* %16, metadata !7956, metadata !DIExpression()), !dbg !7958
  %17 = add i32 %6, -1, !dbg !7967
  call void @llvm.dbg.value(metadata i32 %17, metadata !7957, metadata !DIExpression()), !dbg !7958
  %18 = icmp eq i32 %17, 0, !dbg !7959
  br i1 %18, label %23, label %5, !dbg !7959, !llvm.loop !7968

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7971
  %21 = zext i8 %10 to i32, !dbg !7972
  %22 = sub nsw i32 %20, %21, !dbg !7973
  br label %23, !dbg !7974

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7974
  ret i32 %24, !dbg !7975
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7976 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7980, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8* %1, metadata !7981, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.value(metadata i8** %2, metadata !7982, metadata !DIExpression()), !dbg !7985
  %4 = icmp eq i8* %0, null, !dbg !7986
  br i1 %4, label %5, label %7, !dbg !7986

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7987
  br label %7, !dbg !7986

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7986
  call void @llvm.dbg.value(metadata i8* %8, metadata !7983, metadata !DIExpression()), !dbg !7985
  %9 = load i8, i8* %8, align 1, !dbg !7988
  %10 = icmp eq i8 %9, 0, !dbg !7988
  br i1 %10, label %33, label %11, !dbg !7989

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7983, metadata !DIExpression()), !dbg !7985
  %14 = zext i8 %12 to i32, !dbg !7988
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7990
  %16 = icmp eq i8* %15, null, !dbg !7989
  br i1 %16, label %21, label %17, !dbg !7991

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7992
  call void @llvm.dbg.value(metadata i8* %18, metadata !7983, metadata !DIExpression()), !dbg !7985
  %19 = load i8, i8* %18, align 1, !dbg !7988
  %20 = icmp eq i8 %19, 0, !dbg !7988
  br i1 %20, label %33, label %11, !dbg !7989, !llvm.loop !7994

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7984, metadata !DIExpression()), !dbg !7985
  %24 = zext i8 %22 to i32, !dbg !7996
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7997
  %26 = icmp eq i8* %25, null, !dbg !7998
  br i1 %26, label %27, label %31, !dbg !7999

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8000
  call void @llvm.dbg.value(metadata i8* %28, metadata !7984, metadata !DIExpression()), !dbg !7985
  %29 = load i8, i8* %28, align 1, !dbg !7996
  %30 = icmp eq i8 %29, 0, !dbg !7996
  br i1 %30, label %33, label %21, !dbg !8002, !llvm.loop !8003

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8005
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8008
  br label %33, !dbg !8009

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7985
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7985
  store i8* %34, i8** %2, align 4, !dbg !7985
  ret i8* %35, !dbg !8010
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8013, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.value(metadata i8* %1, metadata !8014, metadata !DIExpression()), !dbg !8015
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8016
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8017
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8018
  ret i8* %0, !dbg !8019
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8022, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %1, metadata !8023, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %2, metadata !8024, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %0, metadata !8025, metadata !DIExpression()), !dbg !8027
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8028
  call void @llvm.dbg.value(metadata i32 %4, metadata !8026, metadata !DIExpression()), !dbg !8027
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8029
  call void @llvm.dbg.value(metadata i8* %5, metadata !8022, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %1, metadata !8023, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %2, metadata !8024, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %2, metadata !8024, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8027
  %6 = icmp eq i32 %2, 0, !dbg !8030
  br i1 %6, label %18, label %7, !dbg !8031

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %9, metadata !8022, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i8* %10, metadata !8023, metadata !DIExpression()), !dbg !8027
  %12 = load i8, i8* %10, align 1, !dbg !8033
  %13 = icmp eq i8 %12, 0, !dbg !8034
  br i1 %13, label %18, label %14, !dbg !8035

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %15, metadata !8023, metadata !DIExpression()), !dbg !8027
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8038
  call void @llvm.dbg.value(metadata i8* %16, metadata !8022, metadata !DIExpression()), !dbg !8027
  store i8 %12, i8* %9, align 1, !dbg !8039
  call void @llvm.dbg.value(metadata i32 %11, metadata !8024, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.value(metadata i32 %11, metadata !8024, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8027
  %17 = icmp eq i32 %11, 0, !dbg !8030
  br i1 %17, label %18, label %7, !dbg !8031, !llvm.loop !8040

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8027
  store i8 0, i8* %19, align 1, !dbg !8042
  ret i8* %0, !dbg !8043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8048, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %1, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %2, metadata !8050, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %1, metadata !8052, metadata !DIExpression()), !dbg !8053
  %4 = icmp eq i32 %2, 0, !dbg !8054
  br i1 %4, label %31, label %5, !dbg !8056

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %0, metadata !8051, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %2, metadata !8050, metadata !DIExpression()), !dbg !8053
  %6 = add i32 %2, -1, !dbg !8057
  call void @llvm.dbg.value(metadata i32 %6, metadata !8050, metadata !DIExpression()), !dbg !8053
  %7 = icmp eq i32 %6, 0, !dbg !8058
  br i1 %7, label %23, label %8, !dbg !8059

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8060
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8060
  br label %11, !dbg !8060

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %14, metadata !8051, metadata !DIExpression()), !dbg !8053
  %15 = load i8, i8* %14, align 1, !dbg !8061
  %16 = load i8, i8* %13, align 1, !dbg !8062
  %17 = icmp eq i8 %15, %16, !dbg !8063
  br i1 %17, label %18, label %23, !dbg !8060

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %19, metadata !8051, metadata !DIExpression()), !dbg !8053
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8066
  call void @llvm.dbg.value(metadata i8* %20, metadata !8052, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i32 %12, metadata !8050, metadata !DIExpression()), !dbg !8053
  %21 = add i32 %12, -1, !dbg !8057
  call void @llvm.dbg.value(metadata i32 %21, metadata !8050, metadata !DIExpression()), !dbg !8053
  %22 = icmp eq i32 %21, 0, !dbg !8058
  br i1 %22, label %23, label %11, !dbg !8059, !llvm.loop !8067

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8053
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8053
  %26 = load i8, i8* %24, align 1, !dbg !8069
  %27 = zext i8 %26 to i32, !dbg !8069
  %28 = load i8, i8* %25, align 1, !dbg !8070
  %29 = zext i8 %28 to i32, !dbg !8070
  %30 = sub nsw i32 %27, %29, !dbg !8071
  br label %31, !dbg !8072

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8053
  ret i32 %32, !dbg !8073
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8074 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8078, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %1, metadata !8079, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i32 %2, metadata !8080, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8083
  %4 = ptrtoint i8* %0 to i32, !dbg !8084
  %5 = ptrtoint i8* %1 to i32, !dbg !8084
  %6 = sub i32 %4, %5, !dbg !8084
  %7 = icmp ult i32 %6, %2, !dbg !8086
  br i1 %7, label %10, label %8, !dbg !8087

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i32 %2, metadata !8080, metadata !DIExpression()), !dbg !8083
  %9 = icmp eq i32 %2, 0, !dbg !8088
  br i1 %9, label %26, label %17, !dbg !8090

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8080, metadata !DIExpression()), !dbg !8083
  %12 = add i32 %11, -1, !dbg !8091
  call void @llvm.dbg.value(metadata i32 %12, metadata !8080, metadata !DIExpression()), !dbg !8083
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8094
  %14 = load i8, i8* %13, align 1, !dbg !8094
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8095
  store i8 %14, i8* %15, align 1, !dbg !8096
  %16 = icmp eq i32 %12, 0, !dbg !8097
  br i1 %16, label %26, label %10, !dbg !8098, !llvm.loop !8099

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8082, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %19, metadata !8081, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i32 %20, metadata !8080, metadata !DIExpression()), !dbg !8083
  %21 = load i8, i8* %18, align 1, !dbg !8101
  store i8 %21, i8* %19, align 1, !dbg !8103
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8104
  call void @llvm.dbg.value(metadata i8* %22, metadata !8081, metadata !DIExpression()), !dbg !8083
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8105
  call void @llvm.dbg.value(metadata i8* %23, metadata !8082, metadata !DIExpression()), !dbg !8083
  %24 = add i32 %20, -1, !dbg !8106
  call void @llvm.dbg.value(metadata i32 %24, metadata !8080, metadata !DIExpression()), !dbg !8083
  %25 = icmp eq i32 %24, 0, !dbg !8088
  br i1 %25, label %26, label %17, !dbg !8090, !llvm.loop !8107

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8109
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8110 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %1, metadata !8117, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 %2, metadata !8118, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %0, metadata !8119, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %1, metadata !8120, metadata !DIExpression()), !dbg !8121
  %4 = icmp eq i32 %2, 0, !dbg !8122
  br i1 %4, label %14, label %5, !dbg !8123

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %7, metadata !8119, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 %8, metadata !8118, metadata !DIExpression()), !dbg !8121
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8124
  call void @llvm.dbg.value(metadata i8* %9, metadata !8120, metadata !DIExpression()), !dbg !8121
  %10 = load i8, i8* %6, align 1, !dbg !8126
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8127
  call void @llvm.dbg.value(metadata i8* %11, metadata !8119, metadata !DIExpression()), !dbg !8121
  store i8 %10, i8* %7, align 1, !dbg !8128
  %12 = add i32 %8, -1, !dbg !8129
  call void @llvm.dbg.value(metadata i32 %12, metadata !8118, metadata !DIExpression()), !dbg !8121
  %13 = icmp eq i32 %12, 0, !dbg !8122
  br i1 %13, label %14, label %5, !dbg !8123, !llvm.loop !8130

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8132
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8137, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 %1, metadata !8138, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 %2, metadata !8139, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8* %0, metadata !8140, metadata !DIExpression()), !dbg !8142
  %4 = trunc i32 %1 to i8, !dbg !8143
  call void @llvm.dbg.value(metadata i8 %4, metadata !8141, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i32 %2, metadata !8139, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8* %0, metadata !8140, metadata !DIExpression()), !dbg !8142
  %5 = icmp eq i32 %2, 0, !dbg !8144
  br i1 %5, label %12, label %6, !dbg !8145

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8139, metadata !DIExpression()), !dbg !8142
  call void @llvm.dbg.value(metadata i8* %8, metadata !8140, metadata !DIExpression()), !dbg !8142
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8146
  call void @llvm.dbg.value(metadata i8* %9, metadata !8140, metadata !DIExpression()), !dbg !8142
  store i8 %4, i8* %8, align 1, !dbg !8148
  %10 = add i32 %7, -1, !dbg !8149
  call void @llvm.dbg.value(metadata i32 %10, metadata !8139, metadata !DIExpression()), !dbg !8142
  %11 = icmp eq i32 %10, 0, !dbg !8144
  br i1 %11, label %12, label %6, !dbg !8145, !llvm.loop !8150

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8152
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8157, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %1, metadata !8158, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 %2, metadata !8159, metadata !DIExpression()), !dbg !8163
  %4 = icmp eq i32 %2, 0, !dbg !8164
  br i1 %4, label %17, label %5, !dbg !8165

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8166

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8167
  call void @llvm.dbg.value(metadata i8* %9, metadata !8160, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i32 %8, metadata !8159, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i8* %9, metadata !8160, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8167
  %10 = load i8, i8* %9, align 1, !dbg !8168
  %11 = icmp eq i8 %10, %6, !dbg !8171
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8172
  call void @llvm.dbg.value(metadata i8* %12, metadata !8160, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i32 %13, metadata !8159, metadata !DIExpression()), !dbg !8163
  br i1 %15, label %16, label %7, !dbg !8172, !llvm.loop !8173

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8175

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8163
  ret i8* %19, !dbg !8176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8177 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8179, metadata !DIExpression()), !dbg !8180
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8181
  ret void, !dbg !8182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8183 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8185, metadata !DIExpression()), !dbg !8186
  ret i32 -1, !dbg !8187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata i32* %1, metadata !8193, metadata !DIExpression()), !dbg !8194
  %3 = ptrtoint i32* %1 to i32, !dbg !8195
  %4 = and i32 %3, -2, !dbg !8195
  %5 = icmp eq i32 %4, 2, !dbg !8195
  br i1 %5, label %6, label %9, !dbg !8195

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8196
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8196
  br label %9, !dbg !8197

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8197
  ret i32 %10, !dbg !8198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8201, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32* %1, metadata !8202, metadata !DIExpression()), !dbg !8203
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8204
  ret i32 %3, !dbg !8205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8209, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32* %1, metadata !8210, metadata !DIExpression()), !dbg !8211
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8212, !srcloc !8214
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8215
  ret i32 %3, !dbg !8216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8222, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32* %1, metadata !8223, metadata !DIExpression()), !dbg !8226
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8227
  call void @llvm.dbg.value(metadata i32 %3, metadata !8224, metadata !DIExpression()), !dbg !8226
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8228
  call void @llvm.dbg.value(metadata i32 %4, metadata !8225, metadata !DIExpression()), !dbg !8226
  %5 = icmp ne i32 %3, %4, !dbg !8229
  %6 = sext i1 %5 to i32, !dbg !8230
  ret i32 %6, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8236, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32 %1, metadata !8237, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32 %2, metadata !8238, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32* %3, metadata !8239, metadata !DIExpression()), !dbg !8240
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8241
  ret i32 %5, !dbg !8242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8243 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8245, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %1, metadata !8246, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32 %2, metadata !8247, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.value(metadata i32* %3, metadata !8248, metadata !DIExpression()), !dbg !8249
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8250, !srcloc !8252
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8253
  ret i32 %5, !dbg !8254
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8255 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8257, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %1, metadata !8258, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %2, metadata !8259, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32* %3, metadata !8260, metadata !DIExpression()), !dbg !8265
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8266
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8268
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8268
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8268
  br i1 %11, label %33, label %12, !dbg !8268

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8265
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8265
  call void @llvm.dbg.value(metadata i8* %14, metadata !8263, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %13, metadata !8261, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %1, metadata !8262, metadata !DIExpression()), !dbg !8265
  br label %15, !dbg !8269

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8271
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8265
  call void @llvm.dbg.value(metadata i8* %17, metadata !8263, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.value(metadata i32 %16, metadata !8262, metadata !DIExpression()), !dbg !8265
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8272
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8275
  call void @llvm.dbg.value(metadata i8* %19, metadata !8263, metadata !DIExpression()), !dbg !8265
  %20 = load i8, i8* %17, align 1, !dbg !8276
  %21 = zext i8 %20 to i32, !dbg !8277
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8272
  %23 = icmp eq i32 %22, -1, !dbg !8278
  br i1 %23, label %30, label %24, !dbg !8279

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8280
  call void @llvm.dbg.value(metadata i32 %25, metadata !8262, metadata !DIExpression()), !dbg !8265
  %26 = icmp eq i32 %25, 0, !dbg !8281
  br i1 %26, label %27, label %15, !dbg !8282, !llvm.loop !8283

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8285
  call void @llvm.dbg.value(metadata i32 %28, metadata !8261, metadata !DIExpression()), !dbg !8265
  %29 = icmp eq i32 %28, 0, !dbg !8286
  br i1 %29, label %30, label %12, !dbg !8287, !llvm.loop !8288

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8265
  call void @llvm.dbg.value(metadata i32 %31, metadata !8261, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.label(metadata !8264), !dbg !8291
  %32 = sub i32 %2, %31, !dbg !8292
  br label %33, !dbg !8293

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8265
  ret i32 %34, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8299, metadata !DIExpression()), !dbg !8300
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8301
  %3 = icmp eq i32 %2, -1, !dbg !8303
  br i1 %3, label %8, label %4, !dbg !8304

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8305
  %6 = icmp eq i32 %5, -1, !dbg !8306
  %7 = sext i1 %6 to i32, !dbg !8305
  br label %8, !dbg !8307

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8300
  ret i32 %9, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8311, metadata !DIExpression()), !dbg !8312
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8313
  ret void, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8319, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata i32 %1, metadata !8320, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8321, metadata !DIExpression()), !dbg !8325
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8326
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8326
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8326
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8322, metadata !DIExpression()), !dbg !8325
  call void @llvm.dbg.value(metadata i32 %0, metadata !8324, metadata !DIExpression()), !dbg !8325
  %7 = icmp slt i32 %0, %1, !dbg !8327
  br i1 %7, label %8, label %22, !dbg !8330

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8324, metadata !DIExpression()), !dbg !8325
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8331
  %11 = icmp eq i32 %10, 0, !dbg !8331
  br i1 %11, label %19, label %12, !dbg !8334

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8335
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8337
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8337
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8339
  br i1 %15, label %19, label %16, !dbg !8340

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8341
  %18 = load i8*, i8** %17, align 4, !dbg !8341
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8342
  br label %19, !dbg !8343

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %20, metadata !8324, metadata !DIExpression()), !dbg !8325
  %21 = icmp eq i32 %20, %1, !dbg !8327
  br i1 %21, label %22, label %8, !dbg !8330, !llvm.loop !8345

22:                                               ; preds = %19, %3
  ret void, !dbg !8347
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8350, metadata !DIExpression()), !dbg !8351
  %2 = shl nuw i32 1, %0, !dbg !8352
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8355
  ret i32 %3, !dbg !8356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8361, metadata !DIExpression()), !dbg !8362
  %2 = shl nuw i32 1, %0, !dbg !8363
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8366
  ret void, !dbg !8367
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8371, metadata !DIExpression()), !dbg !8372
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8373
  ret void, !dbg !8374
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8377, metadata !DIExpression()), !dbg !8378
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8379
  %3 = and i32 %2, %0, !dbg !8379
  %4 = icmp eq i32 %3, %0, !dbg !8380
  %5 = zext i1 %4 to i32, !dbg !8380
  ret i32 %5, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8384, metadata !DIExpression()), !dbg !8385
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8386
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8392
  ret void, !dbg !8393
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8396, metadata !DIExpression()), !dbg !8397
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8398
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8402, metadata !DIExpression()), !dbg !8403
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8404
  ret void, !dbg !8405
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8408, metadata !DIExpression()), !dbg !8409
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8416
  ret void, !dbg !8417
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8418 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8420, metadata !DIExpression()), !dbg !8421
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8426, metadata !DIExpression()), !dbg !8427
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8428
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8436 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8438, metadata !DIExpression()), !dbg !8439
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8440
  ret void, !dbg !8441
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8444, metadata !DIExpression()), !dbg !8445
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8446
  ret i32 0, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !757 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !761, metadata !DIExpression()), !dbg !8448
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8449
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8451
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8453
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8455
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8457
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8459
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8461
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8463
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8465
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8467
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8469
  ret void, !dbg !8471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8474, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.value(metadata i32 0, metadata !8475, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.value(metadata i32 undef, metadata !8475, metadata !DIExpression()), !dbg !8476
  %2 = lshr i32 6684671, %0, !dbg !8477
  %3 = and i32 %2, 1, !dbg !8477
  %4 = or i32 %3, %0, !dbg !8479
  %5 = icmp eq i32 %4, 0, !dbg !8479
  br i1 %5, label %6, label %7, !dbg !8479

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.104, i32 0, i32 0), i32 noundef 123) #25, !dbg !8480
  unreachable, !dbg !8480

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8485
  %9 = load i32, i32* %8, align 4, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %9, metadata !8475, metadata !DIExpression()), !dbg !8476
  %10 = shl nuw i32 1, %0, !dbg !8486
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8487
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8488
  ret void, !dbg !8489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8492, metadata !DIExpression()), !dbg !8493
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8494
  %3 = or i32 %2, %0, !dbg !8494
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8494
  ret void, !dbg !8495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8498, metadata !DIExpression()), !dbg !8499
  %2 = icmp slt i32 %0, 32, !dbg !8500
  br i1 %2, label %3, label %5, !dbg !8502

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8503
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8505
  br label %5, !dbg !8506

5:                                                ; preds = %1, %3
  ret void, !dbg !8507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8510, metadata !DIExpression()), !dbg !8511
  %2 = xor i32 %0, -1, !dbg !8512
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8512
  %4 = and i32 %3, %2, !dbg !8512
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8518, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata i32 %1, metadata !8519, metadata !DIExpression()), !dbg !8520
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8521

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8522
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8524
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8525
  br label %11, !dbg !8526

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8527
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8528
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8529
  br label %11, !dbg !8530

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8531
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8532
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8533
  br label %11, !dbg !8534

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8535
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8536
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8537
  br label %11, !dbg !8538

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  %2 = xor i32 %0, -1, !dbg !8544
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8544
  %4 = and i32 %3, %2, !dbg !8544
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  %2 = xor i32 %0, -1, !dbg !8550
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8550
  %4 = and i32 %3, %2, !dbg !8550
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8556
  %3 = or i32 %2, %0, !dbg !8556
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8562
  %3 = or i32 %2, %0, !dbg !8562
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8568, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8569, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8* %2, metadata !8570, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8571, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8573, metadata !DIExpression()), !dbg !8574
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8575
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8575
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8577
  br i1 %6, label %7, label %9, !dbg !8578

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8579
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8580
  store i8* %2, i8** %8, align 4, !dbg !8581
  br label %9, !dbg !8582

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8574
  ret i32 %10, !dbg !8583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8586, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8588, metadata !DIExpression()), !dbg !8589
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8590
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8591
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8592
  store i8* null, i8** %3, align 4, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8595 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8597, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i8* %1, metadata !8598, metadata !DIExpression()), !dbg !8602
  call void @llvm.dbg.value(metadata i8* %1, metadata !8599, metadata !DIExpression()), !dbg !8602
  %3 = bitcast i8* %1 to i32*, !dbg !8603
  %4 = load i32, i32* %3, align 4, !dbg !8603
  %5 = add i32 %4, -169, !dbg !8603
  %6 = icmp ult i32 %5, -121, !dbg !8603
  br i1 %6, label %15, label %7, !dbg !8605

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8606
  %9 = inttoptr i32 %8 to i32*, !dbg !8607
  call void @llvm.dbg.value(metadata i32* %9, metadata !8600, metadata !DIExpression()), !dbg !8602
  %10 = load volatile i32, i32* %9, align 4, !dbg !8608
  call void @llvm.dbg.value(metadata i32 %10, metadata !8601, metadata !DIExpression()), !dbg !8602
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8609
  %12 = bitcast i8* %11 to i32*, !dbg !8609
  %13 = load i32, i32* %12, align 4, !dbg !8609
  %14 = or i32 %13, %10, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %14, metadata !8601, metadata !DIExpression()), !dbg !8602
  store volatile i32 %14, i32* %9, align 4, !dbg !8611
  br label %15, !dbg !8612

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8602
  ret i32 %16, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8616, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8* %1, metadata !8617, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.value(metadata i8* %1, metadata !8618, metadata !DIExpression()), !dbg !8621
  %3 = bitcast i8* %1 to i32*, !dbg !8622
  %4 = load i32, i32* %3, align 4, !dbg !8622
  %5 = add i32 %4, -169, !dbg !8622
  %6 = icmp ult i32 %5, -121, !dbg !8622
  br i1 %6, label %16, label %7, !dbg !8624

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8625
  %9 = inttoptr i32 %8 to i32*, !dbg !8626
  call void @llvm.dbg.value(metadata i32* %9, metadata !8619, metadata !DIExpression()), !dbg !8621
  %10 = load volatile i32, i32* %9, align 4, !dbg !8627
  call void @llvm.dbg.value(metadata i32 %10, metadata !8620, metadata !DIExpression()), !dbg !8621
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8628
  %12 = bitcast i8* %11 to i32*, !dbg !8628
  %13 = load i32, i32* %12, align 4, !dbg !8628
  %14 = xor i32 %13, -1, !dbg !8629
  %15 = and i32 %10, %14, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %15, metadata !8620, metadata !DIExpression()), !dbg !8621
  store volatile i32 %15, i32* %9, align 4, !dbg !8631
  br label %16, !dbg !8632

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8621
  ret i32 %17, !dbg !8633
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8636, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %1, metadata !8637, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32* %2, metadata !8638, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %1, metadata !8639, metadata !DIExpression()), !dbg !8644
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8645
  call void @llvm.dbg.value(metadata i32 %4, metadata !8640, metadata !DIExpression()), !dbg !8644
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %5, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %5, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %4, metadata !8643, metadata !DIExpression()), !dbg !8644
  %6 = bitcast i8* %1 to i32*, !dbg !8647
  %7 = load i32, i32* %6, align 4, !dbg !8647
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8648

8:                                                ; preds = %3
  br label %18, !dbg !8649

9:                                                ; preds = %3
  br label %18, !dbg !8651

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8652
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !8653
  br label %18, !dbg !8654

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8655
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !8656
  br label %18, !dbg !8657

16:                                               ; preds = %3
  br label %18, !dbg !8658

17:                                               ; preds = %3
  br label %18, !dbg !8659

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8660
  br label %20, !dbg !8661

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8644
  ret i32 %21, !dbg !8661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8662 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8664, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %1, metadata !8665, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %2, metadata !8666, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8672
  %4 = bitcast i8* %1 to i32*, !dbg !8673
  %5 = load i32, i32* %4, align 4, !dbg !8673
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8674
  call void @llvm.dbg.value(metadata i32 %6, metadata !8671, metadata !DIExpression()), !dbg !8672
  %7 = icmp slt i32 %6, 0, !dbg !8675
  br i1 %7, label %22, label %8, !dbg !8677

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8672
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8678
  %10 = bitcast i8* %9 to i32*, !dbg !8678
  %11 = load i32, i32* %10, align 4, !dbg !8678
  %12 = lshr i32 %11, 16, !dbg !8678
  %13 = and i32 %12, 7, !dbg !8678
  %14 = lshr i32 %11, 8, !dbg !8679
  %15 = and i32 %14, 31, !dbg !8679
  %16 = shl i32 %13, %15, !dbg !8680
  call void @llvm.dbg.value(metadata i32 %16, metadata !8670, metadata !DIExpression()), !dbg !8672
  %17 = and i32 %11, 255, !dbg !8681
  %18 = or i32 %17, 1073887232, !dbg !8682
  %19 = inttoptr i32 %18 to i32*, !dbg !8683
  call void @llvm.dbg.value(metadata i32* %19, metadata !8668, metadata !DIExpression()), !dbg !8672
  %20 = load volatile i32, i32* %19, align 4, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %20, metadata !8669, metadata !DIExpression()), !dbg !8672
  %21 = or i32 %16, %20, !dbg !8685
  call void @llvm.dbg.value(metadata i32 %21, metadata !8669, metadata !DIExpression()), !dbg !8672
  store volatile i32 %21, i32* %19, align 4, !dbg !8686
  br label %22, !dbg !8687

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8672
  ret i32 %23, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8693, metadata !DIExpression()), !dbg !8695
  call void @llvm.dbg.value(metadata i32 0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = add i32 %0, -1, !dbg !8696
  %3 = icmp ult i32 %2, 6, !dbg !8696
  br i1 %3, label %4, label %7, !dbg !8696

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8696
  %6 = load i32, i32* %5, align 4, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %6, metadata !8694, metadata !DIExpression()), !dbg !8695
  br label %7, !dbg !8697

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8695
  ret i32 %8, !dbg !8698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #4 !dbg !8699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8703, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 2, metadata !8704, metadata !DIExpression()), !dbg !8705
  %2 = lshr i32 %0, 1, !dbg !8706
  ret i32 %2, !dbg !8707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8712, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 8, metadata !8713, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 84, metadata !8714, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 %1, metadata !8715, metadata !DIExpression()), !dbg !8716
  %3 = mul i32 %0, 84, !dbg !8717
  %4 = shl nsw i32 %1, 3, !dbg !8718
  %5 = udiv i32 %3, %4, !dbg !8719
  ret i32 %5, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8723, metadata !DIExpression()), !dbg !8726
  tail call void @config_enable_default_clocks() #25, !dbg !8727
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8728
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8728
  %4 = lshr i32 %3, 4, !dbg !8728
  %5 = and i32 %4, 15, !dbg !8728
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8728
  %7 = load i8, i8* %6, align 1, !dbg !8728
  %8 = zext i8 %7 to i32, !dbg !8728
  %9 = lshr i32 %2, %8, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %9, metadata !8724, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8725, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8726
  %10 = icmp ult i32 %9, 84000000, !dbg !8729
  br i1 %10, label %11, label %13, !dbg !8731

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8732
  br label %13, !dbg !8734

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8735
  tail call fastcc void @set_up_plls() #24, !dbg !8736
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8737
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8740
  br label %14, !dbg !8741

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8742
  %16 = icmp eq i32 %15, 8, !dbg !8743
  br i1 %16, label %17, label %14, !dbg !8741, !llvm.loop !8744

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8746
  br i1 %18, label %19, label %21, !dbg !8748

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8749
  br label %21, !dbg !8751

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8752
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8753
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8754
  ret i32 0, !dbg !8755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8758
  %2 = and i32 %1, 240, !dbg !8758
  ret i32 %2, !dbg !8759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8760 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8761
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8766
  br label %1, !dbg !8767

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8768
  %3 = icmp eq i32 %2, 1, !dbg !8769
  br i1 %3, label %4, label %1, !dbg !8767, !llvm.loop !8770

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8772
  br label %5, !dbg !8775

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8776
  %7 = icmp eq i32 %6, 1, !dbg !8777
  br i1 %7, label %8, label %5, !dbg !8775, !llvm.loop !8778

8:                                                ; preds = %5
  ret void, !dbg !8780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8781 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8782
  %2 = icmp eq i32 %1, 8, !dbg !8784
  br i1 %2, label %3, label %4, !dbg !8785

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8786
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8788
  br label %4, !dbg !8789

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8790
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8791
  %6 = and i32 %5, -196609, !dbg !8791
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8791
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8792
  %8 = and i32 %7, -251658241, !dbg !8792
  %9 = or i32 %8, 134217728, !dbg !8792
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8792
  tail call void @config_pll_sysclock() #25, !dbg !8793
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8794
  br label %10, !dbg !8795

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8796
  %12 = icmp eq i32 %11, 1, !dbg !8797
  br i1 %12, label %13, label %10, !dbg !8795, !llvm.loop !8798

13:                                               ; preds = %10
  ret void, !dbg !8800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8801 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8803, metadata !DIExpression()), !dbg !8804
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8805
  %2 = and i32 %1, -241, !dbg !8805
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8805
  ret void, !dbg !8806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8809, metadata !DIExpression()), !dbg !8810
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  %3 = and i32 %2, -4, !dbg !8811
  %4 = or i32 %3, %0, !dbg !8811
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8811
  ret void, !dbg !8812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8814
  %2 = and i32 %1, 12, !dbg !8814
  ret i32 %2, !dbg !8815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8816 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8818, metadata !DIExpression()), !dbg !8819
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8820
  %2 = and i32 %1, -7169, !dbg !8820
  %3 = or i32 %2, 4096, !dbg !8820
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8820
  ret void, !dbg !8821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8822 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8824, metadata !DIExpression()), !dbg !8825
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  %2 = and i32 %1, -57345, !dbg !8826
  %3 = or i32 %2, 32768, !dbg !8826
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8826
  ret void, !dbg !8827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8828 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8829
  %2 = icmp eq i32 %1, 1, !dbg !8831
  br i1 %2, label %7, label %3, !dbg !8832

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8833
  br label %4, !dbg !8835

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8836
  %6 = icmp eq i32 %5, 1, !dbg !8837
  br i1 %6, label %7, label %4, !dbg !8835, !llvm.loop !8838

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8840
  br label %8, !dbg !8841

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8842
  %10 = icmp eq i32 %9, 0, !dbg !8843
  br i1 %10, label %11, label %8, !dbg !8841, !llvm.loop !8844

11:                                               ; preds = %8
  ret void, !dbg !8846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8847 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8848
  %2 = and i32 %1, -16777217, !dbg !8848
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8848
  ret void, !dbg !8849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8850 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8851
  %2 = or i32 %1, 16777216, !dbg !8851
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8853 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8854
  %2 = lshr i32 %1, 25, !dbg !8855
  %3 = and i32 %2, 1, !dbg !8855
  ret i32 %3, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8858
  %2 = lshr i32 %1, 1, !dbg !8859
  %3 = and i32 %2, 1, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  %2 = or i32 %1, 1, !dbg !8862
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  ret void, !dbg !8863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8864 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8865
  %2 = and i32 %1, -262145, !dbg !8865
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8865
  ret void, !dbg !8866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  %2 = or i32 %1, 65536, !dbg !8868
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8868
  ret void, !dbg !8869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8870 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8871
  %2 = lshr i32 %1, 17, !dbg !8872
  %3 = and i32 %2, 1, !dbg !8872
  ret i32 %3, !dbg !8873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8875
  %2 = or i32 %1, 1, !dbg !8875
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8877 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8878
  %2 = lshr i32 %1, 1, !dbg !8879
  %3 = and i32 %2, 1, !dbg !8879
  ret i32 %3, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8881 {
  ret i32 16000000, !dbg !8883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8887 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8888
  ret void, !dbg !8889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8890 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8894, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 8, metadata !8895, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 84, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 0, metadata !8897, metadata !DIExpression()), !dbg !8898
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8899
  %2 = and i32 %1, -4227072, !dbg !8899
  %3 = or i32 %2, 4199688, !dbg !8899
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8899
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8900
  %5 = and i32 %4, -196609, !dbg !8900
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8900
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8902 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8905 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8908, metadata !DIExpression()), !dbg !8910
  %2 = bitcast i32* %1 to i8*, !dbg !8911
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8911
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8909, metadata !DIExpression()), !dbg !8912
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8913
  %4 = or i32 %3, 268435456, !dbg !8913
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8913
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8914
  %6 = and i32 %5, 268435456, !dbg !8914
  store volatile i32 %6, i32* %1, align 4, !dbg !8915
  %7 = load volatile i32, i32* %1, align 4, !dbg !8916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8917
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8920, metadata !DIExpression()), !dbg !8921
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8922
  br i1 %2, label %3, label %4, !dbg !8924

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8925
  br label %4, !dbg !8926

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8921
  ret i32 %5, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8928 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8933, metadata !DIExpression()), !dbg !8934
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8935, !srcloc !8937
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8938
  ret i1 %1, !dbg !8939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8940 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8941
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8946, metadata !DIExpression()), !dbg !8947
  %2 = icmp eq i32 %0, 10, !dbg !8948
  br i1 %2, label %3, label %4, !dbg !8950

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8951
  br label %4, !dbg !8953

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8954
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8955
  ret i32 %0, !dbg !8956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8957 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8960, metadata !DIExpression()), !dbg !8962
  call void @llvm.dbg.value(metadata i8 %0, metadata !8961, metadata !DIExpression()), !dbg !8962
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8963, !srcloc !8965
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8968 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8970, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i8 %0, metadata !8971, metadata !DIExpression()), !dbg !8973
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8974
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8972, metadata !DIExpression()), !dbg !8973
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8975
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8975
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !8976
  ret void, !dbg !8977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8978 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8980, metadata !DIExpression()), !dbg !8981
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !8982
  ret i1 %1, !dbg !8983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9033, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9034, metadata !DIExpression()), !dbg !9036
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9035, metadata !DIExpression()), !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9038 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9040, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i8 %1, metadata !9041, metadata !DIExpression()), !dbg !9045
  call void @llvm.dbg.value(metadata i32 %2, metadata !9042, metadata !DIExpression()), !dbg !9045
  %5 = bitcast i32* %4 to i8*, !dbg !9046
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9046
  call void @llvm.dbg.value(metadata i32* %4, metadata !9044, metadata !DIExpression(DW_OP_deref)), !dbg !9045
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %6, metadata !9043, metadata !DIExpression()), !dbg !9045
  %7 = icmp eq i32 %6, 0, !dbg !9048
  br i1 %7, label %8, label %31, !dbg !9050

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9043, metadata !DIExpression()), !dbg !9045
  %9 = and i32 %2, 131072, !dbg !9051
  %10 = icmp eq i32 %9, 0, !dbg !9053
  br i1 %10, label %28, label %11, !dbg !9054

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9055
  %13 = icmp eq i32 %12, 0, !dbg !9058
  br i1 %13, label %18, label %14, !dbg !9059

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9060
  %16 = shl nuw i32 1, %15, !dbg !9060
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9062
  br label %25, !dbg !9063

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9064
  %20 = icmp eq i32 %19, 0, !dbg !9066
  %21 = zext i8 %1 to i32, !dbg !9045
  br i1 %20, label %25, label %22, !dbg !9067

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9068
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9070
  br label %25, !dbg !9071

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9072
  %27 = load i32, i32* %4, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %30, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9074
  br label %31, !dbg !9075

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9072
  %30 = load i32, i32* %4, align 4, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %30, metadata !9044, metadata !DIExpression()), !dbg !9045
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9074
  call void @llvm.dbg.value(metadata i32 0, metadata !9043, metadata !DIExpression()), !dbg !9045
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9076
  ret i32 %6, !dbg !9076
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9081, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.value(metadata i32* %1, metadata !9082, metadata !DIExpression()), !dbg !9086
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9087
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9087
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9087
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9083, metadata !DIExpression()), !dbg !9086
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9088
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9088
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9088
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9085, metadata !DIExpression()), !dbg !9086
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9089
  store i32 %9, i32* %1, align 4, !dbg !9090
  ret i32 0, !dbg !9091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9094, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %1, metadata !9095, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %2, metadata !9096, metadata !DIExpression()), !dbg !9100
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9101
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9101
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9101
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9097, metadata !DIExpression()), !dbg !9100
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9102
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9102
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9102
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9098, metadata !DIExpression()), !dbg !9100
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %10, metadata !9099, metadata !DIExpression()), !dbg !9100
  %11 = xor i32 %1, -1, !dbg !9104
  %12 = and i32 %10, %11, !dbg !9105
  %13 = and i32 %2, %1, !dbg !9106
  %14 = or i32 %12, %13, !dbg !9107
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9108
  ret i32 0, !dbg !9109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9110 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9112, metadata !DIExpression()), !dbg !9116
  call void @llvm.dbg.value(metadata i32 %1, metadata !9113, metadata !DIExpression()), !dbg !9116
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9117
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9117
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9117
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9114, metadata !DIExpression()), !dbg !9116
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9118
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9118
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9118
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9115, metadata !DIExpression()), !dbg !9116
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9119
  store volatile i32 %1, i32* %9, align 4, !dbg !9119
  ret i32 0, !dbg !9120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9123, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.value(metadata i32 %1, metadata !9124, metadata !DIExpression()), !dbg !9127
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9128
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9128
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9128
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9125, metadata !DIExpression()), !dbg !9127
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9129
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9129
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9126, metadata !DIExpression()), !dbg !9127
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9130
  ret i32 0, !dbg !9131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9134, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9138
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9139
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9139
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9139
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9136, metadata !DIExpression()), !dbg !9138
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9140
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9140
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9140
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9137, metadata !DIExpression()), !dbg !9138
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9141
  %10 = load volatile i32, i32* %9, align 4, !dbg !9141
  %11 = xor i32 %10, %1, !dbg !9141
  store volatile i32 %11, i32* %9, align 4, !dbg !9141
  ret i32 0, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9145, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8 %1, metadata !9146, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %2, metadata !9147, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 %3, metadata !9148, metadata !DIExpression()), !dbg !9155
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9156
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9156
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9149, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8* undef, metadata !9150, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i32 0, metadata !9153, metadata !DIExpression()), !dbg !9155
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9157

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9158
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9162
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9163
  %12 = load i32, i32* %11, align 4, !dbg !9163
  %13 = icmp eq i32 %10, %12, !dbg !9164
  br i1 %13, label %14, label %29, !dbg !9165

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9166
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9168
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9169
  br label %29, !dbg !9170

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9171
  %17 = load i8*, i8** %16, align 4, !dbg !9171
  call void @llvm.dbg.value(metadata i8* %17, metadata !9150, metadata !DIExpression()), !dbg !9155
  %18 = zext i8 %1 to i32, !dbg !9172
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9174
  %20 = icmp eq i32 %19, 0, !dbg !9175
  br i1 %20, label %21, label %29, !dbg !9176

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9177
  %23 = load i32, i32* %22, align 4, !dbg !9177
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9178
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9179

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9180

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9182

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9152, metadata !DIExpression()), !dbg !9155
  br label %27, !dbg !9183

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9155
  call void @llvm.dbg.value(metadata i32 %28, metadata !9152, metadata !DIExpression()), !dbg !9155
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9184
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9185
  br label %29, !dbg !9185

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9155
  call void @llvm.dbg.value(metadata i32 %30, metadata !9153, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.label(metadata !9154), !dbg !9186
  ret i32 %30, !dbg !9187
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9190, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9191, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i1 %2, metadata !9192, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9194
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9195
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9195
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9195
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9193, metadata !DIExpression()), !dbg !9194
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9196
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9197
  ret i32 %8, !dbg !9198
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9205, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9206, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i1 %2, metadata !9207, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9208
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9209
  br i1 %4, label %5, label %6, !dbg !9212

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.118, i32 0, i32 0)) #25, !dbg !9213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 42) #25, !dbg !9213
  unreachable, !dbg !9213

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9215
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9215
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9215
  br i1 %9, label %10, label %11, !dbg !9218

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 43) #25, !dbg !9219
  unreachable, !dbg !9219

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9221
  br i1 %12, label %18, label %13, !dbg !9223

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9224
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9227
  %16 = or i1 %15, %2, !dbg !9228
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9228
  br i1 %2, label %19, label %21, !dbg !9228

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9229

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9230
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9233
  br label %21, !dbg !9234

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9208
  ret i32 %22, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9236 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9240, metadata !DIExpression()), !dbg !9241
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9242
  %3 = icmp eq %struct._snode* %2, null, !dbg !9242
  ret i1 %3, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9247, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9248, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9252
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %4 = icmp eq %struct._snode* %3, null, !dbg !9254
  br i1 %4, label %15, label %5, !dbg !9252

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9249, metadata !DIExpression()), !dbg !9251
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9256
  br i1 %6, label %9, label %11, !dbg !9259

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9249, metadata !DIExpression()), !dbg !9251
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9256
  br i1 %8, label %9, label %11, !dbg !9259, !llvm.loop !9260

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9261
  br label %15, !dbg !9261

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9250, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9249, metadata !DIExpression()), !dbg !9251
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9254
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9250, metadata !DIExpression()), !dbg !9251
  %14 = icmp eq %struct._snode* %13, null, !dbg !9254
  br i1 %14, label %15, label %7, !dbg !9252, !llvm.loop !9260

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9264 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9268, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9269, metadata !DIExpression()), !dbg !9270
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9271
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9271
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9271
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9272
  %5 = icmp eq %struct._snode* %4, null, !dbg !9272
  br i1 %5, label %6, label %8, !dbg !9271

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9274
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9274
  br label %8, !dbg !9274

8:                                                ; preds = %6, %2
  ret void, !dbg !9271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9276 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9280, metadata !DIExpression()), !dbg !9281
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9282
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9282
  ret %struct._snode* %3, !dbg !9283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9288, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9289, metadata !DIExpression()), !dbg !9290
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9291
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9292
  ret void, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9294 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9297, metadata !DIExpression()), !dbg !9298
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9299
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9304, metadata !DIExpression()), !dbg !9305
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9306
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9306
  ret %struct._snode* %3, !dbg !9307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9308 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9310, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9311, metadata !DIExpression()), !dbg !9312
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9313
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9314
  ret void, !dbg !9315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9316 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9320, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9321, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9322, metadata !DIExpression()), !dbg !9323
  %4 = icmp eq %struct._snode* %1, null, !dbg !9324
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9326
  br i1 %4, label %6, label %11, !dbg !9327

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9328
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9330
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9330
  br i1 %8, label %9, label %15, !dbg !9328

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9332
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9332
  br label %15, !dbg !9332

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9334
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9336
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9336
  br i1 %13, label %14, label %15, !dbg !9334

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9338
  br label %15, !dbg !9338

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9327
  ret void, !dbg !9327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %2 = icmp eq %struct._snode* %0, null, !dbg !9346
  br i1 %2, label %5, label %3, !dbg !9346

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9346
  br label %5, !dbg !9346

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9346
  ret %struct._snode* %6, !dbg !9346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9347 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9349, metadata !DIExpression()), !dbg !9350
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9351
  ret %struct._snode* %2, !dbg !9351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9352 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9354, metadata !DIExpression()), !dbg !9355
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9356
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9356
  ret %struct._snode* %3, !dbg !9357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9364, !range !9365
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9363
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %3, metadata !9362, metadata !DIExpression()), !dbg !9363
  ret i32 %3, !dbg !9367
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9370, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i8* %1, metadata !9371, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i8* %1, metadata !9372, metadata !DIExpression()), !dbg !9373
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9374
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9374
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9375
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9375
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9375
  %8 = shl nuw i32 1, %0, !dbg !9376
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9377
  ret void, !dbg !9378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9379 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9383, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %1, metadata !9384, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9385, metadata !DIExpression()), !dbg !9389
  %4 = bitcast i64* %3 to i8*, !dbg !9390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9390
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9387, metadata !DIExpression()), !dbg !9389
  store i64 70368744177732, i64* %3, align 8, !dbg !9391
  call void @llvm.dbg.value(metadata i64* %3, metadata !9387, metadata !DIExpression(DW_OP_deref)), !dbg !9389
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %5, metadata !9388, metadata !DIExpression()), !dbg !9389
  %6 = icmp eq i32 %5, 0, !dbg !9393
  br i1 %6, label %7, label %8, !dbg !9395

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9396
  br label %8, !dbg !9397

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9398
  ret void, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9401, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i8* %0, metadata !9402, metadata !DIExpression()), !dbg !9404
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9405
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9403, metadata !DIExpression()), !dbg !9404
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9406
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9406
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9407
  ret i32 %5, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9411, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.value(metadata i32 %1, metadata !9412, metadata !DIExpression()), !dbg !9414
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9415
  call void @llvm.dbg.value(metadata i32 %3, metadata !9413, metadata !DIExpression()), !dbg !9414
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9416
  ret void, !dbg !9417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9422, metadata !DIExpression()), !dbg !9423
  %2 = sdiv i32 %0, 4, !dbg !9424
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9425
  %6 = add nsw i32 %5, 16, !dbg !9426
  %7 = shl i32 15, %6, !dbg !9427
  %8 = or i32 %7, %2, !dbg !9428
  ret i32 %8, !dbg !9429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9434, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i32 %1, metadata !9435, metadata !DIExpression()), !dbg !9436
  %3 = and i32 %1, 255, !dbg !9437
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9437
  %5 = load volatile i32, i32* %4, align 4, !dbg !9437
  %6 = lshr i32 %1, 16, !dbg !9437
  %7 = xor i32 %6, -1, !dbg !9437
  %8 = and i32 %5, %7, !dbg !9437
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9442
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9444, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %9, metadata !9441, metadata !DIExpression()) #23, !dbg !9442
  call void @llvm.dbg.value(metadata i32 %9, metadata !9446, metadata !DIExpression()) #23, !dbg !9451
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9453, !range !7615
  %11 = shl i32 %0, %10, !dbg !9437
  %12 = or i32 %11, %8, !dbg !9437
  store volatile i32 %12, i32* %4, align 4, !dbg !9437
  ret void, !dbg !9454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9455 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9459, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9460, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()), !dbg !9464
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9465
  %5 = icmp eq %struct._snode* %4, null, !dbg !9465
  br i1 %5, label %24, label %6, !dbg !9465

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9467
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9462, metadata !DIExpression()), !dbg !9464
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9468
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9468
  %12 = load i32, i32* %11, align 4, !dbg !9468
  %13 = and i32 %12, %2, !dbg !9472
  %14 = icmp eq i32 %13, 0, !dbg !9472
  br i1 %14, label %22, label %15, !dbg !9473

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9474
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9474
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9474
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9474
  br i1 %19, label %20, label %21, !dbg !9478

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.120, i32 0, i32 0)) #25, !dbg !9479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.117, i32 0, i32 0), i32 noundef 77) #25, !dbg !9479
  unreachable, !dbg !9479

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9481
  br label %22, !dbg !9482

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9462, metadata !DIExpression()), !dbg !9464
  %23 = icmp eq %struct._snode* %8, null, !dbg !9483
  br i1 %23, label %24, label %6, !dbg !9483

24:                                               ; preds = %22, %3
  ret void, !dbg !9484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9487, metadata !DIExpression()), !dbg !9488
  %2 = and i32 %0, 255, !dbg !9489
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9489
  %4 = load volatile i32, i32* %3, align 4, !dbg !9489
  %5 = lshr i32 %0, 16, !dbg !9489
  %6 = and i32 %4, %5, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %5, metadata !9438, metadata !DIExpression()) #23, !dbg !9490
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9492, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9493
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9495, !range !7615
  %9 = lshr i32 %6, %8, !dbg !9496
  ret i32 %9, !dbg !9497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9498 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9503, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata i32 %1, metadata !9504, metadata !DIExpression()), !dbg !9505
  %3 = shl i32 %1, 16, !dbg !9506
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9506
  store volatile i32 %3, i32* %4, align 4, !dbg !9506
  ret void, !dbg !9507
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9508 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9512, metadata !DIExpression()), !dbg !9513
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9514
  %3 = load volatile i32, i32* %2, align 4, !dbg !9514
  ret i32 %3, !dbg !9515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9518, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.value(metadata i32 %1, metadata !9519, metadata !DIExpression()), !dbg !9520
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9521
  store volatile i32 %1, i32* %3, align 4, !dbg !9521
  ret void, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9523 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9525, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9527
  %3 = load volatile i32, i32* %2, align 4, !dbg !9527
  ret i32 %3, !dbg !9528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9533, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32* %1, metadata !9534, metadata !DIExpression()), !dbg !9535
  %3 = and i32 %0, 131072, !dbg !9536
  %4 = icmp eq i32 %3, 0, !dbg !9538
  br i1 %4, label %22, label %5, !dbg !9539

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9540
  %6 = and i32 %0, 2, !dbg !9542
  %7 = icmp eq i32 %6, 0, !dbg !9544
  br i1 %7, label %11, label %8, !dbg !9545

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9546
  %10 = icmp eq i32 %9, 0, !dbg !9546
  br i1 %10, label %33, label %11, !dbg !9549

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9550
  store i32 %12, i32* %1, align 4, !dbg !9550
  %13 = and i32 %0, 16, !dbg !9551
  %14 = icmp eq i32 %13, 0, !dbg !9553
  br i1 %14, label %17, label %15, !dbg !9554

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9555
  br label %31, !dbg !9557

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9558
  %19 = icmp eq i32 %18, 0, !dbg !9560
  br i1 %19, label %33, label %20, !dbg !9561

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9562
  br label %31, !dbg !9564

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9565
  %24 = icmp eq i32 %23, 0, !dbg !9567
  br i1 %24, label %31, label %25, !dbg !9568

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9569
  %27 = icmp eq i32 %26, 0, !dbg !9572
  br i1 %27, label %28, label %31, !dbg !9573

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9574
  br label %33, !dbg !9575

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9535
  ret i32 %34, !dbg !9575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9580, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %1, metadata !9581, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9582, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %3, metadata !9583, metadata !DIExpression()), !dbg !9591
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9592
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9592
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9592
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9584, metadata !DIExpression()), !dbg !9591
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9593
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9593
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9593
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9585, metadata !DIExpression()), !dbg !9591
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %11, metadata !9586, metadata !DIExpression()), !dbg !9591
  %12 = and i32 %2, 48, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %12, metadata !9587, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9588, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9589, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  call void @llvm.dbg.value(metadata i32 %2, metadata !9590, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9591
  %13 = lshr i32 %2, 6, !dbg !9596
  %14 = and i32 %13, 1, !dbg !9596
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9597
  %15 = lshr i32 %2, 7, !dbg !9598
  %16 = and i32 %15, 3, !dbg !9598
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9599
  %17 = lshr i32 %2, 9, !dbg !9600
  %18 = and i32 %17, 3, !dbg !9600
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9601
  %19 = icmp eq i32 %12, 32, !dbg !9602
  br i1 %19, label %20, label %24, !dbg !9604

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9605
  br i1 %21, label %22, label %23, !dbg !9608

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9609
  br label %24, !dbg !9611

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9612
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9614
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9619, metadata !DIExpression()), !dbg !9621
  %2 = shl nuw i32 1, %0, !dbg !9622
  call void @llvm.dbg.value(metadata i32 %2, metadata !9620, metadata !DIExpression()), !dbg !9621
  ret i32 %2, !dbg !9623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9628, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression()), !dbg !9631
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9632
  %5 = load volatile i32, i32* %4, align 4, !dbg !9632
  %6 = xor i32 %1, -1, !dbg !9632
  %7 = and i32 %5, %6, !dbg !9632
  %8 = mul i32 %2, %1, !dbg !9632
  %9 = or i32 %7, %8, !dbg !9632
  store volatile i32 %9, i32* %4, align 4, !dbg !9632
  ret void, !dbg !9633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9634 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9636, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %1, metadata !9637, metadata !DIExpression()), !dbg !9639
  call void @llvm.dbg.value(metadata i32 %2, metadata !9638, metadata !DIExpression()), !dbg !9639
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9640
  %5 = load volatile i32, i32* %4, align 4, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9641
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9643, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9644
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9646, !range !7615
  %8 = shl nuw nsw i32 %7, 1, !dbg !9640
  %9 = shl i32 3, %8, !dbg !9640
  %10 = xor i32 %9, -1, !dbg !9640
  %11 = and i32 %5, %10, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9649
  %12 = shl i32 %2, %8, !dbg !9640
  %13 = or i32 %11, %12, !dbg !9640
  store volatile i32 %13, i32* %4, align 4, !dbg !9640
  ret void, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9652 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9654, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9656, metadata !DIExpression()), !dbg !9657
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9658
  %5 = load volatile i32, i32* %4, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9659
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9661, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9659
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9662
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9664, !range !7615
  %8 = shl nuw nsw i32 %7, 1, !dbg !9658
  %9 = shl i32 3, %8, !dbg !9658
  %10 = xor i32 %9, -1, !dbg !9658
  %11 = and i32 %5, %10, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9667
  %12 = shl i32 %2, %8, !dbg !9658
  %13 = or i32 %11, %12, !dbg !9658
  store volatile i32 %13, i32* %4, align 4, !dbg !9658
  ret void, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9673, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9674, metadata !DIExpression()), !dbg !9675
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9676
  %5 = load volatile i32, i32* %4, align 4, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9677
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9679, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9677
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9680
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9682, !range !7615
  %8 = shl nuw nsw i32 %7, 2, !dbg !9676
  %9 = shl i32 15, %8, !dbg !9676
  %10 = xor i32 %9, -1, !dbg !9676
  %11 = and i32 %5, %10, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9685
  %12 = shl i32 %2, %8, !dbg !9676
  %13 = or i32 %11, %12, !dbg !9676
  store volatile i32 %13, i32* %4, align 4, !dbg !9676
  ret void, !dbg !9687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9690, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %1, metadata !9691, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.value(metadata i32 %2, metadata !9692, metadata !DIExpression()), !dbg !9693
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9694
  %5 = load volatile i32, i32* %4, align 4, !dbg !9694
  %6 = lshr i32 %1, 8, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9695
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9697, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9695
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9698
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9700, !range !7615
  %9 = shl nuw nsw i32 %8, 2, !dbg !9694
  %10 = shl i32 15, %9, !dbg !9694
  %11 = xor i32 %10, -1, !dbg !9694
  %12 = and i32 %5, %11, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %6, metadata !9438, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %7, metadata !9441, metadata !DIExpression()) #23, !dbg !9701
  call void @llvm.dbg.value(metadata i32 %7, metadata !9446, metadata !DIExpression()) #23, !dbg !9703
  %13 = shl i32 %2, %9, !dbg !9694
  %14 = or i32 %12, %13, !dbg !9694
  store volatile i32 %14, i32* %4, align 4, !dbg !9694
  ret void, !dbg !9705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9706 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9708, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %1, metadata !9709, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %2, metadata !9710, metadata !DIExpression()), !dbg !9711
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9712
  %5 = load volatile i32, i32* %4, align 4, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9713
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9715, !srcloc !9445
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9713
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9716
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9718, !range !7615
  %8 = shl nuw nsw i32 %7, 1, !dbg !9712
  %9 = shl i32 3, %8, !dbg !9712
  %10 = xor i32 %9, -1, !dbg !9712
  %11 = and i32 %5, %10, !dbg !9712
  call void @llvm.dbg.value(metadata i32 %1, metadata !9438, metadata !DIExpression()) #23, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %6, metadata !9441, metadata !DIExpression()) #23, !dbg !9719
  call void @llvm.dbg.value(metadata i32 %6, metadata !9446, metadata !DIExpression()) #23, !dbg !9721
  %12 = shl i32 %2, %8, !dbg !9712
  %13 = or i32 %11, %12, !dbg !9712
  store volatile i32 %13, i32* %4, align 4, !dbg !9712
  ret void, !dbg !9723
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9724 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9726, metadata !DIExpression()), !dbg !9729
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9730
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9730
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9730
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9727, metadata !DIExpression()), !dbg !9729
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9731
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9732
  %6 = tail call fastcc zeroext i1 @device_is_ready.130() #24, !dbg !9733
  br i1 %6, label %7, label %11, !dbg !9735

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %8, metadata !9728, metadata !DIExpression()), !dbg !9729
  %9 = icmp slt i32 %8, 0, !dbg !9737
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9739
  br label %11, !dbg !9739

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9729
  ret i32 %12, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.130() unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9745, metadata !DIExpression()), !dbg !9746
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9747, !srcloc !9749
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.131() #24, !dbg !9750
  ret i1 %1, !dbg !9751
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9752 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9756, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata i8 1, metadata !9757, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9762
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9762
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9762
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9758, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata i32 0, metadata !9759, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9760, metadata !DIExpression()), !dbg !9761
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9763
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9766
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9767
  call void @llvm.dbg.value(metadata i32 %7, metadata !9759, metadata !DIExpression()), !dbg !9761
  ret i32 %7, !dbg !9768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.131() unnamed_addr #1 !dbg !9769 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9771, metadata !DIExpression()), !dbg !9772
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9773
  ret i1 %1, !dbg !9774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9775 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9779, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %1, metadata !9780, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %2, metadata !9781, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %3, metadata !9782, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 0, metadata !9783, metadata !DIExpression()), !dbg !9787
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9788
  %5 = icmp eq i32 %3, 17, !dbg !9789
  br i1 %5, label %6, label %14, !dbg !9790

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %7, metadata !9784, metadata !DIExpression()), !dbg !9792
  %8 = icmp eq i32 %7, 0, !dbg !9793
  %9 = shl nuw i32 1, %1, !dbg !9795
  br i1 %8, label %12, label %10, !dbg !9796

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9797
  br label %14, !dbg !9799

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9800
  br label %14, !dbg !9803

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9804
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9807, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata i8* %1, metadata !9808, metadata !DIExpression()), !dbg !9811
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9812
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9812
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9812
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9809, metadata !DIExpression()), !dbg !9811
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9813
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9813
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9815
  %9 = icmp eq i32 %8, 0, !dbg !9815
  br i1 %9, label %12, label %10, !dbg !9816

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9817
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9819
  br label %12, !dbg !9820

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9821
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9823
  %15 = icmp eq i32 %14, 0, !dbg !9823
  br i1 %15, label %19, label %16, !dbg !9824

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9825
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9826
  store i8 %18, i8* %1, align 1, !dbg !9827
  br label %19, !dbg !9828

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9811
  ret i32 %20, !dbg !9829
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9830 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9832, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata i8 %1, metadata !9833, metadata !DIExpression()), !dbg !9836
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9837
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9837
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9834, metadata !DIExpression()), !dbg !9836
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9838

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9839
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9842
  %10 = icmp eq i32 %9, 0, !dbg !9842
  br i1 %10, label %18, label %11, !dbg !9843

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9844, !srcloc !9851
  call void @llvm.dbg.value(metadata i32 undef, metadata !9847, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 undef, metadata !9848, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 undef, metadata !9835, metadata !DIExpression()), !dbg !9836
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9853
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9855
  %15 = icmp eq i32 %14, 0, !dbg !9855
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9844
  br i1 %15, label %17, label %19, !dbg !9856

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9847, metadata !DIExpression()) #23, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %16, metadata !9835, metadata !DIExpression()), !dbg !9836
  call void @llvm.dbg.value(metadata i32 undef, metadata !9857, metadata !DIExpression()) #23, !dbg !9860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9862, !srcloc !9863
  br label %18, !dbg !9864

18:                                               ; preds = %17, %7
  br label %7, !dbg !9839, !llvm.loop !9865

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9844
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9867
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9868
  call void @llvm.dbg.value(metadata i32 %20, metadata !9857, metadata !DIExpression()) #23, !dbg !9869
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9871, !srcloc !9863
  ret void, !dbg !9872
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9875, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9879
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9879
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9876, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.value(metadata i32 0, metadata !9877, metadata !DIExpression()), !dbg !9878
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9880
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9880
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9882
  %8 = icmp ne i32 %7, 0, !dbg !9882
  %9 = zext i1 %8 to i32, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %9, metadata !9877, metadata !DIExpression()), !dbg !9878
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9884
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9886
  %12 = icmp eq i32 %11, 0, !dbg !9886
  %13 = or i32 %9, 2, !dbg !9887
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %14, metadata !9877, metadata !DIExpression()), !dbg !9878
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9888
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9890
  %17 = icmp eq i32 %16, 0, !dbg !9890
  %18 = or i32 %14, 4, !dbg !9891
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %19, metadata !9877, metadata !DIExpression()), !dbg !9878
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9892
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9894
  %22 = icmp eq i32 %21, 0, !dbg !9894
  %23 = or i32 %19, 8, !dbg !9895
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %24, metadata !9877, metadata !DIExpression()), !dbg !9878
  %25 = and i32 %24, 8, !dbg !9896
  %26 = icmp eq i32 %25, 0, !dbg !9896
  br i1 %26, label %29, label %27, !dbg !9898

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9899
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9901
  br label %29, !dbg !9902

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9903
  %31 = icmp eq i32 %30, 0, !dbg !9903
  br i1 %31, label %34, label %32, !dbg !9905

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9906
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9908
  br label %34, !dbg !9909

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9910
  %36 = icmp eq i32 %35, 0, !dbg !9910
  br i1 %36, label %39, label %37, !dbg !9912

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9913
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9915
  br label %39, !dbg !9916

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9917
  %41 = icmp eq i32 %40, 0, !dbg !9917
  br i1 %41, label %44, label %42, !dbg !9919

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9920
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9922
  br label %44, !dbg !9923

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9924
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9925
  ret i32 %24, !dbg !9926
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9929, metadata !DIExpression()), !dbg !9938
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9930, metadata !DIExpression()), !dbg !9938
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9939
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9939
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9939
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9931, metadata !DIExpression()), !dbg !9938
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9940
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9940
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9940
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9932, metadata !DIExpression()), !dbg !9938
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9941
  %10 = load i8, i8* %9, align 4, !dbg !9941
  %11 = zext i8 %10 to i32, !dbg !9942
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %12, metadata !9934, metadata !DIExpression()), !dbg !9938
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9944
  %14 = load i8, i8* %13, align 1, !dbg !9944
  %15 = zext i8 %14 to i32, !dbg !9945
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %16, metadata !9935, metadata !DIExpression()), !dbg !9938
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9947
  %18 = load i8, i8* %17, align 2, !dbg !9947
  %19 = zext i8 %18 to i32, !dbg !9948
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9949
  call void @llvm.dbg.value(metadata i32 %20, metadata !9936, metadata !DIExpression()), !dbg !9938
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9950
  %22 = load i8, i8* %21, align 1, !dbg !9950
  %23 = zext i8 %22 to i32, !dbg !9951
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %24, metadata !9937, metadata !DIExpression()), !dbg !9938
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9953

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9955
  br i1 %26, label %69, label %27, !dbg !9957

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9958

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9959
  br i1 %29, label %65, label %30, !dbg !9959

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9961
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9938
  br i1 %31, label %38, label %34, !dbg !9963

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9964
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9964

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9967
  br i1 %37, label %38, label %69, !dbg !9968

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9969
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9970
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9971
  %41 = icmp eq i32 %12, %40, !dbg !9973
  br i1 %41, label %43, label %42, !dbg !9974

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9975
  br label %43, !dbg !9977

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9978
  %45 = icmp eq i32 %16, %44, !dbg !9980
  br i1 %45, label %47, label %46, !dbg !9981

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9982
  br label %47, !dbg !9984

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9985
  %49 = icmp eq i32 %20, %48, !dbg !9987
  br i1 %49, label %51, label %50, !dbg !9988

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9989
  br label %51, !dbg !9991

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9992
  %53 = icmp eq i32 %24, %52, !dbg !9994
  br i1 %53, label %55, label %54, !dbg !9995

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9996
  br label %55, !dbg !9998

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9999
  %57 = load i32, i32* %56, align 4, !dbg !9999
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10001
  %59 = load i32, i32* %58, align 4, !dbg !10001
  %60 = icmp eq i32 %57, %59, !dbg !10002
  br i1 %60, label %63, label %61, !dbg !10003

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10004
  %62 = load i32, i32* %56, align 4, !dbg !10006
  store i32 %62, i32* %58, align 4, !dbg !10007
  br label %63, !dbg !10008

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10009
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10010
  br label %69, !dbg !10011

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9959
  %67 = and i8 %66, 1, !dbg !9959
  %68 = icmp eq i8 %67, 0, !dbg !9959
  br i1 %68, label %30, label %69, !dbg !9959

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9938
  ret i32 %70, !dbg !10012
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10015, metadata !DIExpression()), !dbg !10018
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10016, metadata !DIExpression()), !dbg !10018
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10019
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10019
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10019
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10017, metadata !DIExpression()), !dbg !10018
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10020
  %7 = load i32, i32* %6, align 4, !dbg !10020
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10021
  store i32 %7, i32* %8, align 4, !dbg !10022
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10023, !range !10024
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10025
  %11 = trunc i32 %10 to i8, !dbg !10025
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10026
  store i8 %11, i8* %12, align 4, !dbg !10027
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10028, !range !10029
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10030
  %15 = trunc i32 %14 to i8, !dbg !10030
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10031
  store i8 %15, i8* %16, align 1, !dbg !10032
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10033
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10034, !range !10024
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10035
  %20 = trunc i32 %19 to i8, !dbg !10035
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10036
  store i8 %20, i8* %21, align 2, !dbg !10037
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10038, !range !10039
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10040
  %24 = trunc i32 %23 to i8, !dbg !10040
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10041
  store i8 %24, i8* %25, align 1, !dbg !10042
  ret i32 0, !dbg !10043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10048, metadata !DIExpression()), !dbg !10050
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10051
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10051
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10051
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10049, metadata !DIExpression()), !dbg !10050
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10052
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10052
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10053
  ret i32 %7, !dbg !10054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10059, metadata !DIExpression()), !dbg !10060
  %2 = icmp eq i32 %0, 1024, !dbg !10061
  %3 = select i1 %2, i32 2, i32 0, !dbg !10061
  %4 = icmp eq i32 %0, 1536, !dbg !10061
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10061
  ret i32 %5, !dbg !10062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10065, metadata !DIExpression()), !dbg !10067
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10068
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10068
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10068
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10066, metadata !DIExpression()), !dbg !10067
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10069
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10069
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10070
  ret i32 %7, !dbg !10071
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10076, metadata !DIExpression()), !dbg !10077
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10078
  %3 = icmp ult i32 %2, 4, !dbg !10078
  br i1 %3, label %4, label %7, !dbg !10078

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10078
  %6 = load i32, i32* %5, align 4, !dbg !10078
  br label %7, !dbg !10078

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10079
  ret i32 %8, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10084, metadata !DIExpression()), !dbg !10086
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10087
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10087
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10087
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10085, metadata !DIExpression()), !dbg !10086
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10088
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10088
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10089
  ret i32 %7, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10095, metadata !DIExpression()), !dbg !10097
  call void @llvm.dbg.value(metadata i32 %1, metadata !10096, metadata !DIExpression()), !dbg !10097
  %3 = icmp eq i32 %0, 4096, !dbg !10098
  %4 = icmp eq i32 %1, 0, !dbg !10098
  %5 = select i1 %4, i32 4, i32 3, !dbg !10098
  %6 = select i1 %4, i32 3, i32 2, !dbg !10098
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10098
  ret i32 %7, !dbg !10099
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10102, metadata !DIExpression()), !dbg !10104
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10105
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10105
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10105
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10103, metadata !DIExpression()), !dbg !10104
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10106
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10106
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10107
  ret i32 %7, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = icmp eq i32 %0, 768, !dbg !10115
  %3 = zext i1 %2 to i32, !dbg !10114
  ret i32 %3, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10123, metadata !DIExpression()), !dbg !10124
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10125
  %3 = load volatile i32, i32* %2, align 4, !dbg !10125
  %4 = and i32 %3, 768, !dbg !10125
  ret i32 %4, !dbg !10126
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10127 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10129, metadata !DIExpression()), !dbg !10130
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10131
  %3 = load volatile i32, i32* %2, align 4, !dbg !10131
  %4 = and i32 %3, 4096, !dbg !10131
  ret i32 %4, !dbg !10132
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10135, metadata !DIExpression()), !dbg !10136
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10137
  %3 = load volatile i32, i32* %2, align 4, !dbg !10137
  %4 = and i32 %3, 12288, !dbg !10137
  ret i32 %4, !dbg !10138
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10141, metadata !DIExpression()), !dbg !10142
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10143
  %3 = load volatile i32, i32* %2, align 4, !dbg !10143
  %4 = and i32 %3, 1536, !dbg !10143
  ret i32 %4, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %2 = icmp eq i32 %0, 2, !dbg !10151
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10151
  %4 = icmp eq i32 %0, 1, !dbg !10151
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10151
  ret i32 %5, !dbg !10152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = icmp ult i32 %0, 3, !dbg !10159
  br i1 %2, label %3, label %6, !dbg !10159

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10159
  %5 = load i32, i32* %4, align 4, !dbg !10159
  br label %6, !dbg !10159

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10160
  ret i32 %7, !dbg !10162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata i32 %1, metadata !10168, metadata !DIExpression()), !dbg !10169
  %3 = icmp eq i32 %0, 4, !dbg !10170
  %4 = icmp eq i32 %1, 0, !dbg !10170
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10170
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10170
  ret i32 %6, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = icmp eq i32 %0, 1, !dbg !10178
  %3 = select i1 %2, i32 768, i32 0, !dbg !10177
  ret i32 %3, !dbg !10180
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10185, metadata !DIExpression()), !dbg !10186
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10187
  %3 = load volatile i32, i32* %2, align 4, !dbg !10187
  %4 = and i32 %3, -8193, !dbg !10187
  store volatile i32 %4, i32* %2, align 4, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10189 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10193, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.value(metadata i32 %1, metadata !10194, metadata !DIExpression()), !dbg !10196
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10197
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10197
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10197
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10195, metadata !DIExpression()), !dbg !10196
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10198
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10198
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10199
  ret void, !dbg !10200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10203, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata i32 %1, metadata !10204, metadata !DIExpression()), !dbg !10206
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10207
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10207
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10207
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10205, metadata !DIExpression()), !dbg !10206
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10208
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10208
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10209
  ret void, !dbg !10210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10213, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.value(metadata i32 %1, metadata !10214, metadata !DIExpression()), !dbg !10216
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10217
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10217
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10217
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10215, metadata !DIExpression()), !dbg !10216
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10218
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10218
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10223, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata i32 %1, metadata !10224, metadata !DIExpression()), !dbg !10226
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10227
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10227
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10227
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10225, metadata !DIExpression()), !dbg !10226
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10228
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10228
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10229
  ret void, !dbg !10230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10231 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10233, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.value(metadata i32 %1, metadata !10234, metadata !DIExpression()), !dbg !10238
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10239
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10239
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10239
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10235, metadata !DIExpression()), !dbg !10238
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10240
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10240
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10240
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10236, metadata !DIExpression()), !dbg !10238
  %10 = bitcast i32* %3 to i8*, !dbg !10241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10241
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10242
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10242
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10246
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10246
  %15 = load i8*, i8** %14, align 4, !dbg !10246
  call void @llvm.dbg.value(metadata i32* %3, metadata !10237, metadata !DIExpression(DW_OP_deref)), !dbg !10238
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10247
  %17 = icmp slt i32 %16, 0, !dbg !10248
  br i1 %17, label %18, label %21, !dbg !10249

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10250
  %20 = zext i8 %19 to i32, !dbg !10250
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.137, i32 0, i32 0), i32 noundef %20) #25, !dbg !10250
  br label %31, !dbg !10256

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10257
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10257
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10258
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10259
  %25 = load i32, i32* %3, align 4, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %25, metadata !10237, metadata !DIExpression()), !dbg !10238
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10261
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10262
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10262
  %28 = load volatile i32, i32* %27, align 4, !dbg !10262
  %29 = icmp ugt i32 %28, 16, !dbg !10262
  br i1 %29, label %31, label %30, !dbg !10265

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10266
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.141, i32 0, i32 0)) #25, !dbg !10266
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.140, i32 0, i32 0), i32 noundef 190) #25, !dbg !10266
  unreachable, !dbg !10266

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10268
  ret void, !dbg !10268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10271, metadata !DIExpression()), !dbg !10272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10273
  %3 = load volatile i32, i32* %2, align 4, !dbg !10273
  %4 = or i32 %3, 8192, !dbg !10273
  store volatile i32 %4, i32* %2, align 4, !dbg !10273
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10277, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i8* %1, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32* %2, metadata !10279, metadata !DIExpression()), !dbg !10281
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10282
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10282
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10282
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10280, metadata !DIExpression()), !dbg !10281
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10283
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10283
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10285
  br i1 %9, label %12, label %10, !dbg !10286

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10287
  br label %12, !dbg !10288

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10281
  ret i32 %13, !dbg !10289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef %0) unnamed_addr #4 !dbg !10290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10292, metadata !DIExpression()), !dbg !10293
  %2 = icmp eq i32 %0, 2, !dbg !10294
  %3 = select i1 %2, i8 87, i8 63, !dbg !10294
  %4 = icmp eq i32 %0, 1, !dbg !10294
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10294
  ret i8 %5, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.value(metadata i32 0, metadata !10301, metadata !DIExpression()), !dbg !10302
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10303
  %3 = load volatile i32, i32* %2, align 4, !dbg !10303
  %4 = and i32 %3, -32769, !dbg !10303
  store volatile i32 %4, i32* %2, align 4, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10309, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %1, metadata !10310, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 0, metadata !10311, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.value(metadata i32 %2, metadata !10312, metadata !DIExpression()), !dbg !10313
  %4 = zext i32 %1 to i64, !dbg !10314
  %5 = mul nuw nsw i64 %4, 25, !dbg !10314
  %6 = zext i32 %2 to i64, !dbg !10314
  %7 = shl nuw nsw i64 %6, 2, !dbg !10314
  %8 = udiv i64 %5, %7, !dbg !10314
  %9 = trunc i64 %8 to i32, !dbg !10314
  %10 = udiv i32 %9, 100, !dbg !10314
  %11 = shl nuw nsw i32 %10, 4, !dbg !10314
  %12 = mul i32 %10, -100, !dbg !10314
  %13 = add i32 %12, %9, !dbg !10314
  %14 = shl i32 %13, 4, !dbg !10314
  %15 = add i32 %14, 50, !dbg !10314
  %16 = udiv i32 %15, 100, !dbg !10314
  %17 = and i32 %16, 240, !dbg !10314
  %18 = add nuw nsw i32 %17, %11, !dbg !10314
  %19 = and i32 %16, 15, !dbg !10314
  %20 = and i32 %18, 65520, !dbg !10317
  %21 = or i32 %20, %19, !dbg !10317
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10318
  store volatile i32 %21, i32* %22, align 4, !dbg !10319
  ret void, !dbg !10320
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %1, metadata !10324, metadata !DIExpression()), !dbg !10325
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10326
  %4 = load volatile i32, i32* %3, align 4, !dbg !10326
  %5 = and i32 %4, -769, !dbg !10326
  %6 = or i32 %5, %1, !dbg !10326
  store volatile i32 %6, i32* %3, align 4, !dbg !10326
  ret void, !dbg !10327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10328 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10330, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %1, metadata !10331, metadata !DIExpression()), !dbg !10332
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10333
  %4 = load volatile i32, i32* %3, align 4, !dbg !10333
  %5 = and i32 %4, -4097, !dbg !10333
  %6 = or i32 %5, %1, !dbg !10333
  store volatile i32 %6, i32* %3, align 4, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10335 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10337, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.value(metadata i32 %1, metadata !10338, metadata !DIExpression()), !dbg !10339
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10340
  %4 = load volatile i32, i32* %3, align 4, !dbg !10340
  %5 = and i32 %4, -12289, !dbg !10340
  %6 = or i32 %5, %1, !dbg !10340
  store volatile i32 %6, i32* %3, align 4, !dbg !10340
  ret void, !dbg !10341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10342 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10345, metadata !DIExpression()), !dbg !10346
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10347
  %4 = load volatile i32, i32* %3, align 4, !dbg !10347
  %5 = and i32 %4, -1537, !dbg !10347
  %6 = or i32 %5, %1, !dbg !10347
  store volatile i32 %6, i32* %3, align 4, !dbg !10347
  ret void, !dbg !10348
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10349 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10351, metadata !DIExpression()), !dbg !10352
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10353
  %3 = load volatile i32, i32* %2, align 4, !dbg !10353
  %4 = lshr i32 %3, 3, !dbg !10354
  %5 = and i32 %4, 1, !dbg !10354
  ret i32 %5, !dbg !10355
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10360
  %3 = load volatile i32, i32* %2, align 4, !dbg !10360
  %4 = and i32 %3, 1, !dbg !10360
  ret i32 %4, !dbg !10361
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10362 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10364, metadata !DIExpression()), !dbg !10365
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10366
  %3 = load volatile i32, i32* %2, align 4, !dbg !10366
  %4 = lshr i32 %3, 1, !dbg !10367
  %5 = and i32 %4, 1, !dbg !10367
  ret i32 %5, !dbg !10368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10369 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10373
  %3 = load volatile i32, i32* %2, align 4, !dbg !10373
  %4 = lshr i32 %3, 8, !dbg !10374
  %5 = and i32 %4, 1, !dbg !10374
  ret i32 %5, !dbg !10375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10378, metadata !DIExpression()), !dbg !10379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10380
  store volatile i32 -257, i32* %2, align 4, !dbg !10380
  ret void, !dbg !10381
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10382 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10384, metadata !DIExpression()), !dbg !10386
  %3 = bitcast i32* %2 to i8*, !dbg !10387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10385, metadata !DIExpression()), !dbg !10388
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10389
  %5 = load volatile i32, i32* %4, align 4, !dbg !10389
  store volatile i32 %5, i32* %2, align 4, !dbg !10390
  %6 = load volatile i32, i32* %2, align 4, !dbg !10391
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10392
  %8 = load volatile i32, i32* %7, align 4, !dbg !10392
  store volatile i32 %8, i32* %2, align 4, !dbg !10393
  %9 = load volatile i32, i32* %2, align 4, !dbg !10394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10395
  ret void, !dbg !10395
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10396 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10398, metadata !DIExpression()), !dbg !10400
  %3 = bitcast i32* %2 to i8*, !dbg !10401
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10401
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10399, metadata !DIExpression()), !dbg !10402
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10403
  %5 = load volatile i32, i32* %4, align 4, !dbg !10403
  store volatile i32 %5, i32* %2, align 4, !dbg !10404
  %6 = load volatile i32, i32* %2, align 4, !dbg !10405
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10406
  %8 = load volatile i32, i32* %7, align 4, !dbg !10406
  store volatile i32 %8, i32* %2, align 4, !dbg !10407
  %9 = load volatile i32, i32* %2, align 4, !dbg !10408
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10409
  ret void, !dbg !10409
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10410 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10412, metadata !DIExpression()), !dbg !10414
  %3 = bitcast i32* %2 to i8*, !dbg !10415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10415
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10413, metadata !DIExpression()), !dbg !10416
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10417
  %5 = load volatile i32, i32* %4, align 4, !dbg !10417
  store volatile i32 %5, i32* %2, align 4, !dbg !10418
  %6 = load volatile i32, i32* %2, align 4, !dbg !10419
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10420
  %8 = load volatile i32, i32* %7, align 4, !dbg !10420
  store volatile i32 %8, i32* %2, align 4, !dbg !10421
  %9 = load volatile i32, i32* %2, align 4, !dbg !10422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10423
  ret void, !dbg !10423
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10424 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10426, metadata !DIExpression()), !dbg !10428
  %3 = bitcast i32* %2 to i8*, !dbg !10429
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10429
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10427, metadata !DIExpression()), !dbg !10430
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10431
  %5 = load volatile i32, i32* %4, align 4, !dbg !10431
  store volatile i32 %5, i32* %2, align 4, !dbg !10432
  %6 = load volatile i32, i32* %2, align 4, !dbg !10433
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10434
  %8 = load volatile i32, i32* %7, align 4, !dbg !10434
  store volatile i32 %8, i32* %2, align 4, !dbg !10435
  %9 = load volatile i32, i32* %2, align 4, !dbg !10436
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10437
  ret void, !dbg !10437
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10440, metadata !DIExpression()), !dbg !10441
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10442
  %3 = load volatile i32, i32* %2, align 4, !dbg !10442
  %4 = lshr i32 %3, 7, !dbg !10443
  %5 = and i32 %4, 1, !dbg !10443
  ret i32 %5, !dbg !10444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10445 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10449, metadata !DIExpression()), !dbg !10451
  call void @llvm.dbg.value(metadata i8 %1, metadata !10450, metadata !DIExpression()), !dbg !10451
  %3 = zext i8 %1 to i32, !dbg !10452
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10453
  store volatile i32 %3, i32* %4, align 4, !dbg !10454
  ret void, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10460
  %3 = load volatile i32, i32* %2, align 4, !dbg !10460
  %4 = lshr i32 %3, 5, !dbg !10461
  %5 = and i32 %4, 1, !dbg !10461
  ret i32 %5, !dbg !10462
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10467, metadata !DIExpression()), !dbg !10468
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10469
  %3 = load volatile i32, i32* %2, align 4, !dbg !10469
  %4 = trunc i32 %3 to i8, !dbg !10470
  ret i8 %4, !dbg !10471
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10480
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10481
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10481
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10481
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10475, metadata !DIExpression()), !dbg !10480
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10482
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10482
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10482
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10476, metadata !DIExpression()), !dbg !10480
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10483
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10484
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10484
  %10 = tail call fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %9) #24, !dbg !10486
  br i1 %10, label %14, label %11, !dbg !10487

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10488
  %13 = zext i8 %12 to i32, !dbg !10488
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.144, i32 0, i32 0), i32 noundef %13) #25, !dbg !10488
  br label %62, !dbg !10494

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10495
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10496
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10496
  %18 = load i8*, i8** %17, align 4, !dbg !10496
  %19 = tail call fastcc i32 @clock_control_on.145(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %19, metadata !10479, metadata !DIExpression()), !dbg !10480
  %20 = icmp eq i32 %19, 0, !dbg !10498
  br i1 %20, label %24, label %21, !dbg !10500

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 1) #24, !dbg !10501
  %23 = zext i8 %22 to i32, !dbg !10501
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.146, i32 0, i32 0), i32 noundef %23) #25, !dbg !10501
  br label %62, !dbg !10507

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10508
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10508
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10509
  call void @llvm.dbg.value(metadata i32 %27, metadata !10479, metadata !DIExpression()), !dbg !10480
  %28 = icmp slt i32 %27, 0, !dbg !10510
  br i1 %28, label %62, label %29, !dbg !10512

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10513
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10513
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10514
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10515
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10516
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10517
  %34 = load i32, i32* %33, align 4, !dbg !10517
  %35 = icmp ult i32 %34, 3, !dbg !10519
  br i1 %35, label %39, label %36, !dbg !10519

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.136(i32 noundef 2) #24, !dbg !10520
  %38 = zext i8 %37 to i32, !dbg !10520
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.147, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 0, metadata !10478, metadata !DIExpression()), !dbg !10480
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10519
  %41 = load i32, i32* %40, align 4, !dbg !10519
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10519
  %43 = load i32, i32* %42, align 4, !dbg !10519
  br label %44, !dbg !10519

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10529
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10529
  call void @llvm.dbg.value(metadata i32 %46, metadata !10478, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i32 %45, metadata !10477, metadata !DIExpression()), !dbg !10480
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10530
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10531
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10532
  %49 = load i8, i8* %48, align 4, !dbg !10532, !range !6778
  %50 = icmp eq i8 %49, 0, !dbg !10532
  br i1 %50, label %52, label %51, !dbg !10534

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10535
  br label %52, !dbg !10537

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10538
  %54 = load i32, i32* %53, align 4, !dbg !10538
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10539
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10540
  %56 = load i8, i8* %55, align 4, !dbg !10540, !range !6778
  %57 = icmp eq i8 %56, 0, !dbg !10540
  br i1 %57, label %60, label %58, !dbg !10542

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10543
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10545
  br label %60, !dbg !10546

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10547
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10548
  br label %62, !dbg !10549

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10480
  ret i32 %63, !dbg !10550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10555, metadata !DIExpression()), !dbg !10559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10560
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10560
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10560
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10556, metadata !DIExpression()), !dbg !10559
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10557, metadata !DIExpression()), !dbg !10559
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10561
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10562
  ret void, !dbg !10563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.143(%struct.device* noundef %0) unnamed_addr #1 !dbg !10564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10568, metadata !DIExpression()), !dbg !10569
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10570, !srcloc !10572
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) #24, !dbg !10573
  ret i1 %2, !dbg !10574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.145(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10577, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %1, metadata !10578, metadata !DIExpression()), !dbg !10580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10581
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10581
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10581
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10579, metadata !DIExpression()), !dbg !10580
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10582
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10582
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10583
  ret i32 %8, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10585 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10589, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i8 0, metadata !10590, metadata !DIExpression()), !dbg !10593
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10594
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10592, metadata !DIExpression(DW_OP_deref)), !dbg !10593
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %4, metadata !10591, metadata !DIExpression()), !dbg !10593
  %5 = icmp slt i32 %4, 0, !dbg !10596
  br i1 %5, label %9, label %6, !dbg !10598

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10599
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10592, metadata !DIExpression()), !dbg !10593
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10600
  br label %9, !dbg !10601

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10593
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10602
  ret i32 %10, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10603 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10605, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 12, metadata !10606, metadata !DIExpression()), !dbg !10609
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10610

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10611, metadata !DIExpression()) #23, !dbg !10617
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10620, !srcloc !10621
  call void @llvm.dbg.value(metadata i32 %4, metadata !10616, metadata !DIExpression()) #23, !dbg !10617
  %5 = or i32 %4, 12, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %5, metadata !10607, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata i32 %5, metadata !10624, metadata !DIExpression()) #23, !dbg !10631
  call void @llvm.dbg.value(metadata i32* %2, metadata !10629, metadata !DIExpression()) #23, !dbg !10631
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10633, !srcloc !10634
  call void @llvm.dbg.value(metadata i32 %6, metadata !10630, metadata !DIExpression()) #23, !dbg !10631
  %7 = icmp eq i32 %6, 0, !dbg !10610
  br i1 %7, label %8, label %3, !dbg !10622, !llvm.loop !10635

8:                                                ; preds = %3
  ret void, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10637 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10639, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %1, metadata !10640, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 %2, metadata !10641, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10644
  %5 = load volatile i32, i32* %4, align 4, !dbg !10644
  %6 = and i32 %5, -5633, !dbg !10644
  %7 = or i32 %2, %1, !dbg !10644
  %8 = or i32 %7, %6, !dbg !10644
  store volatile i32 %8, i32* %4, align 4, !dbg !10644
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10645
  %10 = load volatile i32, i32* %9, align 4, !dbg !10645
  %11 = and i32 %10, -12289, !dbg !10645
  store volatile i32 %11, i32* %9, align 4, !dbg !10645
  ret void, !dbg !10646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10647 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10649, metadata !DIExpression()), !dbg !10650
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10651
  %3 = load volatile i32, i32* %2, align 4, !dbg !10651
  %4 = or i32 %3, 8, !dbg !10651
  store volatile i32 %4, i32* %2, align 4, !dbg !10651
  ret void, !dbg !10652
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10653 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10657, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata i32 0, metadata !10659, metadata !DIExpression()), !dbg !10660
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10661
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10661
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10662
  %5 = load i8, i8* %4, align 4, !dbg !10662
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10663
  ret i32 %6, !dbg !10664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.148(%struct.device* noundef %0) unnamed_addr #1 !dbg !10665 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10667, metadata !DIExpression()), !dbg !10668
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10669
  ret i1 %2, !dbg !10670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10673, metadata !DIExpression()), !dbg !10674
  tail call fastcc void @__NVIC_SetPriority.150() #24, !dbg !10675
  store i32 8399, i32* @last_load, align 4, !dbg !10676
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10677
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10678
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10679
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10680
  %3 = or i32 %2, 7, !dbg !10680
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10680
  ret i32 0, !dbg !10681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.150() unnamed_addr #14 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10684, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 1, metadata !10685, metadata !DIExpression()), !dbg !10686
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10687
  ret void, !dbg !10690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10693, metadata !DIExpression()), !dbg !10695
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10696
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10697
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10698
  %5 = add i32 %4, %3, !dbg !10698
  store i32 %5, i32* @cycle_count, align 4, !dbg !10698
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10699
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10700
  %7 = sub i32 %5, %6, !dbg !10703
  %8 = udiv i32 %7, 8400, !dbg !10704
  call void @llvm.dbg.value(metadata i32 %8, metadata !10694, metadata !DIExpression()), !dbg !10695
  %9 = mul nuw i32 %8, 8400, !dbg !10705
  %10 = add i32 %9, %6, !dbg !10706
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10706
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10707
  tail call void @z_arm_int_exit() #25, !dbg !10708
  ret void, !dbg !10709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10710 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10715
  call void @llvm.dbg.value(metadata i32 %1, metadata !10712, metadata !DIExpression()), !dbg !10716
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10717
  call void @llvm.dbg.value(metadata i32 %2, metadata !10713, metadata !DIExpression()), !dbg !10716
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %3, metadata !10714, metadata !DIExpression()), !dbg !10716
  %4 = and i32 %2, 65536, !dbg !10719
  %5 = icmp ne i32 %4, 0, !dbg !10719
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10721
  %8 = load i32, i32* @last_load, align 4, !dbg !10716
  br i1 %7, label %9, label %13, !dbg !10721

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10722
  %11 = add i32 %10, %8, !dbg !10722
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10722
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10724
  br label %13, !dbg !10725

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10726
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10727
  %16 = add i32 %14, %15, !dbg !10728
  ret i32 %16, !dbg !10729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10734, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i1 %1, metadata !10735, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10747
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10748
  br i1 %4, label %5, label %8, !dbg !10748

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  %7 = and i32 %6, -2, !dbg !10750
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  store i32 -16777216, i32* @last_load, align 4, !dbg !10752
  br label %60, !dbg !10753

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %9, metadata !10739, metadata !DIExpression()), !dbg !10747
  br i1 %3, label %18, label %10, !dbg !10755

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10755
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()), !dbg !10747
  %12 = icmp slt i32 %11, 1, !dbg !10756
  br i1 %12, label %18, label %13, !dbg !10756

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10756
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10756
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10756
  %17 = add nuw nsw i32 %16, 8399, !dbg !10756
  br label %18, !dbg !10756

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10764
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10766, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10764
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10774
  br i1 %21, label %23, label %22, !dbg !10777

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10778
  unreachable, !dbg !10778

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %24, metadata !10769, metadata !DIExpression()) #23, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %24, metadata !10763, metadata !DIExpression()) #23, !dbg !10764
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10780
  call void @llvm.dbg.value(metadata i32 %24, metadata !10740, metadata !DIExpression()), !dbg !10747
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %25, metadata !10745, metadata !DIExpression()), !dbg !10747
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10782
  call void @llvm.dbg.value(metadata i32 %26, metadata !10737, metadata !DIExpression()), !dbg !10747
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10783
  %28 = add i32 %27, %25, !dbg !10783
  store i32 %28, i32* @cycle_count, align 4, !dbg !10783
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10784
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10785
  %30 = sub i32 %28, %29, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %30, metadata !10746, metadata !DIExpression()), !dbg !10747
  %31 = icmp slt i32 %30, 0, !dbg !10787
  br i1 %31, label %41, label %32, !dbg !10789

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()), !dbg !10747
  %33 = add nuw i32 %19, %30, !dbg !10790
  %34 = urem i32 %33, 8400, !dbg !10792
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10736, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10747
  %35 = sub nuw nsw i32 %19, %34, !dbg !10793
  call void @llvm.dbg.value(metadata i32 %35, metadata !10736, metadata !DIExpression()), !dbg !10747
  %36 = icmp ugt i32 %35, 1024, !dbg !10794
  br i1 %36, label %37, label %39, !dbg !10794

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10736, metadata !DIExpression()), !dbg !10747
  %38 = icmp ugt i32 %35, 16766400, !dbg !10795
  br i1 %38, label %41, label %39, !dbg !10797

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10798
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %43, metadata !10738, metadata !DIExpression()), !dbg !10747
  %44 = add nsw i32 %42, -1, !dbg !10800
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10801
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10802
  %45 = icmp ult i32 %26, %43, !dbg !10803
  br i1 %45, label %46, label %51, !dbg !10805

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10806
  %48 = add i32 %26, %9, !dbg !10808
  %49 = sub i32 %48, %43, !dbg !10809
  %50 = add i32 %49, %47, !dbg !10806
  br label %55, !dbg !10810

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10811
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10813
  %54 = add i32 %52, %53, !dbg !10813
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10814
  store i32 %56, i32* @cycle_count, align 4, !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10821
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10823
  br i1 %57, label %59, label %58, !dbg !10826

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10827
  unreachable, !dbg !10827

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10815, metadata !DIExpression()) #23, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %24, metadata !10829, metadata !DIExpression()) #23, !dbg !10832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10834, !srcloc !10835
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10837 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10841
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10843, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10846
  br i1 %2, label %4, label %3, !dbg !10847

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  unreachable, !dbg !10848

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()), !dbg !10850
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10851
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10852
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10853
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10840, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10850
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10854
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10856
  br i1 %8, label %10, label %9, !dbg !10857

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10858
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10858
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10858
  unreachable, !dbg !10858

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10859
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10840, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10850
  %12 = sub i32 %11, %7, !dbg !10860
  call void @llvm.dbg.value(metadata i32 %12, metadata !10840, metadata !DIExpression()), !dbg !10850
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %13, metadata !10769, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %13, metadata !10763, metadata !DIExpression()) #23, !dbg !10841
  call void @llvm.dbg.value(metadata i32 %13, metadata !10839, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10861
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10863, !srcloc !10835
  %14 = udiv i32 %12, 8400, !dbg !10864
  ret i32 %14, !dbg !10865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10866 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10757, metadata !DIExpression()) #23, !dbg !10870
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10872, !srcloc !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10770, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10875
  br i1 %2, label %4, label %3, !dbg !10876

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10877
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.154, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10877
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 148) #25, !dbg !10877
  unreachable, !dbg !10877

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 undef, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10868, metadata !DIExpression()), !dbg !10879
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10880
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10869, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10820, metadata !DIExpression()) #23, !dbg !10882
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10884
  br i1 %7, label %9, label %8, !dbg !10885

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10886
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.156, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 194) #25, !dbg !10886
  unreachable, !dbg !10886

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10887
  call void @llvm.dbg.value(metadata i32 %10, metadata !10869, metadata !DIExpression()), !dbg !10879
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %11, metadata !10769, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %11, metadata !10763, metadata !DIExpression()) #23, !dbg !10870
  call void @llvm.dbg.value(metadata i32 %11, metadata !10868, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.value(metadata i32 undef, metadata !10815, metadata !DIExpression()) #23, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10829, metadata !DIExpression()) #23, !dbg !10888
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10890, !srcloc !10835
  ret i32 %10, !dbg !10891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10892 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10893
  %2 = icmp eq i32 %1, -16777216, !dbg !10895
  br i1 %2, label %3, label %6, !dbg !10896

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10897
  %5 = or i32 %4, 1, !dbg !10897
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10897
  br label %6, !dbg !10899

6:                                                ; preds = %3, %0
  ret void, !dbg !10900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10901 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10902
  %2 = and i32 %1, -2, !dbg !10902
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10902
  ret void, !dbg !10903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10930, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata i8 %1, metadata !10931, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10932, metadata !DIExpression()), !dbg !10933
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10934
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10934
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10933
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10935
  %8 = load i8, i8* %6, align 4, !dbg !10936
  %9 = zext i8 %8 to i32, !dbg !10937
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10937
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10938
  br i1 %11, label %18, label %24, !dbg !10939

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10933
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10935
  %14 = load i8, i8* %6, align 4, !dbg !10936
  %15 = zext i8 %14 to i32, !dbg !10937
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10937
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10938
  br i1 %17, label %18, label %24, !dbg !10939, !llvm.loop !10940

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10942
  %21 = load i8, i8* %20, align 1, !dbg !10942
  %22 = icmp eq i8 %21, %1, !dbg !10945
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10946
  br i1 %22, label %24, label %12, !dbg !10947

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10933
  ret i32 %25, !dbg !10948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10960, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 %1, metadata !10961, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 %2, metadata !10962, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10965, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i32 0, metadata !10966, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.value(metadata i8 0, metadata !10967, metadata !DIExpression()), !dbg !10977
  %4 = icmp eq i8 %1, 0, !dbg !10978
  br i1 %4, label %35, label %5, !dbg !10979

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10978
  br label %9, !dbg !10979

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10967, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i32 %29, metadata !10965, metadata !DIExpression()), !dbg !10976
  %8 = icmp eq i32 %34, %6, !dbg !10978
  br i1 %8, label %35, label %9, !dbg !10979, !llvm.loop !10980

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10967, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.value(metadata i32 %11, metadata !10965, metadata !DIExpression()), !dbg !10976
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10982
  %13 = load i32, i32* %12, align 4, !dbg !10982
  call void @llvm.dbg.value(metadata i32 %13, metadata !10964, metadata !DIExpression()), !dbg !10976
  %14 = and i32 %13, 31, !dbg !10983
  %15 = icmp ult i32 %14, 16, !dbg !10984
  br i1 %15, label %16, label %20, !dbg !10985

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10986
  %18 = load i32, i32* %17, align 4, !dbg !10986
  %19 = or i32 %18, 32, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %19, metadata !10965, metadata !DIExpression()), !dbg !10976
  br label %28, !dbg !10989

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10990

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10991
  %23 = load i32, i32* %22, align 4, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %23, metadata !10969, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10992
  %24 = lshr i32 %23, 7, !dbg !10993
  %25 = and i32 %24, 16, !dbg !10993
  %26 = or i32 %25, %23, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %26, metadata !10965, metadata !DIExpression()), !dbg !10976
  br label %28, !dbg !10994

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10976
  call void @llvm.dbg.value(metadata i32 %29, metadata !10965, metadata !DIExpression()), !dbg !10976
  %30 = lshr i32 %13, 5, !dbg !10995
  %31 = and i32 %30, 255, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %31, metadata !10963, metadata !DIExpression()), !dbg !10976
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %32, metadata !10966, metadata !DIExpression()), !dbg !10976
  %33 = icmp slt i32 %32, 0, !dbg !10997
  %34 = add nuw nsw i32 %10, 1, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %34, metadata !10967, metadata !DIExpression()), !dbg !10977
  br i1 %33, label %35, label %7, !dbg !11000

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11006, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %1, metadata !11007, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %2, metadata !11008, metadata !DIExpression()), !dbg !11010
  %4 = icmp ugt i32 %0, 175, !dbg !11011
  br i1 %4, label %16, label %5, !dbg !11013

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11014
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11015
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11015
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11009, metadata !DIExpression()), !dbg !11010
  %9 = add nsw i32 %6, -8, !dbg !11016
  %10 = icmp ult i32 %9, 3, !dbg !11016
  br i1 %10, label %16, label %11, !dbg !11018

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.161(%struct.device* noundef %8) #24, !dbg !11019
  br i1 %12, label %13, label %16, !dbg !11020

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11021
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11022
  br label %16, !dbg !11023

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11010
  ret i32 %17, !dbg !11024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.161(%struct.device* noundef %0) unnamed_addr #1 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11029, metadata !DIExpression()), !dbg !11030
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11031, !srcloc !11033
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.162(%struct.device* noundef %0) #24, !dbg !11034
  ret i1 %2, !dbg !11035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.162(%struct.device* noundef %0) unnamed_addr #1 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11038, metadata !DIExpression()), !dbg !11039
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11040
  ret i1 %2, !dbg !11041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11042 {
  ret void, !dbg !11043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11044 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11046, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 0, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 2, metadata !11048, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 0, metadata !11049, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 2, metadata !11050, metadata !DIExpression()), !dbg !11051
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11052
  %2 = and i32 %1, 12, !dbg !11053
  call void @llvm.dbg.value(metadata i32 %2, metadata !11046, metadata !DIExpression()), !dbg !11051
  %3 = icmp eq i32 %2, 8, !dbg !11054
  br i1 %3, label %4, label %18, !dbg !11054

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %5, metadata !11049, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11051
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11057
  %7 = and i32 %6, 63, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %7, metadata !11050, metadata !DIExpression()), !dbg !11051
  %8 = udiv i32 16000000, %7, !dbg !11059
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11059
  %10 = lshr i32 %9, 6, !dbg !11059
  %11 = and i32 %10, 511, !dbg !11059
  %12 = mul i32 %11, %8, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %12, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %12, metadata !11047, metadata !DIExpression()), !dbg !11051
  call void @llvm.dbg.value(metadata i32 %12, metadata !11047, metadata !DIExpression()), !dbg !11051
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11061
  %14 = lshr i32 %13, 15, !dbg !11062
  %15 = and i32 %14, 6, !dbg !11062
  %16 = add nuw nsw i32 %15, 2, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %16, metadata !11048, metadata !DIExpression()), !dbg !11051
  %17 = udiv i32 %12, %16, !dbg !11063
  br label %18, !dbg !11064

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11065
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11066
  %21 = lshr i32 %20, 4, !dbg !11067
  %22 = and i32 %21, 15, !dbg !11067
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11068
  %24 = load i8, i8* %23, align 1, !dbg !11068
  %25 = zext i8 %24 to i32, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %25, metadata !11046, metadata !DIExpression()), !dbg !11051
  %26 = lshr i32 %19, %25, !dbg !11069
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11069
  ret void, !dbg !11070
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11071 {
  ret i32 0, !dbg !11076
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11077 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11115
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11116
  br i1 %3, label %317, label %4, !dbg !11118

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11119
  %6 = load i32, i32* %5, align 4, !dbg !11119
  %7 = and i32 %6, 1, !dbg !11121
  %8 = icmp eq i32 %7, 0, !dbg !11122
  br i1 %8, label %66, label %9, !dbg !11123

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11124
  %11 = and i32 %10, 12, !dbg !11124
  %12 = icmp eq i32 %11, 4, !dbg !11127
  br i1 %12, label %21, label %13, !dbg !11128

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11129
  %15 = and i32 %14, 12, !dbg !11129
  %16 = icmp eq i32 %15, 8, !dbg !11130
  br i1 %16, label %17, label %29, !dbg !11131

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11132
  %19 = and i32 %18, 4194304, !dbg !11133
  %20 = icmp eq i32 %19, 0, !dbg !11134
  br i1 %20, label %29, label %21, !dbg !11135

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11136
  %23 = and i32 %22, 131072, !dbg !11136
  %24 = icmp eq i32 %23, 0, !dbg !11136
  br i1 %24, label %66, label %25, !dbg !11139

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11140
  %27 = load i32, i32* %26, align 4, !dbg !11140
  %28 = icmp eq i32 %27, 0, !dbg !11141
  br i1 %28, label %317, label %66, !dbg !11142

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11143
  %31 = load i32, i32* %30, align 4, !dbg !11143
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11147

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11148
  %34 = or i32 %33, 65536, !dbg !11148
  br label %45, !dbg !11148

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11150
  %37 = or i32 %36, 262144, !dbg !11150
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11150
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11150
  %39 = or i32 %38, 65536, !dbg !11150
  br label %45, !dbg !11150

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %42 = and i32 %41, -65537, !dbg !11153
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %44 = and i32 %43, -262145, !dbg !11153
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11155
  %47 = load i32, i32* %30, align 4, !dbg !11156
  %48 = icmp eq i32 %47, 0, !dbg !11158
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %49, metadata !11105, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %49, metadata !11105, metadata !DIExpression()), !dbg !11115
  br i1 %48, label %58, label %50, !dbg !11160

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11161
  %52 = and i32 %51, 131072, !dbg !11163
  %53 = icmp eq i32 %52, 0, !dbg !11163
  br i1 %53, label %54, label %66, !dbg !11164

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11165
  %56 = sub i32 %55, %49, !dbg !11168
  %57 = icmp ugt i32 %56, 100, !dbg !11169
  br i1 %57, label %317, label %50, !dbg !11170, !llvm.loop !11171

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11173
  %60 = and i32 %59, 131072, !dbg !11173
  %61 = icmp eq i32 %60, 0, !dbg !11173
  br i1 %61, label %66, label %62, !dbg !11175

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11176
  %64 = sub i32 %63, %49, !dbg !11179
  %65 = icmp ugt i32 %64, 100, !dbg !11180
  br i1 %65, label %317, label %58, !dbg !11181, !llvm.loop !11182

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11184
  %68 = and i32 %67, 2, !dbg !11186
  %69 = icmp eq i32 %68, 0, !dbg !11187
  br i1 %69, label %121, label %70, !dbg !11188

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11189
  %72 = and i32 %71, 12, !dbg !11189
  %73 = icmp eq i32 %72, 0, !dbg !11192
  br i1 %73, label %82, label %74, !dbg !11193

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11194
  %76 = and i32 %75, 12, !dbg !11194
  %77 = icmp eq i32 %76, 8, !dbg !11195
  br i1 %77, label %78, label %90, !dbg !11196

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11197
  %80 = and i32 %79, 4194304, !dbg !11198
  %81 = icmp eq i32 %80, 0, !dbg !11199
  br i1 %81, label %82, label %90, !dbg !11200

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11201
  %84 = and i32 %83, 2, !dbg !11201
  %85 = icmp eq i32 %84, 0, !dbg !11201
  br i1 %85, label %114, label %86, !dbg !11204

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11205
  %88 = load i32, i32* %87, align 4, !dbg !11205
  %89 = icmp eq i32 %88, 1, !dbg !11206
  br i1 %89, label %114, label %317, !dbg !11207

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11208
  %92 = load i32, i32* %91, align 4, !dbg !11208
  %93 = icmp eq i32 %92, 0, !dbg !11211
  br i1 %93, label %104, label %94, !dbg !11212

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11213
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11215
  call void @llvm.dbg.value(metadata i32 %95, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %96, !dbg !11216

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11217
  %98 = and i32 %97, 2, !dbg !11218
  %99 = icmp eq i32 %98, 0, !dbg !11218
  br i1 %99, label %100, label %114, !dbg !11216

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11219
  %102 = sub i32 %101, %95, !dbg !11222
  %103 = icmp ugt i32 %102, 2, !dbg !11223
  br i1 %103, label %317, label %96, !dbg !11224, !llvm.loop !11225

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11227
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %105, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %106, !dbg !11230

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11231
  %108 = and i32 %107, 2, !dbg !11231
  %109 = icmp eq i32 %108, 0, !dbg !11231
  br i1 %109, label %121, label %110, !dbg !11230

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11232
  %112 = sub i32 %111, %105, !dbg !11235
  %113 = icmp ugt i32 %112, 2, !dbg !11236
  br i1 %113, label %317, label %106, !dbg !11237, !llvm.loop !11238

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11240
  %116 = and i32 %115, -249, !dbg !11240
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11240
  %118 = load i32, i32* %117, align 4, !dbg !11240
  %119 = shl i32 %118, 3, !dbg !11240
  %120 = or i32 %119, %116, !dbg !11240
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11240
  br label %121, !dbg !11241

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11241
  %123 = and i32 %122, 8, !dbg !11243
  %124 = icmp eq i32 %123, 0, !dbg !11244
  br i1 %124, label %149, label %125, !dbg !11245

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11246
  %127 = load i32, i32* %126, align 4, !dbg !11246
  %128 = icmp eq i32 %127, 0, !dbg !11249
  br i1 %128, label %139, label %129, !dbg !11250

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11251
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %130, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %131, !dbg !11254

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11255
  %133 = and i32 %132, 2, !dbg !11256
  %134 = icmp eq i32 %133, 0, !dbg !11256
  br i1 %134, label %135, label %149, !dbg !11254

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11257
  %137 = sub i32 %136, %130, !dbg !11260
  %138 = icmp ugt i32 %137, 2, !dbg !11261
  br i1 %138, label %317, label %131, !dbg !11262, !llvm.loop !11263

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11265
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11267
  call void @llvm.dbg.value(metadata i32 %140, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %141, !dbg !11268

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11269
  %143 = and i32 %142, 2, !dbg !11269
  %144 = icmp eq i32 %143, 0, !dbg !11269
  br i1 %144, label %149, label %145, !dbg !11268

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11270
  %147 = sub i32 %146, %140, !dbg !11273
  %148 = icmp ugt i32 %147, 2, !dbg !11274
  br i1 %148, label %317, label %141, !dbg !11275, !llvm.loop !11276

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11278
  %151 = and i32 %150, 4, !dbg !11279
  %152 = icmp eq i32 %151, 0, !dbg !11280
  br i1 %152, label %221, label %153, !dbg !11281

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11107, metadata !DIExpression()), !dbg !11282
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11283
  %155 = and i32 %154, 268435456, !dbg !11283
  %156 = icmp eq i32 %155, 0, !dbg !11283
  br i1 %156, label %157, label %164, !dbg !11284

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11285
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11285
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11111, metadata !DIExpression()), !dbg !11285
  store volatile i32 0, i32* %2, align 4, !dbg !11285
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11285
  %160 = or i32 %159, 268435456, !dbg !11285
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11285
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11285
  %162 = and i32 %161, 268435456, !dbg !11285
  store volatile i32 %162, i32* %2, align 4, !dbg !11285
  %163 = load volatile i32, i32* %2, align 4, !dbg !11285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11286
  call void @llvm.dbg.value(metadata i32 1, metadata !11107, metadata !DIExpression()), !dbg !11282
  br label %164, !dbg !11287

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11107, metadata !DIExpression()), !dbg !11282
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11288
  %166 = and i32 %165, 256, !dbg !11288
  %167 = icmp eq i32 %166, 0, !dbg !11288
  br i1 %167, label %168, label %180, !dbg !11290

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11291
  %170 = or i32 %169, 256, !dbg !11291
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11291
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11293
  call void @llvm.dbg.value(metadata i32 %171, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %172, !dbg !11294

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11295
  %174 = and i32 %173, 256, !dbg !11295
  %175 = icmp eq i32 %174, 0, !dbg !11295
  br i1 %175, label %176, label %180, !dbg !11294

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11296
  %178 = sub i32 %177, %171, !dbg !11299
  %179 = icmp ugt i32 %178, 2, !dbg !11300
  br i1 %179, label %317, label %172, !dbg !11301, !llvm.loop !11302

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11304
  %182 = load i32, i32* %181, align 4, !dbg !11304
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11307

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11308
  %185 = or i32 %184, 1, !dbg !11308
  br label %196, !dbg !11308

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11310
  %188 = or i32 %187, 4, !dbg !11310
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11310
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11310
  %190 = or i32 %189, 1, !dbg !11310
  br label %196, !dbg !11310

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11313
  %193 = and i32 %192, -2, !dbg !11313
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11313
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11313
  %195 = and i32 %194, -5, !dbg !11313
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11315
  %198 = load i32, i32* %181, align 4, !dbg !11316
  %199 = icmp eq i32 %198, 0, !dbg !11318
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11319
  call void @llvm.dbg.value(metadata i32 %200, metadata !11105, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %200, metadata !11105, metadata !DIExpression()), !dbg !11115
  br i1 %199, label %209, label %201, !dbg !11320

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11321
  %203 = and i32 %202, 2, !dbg !11323
  %204 = icmp eq i32 %203, 0, !dbg !11323
  br i1 %204, label %205, label %217, !dbg !11324

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11325
  %207 = sub i32 %206, %200, !dbg !11328
  %208 = icmp ugt i32 %207, 5000, !dbg !11329
  br i1 %208, label %317, label %201, !dbg !11330, !llvm.loop !11331

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11333
  %211 = and i32 %210, 2, !dbg !11333
  %212 = icmp eq i32 %211, 0, !dbg !11333
  br i1 %212, label %217, label %213, !dbg !11335

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11336
  %215 = sub i32 %214, %200, !dbg !11339
  %216 = icmp ugt i32 %215, 5000, !dbg !11340
  br i1 %216, label %317, label %209, !dbg !11341, !llvm.loop !11342

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11344

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11345
  %220 = and i32 %219, -268435457, !dbg !11345
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11345
  br label %221, !dbg !11348

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11349
  %223 = load i32, i32* %222, align 4, !dbg !11349
  %224 = icmp eq i32 %223, 0, !dbg !11351
  br i1 %224, label %316, label %225, !dbg !11352

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11353
  %227 = and i32 %226, 12, !dbg !11353
  %228 = icmp eq i32 %227, 8, !dbg !11356
  br i1 %228, label %277, label %229, !dbg !11357

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11358
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11361
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %231, metadata !11105, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 %231, metadata !11105, metadata !DIExpression()), !dbg !11115
  br i1 %230, label %232, label %269, !dbg !11362

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11363
  %234 = and i32 %233, 33554432, !dbg !11363
  %235 = icmp eq i32 %234, 0, !dbg !11363
  br i1 %235, label %240, label %236, !dbg !11365

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11366
  %238 = sub i32 %237, %231, !dbg !11369
  %239 = icmp ugt i32 %238, 2, !dbg !11370
  br i1 %239, label %317, label %232, !dbg !11371, !llvm.loop !11372

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11374
  %242 = load i32, i32* %241, align 4, !dbg !11374
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11374
  %244 = load i32, i32* %243, align 4, !dbg !11374
  %245 = or i32 %244, %242, !dbg !11374
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11374
  %247 = load i32, i32* %246, align 4, !dbg !11374
  %248 = shl i32 %247, 6, !dbg !11374
  %249 = or i32 %245, %248, !dbg !11374
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11374
  %251 = load i32, i32* %250, align 4, !dbg !11374
  %252 = shl i32 %251, 15, !dbg !11374
  %253 = add i32 %252, -65536, !dbg !11374
  %254 = and i32 %253, -65536, !dbg !11374
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11374
  %256 = load i32, i32* %255, align 4, !dbg !11374
  %257 = shl i32 %256, 24, !dbg !11374
  %258 = or i32 %249, %257, !dbg !11374
  %259 = or i32 %258, %254, !dbg !11374
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11374
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11375
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %260, metadata !11105, metadata !DIExpression()), !dbg !11115
  br label %261, !dbg !11377

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11378
  %263 = and i32 %262, 33554432, !dbg !11379
  %264 = icmp eq i32 %263, 0, !dbg !11379
  br i1 %264, label %265, label %316, !dbg !11377

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11380
  %267 = sub i32 %266, %260, !dbg !11383
  %268 = icmp ugt i32 %267, 2, !dbg !11384
  br i1 %268, label %317, label %261, !dbg !11385, !llvm.loop !11386

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11388
  %271 = and i32 %270, 33554432, !dbg !11388
  %272 = icmp eq i32 %271, 0, !dbg !11388
  br i1 %272, label %316, label %273, !dbg !11390

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11391
  %275 = sub i32 %274, %231, !dbg !11394
  %276 = icmp ugt i32 %275, 2, !dbg !11395
  br i1 %276, label %317, label %269, !dbg !11396, !llvm.loop !11397

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11399
  br i1 %278, label %317, label %279, !dbg !11402

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11403
  call void @llvm.dbg.value(metadata i32 %280, metadata !11106, metadata !DIExpression()), !dbg !11115
  %281 = and i32 %280, 4194304, !dbg !11405
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11407
  %283 = load i32, i32* %282, align 4, !dbg !11407
  %284 = icmp eq i32 %281, %283, !dbg !11408
  br i1 %284, label %285, label %317, !dbg !11409

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11410
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11411
  %288 = load i32, i32* %287, align 4, !dbg !11411
  %289 = icmp eq i32 %286, %288, !dbg !11412
  br i1 %289, label %290, label %317, !dbg !11413

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11414
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11415
  %293 = load i32, i32* %292, align 4, !dbg !11415
  %294 = shl i32 %293, 6, !dbg !11416
  %295 = icmp eq i32 %291, %294, !dbg !11417
  br i1 %295, label %296, label %317, !dbg !11418

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11419
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11420
  %299 = load i32, i32* %298, align 4, !dbg !11420
  %300 = shl i32 %299, 15, !dbg !11421
  %301 = add i32 %300, -65536, !dbg !11421
  %302 = and i32 %301, -65536, !dbg !11421
  %303 = icmp eq i32 %297, %302, !dbg !11422
  br i1 %303, label %304, label %317, !dbg !11423

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11424
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11425
  %307 = load i32, i32* %306, align 4, !dbg !11425
  %308 = shl i32 %307, 24, !dbg !11426
  %309 = icmp eq i32 %305, %308, !dbg !11427
  br i1 %309, label %310, label %317, !dbg !11428

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11429
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11430
  %313 = load i32, i32* %312, align 4, !dbg !11430
  %314 = shl i32 %313, 28, !dbg !11431
  %315 = icmp eq i32 %311, %314, !dbg !11432
  br i1 %315, label %316, label %317, !dbg !11433

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11434

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11115
  ret i32 %318, !dbg !11435
}

; Function Attrs: optsize
declare !dbg !11436 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11438 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11451, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata i32 %1, metadata !11452, metadata !DIExpression()), !dbg !11454
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11455
  br i1 %3, label %115, label %4, !dbg !11457

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11458
  %6 = and i32 %5, 7, !dbg !11458
  %7 = icmp ult i32 %6, %1, !dbg !11460
  br i1 %7, label %8, label %13, !dbg !11461

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11462
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11462
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11464
  %11 = and i32 %10, 7, !dbg !11464
  %12 = icmp eq i32 %11, %1, !dbg !11466
  br i1 %12, label %13, label %115, !dbg !11467

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11468
  %15 = load i32, i32* %14, align 4, !dbg !11468
  %16 = and i32 %15, 2, !dbg !11470
  %17 = icmp eq i32 %16, 0, !dbg !11471
  br i1 %17, label %39, label %18, !dbg !11472

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11473
  %20 = icmp eq i32 %19, 0, !dbg !11476
  br i1 %20, label %25, label %21, !dbg !11477

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %23 = or i32 %22, 7168, !dbg !11478
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11478
  %24 = load i32, i32* %14, align 4, !dbg !11480
  br label %25, !dbg !11482

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11480
  %27 = and i32 %26, 8, !dbg !11483
  %28 = icmp eq i32 %27, 0, !dbg !11484
  br i1 %28, label %32, label %29, !dbg !11485

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11486
  %31 = or i32 %30, 57344, !dbg !11486
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11486
  br label %32, !dbg !11488

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  %34 = and i32 %33, -241, !dbg !11489
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11489
  %36 = load i32, i32* %35, align 4, !dbg !11489
  %37 = or i32 %34, %36, !dbg !11489
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11489
  %38 = load i32, i32* %14, align 4, !dbg !11490
  br label %39, !dbg !11492

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11490
  %41 = and i32 %40, 1, !dbg !11493
  %42 = icmp eq i32 %41, 0, !dbg !11494
  br i1 %42, label %73, label %43, !dbg !11495

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11496
  %45 = load i32, i32* %44, align 4, !dbg !11496
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11499

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11500
  %48 = and i32 %47, 131072, !dbg !11503
  %49 = icmp eq i32 %48, 0, !dbg !11503
  br i1 %49, label %115, label %58, !dbg !11504

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11505
  %52 = and i32 %51, 33554432, !dbg !11509
  %53 = icmp eq i32 %52, 0, !dbg !11509
  br i1 %53, label %115, label %58, !dbg !11510

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11511
  %56 = and i32 %55, 2, !dbg !11514
  %57 = icmp eq i32 %56, 0, !dbg !11514
  br i1 %57, label %115, label %58, !dbg !11515

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %60 = and i32 %59, -4, !dbg !11516
  %61 = or i32 %60, %45, !dbg !11516
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11517
  call void @llvm.dbg.value(metadata i32 %62, metadata !11453, metadata !DIExpression()), !dbg !11454
  br label %63, !dbg !11518

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11519
  %65 = and i32 %64, 12, !dbg !11519
  %66 = load i32, i32* %44, align 4, !dbg !11520
  %67 = shl i32 %66, 2, !dbg !11521
  %68 = icmp eq i32 %65, %67, !dbg !11522
  br i1 %68, label %73, label %69, !dbg !11518

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11523
  %71 = sub i32 %70, %62, !dbg !11526
  %72 = icmp ugt i32 %71, 5000, !dbg !11527
  br i1 %72, label %115, label %63, !dbg !11528, !llvm.loop !11529

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11531
  %75 = and i32 %74, 7, !dbg !11531
  %76 = icmp ugt i32 %75, %1, !dbg !11533
  br i1 %76, label %77, label %82, !dbg !11534

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11535
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11535
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11537
  %80 = and i32 %79, 7, !dbg !11537
  %81 = icmp eq i32 %80, %1, !dbg !11539
  br i1 %81, label %82, label %115, !dbg !11540

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11541
  %84 = and i32 %83, 4, !dbg !11543
  %85 = icmp eq i32 %84, 0, !dbg !11544
  br i1 %85, label %93, label %86, !dbg !11545

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11546
  %88 = and i32 %87, -7169, !dbg !11546
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11546
  %90 = load i32, i32* %89, align 4, !dbg !11546
  %91 = or i32 %88, %90, !dbg !11546
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11546
  %92 = load i32, i32* %14, align 4, !dbg !11548
  br label %93, !dbg !11550

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11548
  %95 = and i32 %94, 8, !dbg !11551
  %96 = icmp eq i32 %95, 0, !dbg !11552
  br i1 %96, label %104, label %97, !dbg !11553

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11554
  %99 = and i32 %98, -57345, !dbg !11554
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11554
  %101 = load i32, i32* %100, align 4, !dbg !11554
  %102 = shl i32 %101, 3, !dbg !11554
  %103 = or i32 %102, %99, !dbg !11554
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11554
  br label %104, !dbg !11556

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11557
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11558
  %107 = lshr i32 %106, 4, !dbg !11559
  %108 = and i32 %107, 15, !dbg !11559
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11560
  %110 = load i8, i8* %109, align 1, !dbg !11560
  %111 = zext i8 %110 to i32, !dbg !11560
  %112 = lshr i32 %105, %111, !dbg !11561
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11562
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11563
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11564
  br label %115, !dbg !11565

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11454
  ret i32 %116, !dbg !11566
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11567 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11569, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11570, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11571, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 0, metadata !11572, metadata !DIExpression()), !dbg !11573
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11574
  %2 = and i32 %1, 12, !dbg !11575
  %3 = icmp eq i32 %2, 8, !dbg !11576
  br i1 %3, label %4, label %21, !dbg !11576

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11577
  %6 = and i32 %5, 63, !dbg !11580
  call void @llvm.dbg.value(metadata i32 %6, metadata !11569, metadata !DIExpression()), !dbg !11573
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11581
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11583
  %9 = lshr i32 %8, 6, !dbg !11583
  %10 = and i32 %9, 511, !dbg !11583
  %11 = zext i32 %10 to i64, !dbg !11583
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11583
  %13 = zext i32 %6 to i64, !dbg !11583
  %14 = udiv i64 %12, %13, !dbg !11583
  %15 = trunc i64 %14 to i32, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %15, metadata !11570, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 %15, metadata !11570, metadata !DIExpression()), !dbg !11573
  call void @llvm.dbg.value(metadata i32 %15, metadata !11570, metadata !DIExpression()), !dbg !11573
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11584
  %17 = lshr i32 %16, 15, !dbg !11585
  %18 = and i32 %17, 6, !dbg !11585
  %19 = add nuw nsw i32 %18, 2, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %19, metadata !11571, metadata !DIExpression()), !dbg !11573
  %20 = udiv i32 %15, %19, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %20, metadata !11572, metadata !DIExpression()), !dbg !11573
  br label %21, !dbg !11587

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11588
  call void @llvm.dbg.value(metadata i32 %22, metadata !11572, metadata !DIExpression()), !dbg !11573
  ret i32 %22, !dbg !11589
}

; Function Attrs: optsize
declare !dbg !11590 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11593 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11597, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 %1, metadata !11598, metadata !DIExpression()), !dbg !11614
  call void @llvm.dbg.value(metadata i32 %2, metadata !11599, metadata !DIExpression()), !dbg !11614
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11615
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11615
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11600, metadata !DIExpression()), !dbg !11616
  %7 = icmp eq i32 %0, 0, !dbg !11617
  br i1 %7, label %8, label %24, !dbg !11618

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11619
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11619
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11610, metadata !DIExpression()), !dbg !11619
  store volatile i32 0, i32* %5, align 4, !dbg !11619
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11619
  %11 = or i32 %10, 1, !dbg !11619
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11619
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11619
  %13 = and i32 %12, 1, !dbg !11619
  store volatile i32 %13, i32* %5, align 4, !dbg !11619
  %14 = load volatile i32, i32* %5, align 4, !dbg !11619
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11620
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11621
  store i32 256, i32* %15, align 4, !dbg !11622
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11623
  store i32 2, i32* %16, align 4, !dbg !11624
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11625
  store i32 3, i32* %17, align 4, !dbg !11626
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11627
  store i32 0, i32* %18, align 4, !dbg !11628
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11629
  store i32 0, i32* %19, align 4, !dbg !11630
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11631
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11632
  %21 = and i32 %20, -123731969, !dbg !11632
  %22 = or i32 %2, %1, !dbg !11632
  %23 = or i32 %22, %21, !dbg !11632
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11632
  br label %24, !dbg !11633

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11634
  ret void, !dbg !11634
}

; Function Attrs: optsize
declare !dbg !11635 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11639 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11640
  ret void, !dbg !11641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11642 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11643
  ret void, !dbg !11644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11645 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11646
  ret i32 %1, !dbg !11647
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11648 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11649
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11650
  %3 = lshr i32 %2, 10, !dbg !11651
  %4 = and i32 %3, 7, !dbg !11651
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11652
  %6 = load i8, i8* %5, align 1, !dbg !11652
  %7 = zext i8 %6 to i32, !dbg !11652
  %8 = lshr i32 %1, %7, !dbg !11653
  ret i32 %8, !dbg !11654
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11655 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11656
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11657
  %3 = lshr i32 %2, 13, !dbg !11658
  %4 = and i32 %3, 7, !dbg !11658
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11659
  %6 = load i8, i8* %5, align 1, !dbg !11659
  %7 = zext i8 %6 to i32, !dbg !11659
  %8 = lshr i32 %1, %7, !dbg !11660
  ret i32 %8, !dbg !11661
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11662 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11666, metadata !DIExpression()), !dbg !11667
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11668
  store i32 15, i32* %2, align 4, !dbg !11669
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11670
  %4 = and i32 %3, 262144, !dbg !11672
  %5 = icmp eq i32 %4, 0, !dbg !11673
  br i1 %5, label %8, label %6, !dbg !11674

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11675
  store i32 327680, i32* %7, align 4, !dbg !11677
  br label %15, !dbg !11678

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11679
  %10 = and i32 %9, 65536, !dbg !11681
  %11 = icmp eq i32 %10, 0, !dbg !11682
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11683
  br i1 %11, label %14, label %13, !dbg !11684

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11685
  br label %15, !dbg !11687

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11688
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11690
  %17 = and i32 %16, 1, !dbg !11692
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11693
  store i32 %17, i32* %18, align 4, !dbg !11695
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11696
  %20 = lshr i32 %19, 3, !dbg !11697
  %21 = and i32 %20, 31, !dbg !11697
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11698
  store i32 %21, i32* %22, align 4, !dbg !11699
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11700
  %24 = and i32 %23, 4, !dbg !11702
  %25 = icmp eq i32 %24, 0, !dbg !11703
  br i1 %25, label %28, label %26, !dbg !11704

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11705
  store i32 5, i32* %27, align 4, !dbg !11707
  br label %35, !dbg !11708

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11709
  %30 = and i32 %29, 1, !dbg !11711
  %31 = icmp eq i32 %30, 0, !dbg !11712
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11713
  br i1 %31, label %34, label %33, !dbg !11714

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11715
  br label %35, !dbg !11717

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11718
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11720
  %37 = and i32 %36, 1, !dbg !11722
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11723
  store i32 %37, i32* %38, align 4, !dbg !11725
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11726
  %40 = and i32 %39, 16777216, !dbg !11728
  %41 = icmp eq i32 %40, 0, !dbg !11729
  %42 = select i1 %41, i32 1, i32 2, !dbg !11730
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11731
  store i32 %42, i32* %43, align 4, !dbg !11733
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11734
  %45 = and i32 %44, 4194304, !dbg !11735
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11736
  store i32 %45, i32* %46, align 4, !dbg !11737
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11738
  %48 = and i32 %47, 63, !dbg !11739
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11740
  store i32 %48, i32* %49, align 4, !dbg !11741
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11742
  %51 = lshr i32 %50, 6, !dbg !11743
  %52 = and i32 %51, 511, !dbg !11743
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11744
  store i32 %52, i32* %53, align 4, !dbg !11745
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11746
  %55 = shl i32 %54, 1, !dbg !11747
  %56 = and i32 %55, 393216, !dbg !11747
  %57 = add nuw nsw i32 %56, 131072, !dbg !11747
  %58 = lshr exact i32 %57, 16, !dbg !11748
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11749
  store i32 %58, i32* %59, align 4, !dbg !11750
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11751
  %61 = lshr i32 %60, 24, !dbg !11752
  %62 = and i32 %61, 15, !dbg !11752
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11753
  store i32 %62, i32* %63, align 4, !dbg !11754
  ret void, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11762
  call void @llvm.dbg.value(metadata i32* %1, metadata !11761, metadata !DIExpression()), !dbg !11762
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11763
  store i32 15, i32* %3, align 4, !dbg !11764
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11765
  %5 = and i32 %4, 3, !dbg !11766
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11767
  store i32 %5, i32* %6, align 4, !dbg !11768
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  %8 = and i32 %7, 240, !dbg !11770
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11771
  store i32 %8, i32* %9, align 4, !dbg !11772
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11773
  %11 = and i32 %10, 7168, !dbg !11774
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11775
  store i32 %11, i32* %12, align 4, !dbg !11776
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11777
  %14 = lshr i32 %13, 3, !dbg !11778
  %15 = and i32 %14, 7168, !dbg !11778
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11779
  store i32 %15, i32* %16, align 4, !dbg !11780
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11781
  %18 = and i32 %17, 7, !dbg !11782
  store i32 %18, i32* %1, align 4, !dbg !11783
  ret void, !dbg !11784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11785 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11786
  %2 = and i32 %1, 128, !dbg !11786
  %3 = icmp eq i32 %2, 0, !dbg !11786
  br i1 %3, label %5, label %4, !dbg !11788

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11789
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11791
  br label %5, !dbg !11792

5:                                                ; preds = %4, %0
  ret void, !dbg !11793
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11794 {
  ret void, !dbg !11795
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11799, metadata !DIExpression()), !dbg !11800
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11801
  ret void, !dbg !11802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11806, metadata !DIExpression()), !dbg !11808
  call void @llvm.dbg.value(metadata i32 1000, metadata !11807, metadata !DIExpression()), !dbg !11808
  %2 = udiv i32 %0, 1000, !dbg !11809
  %3 = add nsw i32 %2, -1, !dbg !11810
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11811
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11812
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11813
  ret void, !dbg !11814
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11815 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11817, metadata !DIExpression()), !dbg !11819
  %3 = bitcast i32* %2 to i8*, !dbg !11820
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11820
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11818, metadata !DIExpression()), !dbg !11821
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11822
  store volatile i32 %4, i32* %2, align 4, !dbg !11821
  %5 = load volatile i32, i32* %2, align 4, !dbg !11823
  %6 = icmp eq i32 %0, -1, !dbg !11824
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11817, metadata !DIExpression()), !dbg !11819
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11819
  call void @llvm.dbg.value(metadata i32 %8, metadata !11817, metadata !DIExpression()), !dbg !11819
  br label %9, !dbg !11826

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11817, metadata !DIExpression()), !dbg !11819
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11827
  call void @llvm.dbg.value(metadata i32 undef, metadata !11817, metadata !DIExpression()), !dbg !11819
  %12 = shl i32 %11, 15, !dbg !11819
  %13 = ashr i32 %12, 31, !dbg !11819
  %14 = add i32 %13, %10, !dbg !11819
  call void @llvm.dbg.value(metadata i32 %14, metadata !11817, metadata !DIExpression()), !dbg !11819
  %15 = icmp eq i32 %14, 0, !dbg !11826
  br i1 %15, label %16, label %9, !dbg !11826

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11830
  ret void, !dbg !11830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11833, metadata !DIExpression()), !dbg !11834
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11835
  ret void, !dbg !11836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11842, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i32 0, metadata !11845, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i32 0, metadata !11846, metadata !DIExpression()), !dbg !11847
  %2 = icmp eq i32 %0, 0, !dbg !11848
  br i1 %2, label %50, label %3, !dbg !11850

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11851
  %5 = icmp eq i32 %4, 49152, !dbg !11854
  br i1 %5, label %6, label %15, !dbg !11855

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11845, metadata !DIExpression()), !dbg !11847
  %7 = add i32 %0, -64000001, !dbg !11856
  %8 = icmp ult i32 %7, 26000000, !dbg !11856
  br i1 %8, label %15, label %9, !dbg !11856

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11859
  %11 = select i1 %10, i32 0, i32 3, !dbg !11861
  call void @llvm.dbg.value(metadata i32 %11, metadata !11845, metadata !DIExpression()), !dbg !11847
  %12 = add i32 %0, -30000001, !dbg !11862
  %13 = icmp ult i32 %12, 60000000, !dbg !11862
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11862
  call void @llvm.dbg.value(metadata i32 %14, metadata !11845, metadata !DIExpression()), !dbg !11847
  br label %15, !dbg !11862

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11847
  call void @llvm.dbg.value(metadata i32 %16, metadata !11845, metadata !DIExpression()), !dbg !11847
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11865
  %18 = icmp eq i32 %17, 32768, !dbg !11867
  br i1 %18, label %19, label %27, !dbg !11868

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11869
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11872
  br i1 %22, label %27, label %23, !dbg !11872

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11873
  %25 = and i1 %24, %21, !dbg !11876
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %26, metadata !11845, metadata !DIExpression()), !dbg !11847
  br label %27, !dbg !11876

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11877
  call void @llvm.dbg.value(metadata i32 %28, metadata !11845, metadata !DIExpression()), !dbg !11847
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11878
  %30 = icmp eq i32 %29, 16384, !dbg !11880
  br i1 %30, label %31, label %39, !dbg !11881

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11882
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11885
  br i1 %34, label %39, label %35, !dbg !11885

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11886
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11889
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %38, metadata !11845, metadata !DIExpression()), !dbg !11847
  br label %39, !dbg !11889

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11877
  call void @llvm.dbg.value(metadata i32 %40, metadata !11845, metadata !DIExpression()), !dbg !11847
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11890
  call void @llvm.dbg.value(metadata i32 2, metadata !11843, metadata !DIExpression()), !dbg !11847
  br label %41, !dbg !11891

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11877
  call void @llvm.dbg.value(metadata i32 %42, metadata !11843, metadata !DIExpression()), !dbg !11847
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11892
  call void @llvm.dbg.value(metadata i32 %43, metadata !11844, metadata !DIExpression()), !dbg !11847
  %44 = add nsw i32 %42, -1, !dbg !11894
  call void @llvm.dbg.value(metadata i32 %44, metadata !11843, metadata !DIExpression()), !dbg !11847
  %45 = icmp ne i32 %43, %40, !dbg !11895
  %46 = icmp ne i32 %44, 0, !dbg !11896
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11896
  br i1 %47, label %41, label %48, !dbg !11897, !llvm.loop !11898

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11900
  call void @llvm.dbg.value(metadata i32 %51, metadata !11846, metadata !DIExpression()), !dbg !11847
  ret i32 %51, !dbg !11901
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11902 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11904
  %2 = and i32 %1, 49152, !dbg !11904
  ret i32 %2, !dbg !11905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11908, metadata !DIExpression()), !dbg !11909
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11910
  %3 = and i32 %2, -8, !dbg !11910
  %4 = or i32 %3, %0, !dbg !11910
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11910
  ret void, !dbg !11911
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11912 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11913
  %2 = and i32 %1, 7, !dbg !11913
  ret i32 %2, !dbg !11914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11915 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11933, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11934, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 0, metadata !11935, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 0, metadata !11936, metadata !DIExpression()), !dbg !11937
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11938
  %4 = icmp eq i32 %3, 0, !dbg !11940
  br i1 %4, label %5, label %21, !dbg !11941

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11942
  call void @llvm.dbg.value(metadata i32 %6, metadata !11936, metadata !DIExpression()), !dbg !11937
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.171() #24, !dbg !11944
  %8 = icmp eq i32 %7, 1, !dbg !11946
  br i1 %8, label %13, label %9, !dbg !11947

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.172() #24, !dbg !11948
  br label %10, !dbg !11950

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.171() #24, !dbg !11951
  %12 = icmp eq i32 %11, 1, !dbg !11952
  br i1 %12, label %13, label %10, !dbg !11950, !llvm.loop !11953

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11955
  %15 = load i32, i32* %14, align 4, !dbg !11955
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11956
  %17 = load i32, i32* %16, align 4, !dbg !11956
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11957
  %19 = load i32, i32* %18, align 4, !dbg !11957
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11958
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %20, metadata !11935, metadata !DIExpression()), !dbg !11937
  br label %21, !dbg !11960

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11961
  call void @llvm.dbg.value(metadata i32 %22, metadata !11935, metadata !DIExpression()), !dbg !11937
  ret i32 %22, !dbg !11962
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11963 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11967, metadata !DIExpression()), !dbg !11968
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.175() #24, !dbg !11969
  %2 = icmp ne i32 %1, 0, !dbg !11971
  call void @llvm.dbg.value(metadata i1 %2, metadata !11967, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11968
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11972
  %4 = icmp ne i32 %3, 0, !dbg !11974
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11975
  %6 = zext i1 %5 to i32, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %6, metadata !11967, metadata !DIExpression()), !dbg !11968
  ret i32 %6, !dbg !11976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11981, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11982, metadata !DIExpression()), !dbg !11984
  call void @llvm.dbg.value(metadata i32 0, metadata !11983, metadata !DIExpression()), !dbg !11984
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11985
  %4 = load i32, i32* %3, align 4, !dbg !11985
  %5 = and i32 %4, 63, !dbg !11986
  %6 = udiv i32 %0, %5, !dbg !11987
  call void @llvm.dbg.value(metadata i32 %6, metadata !11983, metadata !DIExpression()), !dbg !11984
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11988
  %8 = load i32, i32* %7, align 4, !dbg !11988
  %9 = and i32 %8, 511, !dbg !11989
  %10 = mul i32 %9, %6, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %10, metadata !11983, metadata !DIExpression()), !dbg !11984
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11991
  %12 = load i32, i32* %11, align 4, !dbg !11991
  %13 = lshr i32 %12, 15, !dbg !11992
  %14 = and i32 %13, 131070, !dbg !11992
  %15 = add nuw nsw i32 %14, 2, !dbg !11992
  %16 = udiv i32 %10, %15, !dbg !11993
  call void @llvm.dbg.value(metadata i32 %16, metadata !11983, metadata !DIExpression()), !dbg !11984
  ret i32 %16, !dbg !11994
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.171() unnamed_addr #15 !dbg !11995 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11996
  %2 = lshr i32 %1, 1, !dbg !11997
  %3 = and i32 %2, 1, !dbg !11997
  ret i32 %3, !dbg !11998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.172() unnamed_addr #14 !dbg !11999 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12000
  %2 = or i32 %1, 1, !dbg !12000
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12000
  ret void, !dbg !12001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12002 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12004, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.value(metadata i32 %1, metadata !12005, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.value(metadata i32 %2, metadata !12006, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.value(metadata i32 %3, metadata !12007, metadata !DIExpression()), !dbg !12008
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12009
  %6 = and i32 %5, -4227072, !dbg !12009
  %7 = or i32 %1, %0, !dbg !12009
  %8 = shl i32 %2, 6, !dbg !12009
  %9 = or i32 %7, %8, !dbg !12009
  %10 = or i32 %9, %6, !dbg !12009
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12009
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12010
  %12 = and i32 %11, -196609, !dbg !12010
  %13 = or i32 %12, %3, !dbg !12010
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12010
  ret void, !dbg !12011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12016, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12017, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32 0, metadata !12018, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.value(metadata i32 0, metadata !12019, metadata !DIExpression()), !dbg !12020
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12021
  %4 = load i32, i32* %3, align 4, !dbg !12021
  %5 = lshr i32 %4, 4, !dbg !12021
  %6 = and i32 %5, 15, !dbg !12021
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12021
  %8 = load i8, i8* %7, align 1, !dbg !12021
  %9 = zext i8 %8 to i32, !dbg !12021
  %10 = lshr i32 %0, %9, !dbg !12021
  call void @llvm.dbg.value(metadata i32 %10, metadata !12019, metadata !DIExpression()), !dbg !12020
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12022
  %12 = icmp ult i32 %11, %10, !dbg !12024
  br i1 %12, label %13, label %16, !dbg !12025

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %14, metadata !12018, metadata !DIExpression()), !dbg !12020
  %15 = icmp eq i32 %14, 0, !dbg !12028
  br i1 %15, label %16, label %30, !dbg !12030

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.174() #24, !dbg !12031
  br label %17, !dbg !12033

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.175() #24, !dbg !12034
  %19 = icmp eq i32 %18, 1, !dbg !12035
  br i1 %19, label %20, label %17, !dbg !12033, !llvm.loop !12036

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12038
  tail call fastcc void @LL_RCC_SetAHBPrescaler.176(i32 noundef %21) #24, !dbg !12039
  tail call fastcc void @LL_RCC_SetSysClkSource.177() #24, !dbg !12040
  br label %22, !dbg !12041

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.178() #24, !dbg !12042
  %24 = icmp eq i32 %23, 8, !dbg !12043
  br i1 %24, label %25, label %22, !dbg !12041, !llvm.loop !12044

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12046
  %27 = load i32, i32* %26, align 4, !dbg !12046
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.179(i32 noundef %27) #24, !dbg !12047
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12048
  %29 = load i32, i32* %28, align 4, !dbg !12048
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.180(i32 noundef %29) #24, !dbg !12049
  br label %30, !dbg !12050

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12051
  %33 = icmp ugt i32 %32, %10, !dbg !12053
  br i1 %33, label %34, label %36, !dbg !12054

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %35, metadata !12018, metadata !DIExpression()), !dbg !12020
  br label %36, !dbg !12057

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12020
  call void @llvm.dbg.value(metadata i32 %37, metadata !12018, metadata !DIExpression()), !dbg !12020
  %38 = icmp eq i32 %37, 0, !dbg !12058
  br i1 %38, label %39, label %40, !dbg !12060

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12061
  br label %40, !dbg !12063

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.174() unnamed_addr #14 !dbg !12065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12066
  %2 = or i32 %1, 16777216, !dbg !12066
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12066
  ret void, !dbg !12067
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.175() unnamed_addr #15 !dbg !12068 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12069
  %2 = lshr i32 %1, 25, !dbg !12070
  %3 = and i32 %2, 1, !dbg !12070
  ret i32 %3, !dbg !12071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.176(i32 noundef %0) unnamed_addr #14 !dbg !12072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12074, metadata !DIExpression()), !dbg !12075
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12076
  %3 = and i32 %2, -241, !dbg !12076
  %4 = or i32 %3, %0, !dbg !12076
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12076
  ret void, !dbg !12077
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.177() unnamed_addr #14 !dbg !12078 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12080, metadata !DIExpression()), !dbg !12081
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12082
  %2 = and i32 %1, -4, !dbg !12082
  %3 = or i32 %2, 2, !dbg !12082
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12082
  ret void, !dbg !12083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.178() unnamed_addr #15 !dbg !12084 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12085
  %2 = and i32 %1, 12, !dbg !12085
  ret i32 %2, !dbg !12086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.179(i32 noundef %0) unnamed_addr #14 !dbg !12087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12089, metadata !DIExpression()), !dbg !12090
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12091
  %3 = and i32 %2, -7169, !dbg !12091
  %4 = or i32 %3, %0, !dbg !12091
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12091
  ret void, !dbg !12092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.180(i32 noundef %0) unnamed_addr #14 !dbg !12093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12095, metadata !DIExpression()), !dbg !12096
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  %3 = and i32 %2, -57345, !dbg !12097
  %4 = or i32 %3, %0, !dbg !12097
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12097
  ret void, !dbg !12098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12100
  %2 = lshr i32 %1, 27, !dbg !12101
  %3 = and i32 %2, 1, !dbg !12101
  ret i32 %3, !dbg !12102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12107, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata i32 %1, metadata !12108, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12109, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12110, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata i32 0, metadata !12111, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata i32 0, metadata !12112, metadata !DIExpression()), !dbg !12113
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12114
  %6 = icmp eq i32 %5, 0, !dbg !12116
  br i1 %6, label %7, label %27, !dbg !12117

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12118
  call void @llvm.dbg.value(metadata i32 %8, metadata !12112, metadata !DIExpression()), !dbg !12113
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.181() #24, !dbg !12120
  %10 = icmp eq i32 %9, 1, !dbg !12122
  br i1 %10, label %19, label %11, !dbg !12123

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12124
  br i1 %12, label %13, label %14, !dbg !12127

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12128
  br label %15, !dbg !12130

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.182() #24, !dbg !12131
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.183() #24, !dbg !12133
  br label %16, !dbg !12134

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.181() #24, !dbg !12135
  %18 = icmp eq i32 %17, 1, !dbg !12136
  br i1 %18, label %19, label %16, !dbg !12134, !llvm.loop !12137

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12139
  %21 = load i32, i32* %20, align 4, !dbg !12139
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12140
  %23 = load i32, i32* %22, align 4, !dbg !12140
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12141
  %25 = load i32, i32* %24, align 4, !dbg !12141
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.173(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12142
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %26, metadata !12111, metadata !DIExpression()), !dbg !12113
  br label %27, !dbg !12144

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12145
  call void @llvm.dbg.value(metadata i32 %28, metadata !12111, metadata !DIExpression()), !dbg !12113
  ret i32 %28, !dbg !12146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.181() unnamed_addr #15 !dbg !12147 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12148
  %2 = lshr i32 %1, 17, !dbg !12149
  %3 = and i32 %2, 1, !dbg !12149
  ret i32 %3, !dbg !12150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  %2 = or i32 %1, 262144, !dbg !12152
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.182() unnamed_addr #14 !dbg !12154 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12155
  %2 = and i32 %1, -262145, !dbg !12155
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12155
  ret void, !dbg !12156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.183() unnamed_addr #14 !dbg !12157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  %2 = or i32 %1, 65536, !dbg !12158
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  ret void, !dbg !12159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12160 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12163, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12163, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.value(metadata i32 undef, metadata !12163, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12185, metadata !DIExpression()), !dbg !12187
  %2 = icmp eq i8* %0, null, !dbg !12188
  br i1 %2, label %29, label %3, !dbg !12190

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12191
  %5 = icmp eq i8 %4, 0, !dbg !12192
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12193
  br i1 %6, label %29, label %8, !dbg !12193

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12186, metadata !DIExpression()), !dbg !12187
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12194

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12186, metadata !DIExpression()), !dbg !12187
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12196
  br i1 %10, label %11, label %15, !dbg !12201

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12202
  %13 = load i8*, i8** %12, align 4, !dbg !12202
  %14 = icmp eq i8* %13, %0, !dbg !12203
  br i1 %14, label %29, label %15, !dbg !12204

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12205
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12186, metadata !DIExpression()), !dbg !12187
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12206
  br i1 %17, label %7, label %8, !dbg !12207, !llvm.loop !12208

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12186, metadata !DIExpression()), !dbg !12187
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12210
  br i1 %20, label %21, label %26, !dbg !12214

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12215
  %23 = load i8*, i8** %22, align 4, !dbg !12215
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12216
  %25 = icmp eq i32 %24, 0, !dbg !12217
  br i1 %25, label %29, label %26, !dbg !12218

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12219
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12186, metadata !DIExpression()), !dbg !12187
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12220
  br i1 %28, label %29, label %18, !dbg !12194, !llvm.loop !12221

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12187
  ret %struct.device* %30, !dbg !12223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12224 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12228, metadata !DIExpression()), !dbg !12229
  %2 = icmp eq %struct.device* %0, null, !dbg !12230
  br i1 %2, label %14, label %3, !dbg !12232

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12233
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12233
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12234
  %7 = load i8, i8* %6, align 1, !dbg !12234
  %8 = and i8 %7, 1, !dbg !12234
  %9 = icmp eq i8 %8, 0, !dbg !12234
  br i1 %9, label %14, label %10, !dbg !12235

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12236
  %12 = load i8, i8* %11, align 1, !dbg !12236
  %13 = icmp eq i8 %12, 0, !dbg !12237
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12229
  ret i1 %15, !dbg !12238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12239 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12244, metadata !DIExpression()), !dbg !12245
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12246
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12248 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12256, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12257, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata i8* %2, metadata !12258, metadata !DIExpression()), !dbg !12261
  %5 = bitcast i32* %4 to i8*, !dbg !12262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12262
  call void @llvm.dbg.value(metadata i32 0, metadata !12259, metadata !DIExpression()), !dbg !12261
  store i32 0, i32* %4, align 4, !dbg !12263
  call void @llvm.dbg.value(metadata i32* %4, metadata !12259, metadata !DIExpression(DW_OP_deref)), !dbg !12261
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12264
  call void @llvm.dbg.value(metadata i16* %6, metadata !12260, metadata !DIExpression()), !dbg !12261
  %7 = load i32, i32* %4, align 4, !dbg !12265
  call void @llvm.dbg.value(metadata i32 %7, metadata !12259, metadata !DIExpression()), !dbg !12261
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12266
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12267
  ret i32 %8, !dbg !12268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12273, metadata !DIExpression()), !dbg !12279
  call void @llvm.dbg.value(metadata i32* %1, metadata !12274, metadata !DIExpression()), !dbg !12279
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12280
  %4 = load i16*, i16** %3, align 4, !dbg !12280
  call void @llvm.dbg.value(metadata i16* %4, metadata !12275, metadata !DIExpression()), !dbg !12279
  %5 = icmp eq i16* %4, null, !dbg !12281
  br i1 %5, label %14, label %6, !dbg !12282

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12283
  call void @llvm.dbg.value(metadata i32 %7, metadata !12276, metadata !DIExpression()), !dbg !12283
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12284
  %9 = load i16, i16* %8, align 2, !dbg !12284
  %10 = add i16 %9, -32767, !dbg !12285
  %11 = icmp ult i16 %10, 2, !dbg !12285
  %12 = add i32 %7, 1, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %12, metadata !12276, metadata !DIExpression()), !dbg !12283
  br i1 %11, label %13, label %6, !dbg !12285, !llvm.loop !12288

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12291
  br label %14, !dbg !12292

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12294 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12298, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.value(metadata i32 %1, metadata !12299, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12300, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.value(metadata i8* %3, metadata !12301, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.value(metadata i32 0, metadata !12302, metadata !DIExpression()), !dbg !12310
  %5 = icmp eq i32 %1, 0, !dbg !12311
  br i1 %5, label %16, label %8, !dbg !12312

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12302, metadata !DIExpression()), !dbg !12310
  %7 = icmp eq i32 %15, %1, !dbg !12311
  br i1 %7, label %16, label %8, !dbg !12312, !llvm.loop !12313

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12302, metadata !DIExpression()), !dbg !12310
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12315
  %11 = load i16, i16* %10, align 2, !dbg !12315
  call void @llvm.dbg.value(metadata i16 %11, metadata !12304, metadata !DIExpression()), !dbg !12316
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12317
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12307, metadata !DIExpression()), !dbg !12316
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12318
  call void @llvm.dbg.value(metadata i32 %13, metadata !12308, metadata !DIExpression()), !dbg !12316
  %14 = icmp slt i32 %13, 0, !dbg !12319
  %15 = add nuw i32 %9, 1, !dbg !12321
  call void @llvm.dbg.value(metadata i32 %15, metadata !12302, metadata !DIExpression()), !dbg !12310
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12323 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12327, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12328, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12329, metadata !DIExpression()), !dbg !12330
  %2 = sext i16 %0 to i32, !dbg !12331
  %3 = icmp slt i16 %0, 1, !dbg !12333
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12334
  %6 = add nsw i32 %2, -1, !dbg !12334
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12334
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12334
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12328, metadata !DIExpression()), !dbg !12330
  ret %struct.device* %8, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12336 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12338, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12339, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i8* %2, metadata !12340, metadata !DIExpression()), !dbg !12343
  %5 = bitcast i32* %4 to i8*, !dbg !12344
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12344
  call void @llvm.dbg.value(metadata i32 0, metadata !12341, metadata !DIExpression()), !dbg !12343
  store i32 0, i32* %4, align 4, !dbg !12345
  call void @llvm.dbg.value(metadata i32* %4, metadata !12341, metadata !DIExpression(DW_OP_deref)), !dbg !12343
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12346
  call void @llvm.dbg.value(metadata i16* %6, metadata !12342, metadata !DIExpression()), !dbg !12343
  %7 = load i32, i32* %4, align 4, !dbg !12347
  call void @llvm.dbg.value(metadata i32 %7, metadata !12341, metadata !DIExpression()), !dbg !12343
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12348
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12349
  ret i32 %8, !dbg !12350
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12353, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32* %1, metadata !12354, metadata !DIExpression()), !dbg !12358
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12359
  %4 = load i16*, i16** %3, align 4, !dbg !12359
  call void @llvm.dbg.value(metadata i16* %4, metadata !12355, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32 0, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32 0, metadata !12357, metadata !DIExpression()), !dbg !12358
  %5 = icmp eq i16* %4, null, !dbg !12360
  br i1 %5, label %22, label %6, !dbg !12362

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i16* %8, metadata !12355, metadata !DIExpression()), !dbg !12358
  %9 = load i16, i16* %8, align 2, !dbg !12363
  %10 = icmp eq i16 %9, -32768, !dbg !12367
  call void @llvm.dbg.value(metadata i32 undef, metadata !12356, metadata !DIExpression()), !dbg !12358
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12368
  call void @llvm.dbg.value(metadata i16* %11, metadata !12355, metadata !DIExpression()), !dbg !12358
  %12 = zext i1 %10 to i32, !dbg !12369
  %13 = add i32 %7, %12, !dbg !12369
  call void @llvm.dbg.value(metadata i32 %13, metadata !12356, metadata !DIExpression()), !dbg !12358
  %14 = icmp eq i32 %13, 2, !dbg !12370
  br i1 %14, label %15, label %6, !dbg !12371

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12358
  call void @llvm.dbg.value(metadata i32 %16, metadata !12357, metadata !DIExpression()), !dbg !12358
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12372
  %18 = load i16, i16* %17, align 2, !dbg !12372
  %19 = icmp eq i16 %18, 32767, !dbg !12373
  %20 = add i32 %16, 1, !dbg !12374
  call void @llvm.dbg.value(metadata i32 %20, metadata !12357, metadata !DIExpression()), !dbg !12358
  br i1 %19, label %21, label %15, !dbg !12376, !llvm.loop !12377

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12379
  br label %22, !dbg !12380

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12381
  call void @llvm.dbg.value(metadata i16* %23, metadata !12355, metadata !DIExpression()), !dbg !12358
  ret i16* %23, !dbg !12382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12383 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12386
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12387
  ret i32* %2, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12389 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12540, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12541, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12542, metadata !DIExpression()), !dbg !12543
  ret void, !dbg !12544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12549, metadata !DIExpression()), !dbg !12551
  call void @llvm.dbg.value(metadata i32 %1, metadata !12550, metadata !DIExpression()), !dbg !12551
  ret void, !dbg !12552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12553 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12557, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.value(metadata i32 %1, metadata !12558, metadata !DIExpression()), !dbg !12559
  ret void, !dbg !12560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12565, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.value(metadata i8* %1, metadata !12566, metadata !DIExpression()), !dbg !12567
  ret i32 -134, !dbg !12568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12569 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12573, metadata !DIExpression()), !dbg !12575
  call void @llvm.dbg.value(metadata i8* %1, metadata !12574, metadata !DIExpression()), !dbg !12575
  ret i32 -134, !dbg !12576
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12580, metadata !DIExpression()), !dbg !12581
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12582, !srcloc !12588
  call void @llvm.dbg.value(metadata i32 undef, metadata !12585, metadata !DIExpression()) #23, !dbg !12589
  call void @llvm.dbg.value(metadata i32 undef, metadata !12586, metadata !DIExpression()) #23, !dbg !12589
  br label %3, !dbg !12590

3:                                                ; preds = %3, %1
  br label %3, !dbg !12591, !llvm.loop !12594
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12602, metadata !DIExpression()), !dbg !12603
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.188, i32 0, i32 0), i32 noundef 69) #25, !dbg !12604
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12609
  unreachable, !dbg !12609
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12612, metadata !DIExpression()), !dbg !12613
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12614
  unreachable, !dbg !12614
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12617, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12618, metadata !DIExpression()), !dbg !12621
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12622, !srcloc !12588
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12622
  call void @llvm.dbg.value(metadata i32 %4, metadata !12585, metadata !DIExpression()) #23, !dbg !12624
  call void @llvm.dbg.value(metadata i32 undef, metadata !12586, metadata !DIExpression()) #23, !dbg !12624
  call void @llvm.dbg.value(metadata i32 %4, metadata !12619, metadata !DIExpression()), !dbg !12621
  %5 = tail call fastcc %struct.k_thread* @k_current_get.191() #26, !dbg !12625
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12620, metadata !DIExpression()), !dbg !12621
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12626
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.192, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12626
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12631
  br i1 %7, label %20, label %8, !dbg !12633

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12634, metadata !DIExpression()), !dbg !12639
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12641
  %10 = load i32, i32* %9, align 4, !dbg !12641
  %11 = and i32 %10, 511, !dbg !12642
  %12 = icmp eq i32 %11, 0, !dbg !12643
  br i1 %12, label %14, label %13, !dbg !12644

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.193, i32 0, i32 0), i32 noundef 69) #25, !dbg !12645
  br label %14, !dbg !12651

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12652
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.194, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12652
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12657
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12634, metadata !DIExpression()), !dbg !12658
  %16 = load i32, i32* %9, align 4, !dbg !12663
  %17 = and i32 %16, 511, !dbg !12664
  %18 = icmp eq i32 %17, 0, !dbg !12665
  br i1 %18, label %22, label %19, !dbg !12666

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12667, metadata !DIExpression()) #23, !dbg !12670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12673, !srcloc !12674
  br label %25, !dbg !12675

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12652
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.194, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12652
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12657
  br label %22, !dbg !12676

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %4, metadata !12667, metadata !DIExpression()) #23, !dbg !12680
  call void @llvm.dbg.value(metadata i32 %4, metadata !12667, metadata !DIExpression()) #23, !dbg !12683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12621
  br i1 %23, label %25, label %24, !dbg !12685

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.195(%struct.k_thread* noundef %5) #24, !dbg !12686
  br label %25, !dbg !12689

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12689
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.191() unnamed_addr #11 !dbg !12690 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.203() #26, !dbg !12694
  ret %struct.k_thread* %1, !dbg !12695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12700, metadata !DIExpression()), !dbg !12701
  %2 = icmp ult i32 %0, 5, !dbg !12702
  br i1 %2, label %3, label %6, !dbg !12702

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12702
  %5 = load i8*, i8** %4, align 4, !dbg !12702
  br label %6, !dbg !12702

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.197, i32 0, i32 0), %1 ], !dbg !12703
  ret i8* %7, !dbg !12705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12710, metadata !DIExpression()), !dbg !12712
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12713
  br i1 %2, label %9, label %3, !dbg !12714

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12715
  call void @llvm.dbg.value(metadata i8* %4, metadata !12711, metadata !DIExpression()), !dbg !12712
  %5 = icmp eq i8* %4, null, !dbg !12716
  br i1 %5, label %9, label %6, !dbg !12718

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12719
  %8 = icmp eq i8 %7, 0, !dbg !12720
  br i1 %8, label %9, label %10, !dbg !12721

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.196, i32 0, i32 0), metadata !12711, metadata !DIExpression()), !dbg !12712
  br label %10, !dbg !12722

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.196, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12712
  call void @llvm.dbg.value(metadata i8* %11, metadata !12711, metadata !DIExpression()), !dbg !12712
  ret i8* %11, !dbg !12724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.195(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12729, metadata !DIExpression()), !dbg !12730
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12731, !srcloc !12733
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12734
  ret void, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.203() unnamed_addr #11 !dbg !12736 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12737, !srcloc !12739
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12740
  ret %struct.k_thread* %1, !dbg !12741
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12742 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12746, metadata !DIExpression()), !dbg !12749
  call void @llvm.dbg.value(metadata i32 %1, metadata !12747, metadata !DIExpression()), !dbg !12749
  call void @llvm.dbg.value(metadata i32 %2, metadata !12748, metadata !DIExpression()), !dbg !12749
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12750
  ret void, !dbg !12751
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12752 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12756, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i8* %1, metadata !12757, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i32 %2, metadata !12758, metadata !DIExpression()), !dbg !12759
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12760
  ret void, !dbg !12761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12762 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12763
  ret void, !dbg !12764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12767, metadata !DIExpression()), !dbg !12768
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12769
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12770
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12771
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12772
  %4 = trunc i32 %0 to i8, !dbg !12773
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12774
  store i8 %4, i8* %5, align 4, !dbg !12775
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12776
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12777
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12778
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12779
  store i8* %8, i8** %9, align 4, !dbg !12780
  ret void, !dbg !12781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12784, metadata !DIExpression()), !dbg !12790
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12791
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12785, metadata !DIExpression()), !dbg !12790
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12792
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12786, metadata !DIExpression()), !dbg !12790
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.210, i32 0, i32 0), metadata !12789, metadata !DIExpression()), !dbg !12790
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12793
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12794
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.210, i32 0, i32 0)) #25, !dbg !12795
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12796
  ret void, !dbg !12797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12798 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12802, metadata !DIExpression()), !dbg !12803
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12804
  ret i8* %2, !dbg !12805
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12806 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12811, metadata !DIExpression()), !dbg !12812
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12813
  %3 = load i8, i8* %2, align 1, !dbg !12814
  %4 = and i8 %3, -5, !dbg !12814
  store i8 %4, i8* %2, align 1, !dbg !12814
  ret void, !dbg !12815
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12816 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12819
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12820
  %3 = ptrtoint i8* %2 to i32, !dbg !12829
  %4 = add i32 %3, 2048, !dbg !12830
  call void @llvm.dbg.value(metadata i32 %4, metadata !12824, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %4, metadata !12832, metadata !DIExpression()) #23, !dbg !12835
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12837, !srcloc !12838
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12839
  %6 = or i32 %5, 512, !dbg !12839
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12839
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -2, i32 noundef 255) #25, !dbg !12840
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -5, i32 noundef 0) #25, !dbg !12843
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -12, i32 noundef 0) #25, !dbg !12844
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -11, i32 noundef 0) #25, !dbg !12845
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -10, i32 noundef 0) #25, !dbg !12846
  tail call fastcc void @__NVIC_SetPriority.213(i32 noundef -4, i32 noundef 0) #25, !dbg !12847
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12848
  %8 = or i32 %7, 458752, !dbg !12848
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12848
  tail call void @z_arm_fault_init() #25, !dbg !12849
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12850
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12851
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12854
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12855
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12856
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12857
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12857
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12818, metadata !DIExpression()), !dbg !12858
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12859
  call void @z_device_state_init() #25, !dbg !12860
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12861
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12862
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12863
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12864
  unreachable, !dbg !12864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2060, metadata !DIExpression()), !dbg !12865
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12866
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12866
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2061, metadata !DIExpression()), !dbg !12865
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2061, metadata !DIExpression()), !dbg !12865
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12867
  br i1 %7, label %8, label %35, !dbg !12868

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2061, metadata !DIExpression()), !dbg !12865
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12869
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12869
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2071, metadata !DIExpression()), !dbg !12870
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12871
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12871
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12872
  call void @llvm.dbg.value(metadata i32 %14, metadata !2075, metadata !DIExpression()), !dbg !12870
  %15 = icmp eq %struct.device* %11, null, !dbg !12873
  br i1 %15, label %32, label %16, !dbg !12875

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12876
  br i1 %17, label %26, label %18, !dbg !12879

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12880
  call void @llvm.dbg.value(metadata i32 %19, metadata !2075, metadata !DIExpression()), !dbg !12870
  %20 = icmp ult i32 %19, 255, !dbg !12882
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12882
  call void @llvm.dbg.value(metadata i32 %21, metadata !2075, metadata !DIExpression()), !dbg !12870
  %22 = trunc i32 %21 to i8, !dbg !12883
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12884
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12884
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12885
  store i8 %22, i8* %25, align 1, !dbg !12886
  br label %26, !dbg !12887

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12888
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12888
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12889
  %30 = load i8, i8* %29, align 1, !dbg !12890
  %31 = or i8 %30, 1, !dbg !12890
  store i8 %31, i8* %29, align 1, !dbg !12890
  br label %32, !dbg !12891

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12892
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2061, metadata !DIExpression()), !dbg !12865
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12867
  br i1 %34, label %8, label %35, !dbg !12868, !llvm.loop !12893

35:                                               ; preds = %32, %1
  ret void, !dbg !12895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.213(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12898, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.value(metadata i32 %1, metadata !12899, metadata !DIExpression()), !dbg !12900
  %3 = trunc i32 %1 to i8, !dbg !12901
  %4 = shl i8 %3, 4, !dbg !12901
  %5 = and i32 %0, 15, !dbg !12904
  %6 = add nsw i32 %5, -4, !dbg !12905
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12906
  store volatile i8 %4, i8* %7, align 1, !dbg !12907
  ret void, !dbg !12908
}

; Function Attrs: optsize
declare !dbg !12909 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12913, metadata !DIExpression()), !dbg !12914
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12915
  store i8 1, i8* %2, align 1, !dbg !12916
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12917
  store i8 1, i8* %3, align 4, !dbg !12918
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12919
  store i32 0, i32* %4, align 4, !dbg !12920
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12921
  store i32 0, i32* %5, align 4, !dbg !12922
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12923
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12924
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12925
  ret void, !dbg !12926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12927 {
  tail call void @z_sched_init() #25, !dbg !12932
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12933
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.214, i32 0, i32 0)) #25, !dbg !12934
  call void @llvm.dbg.value(metadata i8* %1, metadata !12931, metadata !DIExpression()), !dbg !12935
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12936
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12937
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12938
  ret i8* %1, !dbg !12939
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12944, metadata !DIExpression()), !dbg !12945
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12946
  unreachable, !dbg !12947
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12950, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i8* %1, metadata !12951, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i8* %2, metadata !12952, metadata !DIExpression()), !dbg !12953
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12954
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12955
  tail call void @boot_banner() #25, !dbg !12956
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12957
  tail call void @z_init_static_threads() #25, !dbg !12958
  tail call void @main() #25, !dbg !12959
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12960
  %5 = and i8 %4, -2, !dbg !12960
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12960
  ret void, !dbg !12961
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12962 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12972, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.value(metadata i8* %1, metadata !12973, metadata !DIExpression()), !dbg !12974
  ret void, !dbg !12975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12976 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12978, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i8* %1, metadata !12979, metadata !DIExpression()), !dbg !12980
  ret void, !dbg !12981
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12982 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12983, !srcloc !12990
  call void @llvm.dbg.value(metadata i32 %1, metadata !12986, metadata !DIExpression()) #23, !dbg !12991
  %2 = icmp ne i32 %1, 0, !dbg !12992
  ret i1 %2, !dbg !12993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12994 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12995
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12996
  %3 = load i8, i8* %2, align 4, !dbg !12997
  %4 = or i8 %3, 1, !dbg !12997
  store i8 %4, i8* %2, align 4, !dbg !12997
  ret void, !dbg !12998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12999 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13000
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13001
  %3 = load i8, i8* %2, align 4, !dbg !13002
  %4 = and i8 %3, -2, !dbg !13002
  store i8 %4, i8* %2, align 4, !dbg !13002
  ret void, !dbg !13003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13004 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13005
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13006
  %3 = load i8, i8* %2, align 4, !dbg !13006
  %4 = and i8 %3, 1, !dbg !13007
  %5 = icmp ne i8 %4, 0, !dbg !13008
  ret i1 %5, !dbg !13009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13014, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.value(metadata i8* %1, metadata !13015, metadata !DIExpression()), !dbg !13016
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13017
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13019
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13014, metadata !DIExpression()), !dbg !13016
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13020
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13021
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13022
  store i8 0, i8* %8, align 1, !dbg !13023
  ret i32 0, !dbg !13024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13029, metadata !DIExpression()), !dbg !13030
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13031
  ret i8* %2, !dbg !13032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13033 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13037, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i8* %1, metadata !13038, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.value(metadata i32 %2, metadata !13039, metadata !DIExpression()), !dbg !13040
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13041
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13042
  ret i32 0, !dbg !13043
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2201, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i8* %1, metadata !2202, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 %2, metadata !2203, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 0, metadata !2204, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i8 undef, metadata !2206, metadata !DIExpression()), !dbg !13044
  %4 = icmp eq i8* %1, null, !dbg !13045
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13047
  br i1 %6, label %46, label %7, !dbg !13047

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13048
  %9 = load i8, i8* %8, align 1, !dbg !13048
  call void @llvm.dbg.value(metadata i8 %9, metadata !2206, metadata !DIExpression()), !dbg !13044
  %10 = add i32 %2, -1, !dbg !13049
  call void @llvm.dbg.value(metadata i32 %10, metadata !2203, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i8 0, metadata !2207, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.value(metadata i8 %9, metadata !2206, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 0, metadata !2204, metadata !DIExpression()), !dbg !13044
  %11 = icmp eq i8 %9, 0, !dbg !13051
  br i1 %11, label %12, label %15, !dbg !13053

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13054
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13055
  store i8 0, i8* %14, align 1, !dbg !13056
  br label %46, !dbg !13057

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2207, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.value(metadata i8 %17, metadata !2206, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 %18, metadata !2204, metadata !DIExpression()), !dbg !13044
  %19 = zext i8 %17 to i32, !dbg !13058
  %20 = zext i8 %16 to i32, !dbg !13059
  %21 = shl nuw i32 1, %20, !dbg !13059
  call void @llvm.dbg.value(metadata i32 %21, metadata !2205, metadata !DIExpression()), !dbg !13044
  %22 = and i32 %21, %19, !dbg !13061
  %23 = icmp eq i32 %22, 0, !dbg !13063
  br i1 %23, label %42, label %24, !dbg !13064

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13065
  %26 = sub i32 %10, %18, !dbg !13066
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13067
  %28 = load i8*, i8** %27, align 4, !dbg !13067
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13068
  %30 = load i32, i32* %29, align 4, !dbg !13068
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13069
  %32 = add i32 %31, %18, !dbg !13070
  call void @llvm.dbg.value(metadata i32 %32, metadata !2204, metadata !DIExpression()), !dbg !13044
  %33 = trunc i32 %21 to i8, !dbg !13071
  %34 = xor i8 %33, -1, !dbg !13071
  %35 = and i8 %17, %34, !dbg !13071
  call void @llvm.dbg.value(metadata i8 %35, metadata !2206, metadata !DIExpression()), !dbg !13044
  %36 = icmp eq i8 %35, 0, !dbg !13072
  br i1 %36, label %12, label %37, !dbg !13074

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13075
  %39 = sub i32 %10, %32, !dbg !13077
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.217, i32 0, i32 0), i32 noundef 1) #24, !dbg !13078
  %41 = add i32 %40, %32, !dbg !13079
  call void @llvm.dbg.value(metadata i32 %41, metadata !2204, metadata !DIExpression()), !dbg !13044
  br label %42, !dbg !13080

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13044
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13044
  call void @llvm.dbg.value(metadata i8 %44, metadata !2206, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 %43, metadata !2204, metadata !DIExpression()), !dbg !13044
  %45 = add i8 %16, 1, !dbg !13081
  call void @llvm.dbg.value(metadata i8 %45, metadata !2207, metadata !DIExpression()), !dbg !13050
  br label %15, !dbg !13053

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.218, i32 0, i32 0), %3 ], !dbg !13044
  ret i8* %47, !dbg !13082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13087, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 %1, metadata !13088, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i8* %2, metadata !13089, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 %3, metadata !13090, metadata !DIExpression()), !dbg !13092
  %5 = icmp ult i32 %1, %3, !dbg !13093
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13093
  call void @llvm.dbg.value(metadata i32 %6, metadata !13091, metadata !DIExpression()), !dbg !13092
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13094
  ret i32 %6, !dbg !13095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13100, metadata !DIExpression()), !dbg !13101
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13102
  ret void, !dbg !13103
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13113, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13114, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32 %2, metadata !13115, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13116, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i8* %4, metadata !13117, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i8* %5, metadata !13118, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i8* %6, metadata !13119, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32 %7, metadata !13120, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32 %8, metadata !13121, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i8* %9, metadata !13122, metadata !DIExpression()), !dbg !13124
  %11 = icmp eq i32 %7, 15, !dbg !13125
  br i1 %11, label %12, label %15, !dbg !13125

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13125
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13125
  br i1 %14, label %19, label %18, !dbg !13125

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13125
  %17 = icmp ult i32 %16, 31, !dbg !13125
  br i1 %17, label %19, label %18, !dbg !13125

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 536) #25, !dbg !13129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.231, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 536) #25, !dbg !13129
  unreachable, !dbg !13129

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13131
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13132
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13133
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13134
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13135
  call void @llvm.dbg.value(metadata i8* %22, metadata !13123, metadata !DIExpression()), !dbg !13124
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13136
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13137
  store i8* null, i8** %23, align 4, !dbg !13138
  %24 = icmp eq i8* %9, null, !dbg !13139
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13141
  br i1 %24, label %29, label %26, !dbg !13142

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13143
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13145
  store i8 0, i8* %28, align 1, !dbg !13146
  br label %30, !dbg !13147

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13148
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13150
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13150
  br i1 %32, label %36, label %33, !dbg !13152

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13153
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13153
  br label %36, !dbg !13154

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13124
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13155
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13157
  ret i8* %22, !dbg !13158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13163, metadata !DIExpression()), !dbg !13164
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13165
  ret i1 %2, !dbg !13166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13167 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13172, metadata !DIExpression()), !dbg !13173
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13174
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13177 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13182, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %1, metadata !13183, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %2, metadata !13184, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %3, metadata !13185, metadata !DIExpression()), !dbg !13186
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13187
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13188
  %6 = trunc i32 %3 to i8, !dbg !13189
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13190
  store i8 %6, i8* %7, align 4, !dbg !13191
  %8 = trunc i32 %2 to i8, !dbg !13192
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13193
  store i8 %8, i8* %9, align 1, !dbg !13194
  %10 = trunc i32 %1 to i8, !dbg !13195
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13196
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13196
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13196
  store i8 %10, i8* %13, align 2, !dbg !13197
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13198
  store i8 0, i8* %14, align 1, !dbg !13199
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13200
  ret void, !dbg !13201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13202 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13206, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13207, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %2, metadata !13208, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %4 = add i32 %2, 7, !dbg !13215
  %5 = and i32 %4, -8, !dbg !13215
  %6 = add i32 %5, 64, !dbg !13215
  call void @llvm.dbg.value(metadata i32 %6, metadata !13209, metadata !DIExpression()), !dbg !13214
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.232(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13217
  call void @llvm.dbg.value(metadata i8* %7, metadata !13212, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 %5, metadata !13210, metadata !DIExpression()), !dbg !13214
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13218
  call void @llvm.dbg.value(metadata i8* %8, metadata !13211, metadata !DIExpression()), !dbg !13214
  call void @llvm.dbg.value(metadata i32 0, metadata !13213, metadata !DIExpression()), !dbg !13214
  %9 = ptrtoint i8* %7 to i32, !dbg !13219
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13220
  store i32 %9, i32* %10, align 4, !dbg !13221
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13222
  store i32 %5, i32* %11, align 4, !dbg !13223
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13224
  store i32 0, i32* %12, align 4, !dbg !13225
  call void @llvm.dbg.value(metadata i8* %8, metadata !13211, metadata !DIExpression()), !dbg !13214
  ret i8* %8, !dbg !13226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.232(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13227 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13231, metadata !DIExpression()), !dbg !13232
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13233
  ret i8* %2, !dbg !13234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13240, metadata !DIExpression()), !dbg !13241
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13242
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13243
  ret void, !dbg !13244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13247, metadata !DIExpression()), !dbg !13248
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13249
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13250
  ret void, !dbg !13251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13252 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13256, metadata !DIExpression()), !dbg !13257
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13258
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13259
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13260
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13261
  ret void, !dbg !13262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13263 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13268, metadata !DIExpression()), !dbg !13269
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13270
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13271
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13272
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13273
  ret void, !dbg !13274
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13275 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13292, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13283, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13284, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %2, metadata !13285, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13286, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %4, metadata !13287, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %5, metadata !13288, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i8* %6, metadata !13289, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %7, metadata !13290, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 %8, metadata !13291, metadata !DIExpression()), !dbg !13293
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13294, !srcloc !12990
  call void @llvm.dbg.value(metadata i32 %11, metadata !12986, metadata !DIExpression()) #23, !dbg !13299
  %12 = icmp eq i32 %11, 0, !dbg !13300
  br i1 %12, label %14, label %13, !dbg !13301

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 647) #25, !dbg !13302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.236, i32 0, i32 0)) #25, !dbg !13302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 647) #25, !dbg !13302
  unreachable, !dbg !13302

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13292, metadata !DIExpression()), !dbg !13293
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13304
  %17 = icmp eq i64 %15, -1, !dbg !13305
  br i1 %17, label %19, label %18, !dbg !13307

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13308
  br label %19, !dbg !13310

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13312 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13317, metadata !DIExpression()), !dbg !13318
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13316, metadata !DIExpression()), !dbg !13318
  %4 = icmp eq i64 %3, 0, !dbg !13319
  br i1 %4, label %5, label %6, !dbg !13321

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13322
  br label %7, !dbg !13324

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13325
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13328 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13332, metadata !DIExpression()), !dbg !13333
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13334, !srcloc !13336
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13337
  ret void, !dbg !13338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13339 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13342, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13341, metadata !DIExpression()), !dbg !13343
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13344
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13345
  ret void, !dbg !13346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13347 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13349, metadata !DIExpression()), !dbg !13369
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13370

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 750) #25, !dbg !13374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.240, i32 0, i32 0)) #25, !dbg !13374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 750) #25, !dbg !13374
  unreachable, !dbg !13374

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13349, metadata !DIExpression()), !dbg !13369
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13377
  br i1 %4, label %6, label %5, !dbg !13378

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13379
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13367, metadata !DIExpression()), !dbg !13380
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13381

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13385
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13385
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13387
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13387
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13388
  %12 = load i32, i32* %11, align 4, !dbg !13388
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13389
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13389
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13390
  %16 = load i8*, i8** %15, align 4, !dbg !13390
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13391
  %18 = load i8*, i8** %17, align 4, !dbg !13391
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13392
  %20 = load i8*, i8** %19, align 4, !dbg !13392
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13393
  %22 = load i32, i32* %21, align 4, !dbg !13393
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13394
  %24 = load i32, i32* %23, align 4, !dbg !13394
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13395
  %26 = load i8*, i8** %25, align 4, !dbg !13395
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13396
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13397
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13398
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13399
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13399
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13400
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13349, metadata !DIExpression()), !dbg !13369
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13401
  br i1 %32, label %1, label %2, !dbg !13370, !llvm.loop !13402

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 781) #25, !dbg !13404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.240, i32 0, i32 0)) #25, !dbg !13404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.230, i32 0, i32 0), i32 noundef 781) #25, !dbg !13404
  unreachable, !dbg !13404

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13367, metadata !DIExpression()), !dbg !13380
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13407
  br i1 %36, label %38, label %37, !dbg !13408

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13409
  ret void, !dbg !13410

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13411
  %40 = load i32, i32* %39, align 4, !dbg !13411
  %41 = icmp eq i32 %40, -1, !dbg !13414
  br i1 %41, label %50, label %42, !dbg !13415

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13416
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13416
  %45 = icmp sgt i32 %40, 0, !dbg !13418
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13418
  %47 = zext i32 %46 to i64, !dbg !13418
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !13418
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13419
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13419
  br label %50, !dbg !13420

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13421
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13367, metadata !DIExpression()), !dbg !13380
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13422
  br i1 %52, label %33, label %34, !dbg !13381, !llvm.loop !13423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13425 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13430, metadata !DIExpression()), !dbg !13431
  call void @llvm.dbg.value(metadata i64 %0, metadata !13432, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i32 1000, metadata !13437, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i32 10000, metadata !13438, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 1, metadata !13439, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 0, metadata !13440, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 1, metadata !13441, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 0, metadata !13442, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 1, metadata !13443, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i8 0, metadata !13444, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i64 0, metadata !13445, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i64 0, metadata !13445, metadata !DIExpression()), !dbg !13449
  %2 = mul i64 %0, 10, !dbg !13451
  ret i64 %2, !dbg !13457
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13458 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13460, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.value(metadata i8* %1, metadata !13461, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.value(metadata i8* %2, metadata !13462, metadata !DIExpression()), !dbg !13464
  call void @llvm.dbg.value(metadata i8* %3, metadata !13463, metadata !DIExpression()), !dbg !13464
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13465
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13466
  %7 = load i8, i8* %6, align 4, !dbg !13467
  %8 = or i8 %7, 4, !dbg !13467
  store i8 %8, i8* %6, align 4, !dbg !13467
  tail call void @z_thread_essential_clear() #24, !dbg !13468
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13469
  unreachable, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13475, metadata !DIExpression()), !dbg !13477
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13478
  %3 = load i32, i32* %2, align 4, !dbg !13478
  call void @llvm.dbg.value(metadata i32 %3, metadata !13476, metadata !DIExpression()), !dbg !13477
  %4 = icmp eq i32 %3, 0, !dbg !13479
  br i1 %4, label %10, label %5, !dbg !13481

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13482
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13485
  %8 = zext i8 %7 to i32, !dbg !13486
  %9 = icmp eq i32 %6, %8, !dbg !13487
  br i1 %9, label %11, label %10, !dbg !13488

10:                                               ; preds = %5, %1
  br label %11, !dbg !13489

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13477
  ret i1 %12, !dbg !13490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13491 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13493, metadata !DIExpression()), !dbg !13494
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13495
  %3 = load i32, i32* %2, align 4, !dbg !13495
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13497
  %5 = zext i8 %4 to i32, !dbg !13498
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13499
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13500
  %8 = or i32 %7, %5, !dbg !13501
  %9 = icmp eq i32 %3, %8, !dbg !13502
  br i1 %9, label %10, label %11, !dbg !13503

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13504
  br label %11, !dbg !13505

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13507 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13511, metadata !DIExpression()), !dbg !13512
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13513
  %3 = zext i8 %2 to i32, !dbg !13514
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13515
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13516
  %6 = or i32 %5, %3, !dbg !13517
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13518
  store i32 %6, i32* %7, align 4, !dbg !13519
  ret void, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13521 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13525, metadata !DIExpression()), !dbg !13526
  ret i32 -134, !dbg !13527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13532, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.value(metadata i32 %1, metadata !13533, metadata !DIExpression()), !dbg !13534
  ret i32 -134, !dbg !13535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13543, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13544, metadata !DIExpression()), !dbg !13545
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13546
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13548
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13545
  ret i32 %6, !dbg !13549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13550 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13554, metadata !DIExpression()), !dbg !13555
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13556
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13555
  ret i32 %3, !dbg !13558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13559 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13561
  ret void, !dbg !13562
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13565, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i8* %1, metadata !13566, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata i8* %2, metadata !13567, metadata !DIExpression()), !dbg !13568
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13569
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13569
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13569
  %7 = load i8, i8* %6, align 2, !dbg !13569
  %8 = icmp sgt i8 %7, -1, !dbg !13569
  br i1 %8, label %10, label %9, !dbg !13572

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 39) #25, !dbg !13573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 39) #25, !dbg !13573
  unreachable, !dbg !13573

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13575, !srcloc !13582
  call void @llvm.dbg.value(metadata i32 undef, metadata !13578, metadata !DIExpression()) #23, !dbg !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13579, metadata !DIExpression()) #23, !dbg !13583
  tail call fastcc void @k_cpu_idle() #24, !dbg !13584
  br label %10, !dbg !13585, !llvm.loop !13586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13588 {
  tail call void @arch_cpu_idle() #25, !dbg !13589
  ret void, !dbg !13590
}

; Function Attrs: optsize
declare !dbg !13591 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13592 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13603, metadata !DIExpression()), !dbg !13604
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13605
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13606
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13607
  store i32 0, i32* %3, align 4, !dbg !13608
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13609
  tail call fastcc void @z_waitq_init.252(%struct._wait_q_t* noundef %4) #24, !dbg !13610
  ret i32 0, !dbg !13611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.252(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13612 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13616, metadata !DIExpression()), !dbg !13617
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13618
  tail call fastcc void @sys_dlist_init.253(%struct._dnode* noundef %2) #24, !dbg !13619
  ret void, !dbg !13620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.253(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13621 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13626, metadata !DIExpression()), !dbg !13627
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13628
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13629
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13630
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13631
  ret void, !dbg !13632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13633 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13642, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13641, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.value(metadata i8 0, metadata !13649, metadata !DIExpression()), !dbg !13654
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13655, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 %4, metadata !13658, metadata !DIExpression()) #23, !dbg !13665
  %5 = icmp eq i32 %4, 0, !dbg !13666
  br i1 %5, label %7, label %6, !dbg !13667

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 101) #25, !dbg !13668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.259, i32 0, i32 0)) #25, !dbg !13668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 101) #25, !dbg !13668
  unreachable, !dbg !13668

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13670, metadata !DIExpression()) #23, !dbg !13677
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13679, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13683, metadata !DIExpression()) #23, !dbg !13686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13676, metadata !DIExpression()) #23, !dbg !13677
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13687
  br i1 %9, label %11, label %10, !dbg !13690

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13691
  unreachable, !dbg !13691

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13679
  call void @llvm.dbg.value(metadata i32 %12, metadata !13682, metadata !DIExpression()) #23, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %12, metadata !13676, metadata !DIExpression()) #23, !dbg !13677
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13693
  call void @llvm.dbg.value(metadata i32 %12, metadata !13644, metadata !DIExpression()), !dbg !13654
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13694
  %14 = load i32, i32* %13, align 4, !dbg !13694
  %15 = icmp eq i32 %14, 0, !dbg !13694
  br i1 %15, label %21, label %16, !dbg !13694

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13694
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13694
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13694
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13694
  br i1 %20, label %27, label %39, !dbg !13696, !prof !13697

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13698
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13700
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13700
  %25 = load i8, i8* %24, align 2, !dbg !13700
  %26 = sext i8 %25 to i32, !dbg !13698
  br label %30, !dbg !13701

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13702
  %29 = load i32, i32* %28, align 4, !dbg !13702
  br label %30, !dbg !13701

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13703
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13701
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13704
  store i32 %32, i32* %33, align 4, !dbg !13705
  %34 = add i32 %14, 1, !dbg !13706
  store i32 %34, i32* %13, align 4, !dbg !13706
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13707
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13708
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13714, metadata !DIExpression()) #23, !dbg !13715
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13717
  br i1 %36, label %38, label %37, !dbg !13720

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13721
  unreachable, !dbg !13721

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13709, metadata !DIExpression()) #23, !dbg !13715
  call void @llvm.dbg.value(metadata i32 %12, metadata !13723, metadata !DIExpression()) #23, !dbg !13726
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13728, !srcloc !13729
  br label %97, !dbg !13730

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13731
  br i1 %40, label %41, label %45, !dbg !13733, !prof !13734

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13714, metadata !DIExpression()) #23, !dbg !13735
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13738
  br i1 %42, label %44, label %43, !dbg !13739

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13740
  unreachable, !dbg !13740

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13709, metadata !DIExpression()) #23, !dbg !13735
  call void @llvm.dbg.value(metadata i32 %12, metadata !13723, metadata !DIExpression()) #23, !dbg !13741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13743, !srcloc !13729
  br label %97, !dbg !13744

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13745
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13745
  %48 = load i8, i8* %47, align 2, !dbg !13745
  %49 = sext i8 %48 to i32, !dbg !13746
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13747
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13747
  %52 = load i8, i8* %51, align 2, !dbg !13747
  %53 = sext i8 %52 to i32, !dbg !13748
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13749
  call void @llvm.dbg.value(metadata i32 %54, metadata !13643, metadata !DIExpression()), !dbg !13654
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13750
  br i1 %55, label %56, label %58, !dbg !13752

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13753
  call void @llvm.dbg.value(metadata i1 %57, metadata !13649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13654
  br label %58, !dbg !13755

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13649, metadata !DIExpression()), !dbg !13654
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13756
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13757
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.260, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13757
  call void @llvm.dbg.value(metadata i32 %62, metadata !13650, metadata !DIExpression()), !dbg !13654
  %63 = icmp eq i32 %62, 0, !dbg !13758
  br i1 %63, label %97, label %64, !dbg !13760

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13670, metadata !DIExpression()) #23, !dbg !13761
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13763, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13683, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13676, metadata !DIExpression()) #23, !dbg !13761
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13766
  br i1 %66, label %68, label %67, !dbg !13767

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13768
  unreachable, !dbg !13768

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13763
  call void @llvm.dbg.value(metadata i32 %69, metadata !13682, metadata !DIExpression()) #23, !dbg !13765
  call void @llvm.dbg.value(metadata i32 %69, metadata !13676, metadata !DIExpression()) #23, !dbg !13761
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13769
  call void @llvm.dbg.value(metadata i32 %69, metadata !13644, metadata !DIExpression()), !dbg !13654
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13770
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13770
  br i1 %71, label %90, label %72, !dbg !13771, !prof !13734

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13772
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13651, metadata !DIExpression()), !dbg !13773
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13774
  br i1 %74, label %83, label %75, !dbg !13775

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13776
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13776
  %78 = load i8, i8* %77, align 2, !dbg !13776
  %79 = sext i8 %78 to i32, !dbg !13777
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13778
  %81 = load i32, i32* %80, align 4, !dbg !13778
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13779
  br label %86, !dbg !13775

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13780
  %85 = load i32, i32* %84, align 4, !dbg !13780
  br label %86, !dbg !13775

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13775
  call void @llvm.dbg.value(metadata i32 %87, metadata !13643, metadata !DIExpression()), !dbg !13654
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13781
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13782
  call void @llvm.dbg.value(metadata i1 %89, metadata !13649, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13654
  call void @llvm.dbg.value(metadata i8 poison, metadata !13649, metadata !DIExpression()), !dbg !13654
  br i1 %89, label %91, label %93, !dbg !13783

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13649, metadata !DIExpression()), !dbg !13654
  br i1 %59, label %91, label %93, !dbg !13783

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13784
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.260, [1 x i32] %92) #25, !dbg !13784
  br label %97, !dbg !13787

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13714, metadata !DIExpression()) #23, !dbg !13788
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13791
  br i1 %94, label %96, label %95, !dbg !13792

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13793
  unreachable, !dbg !13793

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13709, metadata !DIExpression()) #23, !dbg !13788
  call void @llvm.dbg.value(metadata i32 %69, metadata !13723, metadata !DIExpression()) #23, !dbg !13794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13796, !srcloc !13729
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13654
  ret i32 %98, !dbg !13797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13802, metadata !DIExpression()), !dbg !13805
  call void @llvm.dbg.value(metadata i32 %1, metadata !13803, metadata !DIExpression()), !dbg !13805
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13806
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %4, metadata !13804, metadata !DIExpression()), !dbg !13805
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %5, metadata !13804, metadata !DIExpression()), !dbg !13805
  ret i32 %5, !dbg !13808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13813, metadata !DIExpression()), !dbg !13815
  call void @llvm.dbg.value(metadata i32 %1, metadata !13814, metadata !DIExpression()), !dbg !13815
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13816
  ret i1 %3, !dbg !13817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13818 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13822, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i32 %1, metadata !13823, metadata !DIExpression()), !dbg !13824
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13825
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13825
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13827
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13827
  %7 = load i8, i8* %6, align 2, !dbg !13827
  %8 = sext i8 %7 to i32, !dbg !13828
  %9 = icmp eq i32 %8, %1, !dbg !13829
  br i1 %9, label %12, label %10, !dbg !13830

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13831
  br label %12, !dbg !13833

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13824
  ret i1 %13, !dbg !13834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13835 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13839, metadata !DIExpression()), !dbg !13840
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13841
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13842
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13843
  ret %struct.k_thread* %4, !dbg !13844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13845 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13849, metadata !DIExpression()), !dbg !13850
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13851
  br i1 %2, label %6, label %3, !dbg !13851

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13852
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13852
  br label %6, !dbg !13851

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13851
  ret %struct._dnode* %7, !dbg !13853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13858, metadata !DIExpression()), !dbg !13859
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13860
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13860
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13861
  ret i1 %4, !dbg !13862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13865, metadata !DIExpression()), !dbg !13867
  call void @llvm.dbg.value(metadata i32 %1, metadata !13866, metadata !DIExpression()), !dbg !13867
  %3 = icmp slt i32 %0, %1, !dbg !13868
  ret i1 %3, !dbg !13869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13872, metadata !DIExpression()), !dbg !13873
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13874
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13874
  ret i32 %3, !dbg !13875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !13876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13880, metadata !DIExpression()), !dbg !13881
  %2 = icmp sgt i32 %0, -128, !dbg !13882
  ret i1 %2, !dbg !13883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13884 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13886, metadata !DIExpression()), !dbg !13890
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13891, !srcloc !13664
  call void @llvm.dbg.value(metadata i32 %2, metadata !13658, metadata !DIExpression()) #23, !dbg !13896
  %3 = icmp eq i32 %2, 0, !dbg !13897
  br i1 %3, label %5, label %4, !dbg !13898

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 205) #25, !dbg !13899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.259, i32 0, i32 0)) #25, !dbg !13899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 205) #25, !dbg !13899
  unreachable, !dbg !13899

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13901
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13901
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13901
  br i1 %8, label %41, label %9, !dbg !13903

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13904
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13904
  br i1 %11, label %12, label %41, !dbg !13906

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13907
  %14 = load i32, i32* %13, align 4, !dbg !13907
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13910

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 229) #25, !dbg !13911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.258, i32 0, i32 0), i32 noundef 229) #25, !dbg !13911
  unreachable, !dbg !13911

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13913
  store i32 %17, i32* %13, align 4, !dbg !13913
  br label %41, !dbg !13916

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13670, metadata !DIExpression()) #23, !dbg !13917
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13919, !srcloc !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13683, metadata !DIExpression()) #23, !dbg !13921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13676, metadata !DIExpression()) #23, !dbg !13917
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13922
  br i1 %20, label %22, label %21, !dbg !13923

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 148) #25, !dbg !13924
  unreachable, !dbg !13924

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13919
  call void @llvm.dbg.value(metadata i32 %23, metadata !13682, metadata !DIExpression()) #23, !dbg !13921
  call void @llvm.dbg.value(metadata i32 %23, metadata !13676, metadata !DIExpression()) #23, !dbg !13917
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13925
  call void @llvm.dbg.value(metadata i32 %23, metadata !13888, metadata !DIExpression()), !dbg !13890
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13926
  %25 = load i32, i32* %24, align 4, !dbg !13926
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13927
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13928
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13929
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13887, metadata !DIExpression()), !dbg !13890
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13930
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13931
  br i1 %29, label %37, label %30, !dbg !13933

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13934
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13934
  %33 = load i8, i8* %32, align 2, !dbg !13934
  %34 = sext i8 %33 to i32, !dbg !13936
  store i32 %34, i32* %24, align 4, !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13938, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata i32 0, metadata !13943, metadata !DIExpression()), !dbg !13944
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13946
  store i32 0, i32* %35, align 4, !dbg !13947
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13948
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13949
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.260, [1 x i32] %36) #25, !dbg !13949
  br label %41, !dbg !13950

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13951
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()) #23, !dbg !13953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.260, metadata !13714, metadata !DIExpression()) #23, !dbg !13953
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13955
  br i1 %38, label %40, label %39, !dbg !13956

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.260) #25, !dbg !13957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.262, i32 0, i32 0), i32 noundef 194) #25, !dbg !13957
  unreachable, !dbg !13957

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13709, metadata !DIExpression()) #23, !dbg !13953
  call void @llvm.dbg.value(metadata i32 %23, metadata !13723, metadata !DIExpression()) #23, !dbg !13958
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13960, !srcloc !13729
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13890
  ret i32 %42, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13966, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13967, metadata !DIExpression()), !dbg !13970
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13971
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13971
  %5 = load i8, i8* %4, align 2, !dbg !13971
  call void @llvm.dbg.value(metadata i8 %5, metadata !13968, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13970
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13972
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13972
  %8 = load i8, i8* %7, align 2, !dbg !13972
  call void @llvm.dbg.value(metadata i8 %8, metadata !13969, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13970
  %9 = icmp eq i8 %8, %5, !dbg !13973
  %10 = sext i8 %5 to i32, !dbg !13975
  %11 = sext i8 %8 to i32, !dbg !13975
  %12 = sub nsw i32 %11, %10, !dbg !13975
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13975
  ret i32 %13, !dbg !13976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13981, metadata !DIExpression()), !dbg !13982
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13983
  %3 = icmp eq i32 %2, 0, !dbg !13985
  br i1 %3, label %8, label %4, !dbg !13986

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13987
  %6 = add i32 %5, %2, !dbg !13989
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13990
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13991
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13992
  br label %8, !dbg !13993

8:                                                ; preds = %4, %1
  ret void, !dbg !13994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13999, metadata !DIExpression()), !dbg !14001
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14002
  call void @llvm.dbg.value(metadata i32 %1, metadata !14000, metadata !DIExpression()), !dbg !14001
  ret i32 %1, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14008, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %1, metadata !14009, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 0, metadata !14010, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14026
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14028, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14026
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14036
  br i1 %4, label %6, label %5, !dbg !14039

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14040
  unreachable, !dbg !14040

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14026
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14042
  call void @llvm.dbg.value(metadata i32 undef, metadata !14016, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()), !dbg !14018
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14043
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14046
  %8 = icmp sgt i32 %0, 0, !dbg !14047
  %9 = icmp sgt i32 %7, 2, !dbg !14049
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14049
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14049
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14050
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14051
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14052
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14059
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14061
  br i1 %12, label %14, label %13, !dbg !14064

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14065
  unreachable, !dbg !14065

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14028
  call void @llvm.dbg.value(metadata i32 %15, metadata !14031, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %15, metadata !14025, metadata !DIExpression()) #23, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %15, metadata !14016, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14059
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14070
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14072, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !14010, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 undef, metadata !14010, metadata !DIExpression()), !dbg !14018
  ret void, !dbg !14074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14077, metadata !DIExpression()), !dbg !14078
  call void @llvm.dbg.value(metadata i32 %0, metadata !14079, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14094
  call void @llvm.dbg.value(metadata i32 1000, metadata !14082, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i32 10000, metadata !14083, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i8 1, metadata !14084, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i1 true, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14094
  call void @llvm.dbg.value(metadata i1 true, metadata !14086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14094
  call void @llvm.dbg.value(metadata i8 0, metadata !14087, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i1 true, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14094
  call void @llvm.dbg.value(metadata i1 false, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14094
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !14094
  %2 = mul i32 %0, 10, !dbg !14096
  ret i32 %2, !dbg !14102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14105, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14108
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14110, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14108
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14113
  br i1 %3, label %5, label %4, !dbg !14114

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14115
  unreachable, !dbg !14115

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14110
  call void @llvm.dbg.value(metadata i32 %6, metadata !14031, metadata !DIExpression()) #23, !dbg !14112
  call void @llvm.dbg.value(metadata i32 %6, metadata !14025, metadata !DIExpression()) #23, !dbg !14108
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14116
  call void @llvm.dbg.value(metadata i32 %6, metadata !14106, metadata !DIExpression()), !dbg !14107
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14117
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14119
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14120
  br i1 %9, label %10, label %14, !dbg !14121

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14122
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14124
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14126
  br i1 %11, label %13, label %12, !dbg !14127

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14128
  unreachable, !dbg !14128

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !14129
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14131, !srcloc !14073
  br label %33, !dbg !14132

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14133
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14134
  %16 = icmp eq i32 %15, 0, !dbg !14134
  br i1 %16, label %27, label %17, !dbg !14136

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14137
  br i1 %18, label %19, label %27, !dbg !14138

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14139
  %21 = icmp sgt i32 %20, %0, !dbg !14142
  br i1 %21, label %25, label %22, !dbg !14143

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14144
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14144
  call void @llvm.dbg.value(metadata i32 %24, metadata !14106, metadata !DIExpression()), !dbg !14107
  br label %28, !dbg !14146

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14147
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14147
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14149
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14107
  call void @llvm.dbg.value(metadata i32 %29, metadata !14106, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14151
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14153
  br i1 %30, label %32, label %31, !dbg !14154

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14155
  unreachable, !dbg !14155

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14053, metadata !DIExpression()) #23, !dbg !14151
  call void @llvm.dbg.value(metadata i32 %29, metadata !14067, metadata !DIExpression()) #23, !dbg !14156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14158, !srcloc !14073
  br label %33, !dbg !14159

33:                                               ; preds = %32, %13
  ret void, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14164, metadata !DIExpression()), !dbg !14166
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14167
  %3 = icmp eq i32 %2, 0, !dbg !14167
  br i1 %3, label %16, label %4, !dbg !14168

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14169
  br i1 %5, label %16, label %6, !dbg !14170

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14171
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14171
  %9 = load i8, i8* %8, align 2, !dbg !14171
  %10 = sext i8 %9 to i32, !dbg !14172
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14173
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.282(i32 noundef %10, i32 noundef %11) #24, !dbg !14174
  br i1 %12, label %16, label %13, !dbg !14175

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14176
  %15 = xor i1 %14, true, !dbg !14177
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14166
  call void @llvm.dbg.value(metadata i1 %17, metadata !14165, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14166
  ret i1 %17, !dbg !14178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14179 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14183, metadata !DIExpression()), !dbg !14185
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14186
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14184, metadata !DIExpression()), !dbg !14185
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14187
  br i1 %3, label %5, label %4, !dbg !14189

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14190
  br label %5, !dbg !14192

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14183, metadata !DIExpression()), !dbg !14185
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14193
  ret i32 %6, !dbg !14194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14195 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()), !dbg !14199
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14200
  %3 = load i8, i8* %2, align 1, !dbg !14200
  call void @llvm.dbg.value(metadata i8 %3, metadata !14198, metadata !DIExpression()), !dbg !14199
  %4 = and i8 %3, 31, !dbg !14201
  %5 = icmp ne i8 %4, 0, !dbg !14202
  ret i1 %5, !dbg !14203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14206, metadata !DIExpression()), !dbg !14207
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14208
  br i1 %2, label %3, label %7, !dbg !14210

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()) #23, !dbg !14214
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14217
  %5 = load i8, i8* %4, align 1, !dbg !14218
  %6 = and i8 %5, 127, !dbg !14218
  store i8 %6, i8* %4, align 1, !dbg !14218
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()) #23, !dbg !14222
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14226
  br label %7, !dbg !14227

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14231
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14233
  %9 = load i8, i8* %8, align 1, !dbg !14234
  %10 = or i8 %9, -128, !dbg !14234
  store i8 %10, i8* %8, align 1, !dbg !14234
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14235, metadata !DIExpression()) #23, !dbg !14238
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14242, metadata !DIExpression()) #23, !dbg !14250
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()) #23, !dbg !14250
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14252
  br i1 %11, label %12, label %13, !dbg !14255

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14256
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14256
  unreachable, !dbg !14256

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14258
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14249, metadata !DIExpression()) #23, !dbg !14250
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14260
  br i1 %15, label %26, label %16, !dbg !14258

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14249, metadata !DIExpression()) #23, !dbg !14250
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14262
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14249, metadata !DIExpression()) #23, !dbg !14250
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14263
  %20 = icmp sgt i32 %19, 0, !dbg !14266
  br i1 %20, label %21, label %23, !dbg !14267

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14268
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14270
  br label %28, !dbg !14271

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14260
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14249, metadata !DIExpression()) #23, !dbg !14250
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14260
  br i1 %25, label %26, label %16, !dbg !14258, !llvm.loop !14272

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14274
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14275
  br label %28, !dbg !14276

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14277
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14278
  %31 = zext i1 %30 to i32, !dbg !14278
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14279
  ret void, !dbg !14280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14283, metadata !DIExpression()), !dbg !14284
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14285
  ret i1 %2, !dbg !14286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14289, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14290, metadata !DIExpression()), !dbg !14291
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14292
  br i1 %3, label %4, label %5, !dbg !14295

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14296
  unreachable, !dbg !14296

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14298
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14299
  ret void, !dbg !14300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14303, metadata !DIExpression()), !dbg !14304
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14305
  ret i1 %2, !dbg !14306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14311, metadata !DIExpression()), !dbg !14312
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.280(%struct._dnode* noundef %0) #24, !dbg !14313
  br i1 %2, label %6, label %3, !dbg !14313

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14314
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14314
  br label %6, !dbg !14313

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14313
  ret %struct._dnode* %7, !dbg !14315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14316 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14320, metadata !DIExpression()), !dbg !14324
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14321, metadata !DIExpression()), !dbg !14324
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14325
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14325
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14322, metadata !DIExpression()), !dbg !14324
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14326
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14327
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14328
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14329
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14330
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14331
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14332
  ret void, !dbg !14333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14334 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14338, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14339, metadata !DIExpression()), !dbg !14340
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14341
  br i1 %3, label %6, label %4, !dbg !14342

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14343
  br label %6, !dbg !14342

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14342
  ret %struct._dnode* %7, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14345 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14349, metadata !DIExpression()), !dbg !14352
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14350, metadata !DIExpression()), !dbg !14352
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14353
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14353
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14351, metadata !DIExpression()), !dbg !14352
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14354
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14355
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14356
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14357
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14358
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14359
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14360
  ret void, !dbg !14361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14364, metadata !DIExpression()), !dbg !14366
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14367
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14374, metadata !DIExpression()) #23, !dbg !14376
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14377
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14378
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14378
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14365, metadata !DIExpression()), !dbg !14366
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14379, metadata !DIExpression()) #23, !dbg !14385
  call void @llvm.dbg.value(metadata i32 %0, metadata !14384, metadata !DIExpression()) #23, !dbg !14385
  %6 = icmp eq i32 %0, 0, !dbg !14388
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14390
  br i1 %6, label %8, label %18, !dbg !14391

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14392
  br i1 %9, label %10, label %11, !dbg !14395

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 137) #25, !dbg !14396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !14396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 137) #25, !dbg !14396
  unreachable, !dbg !14396

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14398
  br i1 %12, label %18, label %13, !dbg !14400

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14401
  br i1 %14, label %18, label %15, !dbg !14403

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14404
  %17 = icmp eq i32 %16, 0, !dbg !14404
  br i1 %17, label %21, label %18, !dbg !14406

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14407
  br i1 %19, label %21, label %20, !dbg !14410

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14411
  br label %21, !dbg !14413

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14390
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14390
  ret void, !dbg !14414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14415 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14419, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14420, metadata !DIExpression()), !dbg !14422
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef %0) #24, !dbg !14423
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14421, metadata !DIExpression()), !dbg !14422
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14420, metadata !DIExpression()), !dbg !14422
  ret %struct.k_thread* %3, !dbg !14424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14425 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14427, metadata !DIExpression()), !dbg !14428
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14429
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14430
  %4 = xor i1 %3, true, !dbg !14431
  ret i1 %4, !dbg !14432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14437
  %3 = load i16, i16* %2, align 2, !dbg !14437
  %4 = icmp ult i16 %3, 128, !dbg !14438
  %5 = zext i1 %4 to i32, !dbg !14438
  ret i32 %5, !dbg !14439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14440 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14446, metadata !DIExpression()), !dbg !14447
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14448
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14449
  %4 = xor i1 %3, true, !dbg !14450
  ret i1 %4, !dbg !14451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14452 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14458, metadata !DIExpression()), !dbg !14459
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14460
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14460
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14461
  ret i1 %4, !dbg !14462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14463 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14465, metadata !DIExpression()), !dbg !14467
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14466, metadata !DIExpression()), !dbg !14467
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14468
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14468
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14469
  br i1 %5, label %9, label %6, !dbg !14470

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14471
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14471
  br label %9, !dbg !14470

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14470
  ret %struct._dnode* %10, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.280(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14477, metadata !DIExpression()), !dbg !14478
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14479
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14479
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14480
  ret i1 %4, !dbg !14481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14482 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14486, metadata !DIExpression()), !dbg !14489
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14490
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14490
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14487, metadata !DIExpression()), !dbg !14489
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14491
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14491
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14488, metadata !DIExpression()), !dbg !14489
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14492
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14493
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14494
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14495
  tail call fastcc void @sys_dnode_init.281(%struct._dnode* noundef %0) #24, !dbg !14496
  ret void, !dbg !14497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.281(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14498 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14502
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14503
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14504
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14505
  ret void, !dbg !14506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14507 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14511, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.value(metadata i32 %1, metadata !14512, metadata !DIExpression()), !dbg !14513
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14514
  %4 = load i8, i8* %3, align 1, !dbg !14514
  %5 = zext i8 %4 to i32, !dbg !14515
  %6 = and i32 %5, %1, !dbg !14516
  %7 = icmp ne i32 %6, 0, !dbg !14517
  ret i1 %7, !dbg !14518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.282(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14521, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.value(metadata i32 %1, metadata !14522, metadata !DIExpression()), !dbg !14523
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.283(i32 noundef %0, i32 noundef %1) #24, !dbg !14524
  ret i1 %3, !dbg !14525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.283(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14528, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.value(metadata i32 %1, metadata !14529, metadata !DIExpression()), !dbg !14530
  %3 = icmp slt i32 %0, %1, !dbg !14531
  ret i1 %3, !dbg !14532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14535, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i32 0, metadata !14536, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14541
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14543, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14541
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14546
  br i1 %3, label %5, label %4, !dbg !14547

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14548
  unreachable, !dbg !14548

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14541
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14536, metadata !DIExpression()), !dbg !14540
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14550
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14555
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14557
  br i1 %6, label %8, label %7, !dbg !14558

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14559
  unreachable, !dbg !14559

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %9, metadata !14031, metadata !DIExpression()) #23, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %9, metadata !14025, metadata !DIExpression()) #23, !dbg !14541
  call void @llvm.dbg.value(metadata i32 %9, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14555
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14560
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14562, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !14536, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14536, metadata !DIExpression()), !dbg !14540
  ret void, !dbg !14563
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14566, metadata !DIExpression()), !dbg !14567
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14568
  br i1 %2, label %27, label %3, !dbg !14570

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14571
  br i1 %4, label %5, label %27, !dbg !14572

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !14573
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14576
  %7 = load i8, i8* %6, align 1, !dbg !14577
  %8 = or i8 %7, -128, !dbg !14577
  store i8 %8, i8* %6, align 1, !dbg !14577
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14235, metadata !DIExpression()) #23, !dbg !14578
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14242, metadata !DIExpression()) #23, !dbg !14580
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()) #23, !dbg !14580
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14582
  br i1 %9, label %10, label %11, !dbg !14583

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14584
  unreachable, !dbg !14584

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14585
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14249, metadata !DIExpression()) #23, !dbg !14580
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14586
  br i1 %13, label %24, label %14, !dbg !14585

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14249, metadata !DIExpression()) #23, !dbg !14580
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14587
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14249, metadata !DIExpression()) #23, !dbg !14580
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14588
  %18 = icmp sgt i32 %17, 0, !dbg !14589
  br i1 %18, label %19, label %21, !dbg !14590

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14591
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14592
  br label %26, !dbg !14593

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14586
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14249, metadata !DIExpression()) #23, !dbg !14580
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14586
  br i1 %23, label %24, label %14, !dbg !14585, !llvm.loop !14594

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14596
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14597
  br label %26, !dbg !14598

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14599
  br label %27, !dbg !14600

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14604, metadata !DIExpression()), !dbg !14605
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14606
  br i1 %2, label %6, label %3, !dbg !14607

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14608
  %5 = xor i1 %4, true, !dbg !14607
  br label %6, !dbg !14607

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14610 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14612, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 0, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14618
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14620, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14618
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14623
  br i1 %3, label %5, label %4, !dbg !14624

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14625
  unreachable, !dbg !14625

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14618
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14615, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14613, metadata !DIExpression()), !dbg !14617
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14627
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14630
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14632
  br i1 %6, label %8, label %7, !dbg !14633

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14634
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14634
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14634
  unreachable, !dbg !14634

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %9, metadata !14031, metadata !DIExpression()) #23, !dbg !14622
  call void @llvm.dbg.value(metadata i32 %9, metadata !14025, metadata !DIExpression()) #23, !dbg !14618
  call void @llvm.dbg.value(metadata i32 %9, metadata !14615, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14635
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14637, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !14613, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.value(metadata i32 undef, metadata !14613, metadata !DIExpression()), !dbg !14617
  ret void, !dbg !14638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14639 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14641, metadata !DIExpression()), !dbg !14643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14644
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14646, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14644
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14649
  br i1 %3, label %5, label %4, !dbg !14650

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14651
  unreachable, !dbg !14651

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14646
  call void @llvm.dbg.value(metadata i32 %6, metadata !14031, metadata !DIExpression()) #23, !dbg !14648
  call void @llvm.dbg.value(metadata i32 %6, metadata !14025, metadata !DIExpression()) #23, !dbg !14644
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14652
  call void @llvm.dbg.value(metadata i32 %6, metadata !14642, metadata !DIExpression()), !dbg !14643
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14653
  br i1 %7, label %8, label %12, !dbg !14655

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14656
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14659
  br i1 %9, label %11, label %10, !dbg !14660

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14661
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14661
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14661
  unreachable, !dbg !14661

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !14656
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !14662
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14664, !srcloc !14073
  br label %14, !dbg !14665

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.288(%struct.k_thread* noundef %0) #24, !dbg !14666
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14667
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14668
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14668
  br label %14, !dbg !14669

14:                                               ; preds = %12, %11
  ret void, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14674
  %3 = load i8, i8* %2, align 1, !dbg !14674
  %4 = and i8 %3, 4, !dbg !14675
  %5 = icmp eq i8 %4, 0, !dbg !14676
  ret i1 %5, !dbg !14677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.288(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()), !dbg !14681
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14682
  %3 = load i8, i8* %2, align 1, !dbg !14683
  %4 = and i8 %3, -5, !dbg !14683
  store i8 %4, i8* %2, align 1, !dbg !14683
  ret void, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14685 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14688, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14687, metadata !DIExpression()), !dbg !14689
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14690
  br i1 %4, label %5, label %12, !dbg !14692

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14693
  br i1 %6, label %7, label %12, !dbg !14694

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14700, metadata !DIExpression()) #23, !dbg !14701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14704, metadata !DIExpression()) #23, !dbg !14709
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14711
  br i1 %8, label %10, label %9, !dbg !14714

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !14715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !14715
  unreachable, !dbg !14715

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14695, metadata !DIExpression()) #23, !dbg !14701
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14717
  br label %16, !dbg !14718

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14058, metadata !DIExpression()) #23, !dbg !14719
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14722
  br i1 %13, label %15, label %14, !dbg !14723

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14724
  unreachable, !dbg !14724

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14053, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata i32 %3, metadata !14067, metadata !DIExpression()) #23, !dbg !14725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14727, !srcloc !14073
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14733, metadata !DIExpression()), !dbg !14734
  call void @llvm.dbg.value(metadata i32 %0, metadata !14735, metadata !DIExpression()), !dbg !14740
  %2 = icmp eq i32 %0, 0, !dbg !14742
  br i1 %2, label %3, label %6, !dbg !14743

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14744, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %4, metadata !14747, metadata !DIExpression()) #23, !dbg !14752
  %5 = icmp eq i32 %4, 0, !dbg !14753
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14734
  ret i1 %7, !dbg !14754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14755 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14758
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14757, metadata !DIExpression()), !dbg !14759
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14760
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14761
  ret i1 %3, !dbg !14762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14765, metadata !DIExpression()), !dbg !14767
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14768
  call void @llvm.dbg.value(metadata i32 %2, metadata !14766, metadata !DIExpression()), !dbg !14767
  ret i32 %2, !dbg !14769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14770 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14772, metadata !DIExpression()), !dbg !14776
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14777
  call void @llvm.dbg.value(metadata i32 0, metadata !14773, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14779
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14781, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14779
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14784
  br i1 %4, label %6, label %5, !dbg !14785

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14786
  unreachable, !dbg !14786

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14781
  call void @llvm.dbg.value(metadata i32 %7, metadata !14031, metadata !DIExpression()) #23, !dbg !14783
  call void @llvm.dbg.value(metadata i32 %7, metadata !14025, metadata !DIExpression()) #23, !dbg !14779
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %7, metadata !14775, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()), !dbg !14778
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14788
  br i1 %8, label %9, label %13, !dbg !14792

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()) #23, !dbg !14793
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14796
  %11 = load i8, i8* %10, align 1, !dbg !14797
  %12 = and i8 %11, 127, !dbg !14797
  store i8 %12, i8* %10, align 1, !dbg !14797
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()) #23, !dbg !14798
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14800
  br label %13, !dbg !14801

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14802
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14803
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14804
  %16 = zext i1 %15 to i32, !dbg !14804
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14805
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14806
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14806
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14808
  br i1 %17, label %19, label %18, !dbg !14809

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14810
  unreachable, !dbg !14810

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14053, metadata !DIExpression()) #23, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %7, metadata !14067, metadata !DIExpression()) #23, !dbg !14811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14813, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !14773, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()), !dbg !14778
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14814
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14816
  br i1 %21, label %22, label %23, !dbg !14817

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14818
  br label %23, !dbg !14820

23:                                               ; preds = %22, %19
  ret void, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14824, metadata !DIExpression()), !dbg !14825
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14826
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14827
  ret i32 %3, !dbg !14828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14829 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14831, metadata !DIExpression()), !dbg !14832
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14833
  %3 = load i8, i8* %2, align 1, !dbg !14834
  %4 = or i8 %3, 16, !dbg !14834
  store i8 %4, i8* %2, align 1, !dbg !14834
  ret void, !dbg !14835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14836 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14837, !srcloc !14034
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14837
  call void @llvm.dbg.value(metadata i32 %2, metadata !14031, metadata !DIExpression()) #23, !dbg !14839
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14839
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14840
  ret void, !dbg !14841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14844, metadata !DIExpression()), !dbg !14845
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14846
  br i1 %2, label %3, label %5, !dbg !14848

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14849
  br label %6, !dbg !14851

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14067, metadata !DIExpression()) #23, !dbg !14852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14855, !srcloc !14073
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14859, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14862
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14864, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14862
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14867
  br i1 %3, label %5, label %4, !dbg !14868

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14869
  unreachable, !dbg !14869

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %6, metadata !14031, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %6, metadata !14025, metadata !DIExpression()) #23, !dbg !14862
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14870
  call void @llvm.dbg.value(metadata i32 %6, metadata !14860, metadata !DIExpression()), !dbg !14861
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14871
  br i1 %7, label %12, label %8, !dbg !14873

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14874
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14877
  br i1 %9, label %11, label %10, !dbg !14878

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14879
  unreachable, !dbg !14879

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !14880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14882, !srcloc !14073
  br label %14, !dbg !14883

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14884
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14885
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14886
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14886
  br label %14, !dbg !14887

14:                                               ; preds = %12, %11
  ret void, !dbg !14887
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14888 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14890, metadata !DIExpression()), !dbg !14891
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14892
  %3 = load i8, i8* %2, align 1, !dbg !14892
  %4 = and i8 %3, 16, !dbg !14893
  %5 = icmp ne i8 %4, 0, !dbg !14894
  ret i1 %5, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14898, metadata !DIExpression()), !dbg !14899
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14900
  %3 = load i8, i8* %2, align 1, !dbg !14901
  %4 = and i8 %3, -17, !dbg !14901
  store i8 %4, i8* %2, align 1, !dbg !14901
  ret void, !dbg !14902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14903 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14913, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14911, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14912, metadata !DIExpression()), !dbg !14917
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14918
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14918
  br i1 %5, label %9, label %6, !dbg !14918

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14918
  br i1 %7, label %9, label %8, !dbg !14921

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 773) #25, !dbg !14922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 773) #25, !dbg !14922
  unreachable, !dbg !14922

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14914, metadata !DIExpression()), !dbg !14924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !14925
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14927, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14925
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14930
  br i1 %11, label %13, label %12, !dbg !14931

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14932
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !14932
  unreachable, !dbg !14932

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !14925
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14916, metadata !DIExpression()), !dbg !14924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()), !dbg !14924
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !14937
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14939
  br i1 %14, label %16, label %15, !dbg !14940

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !14941
  unreachable, !dbg !14941

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %17, metadata !14031, metadata !DIExpression()) #23, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %17, metadata !14025, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata i32 %17, metadata !14916, metadata !DIExpression()), !dbg !14924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !14937
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !14942
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14944, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !14914, metadata !DIExpression()), !dbg !14924
  call void @llvm.dbg.value(metadata i32 undef, metadata !14914, metadata !DIExpression()), !dbg !14924
  ret void, !dbg !14945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14948, metadata !DIExpression()), !dbg !14949
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14950
  %3 = load i8, i8* %2, align 1, !dbg !14950
  %4 = and i8 %3, 1, !dbg !14951
  %5 = icmp ne i8 %4, 0, !dbg !14952
  ret i1 %5, !dbg !14953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14954 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14958, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14956, metadata !DIExpression()), !dbg !14959
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14957, metadata !DIExpression()), !dbg !14959
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14960
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14961
  ret void, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14967, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14968, metadata !DIExpression()), !dbg !14969
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14970
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14971
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14972
  br i1 %3, label %24, label %4, !dbg !14974

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14975
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14977
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14978
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14242, metadata !DIExpression()) #23, !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()) #23, !dbg !14979
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14981
  br i1 %7, label %8, label %9, !dbg !14982

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !14983
  unreachable, !dbg !14983

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef nonnull %6) #25, !dbg !14984
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14249, metadata !DIExpression()) #23, !dbg !14979
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14985
  br i1 %11, label %22, label %12, !dbg !14984

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14249, metadata !DIExpression()) #23, !dbg !14979
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14986
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14249, metadata !DIExpression()) #23, !dbg !14979
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !14987
  %16 = icmp sgt i32 %15, 0, !dbg !14988
  br i1 %16, label %17, label %19, !dbg !14989

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14990
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14991
  br label %24, !dbg !14992

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !14985
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14249, metadata !DIExpression()) #23, !dbg !14979
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14985
  br i1 %21, label %22, label %12, !dbg !14984, !llvm.loop !14993

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14995
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !14996
  br label %24, !dbg !14997

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14999 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15004, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15003, metadata !DIExpression()), !dbg !15005
  %4 = icmp eq i64 %3, -1, !dbg !15006
  br i1 %4, label %6, label %5, !dbg !15008

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.292(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15009
  br label %6, !dbg !15011

6:                                                ; preds = %5, %2
  ret void, !dbg !15012
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.292(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15013 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15016, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15015, metadata !DIExpression()), !dbg !15017
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15018
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15019
  ret void, !dbg !15020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15023, metadata !DIExpression()), !dbg !15031
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15032
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15024, metadata !DIExpression()), !dbg !15031
  call void @llvm.dbg.value(metadata i32 0, metadata !15025, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15034
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15036, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15034
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15039
  br i1 %5, label %7, label %6, !dbg !15040

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15041
  unreachable, !dbg !15041

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15034
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15042
  call void @llvm.dbg.value(metadata i32 undef, metadata !15027, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata i32 undef, metadata !15025, metadata !DIExpression()), !dbg !15033
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15043
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15044
  %10 = load i8, i8* %9, align 1, !dbg !15044
  %11 = and i8 %10, 40, !dbg !15045
  %12 = icmp eq i8 %11, 0, !dbg !15045
  call void @llvm.dbg.value(metadata i1 %12, metadata !15028, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15046
  br i1 %12, label %13, label %20, !dbg !15047

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15048
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15048
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15048
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15052
  br i1 %17, label %19, label %18, !dbg !15053

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15054
  br label %19, !dbg !15056

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.288(%struct.k_thread* noundef nonnull %3) #24, !dbg !15057
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15058
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15059
  br label %20, !dbg !15060

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15061
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15063
  br i1 %21, label %23, label %22, !dbg !15064

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15065
  unreachable, !dbg !15065

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15036
  call void @llvm.dbg.value(metadata i32 %24, metadata !14031, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 %24, metadata !14025, metadata !DIExpression()) #23, !dbg !15034
  call void @llvm.dbg.value(metadata i32 %24, metadata !15027, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15061
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15066
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15068, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15025, metadata !DIExpression()), !dbg !15033
  call void @llvm.dbg.value(metadata i32 undef, metadata !15025, metadata !DIExpression()), !dbg !15033
  ret void, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15072, metadata !DIExpression()), !dbg !15073
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15074
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15075
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15076
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15077
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15078
  ret void, !dbg !15079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15084, metadata !DIExpression()), !dbg !15085
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15086
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15086
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15086
  br i1 %4, label %5, label %6, !dbg !15089

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 726) #25, !dbg !15090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 726) #25, !dbg !15090
  unreachable, !dbg !15090

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15093 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15095, metadata !DIExpression()), !dbg !15096
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15097
  %3 = load i8, i8* %2, align 1, !dbg !15098
  %4 = and i8 %3, -3, !dbg !15098
  store i8 %4, i8* %2, align 1, !dbg !15098
  ret void, !dbg !15099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15104
  br i1 %2, label %3, label %7, !dbg !15106

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()) #23, !dbg !15107
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15110
  %5 = load i8, i8* %4, align 1, !dbg !15111
  %6 = and i8 %5, 127, !dbg !15111
  store i8 %6, i8* %4, align 1, !dbg !15111
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()) #23, !dbg !15112
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15114
  br label %7, !dbg !15115

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15116
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15117
  %10 = zext i1 %9 to i32, !dbg !15117
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15118
  ret void, !dbg !15119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15120 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15122, metadata !DIExpression()), !dbg !15123
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15124
  %3 = load i8, i8* %2, align 1, !dbg !15125
  %4 = or i8 %3, 2, !dbg !15125
  store i8 %4, i8* %2, align 1, !dbg !15125
  ret void, !dbg !15126
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15129, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 0, metadata !15130, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15137, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15135
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15140
  br i1 %3, label %5, label %4, !dbg !15141

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15142
  unreachable, !dbg !15142

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15135
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15143
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()), !dbg !15134
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15144
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15147
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15147
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15149
  br i1 %6, label %8, label %7, !dbg !15150

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15151
  unreachable, !dbg !15151

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15137
  call void @llvm.dbg.value(metadata i32 %9, metadata !14031, metadata !DIExpression()) #23, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %9, metadata !14025, metadata !DIExpression()) #23, !dbg !15135
  call void @llvm.dbg.value(metadata i32 %9, metadata !15132, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15154, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15130, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()), !dbg !15134
  ret void, !dbg !15155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15156 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15162, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata i32 %0, metadata !15160, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15161, metadata !DIExpression()), !dbg !15167
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15168
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15169
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15170
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15171
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %6, metadata !15163, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata i32 0, metadata !15164, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15174
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15176, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15174
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15179
  br i1 %8, label %10, label %9, !dbg !15180

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15181
  unreachable, !dbg !15181

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15174
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !15166, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()), !dbg !15173
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15183
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15187
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15188
  br i1 %13, label %14, label %15, !dbg !15189

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15190
  br label %15, !dbg !15192

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15193
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15195
  br i1 %16, label %18, label %17, !dbg !15196

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15197
  unreachable, !dbg !15197

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15176
  call void @llvm.dbg.value(metadata i32 %19, metadata !14031, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 %19, metadata !14025, metadata !DIExpression()) #23, !dbg !15174
  call void @llvm.dbg.value(metadata i32 %19, metadata !15166, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15200, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15164, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i32 undef, metadata !15164, metadata !DIExpression()), !dbg !15173
  ret i32 %6, !dbg !15201
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15202 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15207, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata i64 undef, metadata !15209, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15206, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15208, metadata !DIExpression()), !dbg !15210
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15211
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15212
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15213
  br i1 %6, label %7, label %8, !dbg !15216

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 846) #25, !dbg !15217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 846) #25, !dbg !15217
  unreachable, !dbg !15217

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15219
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15221, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15219
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15224
  br i1 %10, label %12, label %11, !dbg !15225

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15226
  unreachable, !dbg !15226

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15219
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15227
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15228
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14704, metadata !DIExpression()) #23, !dbg !15230
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15232
  br i1 %14, label %16, label %15, !dbg !15233

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15234
  unreachable, !dbg !15234

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14700, metadata !DIExpression()) #23, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14704, metadata !DIExpression()) #23, !dbg !15237
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15239
  br i1 %17, label %19, label %18, !dbg !15240

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15241
  unreachable, !dbg !15241

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14695, metadata !DIExpression()) #23, !dbg !15235
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15242
  ret i32 %21, !dbg !15243
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15244 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15248, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 0, metadata !15250, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15255
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15257, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15255
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15260
  br i1 %3, label %5, label %4, !dbg !15261

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15262
  unreachable, !dbg !15262

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15255
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15252, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()), !dbg !15254
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15249, metadata !DIExpression()), !dbg !15253
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15267
  br i1 %8, label %10, label %9, !dbg !15269

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15270
  br label %10, !dbg !15272

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15273
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15275
  br i1 %11, label %13, label %12, !dbg !15276

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15277
  unreachable, !dbg !15277

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %14, metadata !14031, metadata !DIExpression()) #23, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %14, metadata !14025, metadata !DIExpression()) #23, !dbg !15255
  call void @llvm.dbg.value(metadata i32 %14, metadata !15252, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15278
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15280, !srcloc !14073
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()), !dbg !15254
  ret %struct.k_thread* %7, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15284, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 0, metadata !15286, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15291
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15293, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15291
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15296
  br i1 %3, label %5, label %4, !dbg !15297

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15298
  unreachable, !dbg !15298

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15291
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15299
  call void @llvm.dbg.value(metadata i32 undef, metadata !15288, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15286, metadata !DIExpression()), !dbg !15290
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15300
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15285, metadata !DIExpression()), !dbg !15289
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15303
  br i1 %8, label %11, label %9, !dbg !15305

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15306
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15308
  br label %11, !dbg !15309

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15310
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15312
  br i1 %12, label %14, label %13, !dbg !15313

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15314
  unreachable, !dbg !15314

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %15, metadata !14031, metadata !DIExpression()) #23, !dbg !15295
  call void @llvm.dbg.value(metadata i32 %15, metadata !14025, metadata !DIExpression()) #23, !dbg !15291
  call void @llvm.dbg.value(metadata i32 %15, metadata !15288, metadata !DIExpression()), !dbg !15290
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15317, !srcloc !14073
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15286, metadata !DIExpression()), !dbg !15290
  ret %struct.k_thread* %7, !dbg !15318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15319 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15321, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15129, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 0, metadata !15130, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15326
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15328, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15326
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15331
  br i1 %3, label %5, label %4, !dbg !15332

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15333
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15333
  unreachable, !dbg !15333

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15326
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()) #23, !dbg !15325
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15336
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15338
  br i1 %6, label %8, label %7, !dbg !15339

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15340
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15340
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15340
  unreachable, !dbg !15340

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %9, metadata !14031, metadata !DIExpression()) #23, !dbg !15330
  call void @llvm.dbg.value(metadata i32 %9, metadata !14025, metadata !DIExpression()) #23, !dbg !15326
  call void @llvm.dbg.value(metadata i32 %9, metadata !15132, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15336
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15341
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15343, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15130, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()) #23, !dbg !15325
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15344
  ret void, !dbg !15345
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 %1, metadata !15349, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i8 0, metadata !15350, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 0, metadata !15351, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15356
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15358, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15356
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15361
  br i1 %4, label %6, label %5, !dbg !15362

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15363
  unreachable, !dbg !15363

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15356
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15364
  call void @llvm.dbg.value(metadata i32 undef, metadata !15353, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i8 poison, metadata !15350, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !15351, metadata !DIExpression()), !dbg !15355
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15365
  call void @llvm.dbg.value(metadata i1 %9, metadata !15350, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15354
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15368

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()) #23, !dbg !15369
  %14 = load i8, i8* %7, align 1, !dbg !15375
  %15 = and i8 %14, 127, !dbg !15375
  store i8 %15, i8* %7, align 1, !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()) #23, !dbg !15376
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15378
  store i8 %12, i8* %11, align 2, !dbg !15379
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14228, metadata !DIExpression()) #23, !dbg !15380
  %16 = load i8, i8* %7, align 1, !dbg !15382
  %17 = or i8 %16, -128, !dbg !15382
  store i8 %17, i8* %7, align 1, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14235, metadata !DIExpression()) #23, !dbg !15383
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14242, metadata !DIExpression()) #23, !dbg !15385
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14248, metadata !DIExpression()) #23, !dbg !15385
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15387
  br i1 %18, label %19, label %20, !dbg !15388

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !15389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !15389
  unreachable, !dbg !15389

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15390
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14249, metadata !DIExpression()) #23, !dbg !15385
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15391
  br i1 %22, label %32, label %23, !dbg !15390

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14249, metadata !DIExpression()) #23, !dbg !15385
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15392
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14249, metadata !DIExpression()) #23, !dbg !15385
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15393
  %27 = icmp sgt i32 %26, 0, !dbg !15394
  br i1 %27, label %28, label %29, !dbg !15395

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15396
  br label %33, !dbg !15397

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15391
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14249, metadata !DIExpression()) #23, !dbg !15385
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15391
  br i1 %31, label %32, label %23, !dbg !15390, !llvm.loop !15398

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15400
  br label %33, !dbg !15401

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15402
  br label %35, !dbg !15403

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15404
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15406
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15406
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15408
  br i1 %36, label %38, label %37, !dbg !15409

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15410
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15410
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15410
  unreachable, !dbg !15410

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15358
  call void @llvm.dbg.value(metadata i32 %39, metadata !14031, metadata !DIExpression()) #23, !dbg !15360
  call void @llvm.dbg.value(metadata i32 %39, metadata !14025, metadata !DIExpression()) #23, !dbg !15356
  call void @llvm.dbg.value(metadata i32 %39, metadata !15353, metadata !DIExpression()), !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15406
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15411
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15413, !srcloc !14073
  call void @llvm.dbg.value(metadata i8 poison, metadata !15350, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !15351, metadata !DIExpression()), !dbg !15355
  ret i1 %9, !dbg !15414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15419, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.value(metadata i32 %1, metadata !15420, metadata !DIExpression()), !dbg !15422
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15423
  call void @llvm.dbg.value(metadata i1 %3, metadata !15421, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15422
  br i1 %3, label %4, label %12, !dbg !15424

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15426
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15427
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15427
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15427
  %9 = load i8, i8* %8, align 1, !dbg !15427
  %10 = icmp eq i8 %9, 0, !dbg !15428
  br i1 %10, label %11, label %12, !dbg !15429

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15430
  br label %12, !dbg !15432

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15434 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15436, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15440
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15442, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15440
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15445
  br i1 %2, label %4, label %3, !dbg !15446

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15447
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15447
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15447
  unreachable, !dbg !15447

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15440
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !15436, metadata !DIExpression()), !dbg !15439
  tail call fastcc void @z_sched_lock() #24, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15452
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15452
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15454
  br i1 %5, label %7, label %6, !dbg !15455

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15456
  unreachable, !dbg !15456

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15442
  call void @llvm.dbg.value(metadata i32 %8, metadata !14031, metadata !DIExpression()) #23, !dbg !15444
  call void @llvm.dbg.value(metadata i32 %8, metadata !14025, metadata !DIExpression()) #23, !dbg !15440
  call void @llvm.dbg.value(metadata i32 %8, metadata !15438, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15457
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15459, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15436, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !15436, metadata !DIExpression()), !dbg !15439
  ret void, !dbg !15460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15461 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15462, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %1, metadata !14747, metadata !DIExpression()) #23, !dbg !15467
  %2 = icmp eq i32 %1, 0, !dbg !15468
  br i1 %2, label %4, label %3, !dbg !15469

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 253) #25, !dbg !15470
  unreachable, !dbg !15470

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15472
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15472
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15472
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15472
  %9 = load i8, i8* %8, align 1, !dbg !15472
  %10 = icmp eq i8 %9, 1, !dbg !15472
  br i1 %10, label %11, label %12, !dbg !15475

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.306, i32 0, i32 0), i32 noundef 254) #25, !dbg !15476
  unreachable, !dbg !15476

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15478
  store i8 %13, i8* %8, align 1, !dbg !15478
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15479, !srcloc !15481
  ret void, !dbg !15482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15483 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15485, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15489
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15491, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15489
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15494
  br i1 %2, label %4, label %3, !dbg !15495

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15496
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15496
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15496
  unreachable, !dbg !15496

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15489
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15487, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15488
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15498
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15498
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15498
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15498
  %9 = load i8, i8* %8, align 1, !dbg !15498
  %10 = icmp eq i8 %9, 0, !dbg !15498
  br i1 %10, label %11, label %12, !dbg !15503

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 999) #25, !dbg !15504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 999) #25, !dbg !15504
  unreachable, !dbg !15504

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15506, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %13, metadata !14747, metadata !DIExpression()) #23, !dbg !15511
  %14 = icmp eq i32 %13, 0, !dbg !15512
  br i1 %14, label %16, label %15, !dbg !15513

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15514
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15514
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15514
  unreachable, !dbg !15514

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15516
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15517
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15517
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15517
  %21 = load i8, i8* %20, align 1, !dbg !15518
  %22 = add i8 %21, 1, !dbg !15518
  store i8 %22, i8* %20, align 1, !dbg !15518
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !15520
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15522
  br i1 %23, label %25, label %24, !dbg !15523

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !15524
  unreachable, !dbg !15524

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %26, metadata !14031, metadata !DIExpression()) #23, !dbg !15493
  call void @llvm.dbg.value(metadata i32 %26, metadata !14025, metadata !DIExpression()) #23, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %26, metadata !15487, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !15520
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !15525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15527, !srcloc !14073
  call void @llvm.dbg.value(metadata i32 1, metadata !15485, metadata !DIExpression()), !dbg !15488
  call void @llvm.dbg.value(metadata i32 undef, metadata !15485, metadata !DIExpression()), !dbg !15488
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15528
  ret void, !dbg !15529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15530 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15531
  ret %struct.k_thread* %1, !dbg !15532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15533 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15537, metadata !DIExpression()), !dbg !15542
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15538, metadata !DIExpression()), !dbg !15542
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15539, metadata !DIExpression()), !dbg !15542
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15544
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15540, metadata !DIExpression()), !dbg !15542
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %5, metadata !15541, metadata !DIExpression()), !dbg !15542
  %6 = icmp sgt i32 %5, 0, !dbg !15546
  br i1 %6, label %17, label %7, !dbg !15548

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15549
  br i1 %8, label %17, label %9, !dbg !15551

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15552
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15552
  %12 = load i32, i32* %11, align 8, !dbg !15552
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15554
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15554
  %15 = load i32, i32* %14, align 8, !dbg !15554
  %16 = icmp ult i32 %12, %15, !dbg !15555
  br label %17, !dbg !15556

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15557
  ret i1 %18, !dbg !15558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15559 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15576, metadata !DIExpression()), !dbg !15591
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15577, metadata !DIExpression()), !dbg !15591
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15592
  br i1 %4, label %5, label %6, !dbg !15595

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15596
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15596
  unreachable, !dbg !15596

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15598
  %8 = load i32, i32* %7, align 4, !dbg !15599
  %9 = add nsw i32 %8, 1, !dbg !15599
  store i32 %9, i32* %7, align 4, !dbg !15599
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15600
  store i32 %8, i32* %10, align 8, !dbg !15601
  %11 = load i32, i32* %7, align 4, !dbg !15602
  %12 = icmp eq i32 %11, 0, !dbg !15603
  br i1 %12, label %13, label %35, !dbg !15604

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15605
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15605
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15579, metadata !DIExpression()), !dbg !15605
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15605
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15605
  %17 = load i32, i32* %16, align 4, !dbg !15605
  %18 = shl i32 %17, 2, !dbg !15605
  %19 = alloca i8, i32 %18, align 8, !dbg !15605
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15605
  store i8* %19, i8** %20, align 4, !dbg !15605
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15605
  %22 = alloca i8, i32 %17, align 8, !dbg !15605
  store i8* %22, i8** %21, align 4, !dbg !15605
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15605
  store i32 -1, i32* %23, align 4, !dbg !15605
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15606
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15588, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15578, metadata !DIExpression()), !dbg !15591
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15608
  br i1 %25, label %26, label %27, !dbg !15605

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15608
  br label %35, !dbg !15609

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15578, metadata !DIExpression()), !dbg !15591
  %29 = load i32, i32* %7, align 4, !dbg !15610
  %30 = add nsw i32 %29, 1, !dbg !15610
  store i32 %30, i32* %7, align 4, !dbg !15610
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15612
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15612
  store i32 %29, i32* %32, align 8, !dbg !15613
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15606
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15588, metadata !DIExpression()), !dbg !15607
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15578, metadata !DIExpression()), !dbg !15591
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15608
  br i1 %34, label %26, label %27, !dbg !15605, !llvm.loop !15614

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15616
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15617
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15618
  ret void, !dbg !15619
}

; Function Attrs: optsize
declare !dbg !15620 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15625 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15628 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15630, metadata !DIExpression()), !dbg !15632
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15631, metadata !DIExpression()), !dbg !15632
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15633
  br i1 %3, label %4, label %5, !dbg !15636

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15637
  unreachable, !dbg !15637

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15639
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15640
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15641
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15642
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15642
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15644
  br i1 %10, label %11, label %13, !dbg !15645

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15646
  store i32 0, i32* %12, align 4, !dbg !15648
  br label %13, !dbg !15649

13:                                               ; preds = %11, %5
  ret void, !dbg !15650
}

; Function Attrs: optsize
declare !dbg !15651 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15652 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15656, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15657, metadata !DIExpression()), !dbg !15659
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15660
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15661
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15658, metadata !DIExpression()), !dbg !15659
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15657, metadata !DIExpression()), !dbg !15659
  ret %struct.k_thread* %4, !dbg !15662
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15667, metadata !DIExpression()), !dbg !15668
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15669
  ret %struct.rbnode* %2, !dbg !15670
}

; Function Attrs: optsize
declare !dbg !15671 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15674 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15684, metadata !DIExpression()), !dbg !15688
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15689
  %3 = load i32, i32* %2, align 4, !dbg !15689
  %4 = icmp eq i32 %3, 0, !dbg !15691
  br i1 %4, label %10, label %5, !dbg !15692

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15685, metadata !DIExpression()), !dbg !15688
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15693, !range !7615
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15694
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15686, metadata !DIExpression()), !dbg !15688
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef %7) #24, !dbg !15695
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15687, metadata !DIExpression()), !dbg !15688
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15685, metadata !DIExpression()), !dbg !15688
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15688
  ret %struct.k_thread* %11, !dbg !15696
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15701, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.value(metadata i32 0, metadata !15702, metadata !DIExpression()), !dbg !15704
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.311(%struct._wait_q_t* noundef %0) #24, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15703, metadata !DIExpression()), !dbg !15704
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15706
  br i1 %3, label %8, label %4, !dbg !15707

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15708
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15710
  call void @llvm.dbg.value(metadata i32 1, metadata !15702, metadata !DIExpression()), !dbg !15704
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.311(%struct._wait_q_t* noundef %0) #24, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15703, metadata !DIExpression()), !dbg !15704
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15706
  br i1 %7, label %8, label %4, !dbg !15707, !llvm.loop !15711

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15704
  ret i32 %9, !dbg !15713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.311(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15714 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15716, metadata !DIExpression()), !dbg !15717
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15718
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef %2) #24, !dbg !15719
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15720
  ret %struct.k_thread* %4, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15722 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15731, metadata !DIExpression()), !dbg !15732
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15733
  tail call fastcc void @sys_dlist_init.312(%struct._dnode* noundef nonnull %2) #24, !dbg !15734
  ret void, !dbg !15735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.312(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15736 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15740, metadata !DIExpression()), !dbg !15741
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15742
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15743
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15744
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15745
  ret void, !dbg !15746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15747 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15748
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15749
  ret void, !dbg !15750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15751 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15756, metadata !DIExpression()), !dbg !15757
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15758
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15758
  %4 = load i8, i8* %3, align 2, !dbg !15758
  %5 = sext i8 %4 to i32, !dbg !15759
  ret i32 %5, !dbg !15760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15761 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15765, metadata !DIExpression()), !dbg !15768
  call void @llvm.dbg.value(metadata i32 %1, metadata !15766, metadata !DIExpression()), !dbg !15768
  %3 = add i32 %1, 16, !dbg !15769
  %4 = icmp ult i32 %3, 31, !dbg !15769
  br i1 %4, label %6, label %5, !dbg !15769

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.316, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15773
  unreachable, !dbg !15773

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15775, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %7, metadata !14747, metadata !DIExpression()) #23, !dbg !15780
  %8 = icmp eq i32 %7, 0, !dbg !15781
  br i1 %8, label %10, label %9, !dbg !15782

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15783
  unreachable, !dbg !15783

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15767, metadata !DIExpression()), !dbg !15768
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15785
  ret void, !dbg !15786
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15787 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15788
  br i1 %1, label %8, label %2, !dbg !15789

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15790
  br i1 %3, label %8, label %4, !dbg !15791

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15792
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15793
  %7 = xor i1 %6, true, !dbg !15791
  br label %8, !dbg !15791

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15795 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15796, !range !6778
  %2 = icmp eq i8 %1, 0, !dbg !15796
  ret i1 %2, !dbg !15797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15798 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15801, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %1, metadata !14747, metadata !DIExpression()) #23, !dbg !15806
  %2 = icmp eq i32 %1, 0, !dbg !15807
  br i1 %2, label %4, label %3, !dbg !15808

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15809
  unreachable, !dbg !15809

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15811
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15813, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15811
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15816
  br i1 %6, label %8, label %7, !dbg !15817

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15818
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15818
  unreachable, !dbg !15818

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15811
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15800, metadata !DIExpression()), !dbg !15820
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14211, metadata !DIExpression()) #23, !dbg !15824
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15826
  %11 = load i8, i8* %10, align 1, !dbg !15827
  %12 = and i8 %11, 127, !dbg !15827
  store i8 %12, i8* %10, align 1, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14219, metadata !DIExpression()) #23, !dbg !15828
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15830
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15831
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14228, metadata !DIExpression()) #23, !dbg !15832
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15834
  %15 = load i8, i8* %14, align 1, !dbg !15835
  %16 = or i8 %15, -128, !dbg !15835
  store i8 %16, i8* %14, align 1, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14235, metadata !DIExpression()) #23, !dbg !15836
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14242, metadata !DIExpression()) #23, !dbg !15838
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14248, metadata !DIExpression()) #23, !dbg !15838
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15840
  br i1 %17, label %18, label %19, !dbg !15841

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !15842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 186) #25, !dbg !15842
  unreachable, !dbg !15842

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.277(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15843
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14249, metadata !DIExpression()) #23, !dbg !15838
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15844
  br i1 %21, label %32, label %22, !dbg !15843

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14249, metadata !DIExpression()) #23, !dbg !15838
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15845
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14249, metadata !DIExpression()) #23, !dbg !15838
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15846
  %26 = icmp sgt i32 %25, 0, !dbg !15847
  br i1 %26, label %27, label %29, !dbg !15848

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15849
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15850
  br label %34, !dbg !15851

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15844
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14249, metadata !DIExpression()) #23, !dbg !15838
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15844
  br i1 %31, label %32, label %22, !dbg !15843, !llvm.loop !15852

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15854
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15855
  br label %34, !dbg !15856

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14700, metadata !DIExpression()) #23, !dbg !15858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14704, metadata !DIExpression()) #23, !dbg !15860
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15862
  br i1 %35, label %37, label %36, !dbg !15863

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15864
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15864
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15864
  unreachable, !dbg !15864

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %38, metadata !14031, metadata !DIExpression()) #23, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %38, metadata !14025, metadata !DIExpression()) #23, !dbg !15811
  call void @llvm.dbg.value(metadata i32 %38, metadata !15800, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !15858
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15865
  ret void, !dbg !15866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15867 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15871, metadata !DIExpression()), !dbg !15874
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15875, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %3, metadata !14747, metadata !DIExpression()) #23, !dbg !15880
  %4 = icmp eq i32 %3, 0, !dbg !15881
  br i1 %4, label %6, label %5, !dbg !15882

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15883
  unreachable, !dbg !15883

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15885
  br i1 %7, label %8, label %10, !dbg !15887

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15888
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15890
  br label %15, !dbg !15891

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15872, metadata !DIExpression()), !dbg !15874
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15892
  %12 = sext i32 %11 to i64, !dbg !15892
  call void @llvm.dbg.value(metadata i64 %12, metadata !15872, metadata !DIExpression()), !dbg !15874
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15893
  %14 = trunc i64 %13 to i32, !dbg !15893
  call void @llvm.dbg.value(metadata i32 %14, metadata !15873, metadata !DIExpression()), !dbg !15874
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15874
  ret i32 %16, !dbg !15894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15899, metadata !DIExpression()), !dbg !15900
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15901, !srcloc !15903
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15904
  ret void, !dbg !15905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15906 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15910, metadata !DIExpression()), !dbg !15914
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15915, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %2, metadata !14747, metadata !DIExpression()) #23, !dbg !15920
  %3 = icmp eq i32 %2, 0, !dbg !15921
  br i1 %3, label %5, label %4, !dbg !15922

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15923
  unreachable, !dbg !15923

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15925
  br i1 %6, label %7, label %8, !dbg !15927

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15928
  br label %43, !dbg !15930

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15912, metadata !DIExpression()), !dbg !15914
  %9 = icmp sgt i64 %0, -3, !dbg !15931
  br i1 %9, label %10, label %14, !dbg !15933

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15934
  %12 = trunc i64 %0 to i32, !dbg !15936
  %13 = add i32 %11, %12, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %13, metadata !15911, metadata !DIExpression()), !dbg !15914
  br label %17, !dbg !15937

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15938
  %16 = sub i32 -2, %15, !dbg !15938
  call void @llvm.dbg.value(metadata i32 %16, metadata !15911, metadata !DIExpression()), !dbg !15914
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15940
  call void @llvm.dbg.value(metadata i32 %18, metadata !15911, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !15941
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15943, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15941
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15946
  br i1 %20, label %22, label %21, !dbg !15947

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !15948
  unreachable, !dbg !15948

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !15941
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15913, metadata !DIExpression()), !dbg !15914
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15950
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15951
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15952
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15953
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15954
  tail call fastcc void @z_add_thread_timeout.292(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15954
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15955
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15956
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14700, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14704, metadata !DIExpression()) #23, !dbg !15959
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15961
  br i1 %27, label %29, label %28, !dbg !15962

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15963
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15963
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !15963
  unreachable, !dbg !15963

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %30, metadata !14031, metadata !DIExpression()) #23, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %30, metadata !14025, metadata !DIExpression()) #23, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %30, metadata !15913, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !15957
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15964
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15965
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15965
  br i1 %33, label %34, label %35, !dbg !15968

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.279, i32 0, i32 0)) #25, !dbg !15969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15969
  unreachable, !dbg !15969

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15971
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15972
  %38 = zext i32 %37 to i64, !dbg !15972
  %39 = sub nsw i64 %36, %38, !dbg !15973
  call void @llvm.dbg.value(metadata i64 %39, metadata !15910, metadata !DIExpression()), !dbg !15914
  %40 = icmp sgt i64 %39, 0, !dbg !15974
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15974
  %42 = trunc i64 %41 to i32, !dbg !15974
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15914
  ret i32 %44, !dbg !15975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15976 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15978, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 %0, metadata !14079, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 10000, metadata !14082, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i32 1000, metadata !14083, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i8 1, metadata !14084, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i1 false, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i1 false, metadata !14086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i8 0, metadata !14087, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i1 true, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15980
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !15980
  call void @llvm.dbg.value(metadata i64 %0, metadata !14079, metadata !DIExpression()), !dbg !15980
  %2 = udiv i64 %0, 10, !dbg !15982
  ret i64 %2, !dbg !15986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15987 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15988, !srcloc !15990
  tail call void @z_impl_k_yield() #24, !dbg !15991
  ret void, !dbg !15992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15997, metadata !DIExpression()), !dbg !15999
  %2 = sext i32 %0 to i64, !dbg !16000
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16001
  call void @llvm.dbg.value(metadata i64 %3, metadata !15998, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  %4 = shl i64 %3, 32, !dbg !16002
  %5 = ashr exact i64 %4, 32, !dbg !16002
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %6, metadata !15998, metadata !DIExpression()), !dbg !15999
  %7 = sext i32 %6 to i64, !dbg !16004
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16005
  %9 = trunc i64 %8 to i32, !dbg !16005
  ret i32 %9, !dbg !16006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16007 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16009, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i64 %0, metadata !14079, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14082, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i32 10000, metadata !14083, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i8 1, metadata !14084, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i1 false, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16011
  call void @llvm.dbg.value(metadata i1 true, metadata !14086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16011
  call void @llvm.dbg.value(metadata i8 0, metadata !14087, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16011
  call void @llvm.dbg.value(metadata i1 true, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16011
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !16011
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !16011
  %2 = add i64 %0, 99, !dbg !16013
  call void @llvm.dbg.value(metadata i64 %2, metadata !14079, metadata !DIExpression()), !dbg !16011
  %3 = udiv i64 %2, 100, !dbg !16014
  ret i64 %3, !dbg !16015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16016 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16018, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i64 %0, metadata !14079, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i32 10000, metadata !14082, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14083, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i8 1, metadata !14084, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i1 false, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i1 false, metadata !14086, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i8 0, metadata !14087, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i1 true, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i1 false, metadata !14089, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16020
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !16020
  call void @llvm.dbg.value(metadata i64 0, metadata !14090, metadata !DIExpression()), !dbg !16020
  %2 = mul i64 %0, 100, !dbg !16022
  ret i64 %2, !dbg !16024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16027, metadata !DIExpression()), !dbg !16028
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16029
  br i1 %2, label %14, label %3, !dbg !16031

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16032
  %5 = icmp slt i32 %4, 0, !dbg !16034
  br i1 %5, label %6, label %10, !dbg !16035

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16036
  %8 = load i8, i8* %7, align 1, !dbg !16036
  %9 = icmp eq i8 %8, 16, !dbg !16039
  br i1 %9, label %10, label %14, !dbg !16040

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16041
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16042
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16043, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %11, metadata !14747, metadata !DIExpression()) #23, !dbg !16047
  %12 = icmp eq i32 %11, 0, !dbg !16048
  br i1 %12, label %13, label %14, !dbg !16049

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16050
  br label %14, !dbg !16052

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16056, metadata !DIExpression()), !dbg !16057
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16058
  %3 = load i8, i8* %2, align 1, !dbg !16058
  %4 = and i8 %3, 2, !dbg !16059
  %5 = icmp ne i8 %4, 0, !dbg !16060
  ret i1 %5, !dbg !16061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16062 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16067
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16066, metadata !DIExpression()), !dbg !16068
  ret %struct.k_thread* %1, !dbg !16069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16070 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16071, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %1, metadata !14747, metadata !DIExpression()) #23, !dbg !16074
  %2 = icmp eq i32 %1, 0, !dbg !16075
  br i1 %2, label %3, label %8, !dbg !16076

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16077
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16078
  %6 = icmp ne i32 %5, 0, !dbg !16076
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16082, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !16085
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16087, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !16085
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16090
  br i1 %3, label %5, label %4, !dbg !16091

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16092
  unreachable, !dbg !16092

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16087
  call void @llvm.dbg.value(metadata i32 %6, metadata !14031, metadata !DIExpression()) #23, !dbg !16089
  call void @llvm.dbg.value(metadata i32 %6, metadata !14025, metadata !DIExpression()) #23, !dbg !16085
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16093
  call void @llvm.dbg.value(metadata i32 %6, metadata !16083, metadata !DIExpression()), !dbg !16084
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16094
  %8 = load i8, i8* %7, align 4, !dbg !16094
  %9 = and i8 %8, 1, !dbg !16096
  %10 = icmp eq i8 %9, 0, !dbg !16097
  br i1 %10, label %15, label %11, !dbg !16098

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !16099
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16102
  br i1 %12, label %14, label %13, !dbg !16103

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16104
  unreachable, !dbg !16104

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !16105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16107, !srcloc !14073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.325, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16108
  unreachable, !dbg !16108

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16112
  %17 = load i8, i8* %16, align 1, !dbg !16112
  %18 = and i8 %17, 8, !dbg !16114
  %19 = icmp eq i8 %18, 0, !dbg !16115
  br i1 %19, label %24, label %20, !dbg !16116

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !16117
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16120
  br i1 %21, label %23, label %22, !dbg !16121

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16122
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16122
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16122
  unreachable, !dbg !16122

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !16123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16125, !srcloc !14073
  br label %39, !dbg !16126

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16127
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16128
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16130
  br i1 %26, label %27, label %35, !dbg !16131

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16132, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %28, metadata !14747, metadata !DIExpression()) #23, !dbg !16135
  %29 = icmp eq i32 %28, 0, !dbg !16136
  br i1 %29, label %30, label %35, !dbg !16137

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14700, metadata !DIExpression()) #23, !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14704, metadata !DIExpression()) #23, !dbg !16141
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16143
  br i1 %31, label %33, label %32, !dbg !16144

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !16145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !16145
  unreachable, !dbg !16145

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14695, metadata !DIExpression()) #23, !dbg !16138
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.326, i32 0, i32 0)) #25, !dbg !16147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16147
  unreachable, !dbg !16147

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !16151
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16153
  br i1 %36, label %38, label %37, !dbg !16154

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16155
  unreachable, !dbg !16155

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14053, metadata !DIExpression()) #23, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %6, metadata !14067, metadata !DIExpression()) #23, !dbg !16156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16158, !srcloc !14073
  br label %39, !dbg !16159

39:                                               ; preds = %38, %23
  ret void, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16162, metadata !DIExpression()), !dbg !16163
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16164
  %3 = load i8, i8* %2, align 1, !dbg !16164
  %4 = and i8 %3, 8, !dbg !16166
  %5 = icmp eq i8 %4, 0, !dbg !16167
  br i1 %5, label %6, label %20, !dbg !16168

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16169
  %8 = or i8 %7, 8, !dbg !16169
  store i8 %8, i8* %2, align 1, !dbg !16169
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16171
  br i1 %9, label %10, label %12, !dbg !16173

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14211, metadata !DIExpression()) #23, !dbg !16174
  %11 = and i8 %8, 95, !dbg !16177
  store i8 %11, i8* %2, align 1, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()) #23, !dbg !16178
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16180
  br label %12, !dbg !16181

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16182
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16182
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16184
  br i1 %15, label %17, label %16, !dbg !16185

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16186
  br label %17, !dbg !16188

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16189
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16190
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16191
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16192
  br label %20, !dbg !16193

20:                                               ; preds = %17, %1
  ret void, !dbg !16194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16195 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16199, metadata !DIExpression()), !dbg !16201
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.311(%struct._wait_q_t* noundef %0) #24, !dbg !16202
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16200, metadata !DIExpression()), !dbg !16201
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16203
  br i1 %3, label %10, label %4, !dbg !16204

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16205
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16207
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16208, metadata !DIExpression()), !dbg !16214
  call void @llvm.dbg.value(metadata i32 0, metadata !16213, metadata !DIExpression()), !dbg !16214
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16216
  store i32 0, i32* %7, align 4, !dbg !16217
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16218
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.311(%struct._wait_q_t* noundef %0) #24, !dbg !16202
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16200, metadata !DIExpression()), !dbg !16201
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16203
  br i1 %9, label %10, label %4, !dbg !16204, !llvm.loop !16219

10:                                               ; preds = %4, %1
  ret void, !dbg !16221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16222 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16227, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16226, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !16231
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16233, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16235
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !16231
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16236
  br i1 %4, label %6, label %5, !dbg !16237

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16238
  unreachable, !dbg !16238

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16233
  call void @llvm.dbg.value(metadata i32 %7, metadata !14031, metadata !DIExpression()) #23, !dbg !16235
  call void @llvm.dbg.value(metadata i32 %7, metadata !14025, metadata !DIExpression()) #23, !dbg !16231
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16239
  call void @llvm.dbg.value(metadata i32 %7, metadata !16228, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata i32 0, metadata !16229, metadata !DIExpression()), !dbg !16230
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16240
  %9 = load i8, i8* %8, align 1, !dbg !16240
  %10 = and i8 %9, 8, !dbg !16242
  %11 = icmp eq i8 %10, 0, !dbg !16243
  br i1 %11, label %12, label %35, !dbg !16244

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16227, metadata !DIExpression()), !dbg !16230
  %14 = icmp eq i64 %13, 0, !dbg !16245
  br i1 %14, label %35, label %15, !dbg !16247

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16248
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16250
  br i1 %17, label %35, label %18, !dbg !16251

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16252
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16252
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16253
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16254
  br i1 %22, label %35, label %23, !dbg !16255

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16256, !srcloc !14751
  call void @llvm.dbg.value(metadata i32 %24, metadata !14747, metadata !DIExpression()) #23, !dbg !16262
  %25 = icmp eq i32 %24, 0, !dbg !16263
  br i1 %25, label %27, label %26, !dbg !16264

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.329, i32 0, i32 0)) #25, !dbg !16265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16265
  unreachable, !dbg !16265

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16267
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16268
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16269
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16270
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16271
  call void @llvm.dbg.value(metadata i32 undef, metadata !14695, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14700, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14704, metadata !DIExpression()) #23, !dbg !16274
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16276
  br i1 %31, label %33, label %32, !dbg !16277

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !16278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 225) #25, !dbg !16278
  unreachable, !dbg !16278

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14695, metadata !DIExpression()) #23, !dbg !16272
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 %34, metadata !16229, metadata !DIExpression()), !dbg !16230
  br label %40, !dbg !16280

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16281
  call void @llvm.dbg.value(metadata i32 %36, metadata !16229, metadata !DIExpression()), !dbg !16230
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !16282
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16284
  br i1 %37, label %39, label %38, !dbg !16285

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16286
  unreachable, !dbg !16286

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14053, metadata !DIExpression()) #23, !dbg !16282
  call void @llvm.dbg.value(metadata i32 %7, metadata !14067, metadata !DIExpression()) #23, !dbg !16287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16289, !srcloc !14073
  br label %40, !dbg !16290

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16230
  ret i32 %41, !dbg !16291
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16292 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16296, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 %1, metadata !16297, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i8* %2, metadata !16298, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i8 0, metadata !16300, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 0, metadata !16301, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14019, metadata !DIExpression()) #23, !dbg !16306
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16308, !srcloc !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14032, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !16306
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16311
  br i1 %5, label %7, label %6, !dbg !16312

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !16313
  unreachable, !dbg !16313

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()) #23, !dbg !16306
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !16303, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata i8 poison, metadata !16300, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16301, metadata !DIExpression()), !dbg !16305
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16315
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16299, metadata !DIExpression()), !dbg !16304
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16318
  br i1 %10, label %15, label %11, !dbg !16320

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16321, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i32 %1, metadata !16327, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata i8* %2, metadata !16328, metadata !DIExpression()), !dbg !16329
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16208, metadata !DIExpression()), !dbg !16332
  call void @llvm.dbg.value(metadata i32 %1, metadata !16213, metadata !DIExpression()), !dbg !16332
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16334
  store i32 %1, i32* %12, align 4, !dbg !16335
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16336
  store i8* %2, i8** %13, align 4, !dbg !16337
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16338
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16339
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16340
  call void @llvm.dbg.value(metadata i8 1, metadata !16300, metadata !DIExpression()), !dbg !16304
  br label %15, !dbg !16341

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16300, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14058, metadata !DIExpression()) #23, !dbg !16342
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16344
  br i1 %16, label %18, label %17, !dbg !16345

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.274, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !16346
  unreachable, !dbg !16346

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16304
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16308
  call void @llvm.dbg.value(metadata i32 %20, metadata !14031, metadata !DIExpression()) #23, !dbg !16310
  call void @llvm.dbg.value(metadata i32 %20, metadata !14025, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 %20, metadata !16303, metadata !DIExpression()), !dbg !16305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14053, metadata !DIExpression()) #23, !dbg !16342
  call void @llvm.dbg.value(metadata i32 undef, metadata !14067, metadata !DIExpression()) #23, !dbg !16347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16349, !srcloc !14073
  call void @llvm.dbg.value(metadata i8 poison, metadata !16300, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16301, metadata !DIExpression()), !dbg !16305
  ret i1 %19, !dbg !16350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16351 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16357, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata i64 undef, metadata !16359, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16356, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16358, metadata !DIExpression()), !dbg !16362
  call void @llvm.dbg.value(metadata i8** %4, metadata !16360, metadata !DIExpression()), !dbg !16362
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %6, metadata !16361, metadata !DIExpression()), !dbg !16362
  %7 = icmp eq i8** %4, null, !dbg !16364
  br i1 %7, label %12, label %8, !dbg !16366

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16367
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16369
  %11 = load i8*, i8** %10, align 4, !dbg !16369
  store i8* %11, i8** %4, align 4, !dbg !16370
  br label %12, !dbg !16371

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16373 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16386, metadata !DIExpression()), !dbg !16387
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16388
  tail call fastcc void @z_waitq_init.330(%struct._wait_q_t* noundef %2) #24, !dbg !16389
  ret i32 0, !dbg !16390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.330(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16391 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16396, metadata !DIExpression()), !dbg !16397
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16398
  tail call fastcc void @sys_dlist_init.331(%struct._dnode* noundef %2) #24, !dbg !16399
  ret void, !dbg !16400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.331(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16401 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16406, metadata !DIExpression()), !dbg !16407
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16408
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16409
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16410
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16411
  ret void, !dbg !16412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16413 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16415, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.334, metadata !16503, metadata !DIExpression()) #23, !dbg !16510
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16512, !srcloc !16518
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16519
  call void @llvm.dbg.value(metadata i32 undef, metadata !16516, metadata !DIExpression()) #23, !dbg !16519
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16510
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16520
  br i1 %3, label %5, label %4, !dbg !16523

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16524
  unreachable, !dbg !16524

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16512
  call void @llvm.dbg.value(metadata i32 %6, metadata !16515, metadata !DIExpression()) #23, !dbg !16519
  call void @llvm.dbg.value(metadata i32 %6, metadata !16509, metadata !DIExpression()) #23, !dbg !16510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16526
  call void @llvm.dbg.value(metadata i32 %6, metadata !16416, metadata !DIExpression()), !dbg !16502
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16527
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16528
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16421, metadata !DIExpression()), !dbg !16502
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16529
  br i1 %9, label %13, label %10, !dbg !16531

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16532, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata i32 0, metadata !16537, metadata !DIExpression()), !dbg !16538
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16541
  store i32 0, i32* %11, align 4, !dbg !16542
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16543
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16544
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.334, [1 x i32] %12) #25, !dbg !16544
  br label %17, !dbg !16545

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #23, !dbg !16552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.334, metadata !16551, metadata !DIExpression()) #23, !dbg !16552
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16555
  br i1 %14, label %16, label %15, !dbg !16558

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.340, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 194) #25, !dbg !16559
  unreachable, !dbg !16559

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()) #23, !dbg !16552
  call void @llvm.dbg.value(metadata i32 %6, metadata !16561, metadata !DIExpression()) #23, !dbg !16564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16566, !srcloc !16567
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16569 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16571, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata i32 0, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.334, metadata !16503, metadata !DIExpression()) #23, !dbg !16576
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16578, !srcloc !16518
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16516, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16576
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16581
  br i1 %3, label %5, label %4, !dbg !16582

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16583
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16583
  unreachable, !dbg !16583

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16576
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16584
  call void @llvm.dbg.value(metadata i32 undef, metadata !16573, metadata !DIExpression()), !dbg !16575
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16574, metadata !DIExpression()), !dbg !16575
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16572, metadata !DIExpression()), !dbg !16575
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16586
  br i1 %8, label %16, label %9, !dbg !16587

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16574, metadata !DIExpression()), !dbg !16575
  %12 = add nuw nsw i32 %11, 1, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %12, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16532, metadata !DIExpression()), !dbg !16590
  call void @llvm.dbg.value(metadata i32 0, metadata !16537, metadata !DIExpression()), !dbg !16590
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16592
  store i32 0, i32* %13, align 4, !dbg !16593
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16594
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16585
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16572, metadata !DIExpression()), !dbg !16575
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16586
  br i1 %15, label %16, label %9, !dbg !16587, !llvm.loop !16595

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16575
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %18, metadata !16515, metadata !DIExpression()) #23, !dbg !16580
  call void @llvm.dbg.value(metadata i32 %18, metadata !16509, metadata !DIExpression()) #23, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %18, metadata !16573, metadata !DIExpression()), !dbg !16575
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16597
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.334, [1 x i32] %19) #25, !dbg !16597
  ret i32 %17, !dbg !16598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16599 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16616, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16614, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16615, metadata !DIExpression()), !dbg !16619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.334, metadata !16503, metadata !DIExpression()) #23, !dbg !16620
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16622, !srcloc !16518
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16624
  call void @llvm.dbg.value(metadata i32 undef, metadata !16516, metadata !DIExpression()) #23, !dbg !16624
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16620
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16625
  br i1 %5, label %7, label %6, !dbg !16626

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.336, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.338, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.337, i32 0, i32 0), i32 noundef 148) #25, !dbg !16627
  unreachable, !dbg !16627

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16622
  call void @llvm.dbg.value(metadata i32 %8, metadata !16515, metadata !DIExpression()) #23, !dbg !16624
  call void @llvm.dbg.value(metadata i32 %8, metadata !16509, metadata !DIExpression()) #23, !dbg !16620
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.334) #25, !dbg !16628
  call void @llvm.dbg.value(metadata i32 %8, metadata !16617, metadata !DIExpression()), !dbg !16619
  tail call fastcc void @k_mutex_unlock.343(%struct.k_mutex* noundef %1) #24, !dbg !16629
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16630
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16631
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.334, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %11, metadata !16618, metadata !DIExpression()), !dbg !16619
  tail call fastcc void @k_mutex_lock.344(%struct.k_mutex* noundef %1) #24, !dbg !16632
  ret i32 %11, !dbg !16633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.343(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16634 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16638, metadata !DIExpression()), !dbg !16639
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16640, !srcloc !16642
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16643
  ret void, !dbg !16644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.344(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16645 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16650, metadata !DIExpression()), !dbg !16651
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16649, metadata !DIExpression()), !dbg !16651
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16652, !srcloc !16654
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16655
  ret void, !dbg !16656
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16657 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16659
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16660
  ret void, !dbg !16661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16662 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16672, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16670, metadata !DIExpression()), !dbg !16689
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16671, metadata !DIExpression()), !dbg !16689
  %5 = icmp eq i64 %4, -1, !dbg !16690
  br i1 %5, label %63, label %6, !dbg !16692

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16693
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %7) #24, !dbg !16693
  br i1 %8, label %9, label %10, !dbg !16696

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !16697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.353, i32 0, i32 0)) #25, !dbg !16697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !16697
  unreachable, !dbg !16697

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16699
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16700
  call void @llvm.dbg.value(metadata i32 0, metadata !16673, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !16709
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16711, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !16718
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !16718
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !16709
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16719
  br i1 %13, label %15, label %14, !dbg !16722

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !16723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !16723
  unreachable, !dbg !16723

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16711
  call void @llvm.dbg.value(metadata i32 %16, metadata !16714, metadata !DIExpression()) #23, !dbg !16718
  call void @llvm.dbg.value(metadata i32 %16, metadata !16708, metadata !DIExpression()) #23, !dbg !16709
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16725
  call void @llvm.dbg.value(metadata i32 %16, metadata !16679, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.value(metadata i32 undef, metadata !16673, metadata !DIExpression()), !dbg !16701
  %17 = icmp slt i64 %4, -1, !dbg !16726
  br i1 %17, label %18, label %24, !dbg !16727

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16728
  %20 = add i64 %4, %19, !dbg !16729
  %21 = sub i64 -2, %20, !dbg !16729
  call void @llvm.dbg.value(metadata i64 %21, metadata !16683, metadata !DIExpression()), !dbg !16730
  %22 = icmp sgt i64 %21, 1, !dbg !16731
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16731
  br label %29, !dbg !16732

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16733
  %26 = tail call fastcc i32 @elapsed.357() #24, !dbg !16735
  %27 = sext i32 %26 to i64, !dbg !16735
  %28 = add nsw i64 %25, %27, !dbg !16736
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16737
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16738
  store i64 %30, i64* %31, align 8, !dbg !16739
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16740
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16680, metadata !DIExpression()), !dbg !16742
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16743
  br i1 %33, label %48, label %34, !dbg !16743

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16744
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16680, metadata !DIExpression()), !dbg !16742
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16748
  %38 = load i64, i64* %37, align 8, !dbg !16748
  %39 = icmp slt i64 %35, %38, !dbg !16749
  br i1 %39, label %40, label %44, !dbg !16750

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16748
  %42 = sub nsw i64 %38, %35, !dbg !16751
  store i64 %42, i64* %41, align 8, !dbg !16751
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16753
  tail call fastcc void @sys_dlist_insert.358(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16754
  br label %49, !dbg !16755

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16756
  store i64 %45, i64* %31, align 8, !dbg !16756
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16757
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16680, metadata !DIExpression()), !dbg !16742
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16743
  br i1 %47, label %48, label %34, !dbg !16743, !llvm.loop !16758

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.359(%struct._dnode* noundef nonnull %7) #24, !dbg !16760
  br label %49, !dbg !16763

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16764
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16765
  br i1 %51, label %52, label %59, !dbg !16766

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16767
  call void @llvm.dbg.value(metadata i32 %53, metadata !16686, metadata !DIExpression()), !dbg !16768
  %54 = icmp ne i32 %53, 0, !dbg !16769
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16771
  br i1 %57, label %59, label %58, !dbg !16771

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16772
  br label %59, !dbg !16774

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !16781
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16783
  br i1 %60, label %62, label %61, !dbg !16786

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !16787
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16787
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !16787
  unreachable, !dbg !16787

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16775, metadata !DIExpression()) #23, !dbg !16781
  call void @llvm.dbg.value(metadata i32 %16, metadata !16789, metadata !DIExpression()) #23, !dbg !16792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16794, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 undef, metadata !16673, metadata !DIExpression()), !dbg !16701
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16797 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16803, metadata !DIExpression()), !dbg !16804
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16805
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16805
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16806
  ret i1 %4, !dbg !16807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.357() unnamed_addr #1 !dbg !16808 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16811
  %2 = icmp eq i32 %1, 0, !dbg !16812
  br i1 %2, label %3, label %5, !dbg !16811

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16813
  br label %5, !dbg !16811

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16811
  ret i32 %6, !dbg !16814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16815 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.364() #24, !dbg !16821
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16819, metadata !DIExpression()), !dbg !16822
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16823
  ret %struct._timeout* %2, !dbg !16824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.358(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16825 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16829, metadata !DIExpression()), !dbg !16833
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16830, metadata !DIExpression()), !dbg !16833
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16834
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16834
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16831, metadata !DIExpression()), !dbg !16833
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16835
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16836
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16837
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16838
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16839
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16840
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16841
  ret void, !dbg !16842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16843 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16847, metadata !DIExpression()), !dbg !16849
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16850
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef %2) #24, !dbg !16851
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16848, metadata !DIExpression()), !dbg !16849
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16852
  ret %struct._timeout* %4, !dbg !16853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.359(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16854 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16859, metadata !DIExpression()), !dbg !16862
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16860, metadata !DIExpression()), !dbg !16862
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16863
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16861, metadata !DIExpression()), !dbg !16862
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16864
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16865
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16866
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16867
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16868
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16869
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16870
  ret void, !dbg !16871
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16872 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16877
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16874, metadata !DIExpression()), !dbg !16878
  %2 = tail call fastcc i32 @elapsed.357() #24, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %2, metadata !16875, metadata !DIExpression()), !dbg !16878
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16880
  br i1 %3, label %14, label %4, !dbg !16882

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16883
  %6 = load i64, i64* %5, align 8, !dbg !16883
  %7 = sext i32 %2 to i64, !dbg !16884
  %8 = sub nsw i64 %6, %7, !dbg !16885
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16886
  br i1 %9, label %14, label %10, !dbg !16887

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16888
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16888
  %13 = trunc i64 %12 to i32, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %13, metadata !16876, metadata !DIExpression()), !dbg !16878
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16890
  call void @llvm.dbg.value(metadata i32 %15, metadata !16876, metadata !DIExpression()), !dbg !16878
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16891
  %17 = icmp ne i32 %16, 0, !dbg !16893
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16894
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16894
  call void @llvm.dbg.value(metadata i32 %20, metadata !16876, metadata !DIExpression()), !dbg !16878
  ret i32 %20, !dbg !16895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16896 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16900, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16901, metadata !DIExpression()), !dbg !16902
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16903
  br i1 %2, label %5, label %3, !dbg !16904

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef nonnull %0) #24, !dbg !16905
  br label %5, !dbg !16904

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16904
  ret %struct._dnode* %6, !dbg !16906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16907 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16909, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16910, metadata !DIExpression()), !dbg !16911
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16912
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16913
  br i1 %3, label %7, label %4, !dbg !16914

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16915
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16915
  br label %7, !dbg !16914

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16914
  ret %struct._dnode* %8, !dbg !16916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.364() unnamed_addr #8 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16921, metadata !DIExpression()), !dbg !16922
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.365() #24, !dbg !16923
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16923
  ret %struct._dnode* %3, !dbg !16924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.365() unnamed_addr #8 !dbg !16925 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16929, metadata !DIExpression()), !dbg !16930
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16931
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16932
  ret i1 %2, !dbg !16933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16934 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16938, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 -22, metadata !16939, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 0, metadata !16940, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !16945
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16947, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !16945
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16950
  br i1 %3, label %5, label %4, !dbg !16951

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !16952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !16952
  unreachable, !dbg !16952

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !16945
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16942, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i32 -22, metadata !16939, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 undef, metadata !16940, metadata !DIExpression()), !dbg !16944
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16939, metadata !DIExpression()), !dbg !16943
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %6) #24, !dbg !16954
  br i1 %7, label %8, label %9, !dbg !16958

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16959
  call void @llvm.dbg.value(metadata i32 0, metadata !16939, metadata !DIExpression()), !dbg !16943
  br label %9, !dbg !16961

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16943
  call void @llvm.dbg.value(metadata i32 %10, metadata !16939, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !16962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !16962
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16964
  br i1 %11, label %13, label %12, !dbg !16965

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !16966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !16966
  unreachable, !dbg !16966

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16947
  call void @llvm.dbg.value(metadata i32 %14, metadata !16714, metadata !DIExpression()) #23, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %14, metadata !16708, metadata !DIExpression()) #23, !dbg !16945
  call void @llvm.dbg.value(metadata i32 %14, metadata !16942, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !16967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16969, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 %10, metadata !16939, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 undef, metadata !16940, metadata !DIExpression()), !dbg !16944
  ret i32 %10, !dbg !16970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16971 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16973, metadata !DIExpression()), !dbg !16974
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16975
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16977
  br i1 %3, label %10, label %4, !dbg !16978

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16979
  %6 = load i64, i64* %5, align 8, !dbg !16979
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16981
  %8 = load i64, i64* %7, align 8, !dbg !16982
  %9 = add nsw i64 %8, %6, !dbg !16982
  store i64 %9, i64* %7, align 8, !dbg !16982
  br label %10, !dbg !16983

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16984
  tail call fastcc void @sys_dlist_remove.368(%struct._dnode* noundef %11) #24, !dbg !16985
  ret void, !dbg !16986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.368(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16987 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16991, metadata !DIExpression()), !dbg !16994
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16995
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16995
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16992, metadata !DIExpression()), !dbg !16994
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16996
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16996
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16993, metadata !DIExpression()), !dbg !16994
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16997
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16998
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16999
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17000
  tail call fastcc void @sys_dnode_init.369(%struct._dnode* noundef %0) #24, !dbg !17001
  ret void, !dbg !17002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.369(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17005, metadata !DIExpression()), !dbg !17006
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17007
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17009
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17010
  ret void, !dbg !17011
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17012 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17018, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i64 0, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 0, metadata !17020, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17025
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17027, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17025
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17030
  br i1 %3, label %5, label %4, !dbg !17031

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17032
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17032
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17032
  unreachable, !dbg !17032

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17025
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17033
  call void @llvm.dbg.value(metadata i32 undef, metadata !17022, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata i64 0, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !17020, metadata !DIExpression()), !dbg !17024
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17034
  call void @llvm.dbg.value(metadata i64 %6, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17037
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17039
  br i1 %7, label %9, label %8, !dbg !17040

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17041
  unreachable, !dbg !17041

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17027
  call void @llvm.dbg.value(metadata i32 %10, metadata !16714, metadata !DIExpression()) #23, !dbg !17029
  call void @llvm.dbg.value(metadata i32 %10, metadata !16708, metadata !DIExpression()) #23, !dbg !17025
  call void @llvm.dbg.value(metadata i32 %10, metadata !17022, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17037
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !17042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17044, !srcloc !16795
  call void @llvm.dbg.value(metadata i64 %6, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !17020, metadata !DIExpression()), !dbg !17024
  ret i64 %6, !dbg !17045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17046 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17048, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.value(metadata i64 0, metadata !17049, metadata !DIExpression()), !dbg !17052
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* noundef %0) #24, !dbg !17053
  br i1 %2, label %21, label %3, !dbg !17055

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17056
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 0, metadata !17049, metadata !DIExpression()), !dbg !17052
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17058
  br i1 %5, label %16, label %6, !dbg !17060

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 %8, metadata !17049, metadata !DIExpression()), !dbg !17052
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17061
  %10 = load i64, i64* %9, align 8, !dbg !17061
  %11 = add nsw i64 %10, %8, !dbg !17063
  call void @llvm.dbg.value(metadata i64 %11, metadata !17049, metadata !DIExpression()), !dbg !17052
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17064
  br i1 %12, label %16, label %13, !dbg !17066

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17067
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17050, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i64 %11, metadata !17049, metadata !DIExpression()), !dbg !17052
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17058
  br i1 %15, label %16, label %6, !dbg !17060, !llvm.loop !17068

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17052
  call void @llvm.dbg.value(metadata i64 %17, metadata !17049, metadata !DIExpression()), !dbg !17052
  %18 = tail call fastcc i32 @elapsed.357() #24, !dbg !17070
  %19 = sext i32 %18 to i64, !dbg !17070
  %20 = sub nsw i64 %17, %19, !dbg !17071
  br label %21, !dbg !17072

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17052
  ret i64 %22, !dbg !17073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17074 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17078, metadata !DIExpression()), !dbg !17079
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17080
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %2) #24, !dbg !17081
  %4 = xor i1 %3, true, !dbg !17082
  ret i1 %4, !dbg !17083
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17084 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17086, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 0, metadata !17088, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17093
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17095, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17093
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17098
  br i1 %3, label %5, label %4, !dbg !17099

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17100
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17100
  unreachable, !dbg !17100

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17093
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17101
  call void @llvm.dbg.value(metadata i32 undef, metadata !17090, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata i64 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17102
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17105
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17106
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17108
  br i1 %8, label %10, label %9, !dbg !17109

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17110
  unreachable, !dbg !17110

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17095
  call void @llvm.dbg.value(metadata i32 %11, metadata !16714, metadata !DIExpression()) #23, !dbg !17097
  call void @llvm.dbg.value(metadata i32 %11, metadata !16708, metadata !DIExpression()) #23, !dbg !17093
  call void @llvm.dbg.value(metadata i32 %11, metadata !17090, metadata !DIExpression()), !dbg !17092
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17091
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17106
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !17111
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17113, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()), !dbg !17092
  %12 = add i64 %7, %6, !dbg !17114
  ret i64 %12, !dbg !17115
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17116 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 0, metadata !17119, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17124
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17126, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17124
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17129
  br i1 %2, label %4, label %3, !dbg !17130

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17131
  unreachable, !dbg !17131

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17124
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17121, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata i32 -1, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17119, metadata !DIExpression()), !dbg !17123
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17133
  call void @llvm.dbg.value(metadata i32 %5, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17136
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17136
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17138
  br i1 %6, label %8, label %7, !dbg !17139

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17140
  unreachable, !dbg !17140

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17126
  call void @llvm.dbg.value(metadata i32 %9, metadata !16714, metadata !DIExpression()) #23, !dbg !17128
  call void @llvm.dbg.value(metadata i32 %9, metadata !16708, metadata !DIExpression()) #23, !dbg !17124
  call void @llvm.dbg.value(metadata i32 %9, metadata !17121, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17136
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !17141
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17143, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 %5, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !17119, metadata !DIExpression()), !dbg !17123
  ret i32 %5, !dbg !17144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17147, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i1 %1, metadata !17148, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17157
  call void @llvm.dbg.value(metadata i32 0, metadata !17149, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17159
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17161, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17159
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17164
  br i1 %4, label %6, label %5, !dbg !17165

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17166
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17166
  unreachable, !dbg !17166

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17159
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17167
  call void @llvm.dbg.value(metadata i32 undef, metadata !17151, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17158
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17168
  call void @llvm.dbg.value(metadata i32 %7, metadata !17152, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.value(metadata i1 undef, metadata !17155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17169
  %8 = icmp slt i32 %7, 2, !dbg !17170
  call void @llvm.dbg.value(metadata i1 %8, metadata !17156, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17169
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17171
  call void @llvm.dbg.value(metadata i1 %9, metadata !17155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17169
  br i1 %10, label %14, label %11, !dbg !17171

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17173
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17173
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17175
  br label %14, !dbg !17176

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17177
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17179
  br i1 %15, label %17, label %16, !dbg !17180

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17181
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17181
  unreachable, !dbg !17181

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17161
  call void @llvm.dbg.value(metadata i32 %18, metadata !16714, metadata !DIExpression()) #23, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %18, metadata !16708, metadata !DIExpression()) #23, !dbg !17159
  call void @llvm.dbg.value(metadata i32 %18, metadata !17151, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17177
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !17182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17184, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 1, metadata !17149, metadata !DIExpression()), !dbg !17158
  call void @llvm.dbg.value(metadata i32 undef, metadata !17149, metadata !DIExpression()), !dbg !17158
  ret void, !dbg !17185
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17190, metadata !DIExpression()), !dbg !17195
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17197
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17199, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17197
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17202
  br i1 %3, label %5, label %4, !dbg !17203

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17204
  unreachable, !dbg !17204

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17201
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17197
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17205
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17206
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17207
  br i1 %7, label %37, label %8, !dbg !17208

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17195
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17209
  %14 = load i64, i64* %13, align 8, !dbg !17209
  %15 = sext i32 %11 to i64, !dbg !17210
  %16 = icmp sgt i64 %14, %15, !dbg !17211
  br i1 %16, label %35, label %17, !dbg !17212

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17192, metadata !DIExpression()), !dbg !17213
  %18 = trunc i64 %14 to i32, !dbg !17214
  call void @llvm.dbg.value(metadata i32 %18, metadata !17194, metadata !DIExpression()), !dbg !17213
  %19 = sext i32 %18 to i64, !dbg !17215
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17216
  %21 = add i64 %20, %19, !dbg !17216
  store i64 %21, i64* @curr_tick, align 8, !dbg !17216
  store i64 0, i64* %13, align 8, !dbg !17217
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17218
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17219
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17221
  br i1 %22, label %24, label %23, !dbg !17222

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17223
  unreachable, !dbg !17223

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16775, metadata !DIExpression()) #23, !dbg !17219
  call void @llvm.dbg.value(metadata i32 %12, metadata !16789, metadata !DIExpression()) #23, !dbg !17224
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17226, !srcloc !16795
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17227
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17227
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17229
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17231, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17229
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17234
  br i1 %28, label %30, label %29, !dbg !17235

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17236
  unreachable, !dbg !17236

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17233
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17229
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17237
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17238
  %32 = sub nsw i32 %31, %18, !dbg !17238
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17195
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()), !dbg !17195
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17206
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17207
  br i1 %34, label %37, label %8, !dbg !17208, !llvm.loop !17239

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17241
  store i64 %36, i64* %13, align 8, !dbg !17241
  br label %41, !dbg !17244

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17195
  %40 = sext i32 %39 to i64, !dbg !17245
  br label %41, !dbg !17245

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17245
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17246
  %45 = add i64 %44, %42, !dbg !17246
  store i64 %45, i64* @curr_tick, align 8, !dbg !17246
  store i32 0, i32* @announce_remaining, align 4, !dbg !17247
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17248
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17250
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17252
  br i1 %47, label %49, label %48, !dbg !17253

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17254
  unreachable, !dbg !17254

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17195
  call void @llvm.dbg.value(metadata i32 %50, metadata !16775, metadata !DIExpression()) #23, !dbg !17250
  call void @llvm.dbg.value(metadata i32 %50, metadata !16789, metadata !DIExpression()) #23, !dbg !17255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17257, !srcloc !16795
  ret void, !dbg !17258
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17259 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 0, metadata !17264, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16702, metadata !DIExpression()) #23, !dbg !17269
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17271, !srcloc !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16715, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17269
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17274
  br i1 %2, label %4, label %3, !dbg !17275

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17276
  unreachable, !dbg !17276

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16708, metadata !DIExpression()) #23, !dbg !17269
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17266, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata i64 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !17264, metadata !DIExpression()), !dbg !17268
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17278
  %6 = tail call fastcc i32 @elapsed.357() #24, !dbg !17281
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17263, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16780, metadata !DIExpression()) #23, !dbg !17282
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17284
  br i1 %7, label %9, label %8, !dbg !17285

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17286
  unreachable, !dbg !17286

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17271
  call void @llvm.dbg.value(metadata i32 %10, metadata !16714, metadata !DIExpression()) #23, !dbg !17273
  call void @llvm.dbg.value(metadata i32 %10, metadata !16708, metadata !DIExpression()) #23, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %10, metadata !17266, metadata !DIExpression()), !dbg !17268
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17263, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17267
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17263, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16775, metadata !DIExpression()) #23, !dbg !17282
  call void @llvm.dbg.value(metadata i32 undef, metadata !16789, metadata !DIExpression()) #23, !dbg !17287
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17289, !srcloc !16795
  call void @llvm.dbg.value(metadata i32 undef, metadata !17264, metadata !DIExpression()), !dbg !17268
  %11 = sext i32 %6 to i64, !dbg !17281
  %12 = add i64 %5, %11, !dbg !17290
  ret i64 %12, !dbg !17291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17292 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17293
  %2 = trunc i64 %1 to i32, !dbg !17294
  ret i32 %2, !dbg !17295
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17296 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17297
  ret i64 %1, !dbg !17298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17301, metadata !DIExpression()), !dbg !17308
  %2 = icmp eq i32 %0, 0, !dbg !17309
  br i1 %2, label %10, label %3, !dbg !17311

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %4, metadata !17302, metadata !DIExpression()), !dbg !17308
  %5 = mul i32 %0, 84, !dbg !17313
  call void @llvm.dbg.value(metadata i32 %5, metadata !17303, metadata !DIExpression()), !dbg !17308
  br label %6, !dbg !17314

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17315
  call void @llvm.dbg.value(metadata i32 %7, metadata !17304, metadata !DIExpression()), !dbg !17316
  %8 = sub i32 %7, %4, !dbg !17317
  %9 = icmp ult i32 %8, %5, !dbg !17319
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17321 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17322
  ret i32 %1, !dbg !17323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17324 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17326
  ret i32 %1, !dbg !17327
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17328 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17332, metadata !DIExpression()), !dbg !17334
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17335

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17336
  br label %14, !dbg !17340

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17333, metadata !DIExpression()), !dbg !17334
  %6 = icmp slt i64 %2, -1, !dbg !17341
  br i1 %6, label %7, label %9, !dbg !17344

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17345
  br label %14, !dbg !17346

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17348
  %11 = icmp ugt i64 %2, 1, !dbg !17349
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17349
  %13 = add nsw i64 %10, %12, !dbg !17350
  br label %14, !dbg !17351

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17352
  ret i64 %15, !dbg !17353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17354 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.379, i32 0, i32 0)) #25, !dbg !17356
  ret void, !dbg !17357
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!794, !2, !2505, !27, !271, !297, !2507, !2509, !2543, !2545, !307, !358, !2547, !2550, !2561, !2607, !2609, !2637, !2665, !2708, !2780, !2825, !387, !530, !2853, !566, !576, !601, !824, !2858, !960, !1026, !1334, !1558, !2896, !1671, !1761, !2898, !2983, !3047, !1812, !3050, !1819, !2192, !3068, !2212, !2323, !2441, !3070, !2466, !3073}
!llvm.ident = !{!3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075, !3075}
!llvm.module.flags = !{!3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 372, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !180, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !180, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!389 = !{!234, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !158, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !158, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !158, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !170, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !175)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !158, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !158, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !158, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !158, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !158, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !158, line: 96, baseType: !190, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !158, line: 100, baseType: !194, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !158, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !158, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !211, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !158, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !158, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !158, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !158, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !243, line: 57, baseType: !246, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !253, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !158, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !211, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !180)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !234)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !180, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!532 = !{!533, !107, !109, !550, !180}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !175)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !705, line: 72, type: !789, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !691, globals: !702, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!663 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!664 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!665 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!666 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!667 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!668 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!669 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!670 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!671 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!672 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!673 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!674 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!675 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!676 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!677 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!678 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!679 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!680 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!681 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!682 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!683 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!684 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!685 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!686 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!687 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!688 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!689 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!690 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!691 = !{!234, !109, !107, !692}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 364, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 356, size: 192, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !694, file: !312, line: 358, baseType: !316, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !694, file: !312, line: 359, baseType: !316, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !694, file: !312, line: 360, baseType: !316, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !694, file: !312, line: 361, baseType: !316, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !694, file: !312, line: 362, baseType: !316, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !694, file: !312, line: 363, baseType: !316, size: 32, offset: 160)
!702 = !{!703, !709, !725, !736, !753, !599, !755, !769, !771, !773, !775, !777, !779, !781, !783, !785, !787}
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !601, file: !705, line: 424, type: !706, isLocal: false, isDefinition: true, align: 16)
!705 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 4)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !601, file: !705, line: 424, type: !711, isLocal: false, isDefinition: true, align: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !713)
!713 = !{!714, !715, !716, !717, !723, !724}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !712, file: !336, line: 380, baseType: !279, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !712, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !712, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !712, file: !336, line: 386, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !720)
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !719, file: !336, line: 359, baseType: !180, size: 8)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !719, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !712, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !712, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !601, file: !705, line: 424, type: !727, isLocal: true, isDefinition: true, align: 32)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !729)
!729 = !{!730, !735}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !728, file: !327, line: 60, baseType: !731, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DISubroutineType(types: !733)
!733 = !{!109, !734}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !728, file: !327, line: 65, baseType: !734, size: 32, offset: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !705, line: 423, type: !738, isLocal: true, isDefinition: true)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !705, line: 107, size: 1472, elements: !739)
!739 = !{!740}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !738, file: !705, line: 109, baseType: !741, size: 1472)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 1472, elements: !751)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !705, line: 101, size: 64, elements: !743)
!743 = !{!744, !750}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !742, file: !705, line: 102, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !746, line: 63, baseType: !747)
!746 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !109, !107}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !742, file: !705, line: 103, baseType: !107, size: 32, offset: 32)
!751 = !{!752}
!752 = !DISubrange(count: 23)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !601, file: !705, line: 424, type: !719, isLocal: true, isDefinition: true, align: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !757, file: !705, line: 493, type: !762, isLocal: true, isDefinition: true, align: 32)
!757 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !705, file: !705, line: 460, type: !758, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !760)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !734}
!760 = !{!761}
!761 = !DILocalVariable(name: "dev", arg: 1, scope: !757, file: !705, line: 460, type: !734)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !763)
!763 = !{!764, !766, !767, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !762, file: !10, line: 55, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !762, file: !10, line: 57, baseType: !765, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !762, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !762, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !757, file: !705, line: 497, type: !762, isLocal: true, isDefinition: true, align: 32)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !757, file: !705, line: 507, type: !762, isLocal: true, isDefinition: true, align: 32)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !757, file: !705, line: 512, type: !762, isLocal: true, isDefinition: true, align: 32)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !757, file: !705, line: 516, type: !762, isLocal: true, isDefinition: true, align: 32)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !757, file: !705, line: 523, type: !762, isLocal: true, isDefinition: true, align: 32)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !757, file: !705, line: 527, type: !762, isLocal: true, isDefinition: true, align: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !757, file: !705, line: 581, type: !762, isLocal: true, isDefinition: true, align: 32)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !757, file: !705, line: 586, type: !762, isLocal: true, isDefinition: true, align: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !757, file: !705, line: 591, type: !762, isLocal: true, isDefinition: true, align: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !757, file: !705, line: 595, type: !762, isLocal: true, isDefinition: true, align: 32)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !790, size: 736, elements: !751)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 154, baseType: !604)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !794, file: !799, line: 22, type: !821, isLocal: false, isDefinition: true, align: 16)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !796, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!796 = !{!797, !792, !803, !805, !807, !809, !811, !813, !815, !817, !819}
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !794, file: !799, line: 17, type: !800, isLocal: false, isDefinition: true, align: 16)
!799 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 192, elements: !801)
!801 = !{!802}
!802 = !DISubrange(count: 12)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !794, file: !799, line: 29, type: !706, isLocal: false, isDefinition: true, align: 16)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !794, file: !799, line: 36, type: !706, isLocal: false, isDefinition: true, align: 16)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !794, file: !799, line: 43, type: !706, isLocal: false, isDefinition: true, align: 16)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !794, file: !799, line: 50, type: !706, isLocal: false, isDefinition: true, align: 16)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !794, file: !799, line: 57, type: !706, isLocal: false, isDefinition: true, align: 16)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !794, file: !799, line: 64, type: !706, isLocal: false, isDefinition: true, align: 16)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !794, file: !799, line: 71, type: !706, isLocal: false, isDefinition: true, align: 16)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !794, file: !799, line: 78, type: !706, isLocal: false, isDefinition: true, align: 16)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !794, file: !799, line: 85, type: !706, isLocal: false, isDefinition: true, align: 16)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !261)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !824, file: !886, line: 398, type: !919, isLocal: true, isDefinition: true)
!824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !826, retainedTypes: !839, globals: !883, splitDebugInlining: false, nameTableKind: None)
!825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!826 = !{!827, !30, !832}
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 197, baseType: !32, size: 32, elements: !829)
!828 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !{!830, !831}
!830 = !DIEnumerator(name: "SUCCESS", value: 0)
!831 = !DIEnumerator(name: "ERROR", value: 1)
!832 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !833, line: 44, baseType: !32, size: 32, elements: !834)
!833 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !836, !837, !838}
!835 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!836 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!837 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!838 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!839 = !{!107, !109, !110, !840, !876, !882}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !843)
!843 = !{!844, !845, !846, !847, !848, !849, !850, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !842, file: !312, line: 479, baseType: !316, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !842, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !842, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !842, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !842, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !842, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !842, file: !312, line: 485, baseType: !851, size: 64, offset: 192)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !175)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !842, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !842, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !842, file: !312, line: 488, baseType: !851, size: 64, offset: 320)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !842, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !842, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !842, file: !312, line: 491, baseType: !851, size: 64, offset: 448)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !842, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !842, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !842, file: !312, line: 494, baseType: !851, size: 64, offset: 576)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !842, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !842, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !842, file: !312, line: 497, baseType: !851, size: 64, offset: 704)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !842, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !842, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !842, file: !312, line: 500, baseType: !851, size: 64, offset: 832)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !842, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !842, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !842, file: !312, line: 503, baseType: !851, size: 64, offset: 960)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !842, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !842, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !842, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !842, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !842, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !842, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !879)
!878 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !877, file: !878, line: 344, baseType: !110, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !877, file: !878, line: 345, baseType: !110, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!883 = !{!884, !890, !906, !917, !822}
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !824, file: !886, line: 752, type: !887, isLocal: false, isDefinition: true, align: 16)
!886 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 848, elements: !888)
!888 = !{!889}
!889 = !DISubrange(count: 53)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !824, file: !886, line: 752, type: !892, isLocal: false, isDefinition: true, align: 32)
!892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !893)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !894)
!894 = !{!895, !896, !897, !898, !904, !905}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !893, file: !336, line: 380, baseType: !279, size: 32)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !893, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !893, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !893, file: !336, line: 386, baseType: !899, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !901)
!901 = !{!902, !903}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !900, file: !336, line: 359, baseType: !180, size: 8)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !900, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !893, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !893, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !824, file: !886, line: 752, type: !908, isLocal: true, isDefinition: true, align: 32)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !910)
!910 = !{!911, !916}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !909, file: !327, line: 60, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!109, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !909, file: !327, line: 65, baseType: !915, size: 32, offset: 32)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !824, file: !886, line: 752, type: !900, isLocal: true, isDefinition: true, align: 8)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !920)
!920 = !{!921, !927, !928, !937, !942, !947, !953}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !919, file: !833, line: 101, baseType: !922, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !923)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!109, !915, !926}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !833, line: 56, baseType: !107)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !919, file: !833, line: 102, baseType: !922, size: 32, offset: 32)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !919, file: !833, line: 103, baseType: !929, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !930)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!109, !915, !926, !933, !107}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{null, !915, !926, !107}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !919, file: !833, line: 104, baseType: !938, size: 32, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DISubroutineType(types: !941)
!941 = !{!109, !915, !926, !882}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !919, file: !833, line: 105, baseType: !943, size: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !944)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!832, !915, !926}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !919, file: !833, line: 106, baseType: !948, size: 32, offset: 160)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!109, !915, !926, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !833, line: 64, baseType: !107)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !919, file: !833, line: 107, baseType: !954, size: 32, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!109, !915, !926, !107}
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !960, file: !1017, line: 603, type: !1019, isLocal: true, isDefinition: true, align: 32)
!960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !962, globals: !1014, splitDebugInlining: false, nameTableKind: None)
!961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!962 = !{!107, !109, !963}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !966, line: 336, size: 160, elements: !967)
!966 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!967 = !{!968, !988, !992, !996, !1009}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !965, file: !966, line: 365, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!109, !972, !987}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !975)
!975 = !{!976, !977, !978, !979, !985, !986}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !974, file: !336, line: 380, baseType: !279, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !974, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !974, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !974, file: !336, line: 386, baseType: !980, size: 32, offset: 96)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !981, file: !336, line: 359, baseType: !180, size: 8)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !981, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !974, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !974, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !965, file: !966, line: 366, baseType: !989, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{null, !972, !181}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !965, file: !966, line: 374, baseType: !993, size: 32, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{!109, !972}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !965, file: !966, line: 377, baseType: !997, size: 32, offset: 96)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!109, !972, !1000}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !966, line: 122, size: 64, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1002, file: !966, line: 123, baseType: !110, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1002, file: !966, line: 124, baseType: !180, size: 8, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1002, file: !966, line: 125, baseType: !180, size: 8, offset: 40)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1002, file: !966, line: 126, baseType: !180, size: 8, offset: 48)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1002, file: !966, line: 127, baseType: !180, size: 8, offset: 56)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !965, file: !966, line: 379, baseType: !1010, size: 32, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!109, !972, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1014 = !{!958, !1015}
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !960, file: !1017, line: 38, type: !1018, isLocal: true, isDefinition: true)
!1017 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1020, file: !327, line: 60, baseType: !993, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1020, file: !327, line: 65, baseType: !972, size: 32, offset: 32)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1026, file: !1197, line: 762, type: !1309, isLocal: true, isDefinition: true)
!1026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1027, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1028, retainedTypes: !1046, globals: !1194, splitDebugInlining: false, nameTableKind: None)
!1027 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1028 = !{!30, !1029, !1035, !1040, !832}
!1029 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1030, line: 506, baseType: !32, size: 32, elements: !1031)
!1030 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1031 = !{!1032, !1033, !1034}
!1032 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1033 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1034 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1035 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1030, line: 512, baseType: !32, size: 32, elements: !1036)
!1036 = !{!1037, !1038, !1039}
!1037 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1038 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1039 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !746, line: 43, baseType: !32, size: 32, elements: !1041)
!1041 = !{!1042, !1043, !1044, !1045}
!1042 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1043 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1044 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1045 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1046 = !{!107, !109, !1047, !1117, !1122, !1082, !1035, !1029, !1127, !1128, !110, !1142, !1097, !285, !1154, !1155}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1030, line: 523, size: 288, elements: !1050)
!1050 = !{!1051, !1072, !1078, !1083, !1087, !1088, !1089, !1093, !1113}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1049, file: !1030, line: 524, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!109, !1055, !1070, !1071}
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1068, !1069}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1057, file: !336, line: 380, baseType: !279, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1057, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1057, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1057, file: !336, line: 386, baseType: !1063, size: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1065)
!1065 = !{!1066, !1067}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1064, file: !336, line: 359, baseType: !180, size: 8)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1064, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1057, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1057, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1030, line: 237, baseType: !180)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1030, line: 257, baseType: !110)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1049, file: !1030, line: 530, baseType: !1073, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!109, !1055, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1030, line: 229, baseType: !110)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1049, file: !1030, line: 532, baseType: !1079, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!109, !1055, !1082, !1077}
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1030, line: 216, baseType: !110)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1049, file: !1030, line: 535, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!109, !1055, !1082}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1049, file: !1030, line: 537, baseType: !1084, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1049, file: !1030, line: 539, baseType: !1084, size: 32, offset: 160)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1049, file: !1030, line: 541, baseType: !1090, size: 32, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!109, !1055, !1070, !1029, !1035}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1049, file: !1030, line: 544, baseType: !1094, size: 32, offset: 224)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!109, !1055, !1097, !347}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1030, line: 478, size: 96, elements: !1099)
!1099 = !{!1100, !1107, !1112}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1098, file: !1030, line: 482, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1102, line: 33, baseType: !1103)
!1102 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1102, line: 29, size: 32, elements: !1104)
!1104 = !{!1105}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1103, file: !1102, line: 30, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1098, file: !1030, line: 485, baseType: !1108, size: 32, offset: 32)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1030, line: 464, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1055, !1097, !1082}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1098, file: !1030, line: 493, baseType: !1082, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1049, file: !1030, line: 547, baseType: !1114, size: 32, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!110, !1055}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1030, line: 428, size: 32, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1119, file: !1030, line: 434, baseType: !1082, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1030, line: 441, size: 32, elements: !1125)
!1125 = !{!1126}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1124, file: !1030, line: 447, baseType: !1082, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 396, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 385, size: 320, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1130, file: !312, line: 387, baseType: !316, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1130, file: !312, line: 388, baseType: !316, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1130, file: !312, line: 389, baseType: !316, size: 32, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1130, file: !312, line: 390, baseType: !316, size: 32, offset: 96)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1130, file: !312, line: 391, baseType: !316, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1130, file: !312, line: 392, baseType: !316, size: 32, offset: 160)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1130, file: !312, line: 393, baseType: !316, size: 32, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1130, file: !312, line: 394, baseType: !316, size: 32, offset: 224)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1130, file: !312, line: 395, baseType: !1141, size: 64, offset: 256)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 411, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 402, size: 320, elements: !1145)
!1145 = !{!1146, !1147, !1148, !1150, !1151, !1152, !1153}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1144, file: !312, line: 404, baseType: !316, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1144, file: !312, line: 405, baseType: !316, size: 32, offset: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1144, file: !312, line: 406, baseType: !1149, size: 128, offset: 64)
!1149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !707)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1144, file: !312, line: 407, baseType: !110, size: 32, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1144, file: !312, line: 408, baseType: !316, size: 32, offset: 224)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1144, file: !312, line: 409, baseType: !316, size: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1144, file: !312, line: 410, baseType: !316, size: 32, offset: 288)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !1158)
!1158 = !{!1159, !1164, !1165, !1174, !1179, !1184, !1189}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1157, file: !833, line: 101, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!109, !1055, !926}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1157, file: !833, line: 102, baseType: !1160, size: 32, offset: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1157, file: !833, line: 103, baseType: !1166, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!109, !1055, !926, !1170, !107}
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !1055, !926, !107}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1157, file: !833, line: 104, baseType: !1175, size: 32, offset: 96)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !1176)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!109, !1055, !926, !882}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1157, file: !833, line: 105, baseType: !1180, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!832, !1055, !926}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1157, file: !833, line: 106, baseType: !1185, size: 32, offset: 160)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!109, !1055, !926, !952}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1157, file: !833, line: 107, baseType: !1190, size: 32, offset: 192)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!109, !1055, !926, !107}
!1194 = !{!1195, !1201, !1203, !1213, !1215, !1217, !1219, !1224, !1226, !1228, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261, !1275, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1024, !1305, !1307, !1320, !1322, !1324, !1326, !1328, !1330}
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1197 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 112, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 7)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1207)
!1207 = !{!1208, !1212}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1206, file: !327, line: 60, baseType: !1209, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!109, !1055}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1206, file: !327, line: 65, baseType: !1055, size: 32, offset: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1198, isLocal: false, isDefinition: true, align: 16)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1221, isLocal: false, isDefinition: true, align: 16)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !1222)
!1222 = !{!1223}
!1223 = !DISubrange(count: 6)
!1224 = !DIGlobalVariableExpression(var: !1225, expr: !DIExpression())
!1225 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1231)
!1231 = !{!1232}
!1232 = !DISubrange(count: 5)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1230, isLocal: false, isDefinition: true, align: 16)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1056, isLocal: false, isDefinition: true, align: 32)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1205, isLocal: true, isDefinition: true, align: 32)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1026, file: !1197, line: 762, type: !1263, isLocal: true, isDefinition: true)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1264, line: 237, size: 128, elements: !1265)
!1264 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1265 = !{!1266, !1267, !1268}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1263, file: !1264, line: 239, baseType: !1124, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1263, file: !1264, line: 241, baseType: !1055, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1263, file: !1264, line: 243, baseType: !1269, size: 64, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1102, line: 40, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1102, line: 35, size: 64, elements: !1271)
!1271 = !{!1272, !1274}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1270, file: !1102, line: 36, baseType: !1273, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1270, file: !1102, line: 37, baseType: !1273, size: 32, offset: 32)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1026, file: !1197, line: 762, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1026, file: !1197, line: 766, type: !1263, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1026, file: !1197, line: 766, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1026, file: !1197, line: 770, type: !1263, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1026, file: !1197, line: 770, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1026, file: !1197, line: 774, type: !1263, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1026, file: !1197, line: 774, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1026, file: !1197, line: 778, type: !1263, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1026, file: !1197, line: 778, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1026, file: !1197, line: 782, type: !1263, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1026, file: !1197, line: 782, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1026, file: !1197, line: 786, type: !1263, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1026, file: !1197, line: 786, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1026, file: !1197, line: 790, type: !1263, isLocal: true, isDefinition: true)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1026, file: !1197, line: 790, type: !1064, isLocal: true, isDefinition: true, align: 8)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1026, file: !1197, line: 656, type: !1048, isLocal: true, isDefinition: true)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1026, file: !1197, line: 766, type: !1309, isLocal: true, isDefinition: true)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1264, line: 224, size: 160, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1310, file: !1264, line: 226, baseType: !1119, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1310, file: !1264, line: 228, baseType: !882, size: 32, offset: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1310, file: !1264, line: 230, baseType: !109, size: 32, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1310, file: !1264, line: 231, baseType: !1316, size: 64, offset: 96)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1317)
!1317 = !{!1318, !1319}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1316, file: !878, line: 344, baseType: !110, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1316, file: !878, line: 345, baseType: !110, size: 32, offset: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1026, file: !1197, line: 770, type: !1309, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1026, file: !1197, line: 774, type: !1309, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1026, file: !1197, line: 778, type: !1309, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1026, file: !1197, line: 782, type: !1309, isLocal: true, isDefinition: true)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1026, file: !1197, line: 786, type: !1309, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1026, file: !1197, line: 790, type: !1309, isLocal: true, isDefinition: true)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1334, file: !1473, line: 44, type: !1551, isLocal: false, isDefinition: true)
!1334 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1335, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1336, retainedTypes: !1369, globals: !1470, splitDebugInlining: false, nameTableKind: None)
!1335 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1336 = !{!30, !1337, !1344, !1351, !1358, !1364, !832}
!1337 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !966, line: 47, baseType: !32, size: 32, elements: !1338)
!1338 = !{!1339, !1340, !1341, !1342, !1343}
!1339 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1340 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1341 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1342 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1343 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !966, line: 75, baseType: !32, size: 32, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350}
!1346 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1347 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1348 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1349 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1350 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !966, line: 92, baseType: !32, size: 32, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1354 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1355 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1356 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1357 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !966, line: 84, baseType: !32, size: 32, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363}
!1360 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1361 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1362 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1363 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !966, line: 107, baseType: !32, size: 32, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1367 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1368 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1369 = !{!107, !109, !1370, !181, !180, !1419, !110, !926, !1430, !194, !111, !1469}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !966, line: 336, size: 160, elements: !1373)
!1373 = !{!1374, !1393, !1397, !1401, !1414}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1372, file: !966, line: 365, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1376 = !DISubroutineType(types: !1377)
!1377 = !{!109, !1378, !987}
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1380)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1381)
!1381 = !{!1382, !1383, !1384, !1385, !1391, !1392}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1380, file: !336, line: 380, baseType: !279, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1380, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1380, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1380, file: !336, line: 386, baseType: !1386, size: 32, offset: 96)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1387, file: !336, line: 359, baseType: !180, size: 8)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1387, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1380, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1380, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1372, file: !966, line: 366, baseType: !1394, size: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{null, !1378, !181}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1372, file: !966, line: 374, baseType: !1398, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!109, !1378}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1372, file: !966, line: 377, baseType: !1402, size: 32, offset: 96)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!109, !1378, !1405}
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !966, line: 122, size: 64, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412, !1413}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1407, file: !966, line: 123, baseType: !110, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1407, file: !966, line: 124, baseType: !180, size: 8, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1407, file: !966, line: 125, baseType: !180, size: 8, offset: 40)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1407, file: !966, line: 126, baseType: !180, size: 8, offset: 48)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1407, file: !966, line: 127, baseType: !180, size: 8, offset: 56)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1372, file: !966, line: 379, baseType: !1415, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!109, !1378, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 648, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 639, size: 224, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1421, file: !312, line: 641, baseType: !316, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1421, file: !312, line: 642, baseType: !316, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1421, file: !312, line: 643, baseType: !316, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1421, file: !312, line: 644, baseType: !316, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1421, file: !312, line: 645, baseType: !316, size: 32, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1421, file: !312, line: 646, baseType: !316, size: 32, offset: 160)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1421, file: !312, line: 647, baseType: !316, size: 32, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1432)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !833, line: 100, size: 224, elements: !1433)
!1433 = !{!1434, !1439, !1440, !1449, !1454, !1459, !1464}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1432, file: !833, line: 101, baseType: !1435, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !833, line: 76, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{!109, !1378, !926}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1432, file: !833, line: 102, baseType: !1435, size: 32, offset: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1432, file: !833, line: 103, baseType: !1441, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !833, line: 83, baseType: !1442)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 32)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!109, !1378, !926, !1445, !107}
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !833, line: 72, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !1378, !926, !107}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1432, file: !833, line: 104, baseType: !1450, size: 32, offset: 96)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !833, line: 79, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!109, !1378, !926, !882}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1432, file: !833, line: 105, baseType: !1455, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !833, line: 88, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!832, !1378, !926}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1432, file: !833, line: 106, baseType: !1460, size: 32, offset: 160)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !833, line: 92, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!109, !1378, !926, !952}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1432, file: !833, line: 107, baseType: !1465, size: 32, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !833, line: 96, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!109, !1378, !926, !107}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1470 = !{!1332, !1471, !1477, !1479, !1486, !1488, !1532, !1535, !1537, !1540, !1543, !1545}
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1474, isLocal: false, isDefinition: true, align: 16)
!1473 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1475)
!1475 = !{!1476}
!1476 = !DISubrange(count: 8)
!1477 = !DIGlobalVariableExpression(var: !1478, expr: !DIExpression())
!1478 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1379, isLocal: false, isDefinition: true, align: 32)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1481, isLocal: true, isDefinition: true, align: 32)
!1481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1482, file: !327, line: 60, baseType: !1398, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1482, file: !327, line: 65, baseType: !1378, size: 32, offset: 32)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1387, isLocal: true, isDefinition: true, align: 8)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1334, file: !1473, line: 1914, type: !1490, isLocal: true, isDefinition: true)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1492, line: 22, size: 224, elements: !1493)
!1492 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1493 = !{!1494, !1495, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1491, file: !1492, line: 24, baseType: !1419, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1491, file: !1492, line: 26, baseType: !1496, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !878, line: 343, size: 64, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1498, file: !878, line: 344, baseType: !110, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1498, file: !878, line: 345, baseType: !110, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1491, file: !1492, line: 28, baseType: !234, size: 32, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1491, file: !1492, line: 30, baseType: !347, size: 8, offset: 96)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1491, file: !1492, line: 32, baseType: !109, size: 32, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1491, file: !1492, line: 34, baseType: !347, size: 8, offset: 160)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1491, file: !1492, line: 36, baseType: !347, size: 8, offset: 168)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1491, file: !1492, line: 38, baseType: !347, size: 8, offset: 176)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1491, file: !1492, line: 40, baseType: !347, size: 8, offset: 184)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1491, file: !1492, line: 41, baseType: !1510, size: 32, offset: 192)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1513, line: 60, size: 64, elements: !1514)
!1513 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1514 = !{!1515, !1531}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1512, file: !1513, line: 69, baseType: !1516, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1513, line: 50, size: 64, elements: !1519)
!1519 = !{!1520, !1529, !1530}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1518, file: !1513, line: 52, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !1525)
!1524 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1525, file: !1524, line: 34, baseType: !110, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1525, file: !1524, line: 36, baseType: !110, size: 32, offset: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1518, file: !1513, line: 54, baseType: !180, size: 8, offset: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1518, file: !1513, line: 56, baseType: !180, size: 8, offset: 40)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1512, file: !1513, line: 71, baseType: !180, size: 8, offset: 32)
!1532 = !DIGlobalVariableExpression(var: !1533, expr: !DIExpression())
!1533 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1334, file: !1473, line: 1914, type: !1534, isLocal: true, isDefinition: true)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1497, size: 64, elements: !517)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1511, isLocal: true, isDefinition: true)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1539, isLocal: true, isDefinition: true)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1517, size: 64, elements: !517)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1334, file: !1473, line: 1914, type: !1542, isLocal: true, isDefinition: true)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1522, size: 128, elements: !175)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1334, file: !1473, line: 1539, type: !1371, isLocal: true, isDefinition: true)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1334, file: !1473, line: 1914, type: !1547, isLocal: true, isDefinition: true)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1492, line: 74, size: 64, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1547, file: !1492, line: 76, baseType: !110, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1547, file: !1492, line: 78, baseType: !1378, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1553)
!1553 = !{!1554, !1555}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1552, file: !291, line: 17, baseType: !279, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1552, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1558, file: !1634, line: 65, type: !316, isLocal: true, isDefinition: true)
!1558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1560, retainedTypes: !1561, globals: !1631, splitDebugInlining: false, nameTableKind: None)
!1559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1560 = !{!604}
!1561 = !{!103, !1562, !765, !180, !110, !1570, !1601}
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1564, file: !535, line: 766, baseType: !316, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1564, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1564, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1564, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1573)
!1573 = !{!1574, !1576, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1591, !1596, !1600}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1572, file: !535, line: 413, baseType: !1575, size: 256)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1475)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1572, file: !535, line: 414, baseType: !1577, size: 768, offset: 256)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1578)
!1578 = !{!1579}
!1579 = !DISubrange(count: 24)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1572, file: !535, line: 415, baseType: !1575, size: 256, offset: 1024)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1572, file: !535, line: 416, baseType: !1577, size: 768, offset: 1280)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1572, file: !535, line: 417, baseType: !1575, size: 256, offset: 2048)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1572, file: !535, line: 418, baseType: !1577, size: 768, offset: 2304)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1572, file: !535, line: 419, baseType: !1575, size: 256, offset: 3072)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1572, file: !535, line: 420, baseType: !1577, size: 768, offset: 3328)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1572, file: !535, line: 421, baseType: !1575, size: 256, offset: 4096)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1572, file: !535, line: 422, baseType: !1588, size: 1792, offset: 4352)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 56)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1572, file: !535, line: 423, baseType: !1592, size: 1920, offset: 6144)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1593, size: 1920, elements: !1594)
!1593 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1594 = !{!1595}
!1595 = !DISubrange(count: 240)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1572, file: !535, line: 424, baseType: !1597, size: 20608, offset: 8064)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1598)
!1598 = !{!1599}
!1599 = !DISubrange(count: 644)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1572, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608, !1609, !1610, !1611, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1622, !1623, !1624, !1626, !1628, !1630}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1603, file: !535, line: 447, baseType: !539, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1603, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1603, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1603, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1603, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1603, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1603, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!1612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1593, size: 96, elements: !801)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1603, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1603, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1603, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1603, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1603, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1603, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1603, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1603, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !175)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1603, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1603, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1603, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !707)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1603, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1231)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1603, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1231)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1603, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1631 = !{!1632, !1658, !1663, !1665, !1667, !1556}
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1558, file: !1634, line: 285, type: !1635, isLocal: true, isDefinition: true, align: 32)
!1634 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1637)
!1637 = !{!1638, !1657}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1636, file: !327, line: 60, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!109, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1655, !1656}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1644, file: !336, line: 380, baseType: !279, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1644, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1644, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1644, file: !336, line: 386, baseType: !1650, size: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1651, file: !336, line: 359, baseType: !180, size: 8)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1651, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1644, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1644, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1636, file: !327, line: 65, baseType: !1642, size: 32, offset: 32)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "lock", scope: !1558, file: !1634, line: 34, type: !1660, isLocal: true, isDefinition: true)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1661)
!1661 = !{!1662}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1660, file: !253, line: 52, baseType: !22, size: 32)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "last_load", scope: !1558, file: !1634, line: 36, type: !110, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1558, file: !1634, line: 48, type: !110, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1558, file: !1634, line: 54, type: !110, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1671, file: !1753, line: 22, type: !1755, isLocal: true, isDefinition: true)
!1671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1673, retainedTypes: !1674, globals: !1750, splitDebugInlining: false, nameTableKind: None)
!1672 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1673 = !{!1029, !1035}
!1674 = !{!1675, !1739, !1744, !1082, !1035, !1029, !1749, !107}
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1030, line: 523, size: 288, elements: !1678)
!1678 = !{!1679, !1698, !1702, !1706, !1710, !1711, !1712, !1716, !1735}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1677, file: !1030, line: 524, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!109, !1683, !1070, !1071}
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1696, !1697}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1685, file: !336, line: 380, baseType: !279, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1685, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1685, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1685, file: !336, line: 386, baseType: !1691, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1693)
!1693 = !{!1694, !1695}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1692, file: !336, line: 359, baseType: !180, size: 8)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1692, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1685, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1685, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1677, file: !1030, line: 530, baseType: !1699, size: 32, offset: 32)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!109, !1683, !1076}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1677, file: !1030, line: 532, baseType: !1703, size: 32, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!109, !1683, !1082, !1077}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1677, file: !1030, line: 535, baseType: !1707, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!109, !1683, !1082}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1677, file: !1030, line: 537, baseType: !1707, size: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1677, file: !1030, line: 539, baseType: !1707, size: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1677, file: !1030, line: 541, baseType: !1713, size: 32, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DISubroutineType(types: !1715)
!1715 = !{!109, !1683, !1070, !1029, !1035}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1677, file: !1030, line: 544, baseType: !1717, size: 32, offset: 224)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!109, !1683, !1720, !347}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1030, line: 478, size: 96, elements: !1722)
!1722 = !{!1723, !1729, !1734}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1721, file: !1030, line: 482, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1102, line: 33, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1102, line: 29, size: 32, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1725, file: !1102, line: 30, baseType: !1728, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1721, file: !1030, line: 485, baseType: !1730, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1030, line: 464, baseType: !1731)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{null, !1683, !1720, !1082}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1721, file: !1030, line: 493, baseType: !1082, size: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1677, file: !1030, line: 547, baseType: !1736, size: 32, offset: 256)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!110, !1683}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1030, line: 428, size: 32, elements: !1742)
!1742 = !{!1743}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1741, file: !1030, line: 434, baseType: !1082, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1030, line: 441, size: 32, elements: !1747)
!1747 = !{!1748}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1746, file: !1030, line: 447, baseType: !1082, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 32)
!1750 = !{!1751, !1669}
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1752 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1671, file: !1753, line: 37, type: !1754, isLocal: true, isDefinition: true)
!1753 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1756, size: 352, elements: !1757)
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1683)
!1757 = !{!1758}
!1758 = !DISubrange(count: 11)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1761, file: !1802, line: 139, type: !1809, isLocal: false, isDefinition: true)
!1761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1763, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1763 = !{!1764}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1766, file: !312, line: 479, baseType: !316, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1766, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1766, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1766, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1766, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1766, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1766, file: !312, line: 485, baseType: !851, size: 64, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1766, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1766, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1766, file: !312, line: 488, baseType: !851, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1766, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1766, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1766, file: !312, line: 491, baseType: !851, size: 64, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1766, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1766, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1766, file: !312, line: 494, baseType: !851, size: 64, offset: 576)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1766, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1766, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1766, file: !312, line: 497, baseType: !851, size: 64, offset: 704)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1766, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1766, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1766, file: !312, line: 500, baseType: !851, size: 64, offset: 832)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1766, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1766, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1766, file: !312, line: 503, baseType: !851, size: 64, offset: 960)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1766, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1766, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1766, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1766, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1766, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1766, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!1799 = !{!1800, !1803, !1759}
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1761, file: !1802, line: 137, type: !110, isLocal: false, isDefinition: true)
!1802 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1803 = !DIGlobalVariableExpression(var: !1804, expr: !DIExpression())
!1804 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1761, file: !1802, line: 138, type: !1805, isLocal: false, isDefinition: true)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 128, elements: !1807)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1807 = !{!1808}
!1808 = !DISubrange(count: 16)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 64, elements: !1475)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1812, file: !1815, line: 23, type: !1816, isLocal: false, isDefinition: true)
!1812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1814, splitDebugInlining: false, nameTableKind: None)
!1813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1814 = !{!1810}
!1815 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1819, file: !1823, line: 37, type: !2077, isLocal: false, isDefinition: true)
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1821, retainedTypes: !1830, globals: !1903, splitDebugInlining: false, nameTableKind: None)
!1820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!1821 = !{!1822, !30, !604}
!1822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1823, line: 63, baseType: !32, size: 32, elements: !1824)
!1823 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1824 = !{!1825, !1826, !1827, !1828, !1829}
!1825 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1826 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1827 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1828 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1829 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1830 = !{!234, !107, !109, !1831, !285, !110, !1861, !765, !180, !1886}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1834, line: 51, size: 64, elements: !1835)
!1834 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1835 = !{!1836, !1856}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1833, file: !1834, line: 52, baseType: !1837, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1834, line: 38, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!109, !1841, !286, !194}
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1844)
!1844 = !{!1845, !1846, !1847, !1848, !1854, !1855}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1843, file: !336, line: 380, baseType: !279, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1843, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1843, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1843, file: !336, line: 386, baseType: !1849, size: 32, offset: 96)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1850, file: !336, line: 359, baseType: !180, size: 8)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1850, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1843, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1843, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1833, file: !1834, line: 53, baseType: !1857, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1834, line: 47, baseType: !1858)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!109, !1841, !286, !194, !110}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1863, file: !535, line: 447, baseType: !539, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1863, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1863, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1863, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1863, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1863, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1863, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1863, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1863, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1863, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1863, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1863, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1863, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1863, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1863, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1863, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1863, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1863, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1863, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1863, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1863, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1888, file: !535, line: 413, baseType: !1575, size: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1888, file: !535, line: 414, baseType: !1577, size: 768, offset: 256)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1888, file: !535, line: 415, baseType: !1575, size: 256, offset: 1024)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1888, file: !535, line: 416, baseType: !1577, size: 768, offset: 1280)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1888, file: !535, line: 417, baseType: !1575, size: 256, offset: 2048)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1888, file: !535, line: 418, baseType: !1577, size: 768, offset: 2304)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1888, file: !535, line: 419, baseType: !1575, size: 256, offset: 3072)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1888, file: !535, line: 420, baseType: !1577, size: 768, offset: 3328)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1888, file: !535, line: 421, baseType: !1575, size: 256, offset: 4096)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1888, file: !535, line: 422, baseType: !1588, size: 1792, offset: 4352)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1888, file: !535, line: 423, baseType: !1592, size: 1920, offset: 6144)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1888, file: !535, line: 424, baseType: !1597, size: 20608, offset: 8064)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1888, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1903 = !{!1817, !1904, !2030, !2037, !2039, !2042, !2047, !2049, !2054}
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "_kernel", scope: !1819, file: !1823, line: 40, type: !1906, isLocal: false, isDefinition: true)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1907)
!1907 = !{!1908, !2025}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1906, file: !122, line: 159, baseType: !1909, size: 192)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1910, size: 192, elements: !517)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1911)
!1911 = !{!1912, !1913, !1914, !2018, !2019, !2020, !2021}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1910, file: !122, line: 102, baseType: !110, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1910, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1910, file: !122, line: 108, baseType: !1915, size: 32, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1917)
!1917 = !{!1918, !1976, !1988, !1989, !1990, !1991, !1992, !1998, !2013}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1916, file: !158, line: 247, baseType: !1919, size: 384)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !1920)
!1920 = !{!1921, !1945, !1952, !1953, !1954, !1963, !1964, !1965}
!1921 = !DIDerivedType(tag: DW_TAG_member, scope: !1919, file: !158, line: 60, baseType: !1922, size: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1919, file: !158, line: 60, size: 64, elements: !1923)
!1923 = !{!1924, !1939}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1922, file: !158, line: 61, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1927)
!1927 = !{!1928, !1934}
!1928 = !DIDerivedType(tag: DW_TAG_member, scope: !1926, file: !127, line: 38, baseType: !1929, size: 32)
!1929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1926, file: !127, line: 38, size: 32, elements: !1930)
!1930 = !{!1931, !1933}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1929, file: !127, line: 39, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1929, file: !127, line: 40, baseType: !1932, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1926, file: !127, line: 42, baseType: !1935, size: 32, offset: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1926, file: !127, line: 42, size: 32, elements: !1936)
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1935, file: !127, line: 43, baseType: !1932, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1935, file: !127, line: 44, baseType: !1932, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1922, file: !158, line: 62, baseType: !1940, size: 64)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !1941)
!1941 = !{!1942}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1940, file: !170, line: 50, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1944, size: 64, elements: !175)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1919, file: !158, line: 68, baseType: !1946, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1949)
!1949 = !{!1950}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1948, file: !122, line: 232, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1926)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1919, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1919, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!1954 = !DIDerivedType(tag: DW_TAG_member, scope: !1919, file: !158, line: 90, baseType: !1955, size: 16, offset: 112)
!1955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1919, file: !158, line: 90, size: 16, elements: !1956)
!1956 = !{!1957, !1962}
!1957 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !158, line: 91, baseType: !1958, size: 16)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1955, file: !158, line: 91, size: 16, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1958, file: !158, line: 96, baseType: !190, size: 8)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1958, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1955, file: !158, line: 100, baseType: !194, size: 16)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1919, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1919, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1919, file: !158, line: 131, baseType: !1966, size: 192, offset: 192)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1967)
!1967 = !{!1968, !1969, !1975}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1966, file: !122, line: 245, baseType: !1925, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1966, file: !122, line: 246, baseType: !1970, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1971)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{null, !1974}
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1966, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1916, file: !158, line: 250, baseType: !1977, size: 288, offset: 384)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1977, file: !211, line: 26, baseType: !110, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1977, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1977, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1977, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1977, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1977, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1977, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1977, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1977, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1916, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1916, file: !158, line: 256, baseType: !1947, size: 64, offset: 704)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1916, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1916, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1916, file: !158, line: 300, baseType: !1993, size: 96, offset: 1056)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1993, file: !158, line: 153, baseType: !22, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1993, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1993, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1916, file: !158, line: 325, baseType: !1999, size: 32, offset: 1152)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2001)
!2001 = !{!2002, !2008, !2009}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2000, file: !118, line: 5074, baseType: !2003, size: 96)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2003, file: !243, line: 57, baseType: !246, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2003, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2003, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2000, file: !118, line: 5075, baseType: !1947, size: 64, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2000, file: !118, line: 5076, baseType: !2010, size: 32, offset: 160)
!2010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2011)
!2011 = !{!2012}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2010, file: !253, line: 52, baseType: !22, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1916, file: !158, line: 343, baseType: !2014, size: 64, offset: 1184)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2014, file: !211, line: 63, baseType: !110, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2014, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1910, file: !122, line: 111, baseType: !1915, size: 32, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1910, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1910, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1910, file: !122, line: 153, baseType: !2022, offset: 168)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2023, line: 33, elements: !2024)
!2023 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2024 = !{}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1906, file: !122, line: 170, baseType: !2026, size: 96, offset: 192)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2026, file: !122, line: 86, baseType: !1915, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2026, file: !122, line: 90, baseType: !1951, size: 64, offset: 32)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1819, file: !1823, line: 43, type: !2032, isLocal: false, isDefinition: true, align: 512)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2033, size: 8704, elements: !2036)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2033, file: !147, line: 48, baseType: !150, size: 8)
!2036 = !{!153}
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1819, file: !1823, line: 44, type: !1916, isLocal: false, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1819, file: !1823, line: 48, type: !2041, isLocal: false, isDefinition: true)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1916, size: 1280, elements: !517)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1819, file: !1823, line: 86, type: !2044, isLocal: false, isDefinition: true, align: 512)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2033, size: 16896, elements: !2045)
!2045 = !{!518, !2046}
!2046 = !DISubrange(count: 2112)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1819, file: !1823, line: 217, type: !347, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1819, file: !1823, line: 50, type: !2051, isLocal: true, isDefinition: true, align: 512)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2033, size: 3072, elements: !2052)
!2052 = !{!518, !2053}
!2053 = !DISubrange(count: 384)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "levels", scope: !2056, file: !1823, line: 232, type: !2076, isLocal: true, isDefinition: true)
!2056 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1823, file: !1823, line: 230, type: !2057, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2059)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{null, !1822}
!2059 = !{!2060, !2061, !2071, !2075}
!2060 = !DILocalVariable(name: "level", arg: 1, scope: !2056, file: !1823, line: 230, type: !1822)
!2061 = !DILocalVariable(name: "entry", scope: !2056, file: !1823, line: 244, type: !2062)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2065)
!2065 = !{!2066, !2070}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2064, file: !327, line: 60, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!109, !1841}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2064, file: !327, line: 65, baseType: !1841, size: 32, offset: 32)
!2071 = !DILocalVariable(name: "dev", scope: !2072, file: !1823, line: 247, type: !1841)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !1823, line: 246, column: 64)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !1823, line: 246, column: 2)
!2074 = distinct !DILexicalBlock(scope: !2056, file: !1823, line: 246, column: 2)
!2075 = !DILocalVariable(name: "rc", scope: !2072, file: !1823, line: 248, type: !109)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2062, size: 192, elements: !1222)
!2077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2079)
!2079 = !{!2080, !2081}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2078, file: !291, line: 17, baseType: !279, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2078, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "states_str", scope: !2084, file: !2085, line: 276, type: !2209, isLocal: true, isDefinition: true)
!2084 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2085, file: !2085, line: 271, type: !2086, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2200)
!2085 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!279, !2088, !285, !234}
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2089)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 32)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2091)
!2091 = !{!2092, !2150, !2162, !2163, !2164, !2165, !2166, !2172, !2187}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2090, file: !158, line: 247, baseType: !2093, size: 384)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2094)
!2094 = !{!2095, !2119, !2126, !2127, !2128, !2137, !2138, !2139}
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !158, line: 60, baseType: !2096, size: 64)
!2096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !158, line: 60, size: 64, elements: !2097)
!2097 = !{!2098, !2113}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2096, file: !158, line: 61, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2101)
!2101 = !{!2102, !2108}
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2100, file: !127, line: 38, baseType: !2103, size: 32)
!2103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2100, file: !127, line: 38, size: 32, elements: !2104)
!2104 = !{!2105, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2103, file: !127, line: 39, baseType: !2106, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2103, file: !127, line: 40, baseType: !2106, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2100, file: !127, line: 42, baseType: !2109, size: 32, offset: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2100, file: !127, line: 42, size: 32, elements: !2110)
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2109, file: !127, line: 43, baseType: !2106, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2109, file: !127, line: 44, baseType: !2106, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2096, file: !158, line: 62, baseType: !2114, size: 64)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2115)
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2114, file: !170, line: 50, baseType: !2117, size: 64)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2118, size: 64, elements: !175)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2093, file: !158, line: 68, baseType: !2120, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2123)
!2123 = !{!2124}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2122, file: !122, line: 232, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2100)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2093, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2093, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2128 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !158, line: 90, baseType: !2129, size: 16, offset: 112)
!2129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !158, line: 90, size: 16, elements: !2130)
!2130 = !{!2131, !2136}
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2129, file: !158, line: 91, baseType: !2132, size: 16)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2129, file: !158, line: 91, size: 16, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2132, file: !158, line: 96, baseType: !190, size: 8)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2132, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2129, file: !158, line: 100, baseType: !194, size: 16)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2093, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2093, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2093, file: !158, line: 131, baseType: !2140, size: 192, offset: 192)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2141)
!2141 = !{!2142, !2143, !2149}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2140, file: !122, line: 245, baseType: !2099, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2140, file: !122, line: 246, baseType: !2144, size: 32, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2145)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{null, !2148}
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2140, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2090, file: !158, line: 250, baseType: !2151, size: 288, offset: 384)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2151, file: !211, line: 26, baseType: !110, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2151, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2151, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2151, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2151, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2151, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2151, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2151, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2151, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2090, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2090, file: !158, line: 256, baseType: !2121, size: 64, offset: 704)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2090, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2090, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2090, file: !158, line: 300, baseType: !2167, size: 96, offset: 1056)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2167, file: !158, line: 153, baseType: !22, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2167, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2167, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2090, file: !158, line: 325, baseType: !2173, size: 32, offset: 1152)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2175)
!2175 = !{!2176, !2182, !2183}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2174, file: !118, line: 5074, baseType: !2177, size: 96)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2178)
!2178 = !{!2179, !2180, !2181}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2177, file: !243, line: 57, baseType: !246, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2177, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2177, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2174, file: !118, line: 5075, baseType: !2121, size: 64, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2174, file: !118, line: 5076, baseType: !2184, size: 32, offset: 160)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2185)
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2184, file: !253, line: 52, baseType: !22, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2090, file: !158, line: 343, baseType: !2188, size: 64, offset: 1184)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2189)
!2189 = !{!2190, !2191}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2188, file: !211, line: 63, baseType: !110, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2188, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2193, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2194, globals: !2196, splitDebugInlining: false, nameTableKind: None)
!2193 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2194 = !{!107, !279, !103, !180, !22, !109, !2195, !24, !234, !285, !110, !111}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2196 = !{!2082, !2197}
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "states_sz", scope: !2084, file: !2085, line: 279, type: !2199, isLocal: true, isDefinition: true)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1754, size: 256, elements: !1475)
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207}
!2201 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2084, file: !2085, line: 271, type: !2088)
!2202 = !DILocalVariable(name: "buf", arg: 2, scope: !2084, file: !2085, line: 271, type: !285)
!2203 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2084, file: !2085, line: 271, type: !234)
!2204 = !DILocalVariable(name: "off", scope: !2084, file: !2085, line: 273, type: !234)
!2205 = !DILocalVariable(name: "bit", scope: !2084, file: !2085, line: 274, type: !180)
!2206 = !DILocalVariable(name: "thread_state", scope: !2084, file: !2085, line: 275, type: !180)
!2207 = !DILocalVariable(name: "index", scope: !2208, file: !2085, line: 293, type: !180)
!2208 = distinct !DILexicalBlock(scope: !2084, file: !2085, line: 293, column: 2)
!2209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1475)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "lock", scope: !2212, file: !2320, line: 47, type: !2311, isLocal: true, isDefinition: true)
!2212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2214, globals: !2319, splitDebugInlining: false, nameTableKind: None)
!2213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2214 = !{!347, !107, !109, !2215, !2230}
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2218)
!2218 = !{!2219, !2225}
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !127, line: 38, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !127, line: 38, size: 32, elements: !2221)
!2221 = !{!2222, !2224}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2220, file: !127, line: 39, baseType: !2223, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2220, file: !127, line: 40, baseType: !2223, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2217, file: !127, line: 42, baseType: !2226, size: 32, offset: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2217, file: !127, line: 42, size: 32, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2226, file: !127, line: 43, baseType: !2223, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2226, file: !127, line: 44, baseType: !2223, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2232)
!2232 = !{!2233, !2277, !2289, !2290, !2291, !2292, !2293, !2299, !2314}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2231, file: !158, line: 247, baseType: !2234, size: 384)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2235)
!2235 = !{!2236, !2246, !2253, !2254, !2255, !2264, !2265, !2266}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !158, line: 60, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !158, line: 60, size: 64, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2237, file: !158, line: 61, baseType: !2216, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2237, file: !158, line: 62, baseType: !2241, size: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2242)
!2242 = !{!2243}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2241, file: !170, line: 50, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2245, size: 64, elements: !175)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2234, file: !158, line: 68, baseType: !2247, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2250)
!2250 = !{!2251}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2249, file: !122, line: 232, baseType: !2252, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2217)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2234, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2234, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2255 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !158, line: 90, baseType: !2256, size: 16, offset: 112)
!2256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !158, line: 90, size: 16, elements: !2257)
!2257 = !{!2258, !2263}
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2256, file: !158, line: 91, baseType: !2259, size: 16)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2256, file: !158, line: 91, size: 16, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2259, file: !158, line: 96, baseType: !190, size: 8)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2259, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2256, file: !158, line: 100, baseType: !194, size: 16)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2234, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2234, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2234, file: !158, line: 131, baseType: !2267, size: 192, offset: 192)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2268)
!2268 = !{!2269, !2270, !2276}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2267, file: !122, line: 245, baseType: !2216, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2267, file: !122, line: 246, baseType: !2271, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2272)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{null, !2275}
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2267, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2231, file: !158, line: 250, baseType: !2278, size: 288, offset: 384)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2279)
!2279 = !{!2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2278, file: !211, line: 26, baseType: !110, size: 32)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2278, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2278, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2278, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2278, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2278, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2278, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2278, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2278, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2231, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2231, file: !158, line: 256, baseType: !2248, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2231, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2231, file: !158, line: 300, baseType: !2294, size: 96, offset: 1056)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2295)
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2294, file: !158, line: 153, baseType: !22, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2294, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2231, file: !158, line: 325, baseType: !2300, size: 32, offset: 1152)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2302)
!2302 = !{!2303, !2309, !2310}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2301, file: !118, line: 5074, baseType: !2304, size: 96)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2305)
!2305 = !{!2306, !2307, !2308}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2304, file: !243, line: 57, baseType: !246, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2304, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2304, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2301, file: !118, line: 5075, baseType: !2248, size: 64, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2301, file: !118, line: 5076, baseType: !2311, size: 32, offset: 160)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2312)
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2311, file: !253, line: 52, baseType: !22, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2231, file: !158, line: 343, baseType: !2315, size: 64, offset: 1184)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2315, file: !211, line: 63, baseType: !110, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2315, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2319 = !{!2210}
!2320 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2323, file: !2434, line: 56, type: !2421, isLocal: false, isDefinition: true)
!2323 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2324, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2325, globals: !2431, splitDebugInlining: false, nameTableKind: None)
!2324 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2325 = !{!2326, !285, !107, !2429, !286, !103, !765, !109, !110, !111, !2430}
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2328)
!2328 = !{!2329, !2387, !2399, !2400, !2401, !2402, !2403, !2409, !2424}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2327, file: !158, line: 247, baseType: !2330, size: 384)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2331)
!2331 = !{!2332, !2356, !2363, !2364, !2365, !2374, !2375, !2376}
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !158, line: 60, baseType: !2333, size: 64)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !158, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2350}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2333, file: !158, line: 61, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2337)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2338)
!2338 = !{!2339, !2345}
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !127, line: 38, baseType: !2340, size: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !127, line: 38, size: 32, elements: !2341)
!2341 = !{!2342, !2344}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2340, file: !127, line: 39, baseType: !2343, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2340, file: !127, line: 40, baseType: !2343, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !127, line: 42, baseType: !2346, size: 32, offset: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !127, line: 42, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2346, file: !127, line: 43, baseType: !2343, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2346, file: !127, line: 44, baseType: !2343, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2333, file: !158, line: 62, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !170, line: 50, baseType: !2354, size: 64)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2355, size: 64, elements: !175)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2330, file: !158, line: 68, baseType: !2357, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2359, file: !122, line: 232, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2337)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2330, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2330, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2330, file: !158, line: 90, baseType: !2366, size: 16, offset: 112)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2330, file: !158, line: 90, size: 16, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !158, line: 91, baseType: !2369, size: 16)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2366, file: !158, line: 91, size: 16, elements: !2370)
!2370 = !{!2371, !2372}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2369, file: !158, line: 96, baseType: !190, size: 8)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2369, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2366, file: !158, line: 100, baseType: !194, size: 16)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2330, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2330, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2330, file: !158, line: 131, baseType: !2377, size: 192, offset: 192)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2378)
!2378 = !{!2379, !2380, !2386}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2377, file: !122, line: 245, baseType: !2336, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2377, file: !122, line: 246, baseType: !2381, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 32)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{null, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2377, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2327, file: !158, line: 250, baseType: !2388, size: 288, offset: 384)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2388, file: !211, line: 26, baseType: !110, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2388, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2388, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2388, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2388, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2388, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2388, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2388, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2388, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2327, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2327, file: !158, line: 256, baseType: !2358, size: 64, offset: 704)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2327, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2327, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2327, file: !158, line: 300, baseType: !2404, size: 96, offset: 1056)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2405)
!2405 = !{!2406, !2407, !2408}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2404, file: !158, line: 153, baseType: !22, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2404, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2327, file: !158, line: 325, baseType: !2410, size: 32, offset: 1152)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2412)
!2412 = !{!2413, !2419, !2420}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2411, file: !118, line: 5074, baseType: !2414, size: 96)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2414, file: !243, line: 57, baseType: !246, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2414, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2414, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2411, file: !118, line: 5075, baseType: !2358, size: 64, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2411, file: !118, line: 5076, baseType: !2421, size: 32, offset: 160)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2422)
!2422 = !{!2423}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2421, file: !253, line: 52, baseType: !22, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2327, file: !158, line: 343, baseType: !2425, size: 64, offset: 1184)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2426)
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2425, file: !211, line: 63, baseType: !110, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2425, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2431 = !{!2321, !2432, !2435, !2437}
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2323, file: !2434, line: 404, type: !109, isLocal: true, isDefinition: true)
!2434 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2323, file: !2434, line: 405, type: !109, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "pending_current", scope: !2323, file: !2434, line: 425, type: !2326, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "lock", scope: !2441, file: !2460, line: 14, type: !2461, isLocal: true, isDefinition: true)
!2441 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2442, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2443, globals: !2459, splitDebugInlining: false, nameTableKind: None)
!2442 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2443 = !{!107, !103, !109, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2447)
!2447 = !{!2448, !2454}
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !127, line: 38, baseType: !2449, size: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !127, line: 38, size: 32, elements: !2450)
!2450 = !{!2451, !2453}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2449, file: !127, line: 39, baseType: !2452, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2449, file: !127, line: 40, baseType: !2452, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !127, line: 42, baseType: !2455, size: 32, offset: 32)
!2455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !127, line: 42, size: 32, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2455, file: !127, line: 43, baseType: !2452, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2455, file: !127, line: 44, baseType: !2452, size: 32)
!2459 = !{!2439}
!2460 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2462)
!2462 = !{!2463}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2461, file: !253, line: 52, baseType: !22, size: 32)
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2466, file: !2496, line: 19, type: !2502, isLocal: true, isDefinition: true)
!2466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2468, globals: !2493, splitDebugInlining: false, nameTableKind: None)
!2467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2468 = !{!103, !107, !765, !110, !111, !109, !2469, !285, !105}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2471)
!2471 = !{!2472, !2487, !2492}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2470, file: !122, line: 245, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2475)
!2475 = !{!2476, !2482}
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !127, line: 38, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !127, line: 38, size: 32, elements: !2478)
!2478 = !{!2479, !2481}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2477, file: !127, line: 39, baseType: !2480, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2477, file: !127, line: 40, baseType: !2480, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, scope: !2474, file: !127, line: 42, baseType: !2483, size: 32, offset: 32)
!2483 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2474, file: !127, line: 42, size: 32, elements: !2484)
!2484 = !{!2485, !2486}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2483, file: !127, line: 43, baseType: !2480, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2483, file: !127, line: 44, baseType: !2480, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2470, file: !122, line: 246, baseType: !2488, size: 32, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2489)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{null, !2469}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2470, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2493 = !{!2494, !2464, !2497, !2499}
!2494 = !DIGlobalVariableExpression(var: !2495, expr: !DIExpression())
!2495 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2466, file: !2496, line: 15, type: !111, isLocal: true, isDefinition: true)
!2496 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2497 = !DIGlobalVariableExpression(var: !2498, expr: !DIExpression())
!2498 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2466, file: !2496, line: 25, type: !109, isLocal: true, isDefinition: true)
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2466, file: !2496, line: 17, type: !2501, isLocal: true, isDefinition: true)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2474)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2503)
!2503 = !{!2504}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2502, file: !253, line: 52, baseType: !22, size: 32)
!2505 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2506, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2506 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2511, retainedTypes: !2531, splitDebugInlining: false, nameTableKind: None)
!2510 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2511 = !{!2512, !2520}
!2512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2513, line: 69, baseType: !32, size: 32, elements: !2514)
!2513 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2514 = !{!2515, !2516, !2517, !2518, !2519}
!2515 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2516 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2517 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2518 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2519 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2513, line: 56, baseType: !32, size: 32, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530}
!2522 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2523 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2524 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2525 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2526 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2527 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2528 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2529 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2530 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2531 = !{!109, !2512, !2520, !2532, !191, !354, !2534, !2535, !181, !195, !279, !234, !107, !22, !32, !281, !2537, !2538, !102, !282, !106, !283, !2533, !2539, !2540, !2541, !2542}
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2513, line: 31, baseType: !2533)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2513, line: 32, baseType: !2536)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2549, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2549 = !{!279, !181, !109, !32}
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2552, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2552 = !{!2553, !30}
!2553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2554, line: 27, baseType: !32, size: 32, elements: !2555)
!2554 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2555 = !{!2556, !2557, !2558, !2559, !2560}
!2556 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2557 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2558 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2559 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2560 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2563, retainedTypes: !2564, splitDebugInlining: false, nameTableKind: None)
!2562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2563 = !{!604, !2553, !30}
!2564 = !{!791, !2565, !107, !109, !765, !110, !180, !2582}
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2567)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2568)
!2568 = !{!2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2567, file: !535, line: 413, baseType: !1575, size: 256)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2567, file: !535, line: 414, baseType: !1577, size: 768, offset: 256)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2567, file: !535, line: 415, baseType: !1575, size: 256, offset: 1024)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2567, file: !535, line: 416, baseType: !1577, size: 768, offset: 1280)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2567, file: !535, line: 417, baseType: !1575, size: 256, offset: 2048)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2567, file: !535, line: 418, baseType: !1577, size: 768, offset: 2304)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2567, file: !535, line: 419, baseType: !1575, size: 256, offset: 3072)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2567, file: !535, line: 420, baseType: !1577, size: 768, offset: 3328)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2567, file: !535, line: 421, baseType: !1575, size: 256, offset: 4096)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2567, file: !535, line: 422, baseType: !1588, size: 1792, offset: 4352)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2567, file: !535, line: 423, baseType: !1592, size: 1920, offset: 6144)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2567, file: !535, line: 424, baseType: !1597, size: 20608, offset: 8064)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2567, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2584, file: !535, line: 447, baseType: !539, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2584, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2584, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2584, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2584, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2584, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2584, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2584, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2584, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2584, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2584, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2584, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2584, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2584, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2584, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2584, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2584, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2584, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2584, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2584, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2584, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2611, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2611 = !{!107, !109, !22, !2612}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2614)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2614, file: !535, line: 447, baseType: !539, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2614, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2614, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2614, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2614, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2614, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2614, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2614, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2614, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2614, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2614, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2614, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2614, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2614, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2614, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2614, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2614, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2614, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2614, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2614, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2614, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2637 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2638, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2639, splitDebugInlining: false, nameTableKind: None)
!2638 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2639 = !{!2640, !107, !109}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2642)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2643)
!2643 = !{!2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2642, file: !535, line: 447, baseType: !539, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2642, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2642, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2642, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2642, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2642, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2642, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2642, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2642, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2642, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2642, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2642, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2642, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2642, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2642, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2642, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2642, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2642, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2642, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2642, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2642, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2666, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2667, splitDebugInlining: false, nameTableKind: None)
!2666 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2667 = !{!2668, !110, !107, !109}
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2670, line: 98, size: 256, elements: !2671)
!2670 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2671 = !{!2672, !2677, !2682, !2687, !2692, !2697, !2702, !2707}
!2672 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 99, baseType: !2673, size: 32)
!2673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 99, size: 32, elements: !2674)
!2674 = !{!2675, !2676}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2673, file: !2670, line: 99, baseType: !110, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2673, file: !2670, line: 99, baseType: !110, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 100, baseType: !2678, size: 32, offset: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 100, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2678, file: !2670, line: 100, baseType: !110, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2678, file: !2670, line: 100, baseType: !110, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 101, baseType: !2683, size: 32, offset: 64)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 101, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2683, file: !2670, line: 101, baseType: !110, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2683, file: !2670, line: 101, baseType: !110, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 102, baseType: !2688, size: 32, offset: 96)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 102, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2688, file: !2670, line: 102, baseType: !110, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2688, file: !2670, line: 102, baseType: !110, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 103, baseType: !2693, size: 32, offset: 128)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 103, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2693, file: !2670, line: 103, baseType: !110, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2693, file: !2670, line: 103, baseType: !110, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 104, baseType: !2698, size: 32, offset: 160)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 104, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2698, file: !2670, line: 104, baseType: !110, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2698, file: !2670, line: 104, baseType: !110, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 105, baseType: !2703, size: 32, offset: 192)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 105, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2703, file: !2670, line: 105, baseType: !110, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2703, file: !2670, line: 105, baseType: !110, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2669, file: !2670, line: 106, baseType: !110, size: 32, offset: 224)
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2552, retainedTypes: !2710, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2710 = !{!2711, !107, !109, !2736, !2779, !110}
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2714)
!2714 = !{!2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2713, file: !535, line: 447, baseType: !539, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2713, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2713, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2713, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2713, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2713, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2713, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2713, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2713, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2713, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2713, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2713, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2713, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2713, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2713, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2713, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2713, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2713, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2713, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2713, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2713, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 32)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2670, line: 141, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2670, line: 97, size: 256, elements: !2739)
!2739 = !{!2740}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2738, file: !2670, line: 107, baseType: !2741, size: 256)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2670, line: 98, size: 256, elements: !2742)
!2742 = !{!2743, !2748, !2753, !2758, !2763, !2768, !2773, !2778}
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 99, baseType: !2744, size: 32)
!2744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 99, size: 32, elements: !2745)
!2745 = !{!2746, !2747}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2744, file: !2670, line: 99, baseType: !110, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2744, file: !2670, line: 99, baseType: !110, size: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 100, baseType: !2749, size: 32, offset: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 100, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2749, file: !2670, line: 100, baseType: !110, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2749, file: !2670, line: 100, baseType: !110, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 101, baseType: !2754, size: 32, offset: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 101, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2754, file: !2670, line: 101, baseType: !110, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2754, file: !2670, line: 101, baseType: !110, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 102, baseType: !2759, size: 32, offset: 96)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 102, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2759, file: !2670, line: 102, baseType: !110, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2759, file: !2670, line: 102, baseType: !110, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 103, baseType: !2764, size: 32, offset: 128)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 103, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2764, file: !2670, line: 103, baseType: !110, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2764, file: !2670, line: 103, baseType: !110, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 104, baseType: !2769, size: 32, offset: 160)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 104, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2769, file: !2670, line: 104, baseType: !110, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2769, file: !2670, line: 104, baseType: !110, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2670, line: 105, baseType: !2774, size: 32, offset: 192)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2741, file: !2670, line: 105, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2774, file: !2670, line: 105, baseType: !110, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2774, file: !2670, line: 105, baseType: !110, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2741, file: !2670, line: 106, baseType: !110, size: 32, offset: 224)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2781, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1560, retainedTypes: !2782, splitDebugInlining: false, nameTableKind: None)
!2781 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2782 = !{!791, !765, !180, !110, !2783, !2800}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2785, file: !535, line: 413, baseType: !1575, size: 256)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2785, file: !535, line: 414, baseType: !1577, size: 768, offset: 256)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2785, file: !535, line: 415, baseType: !1575, size: 256, offset: 1024)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2785, file: !535, line: 416, baseType: !1577, size: 768, offset: 1280)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2785, file: !535, line: 417, baseType: !1575, size: 256, offset: 2048)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2785, file: !535, line: 418, baseType: !1577, size: 768, offset: 2304)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2785, file: !535, line: 419, baseType: !1575, size: 256, offset: 3072)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2785, file: !535, line: 420, baseType: !1577, size: 768, offset: 3328)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2785, file: !535, line: 421, baseType: !1575, size: 256, offset: 4096)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2785, file: !535, line: 422, baseType: !1588, size: 1792, offset: 4352)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2785, file: !535, line: 423, baseType: !1592, size: 1920, offset: 6144)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2785, file: !535, line: 424, baseType: !1597, size: 20608, offset: 8064)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2785, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2802, file: !535, line: 447, baseType: !539, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2802, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2802, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2802, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2802, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2802, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2802, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2802, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2802, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2802, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2802, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2802, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2802, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2802, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2802, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2802, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2802, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2802, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2802, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2802, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2802, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2827, splitDebugInlining: false, nameTableKind: None)
!2826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2827 = !{!2828, !107, !109}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2830)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2831)
!2831 = !{!2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2830, file: !535, line: 447, baseType: !539, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2830, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2830, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2830, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2830, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2830, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2830, file: !535, line: 453, baseType: !1612, size: 96, offset: 192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2830, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2830, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2830, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2830, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2830, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2830, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2830, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2830, file: !535, line: 461, baseType: !1621, size: 64, offset: 512)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2830, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2830, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2830, file: !535, line: 464, baseType: !1625, size: 128, offset: 640)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2830, file: !535, line: 465, baseType: !1627, size: 160, offset: 768)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2830, file: !535, line: 466, baseType: !1629, size: 160, offset: 928)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2830, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2853 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2854, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2854 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2855 = !{!150, !285, !234, !987, !2856, !181, !107}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2860 = !{!2861}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !2863)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2863, file: !312, line: 479, baseType: !316, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2863, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2863, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2863, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2863, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2863, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2863, file: !312, line: 485, baseType: !851, size: 64, offset: 192)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2863, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2863, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2863, file: !312, line: 488, baseType: !851, size: 64, offset: 320)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2863, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2863, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2863, file: !312, line: 491, baseType: !851, size: 64, offset: 448)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2863, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2863, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2863, file: !312, line: 494, baseType: !851, size: 64, offset: 576)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2863, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2863, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2863, file: !312, line: 497, baseType: !851, size: 64, offset: 704)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2863, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2863, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2863, file: !312, line: 500, baseType: !851, size: 64, offset: 832)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2863, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2863, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2863, file: !312, line: 503, baseType: !851, size: 64, offset: 960)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2863, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2863, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2863, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2863, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2863, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2863, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!2896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2900, retainedTypes: !2916, splitDebugInlining: false, nameTableKind: None)
!2899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2900 = !{!2901, !2908, !2912}
!2901 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2902, line: 38, baseType: !32, size: 32, elements: !2903)
!2902 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2903 = !{!2904, !2905, !2906, !2907}
!2904 = !DIEnumerator(name: "HAL_OK", value: 0)
!2905 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2906 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2907 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2908 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 184, baseType: !32, size: 32, elements: !2909)
!2909 = !{!2910, !2911}
!2910 = !DIEnumerator(name: "RESET", value: 0)
!2911 = !DIEnumerator(name: "SET", value: 1)
!2912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !828, line: 190, baseType: !32, size: 32, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIEnumerator(name: "DISABLE", value: 0)
!2915 = !DIEnumerator(name: "ENABLE", value: 1)
!2916 = !{!107, !2917, !180, !110, !1469, !2952, !2958, !2969, !194, !2970, !111}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !2919)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !2920)
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2919, file: !312, line: 479, baseType: !316, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2919, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2919, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2919, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2919, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2919, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2919, file: !312, line: 485, baseType: !851, size: 64, offset: 192)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2919, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2919, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2919, file: !312, line: 488, baseType: !851, size: 64, offset: 320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2919, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2919, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2919, file: !312, line: 491, baseType: !851, size: 64, offset: 448)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2919, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2919, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2919, file: !312, line: 494, baseType: !851, size: 64, offset: 576)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2919, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2919, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2919, file: !312, line: 497, baseType: !851, size: 64, offset: 704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2919, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2919, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2919, file: !312, line: 500, baseType: !851, size: 64, offset: 832)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2919, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2919, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2919, file: !312, line: 503, baseType: !851, size: 64, offset: 960)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2919, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2919, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2919, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2919, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2919, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2919, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 471, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 467, size: 64, elements: !2955)
!2955 = !{!2956, !2957}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2954, file: !312, line: 469, baseType: !316, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2954, file: !312, line: 470, baseType: !316, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !2960)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2960, file: !312, line: 372, baseType: !316, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2960, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2960, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2960, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2960, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2960, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2960, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 396, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 385, size: 320, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2972, file: !312, line: 387, baseType: !316, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2972, file: !312, line: 388, baseType: !316, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2972, file: !312, line: 389, baseType: !316, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2972, file: !312, line: 390, baseType: !316, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2972, file: !312, line: 391, baseType: !316, size: 32, offset: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2972, file: !312, line: 392, baseType: !316, size: 32, offset: 160)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2972, file: !312, line: 393, baseType: !316, size: 32, offset: 192)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2972, file: !312, line: 394, baseType: !316, size: 32, offset: 224)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2972, file: !312, line: 395, baseType: !1141, size: 64, offset: 256)
!2983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2985, retainedTypes: !2986, splitDebugInlining: false, nameTableKind: None)
!2984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!2985 = !{!827}
!2986 = !{!2987, !110, !2995, !3001, !3012}
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2989)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !2990)
!2990 = !{!2991, !2992, !2993, !2994}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2989, file: !535, line: 766, baseType: !316, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2989, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2989, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2989, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 471, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 467, size: 64, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2997, file: !312, line: 469, baseType: !316, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2997, file: !312, line: 470, baseType: !316, size: 32, offset: 32)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !3003)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !3004)
!3004 = !{!3005, !3006, !3007, !3008, !3009, !3010, !3011}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3003, file: !312, line: 372, baseType: !316, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3003, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3003, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3003, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3003, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3003, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3003, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !3014)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3014, file: !312, line: 479, baseType: !316, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3014, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3014, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3014, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3014, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3014, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3014, file: !312, line: 485, baseType: !851, size: 64, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3014, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3014, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3014, file: !312, line: 488, baseType: !851, size: 64, offset: 320)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3014, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3014, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3014, file: !312, line: 491, baseType: !851, size: 64, offset: 448)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3014, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3014, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3014, file: !312, line: 494, baseType: !851, size: 64, offset: 576)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3014, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3014, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3014, file: !312, line: 497, baseType: !851, size: 64, offset: 704)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3014, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3014, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3014, file: !312, line: 500, baseType: !851, size: 64, offset: 832)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3014, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3014, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3014, file: !312, line: 503, baseType: !851, size: 64, offset: 960)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3014, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3014, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3014, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3014, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3014, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3014, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!3047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3049, splitDebugInlining: false, nameTableKind: None)
!3048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3049 = !{!107, !234}
!3050 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3051, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3052, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3051 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3052 = !{!3053, !3060, !2553, !30}
!3053 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3054, line: 14, baseType: !32, size: 32, elements: !3055)
!3054 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3055 = !{!3056, !3057, !3058, !3059}
!3056 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3057 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3058 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3059 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3054, line: 42, baseType: !32, size: 32, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3065, !3066, !3067}
!3062 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3063 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3064 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3065 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3066 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3067 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3069 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3072, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3072 = !{!22, !107, !109}
!3073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3074 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3075 = !{!"Ubuntu clang version 14.0.6"}
!3076 = !{i32 7, !"Dwarf Version", i32 4}
!3077 = !{i32 2, !"Debug Info Version", i32 3}
!3078 = !{i32 1, !"wchar_size", i32 4}
!3079 = !{i32 1, !"min_enum_size", i32 4}
!3080 = !{i32 1, !"branch-target-enforcement", i32 0}
!3081 = !{i32 1, !"sign-return-address", i32 0}
!3082 = !{i32 1, !"sign-return-address-all", i32 0}
!3083 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3084 = !{i32 7, !"frame-pointer", i32 2}
!3085 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3086, file: !3086, line: 26, type: !3087, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2505, retainedNodes: !2024)
!3086 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3087 = !DISubroutineType(types: !3088)
!3088 = !{null}
!3089 = !DILocation(line: 28, column: 1, scope: !3085)
!3090 = !{i64 2155037098, i64 2155037118, i64 2155037181}
!3091 = !DILocation(line: 29, column: 1, scope: !3085)
!3092 = !{i64 2155037513, i64 2155037533, i64 2155037596}
!3093 = !DILocation(line: 30, column: 1, scope: !3085)
!3094 = !{i64 2155037932, i64 2155037952, i64 2155038015}
!3095 = !DILocation(line: 31, column: 1, scope: !3085)
!3096 = !{i64 2155038351, i64 2155038371, i64 2155038434}
!3097 = !DILocation(line: 33, column: 1, scope: !3085)
!3098 = !{i64 2155038643, i64 2155038663, i64 2155038726}
!3099 = !DILocation(line: 35, column: 1, scope: !3085)
!3100 = !{i64 2155038968, i64 2155038988, i64 2155039051}
!3101 = !DILocation(line: 50, column: 1, scope: !3085)
!3102 = !{i64 2155039395, i64 2155039415, i64 2155039478}
!3103 = !DILocation(line: 54, column: 1, scope: !3085)
!3104 = !{i64 2155039834, i64 2155039854, i64 2155039917}
!3105 = !DILocation(line: 61, column: 1, scope: !3085)
!3106 = !{i64 2155040151, i64 2155040171, i64 2155040234}
!3107 = !DILocation(line: 63, column: 1, scope: !3085)
!3108 = !{i64 2155040531, i64 2155040551, i64 2155040614}
!3109 = !DILocation(line: 64, column: 1, scope: !3085)
!3110 = !{i64 2155041053, i64 2155041073, i64 2155041136}
!3111 = !DILocation(line: 65, column: 1, scope: !3085)
!3112 = !{i64 2155045612, i64 2155045632, i64 2155045695}
!3113 = !DILocation(line: 66, column: 1, scope: !3085)
!3114 = !{i64 2155046094, i64 2155046114, i64 2155046177}
!3115 = !DILocation(line: 67, column: 1, scope: !3085)
!3116 = !{i64 2155046601, i64 2155046621, i64 2155046684}
!3117 = !DILocation(line: 68, column: 1, scope: !3085)
!3118 = !{i64 2155047089, i64 2155047109, i64 2155047172}
!3119 = !DILocation(line: 70, column: 1, scope: !3085)
!3120 = !{i64 2155047557, i64 2155047577, i64 2155047640}
!3121 = !DILocation(line: 71, column: 1, scope: !3085)
!3122 = !{i64 2155047999, i64 2155048019, i64 2155048082}
!3123 = !DILocation(line: 72, column: 1, scope: !3085)
!3124 = !{i64 2155048457, i64 2155048477, i64 2155048540}
!3125 = !DILocation(line: 79, column: 1, scope: !3085)
!3126 = !{i64 2155048911, i64 2155048931, i64 2155048994}
!3127 = !DILocation(line: 80, column: 1, scope: !3085)
!3128 = !{i64 2155049422, i64 2155049442, i64 2155049505}
!3129 = !DILocation(line: 82, column: 1, scope: !3085)
!3130 = !{i64 2155049913, i64 2155049933, i64 2155049996}
!3131 = !DILocation(line: 97, column: 1, scope: !3085)
!3132 = !{i64 2155050250, i64 2155050270, i64 2155050333}
!3133 = !DILocation(line: 99, column: 1, scope: !3085)
!3134 = !{i64 2155050468, i64 2155050488, i64 2155050551}
!3135 = !DILocation(line: 102, column: 1, scope: !3085)
!3136 = !{i64 2155050725, i64 2155050745, i64 2155050808}
!3137 = !DILocation(line: 105, column: 1, scope: !3085)
!3138 = !{i64 2155050965, i64 2155050985, i64 2155051048}
!3139 = !DILocation(line: 115, column: 1, scope: !3085)
!3140 = !{i64 2155051304, i64 2155051324, i64 2155051387}
!3141 = !DILocation(line: 118, column: 1, scope: !3085)
!3142 = !{i64 2155051648, i64 2155051668, i64 2155051731}
!3143 = !DILocation(line: 32, column: 1, scope: !3144)
!3144 = !DILexicalBlockFile(scope: !3085, file: !3145, discriminator: 0)
!3145 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3146 = !{i64 2155052004, i64 2155052024, i64 2155052087}
!3147 = !DILocation(line: 33, column: 1, scope: !3144)
!3148 = !{i64 2155052516, i64 2155052536, i64 2155052599}
!3149 = !DILocation(line: 53, column: 1, scope: !3144)
!3150 = !{i64 2155053024, i64 2155053044, i64 2155053107}
!3151 = !DILocation(line: 54, column: 1, scope: !3144)
!3152 = !{i64 2155053442, i64 2155053462, i64 2155053525}
!3153 = !DILocation(line: 55, column: 1, scope: !3144)
!3154 = !{i64 2155053860, i64 2155053880, i64 2155053943}
!3155 = !DILocation(line: 56, column: 1, scope: !3144)
!3156 = !{i64 2155054278, i64 2155054298, i64 2155054361}
!3157 = !DILocation(line: 57, column: 1, scope: !3144)
!3158 = !{i64 2155054696, i64 2155054716, i64 2155054779}
!3159 = !DILocation(line: 58, column: 1, scope: !3144)
!3160 = !{i64 2155059175, i64 2155059195, i64 2155059258}
!3161 = !DILocation(line: 59, column: 1, scope: !3144)
!3162 = !{i64 2155059593, i64 2155059613, i64 2155059676}
!3163 = !DILocation(line: 60, column: 1, scope: !3144)
!3164 = !{i64 2155060017, i64 2155060037, i64 2155060100}
!3165 = !DILocation(line: 61, column: 1, scope: !3144)
!3166 = !{i64 2155060334, i64 2155060354, i64 2155060417}
!3167 = !DILocation(line: 70, column: 1, scope: !3144)
!3168 = !{i64 2155060563, i64 2155060583, i64 2155060646}
!3169 = !DILocation(line: 72, column: 1, scope: !3144)
!3170 = !{i64 2155060895, i64 2155060915, i64 2155060978}
!3171 = !DILocation(line: 73, column: 1, scope: !3144)
!3172 = !{i64 2155061345, i64 2155061365, i64 2155061428}
!3173 = !DILocation(line: 74, column: 1, scope: !3144)
!3174 = !{i64 2155061795, i64 2155061815, i64 2155061878}
!3175 = !DILocation(line: 75, column: 1, scope: !3144)
!3176 = !{i64 2155062245, i64 2155062265, i64 2155062328}
!3177 = !DILocation(line: 76, column: 1, scope: !3144)
!3178 = !{i64 2155062695, i64 2155062715, i64 2155062778}
!3179 = !DILocation(line: 77, column: 1, scope: !3144)
!3180 = !{i64 2155063145, i64 2155063165, i64 2155063228}
!3181 = !DILocation(line: 78, column: 1, scope: !3144)
!3182 = !{i64 2155063595, i64 2155063615, i64 2155063678}
!3183 = !DILocation(line: 79, column: 1, scope: !3144)
!3184 = !{i64 2155064045, i64 2155064065, i64 2155064128}
!3185 = !DILocation(line: 80, column: 1, scope: !3144)
!3186 = !{i64 2155064498, i64 2155064518, i64 2155064581}
!3187 = !DILocation(line: 84, column: 1, scope: !3144)
!3188 = !{i64 2155064830, i64 2155064850, i64 2155064913}
!3189 = !DILocation(line: 91, column: 1, scope: !3144)
!3190 = !{i64 2155065227, i64 2155065247, i64 2155065310}
!3191 = !DILocation(line: 93, column: 1, scope: !3144)
!3192 = !{i64 2155065594, i64 2155065614, i64 2155065677}
!3193 = !DILocation(line: 106, column: 1, scope: !3144)
!3194 = !{i64 2155065864, i64 2155065884, i64 2155065947}
!3195 = !DILocation(line: 11, column: 1, scope: !3196)
!3196 = !DILexicalBlockFile(scope: !3085, file: !3197, discriminator: 0)
!3197 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3198 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3199, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3201)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{null, !107, !107, !107}
!3201 = !{!3202, !3203, !3204, !3205, !3206}
!3202 = !DILocalVariable(name: "p1", arg: 1, scope: !3198, file: !116, line: 25, type: !107)
!3203 = !DILocalVariable(name: "p2", arg: 2, scope: !3198, file: !116, line: 25, type: !107)
!3204 = !DILocalVariable(name: "p3", arg: 3, scope: !3198, file: !116, line: 25, type: !107)
!3205 = !DILocalVariable(name: "i", scope: !3198, file: !116, line: 27, type: !109)
!3206 = !DILocalVariable(name: "my_id", scope: !3198, file: !116, line: 28, type: !102)
!3207 = !DILocation(line: 0, scope: !3198)
!3208 = !DILocation(line: 28, column: 15, scope: !3198)
!3209 = !DILocation(line: 30, column: 2, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3198, file: !116, line: 30, column: 2)
!3211 = !DILocation(line: 31, column: 3, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !116, line: 30, column: 31)
!3213 = distinct !DILexicalBlock(scope: !3210, file: !116, line: 30, column: 2)
!3214 = !DILocation(line: 32, column: 8, scope: !3212)
!3215 = !DILocation(line: 40, column: 13, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3212, file: !116, line: 40, column: 7)
!3217 = !DILocation(line: 40, column: 7, scope: !3212)
!3218 = !DILocation(line: 41, column: 4, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3216, file: !116, line: 40, column: 29)
!3220 = !DILocation(line: 43, column: 4, scope: !3219)
!3221 = !DILocation(line: 44, column: 4, scope: !3219)
!3222 = !DILocation(line: 47, column: 27, scope: !3212)
!3223 = !DILocation(line: 45, column: 3, scope: !3219)
!3224 = !DILocation(line: 46, column: 3, scope: !3212)
!3225 = !DILocation(line: 48, column: 3, scope: !3212)
!3226 = !DILocation(line: 51, column: 3, scope: !3212)
!3227 = !DILocation(line: 30, column: 27, scope: !3213)
!3228 = !DILocation(line: 30, column: 16, scope: !3213)
!3229 = distinct !{!3229, !3209, !3230}
!3230 = !DILocation(line: 52, column: 2, scope: !3210)
!3231 = !DILocation(line: 53, column: 1, scope: !3198)
!3232 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3233, file: !3233, line: 927, type: !3234, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3241)
!3233 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!109, !3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3238)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3239)
!3239 = !{!3240}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3238, file: !104, line: 66, baseType: !103, size: 64)
!3241 = !{!3242, !3243}
!3242 = !DILocalVariable(name: "mutex", arg: 1, scope: !3232, file: !3233, line: 927, type: !3236)
!3243 = !DILocalVariable(name: "timeout", arg: 2, scope: !3232, file: !3233, line: 927, type: !3237)
!3244 = !DILocation(line: 0, scope: !3232)
!3245 = !DILocation(line: 936, column: 2, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3232, file: !3233, line: 936, column: 2)
!3247 = !{i64 2154750881}
!3248 = !DILocation(line: 937, column: 9, scope: !3232)
!3249 = !DILocation(line: 937, column: 2, scope: !3232)
!3250 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3233, file: !3233, line: 976, type: !3251, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3254)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!109, !3253}
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3254 = !{!3255}
!3255 = !DILocalVariable(name: "condvar", arg: 1, scope: !3250, file: !3233, line: 976, type: !3253)
!3256 = !DILocation(line: 0, scope: !3250)
!3257 = !DILocation(line: 984, column: 2, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3250, file: !3233, line: 984, column: 2)
!3259 = !{i64 2154751085}
!3260 = !DILocation(line: 985, column: 9, scope: !3250)
!3261 = !DILocation(line: 985, column: 2, scope: !3250)
!3262 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3233, file: !3233, line: 944, type: !3263, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3265)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!109, !3236}
!3265 = !{!3266}
!3266 = !DILocalVariable(name: "mutex", arg: 1, scope: !3262, file: !3233, line: 944, type: !3236)
!3267 = !DILocation(line: 0, scope: !3262)
!3268 = !DILocation(line: 952, column: 2, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3262, file: !3233, line: 952, column: 2)
!3270 = !{i64 2154750949}
!3271 = !DILocation(line: 953, column: 9, scope: !3262)
!3272 = !DILocation(line: 953, column: 2, scope: !3262)
!3273 = distinct !DISubprogram(name: "k_sleep", scope: !3233, file: !3233, line: 91, type: !3274, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3276)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!765, !3237}
!3276 = !{!3277}
!3277 = !DILocalVariable(name: "timeout", arg: 1, scope: !3273, file: !3233, line: 91, type: !3237)
!3278 = !DILocation(line: 0, scope: !3273)
!3279 = !DILocation(line: 99, column: 2, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3273, file: !3233, line: 99, column: 2)
!3281 = !{i64 2154747513}
!3282 = !DILocation(line: 100, column: 9, scope: !3273)
!3283 = !DILocation(line: 100, column: 2, scope: !3273)
!3284 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3199, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3285)
!3285 = !{!3286, !3287, !3288, !3289}
!3286 = !DILocalVariable(name: "p1", arg: 1, scope: !3284, file: !116, line: 55, type: !107)
!3287 = !DILocalVariable(name: "p2", arg: 2, scope: !3284, file: !116, line: 55, type: !107)
!3288 = !DILocalVariable(name: "p3", arg: 3, scope: !3284, file: !116, line: 55, type: !107)
!3289 = !DILocalVariable(name: "my_id", scope: !3284, file: !116, line: 57, type: !102)
!3290 = !DILocation(line: 0, scope: !3284)
!3291 = !DILocation(line: 57, column: 15, scope: !3284)
!3292 = !DILocation(line: 59, column: 2, scope: !3284)
!3293 = !DILocation(line: 61, column: 2, scope: !3284)
!3294 = !DILocation(line: 62, column: 9, scope: !3284)
!3295 = !DILocation(line: 62, column: 15, scope: !3284)
!3296 = !DILocation(line: 62, column: 2, scope: !3284)
!3297 = !DILocation(line: 63, column: 3, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3284, file: !116, line: 62, column: 30)
!3299 = !DILocation(line: 65, column: 3, scope: !3298)
!3300 = !DILocation(line: 68, column: 27, scope: !3298)
!3301 = !DILocation(line: 67, column: 3, scope: !3298)
!3302 = distinct !{!3302, !3296, !3303}
!3303 = !DILocation(line: 69, column: 2, scope: !3284)
!3304 = !DILocation(line: 70, column: 2, scope: !3284)
!3305 = !DILocation(line: 72, column: 8, scope: !3284)
!3306 = !DILocation(line: 73, column: 2, scope: !3284)
!3307 = !DILocation(line: 74, column: 2, scope: !3284)
!3308 = !DILocation(line: 75, column: 2, scope: !3284)
!3309 = !DILocation(line: 76, column: 1, scope: !3284)
!3310 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3233, file: !3233, line: 1008, type: !3311, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3313)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!109, !3253, !3236, !3237}
!3313 = !{!3314, !3315, !3316}
!3314 = !DILocalVariable(name: "condvar", arg: 1, scope: !3310, file: !3233, line: 1008, type: !3253)
!3315 = !DILocalVariable(name: "mutex", arg: 2, scope: !3310, file: !3233, line: 1008, type: !3236)
!3316 = !DILocalVariable(name: "timeout", arg: 3, scope: !3310, file: !3233, line: 1008, type: !3237)
!3317 = !DILocation(line: 0, scope: !3310)
!3318 = !DILocation(line: 1018, column: 2, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3310, file: !3233, line: 1018, column: 2)
!3320 = !{i64 2154751221}
!3321 = !DILocation(line: 1019, column: 9, scope: !3310)
!3322 = !DILocation(line: 1019, column: 2, scope: !3310)
!3323 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3087, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3324)
!3324 = !{!3325, !3326, !3327, !3328}
!3325 = !DILocalVariable(name: "t1", scope: !3323, file: !116, line: 80, type: !102)
!3326 = !DILocalVariable(name: "t2", scope: !3323, file: !116, line: 80, type: !102)
!3327 = !DILocalVariable(name: "t3", scope: !3323, file: !116, line: 80, type: !102)
!3328 = !DILocalVariable(name: "i", scope: !3323, file: !116, line: 81, type: !109)
!3329 = !DILocation(line: 0, scope: !3323)
!3330 = !DILocation(line: 83, column: 8, scope: !3323)
!3331 = !DILocation(line: 85, column: 2, scope: !3323)
!3332 = !DILocation(line: 89, column: 2, scope: !3323)
!3333 = !DILocation(line: 93, column: 2, scope: !3323)
!3334 = !DILocation(line: 98, column: 2, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3323, file: !116, line: 98, column: 2)
!3336 = !DILocation(line: 99, column: 18, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !116, line: 98, column: 36)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !116, line: 98, column: 2)
!3339 = !DILocation(line: 99, column: 3, scope: !3337)
!3340 = !DILocation(line: 98, column: 32, scope: !3338)
!3341 = !DILocation(line: 98, column: 16, scope: !3338)
!3342 = distinct !{!3342, !3334, !3343}
!3343 = !DILocation(line: 100, column: 2, scope: !3335)
!3344 = !DILocation(line: 103, column: 22, scope: !3323)
!3345 = !DILocation(line: 102, column: 2, scope: !3323)
!3346 = !DILocation(line: 104, column: 1, scope: !3323)
!3347 = distinct !DISubprogram(name: "k_thread_create", scope: !3233, file: !3233, line: 24, type: !3348, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3356)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!3350, !266, !3351, !234, !3354, !107, !107, !107, !109, !110, !3237}
!3350 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3353, line: 44, baseType: !146)
!3353 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3353, line: 46, baseType: !3355)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 32)
!3356 = !{!3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366}
!3357 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3347, file: !3233, line: 24, type: !266)
!3358 = !DILocalVariable(name: "stack", arg: 2, scope: !3347, file: !3233, line: 24, type: !3351)
!3359 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3347, file: !3233, line: 24, type: !234)
!3360 = !DILocalVariable(name: "entry", arg: 4, scope: !3347, file: !3233, line: 24, type: !3354)
!3361 = !DILocalVariable(name: "p1", arg: 5, scope: !3347, file: !3233, line: 24, type: !107)
!3362 = !DILocalVariable(name: "p2", arg: 6, scope: !3347, file: !3233, line: 24, type: !107)
!3363 = !DILocalVariable(name: "p3", arg: 7, scope: !3347, file: !3233, line: 24, type: !107)
!3364 = !DILocalVariable(name: "prio", arg: 8, scope: !3347, file: !3233, line: 24, type: !109)
!3365 = !DILocalVariable(name: "options", arg: 9, scope: !3347, file: !3233, line: 24, type: !110)
!3366 = !DILocalVariable(name: "delay", arg: 10, scope: !3347, file: !3233, line: 24, type: !3237)
!3367 = !DILocation(line: 0, scope: !3347)
!3368 = !DILocation(line: 49, column: 2, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3347, file: !3233, line: 49, column: 2)
!3370 = !{i64 2154747309}
!3371 = !DILocation(line: 50, column: 9, scope: !3347)
!3372 = !DILocation(line: 50, column: 2, scope: !3347)
!3373 = distinct !DISubprogram(name: "k_thread_join", scope: !3233, file: !3233, line: 74, type: !3374, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3376)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!109, !266, !3237}
!3376 = !{!3377, !3378}
!3377 = !DILocalVariable(name: "thread", arg: 1, scope: !3373, file: !3233, line: 74, type: !266)
!3378 = !DILocalVariable(name: "timeout", arg: 2, scope: !3373, file: !3233, line: 74, type: !3237)
!3379 = !DILocation(line: 0, scope: !3373)
!3380 = !DILocation(line: 83, column: 2, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3373, file: !3233, line: 83, column: 2)
!3382 = !{i64 2154747445}
!3383 = !DILocation(line: 84, column: 9, scope: !3373)
!3384 = !DILocation(line: 84, column: 2, scope: !3373)
!3385 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3386, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3395)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!109, !107, !234, !110, !279, !3388}
!3388 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3389, line: 99, baseType: !3390)
!3389 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3389, line: 40, baseType: !3391)
!3391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3392)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3393)
!3393 = !{!3394}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3392, file: !288, line: 18, baseType: !107, size: 32)
!3395 = !{!3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3431, !3440, !3443, !3444, !3447, !3450, !3453, !3456, !3462}
!3396 = !DILocalVariable(name: "packaged", arg: 1, scope: !3385, file: !288, line: 233, type: !107)
!3397 = !DILocalVariable(name: "len", arg: 2, scope: !3385, file: !288, line: 233, type: !234)
!3398 = !DILocalVariable(name: "flags", arg: 3, scope: !3385, file: !288, line: 233, type: !110)
!3399 = !DILocalVariable(name: "fmt", arg: 4, scope: !3385, file: !288, line: 234, type: !279)
!3400 = !DILocalVariable(name: "ap", arg: 5, scope: !3385, file: !288, line: 234, type: !3388)
!3401 = !DILocalVariable(name: "buf0", scope: !3385, file: !288, line: 247, type: !286)
!3402 = !DILocalVariable(name: "buf", scope: !3385, file: !288, line: 248, type: !286)
!3403 = !DILocalVariable(name: "size", scope: !3385, file: !288, line: 249, type: !32)
!3404 = !DILocalVariable(name: "align", scope: !3385, file: !288, line: 250, type: !32)
!3405 = !DILocalVariable(name: "str_ptr_pos", scope: !3385, file: !288, line: 251, type: !3406)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !1807)
!3407 = !DILocalVariable(name: "str_ptr_arg", scope: !3385, file: !288, line: 252, type: !3406)
!3408 = !DILocalVariable(name: "s_idx", scope: !3385, file: !288, line: 253, type: !32)
!3409 = !DILocalVariable(name: "s_rw_cnt", scope: !3385, file: !288, line: 254, type: !32)
!3410 = !DILocalVariable(name: "s_ro_cnt", scope: !3385, file: !288, line: 255, type: !32)
!3411 = !DILocalVariable(name: "arg_idx", scope: !3385, file: !288, line: 256, type: !109)
!3412 = !DILocalVariable(name: "i", scope: !3385, file: !288, line: 257, type: !32)
!3413 = !DILocalVariable(name: "s", scope: !3385, file: !288, line: 258, type: !279)
!3414 = !DILocalVariable(name: "parsing", scope: !3385, file: !288, line: 259, type: !347)
!3415 = !DILocalVariable(name: "rws_pos_en", scope: !3385, file: !288, line: 263, type: !347)
!3416 = !DILocalVariable(name: "fros_cnt", scope: !3385, file: !288, line: 268, type: !109)
!3417 = !DILocalVariable(name: "is_str_arg", scope: !3385, file: !288, line: 269, type: !347)
!3418 = !DILocalVariable(name: "pkg_hdr", scope: !3385, file: !288, line: 270, type: !3419)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 32)
!3420 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3421, line: 78, size: 32, elements: !3422)
!3421 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3422 = !{!3423, !3430}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3420, file: !3421, line: 80, baseType: !3424, size: 32)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3421, line: 45, size: 32, elements: !3425)
!3425 = !{!3426, !3427, !3428, !3429}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3424, file: !3421, line: 47, baseType: !180, size: 8)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3424, file: !3421, line: 50, baseType: !180, size: 8, offset: 8)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3424, file: !3421, line: 53, baseType: !180, size: 8, offset: 16)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3424, file: !3421, line: 56, baseType: !180, size: 8, offset: 24)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3420, file: !3421, line: 82, baseType: !107, size: 32)
!3431 = !DILocalVariable(name: "v", scope: !3432, file: !288, line: 567, type: !3436)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !288, line: 562, column: 14)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 481, column: 18)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 466, column: 3)
!3435 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 343, column: 15)
!3436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3385, file: !288, line: 567, size: 64, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3436, file: !288, line: 567, baseType: !277, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3436, file: !288, line: 567, baseType: !275, size: 64)
!3440 = !DILocalVariable(name: "is_ro", scope: !3441, file: !288, line: 620, type: !347)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 613, column: 19)
!3442 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 613, column: 7)
!3443 = !DILocalVariable(name: "do_ro", scope: !3441, file: !288, line: 621, type: !347)
!3444 = !DILocalVariable(name: "s_ptr_idx", scope: !3445, file: !288, line: 626, type: !110)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 625, column: 11)
!3446 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 623, column: 8)
!3447 = !DILocalVariable(name: "v", scope: !3448, file: !288, line: 684, type: !109)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 683, column: 35)
!3449 = distinct !DILexicalBlock(scope: !3442, file: !288, line: 683, column: 14)
!3450 = !DILocalVariable(name: "v", scope: !3451, file: !288, line: 691, type: !102)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 690, column: 36)
!3452 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 690, column: 14)
!3453 = !DILocalVariable(name: "v", scope: !3454, file: !288, line: 698, type: !106)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 697, column: 41)
!3455 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 697, column: 14)
!3456 = !DILocalVariable(name: "pos", scope: !3457, file: !288, line: 762, type: !180)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !288, line: 757, column: 31)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 757, column: 3)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !288, line: 757, column: 3)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 756, column: 16)
!3461 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 756, column: 6)
!3462 = !DILabel(scope: !3441, name: "process_string", file: !288, line: 615)
!3463 = !DILocation(line: 0, scope: !3385)
!3464 = !DILocation(line: 251, column: 2, scope: !3385)
!3465 = !DILocation(line: 251, column: 10, scope: !3385)
!3466 = !DILocation(line: 252, column: 2, scope: !3385)
!3467 = !DILocation(line: 252, column: 10, scope: !3385)
!3468 = !DILocation(line: 263, column: 29, scope: !3385)
!3469 = !DILocation(line: 263, column: 21, scope: !3385)
!3470 = !DILocation(line: 268, column: 21, scope: !3385)
!3471 = !DILocation(line: 268, column: 19, scope: !3385)
!3472 = !DILocation(line: 273, column: 6, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 273, column: 6)
!3474 = !DILocation(line: 273, column: 26, scope: !3473)
!3475 = !DILocation(line: 273, column: 6, scope: !3385)
!3476 = !DILocation(line: 297, column: 6, scope: !3385)
!3477 = !DILocation(line: 305, column: 11, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 305, column: 6)
!3479 = !DILocation(line: 305, column: 6, scope: !3385)
!3480 = !DILocation(line: 327, column: 19, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 327, column: 6)
!3482 = !DILocation(line: 327, column: 22, scope: !3481)
!3483 = !DILocation(line: 327, column: 33, scope: !3481)
!3484 = !DILocation(line: 327, column: 50, scope: !3481)
!3485 = !DILocation(line: 327, column: 6, scope: !3385)
!3486 = !DILocation(line: 338, column: 9, scope: !3385)
!3487 = !DILocation(line: 341, column: 2, scope: !3385)
!3488 = !DILocation(line: 472, column: 8, scope: !3434)
!3489 = !DILocation(line: 473, column: 14, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !288, line: 473, column: 9)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !288, line: 472, column: 18)
!3492 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 472, column: 8)
!3493 = !DILocation(line: 473, column: 9, scope: !3491)
!3494 = !DILocation(line: 479, column: 5, scope: !3491)
!3495 = !DILocation(line: 468, column: 9, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 468, column: 8)
!3497 = !DILocation(line: 468, column: 8, scope: !3496)
!3498 = !DILocation(line: 468, column: 15, scope: !3496)
!3499 = !DILocation(line: 468, column: 8, scope: !3434)
!3500 = distinct !{!3500, !3501, !3502}
!3501 = !DILocation(line: 343, column: 2, scope: !3385)
!3502 = !DILocation(line: 712, column: 2, scope: !3385)
!3503 = !DILocation(line: 481, column: 4, scope: !3434)
!3504 = !DILocation(line: 484, column: 12, scope: !3433)
!3505 = !DILocation(line: 485, column: 5, scope: !3433)
!3506 = !DILocation(line: 505, column: 5, scope: !3433)
!3507 = !DILocation(line: 518, column: 5, scope: !3433)
!3508 = !DILocation(line: 523, column: 5, scope: !3433)
!3509 = !DILocation(line: 532, column: 9, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3433, file: !288, line: 532, column: 9)
!3511 = !DILocation(line: 532, column: 17, scope: !3510)
!3512 = !DILocation(line: 532, column: 9, scope: !3433)
!3513 = !DILocation(line: 533, column: 10, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 533, column: 10)
!3515 = distinct !DILexicalBlock(scope: !3510, file: !288, line: 532, column: 25)
!3516 = !DILocation(line: 533, column: 18, scope: !3514)
!3517 = !DILocation(line: 0, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 569, column: 9)
!3519 = !DILocation(line: 0, scope: !3432)
!3520 = !DILocation(line: 579, column: 20, scope: !3432)
!3521 = !DILocation(line: 579, column: 11, scope: !3432)
!3522 = !DILocation(line: 580, column: 9, scope: !3432)
!3523 = !DILocation(line: 582, column: 21, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !288, line: 582, column: 10)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !288, line: 580, column: 23)
!3526 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 580, column: 9)
!3527 = !DILocation(line: 582, column: 28, scope: !3524)
!3528 = !DILocation(line: 582, column: 10, scope: !3525)
!3529 = !DILocation(line: 0, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !288, line: 587, column: 17)
!3531 = distinct !DILexicalBlock(scope: !3525, file: !288, line: 585, column: 10)
!3532 = !DILocation(line: 593, column: 9, scope: !3432)
!3533 = !DILocation(line: 600, column: 5, scope: !3433)
!3534 = !DILocation(line: 605, column: 18, scope: !3435)
!3535 = !DILocation(line: 605, column: 9, scope: !3435)
!3536 = !DILocation(line: 608, column: 20, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3435, file: !288, line: 608, column: 7)
!3538 = !DILocation(line: 608, column: 23, scope: !3537)
!3539 = !DILocation(line: 608, column: 34, scope: !3537)
!3540 = !DILocation(line: 608, column: 41, scope: !3537)
!3541 = !DILocation(line: 608, column: 7, scope: !3435)
!3542 = !DILocation(line: 613, column: 7, scope: !3435)
!3543 = !DILocation(line: 614, column: 8, scope: !3441)
!3544 = !DILocation(line: 614, column: 4, scope: !3441)
!3545 = !DILocation(line: 256, column: 6, scope: !3385)
!3546 = !DILocation(line: 254, column: 15, scope: !3385)
!3547 = !DILocation(line: 320, column: 7, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3478, file: !288, line: 305, column: 20)
!3549 = !DILocation(line: 615, column: 1, scope: !3441)
!3550 = !DILocation(line: 616, column: 8, scope: !3441)
!3551 = !DILocation(line: 617, column: 5, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !288, line: 616, column: 22)
!3553 = distinct !DILexicalBlock(scope: !3441, file: !288, line: 616, column: 8)
!3554 = !DILocation(line: 617, column: 25, scope: !3552)
!3555 = !DILocation(line: 618, column: 4, scope: !3552)
!3556 = !DILocation(line: 620, column: 26, scope: !3441)
!3557 = !DILocation(line: 620, column: 29, scope: !3441)
!3558 = !DILocation(line: 620, column: 17, scope: !3441)
!3559 = !DILocation(line: 620, column: 43, scope: !3441)
!3560 = !DILocation(line: 0, scope: !3441)
!3561 = !DILocation(line: 623, column: 14, scope: !3446)
!3562 = !DILocation(line: 626, column: 26, scope: !3445)
!3563 = !DILocation(line: 626, column: 37, scope: !3445)
!3564 = !DILocation(line: 0, scope: !3445)
!3565 = !DILocation(line: 634, column: 15, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 634, column: 9)
!3567 = !DILocation(line: 635, column: 6, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !288, line: 635, column: 6)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !288, line: 635, column: 6)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !288, line: 635, column: 6)
!3571 = distinct !DILexicalBlock(scope: !3566, file: !288, line: 634, column: 44)
!3572 = !DILocation(line: 639, column: 15, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 639, column: 9)
!3574 = !DILocation(line: 639, column: 9, scope: !3445)
!3575 = !DILocation(line: 640, column: 6, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 640, column: 6)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !288, line: 640, column: 6)
!3578 = distinct !DILexicalBlock(scope: !3579, file: !288, line: 640, column: 6)
!3579 = distinct !DILexicalBlock(scope: !3573, file: !288, line: 639, column: 43)
!3580 = !DILocation(line: 644, column: 9, scope: !3445)
!3581 = !DILocation(line: 649, column: 27, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !288, line: 644, column: 23)
!3583 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 644, column: 9)
!3584 = !DILocation(line: 649, column: 6, scope: !3582)
!3585 = !DILocation(line: 649, column: 25, scope: !3582)
!3586 = !DILocation(line: 650, column: 27, scope: !3582)
!3587 = !DILocation(line: 650, column: 6, scope: !3582)
!3588 = !DILocation(line: 650, column: 25, scope: !3582)
!3589 = !DILocation(line: 651, column: 10, scope: !3582)
!3590 = !DILocation(line: 653, column: 26, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 651, column: 17)
!3592 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 651, column: 10)
!3593 = !DILocation(line: 654, column: 15, scope: !3591)
!3594 = !DILocation(line: 655, column: 6, scope: !3591)
!3595 = !DILocation(line: 656, column: 15, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 655, column: 13)
!3597 = !DILocation(line: 658, column: 16, scope: !3583)
!3598 = !DILocation(line: 663, column: 10, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !288, line: 658, column: 23)
!3600 = distinct !DILexicalBlock(scope: !3583, file: !288, line: 658, column: 16)
!3601 = !DILocation(line: 664, column: 5, scope: !3599)
!3602 = !DILocation(line: 664, column: 16, scope: !3600)
!3603 = !DILocation(line: 669, column: 10, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !288, line: 664, column: 28)
!3605 = distinct !DILexicalBlock(scope: !3600, file: !288, line: 664, column: 16)
!3606 = !DILocation(line: 670, column: 5, scope: !3604)
!3607 = !DILocation(line: 675, column: 13, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3605, file: !288, line: 670, column: 12)
!3609 = !DILocation(line: 675, column: 27, scope: !3608)
!3610 = !DILocation(line: 675, column: 10, scope: !3608)
!3611 = !DILocation(line: 678, column: 10, scope: !3445)
!3612 = !DILocation(line: 680, column: 8, scope: !3441)
!3613 = !DILocation(line: 683, column: 14, scope: !3442)
!3614 = !DILocation(line: 684, column: 12, scope: !3448)
!3615 = !DILocation(line: 0, scope: !3448)
!3616 = !DILocation(line: 686, column: 8, scope: !3448)
!3617 = !DILocation(line: 687, column: 5, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !288, line: 686, column: 22)
!3619 = distinct !DILexicalBlock(scope: !3448, file: !288, line: 686, column: 8)
!3620 = !DILocation(line: 687, column: 17, scope: !3618)
!3621 = !DILocation(line: 688, column: 4, scope: !3618)
!3622 = !DILocation(line: 698, column: 18, scope: !3454)
!3623 = !DILocation(line: 0, scope: !3454)
!3624 = !DILocation(line: 700, column: 8, scope: !3454)
!3625 = !DILocation(line: 704, column: 6, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !288, line: 703, column: 12)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !288, line: 701, column: 9)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !288, line: 700, column: 22)
!3629 = distinct !DILexicalBlock(scope: !3454, file: !288, line: 700, column: 8)
!3630 = !DILocation(line: 704, column: 24, scope: !3626)
!3631 = !DILocation(line: 706, column: 4, scope: !3628)
!3632 = !DILocation(line: 709, column: 4, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !288, line: 709, column: 4)
!3634 = distinct !DILexicalBlock(scope: !3635, file: !288, line: 709, column: 4)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !288, line: 709, column: 4)
!3636 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 708, column: 10)
!3637 = !DILocation(line: 0, scope: !3449)
!3638 = !DILocation(line: 0, scope: !3435)
!3639 = !DILocation(line: 720, column: 6, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 720, column: 6)
!3641 = !DILocation(line: 720, column: 17, scope: !3640)
!3642 = !DILocation(line: 720, column: 31, scope: !3640)
!3643 = !DILocation(line: 720, column: 6, scope: !3385)
!3644 = !DILocation(line: 721, column: 3, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !288, line: 721, column: 3)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !288, line: 721, column: 3)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !288, line: 721, column: 3)
!3648 = distinct !DILexicalBlock(scope: !3640, file: !288, line: 720, column: 38)
!3649 = !DILocation(line: 729, column: 6, scope: !3385)
!3650 = !DILocation(line: 730, column: 21, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !288, line: 729, column: 20)
!3652 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 729, column: 6)
!3653 = !DILocation(line: 730, column: 27, scope: !3651)
!3654 = !DILocation(line: 730, column: 3, scope: !3651)
!3655 = !DILocation(line: 737, column: 22, scope: !3385)
!3656 = !DILocation(line: 737, column: 20, scope: !3385)
!3657 = !DILocation(line: 0, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 739, column: 6)
!3659 = !DILocation(line: 745, column: 17, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3658, file: !288, line: 743, column: 9)
!3661 = !DILocation(line: 745, column: 25, scope: !3660)
!3662 = !DILocation(line: 746, column: 17, scope: !3660)
!3663 = !DILocation(line: 746, column: 28, scope: !3660)
!3664 = !DILocation(line: 749, column: 29, scope: !3385)
!3665 = !DILocation(line: 749, column: 16, scope: !3385)
!3666 = !DILocation(line: 749, column: 27, scope: !3385)
!3667 = !DILocation(line: 756, column: 6, scope: !3461)
!3668 = !DILocation(line: 756, column: 6, scope: !3385)
!3669 = !DILocation(line: 757, column: 3, scope: !3459)
!3670 = !DILocation(line: 758, column: 10, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3457, file: !288, line: 758, column: 8)
!3672 = !DILocation(line: 758, column: 25, scope: !3671)
!3673 = !DILocation(line: 758, column: 8, scope: !3457)
!3674 = !DILocation(line: 0, scope: !3457)
!3675 = !DILocation(line: 765, column: 8, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3457, file: !288, line: 765, column: 8)
!3677 = !DILocation(line: 765, column: 19, scope: !3676)
!3678 = !DILocation(line: 765, column: 23, scope: !3676)
!3679 = !DILocation(line: 765, column: 8, scope: !3457)
!3680 = !DILocation(line: 762, column: 33, scope: !3457)
!3681 = !DILocation(line: 769, column: 8, scope: !3457)
!3682 = !DILocation(line: 769, column: 11, scope: !3457)
!3683 = !DILocation(line: 757, column: 27, scope: !3458)
!3684 = !DILocation(line: 757, column: 17, scope: !3458)
!3685 = distinct !{!3685, !3669, !3686}
!3686 = !DILocation(line: 770, column: 3, scope: !3459)
!3687 = !DILocation(line: 774, column: 16, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !288, line: 774, column: 2)
!3689 = distinct !DILexicalBlock(scope: !3385, file: !288, line: 774, column: 2)
!3690 = !DILocation(line: 774, column: 2, scope: !3689)
!3691 = !DILocation(line: 776, column: 16, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !288, line: 776, column: 7)
!3693 = distinct !DILexicalBlock(scope: !3688, file: !288, line: 774, column: 30)
!3694 = !DILocation(line: 776, column: 19, scope: !3692)
!3695 = !DILocation(line: 776, column: 34, scope: !3692)
!3696 = !DILocation(line: 776, column: 7, scope: !3693)
!3697 = !DILocation(line: 780, column: 7, scope: !3693)
!3698 = !DILocation(line: 782, column: 13, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 780, column: 19)
!3700 = distinct !DILexicalBlock(scope: !3693, file: !288, line: 780, column: 7)
!3701 = !DILocation(line: 782, column: 8, scope: !3699)
!3702 = !DILocation(line: 782, column: 11, scope: !3699)
!3703 = !DILocation(line: 783, column: 3, scope: !3699)
!3704 = !DILocation(line: 785, column: 26, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !3700, file: !288, line: 783, column: 10)
!3706 = !DILocation(line: 785, column: 41, scope: !3705)
!3707 = !DILocation(line: 785, column: 24, scope: !3705)
!3708 = !DILocation(line: 785, column: 8, scope: !3705)
!3709 = !DILocation(line: 787, column: 52, scope: !3705)
!3710 = !DILocation(line: 789, column: 11, scope: !3705)
!3711 = !DILocation(line: 789, column: 21, scope: !3705)
!3712 = !DILocation(line: 0, scope: !3700)
!3713 = !DILocation(line: 793, column: 7, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3693, file: !288, line: 793, column: 7)
!3715 = !DILocation(line: 793, column: 18, scope: !3714)
!3716 = !DILocation(line: 793, column: 22, scope: !3714)
!3717 = !DILocation(line: 793, column: 29, scope: !3714)
!3718 = !DILocation(line: 793, column: 7, scope: !3693)
!3719 = !DILocation(line: 797, column: 12, scope: !3693)
!3720 = !DILocation(line: 797, column: 7, scope: !3693)
!3721 = !DILocation(line: 797, column: 10, scope: !3693)
!3722 = !DILocation(line: 799, column: 3, scope: !3693)
!3723 = !DILocation(line: 800, column: 7, scope: !3693)
!3724 = !DILocation(line: 801, column: 2, scope: !3693)
!3725 = !DILocation(line: 338, column: 4, scope: !3385)
!3726 = !DILocation(line: 774, column: 26, scope: !3688)
!3727 = distinct !{!3727, !3690, !3728}
!3728 = !DILocation(line: 801, column: 2, scope: !3689)
!3729 = !DILocation(line: 808, column: 9, scope: !3385)
!3730 = !DILocation(line: 808, column: 2, scope: !3385)
!3731 = !DILocation(line: 813, column: 1, scope: !3385)
!3732 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3733, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3735)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!347, !279}
!3735 = !{!3736}
!3736 = !DILocalVariable(name: "addr", arg: 1, scope: !3732, file: !288, line: 33, type: !279)
!3737 = !DILocation(line: 0, scope: !3732)
!3738 = !DILocation(line: 41, column: 9, scope: !3732)
!3739 = !DILocation(line: 41, column: 2, scope: !3732)
!3740 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3741, file: !3741, line: 24, type: !3742, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3744)
!3741 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!347, !13}
!3744 = !{!3745}
!3745 = !DILocalVariable(name: "addr", arg: 1, scope: !3740, file: !3741, line: 24, type: !13)
!3746 = !DILocation(line: 0, scope: !3740)
!3747 = !DILocation(line: 49, column: 30, scope: !3740)
!3748 = !DILocation(line: 49, column: 57, scope: !3740)
!3749 = !DILocation(line: 49, column: 2, scope: !3740)
!3750 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3751, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3753)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!109, !107, !234, !110, !279, null}
!3753 = !{!3754, !3755, !3756, !3757, !3758, !3759}
!3754 = !DILocalVariable(name: "packaged", arg: 1, scope: !3750, file: !288, line: 815, type: !107)
!3755 = !DILocalVariable(name: "len", arg: 2, scope: !3750, file: !288, line: 815, type: !234)
!3756 = !DILocalVariable(name: "flags", arg: 3, scope: !3750, file: !288, line: 815, type: !110)
!3757 = !DILocalVariable(name: "format", arg: 4, scope: !3750, file: !288, line: 816, type: !279)
!3758 = !DILocalVariable(name: "ap", scope: !3750, file: !288, line: 818, type: !3388)
!3759 = !DILocalVariable(name: "ret", scope: !3750, file: !288, line: 819, type: !109)
!3760 = !DILocation(line: 0, scope: !3750)
!3761 = !DILocation(line: 818, column: 2, scope: !3750)
!3762 = !DILocation(line: 818, column: 10, scope: !3750)
!3763 = !DILocation(line: 821, column: 2, scope: !3750)
!3764 = !DILocation(line: 822, column: 8, scope: !3750)
!3765 = !DILocation(line: 823, column: 2, scope: !3750)
!3766 = !DILocation(line: 825, column: 1, scope: !3750)
!3767 = !DILocation(line: 824, column: 2, scope: !3750)
!3768 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3769, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3779)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!109, !3771, !3775, !107, !107}
!3771 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3421, line: 297, baseType: !3772)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 32)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!109, null}
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3421, line: 328, baseType: !3776)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 32)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!109, !3771, !107, !279, !3388}
!3779 = !{!3780, !3781, !3782, !3783, !3784, !3785, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798}
!3780 = !DILocalVariable(name: "out", arg: 1, scope: !3768, file: !288, line: 827, type: !3771)
!3781 = !DILocalVariable(name: "formatter", arg: 2, scope: !3768, file: !288, line: 828, type: !3775)
!3782 = !DILocalVariable(name: "ctx", arg: 3, scope: !3768, file: !288, line: 829, type: !107)
!3783 = !DILocalVariable(name: "packaged", arg: 4, scope: !3768, file: !288, line: 829, type: !107)
!3784 = !DILocalVariable(name: "buf", scope: !3768, file: !288, line: 831, type: !286)
!3785 = !DILocalVariable(name: "hdr", scope: !3768, file: !288, line: 832, type: !3786)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 32)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3421, line: 96, size: 64, elements: !3788)
!3788 = !{!3789, !3790}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3787, file: !3421, line: 98, baseType: !3420, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3787, file: !3421, line: 101, baseType: !285, size: 32, offset: 32)
!3791 = !DILocalVariable(name: "s", scope: !3768, file: !288, line: 833, type: !285)
!3792 = !DILocalVariable(name: "ps", scope: !3768, file: !288, line: 833, type: !284)
!3793 = !DILocalVariable(name: "i", scope: !3768, file: !288, line: 834, type: !32)
!3794 = !DILocalVariable(name: "args_size", scope: !3768, file: !288, line: 834, type: !32)
!3795 = !DILocalVariable(name: "s_nbr", scope: !3768, file: !288, line: 834, type: !32)
!3796 = !DILocalVariable(name: "ros_nbr", scope: !3768, file: !288, line: 834, type: !32)
!3797 = !DILocalVariable(name: "rws_nbr", scope: !3768, file: !288, line: 834, type: !32)
!3798 = !DILocalVariable(name: "s_idx", scope: !3768, file: !288, line: 834, type: !32)
!3799 = !DILocation(line: 0, scope: !3768)
!3800 = !DILocation(line: 836, column: 10, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3768, file: !288, line: 836, column: 6)
!3802 = !DILocation(line: 836, column: 6, scope: !3768)
!3803 = !DILocation(line: 842, column: 28, scope: !3768)
!3804 = !DILocation(line: 842, column: 14, scope: !3768)
!3805 = !DILocation(line: 852, column: 16, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3807, file: !288, line: 852, column: 2)
!3807 = distinct !DILexicalBlock(scope: !3768, file: !288, line: 852, column: 2)
!3808 = !DILocation(line: 852, column: 2, scope: !3807)
!3809 = !DILocation(line: 841, column: 28, scope: !3768)
!3810 = !DILocation(line: 841, column: 14, scope: !3768)
!3811 = !DILocation(line: 841, column: 32, scope: !3768)
!3812 = !DILocation(line: 847, column: 19, scope: !3768)
!3813 = !DILocation(line: 843, column: 28, scope: !3768)
!3814 = !DILocation(line: 843, column: 14, scope: !3768)
!3815 = !DILocation(line: 847, column: 31, scope: !3768)
!3816 = !DILocation(line: 844, column: 28, scope: !3768)
!3817 = !DILocation(line: 844, column: 14, scope: !3768)
!3818 = !DILocation(line: 847, column: 45, scope: !3768)
!3819 = !DILocation(line: 847, column: 41, scope: !3768)
!3820 = !DILocation(line: 854, column: 24, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3806, file: !288, line: 852, column: 30)
!3822 = !DILocation(line: 854, column: 11, scope: !3821)
!3823 = !DILocation(line: 855, column: 30, scope: !3821)
!3824 = !DILocation(line: 855, column: 22, scope: !3821)
!3825 = !DILocation(line: 855, column: 8, scope: !3821)
!3826 = !DILocation(line: 857, column: 7, scope: !3821)
!3827 = !DILocation(line: 859, column: 8, scope: !3821)
!3828 = !DILocation(line: 859, column: 18, scope: !3821)
!3829 = !DILocation(line: 859, column: 5, scope: !3821)
!3830 = !DILocation(line: 852, column: 26, scope: !3806)
!3831 = distinct !{!3831, !3808, !3832}
!3832 = !DILocation(line: 860, column: 2, scope: !3807)
!3833 = !DILocation(line: 863, column: 6, scope: !3768)
!3834 = !DILocation(line: 866, column: 56, scope: !3768)
!3835 = !DILocation(line: 866, column: 9, scope: !3768)
!3836 = !DILocation(line: 866, column: 2, scope: !3768)
!3837 = !DILocation(line: 867, column: 1, scope: !3768)
!3838 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3839, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!109, !3771, !3775, !107, !279, !107}
!3841 = !{!3842, !3843, !3844, !3845, !3846, !3847}
!3842 = !DILocalVariable(name: "out", arg: 1, scope: !3838, file: !288, line: 179, type: !3771)
!3843 = !DILocalVariable(name: "formatter", arg: 2, scope: !3838, file: !288, line: 180, type: !3775)
!3844 = !DILocalVariable(name: "ctx", arg: 3, scope: !3838, file: !288, line: 181, type: !107)
!3845 = !DILocalVariable(name: "fmt", arg: 4, scope: !3838, file: !288, line: 182, type: !279)
!3846 = !DILocalVariable(name: "buf", arg: 5, scope: !3838, file: !288, line: 182, type: !107)
!3847 = !DILocalVariable(name: "u", scope: !3838, file: !288, line: 187, type: !3848)
!3848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3838, file: !288, line: 184, size: 32, elements: !3849)
!3849 = !{!3850, !3851}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3848, file: !288, line: 185, baseType: !3388, size: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3848, file: !288, line: 186, baseType: !107, size: 32)
!3852 = !DILocation(line: 0, scope: !3838)
!3853 = !DILocation(line: 191, column: 9, scope: !3838)
!3854 = !DILocation(line: 191, column: 2, scope: !3838)
!3855 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3856, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3858)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{!347, !279, !109}
!3858 = !{!3859, !3860, !3861, !3862, !3863}
!3859 = !DILocalVariable(name: "fmt", arg: 1, scope: !3855, file: !288, line: 881, type: !279)
!3860 = !DILocalVariable(name: "n", arg: 2, scope: !3855, file: !288, line: 881, type: !109)
!3861 = !DILocalVariable(name: "c", scope: !3855, file: !288, line: 883, type: !150)
!3862 = !DILocalVariable(name: "mod", scope: !3855, file: !288, line: 884, type: !347)
!3863 = !DILocalVariable(name: "cnt", scope: !3855, file: !288, line: 885, type: !109)
!3864 = !DILocation(line: 0, scope: !3855)
!3865 = !DILocation(line: 887, column: 14, scope: !3855)
!3866 = !DILocation(line: 887, column: 22, scope: !3855)
!3867 = !DILocation(line: 887, column: 2, scope: !3855)
!3868 = !DILocation(line: 887, column: 18, scope: !3855)
!3869 = !DILocation(line: 888, column: 7, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3855, file: !288, line: 887, column: 31)
!3871 = !DILocation(line: 889, column: 12, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 889, column: 8)
!3873 = distinct !DILexicalBlock(scope: !3874, file: !288, line: 888, column: 12)
!3874 = distinct !DILexicalBlock(scope: !3870, file: !288, line: 888, column: 7)
!3875 = !DILocation(line: 889, column: 8, scope: !3873)
!3876 = !DILocation(line: 890, column: 11, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !288, line: 890, column: 9)
!3878 = distinct !DILexicalBlock(scope: !3872, file: !288, line: 889, column: 18)
!3879 = !DILocation(line: 890, column: 9, scope: !3878)
!3880 = !DILocation(line: 892, column: 16, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 892, column: 16)
!3882 = !DILocation(line: 892, column: 16, scope: !3877)
!3883 = !DILocation(line: 895, column: 15, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3872, file: !288, line: 895, column: 15)
!3885 = !DILocation(line: 895, column: 15, scope: !3872)
!3886 = !DILocation(line: 900, column: 9, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3870, file: !288, line: 900, column: 7)
!3888 = !DILocation(line: 900, column: 7, scope: !3870)
!3889 = distinct !{!3889, !3867, !3890}
!3890 = !DILocation(line: 903, column: 2, scope: !3855)
!3891 = !DILocation(line: 906, column: 1, scope: !3855)
!3892 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3893, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3895)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!347, !150}
!3895 = !{!3896}
!3896 = !DILocalVariable(name: "c", arg: 1, scope: !3892, file: !288, line: 873, type: !150)
!3897 = !DILocation(line: 0, scope: !3892)
!3898 = !DILocation(line: 875, column: 19, scope: !3892)
!3899 = !DILocation(line: 875, column: 2, scope: !3892)
!3900 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3901, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3907)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!109, !107, !234, !3903, !107, !110, !2779, !234}
!3903 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3421, line: 308, baseType: !3904)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 32)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!109, !13, !234, !107}
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3925, !3926, !3927, !3928, !3929, !3935, !3938, !3939, !3940, !3942, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3958, !3961, !3962, !3963, !3964, !3965, !3966, !3968, !3971, !3972, !3973}
!3908 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3900, file: !288, line: 908, type: !107)
!3909 = !DILocalVariable(name: "in_len", arg: 2, scope: !3900, file: !288, line: 909, type: !234)
!3910 = !DILocalVariable(name: "cb", arg: 3, scope: !3900, file: !288, line: 910, type: !3903)
!3911 = !DILocalVariable(name: "ctx", arg: 4, scope: !3900, file: !288, line: 911, type: !107)
!3912 = !DILocalVariable(name: "flags", arg: 5, scope: !3900, file: !288, line: 912, type: !110)
!3913 = !DILocalVariable(name: "strl", arg: 6, scope: !3900, file: !288, line: 913, type: !2779)
!3914 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3900, file: !288, line: 914, type: !234)
!3915 = !DILocalVariable(name: "buf", scope: !3900, file: !288, line: 918, type: !286)
!3916 = !DILocalVariable(name: "buf32", scope: !3900, file: !288, line: 919, type: !882)
!3917 = !DILocalVariable(name: "args_size", scope: !3900, file: !288, line: 920, type: !32)
!3918 = !DILocalVariable(name: "ros_nbr", scope: !3900, file: !288, line: 920, type: !32)
!3919 = !DILocalVariable(name: "rws_nbr", scope: !3900, file: !288, line: 920, type: !32)
!3920 = !DILocalVariable(name: "fmt_present", scope: !3900, file: !288, line: 921, type: !347)
!3921 = !DILocalVariable(name: "rw_cpy", scope: !3900, file: !288, line: 922, type: !347)
!3922 = !DILocalVariable(name: "ro_cpy", scope: !3900, file: !288, line: 923, type: !347)
!3923 = !DILocalVariable(name: "in_desc", scope: !3900, file: !288, line: 924, type: !3924)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 32)
!3925 = !DILocalVariable(name: "out_len", scope: !3900, file: !288, line: 960, type: !109)
!3926 = !DILocalVariable(name: "fmt", scope: !3900, file: !288, line: 965, type: !279)
!3927 = !DILocalVariable(name: "str_pos", scope: !3900, file: !288, line: 966, type: !286)
!3928 = !DILocalVariable(name: "strl_cnt", scope: !3900, file: !288, line: 967, type: !234)
!3929 = !DILocalVariable(name: "i", scope: !3930, file: !288, line: 973, type: !109)
!3930 = distinct !DILexicalBlock(scope: !3931, file: !288, line: 973, column: 4)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !288, line: 972, column: 15)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !288, line: 972, column: 7)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !288, line: 970, column: 18)
!3934 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 970, column: 6)
!3935 = !DILocalVariable(name: "str", scope: !3936, file: !288, line: 974, type: !279)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !288, line: 973, column: 38)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !288, line: 973, column: 4)
!3938 = !DILocalVariable(name: "len", scope: !3936, file: !288, line: 975, type: !109)
!3939 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3933, file: !288, line: 990, type: !347)
!3940 = !DILocalVariable(name: "i", scope: !3941, file: !288, line: 995, type: !109)
!3941 = distinct !DILexicalBlock(scope: !3933, file: !288, line: 995, column: 3)
!3942 = !DILocalVariable(name: "arg_idx", scope: !3943, file: !288, line: 996, type: !180)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 995, column: 37)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !288, line: 995, column: 3)
!3945 = !DILocalVariable(name: "arg_pos", scope: !3943, file: !288, line: 997, type: !180)
!3946 = !DILocalVariable(name: "str", scope: !3943, file: !288, line: 998, type: !279)
!3947 = !DILocalVariable(name: "is_ro", scope: !3943, file: !288, line: 999, type: !347)
!3948 = !DILocalVariable(name: "len", scope: !3943, file: !288, line: 1000, type: !109)
!3949 = !DILocalVariable(name: "out_desc", scope: !3900, file: !288, line: 1038, type: !3424)
!3950 = !DILocalVariable(name: "cpy_str_pos", scope: !3900, file: !288, line: 1040, type: !3406)
!3951 = !DILocalVariable(name: "keep_str_pos", scope: !3900, file: !288, line: 1042, type: !3406)
!3952 = !DILocalVariable(name: "scpy_cnt", scope: !3900, file: !288, line: 1043, type: !180)
!3953 = !DILocalVariable(name: "keep_cnt", scope: !3900, file: !288, line: 1044, type: !180)
!3954 = !DILocalVariable(name: "dst", scope: !3900, file: !288, line: 1045, type: !286)
!3955 = !DILocalVariable(name: "rv", scope: !3900, file: !288, line: 1046, type: !109)
!3956 = !DILocalVariable(name: "i", scope: !3957, file: !288, line: 1074, type: !109)
!3957 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1074, column: 2)
!3958 = !DILocalVariable(name: "arg_idx", scope: !3959, file: !288, line: 1075, type: !180)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !288, line: 1074, column: 36)
!3960 = distinct !DILexicalBlock(scope: !3957, file: !288, line: 1074, column: 2)
!3961 = !DILocalVariable(name: "arg_pos", scope: !3959, file: !288, line: 1076, type: !180)
!3962 = !DILocalVariable(name: "str", scope: !3959, file: !288, line: 1077, type: !279)
!3963 = !DILocalVariable(name: "is_ro", scope: !3959, file: !288, line: 1078, type: !347)
!3964 = !DILocalVariable(name: "in_desc_backup", scope: !3900, file: !288, line: 1114, type: !3424)
!3965 = !DILocalVariable(name: "strs_len", scope: !3900, file: !288, line: 1134, type: !234)
!3966 = !DILocalVariable(name: "i", scope: !3967, file: !288, line: 1143, type: !109)
!3967 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1143, column: 2)
!3968 = !DILocalVariable(name: "loc", scope: !3969, file: !288, line: 1144, type: !180)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1143, column: 37)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !288, line: 1143, column: 2)
!3971 = !DILocalVariable(name: "str", scope: !3969, file: !288, line: 1145, type: !279)
!3972 = !DILocalVariable(name: "str_len", scope: !3969, file: !288, line: 1146, type: !194)
!3973 = !DILabel(scope: !3974, name: "calculate_string_length", file: !288, line: 1021)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !288, line: 1020, column: 56)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !288, line: 1020, column: 15)
!3976 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 1014, column: 8)
!3977 = !DILocation(line: 0, scope: !3900)
!3978 = !DILocation(line: 916, column: 2, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !288, line: 916, column: 2)
!3980 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 916, column: 2)
!3981 = !DILocation(line: 916, column: 2, scope: !3980)
!3982 = !DILocation(line: 916, column: 2, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3979, file: !288, line: 916, column: 2)
!3984 = !DILocation(line: 919, column: 20, scope: !3900)
!3985 = !DILocation(line: 921, column: 27, scope: !3900)
!3986 = !DILocation(line: 921, column: 21, scope: !3900)
!3987 = !DILocation(line: 926, column: 18, scope: !3900)
!3988 = !DILocation(line: 926, column: 11, scope: !3900)
!3989 = !DILocation(line: 926, column: 34, scope: !3900)
!3990 = !DILocation(line: 931, column: 21, scope: !3900)
!3991 = !DILocation(line: 931, column: 12, scope: !3900)
!3992 = !DILocation(line: 932, column: 11, scope: !3900)
!3993 = !DILocation(line: 932, column: 19, scope: !3900)
!3994 = !DILocation(line: 938, column: 21, scope: !3900)
!3995 = !DILocation(line: 938, column: 12, scope: !3900)
!3996 = !DILocation(line: 939, column: 19, scope: !3900)
!3997 = !DILocation(line: 939, column: 23, scope: !3900)
!3998 = !DILocation(line: 946, column: 14, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 946, column: 6)
!4000 = !DILocation(line: 947, column: 7, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !288, line: 947, column: 7)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !288, line: 946, column: 26)
!4003 = !DILocation(line: 947, column: 7, scope: !4002)
!4004 = !DILocation(line: 948, column: 4, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4001, file: !288, line: 947, column: 11)
!4006 = !DILocation(line: 949, column: 3, scope: !4005)
!4007 = !DILocation(line: 958, column: 23, scope: !3900)
!4008 = !DILocation(line: 958, column: 14, scope: !3900)
!4009 = !DILocation(line: 958, column: 27, scope: !3900)
!4010 = !DILocation(line: 965, column: 41, scope: !3900)
!4011 = !DILocation(line: 965, column: 20, scope: !3900)
!4012 = !DILocation(line: 966, column: 22, scope: !3900)
!4013 = !DILocation(line: 970, column: 9, scope: !3934)
!4014 = !DILocation(line: 970, column: 6, scope: !3900)
!4015 = !DILocation(line: 972, column: 7, scope: !3933)
!4016 = !DILocation(line: 0, scope: !3930)
!4017 = !DILocation(line: 973, column: 4, scope: !3930)
!4018 = !DILocation(line: 974, column: 46, scope: !3936)
!4019 = !DILocation(line: 974, column: 40, scope: !3936)
!4020 = !DILocation(line: 974, column: 23, scope: !3936)
!4021 = !DILocation(line: 0, scope: !3936)
!4022 = !DILocation(line: 975, column: 15, scope: !3936)
!4023 = !DILocation(line: 978, column: 14, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 978, column: 9)
!4025 = !DILocation(line: 979, column: 25, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4024, file: !288, line: 978, column: 38)
!4027 = !DILocation(line: 979, column: 19, scope: !4026)
!4028 = !DILocation(line: 979, column: 6, scope: !4026)
!4029 = !DILocation(line: 979, column: 23, scope: !4026)
!4030 = !DILocation(line: 980, column: 5, scope: !4026)
!4031 = !DILocation(line: 981, column: 13, scope: !3936)
!4032 = !DILocation(line: 982, column: 12, scope: !3936)
!4033 = !DILocation(line: 973, column: 34, scope: !3937)
!4034 = !DILocation(line: 973, column: 22, scope: !3937)
!4035 = distinct !{!4035, !4017, !4036}
!4036 = !DILocation(line: 983, column: 4, scope: !3930)
!4037 = !DILocation(line: 985, column: 16, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !288, line: 985, column: 8)
!4039 = distinct !DILexicalBlock(scope: !3932, file: !288, line: 984, column: 10)
!4040 = !DILocation(line: 967, column: 9, scope: !3900)
!4041 = !DILocation(line: 971, column: 11, scope: !3933)
!4042 = !DILocation(line: 0, scope: !3933)
!4043 = !DILocation(line: 0, scope: !3941)
!4044 = !DILocation(line: 995, column: 21, scope: !3944)
!4045 = !DILocation(line: 995, column: 3, scope: !3941)
!4046 = !DILocation(line: 990, column: 34, scope: !3933)
!4047 = !DILocation(line: 990, column: 26, scope: !3933)
!4048 = !DILocation(line: 996, column: 30, scope: !3943)
!4049 = !DILocation(line: 0, scope: !3943)
!4050 = !DILocation(line: 997, column: 30, scope: !3943)
!4051 = !DILocation(line: 997, column: 22, scope: !3943)
!4052 = !DILocation(line: 998, column: 39, scope: !3943)
!4053 = !DILocation(line: 998, column: 22, scope: !3943)
!4054 = !DILocation(line: 999, column: 17, scope: !3943)
!4055 = !DILocation(line: 1002, column: 20, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 1002, column: 8)
!4057 = !DILocation(line: 996, column: 22, scope: !3943)
!4058 = !DILocation(line: 1002, column: 35, scope: !4056)
!4059 = !DILocation(line: 1002, column: 23, scope: !4056)
!4060 = !DILocation(line: 1002, column: 8, scope: !3943)
!4061 = !DILocation(line: 1003, column: 5, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !288, line: 1003, column: 5)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !288, line: 1003, column: 5)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !288, line: 1003, column: 5)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !288, line: 1003, column: 5)
!4066 = distinct !DILexicalBlock(scope: !4056, file: !288, line: 1002, column: 45)
!4067 = !DILocation(line: 1010, column: 13, scope: !4066)
!4068 = !DILocation(line: 1011, column: 5, scope: !4066)
!4069 = !DILocation(line: 1014, column: 8, scope: !3943)
!4070 = !DILocation(line: 1015, column: 9, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !3976, file: !288, line: 1014, column: 15)
!4072 = !DILocation(line: 1018, column: 14, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4074, file: !288, line: 1017, column: 12)
!4074 = distinct !DILexicalBlock(scope: !4071, file: !288, line: 1015, column: 9)
!4075 = !DILocation(line: 1020, column: 4, scope: !4071)
!4076 = !DILocation(line: 1020, column: 15, scope: !3976)
!4077 = !DILocation(line: 1021, column: 1, scope: !3974)
!4078 = !DILocation(line: 1022, column: 11, scope: !3974)
!4079 = !DILocation(line: 1025, column: 14, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !3974, file: !288, line: 1025, column: 9)
!4081 = !DILocation(line: 1026, column: 25, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4080, file: !288, line: 1025, column: 38)
!4083 = !DILocation(line: 1026, column: 19, scope: !4082)
!4084 = !DILocation(line: 1026, column: 6, scope: !4082)
!4085 = !DILocation(line: 1026, column: 23, scope: !4082)
!4086 = !DILocation(line: 1027, column: 5, scope: !4082)
!4087 = !DILocation(line: 1031, column: 21, scope: !3974)
!4088 = !DILocation(line: 1031, column: 13, scope: !3974)
!4089 = !DILocation(line: 1032, column: 4, scope: !3974)
!4090 = !DILocation(line: 995, column: 33, scope: !3944)
!4091 = distinct !{!4091, !4045, !4092}
!4092 = !DILocation(line: 1033, column: 3, scope: !3941)
!4093 = !DILocation(line: 1040, column: 10, scope: !3900)
!4094 = !DILocation(line: 1042, column: 10, scope: !3900)
!4095 = !DILocation(line: 1052, column: 6, scope: !3900)
!4096 = !DILocation(line: 1055, column: 9, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4098, file: !288, line: 1052, column: 14)
!4098 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1052, column: 6)
!4099 = !DILocation(line: 1056, column: 2, scope: !4097)
!4100 = !DILocation(line: 1056, column: 21, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4098, file: !288, line: 1056, column: 13)
!4102 = !DILocation(line: 1066, column: 3, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !288, line: 1065, column: 11)
!4104 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1065, column: 6)
!4105 = !DILocation(line: 1067, column: 2, scope: !4103)
!4106 = !DILocation(line: 1068, column: 10, scope: !3900)
!4107 = !DILocation(line: 0, scope: !3957)
!4108 = !DILocation(line: 1074, column: 20, scope: !3960)
!4109 = !DILocation(line: 1074, column: 2, scope: !3957)
!4110 = !DILocation(line: 1110, column: 24, scope: !3900)
!4111 = !DILocation(line: 1053, column: 12, scope: !4097)
!4112 = !DILocation(line: 1054, column: 12, scope: !4097)
!4113 = !DILocation(line: 1108, column: 30, scope: !3900)
!4114 = !DILocation(line: 1108, column: 40, scope: !3900)
!4115 = !DILocation(line: 1108, column: 38, scope: !3900)
!4116 = !DILocation(line: 1109, column: 31, scope: !3900)
!4117 = !DILocation(line: 1109, column: 24, scope: !3900)
!4118 = !DILocation(line: 1110, column: 31, scope: !3900)
!4119 = !DILocation(line: 1114, column: 31, scope: !3900)
!4120 = !DILocation(line: 1114, column: 48, scope: !3900)
!4121 = !DILocation(line: 1115, column: 13, scope: !3900)
!4122 = !DILocation(line: 1118, column: 7, scope: !3900)
!4123 = !DILocation(line: 1119, column: 9, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1119, column: 6)
!4125 = !DILocation(line: 1119, column: 6, scope: !3900)
!4126 = !DILocation(line: 1075, column: 29, scope: !3959)
!4127 = !DILocation(line: 1075, column: 21, scope: !3959)
!4128 = !DILocation(line: 0, scope: !3959)
!4129 = !DILocation(line: 1076, column: 29, scope: !3959)
!4130 = !DILocation(line: 1076, column: 21, scope: !3959)
!4131 = !DILocation(line: 1077, column: 38, scope: !3959)
!4132 = !DILocation(line: 1077, column: 21, scope: !3959)
!4133 = !DILocation(line: 1078, column: 16, scope: !3959)
!4134 = !DILocation(line: 1080, column: 19, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !3959, file: !288, line: 1080, column: 7)
!4136 = !DILocation(line: 1080, column: 34, scope: !4135)
!4137 = !DILocation(line: 1080, column: 22, scope: !4135)
!4138 = !DILocation(line: 1080, column: 7, scope: !3959)
!4139 = !DILocation(line: 1084, column: 7, scope: !3959)
!4140 = !DILocation(line: 1085, column: 8, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !288, line: 1084, column: 14)
!4142 = distinct !DILexicalBlock(scope: !3959, file: !288, line: 1084, column: 7)
!4143 = !DILocation(line: 1086, column: 5, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !288, line: 1086, column: 5)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1086, column: 5)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !288, line: 1085, column: 49)
!4147 = distinct !DILexicalBlock(scope: !4141, file: !288, line: 1085, column: 8)
!4148 = !DILocation(line: 1086, column: 5, scope: !4145)
!4149 = !DILocation(line: 1086, column: 5, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4144, file: !288, line: 1086, column: 5)
!4151 = !DILocation(line: 1087, column: 25, scope: !4146)
!4152 = !DILocation(line: 1087, column: 5, scope: !4146)
!4153 = !DILocation(line: 1088, column: 4, scope: !4146)
!4154 = !DILocation(line: 1088, column: 15, scope: !4147)
!4155 = !DILocation(line: 1089, column: 5, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !288, line: 1089, column: 5)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !288, line: 1089, column: 5)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !288, line: 1088, column: 61)
!4159 = distinct !DILexicalBlock(scope: !4147, file: !288, line: 1088, column: 15)
!4160 = !DILocation(line: 1089, column: 5, scope: !4157)
!4161 = !DILocation(line: 1089, column: 5, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4156, file: !288, line: 1089, column: 5)
!4163 = !DILocation(line: 1090, column: 26, scope: !4158)
!4164 = !DILocation(line: 1090, column: 5, scope: !4158)
!4165 = !DILocation(line: 1091, column: 4, scope: !4158)
!4166 = !DILocation(line: 1095, column: 8, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4142, file: !288, line: 1094, column: 10)
!4168 = !DILocation(line: 1096, column: 5, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !288, line: 1096, column: 5)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !288, line: 1096, column: 5)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !288, line: 1095, column: 49)
!4172 = distinct !DILexicalBlock(scope: !4167, file: !288, line: 1095, column: 8)
!4173 = !DILocation(line: 1096, column: 5, scope: !4170)
!4174 = !DILocation(line: 1096, column: 5, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !288, line: 1096, column: 5)
!4176 = !DILocation(line: 1097, column: 25, scope: !4171)
!4177 = !DILocation(line: 1097, column: 5, scope: !4171)
!4178 = !DILocation(line: 1098, column: 4, scope: !4171)
!4179 = !DILocation(line: 1099, column: 5, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !288, line: 1099, column: 5)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !288, line: 1099, column: 5)
!4182 = distinct !DILexicalBlock(scope: !4172, file: !288, line: 1098, column: 11)
!4183 = !DILocation(line: 1099, column: 5, scope: !4181)
!4184 = !DILocation(line: 1099, column: 5, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4180, file: !288, line: 1099, column: 5)
!4186 = !DILocation(line: 1100, column: 26, scope: !4182)
!4187 = !DILocation(line: 1100, column: 5, scope: !4182)
!4188 = !DILocation(line: 1100, column: 30, scope: !4182)
!4189 = !DILocation(line: 1101, column: 26, scope: !4182)
!4190 = !DILocation(line: 1101, column: 5, scope: !4182)
!4191 = !DILocation(line: 0, scope: !4142)
!4192 = !DILocation(line: 1074, column: 32, scope: !3960)
!4193 = distinct !{!4193, !4109, !4194}
!4194 = !DILocation(line: 1104, column: 2, scope: !3957)
!4195 = !DILocation(line: 1124, column: 13, scope: !3900)
!4196 = !DILocation(line: 1127, column: 10, scope: !3900)
!4197 = !DILocation(line: 1127, column: 7, scope: !3900)
!4198 = !DILocation(line: 1128, column: 9, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1128, column: 6)
!4200 = !DILocation(line: 1128, column: 6, scope: !3900)
!4201 = !DILocation(line: 1134, column: 27, scope: !3900)
!4202 = !DILocation(line: 1136, column: 7, scope: !3900)
!4203 = !DILocation(line: 1137, column: 9, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !3900, file: !288, line: 1137, column: 6)
!4205 = !DILocation(line: 1137, column: 6, scope: !3900)
!4206 = !DILocation(line: 1131, column: 10, scope: !3900)
!4207 = !DILocation(line: 1140, column: 10, scope: !3900)
!4208 = !DILocation(line: 0, scope: !3967)
!4209 = !DILocation(line: 1143, column: 20, scope: !3970)
!4210 = !DILocation(line: 1143, column: 2, scope: !3967)
!4211 = !DILocation(line: 1144, column: 3, scope: !3969)
!4212 = !DILocation(line: 1144, column: 17, scope: !3969)
!4213 = !DILocation(line: 0, scope: !3969)
!4214 = !DILocation(line: 1144, column: 11, scope: !3969)
!4215 = !DILocation(line: 1145, column: 38, scope: !3969)
!4216 = !DILocation(line: 1145, column: 21, scope: !3969)
!4217 = !DILocation(line: 1146, column: 22, scope: !3969)
!4218 = !DILocation(line: 1146, column: 29, scope: !3969)
!4219 = !DILocation(line: 1148, column: 8, scope: !3969)
!4220 = !DILocation(line: 1149, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !3969, file: !288, line: 1149, column: 7)
!4222 = !DILocation(line: 1149, column: 7, scope: !3969)
!4223 = !DILocation(line: 1154, column: 8, scope: !3969)
!4224 = !DILocation(line: 1155, column: 10, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !3969, file: !288, line: 1155, column: 7)
!4226 = !DILocation(line: 1155, column: 7, scope: !3969)
!4227 = !DILocation(line: 1159, column: 2, scope: !3970)
!4228 = !DILocation(line: 1152, column: 11, scope: !3969)
!4229 = !DILocation(line: 1158, column: 11, scope: !3969)
!4230 = !DILocation(line: 1143, column: 33, scope: !3970)
!4231 = distinct !{!4231, !4210, !4232}
!4232 = !DILocation(line: 1159, column: 2, scope: !3967)
!4233 = !DILocation(line: 1162, column: 8, scope: !3900)
!4234 = !DILocation(line: 1164, column: 2, scope: !3900)
!4235 = !DILocation(line: 1165, column: 1, scope: !3900)
!4236 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4237, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!234, !107}
!4239 = !{!4240, !4241, !4242, !4243, !4244, !4245, !4246}
!4240 = !DILocalVariable(name: "packaged", arg: 1, scope: !4236, file: !288, line: 196, type: !107)
!4241 = !DILocalVariable(name: "buf", scope: !4236, file: !288, line: 200, type: !286)
!4242 = !DILocalVariable(name: "start", scope: !4236, file: !288, line: 201, type: !286)
!4243 = !DILocalVariable(name: "args_size", scope: !4236, file: !288, line: 202, type: !32)
!4244 = !DILocalVariable(name: "s_nbr", scope: !4236, file: !288, line: 202, type: !32)
!4245 = !DILocalVariable(name: "ros_nbr", scope: !4236, file: !288, line: 202, type: !32)
!4246 = !DILocalVariable(name: "i", scope: !4247, file: !288, line: 215, type: !109)
!4247 = distinct !DILexicalBlock(scope: !4236, file: !288, line: 215, column: 2)
!4248 = !DILocation(line: 0, scope: !4236)
!4249 = !DILocation(line: 198, column: 2, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !288, line: 198, column: 2)
!4251 = distinct !DILexicalBlock(scope: !4236, file: !288, line: 198, column: 2)
!4252 = !DILocation(line: 198, column: 2, scope: !4251)
!4253 = !DILocation(line: 198, column: 2, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !288, line: 198, column: 2)
!4255 = !DILocation(line: 204, column: 14, scope: !4236)
!4256 = !DILocation(line: 204, column: 21, scope: !4236)
!4257 = !DILocation(line: 205, column: 14, scope: !4236)
!4258 = !DILocation(line: 206, column: 14, scope: !4236)
!4259 = !DILocation(line: 209, column: 6, scope: !4236)
!4260 = !DILocation(line: 212, column: 6, scope: !4236)
!4261 = !DILocation(line: 0, scope: !4247)
!4262 = !DILocation(line: 215, column: 20, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4247, file: !288, line: 215, column: 2)
!4264 = !DILocation(line: 215, column: 2, scope: !4247)
!4265 = !DILocation(line: 220, column: 33, scope: !4236)
!4266 = !DILocation(line: 220, column: 2, scope: !4236)
!4267 = !DILocation(line: 216, column: 6, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4263, file: !288, line: 215, column: 34)
!4269 = !DILocation(line: 217, column: 10, scope: !4268)
!4270 = !DILocation(line: 217, column: 36, scope: !4268)
!4271 = !DILocation(line: 217, column: 7, scope: !4268)
!4272 = !DILocation(line: 215, column: 30, scope: !4263)
!4273 = distinct !{!4273, !4264, !4274}
!4274 = !DILocation(line: 218, column: 2, scope: !4247)
!4275 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4276, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4278)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!109, !3903, !107, !279, !194}
!4278 = !{!4279, !4280, !4281, !4282}
!4279 = !DILocalVariable(name: "cb", arg: 1, scope: !4275, file: !288, line: 223, type: !3903)
!4280 = !DILocalVariable(name: "ctx", arg: 2, scope: !4275, file: !288, line: 223, type: !107)
!4281 = !DILocalVariable(name: "str", arg: 3, scope: !4275, file: !288, line: 223, type: !279)
!4282 = !DILocalVariable(name: "strl", arg: 4, scope: !4275, file: !288, line: 223, type: !194)
!4283 = !DILocation(line: 0, scope: !4275)
!4284 = !DILocation(line: 225, column: 9, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4275, file: !288, line: 225, column: 6)
!4286 = !DILocation(line: 225, column: 6, scope: !4275)
!4287 = !DILocation(line: 226, column: 14, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4285, file: !288, line: 225, column: 18)
!4289 = !DILocation(line: 226, column: 12, scope: !4288)
!4290 = !DILocation(line: 226, column: 3, scope: !4288)
!4291 = !DILocation(line: 229, column: 14, scope: !4275)
!4292 = !DILocation(line: 229, column: 9, scope: !4275)
!4293 = !DILocation(line: 229, column: 27, scope: !4275)
!4294 = !DILocation(line: 229, column: 39, scope: !4275)
!4295 = !DILocation(line: 230, column: 17, scope: !4275)
!4296 = !DILocation(line: 230, column: 9, scope: !4275)
!4297 = !DILocation(line: 230, column: 2, scope: !4275)
!4298 = !DILocation(line: 231, column: 1, scope: !4275)
!4299 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4300)
!4300 = !{!4301}
!4301 = !DILocalVariable(name: "c", arg: 1, scope: !4299, file: !301, line: 45, type: !109)
!4302 = !DILocation(line: 0, scope: !4299)
!4303 = !DILocation(line: 50, column: 2, scope: !4299)
!4304 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4305, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4307)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{null, !302}
!4307 = !{!4308}
!4308 = !DILocalVariable(name: "fn", arg: 1, scope: !4304, file: !301, line: 63, type: !302)
!4309 = !DILocation(line: 0, scope: !4304)
!4310 = !DILocation(line: 65, column: 12, scope: !4304)
!4311 = !DILocation(line: 66, column: 1, scope: !4304)
!4312 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4313, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2024)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!107}
!4315 = !DILocation(line: 78, column: 9, scope: !4312)
!4316 = !DILocation(line: 78, column: 2, scope: !4312)
!4317 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4318, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4326)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{null, !279, !4320}
!4320 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3389, line: 99, baseType: !4321)
!4321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3389, line: 40, baseType: !4322)
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4323)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4324)
!4324 = !{!4325}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4323, file: !301, line: 79, baseType: !107, size: 32)
!4326 = !{!4327, !4328, !4329}
!4327 = !DILocalVariable(name: "fmt", arg: 1, scope: !4317, file: !301, line: 113, type: !279)
!4328 = !DILocalVariable(name: "ap", arg: 2, scope: !4317, file: !301, line: 113, type: !4320)
!4329 = !DILocalVariable(name: "ctx", scope: !4330, file: !301, line: 121, type: !4332)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !301, line: 120, column: 27)
!4331 = distinct !DILexicalBlock(scope: !4317, file: !301, line: 120, column: 6)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4333)
!4333 = !{!4334, !4335}
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4332, file: !301, line: 85, baseType: !32, size: 32)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4332, file: !301, line: 86, baseType: !4336, offset: 32)
!4336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4337)
!4337 = !{!4338}
!4338 = !DISubrange(count: 0)
!4339 = !DILocation(line: 0, scope: !4317)
!4340 = !DILocation(line: 148, column: 3, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4331, file: !301, line: 138, column: 9)
!4342 = !DILocation(line: 155, column: 1, scope: !4317)
!4343 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4344, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4346)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!109, !109, !107}
!4346 = !{!4347, !4348}
!4347 = !DILocalVariable(name: "c", arg: 1, scope: !4343, file: !301, line: 107, type: !109)
!4348 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4343, file: !301, line: 107, type: !107)
!4349 = !DILocation(line: 0, scope: !4343)
!4350 = !DILocation(line: 110, column: 9, scope: !4343)
!4351 = !DILocation(line: 110, column: 2, scope: !4343)
!4352 = distinct !DISubprogram(name: "cbvprintf", scope: !3421, file: !3421, line: 739, type: !4353, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!109, !3771, !107, !279, !4320}
!4355 = !{!4356, !4357, !4358, !4359}
!4356 = !DILocalVariable(name: "out", arg: 1, scope: !4352, file: !3421, line: 739, type: !3771)
!4357 = !DILocalVariable(name: "ctx", arg: 2, scope: !4352, file: !3421, line: 739, type: !107)
!4358 = !DILocalVariable(name: "format", arg: 3, scope: !4352, file: !3421, line: 739, type: !279)
!4359 = !DILocalVariable(name: "ap", arg: 4, scope: !4352, file: !3421, line: 739, type: !4320)
!4360 = !DILocation(line: 0, scope: !4352)
!4361 = !DILocation(line: 741, column: 9, scope: !4352)
!4362 = !DILocation(line: 741, column: 2, scope: !4352)
!4363 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4364, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !285, !234}
!4366 = !{!4367, !4368, !4369}
!4367 = !DILocalVariable(name: "c", arg: 1, scope: !4363, file: !301, line: 157, type: !285)
!4368 = !DILocalVariable(name: "n", arg: 2, scope: !4363, file: !301, line: 157, type: !234)
!4369 = !DILocalVariable(name: "i", scope: !4363, file: !301, line: 159, type: !234)
!4370 = !DILocation(line: 0, scope: !4363)
!4371 = !DILocation(line: 164, column: 16, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !301, line: 164, column: 2)
!4373 = distinct !DILexicalBlock(scope: !4363, file: !301, line: 164, column: 2)
!4374 = !DILocation(line: 164, column: 2, scope: !4373)
!4375 = !DILocation(line: 165, column: 3, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4372, file: !301, line: 164, column: 26)
!4377 = !DILocation(line: 165, column: 13, scope: !4376)
!4378 = !DILocation(line: 164, column: 22, scope: !4372)
!4379 = distinct !{!4379, !4374, !4380}
!4380 = !DILocation(line: 166, column: 2, scope: !4373)
!4381 = !DILocation(line: 171, column: 1, scope: !4363)
!4382 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4383, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4385)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !279, null}
!4385 = !{!4386, !4387}
!4386 = !DILocalVariable(name: "fmt", arg: 1, scope: !4382, file: !301, line: 203, type: !279)
!4387 = !DILocalVariable(name: "ap", scope: !4382, file: !301, line: 205, type: !4320)
!4388 = !DILocation(line: 0, scope: !4382)
!4389 = !DILocation(line: 205, column: 2, scope: !4382)
!4390 = !DILocation(line: 205, column: 10, scope: !4382)
!4391 = !DILocation(line: 207, column: 2, scope: !4382)
!4392 = !DILocation(line: 209, column: 2, scope: !4382)
!4393 = !DILocation(line: 211, column: 2, scope: !4382)
!4394 = !DILocation(line: 212, column: 1, scope: !4382)
!4395 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4396, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!109, !285, !234, !279, null}
!4398 = !{!4399, !4400, !4401, !4402, !4403}
!4399 = !DILocalVariable(name: "str", arg: 1, scope: !4395, file: !301, line: 239, type: !285)
!4400 = !DILocalVariable(name: "size", arg: 2, scope: !4395, file: !301, line: 239, type: !234)
!4401 = !DILocalVariable(name: "fmt", arg: 3, scope: !4395, file: !301, line: 239, type: !279)
!4402 = !DILocalVariable(name: "ap", scope: !4395, file: !301, line: 241, type: !4320)
!4403 = !DILocalVariable(name: "ret", scope: !4395, file: !301, line: 242, type: !109)
!4404 = !DILocation(line: 0, scope: !4395)
!4405 = !DILocation(line: 241, column: 2, scope: !4395)
!4406 = !DILocation(line: 241, column: 10, scope: !4395)
!4407 = !DILocation(line: 244, column: 2, scope: !4395)
!4408 = !DILocation(line: 245, column: 8, scope: !4395)
!4409 = !DILocation(line: 246, column: 2, scope: !4395)
!4410 = !DILocation(line: 249, column: 1, scope: !4395)
!4411 = !DILocation(line: 248, column: 2, scope: !4395)
!4412 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4413, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4415)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!109, !285, !234, !279, !4320}
!4415 = !{!4416, !4417, !4418, !4419, !4420}
!4416 = !DILocalVariable(name: "str", arg: 1, scope: !4412, file: !301, line: 251, type: !285)
!4417 = !DILocalVariable(name: "size", arg: 2, scope: !4412, file: !301, line: 251, type: !234)
!4418 = !DILocalVariable(name: "fmt", arg: 3, scope: !4412, file: !301, line: 251, type: !279)
!4419 = !DILocalVariable(name: "ap", arg: 4, scope: !4412, file: !301, line: 251, type: !4320)
!4420 = !DILocalVariable(name: "ctx", scope: !4412, file: !301, line: 253, type: !4421)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4422)
!4422 = !{!4423, !4424, !4425}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4421, file: !301, line: 218, baseType: !285, size: 32)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4421, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4421, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4426 = !DILocation(line: 0, scope: !4412)
!4427 = !DILocation(line: 253, column: 2, scope: !4412)
!4428 = !DILocation(line: 253, column: 21, scope: !4412)
!4429 = !DILocation(line: 253, column: 27, scope: !4412)
!4430 = !DILocation(line: 255, column: 2, scope: !4412)
!4431 = !DILocation(line: 257, column: 10, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4412, file: !301, line: 257, column: 6)
!4433 = !DILocation(line: 257, column: 22, scope: !4432)
!4434 = !DILocation(line: 257, column: 16, scope: !4432)
!4435 = !DILocation(line: 257, column: 6, scope: !4412)
!4436 = !DILocation(line: 258, column: 3, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4432, file: !301, line: 257, column: 27)
!4438 = !DILocation(line: 258, column: 18, scope: !4437)
!4439 = !DILocation(line: 259, column: 2, scope: !4437)
!4440 = !DILocation(line: 262, column: 1, scope: !4412)
!4441 = !DILocation(line: 261, column: 2, scope: !4412)
!4442 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4443, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4446)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{!109, !109, !4445}
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 32)
!4446 = !{!4447, !4448}
!4447 = !DILocalVariable(name: "c", arg: 1, scope: !4442, file: !301, line: 223, type: !109)
!4448 = !DILocalVariable(name: "ctx", arg: 2, scope: !4442, file: !301, line: 223, type: !4445)
!4449 = !DILocation(line: 0, scope: !4442)
!4450 = !DILocation(line: 225, column: 11, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4442, file: !301, line: 225, column: 6)
!4452 = !DILocation(line: 225, column: 15, scope: !4451)
!4453 = !DILocation(line: 0, scope: !4451)
!4454 = !DILocation(line: 225, column: 23, scope: !4451)
!4455 = !DILocation(line: 225, column: 45, scope: !4451)
!4456 = !DILocation(line: 225, column: 37, scope: !4451)
!4457 = !DILocation(line: 225, column: 6, scope: !4442)
!4458 = !DILocation(line: 226, column: 8, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4451, file: !301, line: 225, column: 50)
!4460 = !DILocation(line: 226, column: 13, scope: !4459)
!4461 = !DILocation(line: 227, column: 3, scope: !4459)
!4462 = !DILocation(line: 230, column: 29, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4442, file: !301, line: 230, column: 6)
!4464 = !DILocation(line: 230, column: 17, scope: !4463)
!4465 = !DILocation(line: 230, column: 6, scope: !4442)
!4466 = !DILocation(line: 231, column: 22, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !301, line: 230, column: 34)
!4468 = !DILocation(line: 231, column: 3, scope: !4467)
!4469 = !DILocation(line: 231, column: 26, scope: !4467)
!4470 = !DILocation(line: 232, column: 2, scope: !4467)
!4471 = !DILocation(line: 233, column: 28, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !301, line: 232, column: 9)
!4473 = !DILocation(line: 233, column: 22, scope: !4472)
!4474 = !DILocation(line: 233, column: 3, scope: !4472)
!4475 = !DILocation(line: 233, column: 26, scope: !4472)
!4476 = !DILocation(line: 237, column: 1, scope: !4442)
!4477 = distinct !DISubprogram(name: "z_thread_entry", scope: !4478, file: !4478, line: 30, type: !4479, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !4481)
!4478 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4479 = !DISubroutineType(types: !4480)
!4480 = !{null, !3354, !107, !107, !107}
!4481 = !{!4482, !4483, !4484, !4485}
!4482 = !DILocalVariable(name: "entry", arg: 1, scope: !4477, file: !4478, line: 30, type: !3354)
!4483 = !DILocalVariable(name: "p1", arg: 2, scope: !4477, file: !4478, line: 31, type: !107)
!4484 = !DILocalVariable(name: "p2", arg: 3, scope: !4477, file: !4478, line: 31, type: !107)
!4485 = !DILocalVariable(name: "p3", arg: 4, scope: !4477, file: !4478, line: 31, type: !107)
!4486 = !DILocation(line: 0, scope: !4477)
!4487 = !DILocation(line: 36, column: 2, scope: !4477)
!4488 = !DILocation(line: 38, column: 17, scope: !4477)
!4489 = !DILocation(line: 38, column: 2, scope: !4477)
!4490 = !DILocation(line: 45, column: 2, scope: !4477)
!4491 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4492, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !2024)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!4494}
!4494 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 32)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4497)
!4497 = !{!4498, !4556, !4568, !4569, !4570, !4571, !4572, !4578, !4593}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4496, file: !158, line: 247, baseType: !4499, size: 384)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4500)
!4500 = !{!4501, !4525, !4532, !4533, !4534, !4543, !4544, !4545}
!4501 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !158, line: 60, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !158, line: 60, size: 64, elements: !4503)
!4503 = !{!4504, !4519}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4502, file: !158, line: 61, baseType: !4505, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4506)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4507)
!4507 = !{!4508, !4514}
!4508 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !127, line: 38, baseType: !4509, size: 32)
!4509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !127, line: 38, size: 32, elements: !4510)
!4510 = !{!4511, !4513}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4509, file: !127, line: 39, baseType: !4512, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4509, file: !127, line: 40, baseType: !4512, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, scope: !4506, file: !127, line: 42, baseType: !4515, size: 32, offset: 32)
!4515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4506, file: !127, line: 42, size: 32, elements: !4516)
!4516 = !{!4517, !4518}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4515, file: !127, line: 43, baseType: !4512, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4515, file: !127, line: 44, baseType: !4512, size: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4502, file: !158, line: 62, baseType: !4520, size: 64)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4521)
!4521 = !{!4522}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4520, file: !170, line: 50, baseType: !4523, size: 64)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4524, size: 64, elements: !175)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4499, file: !158, line: 68, baseType: !4526, size: 32, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 32)
!4527 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4528)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4529)
!4529 = !{!4530}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4528, file: !122, line: 232, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4506)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4499, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4499, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4534 = !DIDerivedType(tag: DW_TAG_member, scope: !4499, file: !158, line: 90, baseType: !4535, size: 16, offset: 112)
!4535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4499, file: !158, line: 90, size: 16, elements: !4536)
!4536 = !{!4537, !4542}
!4537 = !DIDerivedType(tag: DW_TAG_member, scope: !4535, file: !158, line: 91, baseType: !4538, size: 16)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4535, file: !158, line: 91, size: 16, elements: !4539)
!4539 = !{!4540, !4541}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4538, file: !158, line: 96, baseType: !190, size: 8)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4538, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4535, file: !158, line: 100, baseType: !194, size: 16)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4499, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4499, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4499, file: !158, line: 131, baseType: !4546, size: 192, offset: 192)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4547)
!4547 = !{!4548, !4549, !4555}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4546, file: !122, line: 245, baseType: !4505, size: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4546, file: !122, line: 246, baseType: !4550, size: 32, offset: 64)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4551)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 32)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{null, !4554}
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4546, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4496, file: !158, line: 250, baseType: !4557, size: 288, offset: 384)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4558)
!4558 = !{!4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4557, file: !211, line: 26, baseType: !110, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4557, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4557, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4557, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4557, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4557, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4557, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4557, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4557, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4496, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4496, file: !158, line: 256, baseType: !4527, size: 64, offset: 704)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4496, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4496, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4496, file: !158, line: 300, baseType: !4573, size: 96, offset: 1056)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4574)
!4574 = !{!4575, !4576, !4577}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4573, file: !158, line: 153, baseType: !22, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4573, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4573, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4496, file: !158, line: 325, baseType: !4579, size: 32, offset: 1152)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 32)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4581)
!4581 = !{!4582, !4588, !4589}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4580, file: !118, line: 5074, baseType: !4583, size: 96)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4584)
!4584 = !{!4585, !4586, !4587}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4583, file: !243, line: 57, baseType: !246, size: 32)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4583, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4583, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4580, file: !118, line: 5075, baseType: !4527, size: 64, offset: 96)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4580, file: !118, line: 5076, baseType: !4590, size: 32, offset: 160)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4591)
!4591 = !{!4592}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4590, file: !253, line: 52, baseType: !22, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4496, file: !158, line: 343, baseType: !4594, size: 64, offset: 1184)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4595)
!4595 = !{!4596, !4597}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4594, file: !211, line: 63, baseType: !110, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4594, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4598 = !DILocation(line: 535, column: 9, scope: !4491)
!4599 = !DILocation(line: 535, column: 2, scope: !4491)
!4600 = distinct !DISubprogram(name: "k_thread_abort", scope: !3233, file: !3233, line: 188, type: !4601, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !4603)
!4601 = !DISubroutineType(types: !4602)
!4602 = !{null, !4494}
!4603 = !{!4604}
!4604 = !DILocalVariable(name: "thread", arg: 1, scope: !4600, file: !3233, line: 188, type: !4494)
!4605 = !DILocation(line: 0, scope: !4600)
!4606 = !DILocation(line: 197, column: 2, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4600, file: !3233, line: 197, column: 2)
!4608 = !{i64 2154746388}
!4609 = !DILocation(line: 198, column: 2, scope: !4600)
!4610 = !DILocation(line: 199, column: 1, scope: !4600)
!4611 = distinct !DISubprogram(name: "z_current_get", scope: !3233, file: !3233, line: 173, type: !4492, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !2024)
!4612 = !DILocation(line: 180, column: 2, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4611, file: !3233, line: 180, column: 2)
!4614 = !{i64 2154746320}
!4615 = !DILocation(line: 181, column: 9, scope: !4611)
!4616 = !DILocation(line: 181, column: 2, scope: !4611)
!4617 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2513, file: !2513, line: 1338, type: !4618, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4626)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!109, !3771, !107, !279, !4620, !110}
!4620 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3389, line: 99, baseType: !4621)
!4621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3389, line: 40, baseType: !4622)
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2513, baseType: !4623)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4624)
!4624 = !{!4625}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4623, file: !2513, baseType: !107, size: 32)
!4626 = !{!4627, !4628, !4629, !4630, !4631, !4632, !4636, !4637, !4638, !4640, !4645, !4688, !4691, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4703, !4704, !4705, !4709, !4712, !4714, !4717, !4718, !4719, !4724, !4730, !4733, !4737, !4743, !4747, !4750, !4752, !4755}
!4627 = !DILocalVariable(name: "out", arg: 1, scope: !4617, file: !2513, line: 1338, type: !3771)
!4628 = !DILocalVariable(name: "ctx", arg: 2, scope: !4617, file: !2513, line: 1338, type: !107)
!4629 = !DILocalVariable(name: "fp", arg: 3, scope: !4617, file: !2513, line: 1338, type: !279)
!4630 = !DILocalVariable(name: "ap", arg: 4, scope: !4617, file: !2513, line: 1339, type: !4620)
!4631 = !DILocalVariable(name: "flags", arg: 5, scope: !4617, file: !2513, line: 1339, type: !110)
!4632 = !DILocalVariable(name: "buf", scope: !4617, file: !2513, line: 1341, type: !4633)
!4633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4634)
!4634 = !{!4635}
!4635 = !DISubrange(count: 22)
!4636 = !DILocalVariable(name: "count", scope: !4617, file: !2513, line: 1342, type: !234)
!4637 = !DILocalVariable(name: "sint", scope: !4617, file: !2513, line: 1343, type: !2532)
!4638 = !DILocalVariable(name: "tagged_ap", scope: !4617, file: !2513, line: 1345, type: !4639)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4640 = !DILocalVariable(name: "rc", scope: !4641, file: !2513, line: 1377, type: !109)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2513, line: 1377, column: 4)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !2513, line: 1376, column: 19)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1376, column: 7)
!4644 = distinct !DILexicalBlock(scope: !4617, file: !2513, line: 1375, column: 19)
!4645 = !DILocalVariable(name: "state", scope: !4644, file: !2513, line: 1395, type: !4646)
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4617, file: !2513, line: 1392, size: 192, elements: !4647)
!4647 = !{!4648, !4656}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4646, file: !2513, line: 1393, baseType: !4649, size: 64)
!4649 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2513, line: 166, size: 64, elements: !4650)
!4650 = !{!4651, !4652, !4653, !4654, !4655}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4649, file: !2513, line: 168, baseType: !2532, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4649, file: !2513, line: 171, baseType: !2535, size: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4649, file: !2513, line: 174, baseType: !277, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4649, file: !2513, line: 177, baseType: !275, size: 64)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4649, file: !2513, line: 180, baseType: !107, size: 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4646, file: !2513, line: 1394, baseType: !4657, size: 96, offset: 64)
!4657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2513, line: 189, size: 96, elements: !4658)
!4658 = !{!4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4683}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4657, file: !2513, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4657, file: !2513, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4657, file: !2513, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4657, file: !2513, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4657, file: !2513, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4657, file: !2513, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4657, file: !2513, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4657, file: !2513, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4657, file: !2513, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4657, file: !2513, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4657, file: !2513, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4657, file: !2513, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4657, file: !2513, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4657, file: !2513, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4657, file: !2513, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4657, file: !2513, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4657, file: !2513, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4657, file: !2513, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4657, file: !2513, line: 260, baseType: !181, size: 8, offset: 24)
!4678 = !DIDerivedType(tag: DW_TAG_member, scope: !4657, file: !2513, line: 262, baseType: !4679, size: 32, offset: 32)
!4679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4657, file: !2513, line: 262, size: 32, elements: !4680)
!4680 = !{!4681, !4682}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4679, file: !2513, line: 267, baseType: !109, size: 32)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4679, file: !2513, line: 289, baseType: !109, size: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, scope: !4657, file: !2513, line: 292, baseType: !4684, size: 32, offset: 64)
!4684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4657, file: !2513, line: 292, size: 32, elements: !4685)
!4685 = !{!4686, !4687}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4684, file: !2513, line: 297, baseType: !109, size: 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4684, file: !2513, line: 306, baseType: !109, size: 32)
!4688 = !DILocalVariable(name: "conv", scope: !4644, file: !2513, line: 1400, type: !4689)
!4689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4690)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 32)
!4691 = !DILocalVariable(name: "value", scope: !4644, file: !2513, line: 1401, type: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4693)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 32)
!4694 = !DILocalVariable(name: "sp", scope: !4644, file: !2513, line: 1402, type: !279)
!4695 = !DILocalVariable(name: "width", scope: !4644, file: !2513, line: 1403, type: !109)
!4696 = !DILocalVariable(name: "precision", scope: !4644, file: !2513, line: 1404, type: !109)
!4697 = !DILocalVariable(name: "bps", scope: !4644, file: !2513, line: 1405, type: !279)
!4698 = !DILocalVariable(name: "bpe", scope: !4644, file: !2513, line: 1406, type: !279)
!4699 = !DILocalVariable(name: "sign", scope: !4644, file: !2513, line: 1407, type: !150)
!4700 = !DILocalVariable(name: "arg", scope: !4701, file: !2513, line: 1432, type: !109)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2513, line: 1431, column: 24)
!4702 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1431, column: 7)
!4703 = !DILocalVariable(name: "specifier_cat", scope: !4644, file: !2513, line: 1468, type: !2512)
!4704 = !DILocalVariable(name: "length_mod", scope: !4644, file: !2513, line: 1470, type: !2520)
!4705 = !DILocalVariable(name: "rc", scope: !4706, file: !2513, line: 1575, type: !109)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2513, line: 1575, column: 4)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2513, line: 1574, column: 43)
!4708 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1574, column: 7)
!4709 = !DILocalVariable(name: "rc", scope: !4710, file: !2513, line: 1584, type: !109)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1584, column: 4)
!4711 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1582, column: 28)
!4712 = !DILocalVariable(name: "len", scope: !4713, file: !2513, line: 1589, type: !234)
!4713 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1586, column: 13)
!4714 = !DILocalVariable(name: "len", scope: !4715, file: !2513, line: 1641, type: !234)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !2513, line: 1640, column: 24)
!4716 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1640, column: 8)
!4717 = !DILocalVariable(name: "nj_len", scope: !4644, file: !2513, line: 1722, type: !234)
!4718 = !DILocalVariable(name: "pad_len", scope: !4644, file: !2513, line: 1723, type: !109)
!4719 = !DILocalVariable(name: "pad", scope: !4720, file: !2513, line: 1751, type: !150)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !2513, line: 1750, column: 26)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2513, line: 1750, column: 8)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2513, line: 1747, column: 18)
!4723 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1747, column: 7)
!4724 = !DILocalVariable(name: "rc", scope: !4725, file: !2513, line: 1758, type: !109)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2513, line: 1758, column: 7)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2513, line: 1757, column: 21)
!4727 = distinct !DILexicalBlock(scope: !4728, file: !2513, line: 1757, column: 10)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !2513, line: 1756, column: 26)
!4729 = distinct !DILexicalBlock(scope: !4720, file: !2513, line: 1756, column: 9)
!4730 = !DILocalVariable(name: "rc", scope: !4731, file: !2513, line: 1765, type: !109)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2513, line: 1765, column: 6)
!4732 = distinct !DILexicalBlock(scope: !4720, file: !2513, line: 1764, column: 25)
!4733 = !DILocalVariable(name: "rc", scope: !4734, file: !2513, line: 1774, type: !109)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !2513, line: 1774, column: 4)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2513, line: 1773, column: 18)
!4736 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1773, column: 7)
!4737 = !DILocalVariable(name: "rc", scope: !4738, file: !2513, line: 1819, type: !109)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !2513, line: 1819, column: 5)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2513, line: 1818, column: 44)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !2513, line: 1818, column: 8)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2513, line: 1817, column: 10)
!4742 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1777, column: 7)
!4743 = !DILocalVariable(name: "rc", scope: !4744, file: !2513, line: 1823, type: !109)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2513, line: 1823, column: 5)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2513, line: 1822, column: 26)
!4746 = distinct !DILexicalBlock(scope: !4741, file: !2513, line: 1822, column: 8)
!4747 = !DILocalVariable(name: "rc", scope: !4748, file: !2513, line: 1828, type: !109)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2513, line: 1828, column: 5)
!4749 = distinct !DILexicalBlock(scope: !4741, file: !2513, line: 1827, column: 26)
!4750 = !DILocalVariable(name: "rc", scope: !4751, file: !2513, line: 1831, type: !109)
!4751 = distinct !DILexicalBlock(scope: !4741, file: !2513, line: 1831, column: 4)
!4752 = !DILocalVariable(name: "rc", scope: !4753, file: !2513, line: 1836, type: !109)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !2513, line: 1836, column: 4)
!4754 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1835, column: 21)
!4755 = !DILabel(scope: !4711, name: "prec_int_pad0", file: !2513, line: 1634)
!4756 = !DILocation(line: 0, scope: !4617)
!4757 = !DILocation(line: 1341, column: 2, scope: !4617)
!4758 = !DILocation(line: 1341, column: 7, scope: !4617)
!4759 = !DILocation(line: 1375, column: 2, scope: !4617)
!4760 = !DILocation(line: 1342, column: 9, scope: !4617)
!4761 = !DILocation(line: 1375, column: 9, scope: !4617)
!4762 = !DILocation(line: 1377, column: 4, scope: !4641)
!4763 = !DILocation(line: 0, scope: !4641)
!4764 = !DILocation(line: 1377, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4641, file: !2513, line: 1377, column: 4)
!4766 = distinct !{!4766, !4759, !4767}
!4767 = !DILocation(line: 1839, column: 2, scope: !4617)
!4768 = !DILocation(line: 1392, column: 3, scope: !4644)
!4769 = !DILocation(line: 1395, column: 5, scope: !4644)
!4770 = !DILocation(line: 0, scope: !4644)
!4771 = !DILocation(line: 1409, column: 8, scope: !4644)
!4772 = !DILocation(line: 1414, column: 13, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1414, column: 7)
!4774 = !DILocation(line: 1414, column: 7, scope: !4644)
!4775 = !DILocation(line: 1415, column: 12, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4773, file: !2513, line: 1414, column: 25)
!4777 = !DILocation(line: 1417, column: 14, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4776, file: !2513, line: 1417, column: 8)
!4779 = !DILocation(line: 1417, column: 8, scope: !4776)
!4780 = !DILocation(line: 1418, column: 21, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4778, file: !2513, line: 1417, column: 19)
!4782 = !DILocation(line: 1419, column: 13, scope: !4781)
!4783 = !DILocation(line: 1420, column: 4, scope: !4781)
!4784 = !DILocation(line: 1421, column: 20, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4773, file: !2513, line: 1421, column: 14)
!4786 = !DILocation(line: 1421, column: 14, scope: !4773)
!4787 = !DILocation(line: 1431, column: 13, scope: !4702)
!4788 = !DILocation(line: 1431, column: 7, scope: !4644)
!4789 = !DILocation(line: 1432, column: 14, scope: !4701)
!4790 = !DILocation(line: 0, scope: !4701)
!4791 = !DILocation(line: 1434, column: 12, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4701, file: !2513, line: 1434, column: 8)
!4793 = !DILocation(line: 1434, column: 8, scope: !4701)
!4794 = !DILocation(line: 1435, column: 24, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4792, file: !2513, line: 1434, column: 17)
!4796 = !DILocation(line: 1436, column: 4, scope: !4795)
!4797 = !DILocation(line: 1439, column: 20, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4702, file: !2513, line: 1439, column: 14)
!4799 = !DILocation(line: 1439, column: 14, scope: !4702)
!4800 = !DILocation(line: 1469, column: 37, scope: !4644)
!4801 = !DILocation(line: 1448, column: 20, scope: !4644)
!4802 = !DILocation(line: 1449, column: 22, scope: !4644)
!4803 = !DILocation(line: 1471, column: 34, scope: !4644)
!4804 = !DILocation(line: 1478, column: 7, scope: !4644)
!4805 = !DILocation(line: 1479, column: 4, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !2513, line: 1478, column: 40)
!4807 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1478, column: 7)
!4808 = !DILocation(line: 1484, column: 19, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !2513, line: 1479, column: 24)
!4810 = !DILocation(line: 1484, column: 17, scope: !4809)
!4811 = !DILocation(line: 1485, column: 5, scope: !4809)
!4812 = !DILocation(line: 1492, column: 20, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !2513, line: 1491, column: 12)
!4814 = distinct !DILexicalBlock(scope: !4809, file: !2513, line: 1487, column: 9)
!4815 = !DILocation(line: 1492, column: 18, scope: !4813)
!4816 = !DILocation(line: 1494, column: 5, scope: !4809)
!4817 = !DILocation(line: 1497, column: 23, scope: !4809)
!4818 = !DILocation(line: 1496, column: 17, scope: !4809)
!4819 = !DILocation(line: 1498, column: 5, scope: !4809)
!4820 = !DILocation(line: 1501, column: 23, scope: !4809)
!4821 = !DILocation(line: 1500, column: 17, scope: !4809)
!4822 = !DILocation(line: 1502, column: 5, scope: !4809)
!4823 = !DILocation(line: 1513, column: 23, scope: !4809)
!4824 = !DILocation(line: 1513, column: 6, scope: !4809)
!4825 = !DILocation(line: 1512, column: 17, scope: !4809)
!4826 = !DILocation(line: 1514, column: 5, scope: !4809)
!4827 = !DILocation(line: 0, scope: !4809)
!4828 = !DILocation(line: 1516, column: 8, scope: !4806)
!4829 = !DILocation(line: 1517, column: 19, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !2513, line: 1516, column: 33)
!4831 = distinct !DILexicalBlock(scope: !4806, file: !2513, line: 1516, column: 8)
!4832 = !DILocation(line: 1517, column: 17, scope: !4830)
!4833 = !DILocation(line: 1518, column: 4, scope: !4830)
!4834 = !DILocation(line: 1519, column: 19, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !2513, line: 1518, column: 39)
!4836 = distinct !DILexicalBlock(scope: !4831, file: !2513, line: 1518, column: 15)
!4837 = !DILocation(line: 1519, column: 17, scope: !4835)
!4838 = !DILocation(line: 1520, column: 4, scope: !4835)
!4839 = !DILocation(line: 1522, column: 4, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !2513, line: 1521, column: 47)
!4841 = distinct !DILexicalBlock(scope: !4807, file: !2513, line: 1521, column: 14)
!4842 = !DILocation(line: 1527, column: 19, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4840, file: !2513, line: 1522, column: 24)
!4844 = !DILocation(line: 1527, column: 17, scope: !4843)
!4845 = !DILocation(line: 1528, column: 5, scope: !4843)
!4846 = !DILocation(line: 0, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4843, file: !2513, line: 1530, column: 9)
!4848 = !DILocation(line: 1540, column: 23, scope: !4843)
!4849 = !DILocation(line: 1539, column: 17, scope: !4843)
!4850 = !DILocation(line: 1542, column: 5, scope: !4843)
!4851 = !DILocation(line: 1545, column: 23, scope: !4843)
!4852 = !DILocation(line: 1544, column: 17, scope: !4843)
!4853 = !DILocation(line: 1547, column: 5, scope: !4843)
!4854 = !DILocation(line: 1551, column: 23, scope: !4843)
!4855 = !DILocation(line: 1551, column: 6, scope: !4843)
!4856 = !DILocation(line: 1550, column: 17, scope: !4843)
!4857 = !DILocation(line: 1552, column: 5, scope: !4843)
!4858 = !DILocation(line: 0, scope: !4843)
!4859 = !DILocation(line: 1554, column: 8, scope: !4840)
!4860 = !DILocation(line: 1555, column: 19, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !2513, line: 1554, column: 33)
!4862 = distinct !DILexicalBlock(scope: !4840, file: !2513, line: 1554, column: 8)
!4863 = !DILocation(line: 1555, column: 17, scope: !4861)
!4864 = !DILocation(line: 1556, column: 4, scope: !4861)
!4865 = !DILocation(line: 1557, column: 19, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !2513, line: 1556, column: 39)
!4867 = distinct !DILexicalBlock(scope: !4862, file: !2513, line: 1556, column: 15)
!4868 = !DILocation(line: 1557, column: 17, scope: !4866)
!4869 = !DILocation(line: 1558, column: 4, scope: !4866)
!4870 = !DILocation(line: 0, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2513, line: 1560, column: 8)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2513, line: 1559, column: 45)
!4873 = distinct !DILexicalBlock(scope: !4841, file: !2513, line: 1559, column: 14)
!4874 = !DILocation(line: 1566, column: 17, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !2513, line: 1565, column: 46)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !2513, line: 1565, column: 14)
!4877 = !DILocation(line: 1566, column: 15, scope: !4875)
!4878 = !DILocation(line: 1567, column: 3, scope: !4875)
!4879 = !DILocation(line: 1574, column: 21, scope: !4708)
!4880 = !DILocation(line: 1575, column: 4, scope: !4706)
!4881 = !DILocation(line: 0, scope: !4706)
!4882 = !DILocation(line: 1575, column: 4, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4706, file: !2513, line: 1575, column: 4)
!4884 = !DILocation(line: 1582, column: 17, scope: !4644)
!4885 = !DILocation(line: 1582, column: 3, scope: !4644)
!4886 = !DILocation(line: 1584, column: 4, scope: !4710)
!4887 = !DILocation(line: 0, scope: !4710)
!4888 = !DILocation(line: 1584, column: 4, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4710, file: !2513, line: 1584, column: 4)
!4890 = !DILocation(line: 1587, column: 31, scope: !4713)
!4891 = !DILocation(line: 1591, column: 18, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4713, file: !2513, line: 1591, column: 8)
!4893 = !DILocation(line: 1591, column: 8, scope: !4713)
!4894 = !DILocation(line: 1592, column: 11, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !2513, line: 1591, column: 24)
!4896 = !DILocation(line: 0, scope: !4713)
!4897 = !DILocation(line: 1593, column: 4, scope: !4895)
!4898 = !DILocation(line: 1594, column: 11, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4892, file: !2513, line: 1593, column: 11)
!4900 = !DILocation(line: 1604, column: 51, scope: !4711)
!4901 = !DILocation(line: 1604, column: 13, scope: !4711)
!4902 = !DILocation(line: 1604, column: 11, scope: !4711)
!4903 = !DILocation(line: 1606, column: 4, scope: !4711)
!4904 = !DILocation(line: 1609, column: 14, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1609, column: 8)
!4906 = !DILocation(line: 1609, column: 8, scope: !4711)
!4907 = !DILocation(line: 1619, column: 18, scope: !4711)
!4908 = !DILocation(line: 1620, column: 13, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1620, column: 8)
!4910 = !DILocation(line: 1620, column: 8, scope: !4711)
!4911 = !DILocation(line: 1622, column: 36, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4909, file: !2513, line: 1620, column: 18)
!4913 = !DILocation(line: 1622, column: 17, scope: !4912)
!4914 = !DILocation(line: 1623, column: 4, scope: !4912)
!4915 = !DILocation(line: 1632, column: 29, scope: !4711)
!4916 = !DILocation(line: 1632, column: 10, scope: !4711)
!4917 = !DILocation(line: 1632, column: 4, scope: !4711)
!4918 = !DILocation(line: 1407, column: 8, scope: !4644)
!4919 = !DILocation(line: 0, scope: !4711)
!4920 = !DILocation(line: 1634, column: 3, scope: !4711)
!4921 = !DILocation(line: 1640, column: 18, scope: !4716)
!4922 = !DILocation(line: 1640, column: 8, scope: !4711)
!4923 = !DILocation(line: 1729, column: 13, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1729, column: 7)
!4925 = !DILocation(line: 1641, column: 22, scope: !4715)
!4926 = !DILocation(line: 0, scope: !4715)
!4927 = !DILocation(line: 1646, column: 21, scope: !4715)
!4928 = !DILocation(line: 1649, column: 13, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4715, file: !2513, line: 1649, column: 9)
!4930 = !DILocation(line: 1649, column: 9, scope: !4715)
!4931 = !DILocation(line: 1650, column: 35, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4929, file: !2513, line: 1649, column: 34)
!4933 = !DILocation(line: 1650, column: 23, scope: !4932)
!4934 = !DILocation(line: 1651, column: 5, scope: !4932)
!4935 = !DILocation(line: 1660, column: 15, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1660, column: 8)
!4937 = !DILocation(line: 1660, column: 19, scope: !4936)
!4938 = !DILocation(line: 1660, column: 8, scope: !4711)
!4939 = !DILocation(line: 1661, column: 23, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4936, file: !2513, line: 1660, column: 28)
!4941 = !DILocation(line: 1661, column: 11, scope: !4940)
!4942 = !DILocation(line: 1665, column: 22, scope: !4940)
!4943 = !DILocation(line: 1666, column: 21, scope: !4940)
!4944 = !DILocation(line: 1668, column: 5, scope: !4940)
!4945 = !DILocation(line: 1677, column: 30, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !2513, line: 1676, column: 49)
!4947 = distinct !DILexicalBlock(scope: !4711, file: !2513, line: 1676, column: 8)
!4948 = !DILocation(line: 1677, column: 5, scope: !4946)
!4949 = !DILocation(line: 1680, column: 4, scope: !4711)
!4950 = !DILocation(line: 0, scope: !4892)
!4951 = !DILocation(line: 1597, column: 14, scope: !4713)
!4952 = !DILocation(line: 1699, column: 11, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1699, column: 7)
!4954 = !DILocation(line: 1699, column: 7, scope: !4644)
!4955 = !DILocation(line: 1725, column: 7, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1725, column: 7)
!4957 = !DILocation(line: 1725, column: 12, scope: !4956)
!4958 = !DILocation(line: 1747, column: 13, scope: !4723)
!4959 = !DILocation(line: 1747, column: 7, scope: !4644)
!4960 = !DILocation(line: 1722, column: 24, scope: !4644)
!4961 = !DILocation(line: 1725, column: 7, scope: !4644)
!4962 = !DILocation(line: 1729, column: 7, scope: !4644)
!4963 = !DILocation(line: 1736, column: 13, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4644, file: !2513, line: 1736, column: 7)
!4965 = !DILocation(line: 1735, column: 19, scope: !4644)
!4966 = !DILocation(line: 1736, column: 7, scope: !4644)
!4967 = !DILocation(line: 1748, column: 10, scope: !4722)
!4968 = !DILocation(line: 1750, column: 15, scope: !4721)
!4969 = !DILocation(line: 1750, column: 8, scope: !4722)
!4970 = !DILocation(line: 0, scope: !4720)
!4971 = !DILocation(line: 1756, column: 15, scope: !4729)
!4972 = !DILocation(line: 1756, column: 9, scope: !4720)
!4973 = !DILocation(line: 1758, column: 7, scope: !4725)
!4974 = !DILocation(line: 0, scope: !4725)
!4975 = !DILocation(line: 1758, column: 7, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4725, file: !2513, line: 1758, column: 7)
!4977 = !DILocation(line: 1764, column: 5, scope: !4720)
!4978 = !DILocation(line: 0, scope: !4722)
!4979 = !DILocation(line: 1764, column: 20, scope: !4720)
!4980 = !DILocation(line: 1764, column: 17, scope: !4720)
!4981 = !DILocation(line: 1765, column: 6, scope: !4731)
!4982 = !DILocation(line: 0, scope: !4731)
!4983 = !DILocation(line: 1765, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4731, file: !2513, line: 1765, column: 6)
!4985 = distinct !{!4985, !4977, !4986}
!4986 = !DILocation(line: 1766, column: 5, scope: !4720)
!4987 = !DILocation(line: 1773, column: 12, scope: !4736)
!4988 = !DILocation(line: 1773, column: 7, scope: !4644)
!4989 = !DILocation(line: 1773, column: 7, scope: !4736)
!4990 = !DILocation(line: 1774, column: 4, scope: !4734)
!4991 = !DILocation(line: 0, scope: !4734)
!4992 = !DILocation(line: 1774, column: 4, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4734, file: !2513, line: 1774, column: 4)
!4994 = !DILocation(line: 1818, column: 8, scope: !4740)
!4995 = !DILocation(line: 1818, column: 27, scope: !4740)
!4996 = !DILocation(line: 1818, column: 25, scope: !4740)
!4997 = !DILocation(line: 1818, column: 8, scope: !4741)
!4998 = !DILocation(line: 1819, column: 5, scope: !4738)
!4999 = !DILocation(line: 0, scope: !4738)
!5000 = !DILocation(line: 1819, column: 5, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4738, file: !2513, line: 1819, column: 5)
!5002 = !DILocation(line: 1822, column: 14, scope: !4746)
!5003 = !DILocation(line: 1822, column: 8, scope: !4741)
!5004 = !DILocation(line: 1823, column: 5, scope: !4744)
!5005 = !DILocation(line: 0, scope: !4744)
!5006 = !DILocation(line: 1823, column: 5, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4744, file: !2513, line: 1823, column: 5)
!5008 = !DILocation(line: 1826, column: 20, scope: !4741)
!5009 = !DILocation(line: 1827, column: 4, scope: !4741)
!5010 = !DILocation(line: 0, scope: !4741)
!5011 = !DILocation(line: 1827, column: 21, scope: !4741)
!5012 = !DILocation(line: 1827, column: 18, scope: !4741)
!5013 = !DILocation(line: 1828, column: 5, scope: !4748)
!5014 = !DILocation(line: 0, scope: !4748)
!5015 = !DILocation(line: 1828, column: 5, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4748, file: !2513, line: 1828, column: 5)
!5017 = distinct !{!5017, !5009, !5018}
!5018 = !DILocation(line: 1829, column: 4, scope: !4741)
!5019 = !DILocation(line: 1831, column: 4, scope: !4751)
!5020 = !DILocation(line: 0, scope: !4751)
!5021 = !DILocation(line: 1831, column: 4, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4751, file: !2513, line: 1831, column: 4)
!5023 = !DILocation(line: 1835, column: 16, scope: !4644)
!5024 = !DILocation(line: 1835, column: 3, scope: !4644)
!5025 = !DILocation(line: 1836, column: 4, scope: !4753)
!5026 = !DILocation(line: 0, scope: !4753)
!5027 = !DILocation(line: 1836, column: 4, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4753, file: !2513, line: 1836, column: 4)
!5029 = !DILocation(line: 1837, column: 4, scope: !4754)
!5030 = distinct !{!5030, !5024, !5031}
!5031 = !DILocation(line: 1838, column: 3, scope: !4644)
!5032 = !DILocation(line: 1844, column: 1, scope: !4617)
!5033 = distinct !DISubprogram(name: "extract_conversion", scope: !2513, file: !2513, line: 642, type: !5034, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5036)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{!279, !4690, !279}
!5036 = !{!5037, !5038}
!5037 = !DILocalVariable(name: "conv", arg: 1, scope: !5033, file: !2513, line: 642, type: !4690)
!5038 = !DILocalVariable(name: "sp", arg: 2, scope: !5033, file: !2513, line: 643, type: !279)
!5039 = !DILocation(line: 0, scope: !5033)
!5040 = !DILocation(line: 645, column: 10, scope: !5033)
!5041 = !DILocation(line: 653, column: 2, scope: !5033)
!5042 = !DILocation(line: 654, column: 6, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5033, file: !2513, line: 654, column: 6)
!5044 = !DILocation(line: 654, column: 10, scope: !5043)
!5045 = !DILocation(line: 654, column: 6, scope: !5033)
!5046 = !DILocation(line: 655, column: 24, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5043, file: !2513, line: 654, column: 18)
!5048 = !DILocation(line: 655, column: 19, scope: !5047)
!5049 = !DILocation(line: 656, column: 3, scope: !5047)
!5050 = !DILocation(line: 659, column: 7, scope: !5033)
!5051 = !DILocation(line: 660, column: 7, scope: !5033)
!5052 = !DILocation(line: 661, column: 7, scope: !5033)
!5053 = !DILocation(line: 662, column: 7, scope: !5033)
!5054 = !DILocation(line: 663, column: 7, scope: !5033)
!5055 = !DILocation(line: 665, column: 2, scope: !5033)
!5056 = !DILocation(line: 666, column: 1, scope: !5033)
!5057 = distinct !DISubprogram(name: "outs", scope: !2513, file: !2513, line: 1319, type: !5058, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5060)
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!109, !3771, !107, !279, !279}
!5060 = !{!5061, !5062, !5063, !5064, !5065, !5066}
!5061 = !DILocalVariable(name: "out", arg: 1, scope: !5057, file: !2513, line: 1319, type: !3771)
!5062 = !DILocalVariable(name: "ctx", arg: 2, scope: !5057, file: !2513, line: 1320, type: !107)
!5063 = !DILocalVariable(name: "sp", arg: 3, scope: !5057, file: !2513, line: 1321, type: !279)
!5064 = !DILocalVariable(name: "ep", arg: 4, scope: !5057, file: !2513, line: 1322, type: !279)
!5065 = !DILocalVariable(name: "count", scope: !5057, file: !2513, line: 1324, type: !234)
!5066 = !DILocalVariable(name: "rc", scope: !5067, file: !2513, line: 1327, type: !109)
!5067 = distinct !DILexicalBlock(scope: !5057, file: !2513, line: 1326, column: 45)
!5068 = !DILocation(line: 0, scope: !5057)
!5069 = !DILocation(line: 1326, column: 2, scope: !5057)
!5070 = !DILocation(line: 1324, column: 9, scope: !5057)
!5071 = !DILocation(line: 1326, column: 13, scope: !5057)
!5072 = !DILocation(line: 1326, column: 19, scope: !5057)
!5073 = !DILocation(line: 1327, column: 21, scope: !5067)
!5074 = !DILocation(line: 1326, column: 36, scope: !5057)
!5075 = !DILocation(line: 1326, column: 39, scope: !5057)
!5076 = !DILocation(line: 1327, column: 24, scope: !5067)
!5077 = !DILocation(line: 1327, column: 16, scope: !5067)
!5078 = !DILocation(line: 1327, column: 12, scope: !5067)
!5079 = !DILocation(line: 0, scope: !5067)
!5080 = !DILocation(line: 1329, column: 10, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5067, file: !2513, line: 1329, column: 7)
!5082 = !DILocation(line: 1329, column: 7, scope: !5067)
!5083 = distinct !{!5083, !5069, !5084}
!5084 = !DILocation(line: 1333, column: 2, scope: !5057)
!5085 = !DILocation(line: 1336, column: 1, scope: !5057)
!5086 = distinct !DISubprogram(name: "encode_uint", scope: !2513, file: !2513, line: 788, type: !5087, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!285, !2535, !4690, !285, !279}
!5089 = !{!5090, !5091, !5092, !5093, !5094, !5095, !5097, !5098}
!5090 = !DILocalVariable(name: "value", arg: 1, scope: !5086, file: !2513, line: 788, type: !2535)
!5091 = !DILocalVariable(name: "conv", arg: 2, scope: !5086, file: !2513, line: 789, type: !4690)
!5092 = !DILocalVariable(name: "bps", arg: 3, scope: !5086, file: !2513, line: 790, type: !285)
!5093 = !DILocalVariable(name: "bpe", arg: 4, scope: !5086, file: !2513, line: 791, type: !279)
!5094 = !DILocalVariable(name: "upcase", scope: !5086, file: !2513, line: 793, type: !347)
!5095 = !DILocalVariable(name: "radix", scope: !5086, file: !2513, line: 794, type: !5096)
!5096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5097 = !DILocalVariable(name: "bp", scope: !5086, file: !2513, line: 795, type: !285)
!5098 = !DILocalVariable(name: "lsv", scope: !5099, file: !2513, line: 798, type: !32)
!5099 = distinct !DILexicalBlock(scope: !5086, file: !2513, line: 797, column: 5)
!5100 = !DILocation(line: 0, scope: !5086)
!5101 = !DILocation(line: 793, column: 35, scope: !5086)
!5102 = !DILocation(line: 793, column: 24, scope: !5086)
!5103 = !DILocation(line: 793, column: 16, scope: !5086)
!5104 = !DILocation(line: 794, column: 29, scope: !5086)
!5105 = !DILocation(line: 795, column: 24, scope: !5086)
!5106 = !DILocation(line: 795, column: 17, scope: !5086)
!5107 = !DILocation(line: 797, column: 2, scope: !5086)
!5108 = !DILocation(line: 802, column: 9, scope: !5099)
!5109 = !DILocation(line: 798, column: 22, scope: !5099)
!5110 = !DILocation(line: 0, scope: !5099)
!5111 = !DILocation(line: 800, column: 16, scope: !5099)
!5112 = !DILocation(line: 800, column: 11, scope: !5099)
!5113 = !DILocation(line: 800, column: 4, scope: !5099)
!5114 = !DILocation(line: 800, column: 9, scope: !5099)
!5115 = !DILocation(line: 803, column: 18, scope: !5086)
!5116 = !DILocation(line: 803, column: 24, scope: !5086)
!5117 = !DILocation(line: 803, column: 2, scope: !5099)
!5118 = distinct !{!5118, !5107, !5119}
!5119 = !DILocation(line: 803, column: 37, scope: !5086)
!5120 = !DILocation(line: 808, column: 12, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5086, file: !2513, line: 808, column: 6)
!5122 = !DILocation(line: 808, column: 6, scope: !5086)
!5123 = !DILocation(line: 809, column: 7, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !2513, line: 808, column: 23)
!5125 = !DILocation(line: 813, column: 3, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !2513, line: 811, column: 27)
!5127 = distinct !DILexicalBlock(scope: !5128, file: !2513, line: 811, column: 14)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !2513, line: 809, column: 7)
!5129 = !DILocation(line: 0, scope: !5128)
!5130 = !DILocation(line: 818, column: 2, scope: !5086)
!5131 = distinct !DISubprogram(name: "store_count", scope: !2513, file: !2513, line: 1280, type: !5132, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5136)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{null, !5134, !107, !109}
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 32)
!5135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4657)
!5136 = !{!5137, !5138, !5139}
!5137 = !DILocalVariable(name: "conv", arg: 1, scope: !5131, file: !2513, line: 1280, type: !5134)
!5138 = !DILocalVariable(name: "dp", arg: 2, scope: !5131, file: !2513, line: 1281, type: !107)
!5139 = !DILocalVariable(name: "count", arg: 3, scope: !5131, file: !2513, line: 1282, type: !109)
!5140 = !DILocation(line: 0, scope: !5131)
!5141 = !DILocation(line: 1284, column: 38, scope: !5131)
!5142 = !DILocation(line: 1284, column: 2, scope: !5131)
!5143 = !DILocation(line: 1286, column: 4, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5131, file: !2513, line: 1284, column: 50)
!5145 = !DILocation(line: 1286, column: 14, scope: !5144)
!5146 = !DILocation(line: 1287, column: 3, scope: !5144)
!5147 = !DILocation(line: 1289, column: 24, scope: !5144)
!5148 = !DILocation(line: 1289, column: 22, scope: !5144)
!5149 = !DILocation(line: 1290, column: 3, scope: !5144)
!5150 = !DILocation(line: 1292, column: 18, scope: !5144)
!5151 = !DILocation(line: 1292, column: 4, scope: !5144)
!5152 = !DILocation(line: 1292, column: 16, scope: !5144)
!5153 = !DILocation(line: 1293, column: 3, scope: !5144)
!5154 = !DILocation(line: 1295, column: 4, scope: !5144)
!5155 = !DILocation(line: 1295, column: 15, scope: !5144)
!5156 = !DILocation(line: 1296, column: 3, scope: !5144)
!5157 = !DILocation(line: 1298, column: 22, scope: !5144)
!5158 = !DILocation(line: 1298, column: 4, scope: !5144)
!5159 = !DILocation(line: 1298, column: 20, scope: !5144)
!5160 = !DILocation(line: 1299, column: 3, scope: !5144)
!5161 = !DILocation(line: 1301, column: 21, scope: !5144)
!5162 = !DILocation(line: 1301, column: 4, scope: !5144)
!5163 = !DILocation(line: 1301, column: 19, scope: !5144)
!5164 = !DILocation(line: 1302, column: 3, scope: !5144)
!5165 = !DILocation(line: 1304, column: 4, scope: !5144)
!5166 = !DILocation(line: 1304, column: 17, scope: !5144)
!5167 = !DILocation(line: 1305, column: 3, scope: !5144)
!5168 = !DILocation(line: 1307, column: 4, scope: !5144)
!5169 = !DILocation(line: 1307, column: 20, scope: !5144)
!5170 = !DILocation(line: 1308, column: 3, scope: !5144)
!5171 = !DILocation(line: 1316, column: 1, scope: !5131)
!5172 = distinct !DISubprogram(name: "isupper", scope: !5173, file: !5173, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5174)
!5173 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5174 = !{!5175}
!5175 = !DILocalVariable(name: "a", arg: 1, scope: !5172, file: !5173, line: 16, type: !109)
!5176 = !DILocation(line: 0, scope: !5172)
!5177 = !DILocation(line: 18, column: 29, scope: !5172)
!5178 = !DILocation(line: 18, column: 45, scope: !5172)
!5179 = !DILocation(line: 18, column: 2, scope: !5172)
!5180 = distinct !DISubprogram(name: "conversion_radix", scope: !2513, file: !2513, line: 761, type: !5181, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5183)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!234, !150}
!5183 = !{!5184}
!5184 = !DILocalVariable(name: "specifier", arg: 1, scope: !5180, file: !2513, line: 761, type: !150)
!5185 = !DILocation(line: 0, scope: !5180)
!5186 = !DILocation(line: 763, column: 2, scope: !5180)
!5187 = !DILocation(line: 770, column: 3, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5180, file: !2513, line: 763, column: 21)
!5189 = !DILocation(line: 774, column: 3, scope: !5188)
!5190 = !DILocation(line: 0, scope: !5188)
!5191 = !DILocation(line: 776, column: 1, scope: !5180)
!5192 = distinct !DISubprogram(name: "extract_flags", scope: !2513, file: !2513, line: 339, type: !5034, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5193)
!5193 = !{!5194, !5195, !5196}
!5194 = !DILocalVariable(name: "conv", arg: 1, scope: !5192, file: !2513, line: 339, type: !4690)
!5195 = !DILocalVariable(name: "sp", arg: 2, scope: !5192, file: !2513, line: 340, type: !279)
!5196 = !DILocalVariable(name: "loop", scope: !5192, file: !2513, line: 342, type: !347)
!5197 = !DILocation(line: 0, scope: !5192)
!5198 = !DILocation(line: 344, column: 2, scope: !5192)
!5199 = !DILocation(line: 345, column: 11, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5192, file: !2513, line: 344, column: 5)
!5201 = !DILocation(line: 345, column: 3, scope: !5200)
!5202 = !DILocation(line: 351, column: 4, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !2513, line: 345, column: 16)
!5204 = !DILocation(line: 354, column: 4, scope: !5203)
!5205 = !DILocation(line: 357, column: 4, scope: !5203)
!5206 = !DILocation(line: 360, column: 4, scope: !5203)
!5207 = !DILocation(line: 0, scope: !5203)
!5208 = !DILocation(line: 370, column: 12, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5192, file: !2513, line: 370, column: 6)
!5210 = !DILocation(line: 370, column: 22, scope: !5209)
!5211 = !DILocation(line: 371, column: 19, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !2513, line: 370, column: 42)
!5213 = !DILocation(line: 372, column: 2, scope: !5212)
!5214 = !DILocation(line: 376, column: 2, scope: !5192)
!5215 = distinct !DISubprogram(name: "extract_width", scope: !2513, file: !2513, line: 388, type: !5034, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5216)
!5216 = !{!5217, !5218, !5219, !5220}
!5217 = !DILocalVariable(name: "conv", arg: 1, scope: !5215, file: !2513, line: 388, type: !4690)
!5218 = !DILocalVariable(name: "sp", arg: 2, scope: !5215, file: !2513, line: 389, type: !279)
!5219 = !DILocalVariable(name: "wp", scope: !5215, file: !2513, line: 398, type: !279)
!5220 = !DILocalVariable(name: "width", scope: !5215, file: !2513, line: 399, type: !234)
!5221 = !DILocation(line: 0, scope: !5215)
!5222 = !DILocation(line: 391, column: 8, scope: !5215)
!5223 = !DILocation(line: 391, column: 22, scope: !5215)
!5224 = !DILocation(line: 393, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5215, file: !2513, line: 393, column: 6)
!5226 = !DILocation(line: 393, column: 10, scope: !5225)
!5227 = !DILocation(line: 393, column: 6, scope: !5215)
!5228 = !DILocation(line: 394, column: 20, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5225, file: !2513, line: 393, column: 18)
!5230 = !DILocation(line: 395, column: 10, scope: !5229)
!5231 = !DILocation(line: 395, column: 3, scope: !5229)
!5232 = !DILocation(line: 399, column: 17, scope: !5215)
!5233 = !DILocation(line: 401, column: 6, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5215, file: !2513, line: 401, column: 6)
!5235 = !DILocation(line: 401, column: 9, scope: !5234)
!5236 = !DILocation(line: 401, column: 6, scope: !5215)
!5237 = !DILocation(line: 402, column: 23, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5234, file: !2513, line: 401, column: 16)
!5239 = !DILocation(line: 403, column: 9, scope: !5238)
!5240 = !DILocation(line: 403, column: 21, scope: !5238)
!5241 = !DILocation(line: 405, column: 11, scope: !5238)
!5242 = !DILocation(line: 404, column: 21, scope: !5238)
!5243 = !DILocation(line: 406, column: 2, scope: !5238)
!5244 = !DILocation(line: 409, column: 1, scope: !5215)
!5245 = distinct !DISubprogram(name: "extract_prec", scope: !2513, file: !2513, line: 420, type: !5034, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5246)
!5246 = !{!5247, !5248, !5249}
!5247 = !DILocalVariable(name: "conv", arg: 1, scope: !5245, file: !2513, line: 420, type: !4690)
!5248 = !DILocalVariable(name: "sp", arg: 2, scope: !5245, file: !2513, line: 421, type: !279)
!5249 = !DILocalVariable(name: "prec", scope: !5245, file: !2513, line: 435, type: !234)
!5250 = !DILocation(line: 0, scope: !5245)
!5251 = !DILocation(line: 423, column: 24, scope: !5245)
!5252 = !DILocation(line: 423, column: 28, scope: !5245)
!5253 = !DILocation(line: 423, column: 8, scope: !5245)
!5254 = !DILocation(line: 423, column: 21, scope: !5245)
!5255 = !DILocation(line: 425, column: 6, scope: !5245)
!5256 = !DILocation(line: 428, column: 2, scope: !5245)
!5257 = !DILocation(line: 430, column: 6, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5245, file: !2513, line: 430, column: 6)
!5259 = !DILocation(line: 430, column: 10, scope: !5258)
!5260 = !DILocation(line: 430, column: 6, scope: !5245)
!5261 = !DILocation(line: 431, column: 19, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !2513, line: 430, column: 18)
!5263 = !DILocation(line: 432, column: 10, scope: !5262)
!5264 = !DILocation(line: 432, column: 3, scope: !5262)
!5265 = !DILocation(line: 435, column: 16, scope: !5245)
!5266 = !DILocation(line: 437, column: 8, scope: !5245)
!5267 = !DILocation(line: 437, column: 19, scope: !5245)
!5268 = !DILocation(line: 439, column: 10, scope: !5245)
!5269 = !DILocation(line: 438, column: 20, scope: !5245)
!5270 = !DILocation(line: 441, column: 9, scope: !5245)
!5271 = !DILocation(line: 442, column: 1, scope: !5245)
!5272 = distinct !DISubprogram(name: "extract_length", scope: !2513, file: !2513, line: 453, type: !5034, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5273)
!5273 = !{!5274, !5275}
!5274 = !DILocalVariable(name: "conv", arg: 1, scope: !5272, file: !2513, line: 453, type: !4690)
!5275 = !DILocalVariable(name: "sp", arg: 2, scope: !5272, file: !2513, line: 454, type: !279)
!5276 = !DILocation(line: 0, scope: !5272)
!5277 = !DILocation(line: 456, column: 10, scope: !5272)
!5278 = !DILocation(line: 456, column: 2, scope: !5272)
!5279 = !DILocation(line: 458, column: 8, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5281, file: !2513, line: 458, column: 7)
!5281 = distinct !DILexicalBlock(scope: !5272, file: !2513, line: 456, column: 15)
!5282 = !DILocation(line: 458, column: 7, scope: !5280)
!5283 = !DILocation(line: 458, column: 13, scope: !5280)
!5284 = !DILocation(line: 0, scope: !5280)
!5285 = !DILocation(line: 458, column: 7, scope: !5281)
!5286 = !DILocation(line: 459, column: 21, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5280, file: !2513, line: 458, column: 21)
!5288 = !DILocation(line: 460, column: 4, scope: !5287)
!5289 = !DILocation(line: 461, column: 3, scope: !5287)
!5290 = !DILocation(line: 462, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5280, file: !2513, line: 461, column: 10)
!5292 = !DILocation(line: 466, column: 8, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5281, file: !2513, line: 466, column: 7)
!5294 = !DILocation(line: 466, column: 7, scope: !5293)
!5295 = !DILocation(line: 466, column: 13, scope: !5293)
!5296 = !DILocation(line: 0, scope: !5293)
!5297 = !DILocation(line: 466, column: 7, scope: !5281)
!5298 = !DILocation(line: 467, column: 21, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !2513, line: 466, column: 21)
!5300 = !DILocation(line: 468, column: 4, scope: !5299)
!5301 = !DILocation(line: 469, column: 3, scope: !5299)
!5302 = !DILocation(line: 470, column: 21, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5293, file: !2513, line: 469, column: 10)
!5304 = !DILocation(line: 474, column: 9, scope: !5281)
!5305 = !DILocation(line: 474, column: 20, scope: !5281)
!5306 = !DILocation(line: 475, column: 3, scope: !5281)
!5307 = !DILocation(line: 476, column: 3, scope: !5281)
!5308 = !DILocation(line: 478, column: 9, scope: !5281)
!5309 = !DILocation(line: 478, column: 20, scope: !5281)
!5310 = !DILocation(line: 479, column: 3, scope: !5281)
!5311 = !DILocation(line: 480, column: 3, scope: !5281)
!5312 = !DILocation(line: 482, column: 9, scope: !5281)
!5313 = !DILocation(line: 482, column: 20, scope: !5281)
!5314 = !DILocation(line: 483, column: 3, scope: !5281)
!5315 = !DILocation(line: 484, column: 3, scope: !5281)
!5316 = !DILocation(line: 486, column: 9, scope: !5281)
!5317 = !DILocation(line: 486, column: 20, scope: !5281)
!5318 = !DILocation(line: 487, column: 3, scope: !5281)
!5319 = !DILocation(line: 492, column: 21, scope: !5281)
!5320 = !DILocation(line: 493, column: 3, scope: !5281)
!5321 = !DILocation(line: 495, column: 9, scope: !5281)
!5322 = !DILocation(line: 495, column: 20, scope: !5281)
!5323 = !DILocation(line: 496, column: 3, scope: !5281)
!5324 = !DILocation(line: 498, column: 2, scope: !5272)
!5325 = distinct !DISubprogram(name: "extract_specifier", scope: !2513, file: !2513, line: 513, type: !5034, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5326)
!5326 = !{!5327, !5328, !5329, !5330}
!5327 = !DILocalVariable(name: "conv", arg: 1, scope: !5325, file: !2513, line: 513, type: !4690)
!5328 = !DILocalVariable(name: "sp", arg: 2, scope: !5325, file: !2513, line: 514, type: !279)
!5329 = !DILocalVariable(name: "unsupported", scope: !5325, file: !2513, line: 516, type: !347)
!5330 = !DILabel(scope: !5331, name: "int_conv", file: !2513, line: 526)
!5331 = distinct !DILexicalBlock(scope: !5325, file: !2513, line: 520, column: 27)
!5332 = !DILocation(line: 0, scope: !5325)
!5333 = !DILocation(line: 518, column: 20, scope: !5325)
!5334 = !DILocation(line: 518, column: 8, scope: !5325)
!5335 = !DILocation(line: 518, column: 18, scope: !5325)
!5336 = !DILocation(line: 520, column: 2, scope: !5325)
!5337 = !DILocation(line: 525, column: 3, scope: !5331)
!5338 = !DILocation(line: 0, scope: !5331)
!5339 = !DILocation(line: 526, column: 1, scope: !5331)
!5340 = !DILocation(line: 528, column: 24, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5331, file: !2513, line: 528, column: 7)
!5342 = !DILocation(line: 528, column: 7, scope: !5331)
!5343 = !DILocation(line: 535, column: 23, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5331, file: !2513, line: 535, column: 7)
!5345 = !DILocation(line: 535, column: 7, scope: !5331)
!5346 = !DILocation(line: 536, column: 36, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !2513, line: 535, column: 31)
!5348 = !DILocation(line: 537, column: 3, scope: !5347)
!5349 = !DILocation(line: 570, column: 9, scope: !5331)
!5350 = !DILocation(line: 570, column: 23, scope: !5331)
!5351 = !DILocation(line: 575, column: 4, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !2513, line: 573, column: 48)
!5353 = distinct !DILexicalBlock(scope: !5331, file: !2513, line: 573, column: 7)
!5354 = !DILocation(line: 603, column: 9, scope: !5331)
!5355 = !DILocation(line: 603, column: 23, scope: !5331)
!5356 = !DILocation(line: 605, column: 24, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5331, file: !2513, line: 605, column: 7)
!5358 = !DILocation(line: 605, column: 7, scope: !5331)
!5359 = !DILocation(line: 612, column: 9, scope: !5331)
!5360 = !DILocation(line: 612, column: 23, scope: !5331)
!5361 = !DILocation(line: 619, column: 24, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5331, file: !2513, line: 619, column: 7)
!5363 = !DILocation(line: 619, column: 7, scope: !5331)
!5364 = !DILocation(line: 625, column: 9, scope: !5331)
!5365 = !DILocation(line: 625, column: 17, scope: !5331)
!5366 = !DILocation(line: 626, column: 3, scope: !5331)
!5367 = !DILocation(line: 629, column: 20, scope: !5325)
!5368 = !DILocation(line: 629, column: 8, scope: !5325)
!5369 = !DILocation(line: 518, column: 23, scope: !5325)
!5370 = !DILocation(line: 631, column: 2, scope: !5325)
!5371 = distinct !DISubprogram(name: "extract_decimal", scope: !2513, file: !2513, line: 318, type: !5372, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!234, !278}
!5374 = !{!5375, !5376, !5377}
!5375 = !DILocalVariable(name: "str", arg: 1, scope: !5371, file: !2513, line: 318, type: !278)
!5376 = !DILocalVariable(name: "sp", scope: !5371, file: !2513, line: 320, type: !279)
!5377 = !DILocalVariable(name: "val", scope: !5371, file: !2513, line: 321, type: !234)
!5378 = !DILocation(line: 0, scope: !5371)
!5379 = !DILocation(line: 320, column: 19, scope: !5371)
!5380 = !DILocation(line: 323, column: 37, scope: !5371)
!5381 = !DILocation(line: 323, column: 17, scope: !5371)
!5382 = !DILocation(line: 323, column: 9, scope: !5371)
!5383 = !DILocation(line: 323, column: 2, scope: !5371)
!5384 = !DILocation(line: 324, column: 13, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5371, file: !2513, line: 323, column: 43)
!5386 = !DILocation(line: 324, column: 24, scope: !5385)
!5387 = !DILocation(line: 324, column: 19, scope: !5385)
!5388 = !DILocation(line: 324, column: 27, scope: !5385)
!5389 = distinct !{!5389, !5383, !5390}
!5390 = !DILocation(line: 325, column: 2, scope: !5371)
!5391 = !DILocation(line: 326, column: 7, scope: !5371)
!5392 = !DILocation(line: 327, column: 2, scope: !5371)
!5393 = distinct !DISubprogram(name: "isdigit", scope: !5173, file: !5173, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !5394)
!5394 = !{!5395}
!5395 = !DILocalVariable(name: "a", arg: 1, scope: !5393, file: !5173, line: 43, type: !109)
!5396 = !DILocation(line: 0, scope: !5393)
!5397 = !DILocation(line: 45, column: 29, scope: !5393)
!5398 = !DILocation(line: 45, column: 45, scope: !5393)
!5399 = !DILocation(line: 45, column: 2, scope: !5393)
!5400 = distinct !DISubprogram(name: "assert_post_action", scope: !5401, file: !5401, line: 26, type: !5402, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !5404)
!5401 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5402 = !DISubroutineType(types: !5403)
!5403 = !{null, !279, !32}
!5404 = !{!5405, !5406}
!5405 = !DILocalVariable(name: "file", arg: 1, scope: !5400, file: !5401, line: 26, type: !279)
!5406 = !DILocalVariable(name: "line", arg: 2, scope: !5400, file: !5401, line: 26, type: !32)
!5407 = !DILocation(line: 0, scope: !5400)
!5408 = !DILocation(line: 43, column: 2, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5400, file: !5401, line: 43, column: 2)
!5410 = !{i64 2154751732, i64 2154751748, i64 2154751774, i64 2154751802, i64 2154751822}
!5411 = !DILocation(line: 44, column: 1, scope: !5400)
!5412 = distinct !DISubprogram(name: "assert_print", scope: !5401, file: !5401, line: 46, type: !4383, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2543, retainedNodes: !5413)
!5413 = !{!5414, !5415}
!5414 = !DILocalVariable(name: "fmt", arg: 1, scope: !5412, file: !5401, line: 46, type: !279)
!5415 = !DILocalVariable(name: "ap", scope: !5412, file: !5401, line: 48, type: !5416)
!5416 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3389, line: 99, baseType: !5417)
!5417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3389, line: 40, baseType: !5418)
!5418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5401, baseType: !5419)
!5419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5420)
!5420 = !{!5421}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5419, file: !5401, line: 48, baseType: !107, size: 32)
!5422 = !DILocation(line: 0, scope: !5412)
!5423 = !DILocation(line: 48, column: 2, scope: !5412)
!5424 = !DILocation(line: 48, column: 10, scope: !5412)
!5425 = !DILocation(line: 50, column: 2, scope: !5412)
!5426 = !DILocation(line: 52, column: 2, scope: !5412)
!5427 = !DILocation(line: 54, column: 2, scope: !5412)
!5428 = !DILocation(line: 55, column: 1, scope: !5412)
!5429 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5430, file: !5430, line: 9, type: !3087, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !2024)
!5430 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!5431 = !DILocation(line: 11, column: 1, scope: !5429)
!5432 = !{i64 2147565781, i64 2147565824, i64 2147565864}
!5433 = !DILocation(line: 12, column: 1, scope: !5429)
!5434 = !{i64 2147570008, i64 2147570051, i64 2147570091}
!5435 = !DILocation(line: 13, column: 1, scope: !5429)
!5436 = !{i64 2147570217, i64 2147570260, i64 2147570300}
!5437 = !DILocation(line: 14, column: 1, scope: !5429)
!5438 = !{i64 2147570386, i64 2147570429, i64 2147570469}
!5439 = !DILocation(line: 15, column: 1, scope: !5429)
!5440 = !{i64 2147570549, i64 2147570592, i64 2147570632}
!5441 = !DILocation(line: 16, column: 1, scope: !5429)
!5442 = !{i64 2147570733, i64 2147570776, i64 2147570816}
!5443 = !DILocation(line: 17, column: 1, scope: !5429)
!5444 = !{i64 2147570912, i64 2147570955, i64 2147570995}
!5445 = !DILocation(line: 18, column: 1, scope: !5429)
!5446 = !{i64 2147571154, i64 2147571197, i64 2147571237}
!5447 = !DILocation(line: 19, column: 1, scope: !5429)
!5448 = !{i64 2147571389, i64 2147571432, i64 2147571472}
!5449 = !DILocation(line: 20, column: 1, scope: !5429)
!5450 = !{i64 2147571576, i64 2147571619, i64 2147571659}
!5451 = !DILocation(line: 21, column: 1, scope: !5429)
!5452 = !{i64 2147571792, i64 2147571835, i64 2147571875}
!5453 = !DILocation(line: 22, column: 1, scope: !5429)
!5454 = !{i64 2147571995, i64 2147572038, i64 2147572078}
!5455 = !DILocation(line: 23, column: 1, scope: !5429)
!5456 = !{i64 2147572198, i64 2147572241, i64 2147572281}
!5457 = !DILocation(line: 24, column: 1, scope: !5429)
!5458 = !{i64 2147572373, i64 2147572416, i64 2147572456}
!5459 = !DILocation(line: 25, column: 1, scope: !5429)
!5460 = !{i64 2147572581, i64 2147572624, i64 2147572664}
!5461 = !DILocation(line: 26, column: 1, scope: !5429)
!5462 = !{i64 2147572785, i64 2147572828, i64 2147572868}
!5463 = !DILocation(line: 27, column: 1, scope: !5429)
!5464 = !{i64 2147572978, i64 2147573021, i64 2147573061}
!5465 = !DILocation(line: 28, column: 1, scope: !5429)
!5466 = !{i64 2147573180, i64 2147573223, i64 2147573263}
!5467 = !DILocation(line: 29, column: 1, scope: !5429)
!5468 = !{i64 2147573379, i64 2147573422, i64 2147573462}
!5469 = !DILocation(line: 30, column: 1, scope: !5429)
!5470 = !{i64 2147573606, i64 2147573649, i64 2147573689}
!5471 = !DILocation(line: 31, column: 1, scope: !5429)
!5472 = !{i64 2147573808, i64 2147573851, i64 2147573891}
!5473 = !DILocation(line: 32, column: 1, scope: !5429)
!5474 = !{i64 2147574023, i64 2147574066, i64 2147574106}
!5475 = !DILocation(line: 33, column: 1, scope: !5429)
!5476 = !{i64 2147574240, i64 2147574283, i64 2147574323}
!5477 = !DILocation(line: 34, column: 1, scope: !5429)
!5478 = !{i64 2147574412, i64 2147574455, i64 2147574495}
!5479 = !DILocation(line: 35, column: 1, scope: !5429)
!5480 = !{i64 2147574614, i64 2147574657, i64 2147574697}
!5481 = !DILocation(line: 36, column: 1, scope: !5429)
!5482 = !{i64 2147574840, i64 2147574883, i64 2147574923}
!5483 = !DILocation(line: 37, column: 1, scope: !5429)
!5484 = !{i64 2147575039, i64 2147575082, i64 2147575122}
!5485 = !DILocation(line: 38, column: 1, scope: !5429)
!5486 = !{i64 2147575214, i64 2147575257, i64 2147575297}
!5487 = !DILocation(line: 39, column: 1, scope: !5429)
!5488 = !{i64 2147575467, i64 2147575510, i64 2147575550}
!5489 = !DILocation(line: 40, column: 1, scope: !5429)
!5490 = !{i64 2147575708, i64 2147575751, i64 2147575791}
!5491 = !DILocation(line: 41, column: 1, scope: !5429)
!5492 = !{i64 2147575943, i64 2147575986, i64 2147576026}
!5493 = !DILocation(line: 42, column: 1, scope: !5429)
!5494 = !{i64 2147576175, i64 2147576218, i64 2147576258}
!5495 = !DILocation(line: 43, column: 1, scope: !5429)
!5496 = !{i64 2147576401, i64 2147576444, i64 2147576484}
!5497 = !DILocation(line: 44, column: 1, scope: !5429)
!5498 = !{i64 2147576627, i64 2147576670, i64 2147576710}
!5499 = !DILocation(line: 45, column: 1, scope: !5429)
!5500 = !{i64 2147576853, i64 2147576896, i64 2147576936}
!5501 = !DILocation(line: 46, column: 1, scope: !5429)
!5502 = !{i64 2147577088, i64 2147577131, i64 2147577171}
!5503 = !DILocation(line: 47, column: 1, scope: !5429)
!5504 = !{i64 2147577314, i64 2147577357, i64 2147577397}
!5505 = !DILocation(line: 48, column: 1, scope: !5429)
!5506 = !{i64 2147577561, i64 2147577604, i64 2147577644}
!5507 = !DILocation(line: 49, column: 1, scope: !5429)
!5508 = !{i64 2147577790, i64 2147577833, i64 2147577873}
!5509 = !DILocation(line: 50, column: 1, scope: !5429)
!5510 = !{i64 2147578022, i64 2147578065, i64 2147578105}
!5511 = !DILocation(line: 51, column: 1, scope: !5429)
!5512 = !{i64 2147578266, i64 2147578309, i64 2147578349}
!5513 = !DILocation(line: 52, column: 1, scope: !5429)
!5514 = !{i64 2147578504, i64 2147578547, i64 2147578587}
!5515 = !DILocation(line: 53, column: 1, scope: !5429)
!5516 = !{i64 2147582839, i64 2147582882, i64 2147582922}
!5517 = !DILocation(line: 54, column: 1, scope: !5429)
!5518 = !{i64 2147583077, i64 2147583120, i64 2147583160}
!5519 = !DILocation(line: 55, column: 1, scope: !5429)
!5520 = !{i64 2147583330, i64 2147583373, i64 2147583413}
!5521 = !DILocation(line: 56, column: 1, scope: !5429)
!5522 = !{i64 2147583574, i64 2147583617, i64 2147583657}
!5523 = !DILocation(line: 57, column: 1, scope: !5429)
!5524 = !{i64 2147583809, i64 2147583852, i64 2147583892}
!5525 = !DILocation(line: 58, column: 1, scope: !5429)
!5526 = !{i64 2147584059, i64 2147584102, i64 2147584142}
!5527 = !DILocation(line: 59, column: 1, scope: !5429)
!5528 = !{i64 2147584306, i64 2147584349, i64 2147584389}
!5529 = !DILocation(line: 60, column: 1, scope: !5429)
!5530 = !{i64 2147584541, i64 2147584584, i64 2147584624}
!5531 = !DILocation(line: 61, column: 1, scope: !5429)
!5532 = !{i64 2147584776, i64 2147584819, i64 2147584859}
!5533 = !DILocation(line: 62, column: 1, scope: !5429)
!5534 = !{i64 2147585011, i64 2147585054, i64 2147585094}
!5535 = !DILocation(line: 63, column: 1, scope: !5429)
!5536 = !{i64 2147585249, i64 2147585292, i64 2147585332}
!5537 = !DILocation(line: 64, column: 1, scope: !5429)
!5538 = !{i64 2147585490, i64 2147585533, i64 2147585573}
!5539 = !DILocation(line: 65, column: 1, scope: !5429)
!5540 = !{i64 2147585770, i64 2147585813, i64 2147585853}
!5541 = !DILocation(line: 66, column: 1, scope: !5429)
!5542 = !{i64 2147586029, i64 2147586072, i64 2147586112}
!5543 = !DILocation(line: 67, column: 1, scope: !5429)
!5544 = !{i64 2147586258, i64 2147586301, i64 2147586341}
!5545 = !DILocation(line: 68, column: 1, scope: !5429)
!5546 = !{i64 2147586484, i64 2147586527, i64 2147586567}
!5547 = !DILocation(line: 69, column: 1, scope: !5429)
!5548 = !{i64 2147586722, i64 2147586765, i64 2147586805}
!5549 = !DILocation(line: 70, column: 1, scope: !5429)
!5550 = !{i64 2147586951, i64 2147586994, i64 2147587034}
!5551 = !DILocation(line: 71, column: 1, scope: !5429)
!5552 = !{i64 2147587159, i64 2147587202, i64 2147587242}
!5553 = !DILocation(line: 72, column: 1, scope: !5429)
!5554 = !{i64 2147587370, i64 2147587413, i64 2147587453}
!5555 = !DILocation(line: 73, column: 1, scope: !5429)
!5556 = !{i64 2147587605, i64 2147587648, i64 2147587688}
!5557 = !DILocation(line: 74, column: 1, scope: !5429)
!5558 = !{i64 2147587834, i64 2147587877, i64 2147587917}
!5559 = !DILocation(line: 75, column: 1, scope: !5429)
!5560 = !{i64 2147588051, i64 2147588094, i64 2147588134}
!5561 = !DILocation(line: 76, column: 1, scope: !5429)
!5562 = !{i64 2147588280, i64 2147588323, i64 2147588363}
!5563 = !DILocation(line: 77, column: 1, scope: !5429)
!5564 = !{i64 2147588518, i64 2147588561, i64 2147588601}
!5565 = !DILocation(line: 78, column: 1, scope: !5429)
!5566 = !{i64 2147588750, i64 2147588793, i64 2147588833}
!5567 = !DILocation(line: 79, column: 1, scope: !5429)
!5568 = !{i64 2147588976, i64 2147589019, i64 2147589059}
!5569 = !DILocation(line: 80, column: 1, scope: !5429)
!5570 = !{i64 2147589193, i64 2147589236, i64 2147589276}
!5571 = !DILocation(line: 81, column: 1, scope: !5429)
!5572 = !{i64 2147589425, i64 2147589468, i64 2147589508}
!5573 = !DILocation(line: 82, column: 1, scope: !5429)
!5574 = !{i64 2147589651, i64 2147589694, i64 2147589734}
!5575 = !DILocation(line: 83, column: 1, scope: !5429)
!5576 = !{i64 2147589865, i64 2147589908, i64 2147589948}
!5577 = !DILocation(line: 84, column: 1, scope: !5429)
!5578 = !{i64 2147590085, i64 2147590128, i64 2147590168}
!5579 = !DILocation(line: 85, column: 1, scope: !5429)
!5580 = !{i64 2147590317, i64 2147590360, i64 2147590400}
!5581 = !DILocation(line: 86, column: 1, scope: !5429)
!5582 = !{i64 2147590525, i64 2147590568, i64 2147590608}
!5583 = !DILocation(line: 87, column: 1, scope: !5429)
!5584 = !{i64 2147590730, i64 2147590773, i64 2147590813}
!5585 = !DILocation(line: 88, column: 1, scope: !5429)
!5586 = !{i64 2147595008, i64 2147595051, i64 2147595091}
!5587 = !DILocation(line: 89, column: 1, scope: !5429)
!5588 = !{i64 2147595222, i64 2147595265, i64 2147595305}
!5589 = !DILocation(line: 90, column: 1, scope: !5429)
!5590 = !{i64 2147595448, i64 2147595491, i64 2147595531}
!5591 = !DILocation(line: 91, column: 1, scope: !5429)
!5592 = !{i64 2147595668, i64 2147595711, i64 2147595751}
!5593 = !DILocation(line: 92, column: 1, scope: !5429)
!5594 = !{i64 2147595873, i64 2147595916, i64 2147595956}
!5595 = !DILocation(line: 93, column: 1, scope: !5429)
!5596 = !{i64 2147596105, i64 2147596148, i64 2147596188}
!5597 = !DILocation(line: 94, column: 1, scope: !5429)
!5598 = !{i64 2147596340, i64 2147596383, i64 2147596423}
!5599 = !DILocation(line: 95, column: 1, scope: !5429)
!5600 = !{i64 2147596590, i64 2147596633, i64 2147596673}
!5601 = !DILocation(line: 96, column: 1, scope: !5429)
!5602 = !{i64 2147596840, i64 2147596883, i64 2147596923}
!5603 = !DILocation(line: 97, column: 1, scope: !5429)
!5604 = !{i64 2147597078, i64 2147597121, i64 2147597161}
!5605 = !DILocation(line: 98, column: 1, scope: !5429)
!5606 = !{i64 2147597289, i64 2147597332, i64 2147597372}
!5607 = !DILocation(line: 99, column: 1, scope: !5429)
!5608 = !{i64 2147597506, i64 2147597549, i64 2147597589}
!5609 = !DILocation(line: 100, column: 1, scope: !5429)
!5610 = !{i64 2147597702, i64 2147597745, i64 2147597785}
!5611 = !DILocation(line: 101, column: 1, scope: !5429)
!5612 = !{i64 2147597904, i64 2147597947, i64 2147597987}
!5613 = !DILocation(line: 102, column: 1, scope: !5429)
!5614 = !{i64 2147598097, i64 2147598140, i64 2147598180}
!5615 = !DILocation(line: 103, column: 1, scope: !5429)
!5616 = !{i64 2147598305, i64 2147598348, i64 2147598388}
!5617 = !DILocation(line: 104, column: 1, scope: !5429)
!5618 = !{i64 2147598501, i64 2147598544, i64 2147598584}
!5619 = !DILocation(line: 105, column: 1, scope: !5429)
!5620 = !{i64 2147598709, i64 2147598752, i64 2147598792}
!5621 = !DILocation(line: 106, column: 1, scope: !5429)
!5622 = !{i64 2147598920, i64 2147598963, i64 2147599003}
!5623 = !DILocation(line: 107, column: 1, scope: !5429)
!5624 = !{i64 2147599119, i64 2147599162, i64 2147599202}
!5625 = !DILocation(line: 108, column: 1, scope: !5429)
!5626 = !{i64 2147599294, i64 2147599337, i64 2147599377}
!5627 = !DILocation(line: 109, column: 1, scope: !5429)
!5628 = !{i64 2147599478, i64 2147599521, i64 2147599561}
!5629 = !DILocation(line: 110, column: 1, scope: !5429)
!5630 = !{i64 2147599680, i64 2147599723, i64 2147599763}
!5631 = !DILocation(line: 111, column: 1, scope: !5429)
!5632 = !{i64 2147599879, i64 2147599922, i64 2147599962}
!5633 = !DILocation(line: 112, column: 1, scope: !5429)
!5634 = !{i64 2147600084, i64 2147600127, i64 2147600167}
!5635 = !DILocation(line: 113, column: 1, scope: !5429)
!5636 = !{i64 2147600277, i64 2147600320, i64 2147600360}
!5637 = !DILocation(line: 114, column: 1, scope: !5429)
!5638 = !{i64 2147600443, i64 2147600486, i64 2147600526}
!5639 = !DILocation(line: 115, column: 1, scope: !5429)
!5640 = !{i64 2147600627, i64 2147600670, i64 2147600710}
!5641 = !DILocation(line: 116, column: 1, scope: !5429)
!5642 = !{i64 2147600817, i64 2147600860, i64 2147600900}
!5643 = !DILocation(line: 117, column: 1, scope: !5429)
!5644 = !{i64 2147601001, i64 2147601044, i64 2147601084}
!5645 = !DILocation(line: 118, column: 1, scope: !5429)
!5646 = !{i64 2147601215, i64 2147601258, i64 2147601298}
!5647 = !DILocation(line: 119, column: 1, scope: !5429)
!5648 = !{i64 2147601426, i64 2147601469, i64 2147601509}
!5649 = !DILocation(line: 120, column: 1, scope: !5429)
!5650 = !{i64 2147601649, i64 2147601692, i64 2147601732}
!5651 = !DILocation(line: 121, column: 1, scope: !5429)
!5652 = !{i64 2147601833, i64 2147601876, i64 2147601916}
!5653 = !DILocation(line: 122, column: 1, scope: !5429)
!5654 = !{i64 2147602047, i64 2147602090, i64 2147602130}
!5655 = !DILocation(line: 123, column: 1, scope: !5429)
!5656 = !{i64 2147602213, i64 2147602256, i64 2147602296}
!5657 = !DILocation(line: 124, column: 1, scope: !5429)
!5658 = !{i64 2147602394, i64 2147602437, i64 2147602477}
!5659 = !DILocation(line: 125, column: 1, scope: !5429)
!5660 = !{i64 2147602587, i64 2147602630, i64 2147602670}
!5661 = !DILocation(line: 126, column: 1, scope: !5429)
!5662 = !{i64 2147602813, i64 2147602856, i64 2147602896}
!5663 = !DILocation(line: 127, column: 1, scope: !5429)
!5664 = !{i64 2147603027, i64 2147603070, i64 2147603110}
!5665 = !DILocation(line: 128, column: 1, scope: !5429)
!5666 = !{i64 2147603253, i64 2147603296, i64 2147603336}
!5667 = !DILocation(line: 129, column: 1, scope: !5429)
!5668 = !{i64 2147603470, i64 2147603513, i64 2147603553}
!5669 = !DILocation(line: 130, column: 1, scope: !5429)
!5670 = !{i64 2147603747, i64 2147603790, i64 2147603830}
!5671 = !DILocation(line: 131, column: 1, scope: !5429)
!5672 = !{i64 2147603973, i64 2147604016, i64 2147604056}
!5673 = !DILocation(line: 132, column: 1, scope: !5429)
!5674 = !{i64 2147608242, i64 2147608285, i64 2147608325}
!5675 = !DILocation(line: 133, column: 1, scope: !5429)
!5676 = !{i64 2147608438, i64 2147608481, i64 2147608521}
!5677 = !DILocation(line: 134, column: 1, scope: !5429)
!5678 = !{i64 2147608703, i64 2147608746, i64 2147608786}
!5679 = !DILocation(line: 135, column: 1, scope: !5429)
!5680 = !{i64 2147608917, i64 2147608960, i64 2147609000}
!5681 = !DILocation(line: 136, column: 1, scope: !5429)
!5682 = !{i64 2147609092, i64 2147609135, i64 2147609175}
!5683 = !DILocation(line: 137, column: 1, scope: !5429)
!5684 = !{i64 2147609346, i64 2147609389, i64 2147609429}
!5685 = !DILocation(line: 138, column: 1, scope: !5429)
!5686 = !{i64 2147609545, i64 2147609588, i64 2147609628}
!5687 = !DILocation(line: 139, column: 1, scope: !5429)
!5688 = !{i64 2147609787, i64 2147609830, i64 2147609870}
!5689 = !DILocation(line: 140, column: 1, scope: !5429)
!5690 = !{i64 2147609950, i64 2147609993, i64 2147610033}
!5691 = !DILocation(line: 141, column: 1, scope: !5429)
!5692 = !{i64 2147610137, i64 2147610180, i64 2147610220}
!5693 = !DILocation(line: 142, column: 1, scope: !5429)
!5694 = !{i64 2147610345, i64 2147610388, i64 2147610428}
!5695 = !DILocation(line: 143, column: 1, scope: !5429)
!5696 = !{i64 2147610541, i64 2147610584, i64 2147610624}
!5697 = !DILocation(line: 144, column: 1, scope: !5429)
!5698 = !{i64 2147610734, i64 2147610777, i64 2147610817}
!5699 = !DILocation(line: 145, column: 1, scope: !5429)
!5700 = !{i64 2147610917, i64 2147610960, i64 2147611000}
!5701 = !DILocation(line: 146, column: 1, scope: !5429)
!5702 = !{i64 2147611131, i64 2147611174, i64 2147611214}
!5703 = !DILocation(line: 147, column: 1, scope: !5429)
!5704 = !{i64 2147611342, i64 2147611385, i64 2147611425}
!5705 = !DILocation(line: 148, column: 1, scope: !5429)
!5706 = !{i64 2147611562, i64 2147611605, i64 2147611645}
!5707 = !DILocation(line: 149, column: 1, scope: !5429)
!5708 = !{i64 2147611769, i64 2147611812, i64 2147611852}
!5709 = !DILocation(line: 150, column: 1, scope: !5429)
!5710 = !{i64 2147612042, i64 2147612085, i64 2147612125}
!5711 = !DILocation(line: 151, column: 1, scope: !5429)
!5712 = !{i64 2147612290, i64 2147612333, i64 2147612373}
!5713 = !DILocation(line: 152, column: 1, scope: !5429)
!5714 = !{i64 2147612489, i64 2147612532, i64 2147612572}
!5715 = !DILocation(line: 153, column: 1, scope: !5429)
!5716 = !{i64 2147612724, i64 2147612767, i64 2147612807}
!5717 = !DILocation(line: 154, column: 1, scope: !5429)
!5718 = !{i64 2147612974, i64 2147613017, i64 2147613057}
!5719 = !DILocation(line: 155, column: 1, scope: !5429)
!5720 = !{i64 2147613176, i64 2147613219, i64 2147613259}
!5721 = !DILocation(line: 156, column: 1, scope: !5429)
!5722 = !{i64 2147613399, i64 2147613442, i64 2147613482}
!5723 = !DILocation(line: 157, column: 1, scope: !5429)
!5724 = !{i64 2147613613, i64 2147613656, i64 2147613696}
!5725 = !DILocation(line: 158, column: 1, scope: !5429)
!5726 = !{i64 2147613857, i64 2147613900, i64 2147613940}
!5727 = !DILocation(line: 159, column: 1, scope: !5429)
!5728 = !{i64 2147614086, i64 2147614129, i64 2147614169}
!5729 = !DILocation(line: 160, column: 1, scope: !5429)
!5730 = !{i64 2147614315, i64 2147614358, i64 2147614398}
!5731 = !DILocation(line: 161, column: 1, scope: !5429)
!5732 = !{i64 2147614523, i64 2147614566, i64 2147614606}
!5733 = !DILocation(line: 162, column: 1, scope: !5429)
!5734 = !{i64 2147614761, i64 2147614804, i64 2147614844}
!5735 = !DILocation(line: 163, column: 1, scope: !5429)
!5736 = !{i64 2147614987, i64 2147615030, i64 2147615070}
!5737 = !DILocation(line: 164, column: 1, scope: !5429)
!5738 = !{i64 2147615246, i64 2147615289, i64 2147615329}
!5739 = !DILocation(line: 165, column: 1, scope: !5429)
!5740 = !{i64 2147615466, i64 2147615509, i64 2147615549}
!5741 = !DILocation(line: 166, column: 1, scope: !5429)
!5742 = !{i64 2147615698, i64 2147615741, i64 2147615781}
!5743 = !DILocation(line: 167, column: 1, scope: !5429)
!5744 = !{i64 2147615939, i64 2147615982, i64 2147616022}
!5745 = !DILocation(line: 168, column: 1, scope: !5429)
!5746 = !{i64 2147616180, i64 2147616223, i64 2147616263}
!5747 = !DILocation(line: 169, column: 1, scope: !5429)
!5748 = !{i64 2147616403, i64 2147616446, i64 2147616486}
!5749 = !DILocation(line: 170, column: 1, scope: !5429)
!5750 = !{i64 2147620681, i64 2147620724, i64 2147620764}
!5751 = !DILocation(line: 171, column: 1, scope: !5429)
!5752 = !{i64 2147620922, i64 2147620965, i64 2147621005}
!5753 = !DILocation(line: 172, column: 1, scope: !5429)
!5754 = !{i64 2147621109, i64 2147621152, i64 2147621192}
!5755 = !DILocation(line: 173, column: 1, scope: !5429)
!5756 = !{i64 2147621296, i64 2147621339, i64 2147621379}
!5757 = !DILocation(line: 174, column: 1, scope: !5429)
!5758 = !{i64 2147621459, i64 2147621502, i64 2147621542}
!5759 = !DILocation(line: 175, column: 1, scope: !5429)
!5760 = !{i64 2147621664, i64 2147621707, i64 2147621747}
!5761 = !DILocation(line: 176, column: 1, scope: !5429)
!5762 = !{i64 2147621857, i64 2147621900, i64 2147621940}
!5763 = !DILocation(line: 177, column: 1, scope: !5429)
!5764 = !{i64 2147622116, i64 2147622159, i64 2147622199}
!5765 = !DILocation(line: 178, column: 1, scope: !5429)
!5766 = !{i64 2147622339, i64 2147622382, i64 2147622422}
!5767 = !DILocation(line: 179, column: 1, scope: !5429)
!5768 = !{i64 2147622568, i64 2147622611, i64 2147622651}
!5769 = !DILocation(line: 180, column: 1, scope: !5429)
!5770 = !{i64 2147622782, i64 2147622825, i64 2147622865}
!5771 = !DILocation(line: 181, column: 1, scope: !5429)
!5772 = !{i64 2147622984, i64 2147623027, i64 2147623067}
!5773 = !DILocation(line: 182, column: 1, scope: !5429)
!5774 = !{i64 2147623180, i64 2147623223, i64 2147623263}
!5775 = !DILocation(line: 183, column: 1, scope: !5429)
!5776 = !{i64 2147623392, i64 2147623435, i64 2147623475}
!5777 = !DILocation(line: 184, column: 1, scope: !5429)
!5778 = !{i64 2147623613, i64 2147623656, i64 2147623696}
!5779 = !DILocation(line: 185, column: 1, scope: !5429)
!5780 = !{i64 2147623827, i64 2147623870, i64 2147623910}
!5781 = !DILocation(line: 186, column: 1, scope: !5429)
!5782 = !{i64 2147624017, i64 2147624060, i64 2147624100}
!5783 = !DILocation(line: 187, column: 1, scope: !5429)
!5784 = !{i64 2147624216, i64 2147624259, i64 2147624299}
!5785 = !DILocation(line: 188, column: 1, scope: !5429)
!5786 = !{i64 2147624421, i64 2147624464, i64 2147624504}
!5787 = !DILocation(line: 189, column: 1, scope: !5429)
!5788 = !{i64 2147624641, i64 2147624684, i64 2147624724}
!5789 = !DILocation(line: 190, column: 1, scope: !5429)
!5790 = !{i64 2147624842, i64 2147624885, i64 2147624925}
!5791 = !DILocation(line: 191, column: 1, scope: !5429)
!5792 = !{i64 2147625041, i64 2147625084, i64 2147625124}
!5793 = !DILocation(line: 192, column: 1, scope: !5429)
!5794 = !{i64 2147625246, i64 2147625289, i64 2147625329}
!5795 = !DILocation(line: 193, column: 1, scope: !5429)
!5796 = !{i64 2147625415, i64 2147625458, i64 2147625498}
!5797 = !DILocation(line: 194, column: 1, scope: !5429)
!5798 = !{i64 2147625599, i64 2147625642, i64 2147625682}
!5799 = !DILocation(line: 195, column: 1, scope: !5429)
!5800 = !{i64 2147625783, i64 2147625826, i64 2147625866}
!5801 = !DILocation(line: 196, column: 1, scope: !5429)
!5802 = !{i64 2147625970, i64 2147626013, i64 2147626053}
!5803 = !DILocation(line: 197, column: 1, scope: !5429)
!5804 = !{i64 2147626154, i64 2147626197, i64 2147626237}
!5805 = !DILocation(line: 198, column: 1, scope: !5429)
!5806 = !{i64 2147626341, i64 2147626384, i64 2147626424}
!5807 = !DILocation(line: 199, column: 1, scope: !5429)
!5808 = !{i64 2147626553, i64 2147626596, i64 2147626636}
!5809 = !DILocation(line: 200, column: 1, scope: !5429)
!5810 = !{i64 2147626791, i64 2147626834, i64 2147626874}
!5811 = !DILocation(line: 201, column: 1, scope: !5429)
!5812 = !{i64 2147627021, i64 2147627064, i64 2147627104}
!5813 = !DILocation(line: 202, column: 1, scope: !5429)
!5814 = !{i64 2147627250, i64 2147627293, i64 2147627333}
!5815 = !DILocation(line: 203, column: 1, scope: !5429)
!5816 = !{i64 2147627437, i64 2147627480, i64 2147627520}
!5817 = !DILocation(line: 204, column: 1, scope: !5429)
!5818 = !{i64 2147627633, i64 2147627676, i64 2147627716}
!5819 = !DILocation(line: 205, column: 1, scope: !5429)
!5820 = !{i64 2147627841, i64 2147627884, i64 2147627924}
!5821 = !DILocation(line: 206, column: 1, scope: !5429)
!5822 = !{i64 2147628053, i64 2147628096, i64 2147628136}
!5823 = !DILocation(line: 207, column: 1, scope: !5429)
!5824 = !{i64 2147628252, i64 2147628295, i64 2147628335}
!5825 = !DILocation(line: 208, column: 1, scope: !5429)
!5826 = !{i64 2147628490, i64 2147628533, i64 2147628573}
!5827 = !DILocation(line: 209, column: 1, scope: !5429)
!5828 = !{i64 2147628686, i64 2147628729, i64 2147628769}
!5829 = !DILocation(line: 210, column: 1, scope: !5429)
!5830 = !{i64 2147628888, i64 2147628931, i64 2147628971}
!5831 = !DILocation(line: 211, column: 1, scope: !5429)
!5832 = !{i64 2147629081, i64 2147629124, i64 2147629164}
!5833 = !DILocation(line: 212, column: 1, scope: !5429)
!5834 = !{i64 2147629315, i64 2147629358, i64 2147629398}
!5835 = !DILocation(line: 213, column: 1, scope: !5429)
!5836 = !{i64 2147629478, i64 2147629521, i64 2147629561}
!5837 = !DILocation(line: 214, column: 1, scope: !5429)
!5838 = !{i64 2147629717, i64 2147629760, i64 2147629800}
!5839 = !DILocation(line: 215, column: 1, scope: !5429)
!5840 = !{i64 2147634017, i64 2147634060, i64 2147634100}
!5841 = !DILocation(line: 216, column: 1, scope: !5429)
!5842 = !{i64 2147634253, i64 2147634296, i64 2147634336}
!5843 = !DILocation(line: 217, column: 1, scope: !5429)
!5844 = !{i64 2147634483, i64 2147634526, i64 2147634566}
!5845 = !DILocation(line: 218, column: 1, scope: !5429)
!5846 = !{i64 2147634670, i64 2147634713, i64 2147634753}
!5847 = !DILocation(line: 219, column: 1, scope: !5429)
!5848 = !{i64 2147634869, i64 2147634912, i64 2147634952}
!5849 = !DILocation(line: 220, column: 1, scope: !5429)
!5850 = !{i64 2147635140, i64 2147635183, i64 2147635223}
!5851 = !DILocation(line: 221, column: 1, scope: !5429)
!5852 = !{i64 2147635315, i64 2147635358, i64 2147635398}
!5853 = !DILocation(line: 222, column: 1, scope: !5429)
!5854 = !{i64 2147635549, i64 2147635592, i64 2147635632}
!5855 = !DILocation(line: 223, column: 1, scope: !5429)
!5856 = !{i64 2147635757, i64 2147635800, i64 2147635840}
!5857 = !DILocation(line: 224, column: 1, scope: !5429)
!5858 = !{i64 2147635975, i64 2147636018, i64 2147636058}
!5859 = !DILocation(line: 225, column: 1, scope: !5429)
!5860 = !{i64 2147636165, i64 2147636208, i64 2147636248}
!5861 = !DILocation(line: 226, column: 1, scope: !5429)
!5862 = !{i64 2147636397, i64 2147636440, i64 2147636480}
!5863 = !DILocation(line: 227, column: 1, scope: !5429)
!5864 = !{i64 2147636617, i64 2147636660, i64 2147636700}
!5865 = !DILocation(line: 228, column: 1, scope: !5429)
!5866 = !{i64 2147636813, i64 2147636856, i64 2147636896}
!5867 = !DILocation(line: 229, column: 1, scope: !5429)
!5868 = !{i64 2147637019, i64 2147637062, i64 2147637102}
!5869 = !DILocation(line: 230, column: 1, scope: !5429)
!5870 = !{i64 2147637224, i64 2147637267, i64 2147637307}
!5871 = !DILocation(line: 231, column: 1, scope: !5429)
!5872 = !{i64 2147637438, i64 2147637481, i64 2147637521}
!5873 = !DILocation(line: 232, column: 1, scope: !5429)
!5874 = !{i64 2147637664, i64 2147637707, i64 2147637747}
!5875 = !DILocation(line: 233, column: 1, scope: !5429)
!5876 = !{i64 2147637872, i64 2147637915, i64 2147637955}
!5877 = !DILocation(line: 234, column: 1, scope: !5429)
!5878 = !{i64 2147638068, i64 2147638111, i64 2147638151}
!5879 = !DILocation(line: 235, column: 1, scope: !5429)
!5880 = !{i64 2147638300, i64 2147638343, i64 2147638383}
!5881 = !DILocation(line: 236, column: 1, scope: !5429)
!5882 = !{i64 2147638484, i64 2147638527, i64 2147638567}
!5883 = !DILocation(line: 237, column: 1, scope: !5429)
!5884 = !{i64 2147638693, i64 2147638736, i64 2147638776}
!5885 = !DILocation(line: 238, column: 1, scope: !5429)
!5886 = !{i64 2147638901, i64 2147638944, i64 2147638984}
!5887 = !DILocation(line: 239, column: 1, scope: !5429)
!5888 = !{i64 2147639097, i64 2147639140, i64 2147639180}
!5889 = !DILocation(line: 240, column: 1, scope: !5429)
!5890 = !{i64 2147639281, i64 2147639324, i64 2147639364}
!5891 = !DILocation(line: 241, column: 1, scope: !5429)
!5892 = !{i64 2147639507, i64 2147639550, i64 2147639590}
!5893 = !DILocation(line: 242, column: 1, scope: !5429)
!5894 = !{i64 2147639733, i64 2147639776, i64 2147639816}
!5895 = !DILocation(line: 243, column: 1, scope: !5429)
!5896 = !{i64 2147639959, i64 2147640002, i64 2147640042}
!5897 = !DILocation(line: 244, column: 1, scope: !5429)
!5898 = !{i64 2147640185, i64 2147640228, i64 2147640268}
!5899 = !DILocation(line: 245, column: 1, scope: !5429)
!5900 = !{i64 2147640411, i64 2147640454, i64 2147640494}
!5901 = !DILocation(line: 246, column: 1, scope: !5429)
!5902 = !{i64 2147640643, i64 2147640686, i64 2147640726}
!5903 = !DILocation(line: 247, column: 1, scope: !5429)
!5904 = !{i64 2147640881, i64 2147640924, i64 2147640964}
!5905 = !DILocation(line: 248, column: 1, scope: !5429)
!5906 = !{i64 2147641101, i64 2147641144, i64 2147641184}
!5907 = !DILocation(line: 249, column: 1, scope: !5429)
!5908 = !{i64 2147641345, i64 2147641388, i64 2147641428}
!5909 = !DILocation(line: 250, column: 1, scope: !5429)
!5910 = !{i64 2147641586, i64 2147641629, i64 2147641669}
!5911 = !DILocation(line: 251, column: 1, scope: !5429)
!5912 = !{i64 2147641821, i64 2147641864, i64 2147641904}
!5913 = !DILocation(line: 252, column: 1, scope: !5429)
!5914 = !{i64 2147642053, i64 2147642096, i64 2147642136}
!5915 = !DILocation(line: 253, column: 1, scope: !5429)
!5916 = !{i64 2147642255, i64 2147642298, i64 2147642338}
!5917 = !DILocation(line: 254, column: 1, scope: !5429)
!5918 = !{i64 2147642505, i64 2147642548, i64 2147642588}
!5919 = !DILocation(line: 255, column: 1, scope: !5429)
!5920 = !{i64 2147646804, i64 2147646847, i64 2147646887}
!5921 = !DILocation(line: 256, column: 1, scope: !5429)
!5922 = !{i64 2147647012, i64 2147647055, i64 2147647095}
!5923 = !DILocation(line: 257, column: 1, scope: !5429)
!5924 = !{i64 2147647208, i64 2147647251, i64 2147647291}
!5925 = !DILocation(line: 258, column: 1, scope: !5429)
!5926 = !{i64 2147647392, i64 2147647435, i64 2147647475}
!5927 = !DILocation(line: 259, column: 1, scope: !5429)
!5928 = !{i64 2147647609, i64 2147647652, i64 2147647692}
!5929 = !DILocation(line: 260, column: 1, scope: !5429)
!5930 = !{i64 2147647814, i64 2147647857, i64 2147647897}
!5931 = !DILocation(line: 261, column: 1, scope: !5429)
!5932 = !{i64 2147648049, i64 2147648092, i64 2147648132}
!5933 = !DILocation(line: 262, column: 1, scope: !5429)
!5934 = !{i64 2147648272, i64 2147648315, i64 2147648355}
!5935 = !DILocation(line: 263, column: 1, scope: !5429)
!5936 = !{i64 2147648496, i64 2147648539, i64 2147648579}
!5937 = !DILocation(line: 264, column: 1, scope: !5429)
!5938 = !{i64 2147648734, i64 2147648777, i64 2147648817}
!5939 = !DILocation(line: 265, column: 1, scope: !5429)
!5940 = !{i64 2147648972, i64 2147649015, i64 2147649055}
!5941 = !DILocation(line: 266, column: 1, scope: !5429)
!5942 = !{i64 2147649189, i64 2147649232, i64 2147649272}
!5943 = !DILocation(line: 267, column: 1, scope: !5429)
!5944 = !{i64 2147649394, i64 2147649437, i64 2147649477}
!5945 = !DILocation(line: 268, column: 1, scope: !5429)
!5946 = !{i64 2147649587, i64 2147649630, i64 2147649670}
!5947 = !DILocation(line: 269, column: 1, scope: !5429)
!5948 = !{i64 2147649840, i64 2147649883, i64 2147649923}
!5949 = !DILocation(line: 270, column: 1, scope: !5429)
!5950 = !{i64 2147650048, i64 2147650091, i64 2147650131}
!5951 = !DILocation(line: 271, column: 1, scope: !5429)
!5952 = !{i64 2147650244, i64 2147650287, i64 2147650327}
!5953 = !DILocation(line: 272, column: 1, scope: !5429)
!5954 = !{i64 2147650458, i64 2147650501, i64 2147650541}
!5955 = !DILocation(line: 273, column: 1, scope: !5429)
!5956 = !{i64 2147650666, i64 2147650709, i64 2147650749}
!5957 = !DILocation(line: 274, column: 1, scope: !5429)
!5958 = !{i64 2147650856, i64 2147650899, i64 2147650939}
!5959 = !DILocation(line: 275, column: 1, scope: !5429)
!5960 = !{i64 2147651070, i64 2147651113, i64 2147651153}
!5961 = !DILocation(line: 276, column: 1, scope: !5429)
!5962 = !{i64 2147651332, i64 2147651375, i64 2147651415}
!5963 = !DILocation(line: 277, column: 1, scope: !5429)
!5964 = !{i64 2147651543, i64 2147651586, i64 2147651626}
!5965 = !DILocation(line: 278, column: 1, scope: !5429)
!5966 = !{i64 2147651787, i64 2147651830, i64 2147651870}
!5967 = !DILocation(line: 279, column: 1, scope: !5429)
!5968 = !{i64 2147651998, i64 2147652041, i64 2147652081}
!5969 = !DILocation(line: 280, column: 1, scope: !5429)
!5970 = !{i64 2147652227, i64 2147652270, i64 2147652310}
!5971 = !DILocation(line: 281, column: 1, scope: !5429)
!5972 = !{i64 2147652492, i64 2147652535, i64 2147652575}
!5973 = !DILocation(line: 282, column: 1, scope: !5429)
!5974 = !{i64 2147652697, i64 2147652740, i64 2147652780}
!5975 = !DILocation(line: 283, column: 1, scope: !5429)
!5976 = !{i64 2147652893, i64 2147652936, i64 2147652976}
!5977 = !DILocation(line: 284, column: 1, scope: !5429)
!5978 = !{i64 2147653116, i64 2147653159, i64 2147653199}
!5979 = !DILocation(line: 285, column: 1, scope: !5429)
!5980 = !{i64 2147653279, i64 2147653322, i64 2147653362}
!5981 = !DILocation(line: 286, column: 1, scope: !5429)
!5982 = !{i64 2147653484, i64 2147653527, i64 2147653567}
!5983 = !DILocation(line: 287, column: 1, scope: !5429)
!5984 = !{i64 2147653704, i64 2147653747, i64 2147653787}
!5985 = !DILocation(line: 288, column: 1, scope: !5429)
!5986 = !{i64 2147653918, i64 2147653961, i64 2147654001}
!5987 = !DILocation(line: 289, column: 1, scope: !5429)
!5988 = !{i64 2147654162, i64 2147654205, i64 2147654245}
!5989 = !DILocation(line: 290, column: 1, scope: !5429)
!5990 = !{i64 2147654394, i64 2147654437, i64 2147654477}
!5991 = !DILocation(line: 291, column: 1, scope: !5429)
!5992 = !{i64 2147654608, i64 2147654651, i64 2147654691}
!5993 = !DILocation(line: 292, column: 1, scope: !5429)
!5994 = !{i64 2147654819, i64 2147654862, i64 2147654902}
!5995 = !DILocation(line: 293, column: 1, scope: !5429)
!5996 = !{i64 2147655012, i64 2147655055, i64 2147655095}
!5997 = !DILocation(line: 294, column: 1, scope: !5429)
!5998 = !{i64 2147655211, i64 2147655254, i64 2147655294}
!5999 = !DILocation(line: 295, column: 1, scope: !5429)
!6000 = !{i64 2147655383, i64 2147655426, i64 2147655466}
!6001 = !DILocation(line: 296, column: 1, scope: !5429)
!6002 = !{i64 2147659637, i64 2147659680, i64 2147659720}
!6003 = !DILocation(line: 297, column: 1, scope: !5429)
!6004 = !{i64 2147659809, i64 2147659852, i64 2147659892}
!6005 = !DILocation(line: 298, column: 1, scope: !5429)
!6006 = !{i64 2147659999, i64 2147660042, i64 2147660082}
!6007 = !DILocation(line: 299, column: 1, scope: !5429)
!6008 = !{i64 2147660192, i64 2147660235, i64 2147660275}
!6009 = !DILocation(line: 300, column: 1, scope: !5429)
!6010 = !{i64 2147660388, i64 2147660431, i64 2147660471}
!6011 = !DILocation(line: 301, column: 1, scope: !5429)
!6012 = !{i64 2147660551, i64 2147660594, i64 2147660634}
!6013 = !DILocation(line: 302, column: 1, scope: !5429)
!6014 = !{i64 2147660753, i64 2147660796, i64 2147660836}
!6015 = !DILocation(line: 303, column: 1, scope: !5429)
!6016 = !{i64 2147660964, i64 2147661007, i64 2147661047}
!6017 = !DILocation(line: 304, column: 1, scope: !5429)
!6018 = !{i64 2147661169, i64 2147661212, i64 2147661252}
!6019 = !DILocation(line: 305, column: 1, scope: !5429)
!6020 = !{i64 2147661377, i64 2147661420, i64 2147661460}
!6021 = !DILocation(line: 306, column: 1, scope: !5429)
!6022 = !{i64 2147661570, i64 2147661613, i64 2147661653}
!6023 = !DILocation(line: 307, column: 1, scope: !5429)
!6024 = !{i64 2147661757, i64 2147661800, i64 2147661840}
!6025 = !DILocation(line: 308, column: 1, scope: !5429)
!6026 = !{i64 2147661923, i64 2147661966, i64 2147662006}
!6027 = !DILocation(line: 309, column: 1, scope: !5429)
!6028 = !{i64 2147662150, i64 2147662193, i64 2147662233}
!6029 = !DILocation(line: 310, column: 1, scope: !5429)
!6030 = !{i64 2147662367, i64 2147662410, i64 2147662450}
!6031 = !DILocation(line: 311, column: 1, scope: !5429)
!6032 = !{i64 2147662593, i64 2147662636, i64 2147662676}
!6033 = !DILocation(line: 312, column: 1, scope: !5429)
!6034 = !{i64 2147662798, i64 2147662841, i64 2147662881}
!6035 = !DILocation(line: 313, column: 1, scope: !5429)
!6036 = !{i64 2147663015, i64 2147663058, i64 2147663098}
!6037 = !DILocation(line: 314, column: 1, scope: !5429)
!6038 = !{i64 2147663307, i64 2147663350, i64 2147663390}
!6039 = !DILocation(line: 315, column: 1, scope: !5429)
!6040 = !{i64 2147663539, i64 2147663582, i64 2147663622}
!6041 = !DILocation(line: 316, column: 1, scope: !5429)
!6042 = !{i64 2147663756, i64 2147663799, i64 2147663839}
!6043 = !DILocation(line: 317, column: 1, scope: !5429)
!6044 = !{i64 2147663963, i64 2147664006, i64 2147664046}
!6045 = !DILocation(line: 318, column: 1, scope: !5429)
!6046 = !{i64 2147664164, i64 2147664207, i64 2147664247}
!6047 = !DILocation(line: 319, column: 1, scope: !5429)
!6048 = !{i64 2147664396, i64 2147664439, i64 2147664479}
!6049 = !DILocation(line: 320, column: 1, scope: !5429)
!6050 = !{i64 2147664604, i64 2147664647, i64 2147664687}
!6051 = !DILocation(line: 321, column: 1, scope: !5429)
!6052 = !{i64 2147664794, i64 2147664837, i64 2147664877}
!6053 = !DILocation(line: 322, column: 1, scope: !5429)
!6054 = !{i64 2147665020, i64 2147665063, i64 2147665103}
!6055 = !DILocation(line: 323, column: 1, scope: !5429)
!6056 = !{i64 2147665209, i64 2147665252, i64 2147665292}
!6057 = !DILocation(line: 324, column: 1, scope: !5429)
!6058 = !{i64 2147665480, i64 2147665523, i64 2147665563}
!6059 = !DILocation(line: 325, column: 1, scope: !5429)
!6060 = !{i64 2147665700, i64 2147665743, i64 2147665783}
!6061 = !DILocation(line: 326, column: 1, scope: !5429)
!6062 = !{i64 2147665953, i64 2147665996, i64 2147666036}
!6063 = !DILocation(line: 327, column: 1, scope: !5429)
!6064 = !{i64 2147666161, i64 2147666204, i64 2147666244}
!6065 = !DILocation(line: 328, column: 1, scope: !5429)
!6066 = !{i64 2147666393, i64 2147666436, i64 2147666476}
!6067 = !DILocation(line: 329, column: 1, scope: !5429)
!6068 = !{i64 2147666604, i64 2147666647, i64 2147666687}
!6069 = !DILocation(line: 330, column: 1, scope: !5429)
!6070 = !{i64 2147666794, i64 2147666837, i64 2147666877}
!6071 = !DILocation(line: 331, column: 1, scope: !5429)
!6072 = !{i64 2147667008, i64 2147667051, i64 2147667091}
!6073 = !DILocation(line: 332, column: 1, scope: !5429)
!6074 = !{i64 2147667207, i64 2147667250, i64 2147667290}
!6075 = !DILocation(line: 333, column: 1, scope: !5429)
!6076 = !{i64 2147667394, i64 2147667437, i64 2147667477}
!6077 = !DILocation(line: 334, column: 1, scope: !5429)
!6078 = !{i64 2147667602, i64 2147667645, i64 2147667685}
!6079 = !DILocation(line: 335, column: 1, scope: !5429)
!6080 = !{i64 2147667831, i64 2147667874, i64 2147667914}
!6081 = !DILocation(line: 336, column: 1, scope: !5429)
!6082 = !{i64 2147668033, i64 2147668076, i64 2147668116}
!6083 = !DILocation(line: 337, column: 1, scope: !5429)
!6084 = !{i64 2147668232, i64 2147668275, i64 2147668315}
!6085 = !DILocation(line: 338, column: 1, scope: !5429)
!6086 = !{i64 2147668449, i64 2147668492, i64 2147668532}
!6087 = !DILocation(line: 340, column: 1, scope: !5429)
!6088 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6089)
!6089 = !{!6090, !6091}
!6090 = !DILocalVariable(name: "arg", arg: 1, scope: !6088, file: !324, line: 30, type: !333)
!6091 = !DILocalVariable(name: "key", scope: !6088, file: !324, line: 32, type: !110)
!6092 = !DILocation(line: 0, scope: !6088)
!6093 = !DILocation(line: 37, column: 2, scope: !6088)
!6094 = !DILocation(line: 38, column: 2, scope: !6088)
!6095 = !DILocation(line: 55, column: 2, scope: !6096, inlinedAt: !6103)
!6096 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6100)
!6097 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!32}
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "key", scope: !6096, file: !6097, line: 44, type: !32)
!6102 = !DILocalVariable(name: "tmp", scope: !6096, file: !6097, line: 53, type: !32)
!6103 = distinct !DILocation(line: 40, column: 8, scope: !6088)
!6104 = !{i64 2135216}
!6105 = !DILocation(line: 0, scope: !6096, inlinedAt: !6103)
!6106 = !DILocalVariable(name: "key", arg: 1, scope: !6107, file: !6097, line: 84, type: !32)
!6107 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6110)
!6108 = !DISubroutineType(types: !6109)
!6109 = !{null, !32}
!6110 = !{!6106}
!6111 = !DILocation(line: 0, scope: !6107, inlinedAt: !6112)
!6112 = distinct !DILocation(line: 47, column: 2, scope: !6088)
!6113 = !DILocation(line: 95, column: 2, scope: !6107, inlinedAt: !6112)
!6114 = !{i64 2136033}
!6115 = !DILocation(line: 51, column: 18, scope: !6088)
!6116 = !DILocation(line: 53, column: 2, scope: !6088)
!6117 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6118, file: !6118, line: 1609, type: !3087, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2024)
!6118 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6119 = !DILocation(line: 1611, column: 3, scope: !6117)
!6120 = !DILocation(line: 1612, column: 1, scope: !6117)
!6121 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6118, file: !6118, line: 1629, type: !3087, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2024)
!6122 = !DILocation(line: 1631, column: 3, scope: !6121)
!6123 = !DILocation(line: 1632, column: 1, scope: !6121)
!6124 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6125)
!6125 = !{!6126}
!6126 = !DILocalVariable(name: "dev", arg: 1, scope: !6124, file: !361, line: 26, type: !369)
!6127 = !DILocation(line: 0, scope: !6124)
!6128 = !DILocation(line: 68, column: 2, scope: !6124)
!6129 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6130, file: !6130, line: 14, type: !4383, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6131)
!6130 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6131 = !{!6132, !6133}
!6132 = !DILocalVariable(name: "fmt", arg: 1, scope: !6129, file: !6130, line: 14, type: !279)
!6133 = !DILocalVariable(name: "ap", scope: !6129, file: !6130, line: 16, type: !6134)
!6134 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3389, line: 99, baseType: !6135)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3389, line: 40, baseType: !6136)
!6136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6130, baseType: !6137)
!6137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6138)
!6138 = !{!6139}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6137, file: !6130, line: 16, baseType: !107, size: 32)
!6140 = !DILocation(line: 0, scope: !6129)
!6141 = !DILocation(line: 16, column: 2, scope: !6129)
!6142 = !DILocation(line: 16, column: 10, scope: !6129)
!6143 = !DILocation(line: 18, column: 2, scope: !6129)
!6144 = !DILocation(line: 19, column: 2, scope: !6129)
!6145 = !DILocation(line: 20, column: 2, scope: !6129)
!6146 = !DILocation(line: 21, column: 1, scope: !6129)
!6147 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6130, file: !6130, line: 23, type: !6148, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{null, !279, !6134}
!6150 = !{!6151, !6152}
!6151 = !DILocalVariable(name: "fmt", arg: 1, scope: !6147, file: !6130, line: 23, type: !279)
!6152 = !DILocalVariable(name: "ap", arg: 2, scope: !6147, file: !6130, line: 23, type: !6134)
!6153 = !DILocation(line: 0, scope: !6147)
!6154 = !DILocation(line: 25, column: 2, scope: !6147)
!6155 = !DILocation(line: 26, column: 1, scope: !6147)
!6156 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6130, file: !6130, line: 52, type: !6157, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6159)
!6157 = !DISubroutineType(types: !6158)
!6158 = !{null, !109, !13, !234}
!6159 = !{!6160, !6161, !6162, !6163}
!6160 = !DILocalVariable(name: "level", arg: 1, scope: !6156, file: !6130, line: 52, type: !109)
!6161 = !DILocalVariable(name: "data", arg: 2, scope: !6156, file: !6130, line: 52, type: !13)
!6162 = !DILocalVariable(name: "size", arg: 3, scope: !6156, file: !6130, line: 52, type: !234)
!6163 = !DILocalVariable(name: "data_buffer", scope: !6156, file: !6130, line: 54, type: !279)
!6164 = !DILocation(line: 0, scope: !6156)
!6165 = !DILocation(line: 55, column: 14, scope: !6156)
!6166 = !DILocation(line: 55, column: 2, scope: !6156)
!6167 = !DILocation(line: 56, column: 3, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6156, file: !6130, line: 55, column: 20)
!6169 = !DILocation(line: 57, column: 3, scope: !6168)
!6170 = !DILocation(line: 59, column: 7, scope: !6168)
!6171 = distinct !{!6171, !6166, !6172}
!6172 = !DILocation(line: 65, column: 2, scope: !6156)
!6173 = !DILocation(line: 66, column: 1, scope: !6156)
!6174 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6175, file: !6175, line: 175, type: !6176, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6178)
!6175 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!150, !109}
!6178 = !{!6179}
!6179 = !DILocalVariable(name: "level", arg: 1, scope: !6174, file: !6175, line: 175, type: !109)
!6180 = !DILocation(line: 0, scope: !6174)
!6181 = !DILocation(line: 177, column: 2, scope: !6174)
!6182 = !DILocation(line: 189, column: 1, scope: !6174)
!6183 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6130, file: !6130, line: 28, type: !6184, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6186)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !279, !234}
!6186 = !{!6187, !6188, !6189, !6191, !6193}
!6187 = !DILocalVariable(name: "data", arg: 1, scope: !6183, file: !6130, line: 28, type: !279)
!6188 = !DILocalVariable(name: "length", arg: 2, scope: !6183, file: !6130, line: 28, type: !234)
!6189 = !DILocalVariable(name: "i", scope: !6190, file: !6130, line: 30, type: !234)
!6190 = distinct !DILexicalBlock(scope: !6183, file: !6130, line: 30, column: 2)
!6191 = !DILocalVariable(name: "i", scope: !6192, file: !6130, line: 40, type: !234)
!6192 = distinct !DILexicalBlock(scope: !6183, file: !6130, line: 40, column: 2)
!6193 = !DILocalVariable(name: "c", scope: !6194, file: !6130, line: 42, type: !181)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !6130, line: 41, column: 19)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !6130, line: 41, column: 7)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !6130, line: 40, column: 54)
!6197 = distinct !DILexicalBlock(scope: !6192, file: !6130, line: 40, column: 2)
!6198 = !DILocation(line: 0, scope: !6183)
!6199 = !DILocation(line: 0, scope: !6190)
!6200 = !DILocation(line: 30, column: 2, scope: !6190)
!6201 = !DILocation(line: 38, column: 2, scope: !6183)
!6202 = !DILocation(line: 0, scope: !6192)
!6203 = !DILocation(line: 40, column: 2, scope: !6192)
!6204 = !DILocation(line: 31, column: 9, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !6130, line: 31, column: 7)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !6130, line: 30, column: 54)
!6207 = distinct !DILexicalBlock(scope: !6190, file: !6130, line: 30, column: 2)
!6208 = !DILocation(line: 31, column: 7, scope: !6206)
!6209 = !DILocation(line: 32, column: 35, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6205, file: !6130, line: 31, column: 19)
!6211 = !DILocation(line: 32, column: 20, scope: !6210)
!6212 = !DILocation(line: 32, column: 4, scope: !6210)
!6213 = !DILocation(line: 33, column: 3, scope: !6210)
!6214 = !DILocation(line: 34, column: 4, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6205, file: !6130, line: 33, column: 10)
!6216 = !DILocation(line: 30, column: 50, scope: !6207)
!6217 = !DILocation(line: 30, column: 24, scope: !6207)
!6218 = distinct !{!6218, !6200, !6219}
!6219 = !DILocation(line: 36, column: 2, scope: !6190)
!6220 = !DILocation(line: 49, column: 2, scope: !6183)
!6221 = !DILocation(line: 50, column: 1, scope: !6183)
!6222 = !DILocation(line: 41, column: 9, scope: !6195)
!6223 = !DILocation(line: 41, column: 7, scope: !6196)
!6224 = !DILocation(line: 42, column: 22, scope: !6194)
!6225 = !DILocation(line: 0, scope: !6194)
!6226 = !DILocation(line: 44, column: 25, scope: !6194)
!6227 = !DILocation(line: 44, column: 17, scope: !6194)
!6228 = !DILocation(line: 44, column: 33, scope: !6194)
!6229 = !DILocation(line: 44, column: 4, scope: !6194)
!6230 = !DILocation(line: 45, column: 3, scope: !6194)
!6231 = !DILocation(line: 46, column: 4, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6195, file: !6130, line: 45, column: 10)
!6233 = !DILocation(line: 40, column: 50, scope: !6197)
!6234 = !DILocation(line: 40, column: 24, scope: !6197)
!6235 = distinct !{!6235, !6203, !6236}
!6236 = !DILocation(line: 48, column: 2, scope: !6192)
!6237 = distinct !DISubprogram(name: "isprint", scope: !5173, file: !5173, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6238)
!6238 = !{!6239}
!6239 = !DILocalVariable(name: "c", arg: 1, scope: !6237, file: !5173, line: 37, type: !109)
!6240 = !DILocation(line: 0, scope: !6237)
!6241 = !DILocation(line: 39, column: 38, scope: !6237)
!6242 = !DILocation(line: 39, column: 2, scope: !6237)
!6243 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6244, file: !6244, line: 57, type: !6245, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6291)
!6244 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6245 = !DISubroutineType(types: !6246)
!6246 = !{null, !32, !6247}
!6247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6248, size: 32)
!6248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6249)
!6249 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2670, line: 141, baseType: !6250)
!6250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2670, line: 97, size: 256, elements: !6251)
!6251 = !{!6252}
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6250, file: !2670, line: 107, baseType: !6253, size: 256)
!6253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2670, line: 98, size: 256, elements: !6254)
!6254 = !{!6255, !6260, !6265, !6270, !6275, !6280, !6285, !6290}
!6255 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 99, baseType: !6256, size: 32)
!6256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 99, size: 32, elements: !6257)
!6257 = !{!6258, !6259}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6256, file: !2670, line: 99, baseType: !110, size: 32)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6256, file: !2670, line: 99, baseType: !110, size: 32)
!6260 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 100, baseType: !6261, size: 32, offset: 32)
!6261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 100, size: 32, elements: !6262)
!6262 = !{!6263, !6264}
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6261, file: !2670, line: 100, baseType: !110, size: 32)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6261, file: !2670, line: 100, baseType: !110, size: 32)
!6265 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 101, baseType: !6266, size: 32, offset: 64)
!6266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 101, size: 32, elements: !6267)
!6267 = !{!6268, !6269}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6266, file: !2670, line: 101, baseType: !110, size: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6266, file: !2670, line: 101, baseType: !110, size: 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 102, baseType: !6271, size: 32, offset: 96)
!6271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 102, size: 32, elements: !6272)
!6272 = !{!6273, !6274}
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6271, file: !2670, line: 102, baseType: !110, size: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6271, file: !2670, line: 102, baseType: !110, size: 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 103, baseType: !6276, size: 32, offset: 128)
!6276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 103, size: 32, elements: !6277)
!6277 = !{!6278, !6279}
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6276, file: !2670, line: 103, baseType: !110, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6276, file: !2670, line: 103, baseType: !110, size: 32)
!6280 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 104, baseType: !6281, size: 32, offset: 160)
!6281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 104, size: 32, elements: !6282)
!6282 = !{!6283, !6284}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6281, file: !2670, line: 104, baseType: !110, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6281, file: !2670, line: 104, baseType: !110, size: 32)
!6285 = !DIDerivedType(tag: DW_TAG_member, scope: !6253, file: !2670, line: 105, baseType: !6286, size: 32, offset: 192)
!6286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6253, file: !2670, line: 105, size: 32, elements: !6287)
!6287 = !{!6288, !6289}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6286, file: !2670, line: 105, baseType: !110, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6286, file: !2670, line: 105, baseType: !110, size: 32)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6253, file: !2670, line: 106, baseType: !110, size: 32, offset: 224)
!6291 = !{!6292, !6293}
!6292 = !DILocalVariable(name: "reason", arg: 1, scope: !6243, file: !6244, line: 57, type: !32)
!6293 = !DILocalVariable(name: "esf", arg: 2, scope: !6243, file: !6244, line: 57, type: !6247)
!6294 = !DILocation(line: 0, scope: !6243)
!6295 = !DILocation(line: 60, column: 10, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6243, file: !6244, line: 60, column: 6)
!6297 = !DILocation(line: 60, column: 6, scope: !6243)
!6298 = !DILocation(line: 61, column: 3, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !6244, line: 60, column: 19)
!6300 = !DILocation(line: 62, column: 2, scope: !6299)
!6301 = !DILocation(line: 63, column: 2, scope: !6243)
!6302 = !DILocation(line: 64, column: 1, scope: !6243)
!6303 = distinct !DISubprogram(name: "esf_dump", scope: !6244, file: !6244, line: 20, type: !6304, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6306)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{null, !6247}
!6306 = !{!6307}
!6307 = !DILocalVariable(name: "esf", arg: 1, scope: !6303, file: !6244, line: 20, type: !6247)
!6308 = !DILocation(line: 0, scope: !6303)
!6309 = !DILocation(line: 22, column: 2, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !6244, line: 22, column: 2)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !6244, line: 22, column: 2)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !6244, line: 22, column: 2)
!6313 = distinct !DILexicalBlock(scope: !6303, file: !6244, line: 22, column: 2)
!6314 = !DILocation(line: 24, column: 2, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !6244, line: 24, column: 2)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !6244, line: 24, column: 2)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !6244, line: 24, column: 2)
!6318 = distinct !DILexicalBlock(scope: !6303, file: !6244, line: 24, column: 2)
!6319 = !DILocation(line: 26, column: 2, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !6244, line: 26, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !6244, line: 26, column: 2)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !6244, line: 26, column: 2)
!6323 = distinct !DILexicalBlock(scope: !6303, file: !6244, line: 26, column: 2)
!6324 = !DILocation(line: 53, column: 2, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !6244, line: 53, column: 2)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !6244, line: 53, column: 2)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !6244, line: 53, column: 2)
!6328 = distinct !DILexicalBlock(scope: !6303, file: !6244, line: 53, column: 2)
!6329 = !DILocation(line: 55, column: 1, scope: !6303)
!6330 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6244, file: !6244, line: 82, type: !6331, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6346)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{null, !6247, !6333}
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6335)
!6335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6336)
!6336 = !{!6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6335, file: !211, line: 26, baseType: !110, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6335, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6335, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6335, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6335, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6335, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6335, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6335, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6335, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6346 = !{!6347, !6348, !6349}
!6347 = !DILocalVariable(name: "esf", arg: 1, scope: !6330, file: !6244, line: 82, type: !6247)
!6348 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6330, file: !6244, line: 82, type: !6333)
!6349 = !DILocalVariable(name: "reason", scope: !6330, file: !6244, line: 88, type: !32)
!6350 = !DILocation(line: 0, scope: !6330)
!6351 = !DILocation(line: 88, column: 35, scope: !6330)
!6352 = !DILocation(line: 108, column: 2, scope: !6330)
!6353 = !DILocation(line: 131, column: 1, scope: !6330)
!6354 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6244, file: !6244, line: 133, type: !6355, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !107}
!6357 = !{!6358, !6359, !6360}
!6358 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6354, file: !6244, line: 133, type: !107)
!6359 = !DILocalVariable(name: "ssf_contents", scope: !6354, file: !6244, line: 135, type: !882)
!6360 = !DILocalVariable(name: "oops_esf", scope: !6354, file: !6244, line: 136, type: !6249)
!6361 = !DILocation(line: 0, scope: !6354)
!6362 = !DILocation(line: 136, column: 2, scope: !6354)
!6363 = !DILocation(line: 136, column: 15, scope: !6354)
!6364 = !DILocation(line: 139, column: 22, scope: !6354)
!6365 = !DILocation(line: 139, column: 17, scope: !6354)
!6366 = !DILocation(line: 139, column: 20, scope: !6354)
!6367 = !DILocation(line: 141, column: 2, scope: !6354)
!6368 = !DILocation(line: 142, column: 2, scope: !6354)
!6369 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6370, file: !6370, line: 40, type: !6108, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6371)
!6370 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6371 = !{!6372}
!6372 = !DILocalVariable(name: "irq", arg: 1, scope: !6369, file: !6370, line: 40, type: !32)
!6373 = !DILocation(line: 0, scope: !6369)
!6374 = !DILocation(line: 42, column: 2, scope: !6369)
!6375 = !DILocation(line: 43, column: 1, scope: !6369)
!6376 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6377, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{null, !791}
!6379 = !{!6380}
!6380 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6376, file: !535, line: 1684, type: !791)
!6381 = !DILocation(line: 0, scope: !6376)
!6382 = !DILocation(line: 1686, column: 23, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6376, file: !535, line: 1686, column: 7)
!6384 = !DILocation(line: 1686, column: 7, scope: !6376)
!6385 = !DILocation(line: 1688, column: 5, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !535, line: 1687, column: 3)
!6387 = !{i64 2151027442}
!6388 = !DILocation(line: 1689, column: 81, scope: !6386)
!6389 = !DILocation(line: 1689, column: 60, scope: !6386)
!6390 = !DILocation(line: 1689, column: 34, scope: !6386)
!6391 = !DILocation(line: 1689, column: 5, scope: !6386)
!6392 = !DILocation(line: 1689, column: 43, scope: !6386)
!6393 = !DILocation(line: 1690, column: 5, scope: !6386)
!6394 = !{i64 2151027556}
!6395 = !DILocation(line: 1691, column: 3, scope: !6386)
!6396 = !DILocation(line: 1692, column: 1, scope: !6376)
!6397 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6370, file: !6370, line: 45, type: !6108, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6398)
!6398 = !{!6399}
!6399 = !DILocalVariable(name: "irq", arg: 1, scope: !6397, file: !6370, line: 45, type: !32)
!6400 = !DILocation(line: 0, scope: !6397)
!6401 = !DILocation(line: 47, column: 2, scope: !6397)
!6402 = !DILocation(line: 48, column: 1, scope: !6397)
!6403 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6377, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6404)
!6404 = !{!6405}
!6405 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6403, file: !535, line: 1722, type: !791)
!6406 = !DILocation(line: 0, scope: !6403)
!6407 = !DILocation(line: 1724, column: 23, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6403, file: !535, line: 1724, column: 7)
!6409 = !DILocation(line: 1724, column: 7, scope: !6403)
!6410 = !DILocation(line: 1726, column: 81, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !535, line: 1725, column: 3)
!6412 = !DILocation(line: 1726, column: 60, scope: !6411)
!6413 = !DILocation(line: 1726, column: 34, scope: !6411)
!6414 = !DILocation(line: 1726, column: 5, scope: !6411)
!6415 = !DILocation(line: 1726, column: 43, scope: !6411)
!6416 = !DILocation(line: 271, column: 3, scope: !6417, inlinedAt: !6419)
!6417 = distinct !DISubprogram(name: "__DSB", scope: !6418, file: !6418, line: 269, type: !3087, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !2024)
!6418 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6419 = distinct !DILocation(line: 1727, column: 5, scope: !6411)
!6420 = !{i64 3481825}
!6421 = !DILocation(line: 260, column: 3, scope: !6422, inlinedAt: !6423)
!6422 = distinct !DISubprogram(name: "__ISB", scope: !6418, file: !6418, line: 258, type: !3087, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !2024)
!6423 = distinct !DILocation(line: 1728, column: 5, scope: !6411)
!6424 = !{i64 3481542}
!6425 = !DILocation(line: 1729, column: 3, scope: !6411)
!6426 = !DILocation(line: 1730, column: 1, scope: !6403)
!6427 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6370, file: !6370, line: 50, type: !6428, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6430)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!109, !32}
!6430 = !{!6431}
!6431 = !DILocalVariable(name: "irq", arg: 1, scope: !6427, file: !6370, line: 50, type: !32)
!6432 = !DILocation(line: 0, scope: !6427)
!6433 = !DILocation(line: 52, column: 20, scope: !6427)
!6434 = !DILocation(line: 52, column: 9, scope: !6427)
!6435 = !DILocation(line: 52, column: 41, scope: !6427)
!6436 = !DILocation(line: 52, column: 39, scope: !6427)
!6437 = !DILocation(line: 52, column: 2, scope: !6427)
!6438 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6370, file: !6370, line: 64, type: !6439, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6441)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{null, !32, !32, !110}
!6441 = !{!6442, !6443, !6444}
!6442 = !DILocalVariable(name: "irq", arg: 1, scope: !6438, file: !6370, line: 64, type: !32)
!6443 = !DILocalVariable(name: "prio", arg: 2, scope: !6438, file: !6370, line: 64, type: !32)
!6444 = !DILocalVariable(name: "flags", arg: 3, scope: !6438, file: !6370, line: 64, type: !110)
!6445 = !DILocation(line: 0, scope: !6438)
!6446 = !DILocation(line: 83, column: 8, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6448, file: !6370, line: 82, column: 9)
!6448 = distinct !DILexicalBlock(scope: !6438, file: !6370, line: 76, column: 6)
!6449 = !DILocation(line: 91, column: 2, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !6370, line: 91, column: 2)
!6451 = distinct !DILexicalBlock(scope: !6438, file: !6370, line: 91, column: 2)
!6452 = !DILocation(line: 91, column: 2, scope: !6451)
!6453 = !DILocation(line: 91, column: 2, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6450, file: !6370, line: 91, column: 2)
!6455 = !DILocation(line: 95, column: 2, scope: !6438)
!6456 = !DILocation(line: 96, column: 1, scope: !6438)
!6457 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6458, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6460)
!6458 = !DISubroutineType(types: !6459)
!6459 = !{null, !791, !110}
!6460 = !{!6461, !6462}
!6461 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6457, file: !535, line: 1814, type: !791)
!6462 = !DILocalVariable(name: "priority", arg: 2, scope: !6457, file: !535, line: 1814, type: !110)
!6463 = !DILocation(line: 0, scope: !6457)
!6464 = !DILocation(line: 0, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6457, file: !535, line: 1816, column: 7)
!6466 = !DILocation(line: 1816, column: 7, scope: !6457)
!6467 = !DILocation(line: 1824, column: 1, scope: !6457)
!6468 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6370, file: !6370, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6469)
!6469 = !{!6470}
!6470 = !DILocalVariable(name: "unused", arg: 1, scope: !6468, file: !6370, line: 155, type: !13)
!6471 = !DILocation(line: 0, scope: !6468)
!6472 = !DILocation(line: 159, column: 2, scope: !6468)
!6473 = !DILocation(line: 160, column: 1, scope: !6468)
!6474 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6475, file: !6475, line: 87, type: !3087, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !2024)
!6475 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6476 = !DILocation(line: 89, column: 2, scope: !6474)
!6477 = !DILocation(line: 90, column: 2, scope: !6474)
!6478 = !DILocation(line: 91, column: 1, scope: !6474)
!6479 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6475, file: !6475, line: 23, type: !3087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!6480 = !DISubprogram(name: "z_arm_int_exit", scope: !6481, file: !6481, line: 153, type: !3087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!6481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6482 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6483, file: !6483, line: 256, type: !3087, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2024)
!6483 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6484 = !DILocation(line: 258, column: 2, scope: !6482)
!6485 = !DILocation(line: 260, column: 2, scope: !6482)
!6486 = !DILocation(line: 262, column: 2, scope: !6482)
!6487 = !DILocation(line: 263, column: 2, scope: !6482)
!6488 = !DILocation(line: 267, column: 2, scope: !6482)
!6489 = !DILocation(line: 268, column: 2, scope: !6482)
!6490 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6483, file: !6483, line: 53, type: !3087, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2024)
!6491 = !DILocation(line: 55, column: 12, scope: !6490)
!6492 = !DILocation(line: 271, column: 3, scope: !6493, inlinedAt: !6494)
!6493 = distinct !DISubprogram(name: "__DSB", scope: !6418, file: !6418, line: 269, type: !3087, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2024)
!6494 = distinct !DILocation(line: 56, column: 2, scope: !6490)
!6495 = !{i64 3480496}
!6496 = !DILocation(line: 260, column: 3, scope: !6497, inlinedAt: !6498)
!6497 = distinct !DISubprogram(name: "__ISB", scope: !6418, file: !6418, line: 258, type: !3087, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2024)
!6498 = distinct !DILocation(line: 57, column: 2, scope: !6490)
!6499 = !{i64 3480213}
!6500 = !DILocation(line: 58, column: 1, scope: !6490)
!6501 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6483, file: !6483, line: 96, type: !3087, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2024)
!6502 = !DILocation(line: 103, column: 13, scope: !6501)
!6503 = !DILocation(line: 975, column: 3, scope: !6504, inlinedAt: !6509)
!6504 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6418, file: !6418, line: 971, type: !6505, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6507)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!110}
!6507 = !{!6508}
!6508 = !DILocalVariable(name: "result", scope: !6504, file: !6418, line: 973, type: !110)
!6509 = distinct !DILocation(line: 189, column: 16, scope: !6501)
!6510 = !{i64 3501326}
!6511 = !DILocation(line: 0, scope: !6504, inlinedAt: !6509)
!6512 = !DILocation(line: 189, column: 32, scope: !6501)
!6513 = !DILocalVariable(name: "control", arg: 1, scope: !6514, file: !6418, line: 1001, type: !110)
!6514 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6418, file: !6418, line: 1001, type: !6515, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !6517)
!6515 = !DISubroutineType(types: !6516)
!6516 = !{null, !110}
!6517 = !{!6513}
!6518 = !DILocation(line: 0, scope: !6514, inlinedAt: !6519)
!6519 = distinct !DILocation(line: 189, column: 2, scope: !6501)
!6520 = !DILocation(line: 1003, column: 3, scope: !6514, inlinedAt: !6519)
!6521 = !{i64 3502046}
!6522 = !DILocation(line: 260, column: 3, scope: !6497, inlinedAt: !6523)
!6523 = distinct !DILocation(line: 1004, column: 3, scope: !6514, inlinedAt: !6519)
!6524 = !DILocation(line: 191, column: 1, scope: !6501)
!6525 = distinct !DISubprogram(name: "arch_swap", scope: !6526, file: !6526, line: 33, type: !6428, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !6527)
!6526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6527 = !{!6528}
!6528 = !DILocalVariable(name: "key", arg: 1, scope: !6525, file: !6526, line: 33, type: !32)
!6529 = !DILocation(line: 0, scope: !6525)
!6530 = !DILocation(line: 36, column: 2, scope: !6525)
!6531 = !DILocation(line: 36, column: 17, scope: !6525)
!6532 = !DILocation(line: 36, column: 25, scope: !6525)
!6533 = !DILocation(line: 37, column: 37, scope: !6525)
!6534 = !DILocation(line: 37, column: 17, scope: !6525)
!6535 = !DILocation(line: 37, column: 35, scope: !6525)
!6536 = !DILocation(line: 41, column: 12, scope: !6525)
!6537 = !DILocalVariable(name: "key", arg: 1, scope: !6538, file: !6097, line: 84, type: !32)
!6538 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2637, retainedNodes: !6539)
!6539 = !{!6537}
!6540 = !DILocation(line: 0, scope: !6538, inlinedAt: !6541)
!6541 = distinct !DILocation(line: 44, column: 2, scope: !6525)
!6542 = !DILocation(line: 95, column: 2, scope: !6538, inlinedAt: !6541)
!6543 = !{i64 2242560}
!6544 = !DILocation(line: 53, column: 9, scope: !6525)
!6545 = !DILocation(line: 53, column: 24, scope: !6525)
!6546 = !DILocation(line: 53, column: 2, scope: !6525)
!6547 = distinct !DISubprogram(name: "arch_new_thread", scope: !6548, file: !6548, line: 56, type: !6549, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6659)
!6548 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !6551, !6654, !285, !3354, !107, !107, !107}
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 32)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6553)
!6553 = !{!6554, !6612, !6624, !6625, !6626, !6627, !6628, !6634, !6649}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6552, file: !158, line: 247, baseType: !6555, size: 384)
!6555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6556)
!6556 = !{!6557, !6581, !6588, !6589, !6590, !6599, !6600, !6601}
!6557 = !DIDerivedType(tag: DW_TAG_member, scope: !6555, file: !158, line: 60, baseType: !6558, size: 64)
!6558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6555, file: !158, line: 60, size: 64, elements: !6559)
!6559 = !{!6560, !6575}
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6558, file: !158, line: 61, baseType: !6561, size: 64)
!6561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6562)
!6562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6563)
!6563 = !{!6564, !6570}
!6564 = !DIDerivedType(tag: DW_TAG_member, scope: !6562, file: !127, line: 38, baseType: !6565, size: 32)
!6565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6562, file: !127, line: 38, size: 32, elements: !6566)
!6566 = !{!6567, !6569}
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6565, file: !127, line: 39, baseType: !6568, size: 32)
!6568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6562, size: 32)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6565, file: !127, line: 40, baseType: !6568, size: 32)
!6570 = !DIDerivedType(tag: DW_TAG_member, scope: !6562, file: !127, line: 42, baseType: !6571, size: 32, offset: 32)
!6571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6562, file: !127, line: 42, size: 32, elements: !6572)
!6572 = !{!6573, !6574}
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6571, file: !127, line: 43, baseType: !6568, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6571, file: !127, line: 44, baseType: !6568, size: 32)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6558, file: !158, line: 62, baseType: !6576, size: 64)
!6576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6577)
!6577 = !{!6578}
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6576, file: !170, line: 50, baseType: !6579, size: 64)
!6579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6580, size: 64, elements: !175)
!6580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6576, size: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6555, file: !158, line: 68, baseType: !6582, size: 32, offset: 64)
!6582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6583, size: 32)
!6583 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6584)
!6584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6585)
!6585 = !{!6586}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6584, file: !122, line: 232, baseType: !6587, size: 64)
!6587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6562)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6555, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6555, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6590 = !DIDerivedType(tag: DW_TAG_member, scope: !6555, file: !158, line: 90, baseType: !6591, size: 16, offset: 112)
!6591 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6555, file: !158, line: 90, size: 16, elements: !6592)
!6592 = !{!6593, !6598}
!6593 = !DIDerivedType(tag: DW_TAG_member, scope: !6591, file: !158, line: 91, baseType: !6594, size: 16)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6591, file: !158, line: 91, size: 16, elements: !6595)
!6595 = !{!6596, !6597}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6594, file: !158, line: 96, baseType: !190, size: 8)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6594, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6591, file: !158, line: 100, baseType: !194, size: 16)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6555, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6555, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6555, file: !158, line: 131, baseType: !6602, size: 192, offset: 192)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6603)
!6603 = !{!6604, !6605, !6611}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6602, file: !122, line: 245, baseType: !6561, size: 64)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6602, file: !122, line: 246, baseType: !6606, size: 32, offset: 64)
!6606 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6607)
!6607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6608, size: 32)
!6608 = !DISubroutineType(types: !6609)
!6609 = !{null, !6610}
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 32)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6602, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6552, file: !158, line: 250, baseType: !6613, size: 288, offset: 384)
!6613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6614)
!6614 = !{!6615, !6616, !6617, !6618, !6619, !6620, !6621, !6622, !6623}
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6613, file: !211, line: 26, baseType: !110, size: 32)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6613, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6613, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6613, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6613, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6613, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6613, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6613, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6613, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6552, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6552, file: !158, line: 256, baseType: !6583, size: 64, offset: 704)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6552, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6552, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6552, file: !158, line: 300, baseType: !6629, size: 96, offset: 1056)
!6629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6630)
!6630 = !{!6631, !6632, !6633}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6629, file: !158, line: 153, baseType: !22, size: 32)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6629, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6629, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6552, file: !158, line: 325, baseType: !6635, size: 32, offset: 1152)
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6636, size: 32)
!6636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6637)
!6637 = !{!6638, !6644, !6645}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6636, file: !118, line: 5074, baseType: !6639, size: 96)
!6639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6640)
!6640 = !{!6641, !6642, !6643}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6639, file: !243, line: 57, baseType: !246, size: 32)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6639, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6639, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6636, file: !118, line: 5075, baseType: !6583, size: 64, offset: 96)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6636, file: !118, line: 5076, baseType: !6646, size: 32, offset: 160)
!6646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6647)
!6647 = !{!6648}
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6646, file: !253, line: 52, baseType: !22, size: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6552, file: !158, line: 343, baseType: !6650, size: 64, offset: 1184)
!6650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6651)
!6651 = !{!6652, !6653}
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6650, file: !211, line: 63, baseType: !110, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6650, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6655, size: 32)
!6655 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3353, line: 44, baseType: !6656)
!6656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6657)
!6657 = !{!6658}
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6656, file: !147, line: 48, baseType: !150, size: 8)
!6659 = !{!6660, !6661, !6662, !6663, !6664, !6665, !6666, !6667}
!6660 = !DILocalVariable(name: "thread", arg: 1, scope: !6547, file: !6548, line: 56, type: !6551)
!6661 = !DILocalVariable(name: "stack", arg: 2, scope: !6547, file: !6548, line: 56, type: !6654)
!6662 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6547, file: !6548, line: 57, type: !285)
!6663 = !DILocalVariable(name: "entry", arg: 4, scope: !6547, file: !6548, line: 57, type: !3354)
!6664 = !DILocalVariable(name: "p1", arg: 5, scope: !6547, file: !6548, line: 58, type: !107)
!6665 = !DILocalVariable(name: "p2", arg: 6, scope: !6547, file: !6548, line: 58, type: !107)
!6666 = !DILocalVariable(name: "p3", arg: 7, scope: !6547, file: !6548, line: 58, type: !107)
!6667 = !DILocalVariable(name: "iframe", scope: !6547, file: !6548, line: 60, type: !2668)
!6668 = !DILocation(line: 0, scope: !6547)
!6669 = !DILocation(line: 85, column: 11, scope: !6547)
!6670 = !DILocation(line: 93, column: 10, scope: !6547)
!6671 = !DILocation(line: 98, column: 13, scope: !6547)
!6672 = !DILocation(line: 100, column: 15, scope: !6547)
!6673 = !DILocation(line: 100, column: 10, scope: !6547)
!6674 = !DILocation(line: 100, column: 13, scope: !6547)
!6675 = !DILocation(line: 101, column: 15, scope: !6547)
!6676 = !DILocation(line: 101, column: 10, scope: !6547)
!6677 = !DILocation(line: 101, column: 13, scope: !6547)
!6678 = !DILocation(line: 102, column: 15, scope: !6547)
!6679 = !DILocation(line: 102, column: 10, scope: !6547)
!6680 = !DILocation(line: 102, column: 13, scope: !6547)
!6681 = !DILocation(line: 103, column: 15, scope: !6547)
!6682 = !DILocation(line: 103, column: 10, scope: !6547)
!6683 = !DILocation(line: 103, column: 13, scope: !6547)
!6684 = !DILocation(line: 106, column: 10, scope: !6547)
!6685 = !DILocation(line: 106, column: 15, scope: !6547)
!6686 = !DILocation(line: 122, column: 29, scope: !6547)
!6687 = !DILocation(line: 122, column: 23, scope: !6547)
!6688 = !DILocation(line: 122, column: 27, scope: !6547)
!6689 = !DILocation(line: 123, column: 15, scope: !6547)
!6690 = !DILocation(line: 123, column: 23, scope: !6547)
!6691 = !DILocation(line: 143, column: 1, scope: !6547)
!6692 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6548, file: !6548, line: 385, type: !6693, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6696)
!6693 = !DISubroutineType(types: !6694)
!6694 = !{!110, !6695, !6695}
!6695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6696 = !{!6697, !6698, !6699, !6702}
!6697 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6692, file: !6548, line: 385, type: !6695)
!6698 = !DILocalVariable(name: "psp", arg: 2, scope: !6692, file: !6548, line: 385, type: !6695)
!6699 = !DILocalVariable(name: "thread", scope: !6692, file: !6548, line: 388, type: !6700)
!6700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6701, size: 32)
!6701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6552)
!6702 = !DILocalVariable(name: "guard_len", scope: !6692, file: !6548, line: 405, type: !110)
!6703 = !DILocation(line: 0, scope: !6692)
!6704 = !DILocation(line: 388, column: 34, scope: !6692)
!6705 = !DILocation(line: 390, column: 13, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6692, file: !6548, line: 390, column: 6)
!6707 = !DILocation(line: 390, column: 6, scope: !6692)
!6708 = !DILocation(line: 438, column: 6, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6692, file: !6548, line: 438, column: 6)
!6710 = !DILocation(line: 438, column: 6, scope: !6692)
!6711 = !DILocation(line: 442, column: 3, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6709, file: !6548, line: 440, column: 22)
!6713 = !DILocation(line: 455, column: 1, scope: !6692)
!6714 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6548, file: !6548, line: 530, type: !6715, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2665, retainedNodes: !6717)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !6551, !285, !3354}
!6717 = !{!6718, !6719, !6720}
!6718 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6714, file: !6548, line: 530, type: !6551)
!6719 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6714, file: !6548, line: 530, type: !285)
!6720 = !DILocalVariable(name: "_main", arg: 3, scope: !6714, file: !6548, line: 531, type: !3354)
!6721 = !DILocation(line: 0, scope: !6714)
!6722 = !DILocation(line: 535, column: 11, scope: !6714)
!6723 = !DILocation(line: 560, column: 2, scope: !6714)
!6724 = !DILocation(line: 576, column: 2, scope: !6714)
!6725 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6726 = !DILocation(line: 603, column: 2, scope: !6714)
!6727 = distinct !DISubprogram(name: "z_arm_fault", scope: !6728, file: !6728, line: 1036, type: !6729, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6744)
!6728 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6729 = !DISubroutineType(types: !6730)
!6730 = !{null, !110, !110, !110, !6731}
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 32)
!6732 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6733)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6734)
!6734 = !{!6735, !6736, !6737, !6738, !6739, !6740, !6741, !6742, !6743}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6733, file: !211, line: 26, baseType: !110, size: 32)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6733, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6733, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6733, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6733, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6733, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6733, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6733, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6733, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6744 = !{!6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754}
!6745 = !DILocalVariable(name: "msp", arg: 1, scope: !6727, file: !6728, line: 1036, type: !110)
!6746 = !DILocalVariable(name: "psp", arg: 2, scope: !6727, file: !6728, line: 1036, type: !110)
!6747 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6727, file: !6728, line: 1036, type: !110)
!6748 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6727, file: !6728, line: 1037, type: !6731)
!6749 = !DILocalVariable(name: "reason", scope: !6727, file: !6728, line: 1039, type: !110)
!6750 = !DILocalVariable(name: "fault", scope: !6727, file: !6728, line: 1040, type: !109)
!6751 = !DILocalVariable(name: "recoverable", scope: !6727, file: !6728, line: 1041, type: !347)
!6752 = !DILocalVariable(name: "nested_exc", scope: !6727, file: !6728, line: 1041, type: !347)
!6753 = !DILocalVariable(name: "esf", scope: !6727, file: !6728, line: 1042, type: !2736)
!6754 = !DILocalVariable(name: "esf_copy", scope: !6727, file: !6728, line: 1047, type: !2737)
!6755 = !DILocation(line: 0, scope: !6727)
!6756 = !DILocation(line: 1040, column: 19, scope: !6727)
!6757 = !DILocation(line: 1041, column: 2, scope: !6727)
!6758 = !DILocation(line: 1047, column: 2, scope: !6727)
!6759 = !DILocation(line: 1047, column: 15, scope: !6727)
!6760 = !DILocalVariable(name: "key", arg: 1, scope: !6761, file: !6097, line: 84, type: !32)
!6761 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6762)
!6762 = !{!6760}
!6763 = !DILocation(line: 0, scope: !6761, inlinedAt: !6764)
!6764 = distinct !DILocation(line: 1050, column: 2, scope: !6727)
!6765 = !DILocation(line: 95, column: 2, scope: !6761, inlinedAt: !6764)
!6766 = !{i64 2275804}
!6767 = !DILocation(line: 1055, column: 9, scope: !6727)
!6768 = !DILocation(line: 1056, column: 2, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6728, line: 1056, column: 2)
!6770 = distinct !DILexicalBlock(scope: !6727, file: !6728, line: 1056, column: 2)
!6771 = !DILocation(line: 1056, column: 2, scope: !6770)
!6772 = !DILocation(line: 1056, column: 2, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !6728, line: 1056, column: 2)
!6774 = !DILocation(line: 1040, column: 24, scope: !6727)
!6775 = !DILocation(line: 1063, column: 11, scope: !6727)
!6776 = !DILocation(line: 1064, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6727, file: !6728, line: 1064, column: 6)
!6778 = !{i8 0, i8 2}
!6779 = !DILocation(line: 1064, column: 6, scope: !6727)
!6780 = !DILocation(line: 1070, column: 20, scope: !6727)
!6781 = !DILocation(line: 1070, column: 2, scope: !6727)
!6782 = !DILocation(line: 1089, column: 6, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6727, file: !6728, line: 1089, column: 6)
!6784 = !DILocation(line: 0, scope: !6783)
!6785 = !DILocation(line: 1089, column: 6, scope: !6727)
!6786 = !DILocation(line: 1090, column: 28, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !6728, line: 1090, column: 7)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !6728, line: 1089, column: 18)
!6789 = !DILocation(line: 1090, column: 44, scope: !6787)
!6790 = !DILocation(line: 1090, column: 7, scope: !6788)
!6791 = !DILocation(line: 1091, column: 24, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6787, file: !6728, line: 1090, column: 50)
!6793 = !DILocation(line: 1092, column: 3, scope: !6792)
!6794 = !DILocation(line: 1094, column: 23, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6783, file: !6728, line: 1093, column: 9)
!6796 = !DILocation(line: 1097, column: 2, scope: !6727)
!6797 = !DILocation(line: 1098, column: 1, scope: !6727)
!6798 = distinct !DISubprogram(name: "get_esf", scope: !6728, file: !6728, line: 894, type: !6799, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6802)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!2736, !110, !110, !110, !6801}
!6801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6802 = !{!6803, !6804, !6805, !6806, !6807, !6808}
!6803 = !DILocalVariable(name: "msp", arg: 1, scope: !6798, file: !6728, line: 894, type: !110)
!6804 = !DILocalVariable(name: "psp", arg: 2, scope: !6798, file: !6728, line: 894, type: !110)
!6805 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6798, file: !6728, line: 894, type: !110)
!6806 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6798, file: !6728, line: 895, type: !6801)
!6807 = !DILocalVariable(name: "alternative_state_exc", scope: !6798, file: !6728, line: 897, type: !347)
!6808 = !DILocalVariable(name: "ptr_esf", scope: !6798, file: !6728, line: 898, type: !2736)
!6809 = !DILocation(line: 0, scope: !6798)
!6810 = !DILocation(line: 900, column: 14, scope: !6798)
!6811 = !DILocation(line: 902, column: 49, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6798, file: !6728, line: 902, column: 6)
!6813 = !DILocation(line: 902, column: 6, scope: !6798)
!6814 = !DILocation(line: 983, column: 44, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6798, file: !6728, line: 983, column: 6)
!6816 = !DILocation(line: 985, column: 3, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !6728, line: 985, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6728, line: 985, column: 3)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6728, line: 985, column: 3)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6728, line: 985, column: 3)
!6821 = distinct !DILexicalBlock(scope: !6815, file: !6728, line: 984, column: 47)
!6822 = !DILocation(line: 986, column: 3, scope: !6821)
!6823 = !DILocation(line: 983, column: 18, scope: !6815)
!6824 = !DILocation(line: 991, column: 7, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !6728, line: 990, column: 30)
!6826 = distinct !DILexicalBlock(scope: !6798, file: !6728, line: 990, column: 6)
!6827 = !DILocation(line: 998, column: 16, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !6728, line: 995, column: 10)
!6829 = distinct !DILexicalBlock(scope: !6825, file: !6728, line: 991, column: 7)
!6830 = !DILocation(line: 1002, column: 2, scope: !6798)
!6831 = !DILocation(line: 1003, column: 1, scope: !6798)
!6832 = distinct !DISubprogram(name: "fault_handle", scope: !6728, file: !6728, line: 786, type: !6833, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6835)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!110, !2736, !109, !6801}
!6835 = !{!6836, !6837, !6838, !6839}
!6836 = !DILocalVariable(name: "esf", arg: 1, scope: !6832, file: !6728, line: 786, type: !2736)
!6837 = !DILocalVariable(name: "fault", arg: 2, scope: !6832, file: !6728, line: 786, type: !109)
!6838 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6832, file: !6728, line: 786, type: !6801)
!6839 = !DILocalVariable(name: "reason", scope: !6832, file: !6728, line: 788, type: !110)
!6840 = !DILocation(line: 0, scope: !6832)
!6841 = !DILocation(line: 790, column: 15, scope: !6832)
!6842 = !DILocation(line: 792, column: 2, scope: !6832)
!6843 = !DILocation(line: 794, column: 12, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6832, file: !6728, line: 792, column: 17)
!6845 = !DILocation(line: 795, column: 3, scope: !6844)
!6846 = !DILocation(line: 800, column: 12, scope: !6844)
!6847 = !DILocation(line: 801, column: 3, scope: !6844)
!6848 = !DILocation(line: 803, column: 12, scope: !6844)
!6849 = !DILocation(line: 804, column: 3, scope: !6844)
!6850 = !DILocation(line: 806, column: 12, scope: !6844)
!6851 = !DILocation(line: 807, column: 3, scope: !6844)
!6852 = !DILocation(line: 814, column: 3, scope: !6844)
!6853 = !DILocation(line: 815, column: 3, scope: !6844)
!6854 = !DILocation(line: 820, column: 3, scope: !6844)
!6855 = !DILocation(line: 821, column: 3, scope: !6844)
!6856 = !DILocation(line: 829, column: 2, scope: !6832)
!6857 = distinct !DISubprogram(name: "hard_fault", scope: !6728, file: !6728, line: 709, type: !6858, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6860)
!6858 = !DISubroutineType(types: !6859)
!6859 = !{!110, !2736, !6801}
!6860 = !{!6861, !6862, !6863}
!6861 = !DILocalVariable(name: "esf", arg: 1, scope: !6857, file: !6728, line: 709, type: !2736)
!6862 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6857, file: !6728, line: 709, type: !6801)
!6863 = !DILocalVariable(name: "reason", scope: !6857, file: !6728, line: 711, type: !110)
!6864 = !DILocation(line: 0, scope: !6857)
!6865 = !DILocation(line: 713, column: 2, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6728, line: 713, column: 2)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6728, line: 713, column: 2)
!6868 = distinct !DILexicalBlock(scope: !6869, file: !6728, line: 713, column: 2)
!6869 = distinct !DILexicalBlock(scope: !6857, file: !6728, line: 713, column: 2)
!6870 = !DILocation(line: 732, column: 15, scope: !6857)
!6871 = !DILocation(line: 734, column: 12, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6857, file: !6728, line: 734, column: 6)
!6873 = !DILocation(line: 734, column: 17, scope: !6872)
!6874 = !DILocation(line: 734, column: 41, scope: !6872)
!6875 = !DILocation(line: 734, column: 6, scope: !6857)
!6876 = !DILocation(line: 735, column: 3, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6728, line: 735, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6728, line: 735, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6728, line: 735, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6728, line: 735, column: 3)
!6881 = distinct !DILexicalBlock(scope: !6872, file: !6728, line: 734, column: 47)
!6882 = !DILocation(line: 736, column: 2, scope: !6881)
!6883 = !DILocation(line: 736, column: 19, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6872, file: !6728, line: 736, column: 13)
!6885 = !DILocation(line: 736, column: 49, scope: !6884)
!6886 = !DILocation(line: 736, column: 13, scope: !6872)
!6887 = !DILocation(line: 737, column: 3, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6728, line: 737, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !6728, line: 737, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6891, file: !6728, line: 737, column: 3)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6728, line: 737, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6884, file: !6728, line: 736, column: 55)
!6893 = !DILocation(line: 738, column: 2, scope: !6892)
!6894 = !DILocation(line: 738, column: 19, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6884, file: !6728, line: 738, column: 13)
!6896 = !DILocation(line: 738, column: 24, scope: !6895)
!6897 = !DILocation(line: 738, column: 47, scope: !6895)
!6898 = !DILocation(line: 738, column: 13, scope: !6884)
!6899 = !DILocation(line: 739, column: 3, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6728, line: 739, column: 3)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6728, line: 739, column: 3)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6728, line: 739, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6728, line: 739, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6895, file: !6728, line: 738, column: 53)
!6905 = !DILocation(line: 740, column: 7, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6904, file: !6728, line: 740, column: 7)
!6907 = !DILocation(line: 740, column: 7, scope: !6904)
!6908 = !DILocation(line: 741, column: 4, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6728, line: 741, column: 4)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6728, line: 741, column: 4)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6728, line: 741, column: 4)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6728, line: 741, column: 4)
!6913 = distinct !DILexicalBlock(scope: !6906, file: !6728, line: 740, column: 38)
!6914 = !DILocation(line: 742, column: 24, scope: !6913)
!6915 = !DILocation(line: 743, column: 3, scope: !6913)
!6916 = !DILocation(line: 743, column: 20, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6906, file: !6728, line: 743, column: 14)
!6918 = !DILocation(line: 743, column: 25, scope: !6917)
!6919 = !DILocation(line: 743, column: 52, scope: !6917)
!6920 = !DILocation(line: 743, column: 14, scope: !6906)
!6921 = !DILocation(line: 744, column: 13, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6917, file: !6728, line: 743, column: 58)
!6923 = !DILocation(line: 745, column: 3, scope: !6922)
!6924 = !DILocation(line: 745, column: 20, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6917, file: !6728, line: 745, column: 14)
!6926 = !DILocation(line: 745, column: 25, scope: !6925)
!6927 = !DILocation(line: 745, column: 52, scope: !6925)
!6928 = !DILocation(line: 745, column: 14, scope: !6917)
!6929 = !DILocation(line: 746, column: 13, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !6728, line: 745, column: 58)
!6931 = !DILocation(line: 747, column: 3, scope: !6930)
!6932 = !DILocation(line: 747, column: 20, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !6728, line: 747, column: 14)
!6934 = !DILocation(line: 747, column: 52, scope: !6933)
!6935 = !DILocation(line: 747, column: 14, scope: !6925)
!6936 = !DILocation(line: 748, column: 13, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6933, file: !6728, line: 747, column: 58)
!6938 = !DILocation(line: 754, column: 4, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6728, line: 754, column: 4)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6728, line: 754, column: 4)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6728, line: 754, column: 4)
!6942 = distinct !DILexicalBlock(scope: !6933, file: !6728, line: 753, column: 10)
!6943 = !DILocation(line: 758, column: 3, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6728, line: 758, column: 3)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6728, line: 758, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6728, line: 758, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6895, file: !6728, line: 757, column: 9)
!6948 = !DILocation(line: 766, column: 2, scope: !6857)
!6949 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6728, file: !6728, line: 229, type: !6833, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6950)
!6950 = !{!6951, !6952, !6953, !6954, !6955, !6956, !6959}
!6951 = !DILocalVariable(name: "esf", arg: 1, scope: !6949, file: !6728, line: 229, type: !2736)
!6952 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6949, file: !6728, line: 229, type: !109)
!6953 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6949, file: !6728, line: 230, type: !6801)
!6954 = !DILocalVariable(name: "reason", scope: !6949, file: !6728, line: 232, type: !110)
!6955 = !DILocalVariable(name: "mmfar", scope: !6949, file: !6728, line: 233, type: !110)
!6956 = !DILocalVariable(name: "temp", scope: !6957, file: !6728, line: 254, type: !110)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6728, line: 244, column: 48)
!6958 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 244, column: 6)
!6959 = !DILocalVariable(name: "min_stack_ptr", scope: !6960, file: !6728, line: 309, type: !110)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6728, line: 308, column: 43)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6728, line: 308, column: 7)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6728, line: 289, column: 40)
!6963 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 288, column: 6)
!6964 = !DILocation(line: 0, scope: !6949)
!6965 = !DILocation(line: 235, column: 2, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6728, line: 235, column: 2)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6728, line: 235, column: 2)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6728, line: 235, column: 2)
!6969 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 235, column: 2)
!6970 = !DILocation(line: 237, column: 12, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 237, column: 6)
!6972 = !DILocation(line: 237, column: 17, scope: !6971)
!6973 = !DILocation(line: 237, column: 41, scope: !6971)
!6974 = !DILocation(line: 237, column: 6, scope: !6949)
!6975 = !DILocation(line: 238, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6728, line: 238, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6728, line: 238, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6728, line: 238, column: 3)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6728, line: 238, column: 3)
!6980 = distinct !DILexicalBlock(scope: !6971, file: !6728, line: 237, column: 47)
!6981 = !DILocation(line: 240, column: 2, scope: !6980)
!6982 = !DILocation(line: 241, column: 12, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 241, column: 6)
!6984 = !DILocation(line: 241, column: 17, scope: !6983)
!6985 = !DILocation(line: 241, column: 43, scope: !6983)
!6986 = !DILocation(line: 241, column: 6, scope: !6949)
!6987 = !DILocation(line: 242, column: 3, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6728, line: 242, column: 3)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6728, line: 242, column: 3)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6728, line: 242, column: 3)
!6991 = distinct !DILexicalBlock(scope: !6992, file: !6728, line: 242, column: 3)
!6992 = distinct !DILexicalBlock(scope: !6983, file: !6728, line: 241, column: 49)
!6993 = !DILocation(line: 243, column: 2, scope: !6992)
!6994 = !DILocation(line: 244, column: 12, scope: !6958)
!6995 = !DILocation(line: 244, column: 17, scope: !6958)
!6996 = !DILocation(line: 244, column: 42, scope: !6958)
!6997 = !DILocation(line: 244, column: 6, scope: !6949)
!6998 = !DILocation(line: 245, column: 3, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6728, line: 245, column: 3)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6728, line: 245, column: 3)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6728, line: 245, column: 3)
!7002 = distinct !DILexicalBlock(scope: !6957, file: !6728, line: 245, column: 3)
!7003 = !DILocation(line: 254, column: 24, scope: !6957)
!7004 = !DILocation(line: 0, scope: !6957)
!7005 = !DILocation(line: 256, column: 13, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6957, file: !6728, line: 256, column: 7)
!7007 = !DILocation(line: 256, column: 18, scope: !7006)
!7008 = !DILocation(line: 256, column: 44, scope: !7006)
!7009 = !DILocation(line: 256, column: 7, scope: !6957)
!7010 = !DILocation(line: 258, column: 4, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6728, line: 258, column: 4)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6728, line: 258, column: 4)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6728, line: 258, column: 4)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6728, line: 258, column: 4)
!7015 = distinct !DILexicalBlock(scope: !7006, file: !6728, line: 256, column: 50)
!7016 = !DILocation(line: 259, column: 24, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7015, file: !6728, line: 259, column: 8)
!7018 = !DILocation(line: 259, column: 8, scope: !7015)
!7019 = !DILocation(line: 261, column: 15, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7017, file: !6728, line: 259, column: 30)
!7021 = !DILocation(line: 262, column: 4, scope: !7020)
!7022 = !DILocation(line: 265, column: 12, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 265, column: 6)
!7024 = !DILocation(line: 265, column: 17, scope: !7023)
!7025 = !DILocation(line: 265, column: 42, scope: !7023)
!7026 = !DILocation(line: 265, column: 6, scope: !6949)
!7027 = !DILocation(line: 266, column: 3, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6728, line: 266, column: 3)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6728, line: 266, column: 3)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6728, line: 266, column: 3)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6728, line: 266, column: 3)
!7032 = distinct !DILexicalBlock(scope: !7023, file: !6728, line: 265, column: 48)
!7033 = !DILocation(line: 267, column: 2, scope: !7032)
!7034 = !DILocation(line: 269, column: 12, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 269, column: 6)
!7036 = !DILocation(line: 269, column: 17, scope: !7035)
!7037 = !DILocation(line: 269, column: 41, scope: !7035)
!7038 = !DILocation(line: 269, column: 6, scope: !6949)
!7039 = !DILocation(line: 270, column: 3, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !6728, line: 270, column: 3)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !6728, line: 270, column: 3)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !6728, line: 270, column: 3)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6728, line: 270, column: 3)
!7044 = distinct !DILexicalBlock(scope: !7035, file: !6728, line: 269, column: 47)
!7045 = !DILocation(line: 272, column: 2, scope: !7044)
!7046 = !DILocation(line: 288, column: 12, scope: !6963)
!7047 = !DILocation(line: 288, column: 17, scope: !6963)
!7048 = !DILocation(line: 288, column: 41, scope: !6963)
!7049 = !DILocation(line: 289, column: 9, scope: !6963)
!7050 = !DILocation(line: 289, column: 14, scope: !6963)
!7051 = !DILocation(line: 288, column: 6, scope: !6949)
!7052 = !DILocation(line: 308, column: 12, scope: !6961)
!7053 = !DILocation(line: 308, column: 17, scope: !6961)
!7054 = !DILocation(line: 308, column: 7, scope: !6962)
!7055 = !DILocation(line: 310, column: 6, scope: !6960)
!7056 = !DILocation(line: 309, column: 29, scope: !6960)
!7057 = !DILocation(line: 0, scope: !6960)
!7058 = !DILocation(line: 312, column: 8, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6960, file: !6728, line: 312, column: 8)
!7060 = !DILocation(line: 312, column: 8, scope: !6960)
!7061 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7062, file: !6418, line: 1099, type: !110)
!7062 = distinct !DISubprogram(name: "__set_PSP", scope: !6418, file: !6418, line: 1099, type: !6515, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7063)
!7063 = !{!7061}
!7064 = !DILocation(line: 0, scope: !7062, inlinedAt: !7065)
!7065 = distinct !DILocation(line: 338, column: 5, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !6728, line: 312, column: 23)
!7067 = !DILocation(line: 1101, column: 3, scope: !7062, inlinedAt: !7065)
!7068 = !{i64 3531465}
!7069 = !DILocation(line: 341, column: 4, scope: !7066)
!7070 = !DILocation(line: 342, column: 5, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !6728, line: 342, column: 5)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6728, line: 342, column: 5)
!7073 = distinct !DILexicalBlock(scope: !7059, file: !6728, line: 341, column: 11)
!7074 = !DILocation(line: 342, column: 5, scope: !7072)
!7075 = !DILocation(line: 342, column: 5, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7071, file: !6728, line: 342, column: 5)
!7077 = !DILocation(line: 360, column: 12, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !6949, file: !6728, line: 360, column: 6)
!7079 = !DILocation(line: 360, column: 17, scope: !7078)
!7080 = !DILocation(line: 360, column: 41, scope: !7078)
!7081 = !DILocation(line: 360, column: 6, scope: !6949)
!7082 = !DILocation(line: 361, column: 14, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7078, file: !6728, line: 360, column: 47)
!7084 = !DILocation(line: 362, column: 2, scope: !7083)
!7085 = !DILocation(line: 366, column: 12, scope: !6949)
!7086 = !DILocation(line: 369, column: 15, scope: !6949)
!7087 = !DILocation(line: 371, column: 2, scope: !6949)
!7088 = distinct !DISubprogram(name: "bus_fault", scope: !6728, file: !6728, line: 383, type: !7089, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7091)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!109, !2736, !109, !6801}
!7091 = !{!7092, !7093, !7094, !7095, !7096}
!7092 = !DILocalVariable(name: "esf", arg: 1, scope: !7088, file: !6728, line: 383, type: !2736)
!7093 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7088, file: !6728, line: 383, type: !109)
!7094 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7088, file: !6728, line: 383, type: !6801)
!7095 = !DILocalVariable(name: "reason", scope: !7088, file: !6728, line: 385, type: !110)
!7096 = !DILocalVariable(name: "bfar", scope: !7097, file: !6728, line: 405, type: !110)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6728, line: 395, column: 42)
!7098 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 395, column: 6)
!7099 = !DILocation(line: 0, scope: !7088)
!7100 = !DILocation(line: 387, column: 2, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6728, line: 387, column: 2)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !6728, line: 387, column: 2)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6728, line: 387, column: 2)
!7104 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 387, column: 2)
!7105 = !DILocation(line: 389, column: 11, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 389, column: 6)
!7107 = !DILocation(line: 389, column: 16, scope: !7106)
!7108 = !DILocation(line: 389, column: 6, scope: !7088)
!7109 = !DILocation(line: 390, column: 3, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6728, line: 390, column: 3)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6728, line: 390, column: 3)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6728, line: 390, column: 3)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6728, line: 390, column: 3)
!7114 = distinct !DILexicalBlock(scope: !7106, file: !6728, line: 389, column: 39)
!7115 = !DILocation(line: 391, column: 2, scope: !7114)
!7116 = !DILocation(line: 392, column: 11, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 392, column: 6)
!7118 = !DILocation(line: 392, column: 16, scope: !7117)
!7119 = !DILocation(line: 392, column: 6, scope: !7088)
!7120 = !DILocation(line: 393, column: 3, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6728, line: 393, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6728, line: 393, column: 3)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !6728, line: 393, column: 3)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6728, line: 393, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7117, file: !6728, line: 392, column: 41)
!7126 = !DILocation(line: 394, column: 2, scope: !7125)
!7127 = !DILocation(line: 395, column: 11, scope: !7098)
!7128 = !DILocation(line: 395, column: 16, scope: !7098)
!7129 = !DILocation(line: 395, column: 6, scope: !7088)
!7130 = !DILocation(line: 396, column: 3, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6728, line: 396, column: 3)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !6728, line: 396, column: 3)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !6728, line: 396, column: 3)
!7134 = distinct !DILexicalBlock(scope: !7097, file: !6728, line: 396, column: 3)
!7135 = !DILocation(line: 405, column: 3, scope: !7097)
!7136 = !DILocation(line: 0, scope: !7097)
!7137 = !DILocation(line: 407, column: 13, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7097, file: !6728, line: 407, column: 7)
!7139 = !DILocation(line: 407, column: 18, scope: !7138)
!7140 = !DILocation(line: 407, column: 44, scope: !7138)
!7141 = !DILocation(line: 407, column: 7, scope: !7097)
!7142 = !DILocation(line: 408, column: 4, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6728, line: 408, column: 4)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !6728, line: 408, column: 4)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !6728, line: 408, column: 4)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !6728, line: 408, column: 4)
!7147 = distinct !DILexicalBlock(scope: !7138, file: !6728, line: 407, column: 50)
!7148 = !DILocation(line: 409, column: 24, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7147, file: !6728, line: 409, column: 8)
!7150 = !DILocation(line: 409, column: 8, scope: !7147)
!7151 = !DILocation(line: 411, column: 15, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7149, file: !6728, line: 409, column: 30)
!7153 = !DILocation(line: 412, column: 4, scope: !7152)
!7154 = !DILocation(line: 415, column: 11, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 415, column: 6)
!7156 = !DILocation(line: 415, column: 16, scope: !7155)
!7157 = !DILocation(line: 415, column: 6, scope: !7088)
!7158 = !DILocation(line: 416, column: 3, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6728, line: 416, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6728, line: 416, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !6728, line: 416, column: 3)
!7162 = distinct !DILexicalBlock(scope: !7163, file: !6728, line: 416, column: 3)
!7163 = distinct !DILexicalBlock(scope: !7155, file: !6728, line: 415, column: 44)
!7164 = !DILocation(line: 417, column: 2, scope: !7163)
!7165 = !DILocation(line: 418, column: 12, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7088, file: !6728, line: 418, column: 6)
!7167 = !DILocation(line: 418, column: 17, scope: !7166)
!7168 = !DILocation(line: 418, column: 41, scope: !7166)
!7169 = !DILocation(line: 418, column: 6, scope: !7088)
!7170 = !DILocation(line: 423, column: 18, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7166, file: !6728, line: 423, column: 13)
!7172 = !DILocation(line: 423, column: 23, scope: !7171)
!7173 = !DILocation(line: 423, column: 13, scope: !7166)
!7174 = !DILocation(line: 0, scope: !7166)
!7175 = !DILocation(line: 524, column: 12, scope: !7088)
!7176 = !DILocation(line: 526, column: 15, scope: !7088)
!7177 = !DILocation(line: 528, column: 2, scope: !7088)
!7178 = distinct !DISubprogram(name: "usage_fault", scope: !6728, file: !6728, line: 539, type: !7179, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7183)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!110, !7181}
!7181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7182, size: 32)
!7182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2737)
!7183 = !{!7184, !7185}
!7184 = !DILocalVariable(name: "esf", arg: 1, scope: !7178, file: !6728, line: 539, type: !7181)
!7185 = !DILocalVariable(name: "reason", scope: !7178, file: !6728, line: 541, type: !110)
!7186 = !DILocation(line: 0, scope: !7178)
!7187 = !DILocation(line: 543, column: 2, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6728, line: 543, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6728, line: 543, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6728, line: 543, column: 2)
!7191 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 543, column: 2)
!7192 = !DILocation(line: 546, column: 12, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 546, column: 6)
!7194 = !DILocation(line: 546, column: 17, scope: !7193)
!7195 = !DILocation(line: 546, column: 43, scope: !7193)
!7196 = !DILocation(line: 546, column: 6, scope: !7178)
!7197 = !DILocation(line: 547, column: 3, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !6728, line: 547, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6728, line: 547, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6728, line: 547, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !6728, line: 547, column: 3)
!7202 = distinct !DILexicalBlock(scope: !7193, file: !6728, line: 546, column: 49)
!7203 = !DILocation(line: 548, column: 2, scope: !7202)
!7204 = !DILocation(line: 549, column: 12, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 549, column: 6)
!7206 = !DILocation(line: 549, column: 17, scope: !7205)
!7207 = !DILocation(line: 549, column: 43, scope: !7205)
!7208 = !DILocation(line: 549, column: 6, scope: !7178)
!7209 = !DILocation(line: 550, column: 3, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !6728, line: 550, column: 3)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6728, line: 550, column: 3)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6728, line: 550, column: 3)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6728, line: 550, column: 3)
!7214 = distinct !DILexicalBlock(scope: !7205, file: !6728, line: 549, column: 49)
!7215 = !DILocation(line: 551, column: 2, scope: !7214)
!7216 = !DILocation(line: 567, column: 12, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 567, column: 6)
!7218 = !DILocation(line: 567, column: 17, scope: !7217)
!7219 = !DILocation(line: 567, column: 38, scope: !7217)
!7220 = !DILocation(line: 567, column: 6, scope: !7178)
!7221 = !DILocation(line: 568, column: 3, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !6728, line: 568, column: 3)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !6728, line: 568, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !6728, line: 568, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !6728, line: 568, column: 3)
!7226 = distinct !DILexicalBlock(scope: !7217, file: !6728, line: 567, column: 44)
!7227 = !DILocation(line: 569, column: 2, scope: !7226)
!7228 = !DILocation(line: 570, column: 12, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 570, column: 6)
!7230 = !DILocation(line: 570, column: 17, scope: !7229)
!7231 = !DILocation(line: 570, column: 39, scope: !7229)
!7232 = !DILocation(line: 570, column: 6, scope: !7178)
!7233 = !DILocation(line: 571, column: 3, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !6728, line: 571, column: 3)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !6728, line: 571, column: 3)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !6728, line: 571, column: 3)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !6728, line: 571, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7229, file: !6728, line: 570, column: 45)
!7239 = !DILocation(line: 572, column: 2, scope: !7238)
!7240 = !DILocation(line: 573, column: 12, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 573, column: 6)
!7242 = !DILocation(line: 573, column: 17, scope: !7241)
!7243 = !DILocation(line: 573, column: 42, scope: !7241)
!7244 = !DILocation(line: 573, column: 6, scope: !7178)
!7245 = !DILocation(line: 574, column: 3, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !6728, line: 574, column: 3)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !6728, line: 574, column: 3)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !6728, line: 574, column: 3)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !6728, line: 574, column: 3)
!7250 = distinct !DILexicalBlock(scope: !7241, file: !6728, line: 573, column: 48)
!7251 = !DILocation(line: 575, column: 2, scope: !7250)
!7252 = !DILocation(line: 576, column: 12, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7178, file: !6728, line: 576, column: 6)
!7254 = !DILocation(line: 576, column: 17, scope: !7253)
!7255 = !DILocation(line: 576, column: 44, scope: !7253)
!7256 = !DILocation(line: 576, column: 6, scope: !7178)
!7257 = !DILocation(line: 577, column: 3, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !6728, line: 577, column: 3)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !6728, line: 577, column: 3)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !6728, line: 577, column: 3)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !6728, line: 577, column: 3)
!7262 = distinct !DILexicalBlock(scope: !7253, file: !6728, line: 576, column: 50)
!7263 = !DILocation(line: 578, column: 2, scope: !7262)
!7264 = !DILocation(line: 581, column: 12, scope: !7178)
!7265 = !DILocation(line: 583, column: 2, scope: !7178)
!7266 = distinct !DISubprogram(name: "debug_monitor", scope: !6728, file: !6728, line: 632, type: !7267, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7269)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{null, !2736, !6801}
!7269 = !{!7270, !7271}
!7270 = !DILocalVariable(name: "esf", arg: 1, scope: !7266, file: !6728, line: 632, type: !2736)
!7271 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7266, file: !6728, line: 632, type: !6801)
!7272 = !DILocation(line: 0, scope: !7266)
!7273 = !DILocation(line: 634, column: 15, scope: !7266)
!7274 = !DILocation(line: 636, column: 2, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !6728, line: 636, column: 2)
!7276 = distinct !DILexicalBlock(scope: !7277, file: !6728, line: 636, column: 2)
!7277 = distinct !DILexicalBlock(scope: !7278, file: !6728, line: 636, column: 2)
!7278 = distinct !DILexicalBlock(scope: !7266, file: !6728, line: 636, column: 2)
!7279 = !DILocation(line: 652, column: 1, scope: !7266)
!7280 = distinct !DISubprogram(name: "reserved_exception", scope: !6728, file: !6728, line: 776, type: !7281, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7283)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{null, !7181, !109}
!7283 = !{!7284, !7285}
!7284 = !DILocalVariable(name: "esf", arg: 1, scope: !7280, file: !6728, line: 776, type: !7181)
!7285 = !DILocalVariable(name: "fault", arg: 2, scope: !7280, file: !6728, line: 776, type: !109)
!7286 = !DILocation(line: 0, scope: !7280)
!7287 = !DILocation(line: 780, column: 2, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !6728, line: 780, column: 2)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !6728, line: 780, column: 2)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !6728, line: 780, column: 2)
!7291 = distinct !DILexicalBlock(scope: !7280, file: !6728, line: 780, column: 2)
!7292 = !DILocation(line: 783, column: 1, scope: !7280)
!7293 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6728, file: !6728, line: 658, type: !7294, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !7296)
!7294 = !DISubroutineType(types: !7295)
!7295 = !{!347, !2736}
!7296 = !{!7297, !7298, !7299}
!7297 = !DILocalVariable(name: "esf", arg: 1, scope: !7293, file: !6728, line: 658, type: !2736)
!7298 = !DILocalVariable(name: "ret_addr", scope: !7293, file: !6728, line: 660, type: !2779)
!7299 = !DILocalVariable(name: "fault_insn", scope: !7293, file: !6728, line: 686, type: !194)
!7300 = !DILocation(line: 0, scope: !7293)
!7301 = !DILocation(line: 660, column: 46, scope: !7293)
!7302 = !DILocation(line: 660, column: 23, scope: !7293)
!7303 = !DILocation(line: 682, column: 11, scope: !7293)
!7304 = !DILocation(line: 271, column: 3, scope: !7305, inlinedAt: !7306)
!7305 = distinct !DISubprogram(name: "__DSB", scope: !6418, file: !6418, line: 269, type: !3087, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !2024)
!7306 = distinct !DILocation(line: 683, column: 2, scope: !7293)
!7307 = !{i64 3507600}
!7308 = !DILocation(line: 260, column: 3, scope: !7309, inlinedAt: !7310)
!7309 = distinct !DISubprogram(name: "__ISB", scope: !6418, file: !6418, line: 258, type: !3087, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !2024)
!7310 = distinct !DILocation(line: 684, column: 2, scope: !7293)
!7311 = !{i64 3507317}
!7312 = !DILocation(line: 686, column: 35, scope: !7293)
!7313 = !DILocation(line: 686, column: 24, scope: !7293)
!7314 = !DILocation(line: 688, column: 11, scope: !7293)
!7315 = !DILocation(line: 271, column: 3, scope: !7305, inlinedAt: !7316)
!7316 = distinct !DILocation(line: 689, column: 2, scope: !7293)
!7317 = !DILocation(line: 260, column: 3, scope: !7309, inlinedAt: !7318)
!7318 = distinct !DILocation(line: 690, column: 2, scope: !7293)
!7319 = !DILocation(line: 693, column: 45, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7293, file: !6728, line: 693, column: 6)
!7321 = !DILocation(line: 699, column: 1, scope: !7293)
!7322 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6728, file: !6728, line: 1107, type: !3087, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !2024)
!7323 = !DILocation(line: 1111, column: 11, scope: !7322)
!7324 = !DILocation(line: 1136, column: 1, scope: !7322)
!7325 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7326, file: !7326, line: 26, type: !3087, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !7327)
!7326 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7327 = !{!7328}
!7328 = !DILocalVariable(name: "irq", scope: !7325, file: !7326, line: 28, type: !109)
!7329 = !DILocation(line: 0, scope: !7325)
!7330 = !DILocation(line: 30, column: 2, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7325, file: !7326, line: 30, column: 2)
!7332 = !DILocation(line: 31, column: 3, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !7326, line: 30, column: 39)
!7334 = distinct !DILexicalBlock(scope: !7331, file: !7326, line: 30, column: 2)
!7335 = !DILocation(line: 30, column: 35, scope: !7334)
!7336 = !DILocation(line: 30, column: 13, scope: !7334)
!7337 = distinct !{!7337, !7330, !7338}
!7338 = !DILocation(line: 32, column: 2, scope: !7331)
!7339 = !DILocation(line: 33, column: 1, scope: !7325)
!7340 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6458, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2780, retainedNodes: !7341)
!7341 = !{!7342, !7343}
!7342 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7340, file: !535, line: 1814, type: !791)
!7343 = !DILocalVariable(name: "priority", arg: 2, scope: !7340, file: !535, line: 1814, type: !110)
!7344 = !DILocation(line: 0, scope: !7340)
!7345 = !DILocation(line: 1816, column: 7, scope: !7340)
!7346 = !DILocation(line: 0, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7340, file: !535, line: 1816, column: 7)
!7348 = !DILocation(line: 1824, column: 1, scope: !7340)
!7349 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7350, file: !7350, line: 27, type: !7351, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !7457)
!7350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7351 = !DISubroutineType(types: !7352)
!7352 = !{null, !7353}
!7353 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7354)
!7354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7355, size: 32)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7356)
!7356 = !{!7357, !7415, !7427, !7428, !7429, !7430, !7431, !7437, !7452}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7355, file: !158, line: 247, baseType: !7358, size: 384)
!7358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7359)
!7359 = !{!7360, !7384, !7391, !7392, !7393, !7402, !7403, !7404}
!7360 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !158, line: 60, baseType: !7361, size: 64)
!7361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !158, line: 60, size: 64, elements: !7362)
!7362 = !{!7363, !7378}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7361, file: !158, line: 61, baseType: !7364, size: 64)
!7364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7365)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7366)
!7366 = !{!7367, !7373}
!7367 = !DIDerivedType(tag: DW_TAG_member, scope: !7365, file: !127, line: 38, baseType: !7368, size: 32)
!7368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7365, file: !127, line: 38, size: 32, elements: !7369)
!7369 = !{!7370, !7372}
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7368, file: !127, line: 39, baseType: !7371, size: 32)
!7371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7365, size: 32)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7368, file: !127, line: 40, baseType: !7371, size: 32)
!7373 = !DIDerivedType(tag: DW_TAG_member, scope: !7365, file: !127, line: 42, baseType: !7374, size: 32, offset: 32)
!7374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7365, file: !127, line: 42, size: 32, elements: !7375)
!7375 = !{!7376, !7377}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7374, file: !127, line: 43, baseType: !7371, size: 32)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7374, file: !127, line: 44, baseType: !7371, size: 32)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7361, file: !158, line: 62, baseType: !7379, size: 64)
!7379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7380)
!7380 = !{!7381}
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7379, file: !170, line: 50, baseType: !7382, size: 64)
!7382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7383, size: 64, elements: !175)
!7383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7379, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7358, file: !158, line: 68, baseType: !7385, size: 32, offset: 64)
!7385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7386, size: 32)
!7386 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7387)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7388)
!7388 = !{!7389}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7387, file: !122, line: 232, baseType: !7390, size: 64)
!7390 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7365)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7358, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7358, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7393 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !158, line: 90, baseType: !7394, size: 16, offset: 112)
!7394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !158, line: 90, size: 16, elements: !7395)
!7395 = !{!7396, !7401}
!7396 = !DIDerivedType(tag: DW_TAG_member, scope: !7394, file: !158, line: 91, baseType: !7397, size: 16)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7394, file: !158, line: 91, size: 16, elements: !7398)
!7398 = !{!7399, !7400}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7397, file: !158, line: 96, baseType: !190, size: 8)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7397, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7394, file: !158, line: 100, baseType: !194, size: 16)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7358, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7358, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7358, file: !158, line: 131, baseType: !7405, size: 192, offset: 192)
!7405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7406)
!7406 = !{!7407, !7408, !7414}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7405, file: !122, line: 245, baseType: !7364, size: 64)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7405, file: !122, line: 246, baseType: !7409, size: 32, offset: 64)
!7409 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7410)
!7410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7411, size: 32)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{null, !7413}
!7413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7405, size: 32)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7405, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7355, file: !158, line: 250, baseType: !7416, size: 288, offset: 384)
!7416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7417)
!7417 = !{!7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426}
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7416, file: !211, line: 26, baseType: !110, size: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7416, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7416, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7416, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7416, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7416, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7416, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7416, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7416, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7355, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7355, file: !158, line: 256, baseType: !7386, size: 64, offset: 704)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7355, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7355, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7355, file: !158, line: 300, baseType: !7432, size: 96, offset: 1056)
!7432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7433)
!7433 = !{!7434, !7435, !7436}
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7432, file: !158, line: 153, baseType: !22, size: 32)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7432, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7432, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7355, file: !158, line: 325, baseType: !7438, size: 32, offset: 1152)
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 32)
!7439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7440)
!7440 = !{!7441, !7447, !7448}
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7439, file: !118, line: 5074, baseType: !7442, size: 96)
!7442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7443)
!7443 = !{!7444, !7445, !7446}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7442, file: !243, line: 57, baseType: !246, size: 32)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7442, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7442, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7439, file: !118, line: 5075, baseType: !7386, size: 64, offset: 96)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7439, file: !118, line: 5076, baseType: !7449, size: 32, offset: 160)
!7449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7450)
!7450 = !{!7451}
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7449, file: !253, line: 52, baseType: !22, size: 32)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7355, file: !158, line: 343, baseType: !7453, size: 64, offset: 1184)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7454)
!7454 = !{!7455, !7456}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7453, file: !211, line: 63, baseType: !110, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7453, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7457 = !{!7458}
!7458 = !DILocalVariable(name: "thread", arg: 1, scope: !7349, file: !7350, line: 27, type: !7353)
!7459 = !DILocation(line: 0, scope: !7349)
!7460 = !DILocation(line: 29, column: 6, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7349, file: !7350, line: 29, column: 6)
!7462 = !DILocation(line: 29, column: 15, scope: !7461)
!7463 = !DILocation(line: 29, column: 6, scope: !7349)
!7464 = !DILocation(line: 1031, column: 3, scope: !7465, inlinedAt: !7468)
!7465 = distinct !DISubprogram(name: "__get_IPSR", scope: !6418, file: !6418, line: 1027, type: !6505, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !7466)
!7466 = !{!7467}
!7467 = !DILocalVariable(name: "result", scope: !7465, file: !6418, line: 1029, type: !110)
!7468 = distinct !DILocation(line: 48, column: 10, scope: !7469, inlinedAt: !7473)
!7469 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7470, file: !7470, line: 46, type: !7471, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2825, retainedNodes: !2024)
!7470 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7471 = !DISubroutineType(types: !7472)
!7472 = !{!347}
!7473 = distinct !DILocation(line: 30, column: 7, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7475, file: !7350, line: 30, column: 7)
!7475 = distinct !DILexicalBlock(scope: !7461, file: !7350, line: 29, column: 26)
!7476 = !{i64 3496448}
!7477 = !DILocation(line: 0, scope: !7465, inlinedAt: !7468)
!7478 = !DILocation(line: 48, column: 9, scope: !7469, inlinedAt: !7473)
!7479 = !DILocation(line: 30, column: 7, scope: !7475)
!7480 = !DILocation(line: 42, column: 14, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7474, file: !7350, line: 30, column: 25)
!7482 = !DILocation(line: 48, column: 15, scope: !7481)
!7483 = !DILocation(line: 49, column: 3, scope: !7481)
!7484 = !DILocation(line: 52, column: 2, scope: !7349)
!7485 = !DILocation(line: 53, column: 1, scope: !7349)
!7486 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3087, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2024)
!7487 = !DILocation(line: 134, column: 2, scope: !7486)
!7488 = !DILocation(line: 156, column: 1, scope: !7486)
!7489 = !DILocation(line: 0, scope: !393)
!7490 = !DILocation(line: 289, column: 36, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7492 = !DILocation(line: 289, column: 42, scope: !7491)
!7493 = !DILocation(line: 300, column: 36, scope: !393)
!7494 = !DILocation(line: 301, column: 35, scope: !393)
!7495 = !DILocation(line: 302, column: 37, scope: !393)
!7496 = !DILocation(line: 311, column: 2, scope: !393)
!7497 = !DILocation(line: 316, column: 1, scope: !393)
!7498 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3087, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2024)
!7499 = !DILocation(line: 188, column: 12, scope: !7498)
!7500 = !DILocation(line: 271, column: 3, scope: !7501, inlinedAt: !7502)
!7501 = distinct !DISubprogram(name: "__DSB", scope: !6418, file: !6418, line: 269, type: !3087, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2024)
!7502 = distinct !DILocation(line: 192, column: 2, scope: !7498)
!7503 = !{i64 3668264}
!7504 = !DILocation(line: 260, column: 3, scope: !7505, inlinedAt: !7506)
!7505 = distinct !DISubprogram(name: "__ISB", scope: !6418, file: !6418, line: 258, type: !3087, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2024)
!7506 = distinct !DILocation(line: 193, column: 2, scope: !7498)
!7507 = !{i64 3667981}
!7508 = !DILocation(line: 194, column: 1, scope: !7498)
!7509 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3087, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2024)
!7510 = !DILocation(line: 282, column: 3, scope: !7511, inlinedAt: !7512)
!7511 = distinct !DISubprogram(name: "__DMB", scope: !6418, file: !6418, line: 280, type: !3087, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2024)
!7512 = distinct !DILocation(line: 202, column: 2, scope: !7509)
!7513 = !{i64 3668540}
!7514 = !DILocation(line: 205, column: 12, scope: !7509)
!7515 = !DILocation(line: 206, column: 1, scope: !7509)
!7516 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7517, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7530)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{null, !7519, !1806, !6695, !6695}
!7519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7520, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7521)
!7521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7522)
!7522 = !{!7523, !7524, !7525}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7521, file: !507, line: 53, baseType: !22, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7521, file: !507, line: 54, baseType: !234, size: 32, offset: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7521, file: !507, line: 55, baseType: !7526, size: 32, offset: 64)
!7526 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7527)
!7527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7528)
!7528 = !{!7529}
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7527, file: !513, line: 150, baseType: !110, size: 32)
!7530 = !{!7531, !7532, !7533, !7534}
!7531 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7516, file: !563, line: 276, type: !7519)
!7532 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7516, file: !563, line: 276, type: !1806)
!7533 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7516, file: !563, line: 277, type: !6695)
!7534 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7516, file: !563, line: 277, type: !6695)
!7535 = !DILocation(line: 0, scope: !7516)
!7536 = !DILocation(line: 279, column: 6, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7516, file: !563, line: 279, column: 6)
!7538 = !DILocation(line: 280, column: 57, scope: !7537)
!7539 = !DILocation(line: 279, column: 6, scope: !7516)
!7540 = !DILocation(line: 282, column: 3, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !563, line: 282, column: 3)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !563, line: 282, column: 3)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !563, line: 282, column: 3)
!7544 = distinct !DILexicalBlock(scope: !7537, file: !563, line: 280, column: 69)
!7545 = !DILocation(line: 285, column: 1, scope: !7516)
!7546 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7547, file: !7547, line: 220, type: !7548, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7550)
!7547 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7548 = !DISubroutineType(types: !7549)
!7549 = !{!109, !7519, !1806, !6695, !6695}
!7550 = !{!7551, !7552, !7553, !7554, !7555}
!7551 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7546, file: !7547, line: 221, type: !7519)
!7552 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7546, file: !7547, line: 221, type: !1806)
!7553 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7546, file: !7547, line: 222, type: !6695)
!7554 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7546, file: !7547, line: 223, type: !6695)
!7555 = !DILocalVariable(name: "mpu_reg_index", scope: !7546, file: !7547, line: 225, type: !109)
!7556 = !DILocation(line: 0, scope: !7546)
!7557 = !DILocation(line: 225, column: 22, scope: !7546)
!7558 = !DILocation(line: 233, column: 18, scope: !7546)
!7559 = !DILocation(line: 236, column: 23, scope: !7546)
!7560 = !DILocation(line: 236, column: 21, scope: !7546)
!7561 = !DILocation(line: 238, column: 2, scope: !7546)
!7562 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7563, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!109, !7519, !180, !180, !347}
!7565 = !{!7566, !7567, !7568, !7569, !7570, !7571}
!7566 = !DILocalVariable(name: "regions", arg: 1, scope: !7562, file: !563, line: 106, type: !7519)
!7567 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7562, file: !563, line: 106, type: !180)
!7568 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7562, file: !563, line: 106, type: !180)
!7569 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7562, file: !563, line: 107, type: !347)
!7570 = !DILocalVariable(name: "i", scope: !7562, file: !563, line: 109, type: !109)
!7571 = !DILocalVariable(name: "reg_index", scope: !7562, file: !563, line: 110, type: !109)
!7572 = !DILocation(line: 0, scope: !7562)
!7573 = !DILocation(line: 110, column: 18, scope: !7562)
!7574 = !DILocation(line: 112, column: 16, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !563, line: 112, column: 2)
!7576 = distinct !DILexicalBlock(scope: !7562, file: !563, line: 112, column: 2)
!7577 = !DILocation(line: 112, column: 2, scope: !7576)
!7578 = !DILocation(line: 113, column: 7, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !563, line: 113, column: 7)
!7580 = distinct !DILexicalBlock(scope: !7575, file: !563, line: 112, column: 36)
!7581 = !DILocation(line: 113, column: 18, scope: !7579)
!7582 = !DILocation(line: 113, column: 23, scope: !7579)
!7583 = !DILocation(line: 113, column: 7, scope: !7580)
!7584 = !DILocation(line: 118, column: 23, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !563, line: 118, column: 7)
!7586 = !DILocation(line: 119, column: 7, scope: !7585)
!7587 = !DILocation(line: 118, column: 7, scope: !7580)
!7588 = !DILocation(line: 120, column: 4, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !563, line: 120, column: 4)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !563, line: 120, column: 4)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !563, line: 120, column: 4)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !563, line: 120, column: 4)
!7593 = distinct !DILexicalBlock(scope: !7585, file: !563, line: 119, column: 45)
!7594 = !DILocation(line: 121, column: 4, scope: !7593)
!7595 = !DILocation(line: 124, column: 36, scope: !7580)
!7596 = !DILocation(line: 124, column: 15, scope: !7580)
!7597 = !DILocation(line: 126, column: 17, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7580, file: !563, line: 126, column: 7)
!7599 = !DILocation(line: 126, column: 7, scope: !7580)
!7600 = !DILocation(line: 131, column: 12, scope: !7580)
!7601 = !DILocation(line: 132, column: 2, scope: !7580)
!7602 = !DILocation(line: 112, column: 32, scope: !7575)
!7603 = distinct !{!7603, !7577, !7604}
!7604 = !DILocation(line: 132, column: 2, scope: !7576)
!7605 = !DILocation(line: 135, column: 1, scope: !7562)
!7606 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7547, file: !7547, line: 63, type: !7607, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!109, !7519}
!7609 = !{!7610, !7611}
!7610 = !DILocalVariable(name: "part", arg: 1, scope: !7606, file: !7547, line: 63, type: !7519)
!7611 = !DILocalVariable(name: "partition_is_valid", scope: !7606, file: !7547, line: 70, type: !109)
!7612 = !DILocation(line: 0, scope: !7606)
!7613 = !DILocation(line: 71, column: 11, scope: !7606)
!7614 = !DILocation(line: 71, column: 37, scope: !7606)
!7615 = !{i32 0, i32 33}
!7616 = !DILocation(line: 72, column: 3, scope: !7606)
!7617 = !DILocation(line: 71, column: 30, scope: !7606)
!7618 = !DILocation(line: 75, column: 11, scope: !7606)
!7619 = !DILocation(line: 75, column: 17, scope: !7606)
!7620 = !DILocation(line: 75, column: 38, scope: !7606)
!7621 = !DILocation(line: 77, column: 2, scope: !7606)
!7622 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7623, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7625)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!109, !1806, !7519}
!7625 = !{!7626, !7627, !7628}
!7626 = !DILocalVariable(name: "index", arg: 1, scope: !7622, file: !563, line: 79, type: !1806)
!7627 = !DILocalVariable(name: "new_region", arg: 2, scope: !7622, file: !563, line: 80, type: !7519)
!7628 = !DILocalVariable(name: "region_conf", scope: !7622, file: !563, line: 82, type: !552)
!7629 = !DILocation(line: 0, scope: !7622)
!7630 = !DILocation(line: 82, column: 2, scope: !7622)
!7631 = !DILocation(line: 82, column: 24, scope: !7622)
!7632 = !DILocation(line: 87, column: 33, scope: !7622)
!7633 = !DILocation(line: 87, column: 14, scope: !7622)
!7634 = !DILocation(line: 87, column: 19, scope: !7622)
!7635 = !DILocation(line: 91, column: 55, scope: !7622)
!7636 = !DILocation(line: 92, column: 16, scope: !7622)
!7637 = !DILocation(line: 92, column: 53, scope: !7622)
!7638 = !DILocation(line: 91, column: 2, scope: !7622)
!7639 = !DILocation(line: 95, column: 9, scope: !7622)
!7640 = !DILocation(line: 97, column: 1, scope: !7622)
!7641 = !DILocation(line: 95, column: 2, scope: !7622)
!7642 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7547, file: !7547, line: 113, type: !7643, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7648)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{null, !7645, !7646, !110, !110}
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7647, size: 32)
!7647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7526)
!7648 = !{!7649, !7650, !7651, !7652}
!7649 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7642, file: !7547, line: 114, type: !7645)
!7650 = !DILocalVariable(name: "attr", arg: 2, scope: !7642, file: !7547, line: 115, type: !7646)
!7651 = !DILocalVariable(name: "base", arg: 3, scope: !7642, file: !7547, line: 115, type: !110)
!7652 = !DILocalVariable(name: "size", arg: 4, scope: !7642, file: !7547, line: 115, type: !110)
!7653 = !DILocation(line: 0, scope: !7642)
!7654 = !DILocation(line: 127, column: 23, scope: !7642)
!7655 = !DILocation(line: 127, column: 35, scope: !7642)
!7656 = !DILocation(line: 127, column: 33, scope: !7642)
!7657 = !DILocation(line: 127, column: 10, scope: !7642)
!7658 = !DILocation(line: 127, column: 15, scope: !7642)
!7659 = !DILocation(line: 129, column: 1, scope: !7642)
!7660 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7661, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7663)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!109, !1806, !550}
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "index", arg: 1, scope: !7660, file: !563, line: 57, type: !1806)
!7665 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7660, file: !563, line: 58, type: !550)
!7666 = !DILocation(line: 0, scope: !7660)
!7667 = !DILocation(line: 61, column: 6, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7660, file: !563, line: 61, column: 6)
!7669 = !DILocation(line: 61, column: 12, scope: !7668)
!7670 = !DILocation(line: 61, column: 6, scope: !7660)
!7671 = !DILocation(line: 64, column: 3, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !563, line: 64, column: 3)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !563, line: 64, column: 3)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !563, line: 64, column: 3)
!7675 = distinct !DILexicalBlock(scope: !7676, file: !563, line: 64, column: 3)
!7676 = distinct !DILexicalBlock(scope: !7668, file: !563, line: 61, column: 40)
!7677 = !DILocation(line: 65, column: 3, scope: !7676)
!7678 = !DILocation(line: 71, column: 2, scope: !7660)
!7679 = !DILocation(line: 73, column: 2, scope: !7660)
!7680 = !DILocation(line: 74, column: 1, scope: !7660)
!7681 = distinct !DISubprogram(name: "region_init", scope: !7547, file: !7547, line: 29, type: !7682, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7684)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{null, !6695, !550}
!7684 = !{!7685, !7686}
!7685 = !DILocalVariable(name: "index", arg: 1, scope: !7681, file: !7547, line: 29, type: !6695)
!7686 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7681, file: !7547, line: 30, type: !550)
!7687 = !DILocation(line: 0, scope: !7681)
!7688 = !DILocation(line: 33, column: 2, scope: !7681)
!7689 = !DILocation(line: 47, column: 28, scope: !7681)
!7690 = !DILocation(line: 47, column: 33, scope: !7681)
!7691 = !DILocation(line: 48, column: 26, scope: !7681)
!7692 = !DILocation(line: 47, column: 12, scope: !7681)
!7693 = !DILocation(line: 49, column: 32, scope: !7681)
!7694 = !DILocation(line: 49, column: 37, scope: !7681)
!7695 = !DILocation(line: 49, column: 12, scope: !7681)
!7696 = !DILocation(line: 53, column: 1, scope: !7681)
!7697 = distinct !DISubprogram(name: "set_region_number", scope: !7698, file: !7698, line: 32, type: !6515, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7699)
!7698 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7699 = !{!7700}
!7700 = !DILocalVariable(name: "index", arg: 1, scope: !7697, file: !7698, line: 32, type: !110)
!7701 = !DILocation(line: 0, scope: !7697)
!7702 = !DILocation(line: 34, column: 11, scope: !7697)
!7703 = !DILocation(line: 35, column: 1, scope: !7697)
!7704 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7547, file: !7547, line: 88, type: !7705, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7707)
!7705 = !DISubroutineType(types: !7706)
!7706 = !{!110, !110}
!7707 = !{!7708}
!7708 = !DILocalVariable(name: "size", arg: 1, scope: !7704, file: !7547, line: 88, type: !110)
!7709 = !DILocation(line: 0, scope: !7704)
!7710 = !DILocation(line: 91, column: 11, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7704, file: !7547, line: 91, column: 6)
!7712 = !DILocation(line: 91, column: 6, scope: !7704)
!7713 = !DILocation(line: 100, column: 11, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7704, file: !7547, line: 100, column: 6)
!7715 = !DILocation(line: 100, column: 6, scope: !7704)
!7716 = !DILocation(line: 104, column: 35, scope: !7704)
!7717 = !DILocation(line: 104, column: 16, scope: !7704)
!7718 = !DILocation(line: 104, column: 50, scope: !7704)
!7719 = !DILocation(line: 104, column: 72, scope: !7704)
!7720 = !DILocation(line: 104, column: 2, scope: !7704)
!7721 = !DILocation(line: 106, column: 1, scope: !7704)
!7722 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7723, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7725)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{null, !7519, !180}
!7725 = !{!7726, !7727}
!7726 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7722, file: !563, line: 308, type: !7519)
!7727 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7722, file: !563, line: 308, type: !180)
!7728 = !DILocation(line: 0, scope: !7722)
!7729 = !DILocation(line: 310, column: 6, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7722, file: !563, line: 310, column: 6)
!7731 = !DILocation(line: 311, column: 3, scope: !7730)
!7732 = !DILocation(line: 310, column: 6, scope: !7722)
!7733 = !DILocation(line: 313, column: 3, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !563, line: 313, column: 3)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !563, line: 313, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !563, line: 313, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7730, file: !563, line: 311, column: 15)
!7738 = !DILocation(line: 316, column: 1, scope: !7722)
!7739 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7547, file: !7547, line: 249, type: !7740, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7742)
!7740 = !DISubroutineType(types: !7741)
!7741 = !{!109, !7519, !180}
!7742 = !{!7743, !7744, !7745, !7746}
!7743 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7739, file: !7547, line: 250, type: !7519)
!7744 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7739, file: !7547, line: 250, type: !180)
!7745 = !DILocalVariable(name: "mpu_reg_index", scope: !7739, file: !7547, line: 252, type: !109)
!7746 = !DILocalVariable(name: "i", scope: !7747, file: !7547, line: 264, type: !109)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7547, line: 264, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7547, line: 261, column: 32)
!7749 = distinct !DILexicalBlock(scope: !7739, file: !7547, line: 261, column: 6)
!7750 = !DILocation(line: 0, scope: !7739)
!7751 = !DILocation(line: 252, column: 22, scope: !7739)
!7752 = !DILocation(line: 258, column: 18, scope: !7739)
!7753 = !DILocation(line: 261, column: 20, scope: !7749)
!7754 = !DILocation(line: 261, column: 6, scope: !7739)
!7755 = !DILocation(line: 0, scope: !7747)
!7756 = !DILocation(line: 265, column: 4, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7547, line: 264, column: 59)
!7758 = distinct !DILexicalBlock(scope: !7747, file: !7547, line: 264, column: 3)
!7759 = !DILocation(line: 264, column: 55, scope: !7758)
!7760 = !DILocation(line: 264, column: 33, scope: !7758)
!7761 = !DILocation(line: 264, column: 3, scope: !7747)
!7762 = distinct !{!7762, !7761, !7763}
!7763 = !DILocation(line: 266, column: 3, scope: !7747)
!7764 = !DILocation(line: 269, column: 2, scope: !7739)
!7765 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7766, file: !7766, line: 218, type: !6515, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7767)
!7766 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7767 = !{!7768}
!7768 = !DILocalVariable(name: "rnr", arg: 1, scope: !7765, file: !7766, line: 218, type: !110)
!7769 = !DILocation(line: 0, scope: !7765)
!7770 = !DILocation(line: 220, column: 12, scope: !7765)
!7771 = !DILocation(line: 221, column: 13, scope: !7765)
!7772 = !DILocation(line: 222, column: 1, scope: !7765)
!7773 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7774, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7776)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!109}
!7776 = !{!7777}
!7777 = !DILocalVariable(name: "r_index", scope: !7773, file: !563, line: 328, type: !110)
!7778 = !DILocation(line: 330, column: 17, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7773, file: !563, line: 330, column: 6)
!7780 = !DILocation(line: 330, column: 29, scope: !7779)
!7781 = !DILocation(line: 330, column: 6, scope: !7773)
!7782 = !DILocation(line: 337, column: 3, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !563, line: 337, column: 3)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !563, line: 337, column: 3)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !563, line: 337, column: 3)
!7786 = distinct !DILexicalBlock(scope: !7779, file: !563, line: 330, column: 50)
!7787 = !DILocation(line: 347, column: 2, scope: !7773)
!7788 = !DILocation(line: 0, scope: !7773)
!7789 = !DILocation(line: 364, column: 29, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !563, line: 364, column: 2)
!7791 = distinct !DILexicalBlock(scope: !7773, file: !563, line: 364, column: 2)
!7792 = !DILocation(line: 364, column: 2, scope: !7791)
!7793 = !DILocation(line: 365, column: 25, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7790, file: !563, line: 364, column: 66)
!7795 = !DILocation(line: 365, column: 3, scope: !7794)
!7796 = !DILocation(line: 364, column: 62, scope: !7790)
!7797 = distinct !{!7797, !7792, !7798}
!7798 = !DILocation(line: 366, column: 2, scope: !7791)
!7799 = !DILocation(line: 369, column: 23, scope: !7773)
!7800 = !DILocation(line: 369, column: 21, scope: !7773)
!7801 = !DILocation(line: 372, column: 2, scope: !7773)
!7802 = !DILocation(line: 433, column: 2, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !563, line: 433, column: 2)
!7804 = distinct !DILexicalBlock(scope: !7773, file: !563, line: 433, column: 2)
!7805 = !DILocation(line: 433, column: 2, scope: !7804)
!7806 = !DILocation(line: 433, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7803, file: !563, line: 433, column: 2)
!7808 = !DILocation(line: 444, column: 1, scope: !7773)
!7809 = distinct !DISubprogram(name: "strcpy", scope: !7810, file: !7810, line: 20, type: !7811, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7815)
!7810 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7811 = !DISubroutineType(types: !7812)
!7812 = !{!285, !7813, !7814}
!7813 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7814 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7815 = !{!7816, !7817, !7818}
!7816 = !DILocalVariable(name: "d", arg: 1, scope: !7809, file: !7810, line: 20, type: !7813)
!7817 = !DILocalVariable(name: "s", arg: 2, scope: !7809, file: !7810, line: 20, type: !7814)
!7818 = !DILocalVariable(name: "dest", scope: !7809, file: !7810, line: 22, type: !285)
!7819 = !DILocation(line: 0, scope: !7809)
!7820 = !DILocation(line: 24, column: 9, scope: !7809)
!7821 = !DILocation(line: 24, column: 12, scope: !7809)
!7822 = !DILocation(line: 24, column: 2, scope: !7809)
!7823 = !DILocation(line: 25, column: 6, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7809, file: !7810, line: 24, column: 21)
!7825 = !DILocation(line: 26, column: 4, scope: !7824)
!7826 = !DILocation(line: 27, column: 4, scope: !7824)
!7827 = distinct !{!7827, !7822, !7828}
!7828 = !DILocation(line: 28, column: 2, scope: !7809)
!7829 = !DILocation(line: 30, column: 5, scope: !7809)
!7830 = !DILocation(line: 32, column: 2, scope: !7809)
!7831 = distinct !DISubprogram(name: "strncpy", scope: !7810, file: !7810, line: 42, type: !7832, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7834)
!7832 = !DISubroutineType(types: !7833)
!7833 = !{!285, !7813, !7814, !234}
!7834 = !{!7835, !7836, !7837, !7838}
!7835 = !DILocalVariable(name: "d", arg: 1, scope: !7831, file: !7810, line: 42, type: !7813)
!7836 = !DILocalVariable(name: "s", arg: 2, scope: !7831, file: !7810, line: 42, type: !7814)
!7837 = !DILocalVariable(name: "n", arg: 3, scope: !7831, file: !7810, line: 42, type: !234)
!7838 = !DILocalVariable(name: "dest", scope: !7831, file: !7810, line: 44, type: !285)
!7839 = !DILocation(line: 0, scope: !7831)
!7840 = !DILocation(line: 46, column: 12, scope: !7831)
!7841 = !DILocation(line: 46, column: 17, scope: !7831)
!7842 = !DILocation(line: 46, column: 20, scope: !7831)
!7843 = !DILocation(line: 46, column: 23, scope: !7831)
!7844 = !DILocation(line: 46, column: 2, scope: !7831)
!7845 = !DILocation(line: 47, column: 6, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7831, file: !7810, line: 46, column: 32)
!7847 = !DILocation(line: 48, column: 4, scope: !7846)
!7848 = !DILocation(line: 49, column: 4, scope: !7846)
!7849 = !DILocation(line: 50, column: 4, scope: !7846)
!7850 = distinct !{!7850, !7844, !7851}
!7851 = !DILocation(line: 51, column: 2, scope: !7831)
!7852 = !DILocation(line: 54, column: 6, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7831, file: !7810, line: 53, column: 16)
!7854 = !DILocation(line: 55, column: 4, scope: !7853)
!7855 = !DILocation(line: 56, column: 4, scope: !7853)
!7856 = !DILocation(line: 53, column: 11, scope: !7831)
!7857 = !DILocation(line: 53, column: 2, scope: !7831)
!7858 = distinct !{!7858, !7857, !7859}
!7859 = !DILocation(line: 57, column: 2, scope: !7831)
!7860 = !DILocation(line: 59, column: 2, scope: !7831)
!7861 = distinct !DISubprogram(name: "strchr", scope: !7810, file: !7810, line: 69, type: !7862, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7864)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!285, !279, !109}
!7864 = !{!7865, !7866, !7867}
!7865 = !DILocalVariable(name: "s", arg: 1, scope: !7861, file: !7810, line: 69, type: !279)
!7866 = !DILocalVariable(name: "c", arg: 2, scope: !7861, file: !7810, line: 69, type: !109)
!7867 = !DILocalVariable(name: "tmp", scope: !7861, file: !7810, line: 71, type: !150)
!7868 = !DILocation(line: 0, scope: !7861)
!7869 = !DILocation(line: 73, column: 2, scope: !7861)
!7870 = !DILocation(line: 73, column: 10, scope: !7861)
!7871 = !DILocation(line: 73, column: 13, scope: !7861)
!7872 = !DILocation(line: 73, column: 21, scope: !7861)
!7873 = !DILocation(line: 74, column: 4, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7861, file: !7810, line: 73, column: 38)
!7875 = distinct !{!7875, !7869, !7876}
!7876 = !DILocation(line: 75, column: 2, scope: !7861)
!7877 = !DILocation(line: 77, column: 9, scope: !7861)
!7878 = !DILocation(line: 77, column: 2, scope: !7861)
!7879 = distinct !DISubprogram(name: "strrchr", scope: !7810, file: !7810, line: 87, type: !7862, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7880)
!7880 = !{!7881, !7882, !7883}
!7881 = !DILocalVariable(name: "s", arg: 1, scope: !7879, file: !7810, line: 87, type: !279)
!7882 = !DILocalVariable(name: "c", arg: 2, scope: !7879, file: !7810, line: 87, type: !109)
!7883 = !DILocalVariable(name: "match", scope: !7879, file: !7810, line: 89, type: !285)
!7884 = !DILocation(line: 0, scope: !7879)
!7885 = !DILocation(line: 91, column: 2, scope: !7879)
!7886 = !DILocation(line: 92, column: 7, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !7810, line: 92, column: 7)
!7888 = distinct !DILexicalBlock(scope: !7879, file: !7810, line: 91, column: 5)
!7889 = !DILocation(line: 92, column: 10, scope: !7887)
!7890 = !DILocation(line: 92, column: 7, scope: !7888)
!7891 = !DILocation(line: 95, column: 13, scope: !7879)
!7892 = !DILocation(line: 95, column: 2, scope: !7888)
!7893 = distinct !{!7893, !7885, !7894}
!7894 = !DILocation(line: 95, column: 15, scope: !7879)
!7895 = !DILocation(line: 97, column: 2, scope: !7879)
!7896 = distinct !DISubprogram(name: "strlen", scope: !7810, file: !7810, line: 107, type: !7897, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7899)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!234, !279}
!7899 = !{!7900, !7901}
!7900 = !DILocalVariable(name: "s", arg: 1, scope: !7896, file: !7810, line: 107, type: !279)
!7901 = !DILocalVariable(name: "n", scope: !7896, file: !7810, line: 109, type: !234)
!7902 = !DILocation(line: 0, scope: !7896)
!7903 = !DILocation(line: 111, column: 9, scope: !7896)
!7904 = !DILocation(line: 111, column: 12, scope: !7896)
!7905 = !DILocation(line: 111, column: 2, scope: !7896)
!7906 = !DILocation(line: 112, column: 4, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7896, file: !7810, line: 111, column: 21)
!7908 = !DILocation(line: 113, column: 4, scope: !7907)
!7909 = distinct !{!7909, !7905, !7910}
!7910 = !DILocation(line: 114, column: 2, scope: !7896)
!7911 = !DILocation(line: 116, column: 2, scope: !7896)
!7912 = distinct !DISubprogram(name: "strnlen", scope: !7810, file: !7810, line: 126, type: !7913, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7915)
!7913 = !DISubroutineType(types: !7914)
!7914 = !{!234, !279, !234}
!7915 = !{!7916, !7917, !7918}
!7916 = !DILocalVariable(name: "s", arg: 1, scope: !7912, file: !7810, line: 126, type: !279)
!7917 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7912, file: !7810, line: 126, type: !234)
!7918 = !DILocalVariable(name: "n", scope: !7912, file: !7810, line: 128, type: !234)
!7919 = !DILocation(line: 0, scope: !7912)
!7920 = !DILocation(line: 130, column: 9, scope: !7912)
!7921 = !DILocation(line: 130, column: 12, scope: !7912)
!7922 = !DILocation(line: 130, column: 20, scope: !7912)
!7923 = !DILocation(line: 130, column: 2, scope: !7912)
!7924 = !DILocation(line: 131, column: 4, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7912, file: !7810, line: 130, column: 35)
!7926 = !DILocation(line: 132, column: 4, scope: !7925)
!7927 = distinct !{!7927, !7923, !7928}
!7928 = !DILocation(line: 133, column: 2, scope: !7912)
!7929 = !DILocation(line: 135, column: 2, scope: !7912)
!7930 = distinct !DISubprogram(name: "strcmp", scope: !7810, file: !7810, line: 145, type: !7931, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7933)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!109, !279, !279}
!7933 = !{!7934, !7935}
!7934 = !DILocalVariable(name: "s1", arg: 1, scope: !7930, file: !7810, line: 145, type: !279)
!7935 = !DILocalVariable(name: "s2", arg: 2, scope: !7930, file: !7810, line: 145, type: !279)
!7936 = !DILocation(line: 0, scope: !7930)
!7937 = !DILocation(line: 147, column: 10, scope: !7930)
!7938 = !DILocation(line: 147, column: 17, scope: !7930)
!7939 = !DILocation(line: 147, column: 14, scope: !7930)
!7940 = !DILocation(line: 147, column: 22, scope: !7930)
!7941 = !DILocation(line: 148, column: 5, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7930, file: !7810, line: 147, column: 40)
!7943 = !DILocation(line: 149, column: 5, scope: !7942)
!7944 = distinct !{!7944, !7945, !7946}
!7945 = !DILocation(line: 147, column: 2, scope: !7930)
!7946 = !DILocation(line: 150, column: 2, scope: !7930)
!7947 = !DILocation(line: 152, column: 9, scope: !7930)
!7948 = !DILocation(line: 152, column: 15, scope: !7930)
!7949 = !DILocation(line: 152, column: 13, scope: !7930)
!7950 = !DILocation(line: 152, column: 2, scope: !7930)
!7951 = distinct !DISubprogram(name: "strncmp", scope: !7810, file: !7810, line: 162, type: !7952, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!109, !279, !279, !234}
!7954 = !{!7955, !7956, !7957}
!7955 = !DILocalVariable(name: "s1", arg: 1, scope: !7951, file: !7810, line: 162, type: !279)
!7956 = !DILocalVariable(name: "s2", arg: 2, scope: !7951, file: !7810, line: 162, type: !279)
!7957 = !DILocalVariable(name: "n", arg: 3, scope: !7951, file: !7810, line: 162, type: !234)
!7958 = !DILocation(line: 0, scope: !7951)
!7959 = !DILocation(line: 164, column: 17, scope: !7951)
!7960 = !DILocation(line: 164, column: 21, scope: !7951)
!7961 = !DILocation(line: 164, column: 28, scope: !7951)
!7962 = !DILocation(line: 164, column: 25, scope: !7951)
!7963 = !DILocation(line: 164, column: 33, scope: !7951)
!7964 = !DILocation(line: 165, column: 5, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7951, file: !7810, line: 164, column: 51)
!7966 = !DILocation(line: 166, column: 5, scope: !7965)
!7967 = !DILocation(line: 167, column: 4, scope: !7965)
!7968 = distinct !{!7968, !7969, !7970}
!7969 = !DILocation(line: 164, column: 2, scope: !7951)
!7970 = !DILocation(line: 168, column: 2, scope: !7951)
!7971 = !DILocation(line: 170, column: 25, scope: !7951)
!7972 = !DILocation(line: 170, column: 31, scope: !7951)
!7973 = !DILocation(line: 170, column: 29, scope: !7951)
!7974 = !DILocation(line: 170, column: 9, scope: !7951)
!7975 = !DILocation(line: 170, column: 2, scope: !7951)
!7976 = distinct !DISubprogram(name: "strtok_r", scope: !7810, file: !7810, line: 180, type: !7977, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !7979)
!7977 = !DISubroutineType(types: !7978)
!7978 = !{!285, !285, !279, !284}
!7979 = !{!7980, !7981, !7982, !7983, !7984}
!7980 = !DILocalVariable(name: "str", arg: 1, scope: !7976, file: !7810, line: 180, type: !285)
!7981 = !DILocalVariable(name: "sep", arg: 2, scope: !7976, file: !7810, line: 180, type: !279)
!7982 = !DILocalVariable(name: "state", arg: 3, scope: !7976, file: !7810, line: 180, type: !284)
!7983 = !DILocalVariable(name: "start", scope: !7976, file: !7810, line: 182, type: !285)
!7984 = !DILocalVariable(name: "end", scope: !7976, file: !7810, line: 182, type: !285)
!7985 = !DILocation(line: 0, scope: !7976)
!7986 = !DILocation(line: 184, column: 10, scope: !7976)
!7987 = !DILocation(line: 184, column: 22, scope: !7976)
!7988 = !DILocation(line: 187, column: 9, scope: !7976)
!7989 = !DILocation(line: 187, column: 16, scope: !7976)
!7990 = !DILocation(line: 187, column: 19, scope: !7976)
!7991 = !DILocation(line: 187, column: 2, scope: !7976)
!7992 = !DILocation(line: 188, column: 8, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7976, file: !7810, line: 187, column: 40)
!7994 = distinct !{!7994, !7991, !7995}
!7995 = !DILocation(line: 189, column: 2, scope: !7976)
!7996 = !DILocation(line: 198, column: 9, scope: !7976)
!7997 = !DILocation(line: 198, column: 18, scope: !7976)
!7998 = !DILocation(line: 198, column: 17, scope: !7976)
!7999 = !DILocation(line: 198, column: 2, scope: !7976)
!8000 = !DILocation(line: 199, column: 6, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7976, file: !7810, line: 198, column: 37)
!8002 = !DILocation(line: 198, column: 14, scope: !7976)
!8003 = distinct !{!8003, !7999, !8004}
!8004 = !DILocation(line: 200, column: 2, scope: !7976)
!8005 = !DILocation(line: 203, column: 8, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !7810, line: 202, column: 20)
!8007 = distinct !DILexicalBlock(scope: !7976, file: !7810, line: 202, column: 6)
!8008 = !DILocation(line: 204, column: 16, scope: !8006)
!8009 = !DILocation(line: 205, column: 2, scope: !8006)
!8010 = !DILocation(line: 210, column: 1, scope: !7976)
!8011 = distinct !DISubprogram(name: "strcat", scope: !7810, file: !7810, line: 212, type: !7811, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8012)
!8012 = !{!8013, !8014}
!8013 = !DILocalVariable(name: "dest", arg: 1, scope: !8011, file: !7810, line: 212, type: !7813)
!8014 = !DILocalVariable(name: "src", arg: 2, scope: !8011, file: !7810, line: 212, type: !7814)
!8015 = !DILocation(line: 0, scope: !8011)
!8016 = !DILocation(line: 214, column: 16, scope: !8011)
!8017 = !DILocation(line: 214, column: 14, scope: !8011)
!8018 = !DILocation(line: 214, column: 2, scope: !8011)
!8019 = !DILocation(line: 215, column: 2, scope: !8011)
!8020 = distinct !DISubprogram(name: "strncat", scope: !7810, file: !7810, line: 218, type: !7832, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8021)
!8021 = !{!8022, !8023, !8024, !8025, !8026}
!8022 = !DILocalVariable(name: "dest", arg: 1, scope: !8020, file: !7810, line: 218, type: !7813)
!8023 = !DILocalVariable(name: "src", arg: 2, scope: !8020, file: !7810, line: 218, type: !7814)
!8024 = !DILocalVariable(name: "n", arg: 3, scope: !8020, file: !7810, line: 219, type: !234)
!8025 = !DILocalVariable(name: "orig_dest", scope: !8020, file: !7810, line: 221, type: !285)
!8026 = !DILocalVariable(name: "len", scope: !8020, file: !7810, line: 222, type: !234)
!8027 = !DILocation(line: 0, scope: !8020)
!8028 = !DILocation(line: 222, column: 15, scope: !8020)
!8029 = !DILocation(line: 224, column: 7, scope: !8020)
!8030 = !DILocation(line: 225, column: 14, scope: !8020)
!8031 = !DILocation(line: 225, column: 19, scope: !8020)
!8032 = !DILocation(line: 225, column: 11, scope: !8020)
!8033 = !DILocation(line: 225, column: 23, scope: !8020)
!8034 = !DILocation(line: 225, column: 28, scope: !8020)
!8035 = !DILocation(line: 225, column: 2, scope: !8020)
!8036 = !DILocation(line: 226, column: 17, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8020, file: !7810, line: 225, column: 38)
!8038 = !DILocation(line: 226, column: 8, scope: !8037)
!8039 = !DILocation(line: 226, column: 11, scope: !8037)
!8040 = distinct !{!8040, !8035, !8041}
!8041 = !DILocation(line: 227, column: 2, scope: !8020)
!8042 = !DILocation(line: 228, column: 8, scope: !8020)
!8043 = !DILocation(line: 230, column: 2, scope: !8020)
!8044 = distinct !DISubprogram(name: "memcmp", scope: !7810, file: !7810, line: 239, type: !8045, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8047)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{!109, !13, !13, !234}
!8047 = !{!8048, !8049, !8050, !8051, !8052}
!8048 = !DILocalVariable(name: "m1", arg: 1, scope: !8044, file: !7810, line: 239, type: !13)
!8049 = !DILocalVariable(name: "m2", arg: 2, scope: !8044, file: !7810, line: 239, type: !13)
!8050 = !DILocalVariable(name: "n", arg: 3, scope: !8044, file: !7810, line: 239, type: !234)
!8051 = !DILocalVariable(name: "c1", scope: !8044, file: !7810, line: 241, type: !279)
!8052 = !DILocalVariable(name: "c2", scope: !8044, file: !7810, line: 242, type: !279)
!8053 = !DILocation(line: 0, scope: !8044)
!8054 = !DILocation(line: 244, column: 7, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8044, file: !7810, line: 244, column: 6)
!8056 = !DILocation(line: 244, column: 6, scope: !8044)
!8057 = !DILocation(line: 248, column: 10, scope: !8044)
!8058 = !DILocation(line: 248, column: 14, scope: !8044)
!8059 = !DILocation(line: 248, column: 19, scope: !8044)
!8060 = !DILocation(line: 248, column: 2, scope: !8044)
!8061 = !DILocation(line: 248, column: 23, scope: !8044)
!8062 = !DILocation(line: 248, column: 30, scope: !8044)
!8063 = !DILocation(line: 248, column: 27, scope: !8044)
!8064 = !DILocation(line: 249, column: 5, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8044, file: !7810, line: 248, column: 36)
!8066 = !DILocation(line: 250, column: 5, scope: !8065)
!8067 = distinct !{!8067, !8060, !8068}
!8068 = !DILocation(line: 251, column: 2, scope: !8044)
!8069 = !DILocation(line: 253, column: 9, scope: !8044)
!8070 = !DILocation(line: 253, column: 15, scope: !8044)
!8071 = !DILocation(line: 253, column: 13, scope: !8044)
!8072 = !DILocation(line: 253, column: 2, scope: !8044)
!8073 = !DILocation(line: 254, column: 1, scope: !8044)
!8074 = distinct !DISubprogram(name: "memmove", scope: !7810, file: !7810, line: 263, type: !8075, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!107, !107, !13, !234}
!8077 = !{!8078, !8079, !8080, !8081, !8082}
!8078 = !DILocalVariable(name: "d", arg: 1, scope: !8074, file: !7810, line: 263, type: !107)
!8079 = !DILocalVariable(name: "s", arg: 2, scope: !8074, file: !7810, line: 263, type: !13)
!8080 = !DILocalVariable(name: "n", arg: 3, scope: !8074, file: !7810, line: 263, type: !234)
!8081 = !DILocalVariable(name: "dest", scope: !8074, file: !7810, line: 265, type: !285)
!8082 = !DILocalVariable(name: "src", scope: !8074, file: !7810, line: 266, type: !279)
!8083 = !DILocation(line: 0, scope: !8074)
!8084 = !DILocation(line: 268, column: 21, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8074, file: !7810, line: 268, column: 6)
!8086 = !DILocation(line: 268, column: 28, scope: !8085)
!8087 = !DILocation(line: 268, column: 6, scope: !8074)
!8088 = !DILocation(line: 280, column: 12, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8085, file: !7810, line: 278, column: 9)
!8090 = !DILocation(line: 280, column: 3, scope: !8089)
!8091 = !DILocation(line: 275, column: 5, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !7810, line: 274, column: 17)
!8093 = distinct !DILexicalBlock(scope: !8085, file: !7810, line: 268, column: 33)
!8094 = !DILocation(line: 276, column: 14, scope: !8092)
!8095 = !DILocation(line: 276, column: 4, scope: !8092)
!8096 = !DILocation(line: 276, column: 12, scope: !8092)
!8097 = !DILocation(line: 274, column: 12, scope: !8093)
!8098 = !DILocation(line: 274, column: 3, scope: !8093)
!8099 = distinct !{!8099, !8098, !8100}
!8100 = !DILocation(line: 277, column: 3, scope: !8093)
!8101 = !DILocation(line: 281, column: 12, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8089, file: !7810, line: 280, column: 17)
!8103 = !DILocation(line: 281, column: 10, scope: !8102)
!8104 = !DILocation(line: 282, column: 8, scope: !8102)
!8105 = !DILocation(line: 283, column: 7, scope: !8102)
!8106 = !DILocation(line: 284, column: 5, scope: !8102)
!8107 = distinct !{!8107, !8090, !8108}
!8108 = !DILocation(line: 285, column: 3, scope: !8089)
!8109 = !DILocation(line: 288, column: 2, scope: !8074)
!8110 = distinct !DISubprogram(name: "memcpy", scope: !7810, file: !7810, line: 298, type: !8111, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8115)
!8111 = !DISubroutineType(types: !8112)
!8112 = !{!107, !8113, !8114, !234}
!8113 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8114 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8115 = !{!8116, !8117, !8118, !8119, !8120}
!8116 = !DILocalVariable(name: "d", arg: 1, scope: !8110, file: !7810, line: 298, type: !8113)
!8117 = !DILocalVariable(name: "s", arg: 2, scope: !8110, file: !7810, line: 298, type: !8114)
!8118 = !DILocalVariable(name: "n", arg: 3, scope: !8110, file: !7810, line: 298, type: !234)
!8119 = !DILocalVariable(name: "d_byte", scope: !8110, file: !7810, line: 302, type: !987)
!8120 = !DILocalVariable(name: "s_byte", scope: !8110, file: !7810, line: 303, type: !2856)
!8121 = !DILocation(line: 0, scope: !8110)
!8122 = !DILocation(line: 337, column: 11, scope: !8110)
!8123 = !DILocation(line: 337, column: 2, scope: !8110)
!8124 = !DILocation(line: 338, column: 25, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8110, file: !7810, line: 337, column: 16)
!8126 = !DILocation(line: 338, column: 17, scope: !8125)
!8127 = !DILocation(line: 338, column: 11, scope: !8125)
!8128 = !DILocation(line: 338, column: 15, scope: !8125)
!8129 = !DILocation(line: 339, column: 4, scope: !8125)
!8130 = distinct !{!8130, !8123, !8131}
!8131 = !DILocation(line: 340, column: 2, scope: !8110)
!8132 = !DILocation(line: 342, column: 2, scope: !8110)
!8133 = distinct !DISubprogram(name: "memset", scope: !7810, file: !7810, line: 352, type: !8134, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8136)
!8134 = !DISubroutineType(types: !8135)
!8135 = !{!107, !107, !109, !234}
!8136 = !{!8137, !8138, !8139, !8140, !8141}
!8137 = !DILocalVariable(name: "buf", arg: 1, scope: !8133, file: !7810, line: 352, type: !107)
!8138 = !DILocalVariable(name: "c", arg: 2, scope: !8133, file: !7810, line: 352, type: !109)
!8139 = !DILocalVariable(name: "n", arg: 3, scope: !8133, file: !7810, line: 352, type: !234)
!8140 = !DILocalVariable(name: "d_byte", scope: !8133, file: !7810, line: 356, type: !987)
!8141 = !DILocalVariable(name: "c_byte", scope: !8133, file: !7810, line: 357, type: !181)
!8142 = !DILocation(line: 0, scope: !8133)
!8143 = !DILocation(line: 357, column: 25, scope: !8133)
!8144 = !DILocation(line: 389, column: 11, scope: !8133)
!8145 = !DILocation(line: 389, column: 2, scope: !8133)
!8146 = !DILocation(line: 390, column: 11, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8133, file: !7810, line: 389, column: 16)
!8148 = !DILocation(line: 390, column: 15, scope: !8147)
!8149 = !DILocation(line: 391, column: 4, scope: !8147)
!8150 = distinct !{!8150, !8145, !8151}
!8151 = !DILocation(line: 392, column: 2, scope: !8133)
!8152 = !DILocation(line: 394, column: 2, scope: !8133)
!8153 = distinct !DISubprogram(name: "memchr", scope: !7810, file: !7810, line: 404, type: !8154, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2853, retainedNodes: !8156)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!107, !13, !109, !234}
!8156 = !{!8157, !8158, !8159, !8160}
!8157 = !DILocalVariable(name: "s", arg: 1, scope: !8153, file: !7810, line: 404, type: !13)
!8158 = !DILocalVariable(name: "c", arg: 2, scope: !8153, file: !7810, line: 404, type: !109)
!8159 = !DILocalVariable(name: "n", arg: 3, scope: !8153, file: !7810, line: 404, type: !234)
!8160 = !DILocalVariable(name: "p", scope: !8161, file: !7810, line: 407, type: !2856)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !7810, line: 406, column: 14)
!8162 = distinct !DILexicalBlock(scope: !8153, file: !7810, line: 406, column: 6)
!8163 = !DILocation(line: 0, scope: !8153)
!8164 = !DILocation(line: 406, column: 8, scope: !8162)
!8165 = !DILocation(line: 406, column: 6, scope: !8153)
!8166 = !DILocation(line: 409, column: 3, scope: !8161)
!8167 = !DILocation(line: 0, scope: !8161)
!8168 = !DILocation(line: 410, column: 8, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !7810, line: 410, column: 8)
!8170 = distinct !DILexicalBlock(scope: !8161, file: !7810, line: 409, column: 6)
!8171 = !DILocation(line: 410, column: 13, scope: !8169)
!8172 = !DILocation(line: 410, column: 8, scope: !8170)
!8173 = distinct !{!8173, !8166, !8174}
!8174 = !DILocation(line: 414, column: 20, scope: !8161)
!8175 = !DILocation(line: 417, column: 2, scope: !8153)
!8176 = !DILocation(line: 418, column: 1, scope: !8153)
!8177 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4305, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8178)
!8178 = !{!8179}
!8179 = !DILocalVariable(name: "hook", arg: 1, scope: !8177, file: !573, line: 23, type: !302)
!8180 = !DILocation(line: 0, scope: !8177)
!8181 = !DILocation(line: 25, column: 15, scope: !8177)
!8182 = !DILocation(line: 26, column: 1, scope: !8177)
!8183 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8184)
!8184 = !{!8185}
!8185 = !DILocalVariable(name: "c", arg: 1, scope: !8183, file: !573, line: 14, type: !109)
!8186 = !DILocation(line: 0, scope: !8183)
!8187 = !DILocation(line: 18, column: 2, scope: !8183)
!8188 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8189, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8191)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!109, !109, !569}
!8191 = !{!8192, !8193}
!8192 = !DILocalVariable(name: "c", arg: 1, scope: !8188, file: !573, line: 28, type: !109)
!8193 = !DILocalVariable(name: "stream", arg: 2, scope: !8188, file: !573, line: 28, type: !569)
!8194 = !DILocation(line: 0, scope: !8188)
!8195 = !DILocation(line: 30, column: 27, scope: !8188)
!8196 = !DILocation(line: 30, column: 50, scope: !8188)
!8197 = !DILocation(line: 30, column: 9, scope: !8188)
!8198 = !DILocation(line: 30, column: 2, scope: !8188)
!8199 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8189, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8200)
!8200 = !{!8201, !8202}
!8201 = !DILocalVariable(name: "c", arg: 1, scope: !8199, file: !573, line: 41, type: !109)
!8202 = !DILocalVariable(name: "stream", arg: 2, scope: !8199, file: !573, line: 41, type: !569)
!8203 = !DILocation(line: 0, scope: !8199)
!8204 = !DILocation(line: 43, column: 9, scope: !8199)
!8205 = !DILocation(line: 43, column: 2, scope: !8199)
!8206 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8207, file: !8207, line: 72, type: !8189, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8208)
!8207 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!8208 = !{!8209, !8210}
!8209 = !DILocalVariable(name: "c", arg: 1, scope: !8206, file: !8207, line: 72, type: !109)
!8210 = !DILocalVariable(name: "stream", arg: 2, scope: !8206, file: !8207, line: 72, type: !569)
!8211 = !DILocation(line: 0, scope: !8206)
!8212 = !DILocation(line: 81, column: 2, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8206, file: !8207, line: 81, column: 2)
!8214 = !{i64 2154811937}
!8215 = !DILocation(line: 82, column: 9, scope: !8206)
!8216 = !DILocation(line: 82, column: 2, scope: !8206)
!8217 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8218, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8221)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{!109, !7814, !8220}
!8220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8221 = !{!8222, !8223, !8224, !8225}
!8222 = !DILocalVariable(name: "s", arg: 1, scope: !8217, file: !573, line: 46, type: !7814)
!8223 = !DILocalVariable(name: "stream", arg: 2, scope: !8217, file: !573, line: 46, type: !8220)
!8224 = !DILocalVariable(name: "len", scope: !8217, file: !573, line: 48, type: !109)
!8225 = !DILocalVariable(name: "ret", scope: !8217, file: !573, line: 49, type: !109)
!8226 = !DILocation(line: 0, scope: !8217)
!8227 = !DILocation(line: 48, column: 12, scope: !8217)
!8228 = !DILocation(line: 51, column: 8, scope: !8217)
!8229 = !DILocation(line: 53, column: 13, scope: !8217)
!8230 = !DILocation(line: 53, column: 9, scope: !8217)
!8231 = !DILocation(line: 53, column: 2, scope: !8217)
!8232 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8233, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!234, !8114, !234, !234, !8220}
!8235 = !{!8236, !8237, !8238, !8239}
!8236 = !DILocalVariable(name: "ptr", arg: 1, scope: !8232, file: !573, line: 99, type: !8114)
!8237 = !DILocalVariable(name: "size", arg: 2, scope: !8232, file: !573, line: 99, type: !234)
!8238 = !DILocalVariable(name: "nitems", arg: 3, scope: !8232, file: !573, line: 99, type: !234)
!8239 = !DILocalVariable(name: "stream", arg: 4, scope: !8232, file: !573, line: 100, type: !8220)
!8240 = !DILocation(line: 0, scope: !8232)
!8241 = !DILocation(line: 102, column: 9, scope: !8232)
!8242 = !DILocation(line: 102, column: 2, scope: !8232)
!8243 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8207, file: !8207, line: 96, type: !8233, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8244)
!8244 = !{!8245, !8246, !8247, !8248}
!8245 = !DILocalVariable(name: "ptr", arg: 1, scope: !8243, file: !8207, line: 96, type: !8114)
!8246 = !DILocalVariable(name: "size", arg: 2, scope: !8243, file: !8207, line: 96, type: !234)
!8247 = !DILocalVariable(name: "nitems", arg: 3, scope: !8243, file: !8207, line: 96, type: !234)
!8248 = !DILocalVariable(name: "stream", arg: 4, scope: !8243, file: !8207, line: 96, type: !8220)
!8249 = !DILocation(line: 0, scope: !8243)
!8250 = !DILocation(line: 107, column: 2, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8243, file: !8207, line: 107, column: 2)
!8252 = !{i64 2154812041}
!8253 = !DILocation(line: 108, column: 9, scope: !8243)
!8254 = !DILocation(line: 108, column: 2, scope: !8243)
!8255 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8233, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8256)
!8256 = !{!8257, !8258, !8259, !8260, !8261, !8262, !8263, !8264}
!8257 = !DILocalVariable(name: "ptr", arg: 1, scope: !8255, file: !573, line: 56, type: !8114)
!8258 = !DILocalVariable(name: "size", arg: 2, scope: !8255, file: !573, line: 56, type: !234)
!8259 = !DILocalVariable(name: "nitems", arg: 3, scope: !8255, file: !573, line: 57, type: !234)
!8260 = !DILocalVariable(name: "stream", arg: 4, scope: !8255, file: !573, line: 57, type: !8220)
!8261 = !DILocalVariable(name: "i", scope: !8255, file: !573, line: 59, type: !234)
!8262 = !DILocalVariable(name: "j", scope: !8255, file: !573, line: 60, type: !234)
!8263 = !DILocalVariable(name: "p", scope: !8255, file: !573, line: 61, type: !2856)
!8264 = !DILabel(scope: !8255, name: "done", file: !573, line: 82)
!8265 = !DILocation(line: 0, scope: !8255)
!8266 = !DILocation(line: 63, column: 14, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8255, file: !573, line: 63, column: 6)
!8268 = !DILocation(line: 63, column: 24, scope: !8267)
!8269 = !DILocation(line: 72, column: 3, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8255, file: !573, line: 70, column: 5)
!8271 = !DILocation(line: 0, scope: !8270)
!8272 = !DILocation(line: 73, column: 8, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !573, line: 73, column: 8)
!8274 = distinct !DILexicalBlock(scope: !8270, file: !573, line: 72, column: 6)
!8275 = !DILocation(line: 73, column: 29, scope: !8273)
!8276 = !DILocation(line: 73, column: 27, scope: !8273)
!8277 = !DILocation(line: 73, column: 21, scope: !8273)
!8278 = !DILocation(line: 73, column: 33, scope: !8273)
!8279 = !DILocation(line: 73, column: 8, scope: !8274)
!8280 = !DILocation(line: 76, column: 5, scope: !8274)
!8281 = !DILocation(line: 77, column: 14, scope: !8270)
!8282 = !DILocation(line: 77, column: 3, scope: !8274)
!8283 = distinct !{!8283, !8269, !8284}
!8284 = !DILocation(line: 77, column: 17, scope: !8270)
!8285 = !DILocation(line: 79, column: 4, scope: !8270)
!8286 = !DILocation(line: 80, column: 13, scope: !8255)
!8287 = !DILocation(line: 80, column: 2, scope: !8270)
!8288 = distinct !{!8288, !8289, !8290}
!8289 = !DILocation(line: 70, column: 2, scope: !8255)
!8290 = !DILocation(line: 80, column: 16, scope: !8255)
!8291 = !DILocation(line: 82, column: 1, scope: !8255)
!8292 = !DILocation(line: 83, column: 17, scope: !8255)
!8293 = !DILocation(line: 83, column: 2, scope: !8255)
!8294 = !DILocation(line: 84, column: 1, scope: !8255)
!8295 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8296, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8298)
!8296 = !DISubroutineType(types: !8297)
!8297 = !{!109, !279}
!8298 = !{!8299}
!8299 = !DILocalVariable(name: "s", arg: 1, scope: !8295, file: !573, line: 106, type: !279)
!8300 = !DILocation(line: 0, scope: !8295)
!8301 = !DILocation(line: 108, column: 6, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8295, file: !573, line: 108, column: 6)
!8303 = !DILocation(line: 108, column: 23, scope: !8302)
!8304 = !DILocation(line: 108, column: 6, scope: !8295)
!8305 = !DILocation(line: 112, column: 9, scope: !8295)
!8306 = !DILocation(line: 112, column: 29, scope: !8295)
!8307 = !DILocation(line: 112, column: 2, scope: !8295)
!8308 = !DILocation(line: 113, column: 1, scope: !8295)
!8309 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !705, file: !705, line: 368, type: !758, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8310)
!8310 = !{!8311}
!8311 = !DILocalVariable(name: "dev", arg: 1, scope: !8309, file: !705, line: 368, type: !734)
!8312 = !DILocation(line: 0, scope: !8309)
!8313 = !DILocation(line: 370, column: 2, scope: !8309)
!8314 = !DILocation(line: 371, column: 1, scope: !8309)
!8315 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !705, file: !705, line: 243, type: !8316, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8318)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{null, !109, !109, !734}
!8318 = !{!8319, !8320, !8321, !8322, !8324}
!8319 = !DILocalVariable(name: "min", arg: 1, scope: !8315, file: !705, line: 243, type: !109)
!8320 = !DILocalVariable(name: "max", arg: 2, scope: !8315, file: !705, line: 243, type: !109)
!8321 = !DILocalVariable(name: "dev", arg: 3, scope: !8315, file: !705, line: 243, type: !734)
!8322 = !DILocalVariable(name: "data", scope: !8315, file: !705, line: 245, type: !8323)
!8323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!8324 = !DILocalVariable(name: "line", scope: !8315, file: !705, line: 246, type: !109)
!8325 = !DILocation(line: 0, scope: !8315)
!8326 = !DILocation(line: 245, column: 38, scope: !8315)
!8327 = !DILocation(line: 249, column: 24, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !705, line: 249, column: 2)
!8329 = distinct !DILexicalBlock(scope: !8315, file: !705, line: 249, column: 2)
!8330 = !DILocation(line: 249, column: 2, scope: !8329)
!8331 = !DILocation(line: 251, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !705, line: 251, column: 7)
!8333 = distinct !DILexicalBlock(scope: !8328, file: !705, line: 249, column: 39)
!8334 = !DILocation(line: 251, column: 7, scope: !8333)
!8335 = !DILocation(line: 253, column: 4, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8332, file: !705, line: 251, column: 36)
!8337 = !DILocation(line: 256, column: 24, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8336, file: !705, line: 256, column: 8)
!8339 = !DILocation(line: 256, column: 9, scope: !8338)
!8340 = !DILocation(line: 256, column: 8, scope: !8336)
!8341 = !DILocation(line: 260, column: 43, scope: !8336)
!8342 = !DILocation(line: 260, column: 4, scope: !8336)
!8343 = !DILocation(line: 261, column: 3, scope: !8336)
!8344 = !DILocation(line: 249, column: 35, scope: !8328)
!8345 = distinct !{!8345, !8330, !8346}
!8346 = !DILocation(line: 262, column: 2, scope: !8329)
!8347 = !DILocation(line: 263, column: 1, scope: !8315)
!8348 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !705, file: !705, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8349)
!8349 = !{!8350}
!8350 = !DILocalVariable(name: "line", arg: 1, scope: !8348, file: !705, line: 158, type: !109)
!8351 = !DILocation(line: 0, scope: !8348)
!8352 = !DILocation(line: 170, column: 38, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !705, line: 160, column: 17)
!8354 = distinct !DILexicalBlock(scope: !8348, file: !705, line: 160, column: 6)
!8355 = !DILocation(line: 170, column: 10, scope: !8353)
!8356 = !DILocation(line: 176, column: 1, scope: !8348)
!8357 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !705, file: !705, line: 183, type: !8358, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8360)
!8358 = !DISubroutineType(types: !8359)
!8359 = !{null, !109}
!8360 = !{!8361}
!8361 = !DILocalVariable(name: "line", arg: 1, scope: !8357, file: !705, line: 183, type: !109)
!8362 = !DILocation(line: 0, scope: !8357)
!8363 = !DILocation(line: 195, column: 28, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !705, line: 185, column: 17)
!8365 = distinct !DILexicalBlock(scope: !8357, file: !705, line: 185, column: 6)
!8366 = !DILocation(line: 195, column: 3, scope: !8364)
!8367 = !DILocation(line: 200, column: 1, scope: !8357)
!8368 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8369, file: !8369, line: 910, type: !6515, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8370)
!8369 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8370 = !{!8371}
!8371 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8368, file: !8369, line: 910, type: !110)
!8372 = !DILocation(line: 0, scope: !8368)
!8373 = !DILocation(line: 912, column: 3, scope: !8368)
!8374 = !DILocation(line: 913, column: 1, scope: !8368)
!8375 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8369, file: !8369, line: 834, type: !7705, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8376)
!8376 = !{!8377}
!8377 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8375, file: !8369, line: 834, type: !110)
!8378 = !DILocation(line: 0, scope: !8375)
!8379 = !DILocation(line: 836, column: 11, scope: !8375)
!8380 = !DILocation(line: 836, column: 40, scope: !8375)
!8381 = !DILocation(line: 836, column: 3, scope: !8375)
!8382 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !705, file: !705, line: 304, type: !758, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8383)
!8383 = !{!8384}
!8384 = !DILocalVariable(name: "dev", arg: 1, scope: !8382, file: !705, line: 304, type: !734)
!8385 = !DILocation(line: 0, scope: !8382)
!8386 = !DILocation(line: 306, column: 2, scope: !8382)
!8387 = !DILocation(line: 307, column: 1, scope: !8382)
!8388 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !705, file: !705, line: 299, type: !758, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8389)
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8388, file: !705, line: 299, type: !734)
!8391 = !DILocation(line: 0, scope: !8388)
!8392 = !DILocation(line: 301, column: 2, scope: !8388)
!8393 = !DILocation(line: 302, column: 1, scope: !8388)
!8394 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !705, file: !705, line: 294, type: !758, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8395)
!8395 = !{!8396}
!8396 = !DILocalVariable(name: "dev", arg: 1, scope: !8394, file: !705, line: 294, type: !734)
!8397 = !DILocation(line: 0, scope: !8394)
!8398 = !DILocation(line: 296, column: 2, scope: !8394)
!8399 = !DILocation(line: 297, column: 1, scope: !8394)
!8400 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !705, file: !705, line: 397, type: !758, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8401)
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8400, file: !705, line: 397, type: !734)
!8403 = !DILocation(line: 0, scope: !8400)
!8404 = !DILocation(line: 399, column: 2, scope: !8400)
!8405 = !DILocation(line: 400, column: 1, scope: !8400)
!8406 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !705, file: !705, line: 392, type: !758, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8407)
!8407 = !{!8408}
!8408 = !DILocalVariable(name: "dev", arg: 1, scope: !8406, file: !705, line: 392, type: !734)
!8409 = !DILocation(line: 0, scope: !8406)
!8410 = !DILocation(line: 394, column: 2, scope: !8406)
!8411 = !DILocation(line: 395, column: 1, scope: !8406)
!8412 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !705, file: !705, line: 289, type: !758, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8413)
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "dev", arg: 1, scope: !8412, file: !705, line: 289, type: !734)
!8415 = !DILocation(line: 0, scope: !8412)
!8416 = !DILocation(line: 291, column: 2, scope: !8412)
!8417 = !DILocation(line: 292, column: 1, scope: !8412)
!8418 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !705, file: !705, line: 387, type: !758, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8419)
!8419 = !{!8420}
!8420 = !DILocalVariable(name: "dev", arg: 1, scope: !8418, file: !705, line: 387, type: !734)
!8421 = !DILocation(line: 0, scope: !8418)
!8422 = !DILocation(line: 389, column: 2, scope: !8418)
!8423 = !DILocation(line: 390, column: 1, scope: !8418)
!8424 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !705, file: !705, line: 382, type: !758, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8425)
!8425 = !{!8426}
!8426 = !DILocalVariable(name: "dev", arg: 1, scope: !8424, file: !705, line: 382, type: !734)
!8427 = !DILocation(line: 0, scope: !8424)
!8428 = !DILocation(line: 384, column: 2, scope: !8424)
!8429 = !DILocation(line: 385, column: 1, scope: !8424)
!8430 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !705, file: !705, line: 373, type: !758, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8431)
!8431 = !{!8432}
!8432 = !DILocalVariable(name: "dev", arg: 1, scope: !8430, file: !705, line: 373, type: !734)
!8433 = !DILocation(line: 0, scope: !8430)
!8434 = !DILocation(line: 375, column: 2, scope: !8430)
!8435 = !DILocation(line: 376, column: 1, scope: !8430)
!8436 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !705, file: !705, line: 284, type: !758, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8437)
!8437 = !{!8438}
!8438 = !DILocalVariable(name: "dev", arg: 1, scope: !8436, file: !705, line: 284, type: !734)
!8439 = !DILocation(line: 0, scope: !8436)
!8440 = !DILocation(line: 286, column: 2, scope: !8436)
!8441 = !DILocation(line: 287, column: 1, scope: !8436)
!8442 = distinct !DISubprogram(name: "stm32_exti_init", scope: !705, file: !705, line: 416, type: !732, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8443)
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "dev", arg: 1, scope: !8442, file: !705, line: 416, type: !734)
!8445 = !DILocation(line: 0, scope: !8442)
!8446 = !DILocation(line: 418, column: 2, scope: !8442)
!8447 = !DILocation(line: 420, column: 2, scope: !8442)
!8448 = !DILocation(line: 0, scope: !757)
!8449 = !DILocation(line: 493, column: 2, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !757, file: !705, line: 493, column: 2)
!8451 = !DILocation(line: 497, column: 2, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !757, file: !705, line: 497, column: 2)
!8453 = !DILocation(line: 507, column: 2, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !757, file: !705, line: 507, column: 2)
!8455 = !DILocation(line: 512, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !757, file: !705, line: 512, column: 2)
!8457 = !DILocation(line: 516, column: 2, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !757, file: !705, line: 516, column: 2)
!8459 = !DILocation(line: 523, column: 2, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !757, file: !705, line: 523, column: 2)
!8461 = !DILocation(line: 527, column: 2, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !757, file: !705, line: 527, column: 2)
!8463 = !DILocation(line: 581, column: 2, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !757, file: !705, line: 581, column: 2)
!8465 = !DILocation(line: 586, column: 2, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !757, file: !705, line: 586, column: 2)
!8467 = !DILocation(line: 591, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !757, file: !705, line: 591, column: 2)
!8469 = !DILocation(line: 595, column: 2, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !757, file: !705, line: 595, column: 2)
!8471 = !DILocation(line: 607, column: 1, scope: !757)
!8472 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !705, file: !705, line: 112, type: !8358, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8473)
!8473 = !{!8474, !8475}
!8474 = !DILocalVariable(name: "line", arg: 1, scope: !8472, file: !705, line: 112, type: !109)
!8475 = !DILocalVariable(name: "irqnum", scope: !8472, file: !705, line: 114, type: !109)
!8476 = !DILocation(line: 0, scope: !8472)
!8477 = !DILocation(line: 122, column: 13, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8472, file: !705, line: 122, column: 6)
!8479 = !DILocation(line: 122, column: 6, scope: !8472)
!8480 = !DILocation(line: 123, column: 3, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !705, line: 123, column: 3)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !705, line: 123, column: 3)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !705, line: 123, column: 3)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !705, line: 122, column: 22)
!8485 = !DILocation(line: 121, column: 11, scope: !8472)
!8486 = !DILocation(line: 130, column: 26, scope: !8472)
!8487 = !DILocation(line: 130, column: 2, scope: !8472)
!8488 = !DILocation(line: 134, column: 2, scope: !8472)
!8489 = !DILocation(line: 135, column: 1, scope: !8472)
!8490 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8369, file: !8369, line: 268, type: !6515, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8491)
!8491 = !{!8492}
!8492 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8490, file: !8369, line: 268, type: !110)
!8493 = !DILocation(line: 0, scope: !8490)
!8494 = !DILocation(line: 270, column: 3, scope: !8490)
!8495 = !DILocation(line: 271, column: 1, scope: !8490)
!8496 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !705, file: !705, line: 137, type: !8358, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8497)
!8497 = !{!8498}
!8498 = !DILocalVariable(name: "line", arg: 1, scope: !8496, file: !705, line: 137, type: !109)
!8499 = !DILocation(line: 0, scope: !8496)
!8500 = !DILocation(line: 141, column: 11, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8496, file: !705, line: 141, column: 6)
!8502 = !DILocation(line: 141, column: 6, scope: !8496)
!8503 = !DILocation(line: 145, column: 28, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8501, file: !705, line: 141, column: 17)
!8505 = !DILocation(line: 145, column: 3, scope: !8504)
!8506 = !DILocation(line: 147, column: 2, scope: !8504)
!8507 = !DILocation(line: 151, column: 1, scope: !8496)
!8508 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8369, file: !8369, line: 309, type: !6515, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8509)
!8509 = !{!8510}
!8510 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8508, file: !8369, line: 309, type: !110)
!8511 = !DILocation(line: 0, scope: !8508)
!8512 = !DILocation(line: 311, column: 3, scope: !8508)
!8513 = !DILocation(line: 312, column: 1, scope: !8508)
!8514 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !705, file: !705, line: 202, type: !8515, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8517)
!8515 = !DISubroutineType(types: !8516)
!8516 = !{null, !109, !109}
!8517 = !{!8518, !8519}
!8518 = !DILocalVariable(name: "line", arg: 1, scope: !8514, file: !705, line: 202, type: !109)
!8519 = !DILocalVariable(name: "trigger", arg: 2, scope: !8514, file: !705, line: 202, type: !109)
!8520 = !DILocation(line: 0, scope: !8514)
!8521 = !DILocation(line: 211, column: 2, scope: !8514)
!8522 = !DILocation(line: 213, column: 36, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8514, file: !705, line: 211, column: 19)
!8524 = !DILocation(line: 213, column: 3, scope: !8523)
!8525 = !DILocation(line: 214, column: 3, scope: !8523)
!8526 = !DILocation(line: 215, column: 3, scope: !8523)
!8527 = !DILocation(line: 217, column: 35, scope: !8523)
!8528 = !DILocation(line: 217, column: 3, scope: !8523)
!8529 = !DILocation(line: 218, column: 3, scope: !8523)
!8530 = !DILocation(line: 219, column: 3, scope: !8523)
!8531 = !DILocation(line: 221, column: 36, scope: !8523)
!8532 = !DILocation(line: 221, column: 3, scope: !8523)
!8533 = !DILocation(line: 222, column: 3, scope: !8523)
!8534 = !DILocation(line: 223, column: 3, scope: !8523)
!8535 = !DILocation(line: 225, column: 35, scope: !8523)
!8536 = !DILocation(line: 225, column: 3, scope: !8523)
!8537 = !DILocation(line: 226, column: 3, scope: !8523)
!8538 = !DILocation(line: 227, column: 3, scope: !8523)
!8539 = !DILocation(line: 232, column: 1, scope: !8514)
!8540 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8369, file: !8369, line: 573, type: !6515, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8541)
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8540, file: !8369, line: 573, type: !110)
!8543 = !DILocation(line: 0, scope: !8540)
!8544 = !DILocation(line: 575, column: 3, scope: !8540)
!8545 = !DILocation(line: 577, column: 1, scope: !8540)
!8546 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8369, file: !8369, line: 703, type: !6515, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8546, file: !8369, line: 703, type: !110)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 705, column: 3, scope: !8546)
!8551 = !DILocation(line: 706, column: 1, scope: !8546)
!8552 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8369, file: !8369, line: 529, type: !6515, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8552, file: !8369, line: 529, type: !110)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 531, column: 3, scope: !8552)
!8557 = !DILocation(line: 533, column: 1, scope: !8552)
!8558 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8369, file: !8369, line: 661, type: !6515, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8558, file: !8369, line: 661, type: !110)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 663, column: 3, scope: !8558)
!8563 = !DILocation(line: 664, column: 1, scope: !8558)
!8564 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !705, file: !705, line: 433, type: !8565, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8567)
!8565 = !DISubroutineType(types: !8566)
!8566 = !{!109, !109, !745, !107}
!8567 = !{!8568, !8569, !8570, !8571, !8573}
!8568 = !DILocalVariable(name: "line", arg: 1, scope: !8564, file: !705, line: 433, type: !109)
!8569 = !DILocalVariable(name: "cb", arg: 2, scope: !8564, file: !705, line: 433, type: !745)
!8570 = !DILocalVariable(name: "arg", arg: 3, scope: !8564, file: !705, line: 433, type: !107)
!8571 = !DILocalVariable(name: "dev", scope: !8564, file: !705, line: 435, type: !8572)
!8572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!8573 = !DILocalVariable(name: "data", scope: !8564, file: !705, line: 436, type: !8323)
!8574 = !DILocation(line: 0, scope: !8564)
!8575 = !DILocation(line: 438, column: 21, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8564, file: !705, line: 438, column: 6)
!8577 = !DILocation(line: 438, column: 6, scope: !8576)
!8578 = !DILocation(line: 438, column: 6, scope: !8564)
!8579 = !DILocation(line: 442, column: 20, scope: !8564)
!8580 = !DILocation(line: 443, column: 17, scope: !8564)
!8581 = !DILocation(line: 443, column: 22, scope: !8564)
!8582 = !DILocation(line: 445, column: 2, scope: !8564)
!8583 = !DILocation(line: 446, column: 1, scope: !8564)
!8584 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !705, file: !705, line: 448, type: !8358, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8585)
!8585 = !{!8586, !8587, !8588}
!8586 = !DILocalVariable(name: "line", arg: 1, scope: !8584, file: !705, line: 448, type: !109)
!8587 = !DILocalVariable(name: "dev", scope: !8584, file: !705, line: 450, type: !8572)
!8588 = !DILocalVariable(name: "data", scope: !8584, file: !705, line: 451, type: !8323)
!8589 = !DILocation(line: 0, scope: !8584)
!8590 = !DILocation(line: 453, column: 17, scope: !8584)
!8591 = !DILocation(line: 453, column: 20, scope: !8584)
!8592 = !DILocation(line: 454, column: 17, scope: !8584)
!8593 = !DILocation(line: 454, column: 22, scope: !8584)
!8594 = !DILocation(line: 455, column: 1, scope: !8584)
!8595 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !886, file: !886, line: 183, type: !924, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8596)
!8596 = !{!8597, !8598, !8599, !8600, !8601}
!8597 = !DILocalVariable(name: "dev", arg: 1, scope: !8595, file: !886, line: 183, type: !915)
!8598 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8595, file: !886, line: 184, type: !926)
!8599 = !DILocalVariable(name: "pclken", scope: !8595, file: !886, line: 186, type: !876)
!8600 = !DILocalVariable(name: "reg", scope: !8595, file: !886, line: 187, type: !1469)
!8601 = !DILocalVariable(name: "reg_val", scope: !8595, file: !886, line: 188, type: !110)
!8602 = !DILocation(line: 0, scope: !8595)
!8603 = !DILocation(line: 192, column: 6, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8595, file: !886, line: 192, column: 6)
!8605 = !DILocation(line: 192, column: 6, scope: !8595)
!8606 = !DILocation(line: 197, column: 52, scope: !8595)
!8607 = !DILocation(line: 197, column: 8, scope: !8595)
!8608 = !DILocation(line: 198, column: 12, scope: !8595)
!8609 = !DILocation(line: 199, column: 21, scope: !8595)
!8610 = !DILocation(line: 199, column: 10, scope: !8595)
!8611 = !DILocation(line: 200, column: 7, scope: !8595)
!8612 = !DILocation(line: 202, column: 2, scope: !8595)
!8613 = !DILocation(line: 203, column: 1, scope: !8595)
!8614 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !886, file: !886, line: 205, type: !924, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8615)
!8615 = !{!8616, !8617, !8618, !8619, !8620}
!8616 = !DILocalVariable(name: "dev", arg: 1, scope: !8614, file: !886, line: 205, type: !915)
!8617 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8614, file: !886, line: 206, type: !926)
!8618 = !DILocalVariable(name: "pclken", scope: !8614, file: !886, line: 208, type: !876)
!8619 = !DILocalVariable(name: "reg", scope: !8614, file: !886, line: 209, type: !1469)
!8620 = !DILocalVariable(name: "reg_val", scope: !8614, file: !886, line: 210, type: !110)
!8621 = !DILocation(line: 0, scope: !8614)
!8622 = !DILocation(line: 214, column: 6, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8614, file: !886, line: 214, column: 6)
!8624 = !DILocation(line: 214, column: 6, scope: !8614)
!8625 = !DILocation(line: 219, column: 52, scope: !8614)
!8626 = !DILocation(line: 219, column: 8, scope: !8614)
!8627 = !DILocation(line: 220, column: 12, scope: !8614)
!8628 = !DILocation(line: 221, column: 22, scope: !8614)
!8629 = !DILocation(line: 221, column: 13, scope: !8614)
!8630 = !DILocation(line: 221, column: 10, scope: !8614)
!8631 = !DILocation(line: 222, column: 7, scope: !8614)
!8632 = !DILocation(line: 224, column: 2, scope: !8614)
!8633 = !DILocation(line: 225, column: 1, scope: !8614)
!8634 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !886, file: !886, line: 262, type: !940, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8635)
!8635 = !{!8636, !8637, !8638, !8639, !8640, !8641, !8642, !8643}
!8636 = !DILocalVariable(name: "clock", arg: 1, scope: !8634, file: !886, line: 262, type: !915)
!8637 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8634, file: !886, line: 263, type: !926)
!8638 = !DILocalVariable(name: "rate", arg: 3, scope: !8634, file: !886, line: 264, type: !882)
!8639 = !DILocalVariable(name: "pclken", scope: !8634, file: !886, line: 266, type: !876)
!8640 = !DILocalVariable(name: "ahb_clock", scope: !8634, file: !886, line: 273, type: !110)
!8641 = !DILocalVariable(name: "apb1_clock", scope: !8634, file: !886, line: 274, type: !110)
!8642 = !DILocalVariable(name: "apb2_clock", scope: !8634, file: !886, line: 276, type: !110)
!8643 = !DILocalVariable(name: "ahb3_clock", scope: !8634, file: !886, line: 286, type: !110)
!8644 = !DILocation(line: 0, scope: !8634)
!8645 = !DILocation(line: 273, column: 23, scope: !8634)
!8646 = !DILocation(line: 274, column: 24, scope: !8634)
!8647 = !DILocation(line: 299, column: 18, scope: !8634)
!8648 = !DILocation(line: 299, column: 2, scope: !8634)
!8649 = !DILocation(line: 319, column: 3, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8634, file: !886, line: 299, column: 23)
!8651 = !DILocation(line: 323, column: 3, scope: !8650)
!8652 = !DILocation(line: 346, column: 33, scope: !8650)
!8653 = !DILocation(line: 346, column: 11, scope: !8650)
!8654 = !DILocation(line: 350, column: 3, scope: !8650)
!8655 = !DILocation(line: 354, column: 33, scope: !8650)
!8656 = !DILocation(line: 354, column: 11, scope: !8650)
!8657 = !DILocation(line: 358, column: 3, scope: !8650)
!8658 = !DILocation(line: 374, column: 3, scope: !8650)
!8659 = !DILocation(line: 379, column: 3, scope: !8650)
!8660 = !DILocation(line: 0, scope: !8650)
!8661 = !DILocation(line: 396, column: 1, scope: !8634)
!8662 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !886, file: !886, line: 227, type: !956, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8663)
!8663 = !{!8664, !8665, !8666, !8667, !8668, !8669, !8670, !8671}
!8664 = !DILocalVariable(name: "dev", arg: 1, scope: !8662, file: !886, line: 227, type: !915)
!8665 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8662, file: !886, line: 228, type: !926)
!8666 = !DILocalVariable(name: "data", arg: 3, scope: !8662, file: !886, line: 229, type: !107)
!8667 = !DILocalVariable(name: "pclken", scope: !8662, file: !886, line: 233, type: !876)
!8668 = !DILocalVariable(name: "reg", scope: !8662, file: !886, line: 234, type: !1469)
!8669 = !DILocalVariable(name: "reg_val", scope: !8662, file: !886, line: 235, type: !110)
!8670 = !DILocalVariable(name: "dt_val", scope: !8662, file: !886, line: 235, type: !110)
!8671 = !DILocalVariable(name: "err", scope: !8662, file: !886, line: 236, type: !109)
!8672 = !DILocation(line: 0, scope: !8662)
!8673 = !DILocation(line: 241, column: 30, scope: !8662)
!8674 = !DILocation(line: 241, column: 8, scope: !8662)
!8675 = !DILocation(line: 242, column: 10, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8662, file: !886, line: 242, column: 6)
!8677 = !DILocation(line: 242, column: 6, scope: !8662)
!8678 = !DILocation(line: 247, column: 11, scope: !8662)
!8679 = !DILocation(line: 248, column: 6, scope: !8662)
!8680 = !DILocation(line: 247, column: 44, scope: !8662)
!8681 = !DILocation(line: 250, column: 6, scope: !8662)
!8682 = !DILocation(line: 249, column: 52, scope: !8662)
!8683 = !DILocation(line: 249, column: 8, scope: !8662)
!8684 = !DILocation(line: 251, column: 12, scope: !8662)
!8685 = !DILocation(line: 252, column: 10, scope: !8662)
!8686 = !DILocation(line: 253, column: 7, scope: !8662)
!8687 = !DILocation(line: 255, column: 2, scope: !8662)
!8688 = !DILocation(line: 260, column: 1, scope: !8662)
!8689 = distinct !DISubprogram(name: "enabled_clock", scope: !886, file: !886, line: 100, type: !8690, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8692)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{!109, !110}
!8692 = !{!8693, !8694}
!8693 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8689, file: !886, line: 100, type: !110)
!8694 = !DILocalVariable(name: "r", scope: !8689, file: !886, line: 102, type: !109)
!8695 = !DILocation(line: 0, scope: !8689)
!8696 = !DILocation(line: 104, column: 2, scope: !8689)
!8697 = !DILocation(line: 180, column: 2, scope: !8689)
!8698 = !DILocation(line: 181, column: 1, scope: !8689)
!8699 = distinct !DISubprogram(name: "get_bus_clock", scope: !886, file: !886, line: 79, type: !8700, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8702)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{!110, !110, !110}
!8702 = !{!8703, !8704}
!8703 = !DILocalVariable(name: "clock", arg: 1, scope: !8699, file: !886, line: 79, type: !110)
!8704 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8699, file: !886, line: 79, type: !110)
!8705 = !DILocation(line: 0, scope: !8699)
!8706 = !DILocation(line: 81, column: 15, scope: !8699)
!8707 = !DILocation(line: 81, column: 2, scope: !8699)
!8708 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !886, file: !886, line: 68, type: !8709, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8711)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!110, !110, !109, !109, !109}
!8711 = !{!8712, !8713, !8714, !8715}
!8712 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8708, file: !886, line: 68, type: !110)
!8713 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8708, file: !886, line: 69, type: !109)
!8714 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8708, file: !886, line: 70, type: !109)
!8715 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8708, file: !886, line: 71, type: !109)
!8716 = !DILocation(line: 0, scope: !8708)
!8717 = !DILocation(line: 75, column: 22, scope: !8708)
!8718 = !DILocation(line: 76, column: 13, scope: !8708)
!8719 = !DILocation(line: 75, column: 34, scope: !8708)
!8720 = !DILocation(line: 75, column: 2, scope: !8708)
!8721 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !886, file: !886, line: 641, type: !913, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8722)
!8722 = !{!8723, !8724, !8725}
!8723 = !DILocalVariable(name: "dev", arg: 1, scope: !8721, file: !886, line: 641, type: !915)
!8724 = !DILocalVariable(name: "old_flash_freq", scope: !8721, file: !886, line: 664, type: !110)
!8725 = !DILocalVariable(name: "new_flash_freq", scope: !8721, file: !886, line: 665, type: !110)
!8726 = !DILocation(line: 0, scope: !8721)
!8727 = !DILocation(line: 646, column: 2, scope: !8721)
!8728 = !DILocation(line: 667, column: 19, scope: !8721)
!8729 = !DILocation(line: 674, column: 21, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8721, file: !886, line: 674, column: 6)
!8731 = !DILocation(line: 674, column: 6, scope: !8721)
!8732 = !DILocation(line: 675, column: 3, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8730, file: !886, line: 674, column: 59)
!8734 = !DILocation(line: 676, column: 2, scope: !8733)
!8735 = !DILocation(line: 680, column: 2, scope: !8721)
!8736 = !DILocation(line: 683, column: 2, scope: !8721)
!8737 = !DILocation(line: 690, column: 3, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !886, line: 689, column: 9)
!8739 = distinct !DILexicalBlock(scope: !8721, file: !886, line: 685, column: 6)
!8740 = !DILocation(line: 695, column: 2, scope: !8721)
!8741 = !DILocation(line: 696, column: 2, scope: !8721)
!8742 = !DILocation(line: 696, column: 9, scope: !8721)
!8743 = !DILocation(line: 696, column: 34, scope: !8721)
!8744 = distinct !{!8744, !8741, !8745}
!8745 = !DILocation(line: 697, column: 2, scope: !8721)
!8746 = !DILocation(line: 720, column: 21, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8721, file: !886, line: 720, column: 6)
!8748 = !DILocation(line: 720, column: 6, scope: !8721)
!8749 = !DILocation(line: 721, column: 3, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8747, file: !886, line: 720, column: 60)
!8751 = !DILocation(line: 722, column: 2, scope: !8750)
!8752 = !DILocation(line: 725, column: 18, scope: !8721)
!8753 = !DILocation(line: 728, column: 2, scope: !8721)
!8754 = !DILocation(line: 730, column: 2, scope: !8721)
!8755 = !DILocation(line: 745, column: 2, scope: !8721)
!8756 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8757, file: !8757, line: 3275, type: !6505, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8757 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8758 = !DILocation(line: 3277, column: 21, scope: !8756)
!8759 = !DILocation(line: 3277, column: 3, scope: !8756)
!8760 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !886, file: !886, line: 507, type: !3087, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8761 = !DILocation(line: 516, column: 4, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !886, line: 515, column: 10)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !886, line: 513, column: 7)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !886, line: 510, column: 37)
!8765 = distinct !DILexicalBlock(scope: !8760, file: !886, line: 510, column: 6)
!8766 = !DILocation(line: 526, column: 3, scope: !8764)
!8767 = !DILocation(line: 527, column: 3, scope: !8764)
!8768 = !DILocation(line: 527, column: 10, scope: !8764)
!8769 = !DILocation(line: 527, column: 31, scope: !8764)
!8770 = distinct !{!8770, !8767, !8771}
!8771 = !DILocation(line: 529, column: 3, scope: !8764)
!8772 = !DILocation(line: 583, column: 3, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !886, line: 577, column: 37)
!8774 = distinct !DILexicalBlock(scope: !8760, file: !886, line: 577, column: 6)
!8775 = !DILocation(line: 584, column: 3, scope: !8773)
!8776 = !DILocation(line: 584, column: 10, scope: !8773)
!8777 = !DILocation(line: 584, column: 31, scope: !8773)
!8778 = distinct !{!8778, !8775, !8779}
!8779 = !DILocation(line: 585, column: 3, scope: !8773)
!8780 = !DILocation(line: 627, column: 1, scope: !8760)
!8781 = distinct !DISubprogram(name: "set_up_plls", scope: !886, file: !886, line: 448, type: !3087, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8782 = !DILocation(line: 460, column: 6, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8781, file: !886, line: 460, column: 6)
!8784 = !DILocation(line: 460, column: 31, scope: !8783)
!8785 = !DILocation(line: 460, column: 6, scope: !8781)
!8786 = !DILocation(line: 461, column: 3, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8783, file: !886, line: 460, column: 67)
!8788 = !DILocation(line: 462, column: 3, scope: !8787)
!8789 = !DILocation(line: 463, column: 2, scope: !8787)
!8790 = !DILocation(line: 464, column: 2, scope: !8781)
!8791 = !DILocation(line: 488, column: 2, scope: !8781)
!8792 = !DILocation(line: 492, column: 2, scope: !8781)
!8793 = !DILocation(line: 496, column: 2, scope: !8781)
!8794 = !DILocation(line: 499, column: 2, scope: !8781)
!8795 = !DILocation(line: 500, column: 2, scope: !8781)
!8796 = !DILocation(line: 500, column: 9, scope: !8781)
!8797 = !DILocation(line: 500, column: 30, scope: !8781)
!8798 = distinct !{!8798, !8795, !8799}
!8799 = !DILocation(line: 502, column: 2, scope: !8781)
!8800 = !DILocation(line: 505, column: 1, scope: !8781)
!8801 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8757, file: !8757, line: 3224, type: !6515, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8802)
!8802 = !{!8803}
!8803 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8801, file: !8757, line: 3224, type: !110)
!8804 = !DILocation(line: 0, scope: !8801)
!8805 = !DILocation(line: 3226, column: 3, scope: !8801)
!8806 = !DILocation(line: 3227, column: 1, scope: !8801)
!8807 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8757, file: !8757, line: 3188, type: !6515, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8808)
!8808 = !{!8809}
!8809 = !DILocalVariable(name: "Source", arg: 1, scope: !8807, file: !8757, line: 3188, type: !110)
!8810 = !DILocation(line: 0, scope: !8807)
!8811 = !DILocation(line: 3190, column: 3, scope: !8807)
!8812 = !DILocation(line: 3191, column: 1, scope: !8807)
!8813 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8757, file: !8757, line: 3204, type: !6505, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8814 = !DILocation(line: 3206, column: 21, scope: !8813)
!8815 = !DILocation(line: 3206, column: 3, scope: !8813)
!8816 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8757, file: !8757, line: 3240, type: !6515, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8817)
!8817 = !{!8818}
!8818 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8816, file: !8757, line: 3240, type: !110)
!8819 = !DILocation(line: 0, scope: !8816)
!8820 = !DILocation(line: 3242, column: 3, scope: !8816)
!8821 = !DILocation(line: 3243, column: 1, scope: !8816)
!8822 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8757, file: !8757, line: 3256, type: !6515, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !8823)
!8823 = !{!8824}
!8824 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8822, file: !8757, line: 3256, type: !110)
!8825 = !DILocation(line: 0, scope: !8822)
!8826 = !DILocation(line: 3258, column: 3, scope: !8822)
!8827 = !DILocation(line: 3259, column: 1, scope: !8822)
!8828 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !886, file: !886, line: 409, type: !3087, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8829 = !DILocation(line: 412, column: 6, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8828, file: !886, line: 412, column: 6)
!8831 = !DILocation(line: 412, column: 27, scope: !8830)
!8832 = !DILocation(line: 412, column: 6, scope: !8828)
!8833 = !DILocation(line: 414, column: 3, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8830, file: !886, line: 412, column: 33)
!8835 = !DILocation(line: 415, column: 3, scope: !8834)
!8836 = !DILocation(line: 415, column: 10, scope: !8834)
!8837 = !DILocation(line: 415, column: 31, scope: !8834)
!8838 = distinct !{!8838, !8835, !8839}
!8839 = !DILocation(line: 417, column: 3, scope: !8834)
!8840 = !DILocation(line: 421, column: 2, scope: !8828)
!8841 = !DILocation(line: 422, column: 2, scope: !8828)
!8842 = !DILocation(line: 422, column: 9, scope: !8828)
!8843 = !DILocation(line: 422, column: 34, scope: !8828)
!8844 = distinct !{!8844, !8841, !8845}
!8845 = !DILocation(line: 423, column: 2, scope: !8828)
!8846 = !DILocation(line: 424, column: 1, scope: !8828)
!8847 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8757, file: !8757, line: 4195, type: !3087, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8848 = !DILocation(line: 4197, column: 3, scope: !8847)
!8849 = !DILocation(line: 4198, column: 1, scope: !8847)
!8850 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8757, file: !8757, line: 4184, type: !3087, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8851 = !DILocation(line: 4186, column: 3, scope: !8850)
!8852 = !DILocation(line: 4187, column: 1, scope: !8850)
!8853 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8757, file: !8757, line: 4205, type: !6505, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8854 = !DILocation(line: 4207, column: 11, scope: !8853)
!8855 = !DILocation(line: 4207, column: 44, scope: !8853)
!8856 = !DILocation(line: 4207, column: 3, scope: !8853)
!8857 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8757, file: !8757, line: 3007, type: !6505, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8858 = !DILocation(line: 3009, column: 11, scope: !8857)
!8859 = !DILocation(line: 3009, column: 44, scope: !8857)
!8860 = !DILocation(line: 3009, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8757, file: !8757, line: 2987, type: !3087, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8862 = !DILocation(line: 2989, column: 3, scope: !8861)
!8863 = !DILocation(line: 2990, column: 1, scope: !8861)
!8864 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8757, file: !8757, line: 2939, type: !3087, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8865 = !DILocation(line: 2941, column: 3, scope: !8864)
!8866 = !DILocation(line: 2942, column: 1, scope: !8864)
!8867 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8757, file: !8757, line: 2949, type: !3087, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8868 = !DILocation(line: 2951, column: 3, scope: !8867)
!8869 = !DILocation(line: 2952, column: 1, scope: !8867)
!8870 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8757, file: !8757, line: 2969, type: !6505, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8871 = !DILocation(line: 2971, column: 11, scope: !8870)
!8872 = !DILocation(line: 2971, column: 44, scope: !8870)
!8873 = !DILocation(line: 2971, column: 3, scope: !8870)
!8874 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8757, file: !8757, line: 3143, type: !3087, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8875 = !DILocation(line: 3145, column: 3, scope: !8874)
!8876 = !DILocation(line: 3146, column: 1, scope: !8874)
!8877 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8757, file: !8757, line: 3163, type: !6505, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !824, retainedNodes: !2024)
!8878 = !DILocation(line: 3165, column: 11, scope: !8877)
!8879 = !DILocation(line: 3165, column: 46, scope: !8877)
!8880 = !DILocation(line: 3165, column: 3, scope: !8877)
!8881 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8882, file: !8882, line: 40, type: !6505, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !2024)
!8882 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8883 = !DILocation(line: 45, column: 3, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !8882, line: 44, column: 44)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !8882, line: 44, column: 13)
!8886 = distinct !DILexicalBlock(scope: !8881, file: !8882, line: 42, column: 6)
!8887 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8882, file: !8882, line: 56, type: !3087, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !2024)
!8888 = !DILocation(line: 58, column: 2, scope: !8887)
!8889 = !DILocation(line: 62, column: 1, scope: !8887)
!8890 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8757, file: !8757, line: 4304, type: !8891, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{null, !110, !110, !110, !110}
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "Source", arg: 1, scope: !8890, file: !8757, line: 4304, type: !110)
!8895 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8890, file: !8757, line: 4304, type: !110)
!8896 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8890, file: !8757, line: 4304, type: !110)
!8897 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8890, file: !8757, line: 4304, type: !110)
!8898 = !DILocation(line: 0, scope: !8890)
!8899 = !DILocation(line: 4306, column: 3, scope: !8890)
!8900 = !DILocation(line: 4308, column: 3, scope: !8890)
!8901 = !DILocation(line: 4312, column: 1, scope: !8890)
!8902 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8882, file: !8882, line: 69, type: !3087, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !2024)
!8903 = !DILocation(line: 72, column: 2, scope: !8902)
!8904 = !DILocation(line: 73, column: 1, scope: !8902)
!8905 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8906, file: !8906, line: 1185, type: !6515, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8907)
!8906 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8907 = !{!8908, !8909}
!8908 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8905, file: !8906, line: 1185, type: !110)
!8909 = !DILocalVariable(name: "tmpreg", scope: !8905, file: !8906, line: 1187, type: !316)
!8910 = !DILocation(line: 0, scope: !8905)
!8911 = !DILocation(line: 1187, column: 3, scope: !8905)
!8912 = !DILocation(line: 1187, column: 17, scope: !8905)
!8913 = !DILocation(line: 1188, column: 3, scope: !8905)
!8914 = !DILocation(line: 1190, column: 12, scope: !8905)
!8915 = !DILocation(line: 1190, column: 10, scope: !8905)
!8916 = !DILocation(line: 1191, column: 9, scope: !8905)
!8917 = !DILocation(line: 1192, column: 1, scope: !8905)
!8918 = distinct !DISubprogram(name: "uart_console_init", scope: !1017, file: !1017, line: 588, type: !994, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8919)
!8919 = !{!8920}
!8920 = !DILocalVariable(name: "arg", arg: 1, scope: !8918, file: !1017, line: 588, type: !972)
!8921 = !DILocation(line: 0, scope: !8918)
!8922 = !DILocation(line: 593, column: 7, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8918, file: !1017, line: 593, column: 6)
!8924 = !DILocation(line: 593, column: 6, scope: !8918)
!8925 = !DILocation(line: 597, column: 2, scope: !8918)
!8926 = !DILocation(line: 599, column: 2, scope: !8918)
!8927 = !DILocation(line: 600, column: 1, scope: !8918)
!8928 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !8930, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8932)
!8929 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!347, !972}
!8932 = !{!8933}
!8933 = !DILocalVariable(name: "dev", arg: 1, scope: !8928, file: !8929, line: 47, type: !972)
!8934 = !DILocation(line: 0, scope: !8928)
!8935 = !DILocation(line: 55, column: 2, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8928, file: !8929, line: 55, column: 2)
!8937 = !{i64 2154963005}
!8938 = !DILocation(line: 56, column: 9, scope: !8928)
!8939 = !DILocation(line: 56, column: 2, scope: !8928)
!8940 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1017, file: !1017, line: 573, type: !3087, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !2024)
!8941 = !DILocation(line: 576, column: 2, scope: !8940)
!8942 = !DILocation(line: 579, column: 2, scope: !8940)
!8943 = !DILocation(line: 581, column: 1, scope: !8940)
!8944 = distinct !DISubprogram(name: "console_out", scope: !1017, file: !1017, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8945)
!8945 = !{!8946}
!8946 = !DILocalVariable(name: "c", arg: 1, scope: !8944, file: !1017, line: 77, type: !109)
!8947 = !DILocation(line: 0, scope: !8944)
!8948 = !DILocation(line: 89, column: 11, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !1017, line: 89, column: 6)
!8950 = !DILocation(line: 89, column: 6, scope: !8944)
!8951 = !DILocation(line: 90, column: 3, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8949, file: !1017, line: 89, column: 17)
!8953 = !DILocation(line: 91, column: 2, scope: !8952)
!8954 = !DILocation(line: 92, column: 34, scope: !8944)
!8955 = !DILocation(line: 92, column: 2, scope: !8944)
!8956 = !DILocation(line: 94, column: 2, scope: !8944)
!8957 = distinct !DISubprogram(name: "uart_poll_out", scope: !8958, file: !8958, line: 95, type: !990, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8959)
!8958 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/condvar")
!8959 = !{!8960, !8961}
!8960 = !DILocalVariable(name: "dev", arg: 1, scope: !8957, file: !8958, line: 95, type: !972)
!8961 = !DILocalVariable(name: "out_char", arg: 2, scope: !8957, file: !8958, line: 95, type: !181)
!8962 = !DILocation(line: 0, scope: !8957)
!8963 = !DILocation(line: 105, column: 2, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8957, file: !8958, line: 105, column: 2)
!8965 = !{i64 2155046396}
!8966 = !DILocation(line: 106, column: 2, scope: !8957)
!8967 = !DILocation(line: 107, column: 1, scope: !8957)
!8968 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !966, file: !966, line: 574, type: !990, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8969)
!8969 = !{!8970, !8971, !8972}
!8970 = !DILocalVariable(name: "dev", arg: 1, scope: !8968, file: !966, line: 574, type: !972)
!8971 = !DILocalVariable(name: "out_char", arg: 2, scope: !8968, file: !966, line: 575, type: !181)
!8972 = !DILocalVariable(name: "api", scope: !8968, file: !966, line: 577, type: !963)
!8973 = !DILocation(line: 0, scope: !8968)
!8974 = !DILocation(line: 578, column: 40, scope: !8968)
!8975 = !DILocation(line: 580, column: 7, scope: !8968)
!8976 = !DILocation(line: 580, column: 2, scope: !8968)
!8977 = !DILocation(line: 581, column: 1, scope: !8968)
!8978 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8930, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !8979)
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "dev", arg: 1, scope: !8978, file: !336, line: 730, type: !972)
!8981 = !DILocation(line: 0, scope: !8978)
!8982 = !DILocation(line: 732, column: 9, scope: !8978)
!8983 = !DILocation(line: 732, column: 2, scope: !8978)
!8984 = distinct !DISubprogram(name: "uart_register_input", scope: !1017, file: !1017, line: 560, type: !8985, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !960, retainedNodes: !9032)
!8985 = !DISubroutineType(types: !8986)
!8986 = !{null, !8987, !8987, !9029}
!8987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8988, size: 32)
!8988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8989)
!8989 = !{!8990}
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8988, file: !118, line: 2209, baseType: !8991, size: 160)
!8991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8992)
!8992 = !{!8993, !9006, !9010}
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8991, file: !118, line: 1710, baseType: !8994, size: 64)
!8994 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8995, line: 46, baseType: !8996)
!8995 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8995, line: 41, size: 64, elements: !8997)
!8997 = !{!8998, !9005}
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8996, file: !8995, line: 42, baseType: !8999, size: 32)
!8999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9000, size: 32)
!9000 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8995, line: 39, baseType: !9001)
!9001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8995, line: 35, size: 32, elements: !9002)
!9002 = !{!9003}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9001, file: !8995, line: 36, baseType: !9004, size: 32)
!9004 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8995, line: 32, baseType: !110)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8996, file: !8995, line: 43, baseType: !8999, size: 32, offset: 32)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8991, file: !118, line: 1711, baseType: !9007, size: 32, offset: 64)
!9007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !9008)
!9008 = !{!9009}
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9007, file: !253, line: 52, baseType: !22, size: 32)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8991, file: !118, line: 1712, baseType: !9011, size: 64, offset: 96)
!9011 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9012)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9013)
!9013 = !{!9014}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9012, file: !122, line: 232, baseType: !9015, size: 64)
!9015 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9016)
!9016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9017)
!9017 = !{!9018, !9024}
!9018 = !DIDerivedType(tag: DW_TAG_member, scope: !9016, file: !127, line: 38, baseType: !9019, size: 32)
!9019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9016, file: !127, line: 38, size: 32, elements: !9020)
!9020 = !{!9021, !9023}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9019, file: !127, line: 39, baseType: !9022, size: 32)
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 32)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9019, file: !127, line: 40, baseType: !9022, size: 32)
!9024 = !DIDerivedType(tag: DW_TAG_member, scope: !9016, file: !127, line: 42, baseType: !9025, size: 32, offset: 32)
!9025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9016, file: !127, line: 42, size: 32, elements: !9026)
!9026 = !{!9027, !9028}
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9025, file: !127, line: 43, baseType: !9022, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9025, file: !127, line: 44, baseType: !9022, size: 32)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 32)
!9030 = !DISubroutineType(types: !9031)
!9031 = !{!180, !285, !180}
!9032 = !{!9033, !9034, !9035}
!9033 = !DILocalVariable(name: "avail", arg: 1, scope: !8984, file: !1017, line: 560, type: !8987)
!9034 = !DILocalVariable(name: "lines", arg: 2, scope: !8984, file: !1017, line: 560, type: !8987)
!9035 = !DILocalVariable(name: "completion", arg: 3, scope: !8984, file: !1017, line: 561, type: !9029)
!9036 = !DILocation(line: 0, scope: !8984)
!9037 = !DILocation(line: 566, column: 1, scope: !8984)
!9038 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1197, file: !1197, line: 523, type: !1053, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9039)
!9039 = !{!9040, !9041, !9042, !9043, !9044}
!9040 = !DILocalVariable(name: "dev", arg: 1, scope: !9038, file: !1197, line: 523, type: !1055)
!9041 = !DILocalVariable(name: "pin", arg: 2, scope: !9038, file: !1197, line: 524, type: !1070)
!9042 = !DILocalVariable(name: "flags", arg: 3, scope: !9038, file: !1197, line: 524, type: !1071)
!9043 = !DILocalVariable(name: "err", scope: !9038, file: !1197, line: 526, type: !109)
!9044 = !DILocalVariable(name: "pincfg", scope: !9038, file: !1197, line: 527, type: !109)
!9045 = !DILocation(line: 0, scope: !9038)
!9046 = !DILocation(line: 527, column: 2, scope: !9038)
!9047 = !DILocation(line: 532, column: 8, scope: !9038)
!9048 = !DILocation(line: 533, column: 10, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9038, file: !1197, line: 533, column: 6)
!9050 = !DILocation(line: 533, column: 6, scope: !9038)
!9051 = !DILocation(line: 543, column: 13, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9038, file: !1197, line: 543, column: 6)
!9053 = !DILocation(line: 543, column: 28, scope: !9052)
!9054 = !DILocation(line: 543, column: 6, scope: !9038)
!9055 = !DILocation(line: 544, column: 14, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !1197, line: 544, column: 7)
!9057 = distinct !DILexicalBlock(scope: !9052, file: !1197, line: 543, column: 34)
!9058 = !DILocation(line: 544, column: 39, scope: !9056)
!9059 = !DILocation(line: 544, column: 7, scope: !9057)
!9060 = !DILocation(line: 545, column: 38, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !1197, line: 544, column: 45)
!9062 = !DILocation(line: 545, column: 4, scope: !9061)
!9063 = !DILocation(line: 546, column: 3, scope: !9061)
!9064 = !DILocation(line: 546, column: 21, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9056, file: !1197, line: 546, column: 14)
!9066 = !DILocation(line: 546, column: 45, scope: !9065)
!9067 = !DILocation(line: 546, column: 14, scope: !9056)
!9068 = !DILocation(line: 547, column: 40, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9065, file: !1197, line: 546, column: 51)
!9070 = !DILocation(line: 547, column: 4, scope: !9069)
!9071 = !DILocation(line: 548, column: 3, scope: !9069)
!9072 = !DILocation(line: 551, column: 32, scope: !9038)
!9073 = !DILocation(line: 551, column: 37, scope: !9038)
!9074 = !DILocation(line: 551, column: 2, scope: !9038)
!9075 = !DILocation(line: 554, column: 6, scope: !9038)
!9076 = !DILocation(line: 562, column: 1, scope: !9038)
!9077 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1197, file: !1197, line: 410, type: !9078, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9080)
!9078 = !DISubroutineType(types: !9079)
!9079 = !{!109, !1055, !882}
!9080 = !{!9081, !9082, !9083, !9085}
!9081 = !DILocalVariable(name: "dev", arg: 1, scope: !9077, file: !1197, line: 410, type: !1055)
!9082 = !DILocalVariable(name: "value", arg: 2, scope: !9077, file: !1197, line: 410, type: !882)
!9083 = !DILocalVariable(name: "cfg", scope: !9077, file: !1197, line: 412, type: !9084)
!9084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 32)
!9085 = !DILocalVariable(name: "gpio", scope: !9077, file: !1197, line: 413, type: !1128)
!9086 = !DILocation(line: 0, scope: !9077)
!9087 = !DILocation(line: 412, column: 45, scope: !9077)
!9088 = !DILocation(line: 413, column: 44, scope: !9077)
!9089 = !DILocation(line: 415, column: 11, scope: !9077)
!9090 = !DILocation(line: 415, column: 9, scope: !9077)
!9091 = !DILocation(line: 417, column: 2, scope: !9077)
!9092 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1197, file: !1197, line: 420, type: !1080, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9093)
!9093 = !{!9094, !9095, !9096, !9097, !9098, !9099}
!9094 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !1197, line: 420, type: !1055)
!9095 = !DILocalVariable(name: "mask", arg: 2, scope: !9092, file: !1197, line: 421, type: !1082)
!9096 = !DILocalVariable(name: "value", arg: 3, scope: !9092, file: !1197, line: 422, type: !1077)
!9097 = !DILocalVariable(name: "cfg", scope: !9092, file: !1197, line: 424, type: !9084)
!9098 = !DILocalVariable(name: "gpio", scope: !9092, file: !1197, line: 425, type: !1128)
!9099 = !DILocalVariable(name: "port_value", scope: !9092, file: !1197, line: 426, type: !110)
!9100 = !DILocation(line: 0, scope: !9092)
!9101 = !DILocation(line: 424, column: 45, scope: !9092)
!9102 = !DILocation(line: 425, column: 44, scope: !9092)
!9103 = !DILocation(line: 430, column: 15, scope: !9092)
!9104 = !DILocation(line: 431, column: 46, scope: !9092)
!9105 = !DILocation(line: 431, column: 44, scope: !9092)
!9106 = !DILocation(line: 431, column: 61, scope: !9092)
!9107 = !DILocation(line: 431, column: 53, scope: !9092)
!9108 = !DILocation(line: 431, column: 2, scope: !9092)
!9109 = !DILocation(line: 435, column: 2, scope: !9092)
!9110 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1197, file: !1197, line: 438, type: !1085, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9111)
!9111 = !{!9112, !9113, !9114, !9115}
!9112 = !DILocalVariable(name: "dev", arg: 1, scope: !9110, file: !1197, line: 438, type: !1055)
!9113 = !DILocalVariable(name: "pins", arg: 2, scope: !9110, file: !1197, line: 439, type: !1082)
!9114 = !DILocalVariable(name: "cfg", scope: !9110, file: !1197, line: 441, type: !9084)
!9115 = !DILocalVariable(name: "gpio", scope: !9110, file: !1197, line: 442, type: !1128)
!9116 = !DILocation(line: 0, scope: !9110)
!9117 = !DILocation(line: 441, column: 45, scope: !9110)
!9118 = !DILocation(line: 442, column: 44, scope: !9110)
!9119 = !DILocation(line: 448, column: 2, scope: !9110)
!9120 = !DILocation(line: 450, column: 2, scope: !9110)
!9121 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1197, file: !1197, line: 453, type: !1085, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9122)
!9122 = !{!9123, !9124, !9125, !9126}
!9123 = !DILocalVariable(name: "dev", arg: 1, scope: !9121, file: !1197, line: 453, type: !1055)
!9124 = !DILocalVariable(name: "pins", arg: 2, scope: !9121, file: !1197, line: 454, type: !1082)
!9125 = !DILocalVariable(name: "cfg", scope: !9121, file: !1197, line: 456, type: !9084)
!9126 = !DILocalVariable(name: "gpio", scope: !9121, file: !1197, line: 457, type: !1128)
!9127 = !DILocation(line: 0, scope: !9121)
!9128 = !DILocation(line: 456, column: 45, scope: !9121)
!9129 = !DILocation(line: 457, column: 44, scope: !9121)
!9130 = !DILocation(line: 467, column: 2, scope: !9121)
!9131 = !DILocation(line: 470, column: 2, scope: !9121)
!9132 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1197, file: !1197, line: 473, type: !1085, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136, !9137}
!9134 = !DILocalVariable(name: "dev", arg: 1, scope: !9132, file: !1197, line: 473, type: !1055)
!9135 = !DILocalVariable(name: "pins", arg: 2, scope: !9132, file: !1197, line: 474, type: !1082)
!9136 = !DILocalVariable(name: "cfg", scope: !9132, file: !1197, line: 476, type: !9084)
!9137 = !DILocalVariable(name: "gpio", scope: !9132, file: !1197, line: 477, type: !1128)
!9138 = !DILocation(line: 0, scope: !9132)
!9139 = !DILocation(line: 476, column: 45, scope: !9132)
!9140 = !DILocation(line: 477, column: 44, scope: !9132)
!9141 = !DILocation(line: 484, column: 2, scope: !9132)
!9142 = !DILocation(line: 487, column: 2, scope: !9132)
!9143 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1197, file: !1197, line: 594, type: !1091, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9144)
!9144 = !{!9145, !9146, !9147, !9148, !9149, !9150, !9152, !9153, !9154}
!9145 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !1197, line: 594, type: !1055)
!9146 = !DILocalVariable(name: "pin", arg: 2, scope: !9143, file: !1197, line: 595, type: !1070)
!9147 = !DILocalVariable(name: "mode", arg: 3, scope: !9143, file: !1197, line: 596, type: !1029)
!9148 = !DILocalVariable(name: "trig", arg: 4, scope: !9143, file: !1197, line: 597, type: !1035)
!9149 = !DILocalVariable(name: "cfg", scope: !9143, file: !1197, line: 599, type: !9084)
!9150 = !DILocalVariable(name: "data", scope: !9143, file: !1197, line: 600, type: !9151)
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!9152 = !DILocalVariable(name: "edge", scope: !9143, file: !1197, line: 601, type: !109)
!9153 = !DILocalVariable(name: "err", scope: !9143, file: !1197, line: 602, type: !109)
!9154 = !DILabel(scope: !9143, name: "exit", file: !1197, line: 643)
!9155 = !DILocation(line: 0, scope: !9143)
!9156 = !DILocation(line: 599, column: 45, scope: !9143)
!9157 = !DILocation(line: 604, column: 6, scope: !9143)
!9158 = !DILocation(line: 605, column: 34, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9160, file: !1197, line: 605, column: 7)
!9160 = distinct !DILexicalBlock(scope: !9161, file: !1197, line: 604, column: 38)
!9161 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 604, column: 6)
!9162 = !DILocation(line: 605, column: 7, scope: !9159)
!9163 = !DILocation(line: 605, column: 47, scope: !9159)
!9164 = !DILocation(line: 605, column: 39, scope: !9159)
!9165 = !DILocation(line: 605, column: 7, scope: !9160)
!9166 = !DILocation(line: 606, column: 4, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9159, file: !1197, line: 605, column: 53)
!9168 = !DILocation(line: 607, column: 4, scope: !9167)
!9169 = !DILocation(line: 608, column: 4, scope: !9167)
!9170 = !DILocation(line: 609, column: 3, scope: !9167)
!9171 = !DILocation(line: 600, column: 38, scope: !9143)
!9172 = !DILocation(line: 620, column: 30, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 620, column: 6)
!9174 = !DILocation(line: 620, column: 6, scope: !9173)
!9175 = !DILocation(line: 620, column: 57, scope: !9173)
!9176 = !DILocation(line: 620, column: 6, scope: !9143)
!9177 = !DILocation(line: 625, column: 29, scope: !9143)
!9178 = !DILocation(line: 625, column: 2, scope: !9143)
!9179 = !DILocation(line: 627, column: 2, scope: !9143)
!9180 = !DILocation(line: 630, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9143, file: !1197, line: 627, column: 16)
!9182 = !DILocation(line: 633, column: 3, scope: !9181)
!9183 = !DILocation(line: 636, column: 3, scope: !9181)
!9184 = !DILocation(line: 639, column: 2, scope: !9143)
!9185 = !DILocation(line: 641, column: 2, scope: !9143)
!9186 = !DILocation(line: 643, column: 1, scope: !9143)
!9187 = !DILocation(line: 644, column: 2, scope: !9143)
!9188 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1197, file: !1197, line: 647, type: !1095, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9189)
!9189 = !{!9190, !9191, !9192, !9193}
!9190 = !DILocalVariable(name: "dev", arg: 1, scope: !9188, file: !1197, line: 647, type: !1055)
!9191 = !DILocalVariable(name: "callback", arg: 2, scope: !9188, file: !1197, line: 648, type: !1097)
!9192 = !DILocalVariable(name: "set", arg: 3, scope: !9188, file: !1197, line: 649, type: !347)
!9193 = !DILocalVariable(name: "data", scope: !9188, file: !1197, line: 651, type: !9151)
!9194 = !DILocation(line: 0, scope: !9188)
!9195 = !DILocation(line: 651, column: 38, scope: !9188)
!9196 = !DILocation(line: 653, column: 37, scope: !9188)
!9197 = !DILocation(line: 653, column: 9, scope: !9188)
!9198 = !DILocation(line: 653, column: 2, scope: !9188)
!9199 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9200, file: !9200, line: 38, type: !9201, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9204)
!9200 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!109, !9203, !1097, !347}
!9203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!9204 = !{!9205, !9206, !9207}
!9205 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9199, file: !9200, line: 38, type: !9203)
!9206 = !DILocalVariable(name: "callback", arg: 2, scope: !9199, file: !9200, line: 39, type: !1097)
!9207 = !DILocalVariable(name: "set", arg: 3, scope: !9199, file: !9200, line: 40, type: !347)
!9208 = !DILocation(line: 0, scope: !9199)
!9209 = !DILocation(line: 42, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9211, file: !9200, line: 42, column: 2)
!9211 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 42, column: 2)
!9212 = !DILocation(line: 42, column: 2, scope: !9211)
!9213 = !DILocation(line: 42, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9210, file: !9200, line: 42, column: 2)
!9215 = !DILocation(line: 43, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !9200, line: 43, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 43, column: 2)
!9218 = !DILocation(line: 43, column: 2, scope: !9217)
!9219 = !DILocation(line: 43, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !9200, line: 43, column: 2)
!9221 = !DILocation(line: 45, column: 7, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 45, column: 6)
!9223 = !DILocation(line: 45, column: 6, scope: !9199)
!9224 = !DILocation(line: 46, column: 56, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !9200, line: 46, column: 7)
!9226 = distinct !DILexicalBlock(scope: !9222, file: !9200, line: 45, column: 38)
!9227 = !DILocation(line: 46, column: 8, scope: !9225)
!9228 = !DILocation(line: 46, column: 7, scope: !9226)
!9229 = !DILocation(line: 51, column: 13, scope: !9222)
!9230 = !DILocation(line: 56, column: 43, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !9200, line: 55, column: 11)
!9232 = distinct !DILexicalBlock(scope: !9199, file: !9200, line: 55, column: 6)
!9233 = !DILocation(line: 56, column: 3, scope: !9231)
!9234 = !DILocation(line: 57, column: 2, scope: !9231)
!9235 = !DILocation(line: 60, column: 1, scope: !9199)
!9236 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1102, file: !1102, line: 261, type: !9237, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9239)
!9237 = !DISubroutineType(types: !9238)
!9238 = !{!347, !9203}
!9239 = !{!9240}
!9240 = !DILocalVariable(name: "list", arg: 1, scope: !9236, file: !1102, line: 261, type: !9203)
!9241 = !DILocation(line: 0, scope: !9236)
!9242 = !DILocation(line: 261, column: 1, scope: !9236)
!9243 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1102, file: !1102, line: 417, type: !9244, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9246)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!347, !9203, !1273}
!9246 = !{!9247, !9248, !9249, !9250}
!9247 = !DILocalVariable(name: "list", arg: 1, scope: !9243, file: !1102, line: 417, type: !9203)
!9248 = !DILocalVariable(name: "node", arg: 2, scope: !9243, file: !1102, line: 417, type: !1273)
!9249 = !DILocalVariable(name: "prev", scope: !9243, file: !1102, line: 417, type: !1273)
!9250 = !DILocalVariable(name: "test", scope: !9243, file: !1102, line: 417, type: !1273)
!9251 = !DILocation(line: 0, scope: !9243)
!9252 = !DILocation(line: 417, column: 1, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9243, file: !1102, line: 417, column: 1)
!9254 = !DILocation(line: 417, column: 1, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9253, file: !1102, line: 417, column: 1)
!9256 = !DILocation(line: 417, column: 1, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !1102, line: 417, column: 1)
!9258 = distinct !DILexicalBlock(scope: !9255, file: !1102, line: 417, column: 1)
!9259 = !DILocation(line: 417, column: 1, scope: !9258)
!9260 = distinct !{!9260, !9252, !9252}
!9261 = !DILocation(line: 417, column: 1, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9257, file: !1102, line: 417, column: 1)
!9263 = !DILocation(line: 417, column: 1, scope: !9243)
!9264 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1102, file: !1102, line: 298, type: !9265, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9267)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{null, !9203, !1273}
!9267 = !{!9268, !9269}
!9268 = !DILocalVariable(name: "list", arg: 1, scope: !9264, file: !1102, line: 298, type: !9203)
!9269 = !DILocalVariable(name: "node", arg: 2, scope: !9264, file: !1102, line: 298, type: !1273)
!9270 = !DILocation(line: 0, scope: !9264)
!9271 = !DILocation(line: 298, column: 1, scope: !9264)
!9272 = !DILocation(line: 298, column: 1, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9264, file: !1102, line: 298, column: 1)
!9274 = !DILocation(line: 298, column: 1, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9273, file: !1102, line: 298, column: 1)
!9276 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1102, file: !1102, line: 231, type: !9277, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9279)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!1273, !9203}
!9279 = !{!9280}
!9280 = !DILocalVariable(name: "list", arg: 1, scope: !9276, file: !1102, line: 231, type: !9203)
!9281 = !DILocation(line: 0, scope: !9276)
!9282 = !DILocation(line: 233, column: 15, scope: !9276)
!9283 = !DILocation(line: 233, column: 2, scope: !9276)
!9284 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1102, file: !1102, line: 209, type: !9285, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{null, !1273, !1273}
!9287 = !{!9288, !9289}
!9288 = !DILocalVariable(name: "parent", arg: 1, scope: !9284, file: !1102, line: 209, type: !1273)
!9289 = !DILocalVariable(name: "child", arg: 2, scope: !9284, file: !1102, line: 209, type: !1273)
!9290 = !DILocation(line: 0, scope: !9284)
!9291 = !DILocation(line: 211, column: 10, scope: !9284)
!9292 = !DILocation(line: 211, column: 15, scope: !9284)
!9293 = !DILocation(line: 212, column: 1, scope: !9284)
!9294 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1102, file: !1102, line: 214, type: !9265, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9295)
!9295 = !{!9296, !9297}
!9296 = !DILocalVariable(name: "list", arg: 1, scope: !9294, file: !1102, line: 214, type: !9203)
!9297 = !DILocalVariable(name: "node", arg: 2, scope: !9294, file: !1102, line: 214, type: !1273)
!9298 = !DILocation(line: 0, scope: !9294)
!9299 = !DILocation(line: 216, column: 8, scope: !9294)
!9300 = !DILocation(line: 216, column: 13, scope: !9294)
!9301 = !DILocation(line: 217, column: 1, scope: !9294)
!9302 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1102, file: !1102, line: 243, type: !9277, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9303)
!9303 = !{!9304}
!9304 = !DILocalVariable(name: "list", arg: 1, scope: !9302, file: !1102, line: 243, type: !9203)
!9305 = !DILocation(line: 0, scope: !9302)
!9306 = !DILocation(line: 245, column: 15, scope: !9302)
!9307 = !DILocation(line: 245, column: 2, scope: !9302)
!9308 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1102, file: !1102, line: 219, type: !9265, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9309)
!9309 = !{!9310, !9311}
!9310 = !DILocalVariable(name: "list", arg: 1, scope: !9308, file: !1102, line: 219, type: !9203)
!9311 = !DILocalVariable(name: "node", arg: 2, scope: !9308, file: !1102, line: 219, type: !1273)
!9312 = !DILocation(line: 0, scope: !9308)
!9313 = !DILocation(line: 221, column: 8, scope: !9308)
!9314 = !DILocation(line: 221, column: 13, scope: !9308)
!9315 = !DILocation(line: 222, column: 1, scope: !9308)
!9316 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1102, file: !1102, line: 401, type: !9317, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9319)
!9317 = !DISubroutineType(types: !9318)
!9318 = !{null, !9203, !1273, !1273}
!9319 = !{!9320, !9321, !9322}
!9320 = !DILocalVariable(name: "list", arg: 1, scope: !9316, file: !1102, line: 401, type: !9203)
!9321 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9316, file: !1102, line: 401, type: !1273)
!9322 = !DILocalVariable(name: "node", arg: 3, scope: !9316, file: !1102, line: 401, type: !1273)
!9323 = !DILocation(line: 0, scope: !9316)
!9324 = !DILocation(line: 401, column: 1, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9316, file: !1102, line: 401, column: 1)
!9326 = !DILocation(line: 0, scope: !9325)
!9327 = !DILocation(line: 401, column: 1, scope: !9316)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9325, file: !1102, line: 401, column: 1)
!9330 = !DILocation(line: 401, column: 1, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9329, file: !1102, line: 401, column: 1)
!9332 = !DILocation(line: 401, column: 1, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9331, file: !1102, line: 401, column: 1)
!9334 = !DILocation(line: 401, column: 1, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9325, file: !1102, line: 401, column: 1)
!9336 = !DILocation(line: 401, column: 1, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !1102, line: 401, column: 1)
!9338 = !DILocation(line: 401, column: 1, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9337, file: !1102, line: 401, column: 1)
!9340 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1102, file: !1102, line: 285, type: !9341, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!1273, !1273}
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "node", arg: 1, scope: !9340, file: !1102, line: 285, type: !1273)
!9345 = !DILocation(line: 0, scope: !9340)
!9346 = !DILocation(line: 285, column: 1, scope: !9340)
!9347 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1102, file: !1102, line: 274, type: !9341, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9348)
!9348 = !{!9349}
!9349 = !DILocalVariable(name: "node", arg: 1, scope: !9347, file: !1102, line: 274, type: !1273)
!9350 = !DILocation(line: 0, scope: !9347)
!9351 = !DILocation(line: 274, column: 1, scope: !9347)
!9352 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1102, file: !1102, line: 204, type: !9341, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9353)
!9353 = !{!9354}
!9354 = !DILocalVariable(name: "node", arg: 1, scope: !9352, file: !1102, line: 204, type: !1273)
!9355 = !DILocation(line: 0, scope: !9352)
!9356 = !DILocation(line: 206, column: 15, scope: !9352)
!9357 = !DILocation(line: 206, column: 2, scope: !9352)
!9358 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1197, file: !1197, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9359)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "pin", arg: 1, scope: !9358, file: !1197, line: 342, type: !109)
!9361 = !DILocalVariable(name: "line", scope: !9358, file: !1197, line: 344, type: !110)
!9362 = !DILocalVariable(name: "port", scope: !9358, file: !1197, line: 345, type: !109)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 344, column: 18, scope: !9358)
!9365 = !{i32 983040, i32 0}
!9366 = !DILocation(line: 356, column: 9, scope: !9358)
!9367 = !DILocation(line: 370, column: 2, scope: !9358)
!9368 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1197, file: !1197, line: 37, type: !748, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9369)
!9369 = !{!9370, !9371, !9372}
!9370 = !DILocalVariable(name: "line", arg: 1, scope: !9368, file: !1197, line: 37, type: !109)
!9371 = !DILocalVariable(name: "arg", arg: 2, scope: !9368, file: !1197, line: 37, type: !107)
!9372 = !DILocalVariable(name: "data", scope: !9368, file: !1197, line: 39, type: !9151)
!9373 = !DILocation(line: 0, scope: !9368)
!9374 = !DILocation(line: 41, column: 29, scope: !9368)
!9375 = !DILocation(line: 41, column: 39, scope: !9368)
!9376 = !DILocation(line: 41, column: 44, scope: !9368)
!9377 = !DILocation(line: 41, column: 2, scope: !9368)
!9378 = !DILocation(line: 42, column: 1, scope: !9368)
!9379 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1197, file: !1197, line: 376, type: !9380, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9382)
!9380 = !DISubroutineType(types: !9381)
!9381 = !{!109, !109, !109}
!9382 = !{!9383, !9384, !9385, !9387, !9388}
!9383 = !DILocalVariable(name: "port", arg: 1, scope: !9379, file: !1197, line: 376, type: !109)
!9384 = !DILocalVariable(name: "pin", arg: 2, scope: !9379, file: !1197, line: 376, type: !109)
!9385 = !DILocalVariable(name: "clk", scope: !9379, file: !1197, line: 386, type: !9386)
!9386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!9387 = !DILocalVariable(name: "pclken", scope: !9379, file: !1197, line: 387, type: !1316)
!9388 = !DILocalVariable(name: "ret", scope: !9379, file: !1197, line: 396, type: !109)
!9389 = !DILocation(line: 0, scope: !9379)
!9390 = !DILocation(line: 387, column: 2, scope: !9379)
!9391 = !DILocation(line: 387, column: 22, scope: !9379)
!9392 = !DILocation(line: 399, column: 8, scope: !9379)
!9393 = !DILocation(line: 400, column: 10, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9379, file: !1197, line: 400, column: 6)
!9395 = !DILocation(line: 400, column: 6, scope: !9379)
!9396 = !DILocation(line: 405, column: 2, scope: !9379)
!9397 = !DILocation(line: 407, column: 2, scope: !9379)
!9398 = !DILocation(line: 408, column: 1, scope: !9379)
!9399 = distinct !DISubprogram(name: "clock_control_on", scope: !833, file: !833, line: 123, type: !1162, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "dev", arg: 1, scope: !9399, file: !833, line: 123, type: !1055)
!9402 = !DILocalVariable(name: "sys", arg: 2, scope: !9399, file: !833, line: 124, type: !926)
!9403 = !DILocalVariable(name: "api", scope: !9399, file: !833, line: 126, type: !1155)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 127, column: 49, scope: !9399)
!9406 = !DILocation(line: 129, column: 14, scope: !9399)
!9407 = !DILocation(line: 129, column: 9, scope: !9399)
!9408 = !DILocation(line: 129, column: 2, scope: !9399)
!9409 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1197, file: !1197, line: 311, type: !8515, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9410)
!9410 = !{!9411, !9412, !9413}
!9411 = !DILocalVariable(name: "port", arg: 1, scope: !9409, file: !1197, line: 311, type: !109)
!9412 = !DILocalVariable(name: "pin", arg: 2, scope: !9409, file: !1197, line: 311, type: !109)
!9413 = !DILocalVariable(name: "line", scope: !9409, file: !1197, line: 313, type: !110)
!9414 = !DILocation(line: 0, scope: !9409)
!9415 = !DILocation(line: 313, column: 18, scope: !9409)
!9416 = !DILocation(line: 337, column: 2, scope: !9409)
!9417 = !DILocation(line: 340, column: 1, scope: !9409)
!9418 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1197, file: !1197, line: 295, type: !9419, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9421)
!9419 = !DISubroutineType(types: !9420)
!9420 = !{!110, !109}
!9421 = !{!9422}
!9422 = !DILocalVariable(name: "pin", arg: 1, scope: !9418, file: !1197, line: 295, type: !109)
!9423 = !DILocation(line: 0, scope: !9418)
!9424 = !DILocation(line: 307, column: 46, scope: !9418)
!9425 = !DILocation(line: 307, column: 27, scope: !9418)
!9426 = !DILocation(line: 307, column: 32, scope: !9418)
!9427 = !DILocation(line: 307, column: 14, scope: !9418)
!9428 = !DILocation(line: 307, column: 39, scope: !9418)
!9429 = !DILocation(line: 307, column: 2, scope: !9418)
!9430 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6118, file: !6118, line: 671, type: !9431, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9433)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{null, !110, !110}
!9433 = !{!9434, !9435}
!9434 = !DILocalVariable(name: "Port", arg: 1, scope: !9430, file: !6118, line: 671, type: !110)
!9435 = !DILocalVariable(name: "Line", arg: 2, scope: !9430, file: !6118, line: 671, type: !110)
!9436 = !DILocation(line: 0, scope: !9430)
!9437 = !DILocation(line: 673, column: 3, scope: !9430)
!9438 = !DILocalVariable(name: "value", arg: 1, scope: !9439, file: !6418, line: 373, type: !110)
!9439 = distinct !DISubprogram(name: "__RBIT", scope: !6418, file: !6418, line: 373, type: !7705, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9440)
!9440 = !{!9438, !9441}
!9441 = !DILocalVariable(name: "result", scope: !9439, file: !6418, line: 375, type: !110)
!9442 = !DILocation(line: 0, scope: !9439, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 673, column: 3, scope: !9430)
!9444 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9443)
!9445 = !{i64 3503748}
!9446 = !DILocalVariable(name: "value", arg: 1, scope: !9447, file: !6418, line: 403, type: !110)
!9447 = distinct !DISubprogram(name: "__CLZ", scope: !6418, file: !6418, line: 403, type: !9448, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9450)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!180, !110}
!9450 = !{!9446}
!9451 = !DILocation(line: 0, scope: !9447, inlinedAt: !9452)
!9452 = distinct !DILocation(line: 673, column: 3, scope: !9430)
!9453 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9452)
!9454 = !DILocation(line: 674, column: 1, scope: !9430)
!9455 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9200, file: !9200, line: 69, type: !9456, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9458)
!9456 = !DISubroutineType(types: !9457)
!9457 = !{null, !9203, !1055, !110}
!9458 = !{!9459, !9460, !9461, !9462, !9463}
!9459 = !DILocalVariable(name: "list", arg: 1, scope: !9455, file: !9200, line: 69, type: !9203)
!9460 = !DILocalVariable(name: "port", arg: 2, scope: !9455, file: !9200, line: 70, type: !1055)
!9461 = !DILocalVariable(name: "pins", arg: 3, scope: !9455, file: !9200, line: 71, type: !110)
!9462 = !DILocalVariable(name: "cb", scope: !9455, file: !9200, line: 73, type: !1097)
!9463 = !DILocalVariable(name: "tmp", scope: !9455, file: !9200, line: 73, type: !1097)
!9464 = !DILocation(line: 0, scope: !9455)
!9465 = !DILocation(line: 75, column: 2, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9455, file: !9200, line: 75, column: 2)
!9467 = !DILocation(line: 0, scope: !9466)
!9468 = !DILocation(line: 76, column: 11, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !9200, line: 76, column: 7)
!9470 = distinct !DILexicalBlock(scope: !9471, file: !9200, line: 75, column: 57)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !9200, line: 75, column: 2)
!9472 = !DILocation(line: 76, column: 20, scope: !9469)
!9473 = !DILocation(line: 76, column: 7, scope: !9470)
!9474 = !DILocation(line: 77, column: 4, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9476, file: !9200, line: 77, column: 4)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !9200, line: 77, column: 4)
!9477 = distinct !DILexicalBlock(scope: !9469, file: !9200, line: 76, column: 28)
!9478 = !DILocation(line: 77, column: 4, scope: !9476)
!9479 = !DILocation(line: 77, column: 4, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9475, file: !9200, line: 77, column: 4)
!9481 = !DILocation(line: 78, column: 4, scope: !9477)
!9482 = !DILocation(line: 79, column: 3, scope: !9477)
!9483 = !DILocation(line: 75, column: 2, scope: !9471)
!9484 = !DILocation(line: 81, column: 1, scope: !9455)
!9485 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6118, file: !6118, line: 710, type: !7705, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9486)
!9486 = !{!9487}
!9487 = !DILocalVariable(name: "Line", arg: 1, scope: !9485, file: !6118, line: 710, type: !110)
!9488 = !DILocation(line: 0, scope: !9485)
!9489 = !DILocation(line: 712, column: 21, scope: !9485)
!9490 = !DILocation(line: 0, scope: !9439, inlinedAt: !9491)
!9491 = distinct !DILocation(line: 712, column: 76, scope: !9485)
!9492 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9491)
!9493 = !DILocation(line: 0, scope: !9447, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 712, column: 76, scope: !9485)
!9495 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9494)
!9496 = !DILocation(line: 712, column: 73, scope: !9485)
!9497 = !DILocation(line: 712, column: 3, scope: !9485)
!9498 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9499, file: !9499, line: 910, type: !9500, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9502)
!9499 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9500 = !DISubroutineType(types: !9501)
!9501 = !{null, !1128, !110}
!9502 = !{!9503, !9504}
!9503 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9498, file: !9499, line: 910, type: !1128)
!9504 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9498, file: !9499, line: 910, type: !110)
!9505 = !DILocation(line: 0, scope: !9498)
!9506 = !DILocation(line: 912, column: 3, scope: !9498)
!9507 = !DILocation(line: 913, column: 1, scope: !9498)
!9508 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9499, file: !9499, line: 823, type: !9509, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9511)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{!110, !1128}
!9511 = !{!9512}
!9512 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9508, file: !9499, line: 823, type: !1128)
!9513 = !DILocation(line: 0, scope: !9508)
!9514 = !DILocation(line: 825, column: 21, scope: !9508)
!9515 = !DILocation(line: 825, column: 3, scope: !9508)
!9516 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9499, file: !9499, line: 812, type: !9500, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9517)
!9517 = !{!9518, !9519}
!9518 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9516, file: !9499, line: 812, type: !1128)
!9519 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9516, file: !9499, line: 812, type: !110)
!9520 = !DILocation(line: 0, scope: !9516)
!9521 = !DILocation(line: 814, column: 3, scope: !9516)
!9522 = !DILocation(line: 815, column: 1, scope: !9516)
!9523 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9499, file: !9499, line: 771, type: !9509, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9524)
!9524 = !{!9525}
!9525 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9523, file: !9499, line: 771, type: !1128)
!9526 = !DILocation(line: 0, scope: !9523)
!9527 = !DILocation(line: 773, column: 21, scope: !9523)
!9528 = !DILocation(line: 773, column: 3, scope: !9523)
!9529 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1197, file: !1197, line: 47, type: !9530, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9532)
!9530 = !DISubroutineType(types: !9531)
!9531 = !{!109, !1071, !281}
!9532 = !{!9533, !9534}
!9533 = !DILocalVariable(name: "flags", arg: 1, scope: !9529, file: !1197, line: 47, type: !1071)
!9534 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9529, file: !1197, line: 47, type: !281)
!9535 = !DILocation(line: 0, scope: !9529)
!9536 = !DILocation(line: 50, column: 13, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9529, file: !1197, line: 50, column: 6)
!9538 = !DILocation(line: 50, column: 28, scope: !9537)
!9539 = !DILocation(line: 50, column: 6, scope: !9529)
!9540 = !DILocation(line: 53, column: 11, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9537, file: !1197, line: 50, column: 34)
!9542 = !DILocation(line: 55, column: 14, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9541, file: !1197, line: 55, column: 7)
!9544 = !DILocation(line: 55, column: 35, scope: !9543)
!9545 = !DILocation(line: 55, column: 7, scope: !9541)
!9546 = !DILocation(line: 56, column: 14, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !1197, line: 56, column: 8)
!9548 = distinct !DILexicalBlock(scope: !9543, file: !1197, line: 55, column: 41)
!9549 = !DILocation(line: 56, column: 8, scope: !9548)
!9550 = !DILocation(line: 0, scope: !9543)
!9551 = !DILocation(line: 66, column: 14, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9541, file: !1197, line: 66, column: 7)
!9553 = !DILocation(line: 66, column: 30, scope: !9552)
!9554 = !DILocation(line: 66, column: 7, scope: !9541)
!9555 = !DILocation(line: 67, column: 12, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9552, file: !1197, line: 66, column: 36)
!9557 = !DILocation(line: 68, column: 3, scope: !9556)
!9558 = !DILocation(line: 68, column: 21, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9552, file: !1197, line: 68, column: 14)
!9560 = !DILocation(line: 68, column: 39, scope: !9559)
!9561 = !DILocation(line: 68, column: 14, scope: !9552)
!9562 = !DILocation(line: 69, column: 12, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9559, file: !1197, line: 68, column: 45)
!9564 = !DILocation(line: 70, column: 3, scope: !9563)
!9565 = !DILocation(line: 72, column: 21, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9537, file: !1197, line: 72, column: 14)
!9567 = !DILocation(line: 72, column: 35, scope: !9566)
!9568 = !DILocation(line: 72, column: 14, scope: !9537)
!9569 = !DILocation(line: 77, column: 14, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1197, line: 77, column: 7)
!9571 = distinct !DILexicalBlock(scope: !9566, file: !1197, line: 72, column: 41)
!9572 = !DILocation(line: 77, column: 30, scope: !9570)
!9573 = !DILocation(line: 77, column: 7, scope: !9571)
!9574 = !DILocation(line: 0, scope: !9537)
!9575 = !DILocation(line: 90, column: 1, scope: !9529)
!9576 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1197, file: !1197, line: 157, type: !9577, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9579)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{null, !1055, !109, !109, !109}
!9579 = !{!9580, !9581, !9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590}
!9580 = !DILocalVariable(name: "dev", arg: 1, scope: !9576, file: !1197, line: 157, type: !1055)
!9581 = !DILocalVariable(name: "pin", arg: 2, scope: !9576, file: !1197, line: 157, type: !109)
!9582 = !DILocalVariable(name: "conf", arg: 3, scope: !9576, file: !1197, line: 158, type: !109)
!9583 = !DILocalVariable(name: "func", arg: 4, scope: !9576, file: !1197, line: 158, type: !109)
!9584 = !DILocalVariable(name: "cfg", scope: !9576, file: !1197, line: 160, type: !9084)
!9585 = !DILocalVariable(name: "gpio", scope: !9576, file: !1197, line: 161, type: !1128)
!9586 = !DILocalVariable(name: "pin_ll", scope: !9576, file: !1197, line: 163, type: !109)
!9587 = !DILocalVariable(name: "mode", scope: !9576, file: !1197, line: 227, type: !32)
!9588 = !DILocalVariable(name: "otype", scope: !9576, file: !1197, line: 227, type: !32)
!9589 = !DILocalVariable(name: "ospeed", scope: !9576, file: !1197, line: 227, type: !32)
!9590 = !DILocalVariable(name: "pupd", scope: !9576, file: !1197, line: 227, type: !32)
!9591 = !DILocation(line: 0, scope: !9576)
!9592 = !DILocation(line: 160, column: 45, scope: !9576)
!9593 = !DILocation(line: 161, column: 44, scope: !9576)
!9594 = !DILocation(line: 163, column: 15, scope: !9576)
!9595 = !DILocation(line: 229, column: 14, scope: !9576)
!9596 = !DILocation(line: 246, column: 47, scope: !9576)
!9597 = !DILocation(line: 246, column: 2, scope: !9576)
!9598 = !DILocation(line: 248, column: 43, scope: !9576)
!9599 = !DILocation(line: 248, column: 2, scope: !9576)
!9600 = !DILocation(line: 250, column: 40, scope: !9576)
!9601 = !DILocation(line: 250, column: 2, scope: !9576)
!9602 = !DILocation(line: 252, column: 11, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9576, file: !1197, line: 252, column: 6)
!9604 = !DILocation(line: 252, column: 6, scope: !9576)
!9605 = !DILocation(line: 253, column: 11, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !1197, line: 253, column: 7)
!9607 = distinct !DILexicalBlock(scope: !9603, file: !1197, line: 252, column: 36)
!9608 = !DILocation(line: 253, column: 7, scope: !9607)
!9609 = !DILocation(line: 254, column: 4, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9606, file: !1197, line: 253, column: 16)
!9611 = !DILocation(line: 255, column: 3, scope: !9610)
!9612 = !DILocation(line: 256, column: 4, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9606, file: !1197, line: 255, column: 10)
!9614 = !DILocation(line: 260, column: 40, scope: !9576)
!9615 = !DILocation(line: 260, column: 2, scope: !9576)
!9616 = !DILocation(line: 265, column: 1, scope: !9576)
!9617 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1197, file: !1197, line: 137, type: !9419, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9618)
!9618 = !{!9619, !9620}
!9619 = !DILocalVariable(name: "pin", arg: 1, scope: !9617, file: !1197, line: 137, type: !109)
!9620 = !DILocalVariable(name: "pinval", scope: !9617, file: !1197, line: 139, type: !110)
!9621 = !DILocation(line: 0, scope: !9617)
!9622 = !DILocation(line: 149, column: 13, scope: !9617)
!9623 = !DILocation(line: 151, column: 2, scope: !9617)
!9624 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9499, file: !9499, line: 342, type: !9625, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{null, !1128, !110, !110}
!9627 = !{!9628, !9629, !9630}
!9628 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9624, file: !9499, line: 342, type: !1128)
!9629 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9624, file: !9499, line: 342, type: !110)
!9630 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9624, file: !9499, line: 342, type: !110)
!9631 = !DILocation(line: 0, scope: !9624)
!9632 = !DILocation(line: 344, column: 3, scope: !9624)
!9633 = !DILocation(line: 345, column: 1, scope: !9624)
!9634 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9499, file: !9499, line: 413, type: !9625, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9635)
!9635 = !{!9636, !9637, !9638}
!9636 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9634, file: !9499, line: 413, type: !1128)
!9637 = !DILocalVariable(name: "Pin", arg: 2, scope: !9634, file: !9499, line: 413, type: !110)
!9638 = !DILocalVariable(name: "Speed", arg: 3, scope: !9634, file: !9499, line: 413, type: !110)
!9639 = !DILocation(line: 0, scope: !9634)
!9640 = !DILocation(line: 415, column: 3, scope: !9634)
!9641 = !DILocation(line: 0, scope: !9439, inlinedAt: !9642)
!9642 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9643 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9642)
!9644 = !DILocation(line: 0, scope: !9447, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9646 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9645)
!9647 = !DILocation(line: 0, scope: !9439, inlinedAt: !9648)
!9648 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9649 = !DILocation(line: 0, scope: !9447, inlinedAt: !9650)
!9650 = distinct !DILocation(line: 415, column: 3, scope: !9634)
!9651 = !DILocation(line: 417, column: 1, scope: !9634)
!9652 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9499, file: !9499, line: 484, type: !9625, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9653)
!9653 = !{!9654, !9655, !9656}
!9654 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9652, file: !9499, line: 484, type: !1128)
!9655 = !DILocalVariable(name: "Pin", arg: 2, scope: !9652, file: !9499, line: 484, type: !110)
!9656 = !DILocalVariable(name: "Pull", arg: 3, scope: !9652, file: !9499, line: 484, type: !110)
!9657 = !DILocation(line: 0, scope: !9652)
!9658 = !DILocation(line: 486, column: 3, scope: !9652)
!9659 = !DILocation(line: 0, scope: !9439, inlinedAt: !9660)
!9660 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9661 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9660)
!9662 = !DILocation(line: 0, scope: !9447, inlinedAt: !9663)
!9663 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9664 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9663)
!9665 = !DILocation(line: 0, scope: !9439, inlinedAt: !9666)
!9666 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9667 = !DILocation(line: 0, scope: !9447, inlinedAt: !9668)
!9668 = distinct !DILocation(line: 486, column: 3, scope: !9652)
!9669 = !DILocation(line: 487, column: 1, scope: !9652)
!9670 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9499, file: !9499, line: 556, type: !9625, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674}
!9672 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9670, file: !9499, line: 556, type: !1128)
!9673 = !DILocalVariable(name: "Pin", arg: 2, scope: !9670, file: !9499, line: 556, type: !110)
!9674 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9670, file: !9499, line: 556, type: !110)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 558, column: 3, scope: !9670)
!9677 = !DILocation(line: 0, scope: !9439, inlinedAt: !9678)
!9678 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9679 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9678)
!9680 = !DILocation(line: 0, scope: !9447, inlinedAt: !9681)
!9681 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9682 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9681)
!9683 = !DILocation(line: 0, scope: !9439, inlinedAt: !9684)
!9684 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9685 = !DILocation(line: 0, scope: !9447, inlinedAt: !9686)
!9686 = distinct !DILocation(line: 558, column: 3, scope: !9670)
!9687 = !DILocation(line: 560, column: 1, scope: !9670)
!9688 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9499, file: !9499, line: 633, type: !9625, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9689)
!9689 = !{!9690, !9691, !9692}
!9690 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9688, file: !9499, line: 633, type: !1128)
!9691 = !DILocalVariable(name: "Pin", arg: 2, scope: !9688, file: !9499, line: 633, type: !110)
!9692 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9688, file: !9499, line: 633, type: !110)
!9693 = !DILocation(line: 0, scope: !9688)
!9694 = !DILocation(line: 635, column: 3, scope: !9688)
!9695 = !DILocation(line: 0, scope: !9439, inlinedAt: !9696)
!9696 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9697 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9696)
!9698 = !DILocation(line: 0, scope: !9447, inlinedAt: !9699)
!9699 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9700 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9699)
!9701 = !DILocation(line: 0, scope: !9439, inlinedAt: !9702)
!9702 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9703 = !DILocation(line: 0, scope: !9447, inlinedAt: !9704)
!9704 = distinct !DILocation(line: 635, column: 3, scope: !9688)
!9705 = !DILocation(line: 637, column: 1, scope: !9688)
!9706 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9499, file: !9499, line: 273, type: !9625, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9707)
!9707 = !{!9708, !9709, !9710}
!9708 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9706, file: !9499, line: 273, type: !1128)
!9709 = !DILocalVariable(name: "Pin", arg: 2, scope: !9706, file: !9499, line: 273, type: !110)
!9710 = !DILocalVariable(name: "Mode", arg: 3, scope: !9706, file: !9499, line: 273, type: !110)
!9711 = !DILocation(line: 0, scope: !9706)
!9712 = !DILocation(line: 275, column: 3, scope: !9706)
!9713 = !DILocation(line: 0, scope: !9439, inlinedAt: !9714)
!9714 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9715 = !DILocation(line: 380, column: 4, scope: !9439, inlinedAt: !9714)
!9716 = !DILocation(line: 0, scope: !9447, inlinedAt: !9717)
!9717 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9718 = !DILocation(line: 414, column: 7, scope: !9447, inlinedAt: !9717)
!9719 = !DILocation(line: 0, scope: !9439, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9721 = !DILocation(line: 0, scope: !9447, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 275, column: 3, scope: !9706)
!9723 = !DILocation(line: 276, column: 1, scope: !9706)
!9724 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1197, file: !1197, line: 698, type: !1210, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9725)
!9725 = !{!9726, !9727, !9728}
!9726 = !DILocalVariable(name: "dev", arg: 1, scope: !9724, file: !1197, line: 698, type: !1055)
!9727 = !DILocalVariable(name: "data", scope: !9724, file: !1197, line: 700, type: !9151)
!9728 = !DILocalVariable(name: "ret", scope: !9724, file: !1197, line: 701, type: !109)
!9729 = !DILocation(line: 0, scope: !9724)
!9730 = !DILocation(line: 700, column: 38, scope: !9724)
!9731 = !DILocation(line: 703, column: 8, scope: !9724)
!9732 = !DILocation(line: 703, column: 12, scope: !9724)
!9733 = !DILocation(line: 705, column: 7, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9724, file: !1197, line: 705, column: 6)
!9735 = !DILocation(line: 705, column: 6, scope: !9724)
!9736 = !DILocation(line: 722, column: 8, scope: !9724)
!9737 = !DILocation(line: 723, column: 10, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9724, file: !1197, line: 723, column: 6)
!9739 = !DILocation(line: 723, column: 6, scope: !9724)
!9740 = !DILocation(line: 731, column: 1, scope: !9724)
!9741 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !9742, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{!347, !1055}
!9744 = !{!9745}
!9745 = !DILocalVariable(name: "dev", arg: 1, scope: !9741, file: !8929, line: 47, type: !1055)
!9746 = !DILocation(line: 0, scope: !9741)
!9747 = !DILocation(line: 55, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9741, file: !8929, line: 55, column: 2)
!9749 = !{i64 2154954212}
!9750 = !DILocation(line: 56, column: 9, scope: !9741)
!9751 = !DILocation(line: 56, column: 2, scope: !9741)
!9752 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1197, file: !1197, line: 270, type: !9753, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9755)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!109, !1055, !347}
!9755 = !{!9756, !9757, !9758, !9759, !9760}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9752, file: !1197, line: 270, type: !1055)
!9757 = !DILocalVariable(name: "on", arg: 2, scope: !9752, file: !1197, line: 270, type: !347)
!9758 = !DILocalVariable(name: "cfg", scope: !9752, file: !1197, line: 272, type: !9084)
!9759 = !DILocalVariable(name: "ret", scope: !9752, file: !1197, line: 273, type: !109)
!9760 = !DILocalVariable(name: "clk", scope: !9752, file: !1197, line: 278, type: !9386)
!9761 = !DILocation(line: 0, scope: !9752)
!9762 = !DILocation(line: 272, column: 45, scope: !9752)
!9763 = !DILocation(line: 282, column: 38, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1197, line: 280, column: 10)
!9765 = distinct !DILexicalBlock(scope: !9752, file: !1197, line: 280, column: 6)
!9766 = !DILocation(line: 282, column: 6, scope: !9764)
!9767 = !DILocation(line: 281, column: 9, scope: !9764)
!9768 = !DILocation(line: 293, column: 1, scope: !9752)
!9769 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9742, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9770)
!9770 = !{!9771}
!9771 = !DILocalVariable(name: "dev", arg: 1, scope: !9769, file: !336, line: 730, type: !1055)
!9772 = !DILocation(line: 0, scope: !9769)
!9773 = !DILocation(line: 732, column: 9, scope: !9769)
!9774 = !DILocation(line: 732, column: 2, scope: !9769)
!9775 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1197, file: !1197, line: 496, type: !9776, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1026, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{!109, !1055, !109, !109, !109}
!9778 = !{!9779, !9780, !9781, !9782, !9783, !9784}
!9779 = !DILocalVariable(name: "dev", arg: 1, scope: !9775, file: !1197, line: 496, type: !1055)
!9780 = !DILocalVariable(name: "pin", arg: 2, scope: !9775, file: !1197, line: 496, type: !109)
!9781 = !DILocalVariable(name: "conf", arg: 3, scope: !9775, file: !1197, line: 496, type: !109)
!9782 = !DILocalVariable(name: "func", arg: 4, scope: !9775, file: !1197, line: 496, type: !109)
!9783 = !DILocalVariable(name: "ret", scope: !9775, file: !1197, line: 498, type: !109)
!9784 = !DILocalVariable(name: "gpio_out", scope: !9785, file: !1197, line: 508, type: !110)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !1197, line: 507, column: 27)
!9786 = distinct !DILexicalBlock(scope: !9775, file: !1197, line: 507, column: 6)
!9787 = !DILocation(line: 0, scope: !9775)
!9788 = !DILocation(line: 505, column: 2, scope: !9775)
!9789 = !DILocation(line: 507, column: 11, scope: !9786)
!9790 = !DILocation(line: 507, column: 6, scope: !9775)
!9791 = !DILocation(line: 508, column: 28, scope: !9785)
!9792 = !DILocation(line: 0, scope: !9785)
!9793 = !DILocation(line: 510, column: 16, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9785, file: !1197, line: 510, column: 7)
!9795 = !DILocation(line: 0, scope: !9794)
!9796 = !DILocation(line: 510, column: 7, scope: !9785)
!9797 = !DILocation(line: 511, column: 4, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !1197, line: 510, column: 32)
!9799 = !DILocation(line: 512, column: 3, scope: !9798)
!9800 = !DILocation(line: 513, column: 4, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1197, line: 512, column: 39)
!9802 = distinct !DILexicalBlock(scope: !9794, file: !1197, line: 512, column: 14)
!9803 = !DILocation(line: 514, column: 3, scope: !9801)
!9804 = !DILocation(line: 518, column: 1, scope: !9775)
!9805 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1473, file: !1473, line: 526, type: !1376, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9806)
!9806 = !{!9807, !9808, !9809}
!9807 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !1473, line: 526, type: !1378)
!9808 = !DILocalVariable(name: "c", arg: 2, scope: !9805, file: !1473, line: 526, type: !987)
!9809 = !DILocalVariable(name: "config", scope: !9805, file: !1473, line: 528, type: !9810)
!9810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!9811 = !DILocation(line: 0, scope: !9805)
!9812 = !DILocation(line: 528, column: 48, scope: !9805)
!9813 = !DILocation(line: 531, column: 40, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9805, file: !1473, line: 531, column: 6)
!9815 = !DILocation(line: 531, column: 6, scope: !9814)
!9816 = !DILocation(line: 531, column: 6, scope: !9805)
!9817 = !DILocation(line: 532, column: 34, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !1473, line: 531, column: 48)
!9819 = !DILocation(line: 532, column: 3, scope: !9818)
!9820 = !DILocation(line: 533, column: 2, scope: !9818)
!9821 = !DILocation(line: 539, column: 42, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9805, file: !1473, line: 539, column: 6)
!9823 = !DILocation(line: 539, column: 7, scope: !9822)
!9824 = !DILocation(line: 539, column: 6, scope: !9805)
!9825 = !DILocation(line: 543, column: 52, scope: !9805)
!9826 = !DILocation(line: 543, column: 22, scope: !9805)
!9827 = !DILocation(line: 543, column: 5, scope: !9805)
!9828 = !DILocation(line: 545, column: 2, scope: !9805)
!9829 = !DILocation(line: 546, column: 1, scope: !9805)
!9830 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1473, file: !1473, line: 548, type: !1395, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9831)
!9831 = !{!9832, !9833, !9834, !9835}
!9832 = !DILocalVariable(name: "dev", arg: 1, scope: !9830, file: !1473, line: 548, type: !1378)
!9833 = !DILocalVariable(name: "c", arg: 2, scope: !9830, file: !1473, line: 549, type: !181)
!9834 = !DILocalVariable(name: "config", scope: !9830, file: !1473, line: 551, type: !9810)
!9835 = !DILocalVariable(name: "key", scope: !9830, file: !1473, line: 555, type: !32)
!9836 = !DILocation(line: 0, scope: !9830)
!9837 = !DILocation(line: 551, column: 48, scope: !9830)
!9838 = !DILocation(line: 562, column: 2, scope: !9830)
!9839 = !DILocation(line: 563, column: 41, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !1473, line: 563, column: 7)
!9841 = distinct !DILexicalBlock(scope: !9830, file: !1473, line: 562, column: 12)
!9842 = !DILocation(line: 563, column: 7, scope: !9840)
!9843 = !DILocation(line: 563, column: 7, scope: !9841)
!9844 = !DILocation(line: 55, column: 2, scope: !9845, inlinedAt: !9849)
!9845 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9846)
!9846 = !{!9847, !9848}
!9847 = !DILocalVariable(name: "key", scope: !9845, file: !6097, line: 44, type: !32)
!9848 = !DILocalVariable(name: "tmp", scope: !9845, file: !6097, line: 53, type: !32)
!9849 = distinct !DILocation(line: 564, column: 10, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9840, file: !1473, line: 563, column: 49)
!9851 = !{i64 2292161}
!9852 = !DILocation(line: 0, scope: !9845, inlinedAt: !9849)
!9853 = !DILocation(line: 565, column: 42, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9850, file: !1473, line: 565, column: 8)
!9855 = !DILocation(line: 565, column: 8, scope: !9854)
!9856 = !DILocation(line: 565, column: 8, scope: !9850)
!9857 = !DILocalVariable(name: "key", arg: 1, scope: !9858, file: !6097, line: 84, type: !32)
!9858 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9859)
!9859 = !{!9857}
!9860 = !DILocation(line: 0, scope: !9858, inlinedAt: !9861)
!9861 = distinct !DILocation(line: 568, column: 4, scope: !9850)
!9862 = !DILocation(line: 95, column: 2, scope: !9858, inlinedAt: !9861)
!9863 = !{i64 2292978}
!9864 = !DILocation(line: 569, column: 3, scope: !9850)
!9865 = distinct !{!9865, !9838, !9866}
!9866 = !DILocation(line: 570, column: 2, scope: !9830)
!9867 = !DILocation(line: 592, column: 33, scope: !9830)
!9868 = !DILocation(line: 592, column: 2, scope: !9830)
!9869 = !DILocation(line: 0, scope: !9858, inlinedAt: !9870)
!9870 = distinct !DILocation(line: 593, column: 2, scope: !9830)
!9871 = !DILocation(line: 95, column: 2, scope: !9858, inlinedAt: !9870)
!9872 = !DILocation(line: 594, column: 1, scope: !9830)
!9873 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1473, file: !1473, line: 596, type: !1399, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9874)
!9874 = !{!9875, !9876, !9877}
!9875 = !DILocalVariable(name: "dev", arg: 1, scope: !9873, file: !1473, line: 596, type: !1378)
!9876 = !DILocalVariable(name: "config", scope: !9873, file: !1473, line: 598, type: !9810)
!9877 = !DILocalVariable(name: "err", scope: !9873, file: !1473, line: 599, type: !110)
!9878 = !DILocation(line: 0, scope: !9873)
!9879 = !DILocation(line: 598, column: 48, scope: !9873)
!9880 = !DILocation(line: 606, column: 40, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 606, column: 6)
!9882 = !DILocation(line: 606, column: 6, scope: !9881)
!9883 = !DILocation(line: 606, column: 6, scope: !9873)
!9884 = !DILocation(line: 610, column: 39, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 610, column: 6)
!9886 = !DILocation(line: 610, column: 6, scope: !9885)
!9887 = !DILocation(line: 610, column: 6, scope: !9873)
!9888 = !DILocation(line: 614, column: 39, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 614, column: 6)
!9890 = !DILocation(line: 614, column: 6, scope: !9889)
!9891 = !DILocation(line: 614, column: 6, scope: !9873)
!9892 = !DILocation(line: 619, column: 40, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 619, column: 6)
!9894 = !DILocation(line: 619, column: 6, scope: !9893)
!9895 = !DILocation(line: 619, column: 6, scope: !9873)
!9896 = !DILocation(line: 623, column: 10, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 623, column: 6)
!9898 = !DILocation(line: 623, column: 6, scope: !9873)
!9899 = !DILocation(line: 624, column: 34, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9897, file: !1473, line: 623, column: 24)
!9901 = !DILocation(line: 624, column: 3, scope: !9900)
!9902 = !DILocation(line: 625, column: 2, scope: !9900)
!9903 = !DILocation(line: 632, column: 10, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 632, column: 6)
!9905 = !DILocation(line: 632, column: 6, scope: !9873)
!9906 = !DILocation(line: 633, column: 34, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9904, file: !1473, line: 632, column: 32)
!9908 = !DILocation(line: 633, column: 3, scope: !9907)
!9909 = !DILocation(line: 634, column: 2, scope: !9907)
!9910 = !DILocation(line: 636, column: 10, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 636, column: 6)
!9912 = !DILocation(line: 636, column: 6, scope: !9873)
!9913 = !DILocation(line: 637, column: 33, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9911, file: !1473, line: 636, column: 31)
!9915 = !DILocation(line: 637, column: 3, scope: !9914)
!9916 = !DILocation(line: 638, column: 2, scope: !9914)
!9917 = !DILocation(line: 640, column: 10, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9873, file: !1473, line: 640, column: 6)
!9919 = !DILocation(line: 640, column: 6, scope: !9873)
!9920 = !DILocation(line: 641, column: 33, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !1473, line: 640, column: 32)
!9922 = !DILocation(line: 641, column: 3, scope: !9921)
!9923 = !DILocation(line: 642, column: 2, scope: !9921)
!9924 = !DILocation(line: 646, column: 32, scope: !9873)
!9925 = !DILocation(line: 646, column: 2, scope: !9873)
!9926 = !DILocation(line: 648, column: 2, scope: !9873)
!9927 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1473, file: !1473, line: 419, type: !1403, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !9928)
!9928 = !{!9929, !9930, !9931, !9932, !9934, !9935, !9936, !9937}
!9929 = !DILocalVariable(name: "dev", arg: 1, scope: !9927, file: !1473, line: 419, type: !1378)
!9930 = !DILocalVariable(name: "cfg", arg: 2, scope: !9927, file: !1473, line: 420, type: !1405)
!9931 = !DILocalVariable(name: "config", scope: !9927, file: !1473, line: 422, type: !9810)
!9932 = !DILocalVariable(name: "data", scope: !9927, file: !1473, line: 423, type: !9933)
!9933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!9934 = !DILocalVariable(name: "parity", scope: !9927, file: !1473, line: 424, type: !6695)
!9935 = !DILocalVariable(name: "stopbits", scope: !9927, file: !1473, line: 425, type: !6695)
!9936 = !DILocalVariable(name: "databits", scope: !9927, file: !1473, line: 426, type: !6695)
!9937 = !DILocalVariable(name: "flowctrl", scope: !9927, file: !1473, line: 428, type: !6695)
!9938 = !DILocation(line: 0, scope: !9927)
!9939 = !DILocation(line: 422, column: 48, scope: !9927)
!9940 = !DILocation(line: 423, column: 38, scope: !9927)
!9941 = !DILocation(line: 424, column: 56, scope: !9927)
!9942 = !DILocation(line: 424, column: 51, scope: !9927)
!9943 = !DILocation(line: 424, column: 26, scope: !9927)
!9944 = !DILocation(line: 425, column: 60, scope: !9927)
!9945 = !DILocation(line: 425, column: 55, scope: !9927)
!9946 = !DILocation(line: 425, column: 28, scope: !9927)
!9947 = !DILocation(line: 426, column: 60, scope: !9927)
!9948 = !DILocation(line: 426, column: 55, scope: !9927)
!9949 = !DILocation(line: 426, column: 28, scope: !9927)
!9950 = !DILocation(line: 428, column: 58, scope: !9927)
!9951 = !DILocation(line: 428, column: 53, scope: !9927)
!9952 = !DILocation(line: 428, column: 28, scope: !9927)
!9953 = !DILocation(line: 431, column: 44, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 431, column: 6)
!9955 = !DILocation(line: 438, column: 22, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 437, column: 6)
!9957 = !DILocation(line: 437, column: 6, scope: !9927)
!9958 = !DILocation(line: 448, column: 6, scope: !9927)
!9959 = !DILocation(line: 465, column: 47, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 465, column: 6)
!9961 = !DILocation(line: 475, column: 21, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 475, column: 6)
!9963 = !DILocation(line: 475, column: 6, scope: !9927)
!9964 = !DILocation(line: 476, column: 8, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !1473, line: 476, column: 7)
!9966 = distinct !DILexicalBlock(scope: !9962, file: !1473, line: 475, column: 49)
!9967 = !DILocation(line: 477, column: 34, scope: !9965)
!9968 = !DILocation(line: 476, column: 7, scope: !9966)
!9969 = !DILocation(line: 482, column: 27, scope: !9927)
!9970 = !DILocation(line: 482, column: 2, scope: !9927)
!9971 = !DILocation(line: 484, column: 16, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 484, column: 6)
!9973 = !DILocation(line: 484, column: 13, scope: !9972)
!9974 = !DILocation(line: 484, column: 6, scope: !9927)
!9975 = !DILocation(line: 485, column: 3, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9972, file: !1473, line: 484, column: 44)
!9977 = !DILocation(line: 486, column: 2, scope: !9976)
!9978 = !DILocation(line: 488, column: 18, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 488, column: 6)
!9980 = !DILocation(line: 488, column: 15, scope: !9979)
!9981 = !DILocation(line: 488, column: 6, scope: !9927)
!9982 = !DILocation(line: 489, column: 3, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9979, file: !1473, line: 488, column: 48)
!9984 = !DILocation(line: 490, column: 2, scope: !9983)
!9985 = !DILocation(line: 492, column: 18, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 492, column: 6)
!9987 = !DILocation(line: 492, column: 15, scope: !9986)
!9988 = !DILocation(line: 492, column: 6, scope: !9927)
!9989 = !DILocation(line: 493, column: 3, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9986, file: !1473, line: 492, column: 48)
!9991 = !DILocation(line: 494, column: 2, scope: !9990)
!9992 = !DILocation(line: 496, column: 18, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 496, column: 6)
!9994 = !DILocation(line: 496, column: 15, scope: !9993)
!9995 = !DILocation(line: 496, column: 6, scope: !9927)
!9996 = !DILocation(line: 497, column: 3, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9993, file: !1473, line: 496, column: 46)
!9998 = !DILocation(line: 498, column: 2, scope: !9997)
!9999 = !DILocation(line: 500, column: 11, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9927, file: !1473, line: 500, column: 6)
!10001 = !DILocation(line: 500, column: 29, scope: !10000)
!10002 = !DILocation(line: 500, column: 20, scope: !10000)
!10003 = !DILocation(line: 500, column: 6, scope: !9927)
!10004 = !DILocation(line: 501, column: 3, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10000, file: !1473, line: 500, column: 40)
!10006 = !DILocation(line: 502, column: 26, scope: !10005)
!10007 = !DILocation(line: 502, column: 19, scope: !10005)
!10008 = !DILocation(line: 503, column: 2, scope: !10005)
!10009 = !DILocation(line: 505, column: 26, scope: !9927)
!10010 = !DILocation(line: 505, column: 2, scope: !9927)
!10011 = !DILocation(line: 506, column: 2, scope: !9927)
!10012 = !DILocation(line: 507, column: 1, scope: !9927)
!10013 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1473, file: !1473, line: 509, type: !1416, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10014)
!10014 = !{!10015, !10016, !10017}
!10015 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !1473, line: 509, type: !1378)
!10016 = !DILocalVariable(name: "cfg", arg: 2, scope: !10013, file: !1473, line: 510, type: !1418)
!10017 = !DILocalVariable(name: "data", scope: !10013, file: !1473, line: 512, type: !9933)
!10018 = !DILocation(line: 0, scope: !10013)
!10019 = !DILocation(line: 512, column: 38, scope: !10013)
!10020 = !DILocation(line: 514, column: 24, scope: !10013)
!10021 = !DILocation(line: 514, column: 7, scope: !10013)
!10022 = !DILocation(line: 514, column: 16, scope: !10013)
!10023 = !DILocation(line: 515, column: 41, scope: !10013)
!10024 = !{i32 0, i32 1537}
!10025 = !DILocation(line: 515, column: 16, scope: !10013)
!10026 = !DILocation(line: 515, column: 7, scope: !10013)
!10027 = !DILocation(line: 515, column: 14, scope: !10013)
!10028 = !DILocation(line: 517, column: 3, scope: !10013)
!10029 = !{i32 0, i32 12289}
!10030 = !DILocation(line: 516, column: 19, scope: !10013)
!10031 = !DILocation(line: 516, column: 7, scope: !10013)
!10032 = !DILocation(line: 516, column: 17, scope: !10013)
!10033 = !DILocation(line: 519, column: 3, scope: !10013)
!10034 = !DILocation(line: 519, column: 33, scope: !10013)
!10035 = !DILocation(line: 518, column: 19, scope: !10013)
!10036 = !DILocation(line: 518, column: 7, scope: !10013)
!10037 = !DILocation(line: 518, column: 17, scope: !10013)
!10038 = !DILocation(line: 521, column: 3, scope: !10013)
!10039 = !{i32 0, i32 769}
!10040 = !DILocation(line: 520, column: 19, scope: !10013)
!10041 = !DILocation(line: 520, column: 7, scope: !10013)
!10042 = !DILocation(line: 520, column: 17, scope: !10013)
!10043 = !DILocation(line: 522, column: 2, scope: !10013)
!10044 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1473, file: !1473, line: 205, type: !10045, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10047)
!10045 = !DISubroutineType(types: !10046)
!10046 = !{!110, !1378}
!10047 = !{!10048, !10049}
!10048 = !DILocalVariable(name: "dev", arg: 1, scope: !10044, file: !1473, line: 205, type: !1378)
!10049 = !DILocalVariable(name: "config", scope: !10044, file: !1473, line: 207, type: !9810)
!10050 = !DILocation(line: 0, scope: !10044)
!10051 = !DILocation(line: 207, column: 48, scope: !10044)
!10052 = !DILocation(line: 209, column: 36, scope: !10044)
!10053 = !DILocation(line: 209, column: 9, scope: !10044)
!10054 = !DILocation(line: 209, column: 2, scope: !10044)
!10055 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1473, file: !1473, line: 270, type: !10056, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10058)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!1344, !110}
!10058 = !{!10059}
!10059 = !DILocalVariable(name: "parity", arg: 1, scope: !10055, file: !1473, line: 270, type: !110)
!10060 = !DILocation(line: 0, scope: !10055)
!10061 = !DILocation(line: 272, column: 2, scope: !10055)
!10062 = !DILocation(line: 281, column: 1, scope: !10055)
!10063 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1473, file: !1473, line: 220, type: !10045, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10064)
!10064 = !{!10065, !10066}
!10065 = !DILocalVariable(name: "dev", arg: 1, scope: !10063, file: !1473, line: 220, type: !1378)
!10066 = !DILocalVariable(name: "config", scope: !10063, file: !1473, line: 222, type: !9810)
!10067 = !DILocation(line: 0, scope: !10063)
!10068 = !DILocation(line: 222, column: 48, scope: !10063)
!10069 = !DILocation(line: 224, column: 44, scope: !10063)
!10070 = !DILocation(line: 224, column: 9, scope: !10063)
!10071 = !DILocation(line: 224, column: 2, scope: !10063)
!10072 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1473, file: !1473, line: 304, type: !10073, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10075)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{!1358, !110}
!10075 = !{!10076}
!10076 = !DILocalVariable(name: "sb", arg: 1, scope: !10072, file: !1473, line: 304, type: !110)
!10077 = !DILocation(line: 0, scope: !10072)
!10078 = !DILocation(line: 306, column: 2, scope: !10072)
!10079 = !DILocation(line: 0, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10072, file: !1473, line: 306, column: 14)
!10081 = !DILocation(line: 323, column: 1, scope: !10072)
!10082 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1473, file: !1473, line: 235, type: !10045, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10083)
!10083 = !{!10084, !10085}
!10084 = !DILocalVariable(name: "dev", arg: 1, scope: !10082, file: !1473, line: 235, type: !1378)
!10085 = !DILocalVariable(name: "config", scope: !10082, file: !1473, line: 237, type: !9810)
!10086 = !DILocation(line: 0, scope: !10082)
!10087 = !DILocation(line: 237, column: 48, scope: !10082)
!10088 = !DILocation(line: 239, column: 39, scope: !10082)
!10089 = !DILocation(line: 239, column: 9, scope: !10082)
!10090 = !DILocation(line: 239, column: 2, scope: !10082)
!10091 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1473, file: !1473, line: 355, type: !10092, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10094)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{!1351, !110, !110}
!10094 = !{!10095, !10096}
!10095 = !DILocalVariable(name: "db", arg: 1, scope: !10091, file: !1473, line: 355, type: !110)
!10096 = !DILocalVariable(name: "p", arg: 2, scope: !10091, file: !1473, line: 356, type: !110)
!10097 = !DILocation(line: 0, scope: !10091)
!10098 = !DILocation(line: 358, column: 2, scope: !10091)
!10099 = !DILocation(line: 384, column: 1, scope: !10091)
!10100 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1473, file: !1473, line: 250, type: !10045, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10101)
!10101 = !{!10102, !10103}
!10102 = !DILocalVariable(name: "dev", arg: 1, scope: !10100, file: !1473, line: 250, type: !1378)
!10103 = !DILocalVariable(name: "config", scope: !10100, file: !1473, line: 252, type: !9810)
!10104 = !DILocation(line: 0, scope: !10100)
!10105 = !DILocation(line: 252, column: 48, scope: !10100)
!10106 = !DILocation(line: 254, column: 40, scope: !10100)
!10107 = !DILocation(line: 254, column: 9, scope: !10100)
!10108 = !DILocation(line: 254, column: 2, scope: !10100)
!10109 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1473, file: !1473, line: 409, type: !10110, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1364, !110}
!10112 = !{!10113}
!10113 = !DILocalVariable(name: "fc", arg: 1, scope: !10109, file: !1473, line: 409, type: !110)
!10114 = !DILocation(line: 0, scope: !10109)
!10115 = !DILocation(line: 411, column: 9, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10109, file: !1473, line: 411, column: 6)
!10117 = !DILocation(line: 416, column: 1, scope: !10109)
!10118 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10119, file: !10119, line: 967, type: !10120, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10122)
!10119 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10120 = !DISubroutineType(types: !10121)
!10121 = !{!110, !1419}
!10122 = !{!10123}
!10123 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10118, file: !10119, line: 967, type: !1419)
!10124 = !DILocation(line: 0, scope: !10118)
!10125 = !DILocation(line: 969, column: 21, scope: !10118)
!10126 = !DILocation(line: 969, column: 3, scope: !10118)
!10127 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10119, file: !10119, line: 601, type: !10120, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10128)
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10127, file: !10119, line: 601, type: !1419)
!10130 = !DILocation(line: 0, scope: !10127)
!10131 = !DILocation(line: 603, column: 21, scope: !10127)
!10132 = !DILocation(line: 603, column: 3, scope: !10127)
!10133 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10119, file: !10119, line: 820, type: !10120, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10134)
!10134 = !{!10135}
!10135 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10133, file: !10119, line: 820, type: !1419)
!10136 = !DILocation(line: 0, scope: !10133)
!10137 = !DILocation(line: 822, column: 21, scope: !10133)
!10138 = !DILocation(line: 822, column: 3, scope: !10133)
!10139 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10119, file: !10119, line: 547, type: !10120, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10140)
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10139, file: !10119, line: 547, type: !1419)
!10142 = !DILocation(line: 0, scope: !10139)
!10143 = !DILocation(line: 549, column: 21, scope: !10139)
!10144 = !DILocation(line: 549, column: 3, scope: !10139)
!10145 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1473, file: !1473, line: 257, type: !10146, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10148)
!10146 = !DISubroutineType(types: !10147)
!10147 = !{!110, !1344}
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "parity", arg: 1, scope: !10145, file: !1473, line: 257, type: !1344)
!10150 = !DILocation(line: 0, scope: !10145)
!10151 = !DILocation(line: 259, column: 2, scope: !10145)
!10152 = !DILocation(line: 268, column: 1, scope: !10145)
!10153 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1473, file: !1473, line: 283, type: !10154, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10156)
!10154 = !DISubroutineType(types: !10155)
!10155 = !{!110, !1358}
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "sb", arg: 1, scope: !10153, file: !1473, line: 283, type: !1358)
!10158 = !DILocation(line: 0, scope: !10153)
!10159 = !DILocation(line: 285, column: 2, scope: !10153)
!10160 = !DILocation(line: 0, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10153, file: !1473, line: 285, column: 14)
!10162 = !DILocation(line: 302, column: 1, scope: !10153)
!10163 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1473, file: !1473, line: 325, type: !10164, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!110, !1351, !1344}
!10166 = !{!10167, !10168}
!10167 = !DILocalVariable(name: "db", arg: 1, scope: !10163, file: !1473, line: 325, type: !1351)
!10168 = !DILocalVariable(name: "p", arg: 2, scope: !10163, file: !1473, line: 326, type: !1344)
!10169 = !DILocation(line: 0, scope: !10163)
!10170 = !DILocation(line: 328, column: 2, scope: !10163)
!10171 = !DILocation(line: 353, column: 1, scope: !10163)
!10172 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1473, file: !1473, line: 393, type: !10173, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!110, !1364}
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "fc", arg: 1, scope: !10172, file: !1473, line: 393, type: !1364)
!10177 = !DILocation(line: 0, scope: !10172)
!10178 = !DILocation(line: 395, column: 9, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10172, file: !1473, line: 395, column: 6)
!10180 = !DILocation(line: 400, column: 1, scope: !10172)
!10181 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10119, file: !10119, line: 424, type: !10182, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10184)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{null, !1419}
!10184 = !{!10185}
!10185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10181, file: !10119, line: 424, type: !1419)
!10186 = !DILocation(line: 0, scope: !10181)
!10187 = !DILocation(line: 426, column: 3, scope: !10181)
!10188 = !DILocation(line: 427, column: 1, scope: !10181)
!10189 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1473, file: !1473, line: 197, type: !10190, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{null, !1378, !110}
!10192 = !{!10193, !10194, !10195}
!10193 = !DILocalVariable(name: "dev", arg: 1, scope: !10189, file: !1473, line: 197, type: !1378)
!10194 = !DILocalVariable(name: "parity", arg: 2, scope: !10189, file: !1473, line: 198, type: !110)
!10195 = !DILocalVariable(name: "config", scope: !10189, file: !1473, line: 200, type: !9810)
!10196 = !DILocation(line: 0, scope: !10189)
!10197 = !DILocation(line: 200, column: 48, scope: !10189)
!10198 = !DILocation(line: 202, column: 29, scope: !10189)
!10199 = !DILocation(line: 202, column: 2, scope: !10189)
!10200 = !DILocation(line: 203, column: 1, scope: !10189)
!10201 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1473, file: !1473, line: 212, type: !10190, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10202)
!10202 = !{!10203, !10204, !10205}
!10203 = !DILocalVariable(name: "dev", arg: 1, scope: !10201, file: !1473, line: 212, type: !1378)
!10204 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10201, file: !1473, line: 213, type: !110)
!10205 = !DILocalVariable(name: "config", scope: !10201, file: !1473, line: 215, type: !9810)
!10206 = !DILocation(line: 0, scope: !10201)
!10207 = !DILocation(line: 215, column: 48, scope: !10201)
!10208 = !DILocation(line: 217, column: 37, scope: !10201)
!10209 = !DILocation(line: 217, column: 2, scope: !10201)
!10210 = !DILocation(line: 218, column: 1, scope: !10201)
!10211 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1473, file: !1473, line: 227, type: !10190, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10212)
!10212 = !{!10213, !10214, !10215}
!10213 = !DILocalVariable(name: "dev", arg: 1, scope: !10211, file: !1473, line: 227, type: !1378)
!10214 = !DILocalVariable(name: "databits", arg: 2, scope: !10211, file: !1473, line: 228, type: !110)
!10215 = !DILocalVariable(name: "config", scope: !10211, file: !1473, line: 230, type: !9810)
!10216 = !DILocation(line: 0, scope: !10211)
!10217 = !DILocation(line: 230, column: 48, scope: !10211)
!10218 = !DILocation(line: 232, column: 32, scope: !10211)
!10219 = !DILocation(line: 232, column: 2, scope: !10211)
!10220 = !DILocation(line: 233, column: 1, scope: !10211)
!10221 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1473, file: !1473, line: 242, type: !10190, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10222)
!10222 = !{!10223, !10224, !10225}
!10223 = !DILocalVariable(name: "dev", arg: 1, scope: !10221, file: !1473, line: 242, type: !1378)
!10224 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10221, file: !1473, line: 243, type: !110)
!10225 = !DILocalVariable(name: "config", scope: !10221, file: !1473, line: 245, type: !9810)
!10226 = !DILocation(line: 0, scope: !10221)
!10227 = !DILocation(line: 245, column: 48, scope: !10221)
!10228 = !DILocation(line: 247, column: 33, scope: !10221)
!10229 = !DILocation(line: 247, column: 2, scope: !10221)
!10230 = !DILocation(line: 248, column: 1, scope: !10221)
!10231 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1473, file: !1473, line: 107, type: !10190, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10232)
!10232 = !{!10233, !10234, !10235, !10236, !10237}
!10233 = !DILocalVariable(name: "dev", arg: 1, scope: !10231, file: !1473, line: 107, type: !1378)
!10234 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10231, file: !1473, line: 107, type: !110)
!10235 = !DILocalVariable(name: "config", scope: !10231, file: !1473, line: 109, type: !9810)
!10236 = !DILocalVariable(name: "data", scope: !10231, file: !1473, line: 110, type: !9933)
!10237 = !DILocalVariable(name: "clock_rate", scope: !10231, file: !1473, line: 112, type: !110)
!10238 = !DILocation(line: 0, scope: !10231)
!10239 = !DILocation(line: 109, column: 48, scope: !10231)
!10240 = !DILocation(line: 110, column: 38, scope: !10231)
!10241 = !DILocation(line: 112, column: 2, scope: !10231)
!10242 = !DILocation(line: 123, column: 36, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !1473, line: 123, column: 7)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !1473, line: 122, column: 9)
!10245 = distinct !DILexicalBlock(scope: !10231, file: !1473, line: 115, column: 6)
!10246 = !DILocation(line: 124, column: 42, scope: !10243)
!10247 = !DILocation(line: 123, column: 7, scope: !10243)
!10248 = !DILocation(line: 125, column: 22, scope: !10243)
!10249 = !DILocation(line: 123, column: 7, scope: !10244)
!10250 = !DILocation(line: 126, column: 4, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10252, file: !1473, line: 126, column: 4)
!10252 = distinct !DILexicalBlock(scope: !10253, file: !1473, line: 126, column: 4)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !1473, line: 126, column: 4)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !1473, line: 126, column: 4)
!10255 = distinct !DILexicalBlock(scope: !10243, file: !1473, line: 125, column: 27)
!10256 = !DILocation(line: 127, column: 4, scope: !10255)
!10257 = !DILocation(line: 176, column: 36, scope: !10231)
!10258 = !DILocation(line: 176, column: 3, scope: !10231)
!10259 = !DILocation(line: 179, column: 32, scope: !10231)
!10260 = !DILocation(line: 180, column: 10, scope: !10231)
!10261 = !DILocation(line: 179, column: 3, scope: !10231)
!10262 = !DILocation(line: 189, column: 3, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10264, file: !1473, line: 189, column: 3)
!10264 = distinct !DILexicalBlock(scope: !10231, file: !1473, line: 189, column: 3)
!10265 = !DILocation(line: 189, column: 3, scope: !10264)
!10266 = !DILocation(line: 189, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !1473, line: 189, column: 3)
!10268 = !DILocation(line: 195, column: 1, scope: !10231)
!10269 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10119, file: !10119, line: 410, type: !10182, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10270)
!10270 = !{!10271}
!10271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10269, file: !10119, line: 410, type: !1419)
!10272 = !DILocation(line: 0, scope: !10269)
!10273 = !DILocation(line: 412, column: 3, scope: !10269)
!10274 = !DILocation(line: 413, column: 1, scope: !10269)
!10275 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !833, file: !833, line: 216, type: !1452, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10276)
!10276 = !{!10277, !10278, !10279, !10280}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !833, line: 216, type: !1378)
!10278 = !DILocalVariable(name: "sys", arg: 2, scope: !10275, file: !833, line: 217, type: !926)
!10279 = !DILocalVariable(name: "rate", arg: 3, scope: !10275, file: !833, line: 218, type: !882)
!10280 = !DILocalVariable(name: "api", scope: !10275, file: !833, line: 220, type: !1430)
!10281 = !DILocation(line: 0, scope: !10275)
!10282 = !DILocation(line: 221, column: 49, scope: !10275)
!10283 = !DILocation(line: 223, column: 11, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10275, file: !833, line: 223, column: 6)
!10285 = !DILocation(line: 223, column: 20, scope: !10284)
!10286 = !DILocation(line: 223, column: 6, scope: !10275)
!10287 = !DILocation(line: 227, column: 9, scope: !10275)
!10288 = !DILocation(line: 227, column: 2, scope: !10275)
!10289 = !DILocation(line: 228, column: 1, scope: !10275)
!10290 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6175, file: !6175, line: 175, type: !6176, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10291)
!10291 = !{!10292}
!10292 = !DILocalVariable(name: "level", arg: 1, scope: !10290, file: !6175, line: 175, type: !109)
!10293 = !DILocation(line: 0, scope: !10290)
!10294 = !DILocation(line: 177, column: 2, scope: !10290)
!10295 = !DILocation(line: 189, column: 1, scope: !10290)
!10296 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10119, file: !10119, line: 615, type: !10297, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1419, !110}
!10299 = !{!10300, !10301}
!10300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10296, file: !10119, line: 615, type: !1419)
!10301 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10296, file: !10119, line: 615, type: !110)
!10302 = !DILocation(line: 0, scope: !10296)
!10303 = !DILocation(line: 617, column: 3, scope: !10296)
!10304 = !DILocation(line: 618, column: 1, scope: !10296)
!10305 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10119, file: !10119, line: 1020, type: !10306, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{null, !1419, !110, !110, !110}
!10308 = !{!10309, !10310, !10311, !10312}
!10309 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10305, file: !10119, line: 1020, type: !1419)
!10310 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10305, file: !10119, line: 1020, type: !110)
!10311 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10305, file: !10119, line: 1020, type: !110)
!10312 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10305, file: !10119, line: 1021, type: !110)
!10313 = !DILocation(line: 0, scope: !10305)
!10314 = !DILocation(line: 1029, column: 30, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !10119, line: 1028, column: 3)
!10316 = distinct !DILexicalBlock(scope: !10305, file: !10119, line: 1023, column: 7)
!10317 = !DILocation(line: 1029, column: 19, scope: !10315)
!10318 = !DILocation(line: 1029, column: 13, scope: !10315)
!10319 = !DILocation(line: 1029, column: 17, scope: !10315)
!10320 = !DILocation(line: 1031, column: 1, scope: !10305)
!10321 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10119, file: !10119, line: 949, type: !10297, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10322)
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !10119, line: 949, type: !1419)
!10324 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10321, file: !10119, line: 949, type: !110)
!10325 = !DILocation(line: 0, scope: !10321)
!10326 = !DILocation(line: 951, column: 3, scope: !10321)
!10327 = !DILocation(line: 952, column: 1, scope: !10321)
!10328 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10119, file: !10119, line: 588, type: !10297, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10329)
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10328, file: !10119, line: 588, type: !1419)
!10331 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10328, file: !10119, line: 588, type: !110)
!10332 = !DILocation(line: 0, scope: !10328)
!10333 = !DILocation(line: 590, column: 3, scope: !10328)
!10334 = !DILocation(line: 591, column: 1, scope: !10328)
!10335 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10119, file: !10119, line: 805, type: !10297, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10336)
!10336 = !{!10337, !10338}
!10337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10335, file: !10119, line: 805, type: !1419)
!10338 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10335, file: !10119, line: 805, type: !110)
!10339 = !DILocation(line: 0, scope: !10335)
!10340 = !DILocation(line: 807, column: 3, scope: !10335)
!10341 = !DILocation(line: 808, column: 1, scope: !10335)
!10342 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10119, file: !10119, line: 532, type: !10297, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10343)
!10343 = !{!10344, !10345}
!10344 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10342, file: !10119, line: 532, type: !1419)
!10345 = !DILocalVariable(name: "Parity", arg: 2, scope: !10342, file: !10119, line: 532, type: !110)
!10346 = !DILocation(line: 0, scope: !10342)
!10347 = !DILocation(line: 534, column: 3, scope: !10342)
!10348 = !DILocation(line: 535, column: 1, scope: !10342)
!10349 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10119, file: !10119, line: 1770, type: !10120, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10350)
!10350 = !{!10351}
!10351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10349, file: !10119, line: 1770, type: !1419)
!10352 = !DILocation(line: 0, scope: !10349)
!10353 = !DILocation(line: 1772, column: 11, scope: !10349)
!10354 = !DILocation(line: 1772, column: 46, scope: !10349)
!10355 = !DILocation(line: 1772, column: 3, scope: !10349)
!10356 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10119, file: !10119, line: 1737, type: !10120, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10357)
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10356, file: !10119, line: 1737, type: !1419)
!10359 = !DILocation(line: 0, scope: !10356)
!10360 = !DILocation(line: 1739, column: 11, scope: !10356)
!10361 = !DILocation(line: 1739, column: 3, scope: !10356)
!10362 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10119, file: !10119, line: 1748, type: !10120, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10363)
!10363 = !{!10364}
!10364 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10362, file: !10119, line: 1748, type: !1419)
!10365 = !DILocation(line: 0, scope: !10362)
!10366 = !DILocation(line: 1750, column: 11, scope: !10362)
!10367 = !DILocation(line: 1750, column: 45, scope: !10362)
!10368 = !DILocation(line: 1750, column: 3, scope: !10362)
!10369 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10119, file: !10119, line: 1827, type: !10120, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10370)
!10370 = !{!10371}
!10371 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10369, file: !10119, line: 1827, type: !1419)
!10372 = !DILocation(line: 0, scope: !10369)
!10373 = !DILocation(line: 1829, column: 11, scope: !10369)
!10374 = !DILocation(line: 1829, column: 46, scope: !10369)
!10375 = !DILocation(line: 1829, column: 3, scope: !10369)
!10376 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10119, file: !10119, line: 1992, type: !10182, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10377)
!10377 = !{!10378}
!10378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10376, file: !10119, line: 1992, type: !1419)
!10379 = !DILocation(line: 0, scope: !10376)
!10380 = !DILocation(line: 1994, column: 3, scope: !10376)
!10381 = !DILocation(line: 1995, column: 1, scope: !10376)
!10382 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10119, file: !10119, line: 1934, type: !10182, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10383)
!10383 = !{!10384, !10385}
!10384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10382, file: !10119, line: 1934, type: !1419)
!10385 = !DILocalVariable(name: "tmpreg", scope: !10382, file: !10119, line: 1936, type: !316)
!10386 = !DILocation(line: 0, scope: !10382)
!10387 = !DILocation(line: 1936, column: 3, scope: !10382)
!10388 = !DILocation(line: 1936, column: 17, scope: !10382)
!10389 = !DILocation(line: 1937, column: 20, scope: !10382)
!10390 = !DILocation(line: 1937, column: 10, scope: !10382)
!10391 = !DILocation(line: 1938, column: 10, scope: !10382)
!10392 = !DILocation(line: 1939, column: 20, scope: !10382)
!10393 = !DILocation(line: 1939, column: 10, scope: !10382)
!10394 = !DILocation(line: 1940, column: 10, scope: !10382)
!10395 = !DILocation(line: 1941, column: 1, scope: !10382)
!10396 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10119, file: !10119, line: 1877, type: !10182, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10397)
!10397 = !{!10398, !10399}
!10398 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10396, file: !10119, line: 1877, type: !1419)
!10399 = !DILocalVariable(name: "tmpreg", scope: !10396, file: !10119, line: 1879, type: !316)
!10400 = !DILocation(line: 0, scope: !10396)
!10401 = !DILocation(line: 1879, column: 3, scope: !10396)
!10402 = !DILocation(line: 1879, column: 17, scope: !10396)
!10403 = !DILocation(line: 1880, column: 20, scope: !10396)
!10404 = !DILocation(line: 1880, column: 10, scope: !10396)
!10405 = !DILocation(line: 1881, column: 10, scope: !10396)
!10406 = !DILocation(line: 1882, column: 20, scope: !10396)
!10407 = !DILocation(line: 1882, column: 10, scope: !10396)
!10408 = !DILocation(line: 1883, column: 10, scope: !10396)
!10409 = !DILocation(line: 1884, column: 1, scope: !10396)
!10410 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10119, file: !10119, line: 1896, type: !10182, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10411)
!10411 = !{!10412, !10413}
!10412 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10410, file: !10119, line: 1896, type: !1419)
!10413 = !DILocalVariable(name: "tmpreg", scope: !10410, file: !10119, line: 1898, type: !316)
!10414 = !DILocation(line: 0, scope: !10410)
!10415 = !DILocation(line: 1898, column: 3, scope: !10410)
!10416 = !DILocation(line: 1898, column: 17, scope: !10410)
!10417 = !DILocation(line: 1899, column: 20, scope: !10410)
!10418 = !DILocation(line: 1899, column: 10, scope: !10410)
!10419 = !DILocation(line: 1900, column: 10, scope: !10410)
!10420 = !DILocation(line: 1901, column: 20, scope: !10410)
!10421 = !DILocation(line: 1901, column: 10, scope: !10410)
!10422 = !DILocation(line: 1902, column: 10, scope: !10410)
!10423 = !DILocation(line: 1903, column: 1, scope: !10410)
!10424 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10119, file: !10119, line: 1915, type: !10182, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10425)
!10425 = !{!10426, !10427}
!10426 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10424, file: !10119, line: 1915, type: !1419)
!10427 = !DILocalVariable(name: "tmpreg", scope: !10424, file: !10119, line: 1917, type: !316)
!10428 = !DILocation(line: 0, scope: !10424)
!10429 = !DILocation(line: 1917, column: 3, scope: !10424)
!10430 = !DILocation(line: 1917, column: 17, scope: !10424)
!10431 = !DILocation(line: 1918, column: 20, scope: !10424)
!10432 = !DILocation(line: 1918, column: 10, scope: !10424)
!10433 = !DILocation(line: 1919, column: 10, scope: !10424)
!10434 = !DILocation(line: 1920, column: 20, scope: !10424)
!10435 = !DILocation(line: 1920, column: 10, scope: !10424)
!10436 = !DILocation(line: 1921, column: 10, scope: !10424)
!10437 = !DILocation(line: 1922, column: 1, scope: !10424)
!10438 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10119, file: !10119, line: 1814, type: !10120, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10439)
!10439 = !{!10440}
!10440 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10438, file: !10119, line: 1814, type: !1419)
!10441 = !DILocation(line: 0, scope: !10438)
!10442 = !DILocation(line: 1816, column: 11, scope: !10438)
!10443 = !DILocation(line: 1816, column: 46, scope: !10438)
!10444 = !DILocation(line: 1816, column: 3, scope: !10438)
!10445 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10119, file: !10119, line: 2426, type: !10446, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{null, !1419, !180}
!10448 = !{!10449, !10450}
!10449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10445, file: !10119, line: 2426, type: !1419)
!10450 = !DILocalVariable(name: "Value", arg: 2, scope: !10445, file: !10119, line: 2426, type: !180)
!10451 = !DILocation(line: 0, scope: !10445)
!10452 = !DILocation(line: 2428, column: 16, scope: !10445)
!10453 = !DILocation(line: 2428, column: 11, scope: !10445)
!10454 = !DILocation(line: 2428, column: 14, scope: !10445)
!10455 = !DILocation(line: 2429, column: 1, scope: !10445)
!10456 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10119, file: !10119, line: 1792, type: !10120, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10457)
!10457 = !{!10458}
!10458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10456, file: !10119, line: 1792, type: !1419)
!10459 = !DILocation(line: 0, scope: !10456)
!10460 = !DILocation(line: 1794, column: 11, scope: !10456)
!10461 = !DILocation(line: 1794, column: 47, scope: !10456)
!10462 = !DILocation(line: 1794, column: 3, scope: !10456)
!10463 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10119, file: !10119, line: 2403, type: !10464, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!180, !1419}
!10466 = !{!10467}
!10467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10463, file: !10119, line: 2403, type: !1419)
!10468 = !DILocation(line: 0, scope: !10463)
!10469 = !DILocation(line: 2405, column: 20, scope: !10463)
!10470 = !DILocation(line: 2405, column: 10, scope: !10463)
!10471 = !DILocation(line: 2405, column: 3, scope: !10463)
!10472 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1473, file: !1473, line: 1583, type: !1399, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477, !10478, !10479}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1473, line: 1583, type: !1378)
!10475 = !DILocalVariable(name: "config", scope: !10472, file: !1473, line: 1585, type: !9810)
!10476 = !DILocalVariable(name: "data", scope: !10472, file: !1473, line: 1586, type: !9933)
!10477 = !DILocalVariable(name: "ll_parity", scope: !10472, file: !1473, line: 1587, type: !110)
!10478 = !DILocalVariable(name: "ll_datawidth", scope: !10472, file: !1473, line: 1588, type: !110)
!10479 = !DILocalVariable(name: "err", scope: !10472, file: !1473, line: 1589, type: !109)
!10480 = !DILocation(line: 0, scope: !10472)
!10481 = !DILocation(line: 1585, column: 48, scope: !10472)
!10482 = !DILocation(line: 1586, column: 38, scope: !10472)
!10483 = !DILocation(line: 1591, column: 2, scope: !10472)
!10484 = !DILocation(line: 1593, column: 29, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1593, column: 6)
!10486 = !DILocation(line: 1593, column: 7, scope: !10485)
!10487 = !DILocation(line: 1593, column: 6, scope: !10472)
!10488 = !DILocation(line: 1594, column: 3, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10490, file: !1473, line: 1594, column: 3)
!10490 = distinct !DILexicalBlock(scope: !10491, file: !1473, line: 1594, column: 3)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !1473, line: 1594, column: 3)
!10492 = distinct !DILexicalBlock(scope: !10493, file: !1473, line: 1594, column: 3)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !1473, line: 1593, column: 37)
!10494 = !DILocation(line: 1595, column: 3, scope: !10493)
!10495 = !DILocation(line: 1599, column: 31, scope: !10472)
!10496 = !DILocation(line: 1599, column: 71, scope: !10472)
!10497 = !DILocation(line: 1599, column: 8, scope: !10472)
!10498 = !DILocation(line: 1600, column: 10, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1600, column: 6)
!10500 = !DILocation(line: 1600, column: 6, scope: !10472)
!10501 = !DILocation(line: 1601, column: 3, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !1473, line: 1601, column: 3)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !1473, line: 1601, column: 3)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !1473, line: 1601, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !1473, line: 1601, column: 3)
!10506 = distinct !DILexicalBlock(scope: !10499, file: !1473, line: 1600, column: 16)
!10507 = !DILocation(line: 1602, column: 3, scope: !10506)
!10508 = !DILocation(line: 1616, column: 36, scope: !10472)
!10509 = !DILocation(line: 1616, column: 8, scope: !10472)
!10510 = !DILocation(line: 1617, column: 10, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1617, column: 6)
!10512 = !DILocation(line: 1617, column: 6, scope: !10472)
!10513 = !DILocation(line: 1621, column: 27, scope: !10472)
!10514 = !DILocation(line: 1621, column: 2, scope: !10472)
!10515 = !DILocation(line: 1624, column: 40, scope: !10472)
!10516 = !DILocation(line: 1624, column: 2, scope: !10472)
!10517 = !DILocation(line: 1630, column: 14, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1630, column: 6)
!10519 = !DILocation(line: 1630, column: 6, scope: !10472)
!10520 = !DILocation(line: 1640, column: 4, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1473, line: 1640, column: 4)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1473, line: 1640, column: 4)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1473, line: 1640, column: 4)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1473, line: 1640, column: 4)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1473, line: 1639, column: 28)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1473, line: 1639, column: 7)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !1473, line: 1638, column: 9)
!10528 = distinct !DILexicalBlock(scope: !10518, file: !1473, line: 1634, column: 13)
!10529 = !DILocation(line: 0, scope: !10518)
!10530 = !DILocation(line: 1649, column: 35, scope: !10472)
!10531 = !DILocation(line: 1649, column: 2, scope: !10472)
!10532 = !DILocation(line: 1654, column: 14, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1654, column: 6)
!10534 = !DILocation(line: 1654, column: 6, scope: !10472)
!10535 = !DILocation(line: 1655, column: 3, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !1473, line: 1654, column: 31)
!10537 = !DILocation(line: 1656, column: 2, scope: !10536)
!10538 = !DILocation(line: 1659, column: 37, scope: !10472)
!10539 = !DILocation(line: 1659, column: 2, scope: !10472)
!10540 = !DILocation(line: 1662, column: 14, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10472, file: !1473, line: 1662, column: 6)
!10542 = !DILocation(line: 1662, column: 6, scope: !10472)
!10543 = !DILocation(line: 1663, column: 37, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10541, file: !1473, line: 1662, column: 27)
!10545 = !DILocation(line: 1663, column: 3, scope: !10544)
!10546 = !DILocation(line: 1664, column: 2, scope: !10544)
!10547 = !DILocation(line: 1684, column: 26, scope: !10472)
!10548 = !DILocation(line: 1684, column: 2, scope: !10472)
!10549 = !DILocation(line: 1722, column: 2, scope: !10472)
!10550 = !DILocation(line: 1724, column: 1, scope: !10472)
!10551 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1473, file: !1473, line: 651, type: !10552, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10554)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{null, !1378}
!10554 = !{!10555, !10556, !10557}
!10555 = !DILocalVariable(name: "dev", arg: 1, scope: !10551, file: !1473, line: 651, type: !1378)
!10556 = !DILocalVariable(name: "data", scope: !10551, file: !1473, line: 653, type: !9933)
!10557 = !DILocalVariable(name: "clk", scope: !10551, file: !1473, line: 654, type: !10558)
!10558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1378)
!10559 = !DILocation(line: 0, scope: !10551)
!10560 = !DILocation(line: 653, column: 38, scope: !10551)
!10561 = !DILocation(line: 656, column: 8, scope: !10551)
!10562 = !DILocation(line: 656, column: 14, scope: !10551)
!10563 = !DILocation(line: 657, column: 1, scope: !10551)
!10564 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !10565, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10567)
!10565 = !DISubroutineType(types: !10566)
!10566 = !{!347, !1378}
!10567 = !{!10568}
!10568 = !DILocalVariable(name: "dev", arg: 1, scope: !10564, file: !8929, line: 47, type: !1378)
!10569 = !DILocation(line: 0, scope: !10564)
!10570 = !DILocation(line: 55, column: 2, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10564, file: !8929, line: 55, column: 2)
!10572 = !{i64 2155045375}
!10573 = !DILocation(line: 56, column: 9, scope: !10564)
!10574 = !DILocation(line: 56, column: 2, scope: !10564)
!10575 = distinct !DISubprogram(name: "clock_control_on", scope: !833, file: !833, line: 123, type: !1437, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10576)
!10576 = !{!10577, !10578, !10579}
!10577 = !DILocalVariable(name: "dev", arg: 1, scope: !10575, file: !833, line: 123, type: !1378)
!10578 = !DILocalVariable(name: "sys", arg: 2, scope: !10575, file: !833, line: 124, type: !926)
!10579 = !DILocalVariable(name: "api", scope: !10575, file: !833, line: 126, type: !1430)
!10580 = !DILocation(line: 0, scope: !10575)
!10581 = !DILocation(line: 127, column: 49, scope: !10575)
!10582 = !DILocation(line: 129, column: 14, scope: !10575)
!10583 = !DILocation(line: 129, column: 9, scope: !10575)
!10584 = !DILocation(line: 129, column: 2, scope: !10575)
!10585 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1513, file: !1513, line: 342, type: !10586, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!109, !1510, !180}
!10588 = !{!10589, !10590, !10591, !10592}
!10589 = !DILocalVariable(name: "config", arg: 1, scope: !10585, file: !1513, line: 342, type: !1510)
!10590 = !DILocalVariable(name: "id", arg: 2, scope: !10585, file: !1513, line: 343, type: !180)
!10591 = !DILocalVariable(name: "ret", scope: !10585, file: !1513, line: 345, type: !109)
!10592 = !DILocalVariable(name: "state", scope: !10585, file: !1513, line: 346, type: !1516)
!10593 = !DILocation(line: 0, scope: !10585)
!10594 = !DILocation(line: 346, column: 2, scope: !10585)
!10595 = !DILocation(line: 348, column: 8, scope: !10585)
!10596 = !DILocation(line: 349, column: 10, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10585, file: !1513, line: 349, column: 6)
!10598 = !DILocation(line: 349, column: 6, scope: !10585)
!10599 = !DILocation(line: 353, column: 44, scope: !10585)
!10600 = !DILocation(line: 353, column: 9, scope: !10585)
!10601 = !DILocation(line: 353, column: 2, scope: !10585)
!10602 = !DILocation(line: 354, column: 1, scope: !10585)
!10603 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10119, file: !10119, line: 497, type: !10297, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10604)
!10604 = !{!10605, !10606, !10607}
!10605 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10603, file: !10119, line: 497, type: !1419)
!10606 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10603, file: !10119, line: 497, type: !110)
!10607 = !DILocalVariable(name: "val", scope: !10608, file: !10119, line: 499, type: !110)
!10608 = distinct !DILexicalBlock(scope: !10603, file: !10119, line: 499, column: 3)
!10609 = !DILocation(line: 0, scope: !10603)
!10610 = !DILocation(line: 499, column: 3, scope: !10608)
!10611 = !DILocalVariable(name: "addr", arg: 1, scope: !10612, file: !6418, line: 476, type: !1469)
!10612 = distinct !DISubprogram(name: "__LDREXW", scope: !6418, file: !6418, line: 476, type: !10613, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!110, !1469}
!10615 = !{!10611, !10616}
!10616 = !DILocalVariable(name: "result", scope: !10612, file: !6418, line: 478, type: !110)
!10617 = !DILocation(line: 0, scope: !10612, inlinedAt: !10618)
!10618 = distinct !DILocation(line: 499, column: 3, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10608, file: !10119, line: 499, column: 3)
!10620 = !DILocation(line: 480, column: 4, scope: !10612, inlinedAt: !10618)
!10621 = !{i64 3531355}
!10622 = !DILocation(line: 499, column: 3, scope: !10619)
!10623 = !DILocation(line: 0, scope: !10608)
!10624 = !DILocalVariable(name: "value", arg: 1, scope: !10625, file: !6418, line: 527, type: !110)
!10625 = distinct !DISubprogram(name: "__STREXW", scope: !6418, file: !6418, line: 527, type: !10626, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10628)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!110, !110, !1469}
!10628 = !{!10624, !10629, !10630}
!10629 = !DILocalVariable(name: "addr", arg: 2, scope: !10625, file: !6418, line: 527, type: !1469)
!10630 = !DILocalVariable(name: "result", scope: !10625, file: !6418, line: 529, type: !110)
!10631 = !DILocation(line: 0, scope: !10625, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 499, column: 3, scope: !10608)
!10633 = !DILocation(line: 531, column: 4, scope: !10625, inlinedAt: !10632)
!10634 = !{i64 3532791}
!10635 = distinct !{!10635, !10610, !10610}
!10636 = !DILocation(line: 500, column: 1, scope: !10603)
!10637 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10119, file: !10119, line: 850, type: !10306, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10638)
!10638 = !{!10639, !10640, !10641, !10642}
!10639 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10637, file: !10119, line: 850, type: !1419)
!10640 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10637, file: !10119, line: 850, type: !110)
!10641 = !DILocalVariable(name: "Parity", arg: 3, scope: !10637, file: !10119, line: 850, type: !110)
!10642 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10637, file: !10119, line: 851, type: !110)
!10643 = !DILocation(line: 0, scope: !10637)
!10644 = !DILocation(line: 853, column: 3, scope: !10637)
!10645 = !DILocation(line: 854, column: 3, scope: !10637)
!10646 = !DILocation(line: 855, column: 1, scope: !10637)
!10647 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10119, file: !10119, line: 1337, type: !10182, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10648)
!10648 = !{!10649}
!10649 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10647, file: !10119, line: 1337, type: !1419)
!10650 = !DILocation(line: 0, scope: !10647)
!10651 = !DILocation(line: 1339, column: 3, scope: !10647)
!10652 = !DILocation(line: 1340, column: 1, scope: !10647)
!10653 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1513, file: !1513, line: 316, type: !10654, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10656)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{!109, !1510, !1516}
!10656 = !{!10657, !10658, !10659}
!10657 = !DILocalVariable(name: "config", arg: 1, scope: !10653, file: !1513, line: 317, type: !1510)
!10658 = !DILocalVariable(name: "state", arg: 2, scope: !10653, file: !1513, line: 318, type: !1516)
!10659 = !DILocalVariable(name: "reg", scope: !10653, file: !1513, line: 320, type: !22)
!10660 = !DILocation(line: 0, scope: !10653)
!10661 = !DILocation(line: 329, column: 39, scope: !10653)
!10662 = !DILocation(line: 329, column: 52, scope: !10653)
!10663 = !DILocation(line: 329, column: 9, scope: !10653)
!10664 = !DILocation(line: 329, column: 2, scope: !10653)
!10665 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10565, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1334, retainedNodes: !10666)
!10666 = !{!10667}
!10667 = !DILocalVariable(name: "dev", arg: 1, scope: !10665, file: !336, line: 730, type: !1378)
!10668 = !DILocation(line: 0, scope: !10665)
!10669 = !DILocation(line: 732, column: 9, scope: !10665)
!10670 = !DILocation(line: 732, column: 2, scope: !10665)
!10671 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1634, file: !1634, line: 270, type: !1640, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10672)
!10672 = !{!10673}
!10673 = !DILocalVariable(name: "dev", arg: 1, scope: !10671, file: !1634, line: 270, type: !1642)
!10674 = !DILocation(line: 0, scope: !10671)
!10675 = !DILocation(line: 274, column: 2, scope: !10671)
!10676 = !DILocation(line: 275, column: 12, scope: !10671)
!10677 = !DILocation(line: 276, column: 15, scope: !10671)
!10678 = !DILocation(line: 277, column: 16, scope: !10671)
!10679 = !DILocation(line: 278, column: 15, scope: !10671)
!10680 = !DILocation(line: 279, column: 16, scope: !10671)
!10681 = !DILocation(line: 282, column: 2, scope: !10671)
!10682 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6458, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10683)
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10682, file: !535, line: 1814, type: !791)
!10685 = !DILocalVariable(name: "priority", arg: 2, scope: !10682, file: !535, line: 1814, type: !110)
!10686 = !DILocation(line: 0, scope: !10682)
!10687 = !DILocation(line: 1822, column: 46, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !535, line: 1821, column: 3)
!10689 = distinct !DILexicalBlock(scope: !10682, file: !535, line: 1816, column: 7)
!10690 = !DILocation(line: 1824, column: 1, scope: !10682)
!10691 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1634, file: !1634, line: 118, type: !6355, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10692)
!10692 = !{!10693, !10694}
!10693 = !DILocalVariable(name: "arg", arg: 1, scope: !10691, file: !1634, line: 118, type: !107)
!10694 = !DILocalVariable(name: "dticks", scope: !10691, file: !1634, line: 121, type: !110)
!10695 = !DILocation(line: 0, scope: !10691)
!10696 = !DILocation(line: 124, column: 2, scope: !10691)
!10697 = !DILocation(line: 129, column: 17, scope: !10691)
!10698 = !DILocation(line: 129, column: 14, scope: !10691)
!10699 = !DILocation(line: 130, column: 15, scope: !10691)
!10700 = !DILocation(line: 145, column: 27, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !1634, line: 132, column: 16)
!10702 = distinct !DILexicalBlock(scope: !10691, file: !1634, line: 132, column: 6)
!10703 = !DILocation(line: 145, column: 25, scope: !10701)
!10704 = !DILocation(line: 145, column: 45, scope: !10701)
!10705 = !DILocation(line: 146, column: 30, scope: !10701)
!10706 = !DILocation(line: 146, column: 20, scope: !10701)
!10707 = !DILocation(line: 147, column: 3, scope: !10701)
!10708 = !DILocation(line: 151, column: 2, scope: !10691)
!10709 = !DILocation(line: 152, column: 1, scope: !10691)
!10710 = distinct !DISubprogram(name: "elapsed", scope: !1634, file: !1634, line: 85, type: !6505, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10711)
!10711 = !{!10712, !10713, !10714}
!10712 = !DILocalVariable(name: "val1", scope: !10710, file: !1634, line: 87, type: !110)
!10713 = !DILocalVariable(name: "ctrl", scope: !10710, file: !1634, line: 88, type: !110)
!10714 = !DILocalVariable(name: "val2", scope: !10710, file: !1634, line: 89, type: !110)
!10715 = !DILocation(line: 87, column: 27, scope: !10710)
!10716 = !DILocation(line: 0, scope: !10710)
!10717 = !DILocation(line: 88, column: 27, scope: !10710)
!10718 = !DILocation(line: 89, column: 27, scope: !10710)
!10719 = !DILocation(line: 105, column: 12, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10710, file: !1634, line: 105, column: 6)
!10721 = !DILocation(line: 106, column: 6, scope: !10720)
!10722 = !DILocation(line: 107, column: 16, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10720, file: !1634, line: 106, column: 24)
!10724 = !DILocation(line: 111, column: 18, scope: !10723)
!10725 = !DILocation(line: 112, column: 2, scope: !10723)
!10726 = !DILocation(line: 114, column: 20, scope: !10710)
!10727 = !DILocation(line: 114, column: 30, scope: !10710)
!10728 = !DILocation(line: 114, column: 28, scope: !10710)
!10729 = !DILocation(line: 114, column: 2, scope: !10710)
!10730 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1634, file: !1634, line: 154, type: !10731, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10733)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{null, !765, !347}
!10733 = !{!10734, !10735, !10736, !10737, !10738, !10739, !10740, !10745, !10746}
!10734 = !DILocalVariable(name: "ticks", arg: 1, scope: !10730, file: !1634, line: 154, type: !765)
!10735 = !DILocalVariable(name: "idle", arg: 2, scope: !10730, file: !1634, line: 154, type: !347)
!10736 = !DILocalVariable(name: "delay", scope: !10730, file: !1634, line: 169, type: !110)
!10737 = !DILocalVariable(name: "val1", scope: !10730, file: !1634, line: 170, type: !110)
!10738 = !DILocalVariable(name: "val2", scope: !10730, file: !1634, line: 170, type: !110)
!10739 = !DILocalVariable(name: "last_load_", scope: !10730, file: !1634, line: 171, type: !110)
!10740 = !DILocalVariable(name: "key", scope: !10730, file: !1634, line: 176, type: !10741)
!10741 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10742)
!10742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10743)
!10743 = !{!10744}
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10742, file: !253, line: 33, baseType: !109, size: 32)
!10745 = !DILocalVariable(name: "pending", scope: !10730, file: !1634, line: 178, type: !110)
!10746 = !DILocalVariable(name: "unannounced", scope: !10730, file: !1634, line: 185, type: !110)
!10747 = !DILocation(line: 0, scope: !10730)
!10748 = !DILocation(line: 162, column: 49, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10730, file: !1634, line: 162, column: 6)
!10750 = !DILocation(line: 163, column: 17, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10749, file: !1634, line: 162, column: 78)
!10752 = !DILocation(line: 164, column: 13, scope: !10751)
!10753 = !DILocation(line: 165, column: 3, scope: !10751)
!10754 = !DILocation(line: 171, column: 24, scope: !10730)
!10755 = !DILocation(line: 173, column: 10, scope: !10730)
!10756 = !DILocation(line: 174, column: 10, scope: !10730)
!10757 = !DILocalVariable(name: "l", arg: 1, scope: !10758, file: !253, line: 136, type: !10761)
!10758 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10759, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10762)
!10759 = !DISubroutineType(types: !10760)
!10760 = !{!10741, !10761}
!10761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!10762 = !{!10757, !10763}
!10763 = !DILocalVariable(name: "k", scope: !10758, file: !253, line: 139, type: !10741)
!10764 = !DILocation(line: 0, scope: !10758, inlinedAt: !10765)
!10765 = distinct !DILocation(line: 176, column: 25, scope: !10730)
!10766 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10771)
!10767 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10768)
!10768 = !{!10769, !10770}
!10769 = !DILocalVariable(name: "key", scope: !10767, file: !6097, line: 44, type: !32)
!10770 = !DILocalVariable(name: "tmp", scope: !10767, file: !6097, line: 53, type: !32)
!10771 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10765)
!10772 = !{i64 2225442}
!10773 = !DILocation(line: 0, scope: !10767, inlinedAt: !10771)
!10774 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10765)
!10775 = distinct !DILexicalBlock(scope: !10776, file: !253, line: 148, column: 2)
!10776 = distinct !DILexicalBlock(scope: !10758, file: !253, line: 148, column: 2)
!10777 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10765)
!10778 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10765)
!10779 = distinct !DILexicalBlock(scope: !10775, file: !253, line: 148, column: 2)
!10780 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10765)
!10781 = !DILocation(line: 178, column: 21, scope: !10730)
!10782 = !DILocation(line: 180, column: 18, scope: !10730)
!10783 = !DILocation(line: 182, column: 14, scope: !10730)
!10784 = !DILocation(line: 183, column: 15, scope: !10730)
!10785 = !DILocation(line: 185, column: 39, scope: !10730)
!10786 = !DILocation(line: 185, column: 37, scope: !10730)
!10787 = !DILocation(line: 187, column: 27, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10730, file: !1634, line: 187, column: 6)
!10789 = !DILocation(line: 187, column: 6, scope: !10730)
!10790 = !DILocation(line: 202, column: 27, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !1634, line: 195, column: 9)
!10792 = !DILocation(line: 202, column: 48, scope: !10791)
!10793 = !DILocation(line: 203, column: 9, scope: !10791)
!10794 = !DILocation(line: 204, column: 11, scope: !10791)
!10795 = !DILocation(line: 205, column: 13, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10791, file: !1634, line: 205, column: 7)
!10797 = !DILocation(line: 205, column: 7, scope: !10791)
!10798 = !DILocation(line: 0, scope: !10788)
!10799 = !DILocation(line: 212, column: 18, scope: !10730)
!10800 = !DILocation(line: 214, column: 28, scope: !10730)
!10801 = !DILocation(line: 214, column: 16, scope: !10730)
!10802 = !DILocation(line: 215, column: 15, scope: !10730)
!10803 = !DILocation(line: 227, column: 11, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10730, file: !1634, line: 227, column: 6)
!10805 = !DILocation(line: 227, column: 6, scope: !10730)
!10806 = !DILocation(line: 228, column: 15, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10804, file: !1634, line: 227, column: 19)
!10808 = !DILocation(line: 228, column: 38, scope: !10807)
!10809 = !DILocation(line: 228, column: 24, scope: !10807)
!10810 = !DILocation(line: 229, column: 2, scope: !10807)
!10811 = !DILocation(line: 230, column: 24, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10804, file: !1634, line: 229, column: 9)
!10813 = !DILocation(line: 230, column: 15, scope: !10812)
!10814 = !DILocation(line: 0, scope: !10804)
!10815 = !DILocalVariable(name: "key", arg: 2, scope: !10816, file: !253, line: 190, type: !10741)
!10816 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10817, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10819)
!10817 = !DISubroutineType(types: !10818)
!10818 = !{null, !10761, !10741}
!10819 = !{!10820, !10815}
!10820 = !DILocalVariable(name: "l", arg: 1, scope: !10816, file: !253, line: 189, type: !10761)
!10821 = !DILocation(line: 0, scope: !10816, inlinedAt: !10822)
!10822 = distinct !DILocation(line: 232, column: 2, scope: !10730)
!10823 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10822)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !253, line: 194, column: 2)
!10825 = distinct !DILexicalBlock(scope: !10816, file: !253, line: 194, column: 2)
!10826 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10822)
!10827 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10822)
!10828 = distinct !DILexicalBlock(scope: !10824, file: !253, line: 194, column: 2)
!10829 = !DILocalVariable(name: "key", arg: 1, scope: !10830, file: !6097, line: 84, type: !32)
!10830 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10831)
!10831 = !{!10829}
!10832 = !DILocation(line: 0, scope: !10830, inlinedAt: !10833)
!10833 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10822)
!10834 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10833)
!10835 = !{i64 2226259}
!10836 = !DILocation(line: 234, column: 1, scope: !10730)
!10837 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1634, file: !1634, line: 236, type: !6505, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10838)
!10838 = !{!10839, !10840}
!10839 = !DILocalVariable(name: "key", scope: !10837, file: !1634, line: 242, type: !10741)
!10840 = !DILocalVariable(name: "cyc", scope: !10837, file: !1634, line: 243, type: !110)
!10841 = !DILocation(line: 0, scope: !10758, inlinedAt: !10842)
!10842 = distinct !DILocation(line: 242, column: 25, scope: !10837)
!10843 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10844)
!10844 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10842)
!10845 = !DILocation(line: 0, scope: !10767, inlinedAt: !10844)
!10846 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10842)
!10847 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10842)
!10848 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10842)
!10849 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10842)
!10850 = !DILocation(line: 0, scope: !10837)
!10851 = !DILocation(line: 243, column: 17, scope: !10837)
!10852 = !DILocation(line: 243, column: 29, scope: !10837)
!10853 = !DILocation(line: 243, column: 43, scope: !10837)
!10854 = !DILocation(line: 0, scope: !10816, inlinedAt: !10855)
!10855 = distinct !DILocation(line: 245, column: 2, scope: !10837)
!10856 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10855)
!10857 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10855)
!10858 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10855)
!10859 = !DILocation(line: 243, column: 27, scope: !10837)
!10860 = !DILocation(line: 243, column: 41, scope: !10837)
!10861 = !DILocation(line: 0, scope: !10830, inlinedAt: !10862)
!10862 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10855)
!10863 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10862)
!10864 = !DILocation(line: 246, column: 13, scope: !10837)
!10865 = !DILocation(line: 246, column: 2, scope: !10837)
!10866 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1634, file: !1634, line: 249, type: !6505, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !10867)
!10867 = !{!10868, !10869}
!10868 = !DILocalVariable(name: "key", scope: !10866, file: !1634, line: 251, type: !10741)
!10869 = !DILocalVariable(name: "ret", scope: !10866, file: !1634, line: 252, type: !110)
!10870 = !DILocation(line: 0, scope: !10758, inlinedAt: !10871)
!10871 = distinct !DILocation(line: 251, column: 25, scope: !10866)
!10872 = !DILocation(line: 55, column: 2, scope: !10767, inlinedAt: !10873)
!10873 = distinct !DILocation(line: 145, column: 10, scope: !10758, inlinedAt: !10871)
!10874 = !DILocation(line: 0, scope: !10767, inlinedAt: !10873)
!10875 = !DILocation(line: 148, column: 2, scope: !10775, inlinedAt: !10871)
!10876 = !DILocation(line: 148, column: 2, scope: !10776, inlinedAt: !10871)
!10877 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10871)
!10878 = !DILocation(line: 160, column: 2, scope: !10758, inlinedAt: !10871)
!10879 = !DILocation(line: 0, scope: !10866)
!10880 = !DILocation(line: 252, column: 17, scope: !10866)
!10881 = !DILocation(line: 252, column: 29, scope: !10866)
!10882 = !DILocation(line: 0, scope: !10816, inlinedAt: !10883)
!10883 = distinct !DILocation(line: 254, column: 2, scope: !10866)
!10884 = !DILocation(line: 194, column: 2, scope: !10824, inlinedAt: !10883)
!10885 = !DILocation(line: 194, column: 2, scope: !10825, inlinedAt: !10883)
!10886 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10883)
!10887 = !DILocation(line: 252, column: 27, scope: !10866)
!10888 = !DILocation(line: 0, scope: !10830, inlinedAt: !10889)
!10889 = distinct !DILocation(line: 215, column: 2, scope: !10816, inlinedAt: !10883)
!10890 = !DILocation(line: 95, column: 2, scope: !10830, inlinedAt: !10889)
!10891 = !DILocation(line: 255, column: 2, scope: !10866)
!10892 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1634, file: !1634, line: 258, type: !3087, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !2024)
!10893 = !DILocation(line: 260, column: 6, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10892, file: !1634, line: 260, column: 6)
!10895 = !DILocation(line: 260, column: 16, scope: !10894)
!10896 = !DILocation(line: 260, column: 6, scope: !10892)
!10897 = !DILocation(line: 261, column: 17, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !1634, line: 260, column: 34)
!10899 = !DILocation(line: 262, column: 2, scope: !10898)
!10900 = !DILocation(line: 263, column: 1, scope: !10892)
!10901 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1634, file: !1634, line: 265, type: !3087, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1558, retainedNodes: !2024)
!10902 = !DILocation(line: 267, column: 16, scope: !10901)
!10903 = !DILocation(line: 268, column: 1, scope: !10901)
!10904 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10905, file: !10905, line: 9, type: !10906, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2896, retainedNodes: !10929)
!10905 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!109, !10908, !180, !10928}
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1513, line: 60, size: 64, elements: !10911)
!10911 = !{!10912, !10927}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10910, file: !1513, line: 69, baseType: !10913, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 32)
!10914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10915)
!10915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1513, line: 50, size: 64, elements: !10916)
!10916 = !{!10917, !10925, !10926}
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10915, file: !1513, line: 52, baseType: !10918, size: 32)
!10918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10919, size: 32)
!10919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10920)
!10920 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !10921)
!10921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !10922)
!10922 = !{!10923, !10924}
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10921, file: !1524, line: 34, baseType: !110, size: 32)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10921, file: !1524, line: 36, baseType: !110, size: 32, offset: 32)
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10915, file: !1513, line: 54, baseType: !180, size: 8, offset: 32)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10915, file: !1513, line: 56, baseType: !180, size: 8, offset: 40)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10910, file: !1513, line: 71, baseType: !180, size: 8, offset: 32)
!10928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10913, size: 32)
!10929 = !{!10930, !10931, !10932}
!10930 = !DILocalVariable(name: "config", arg: 1, scope: !10904, file: !10905, line: 9, type: !10908)
!10931 = !DILocalVariable(name: "id", arg: 2, scope: !10904, file: !10905, line: 9, type: !180)
!10932 = !DILocalVariable(name: "state", arg: 3, scope: !10904, file: !10905, line: 10, type: !10928)
!10933 = !DILocation(line: 0, scope: !10904)
!10934 = !DILocation(line: 12, column: 20, scope: !10904)
!10935 = !DILocation(line: 13, column: 27, scope: !10904)
!10936 = !DILocation(line: 13, column: 42, scope: !10904)
!10937 = !DILocation(line: 13, column: 19, scope: !10904)
!10938 = !DILocation(line: 13, column: 16, scope: !10904)
!10939 = !DILocation(line: 13, column: 2, scope: !10904)
!10940 = distinct !{!10940, !10939, !10941}
!10941 = !DILocation(line: 19, column: 2, scope: !10904)
!10942 = !DILocation(line: 14, column: 23, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10905, line: 14, column: 7)
!10944 = distinct !DILexicalBlock(scope: !10904, file: !10905, line: 13, column: 54)
!10945 = !DILocation(line: 14, column: 10, scope: !10943)
!10946 = !DILocation(line: 18, column: 11, scope: !10944)
!10947 = !DILocation(line: 14, column: 7, scope: !10944)
!10948 = !DILocation(line: 22, column: 1, scope: !10904)
!10949 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1753, file: !1753, line: 193, type: !10950, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !10959)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!109, !10952, !180, !22}
!10952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10953, size: 32)
!10953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10954)
!10954 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1524, line: 37, baseType: !10955)
!10955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1524, line: 32, size: 64, elements: !10956)
!10956 = !{!10957, !10958}
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10955, file: !1524, line: 34, baseType: !110, size: 32)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10955, file: !1524, line: 36, baseType: !110, size: 32, offset: 32)
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10969}
!10960 = !DILocalVariable(name: "pins", arg: 1, scope: !10949, file: !1753, line: 193, type: !10952)
!10961 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10949, file: !1753, line: 193, type: !180)
!10962 = !DILocalVariable(name: "reg", arg: 3, scope: !10949, file: !1753, line: 194, type: !22)
!10963 = !DILocalVariable(name: "pin", scope: !10949, file: !1753, line: 196, type: !110)
!10964 = !DILocalVariable(name: "mux", scope: !10949, file: !1753, line: 196, type: !110)
!10965 = !DILocalVariable(name: "pin_cgf", scope: !10949, file: !1753, line: 197, type: !110)
!10966 = !DILocalVariable(name: "ret", scope: !10949, file: !1753, line: 198, type: !109)
!10967 = !DILocalVariable(name: "i", scope: !10968, file: !1753, line: 209, type: !180)
!10968 = distinct !DILexicalBlock(scope: !10949, file: !1753, line: 209, column: 2)
!10969 = !DILocalVariable(name: "gpio_out", scope: !10970, file: !1753, line: 239, type: !110)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !1753, line: 238, column: 55)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !1753, line: 238, column: 14)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1753, line: 236, column: 14)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !1753, line: 234, column: 7)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1753, line: 209, column: 41)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !1753, line: 209, column: 2)
!10976 = !DILocation(line: 0, scope: !10949)
!10977 = !DILocation(line: 0, scope: !10968)
!10978 = !DILocation(line: 209, column: 25, scope: !10975)
!10979 = !DILocation(line: 209, column: 2, scope: !10968)
!10980 = distinct !{!10980, !10979, !10981}
!10981 = !DILocation(line: 259, column: 2, scope: !10968)
!10982 = !DILocation(line: 210, column: 17, scope: !10974)
!10983 = !DILocation(line: 234, column: 7, scope: !10973)
!10984 = !DILocation(line: 234, column: 33, scope: !10973)
!10985 = !DILocation(line: 234, column: 7, scope: !10974)
!10986 = !DILocation(line: 235, column: 22, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10973, file: !1753, line: 234, column: 49)
!10988 = !DILocation(line: 235, column: 29, scope: !10987)
!10989 = !DILocation(line: 236, column: 3, scope: !10987)
!10990 = !DILocation(line: 236, column: 14, scope: !10973)
!10991 = !DILocation(line: 239, column: 32, scope: !10970)
!10992 = !DILocation(line: 0, scope: !10970)
!10993 = !DILocation(line: 241, column: 8, scope: !10970)
!10994 = !DILocation(line: 246, column: 3, scope: !10970)
!10995 = !DILocation(line: 252, column: 9, scope: !10974)
!10996 = !DILocation(line: 255, column: 9, scope: !10974)
!10997 = !DILocation(line: 256, column: 11, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10974, file: !1753, line: 256, column: 7)
!10999 = !DILocation(line: 209, column: 37, scope: !10975)
!11000 = !DILocation(line: 256, column: 7, scope: !10974)
!11001 = !DILocation(line: 262, column: 1, scope: !10949)
!11002 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1753, file: !1753, line: 176, type: !11003, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11005)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!109, !110, !110, !110}
!11005 = !{!11006, !11007, !11008, !11009}
!11006 = !DILocalVariable(name: "pin", arg: 1, scope: !11002, file: !1753, line: 176, type: !110)
!11007 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11002, file: !1753, line: 176, type: !110)
!11008 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11002, file: !1753, line: 176, type: !110)
!11009 = !DILocalVariable(name: "port_device", scope: !11002, file: !1753, line: 178, type: !1683)
!11010 = !DILocation(line: 0, scope: !11002)
!11011 = !DILocation(line: 180, column: 22, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11002, file: !1753, line: 180, column: 6)
!11013 = !DILocation(line: 180, column: 6, scope: !11002)
!11014 = !DILocation(line: 180, column: 6, scope: !11012)
!11015 = !DILocation(line: 184, column: 16, scope: !11002)
!11016 = !DILocation(line: 186, column: 19, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11002, file: !1753, line: 186, column: 6)
!11018 = !DILocation(line: 186, column: 28, scope: !11017)
!11019 = !DILocation(line: 186, column: 33, scope: !11017)
!11020 = !DILocation(line: 186, column: 6, scope: !11002)
!11021 = !DILocation(line: 190, column: 43, scope: !11002)
!11022 = !DILocation(line: 190, column: 9, scope: !11002)
!11023 = !DILocation(line: 190, column: 2, scope: !11002)
!11024 = !DILocation(line: 191, column: 1, scope: !11002)
!11025 = distinct !DISubprogram(name: "device_is_ready", scope: !8929, file: !8929, line: 47, type: !11026, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11028)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{!347, !1683}
!11028 = !{!11029}
!11029 = !DILocalVariable(name: "dev", arg: 1, scope: !11025, file: !8929, line: 47, type: !1683)
!11030 = !DILocation(line: 0, scope: !11025)
!11031 = !DILocation(line: 55, column: 2, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11025, file: !8929, line: 55, column: 2)
!11033 = !{i64 2149463512}
!11034 = !DILocation(line: 56, column: 9, scope: !11025)
!11035 = !DILocation(line: 56, column: 2, scope: !11025)
!11036 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11026, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1671, retainedNodes: !11037)
!11037 = !{!11038}
!11038 = !DILocalVariable(name: "dev", arg: 1, scope: !11036, file: !336, line: 730, type: !1683)
!11039 = !DILocation(line: 0, scope: !11036)
!11040 = !DILocation(line: 732, column: 9, scope: !11036)
!11041 = !DILocation(line: 732, column: 2, scope: !11036)
!11042 = distinct !DISubprogram(name: "SystemInit", scope: !1802, file: !1802, line: 167, type: !3087, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !2024)
!11043 = !DILocation(line: 182, column: 1, scope: !11042)
!11044 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1802, file: !1802, line: 220, type: !3087, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11045)
!11045 = !{!11046, !11047, !11048, !11049, !11050}
!11046 = !DILocalVariable(name: "tmp", scope: !11044, file: !1802, line: 222, type: !110)
!11047 = !DILocalVariable(name: "pllvco", scope: !11044, file: !1802, line: 222, type: !110)
!11048 = !DILocalVariable(name: "pllp", scope: !11044, file: !1802, line: 222, type: !110)
!11049 = !DILocalVariable(name: "pllsource", scope: !11044, file: !1802, line: 222, type: !110)
!11050 = !DILocalVariable(name: "pllm", scope: !11044, file: !1802, line: 222, type: !110)
!11051 = !DILocation(line: 0, scope: !11044)
!11052 = !DILocation(line: 225, column: 14, scope: !11044)
!11053 = !DILocation(line: 225, column: 19, scope: !11044)
!11054 = !DILocation(line: 227, column: 3, scope: !11044)
!11055 = !DILocation(line: 240, column: 25, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11044, file: !1802, line: 228, column: 3)
!11057 = !DILocation(line: 241, column: 19, scope: !11056)
!11058 = !DILocation(line: 241, column: 27, scope: !11056)
!11059 = !DILocation(line: 0, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11056, file: !1802, line: 243, column: 11)
!11061 = !DILocation(line: 254, column: 22, scope: !11056)
!11062 = !DILocation(line: 254, column: 62, scope: !11056)
!11063 = !DILocation(line: 255, column: 31, scope: !11056)
!11064 = !DILocation(line: 256, column: 7, scope: !11056)
!11065 = !DILocation(line: 0, scope: !11056)
!11066 = !DILocation(line: 263, column: 30, scope: !11044)
!11067 = !DILocation(line: 263, column: 52, scope: !11044)
!11068 = !DILocation(line: 263, column: 9, scope: !11044)
!11069 = !DILocation(line: 265, column: 19, scope: !11044)
!11070 = !DILocation(line: 266, column: 1, scope: !11044)
!11071 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11072, file: !11072, line: 200, type: !11073, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11072 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!11075}
!11075 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2902, line: 44, baseType: !2901)
!11076 = !DILocation(line: 202, column: 3, scope: !11071)
!11077 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11072, file: !11072, line: 219, type: !11078, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11103)
!11078 = !DISubroutineType(types: !11079)
!11079 = !{!11075, !11080}
!11080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11081, size: 32)
!11081 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11082, line: 70, baseType: !11083)
!11082 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11082, line: 49, size: 416, elements: !11084)
!11084 = !{!11085, !11086, !11087, !11088, !11089, !11090, !11091}
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11083, file: !11082, line: 51, baseType: !110, size: 32)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11083, file: !11082, line: 54, baseType: !110, size: 32, offset: 32)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11083, file: !11082, line: 57, baseType: !110, size: 32, offset: 64)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11083, file: !11082, line: 60, baseType: !110, size: 32, offset: 96)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11083, file: !11082, line: 63, baseType: !110, size: 32, offset: 128)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11083, file: !11082, line: 66, baseType: !110, size: 32, offset: 160)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11083, file: !11082, line: 69, baseType: !11092, size: 224, offset: 192)
!11092 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11093, line: 73, baseType: !11094)
!11093 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11093, line: 45, size: 224, elements: !11095)
!11095 = !{!11096, !11097, !11098, !11099, !11100, !11101, !11102}
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11094, file: !11093, line: 47, baseType: !110, size: 32)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11094, file: !11093, line: 50, baseType: !110, size: 32, offset: 32)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11094, file: !11093, line: 53, baseType: !110, size: 32, offset: 64)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11094, file: !11093, line: 56, baseType: !110, size: 32, offset: 96)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11094, file: !11093, line: 60, baseType: !110, size: 32, offset: 128)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11094, file: !11093, line: 63, baseType: !110, size: 32, offset: 160)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11094, file: !11093, line: 68, baseType: !110, size: 32, offset: 192)
!11103 = !{!11104, !11105, !11106, !11107, !11111}
!11104 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11077, file: !11072, line: 219, type: !11080)
!11105 = !DILocalVariable(name: "tickstart", scope: !11077, file: !11072, line: 221, type: !110)
!11106 = !DILocalVariable(name: "pll_config", scope: !11077, file: !11072, line: 221, type: !110)
!11107 = !DILocalVariable(name: "pwrclkchanged", scope: !11108, file: !11072, line: 391, type: !11110)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !11072, line: 390, column: 3)
!11109 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 389, column: 6)
!11110 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !828, line: 188, baseType: !2908)
!11111 = !DILocalVariable(name: "tmpreg", scope: !11112, file: !11072, line: 400, type: !316)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !11072, line: 400, column: 7)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !11072, line: 399, column: 5)
!11114 = distinct !DILexicalBlock(scope: !11108, file: !11072, line: 398, column: 8)
!11115 = !DILocation(line: 0, scope: !11077)
!11116 = !DILocation(line: 224, column: 24, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 224, column: 6)
!11118 = !DILocation(line: 224, column: 6, scope: !11077)
!11119 = !DILocation(line: 232, column: 27, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 232, column: 6)
!11121 = !DILocation(line: 232, column: 43, scope: !11120)
!11122 = !DILocation(line: 232, column: 69, scope: !11120)
!11123 = !DILocation(line: 232, column: 6, scope: !11077)
!11124 = !DILocation(line: 237, column: 9, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11126, file: !11072, line: 237, column: 8)
!11126 = distinct !DILexicalBlock(scope: !11120, file: !11072, line: 233, column: 3)
!11127 = !DILocation(line: 237, column: 39, scope: !11125)
!11128 = !DILocation(line: 237, column: 60, scope: !11125)
!11129 = !DILocation(line: 238, column: 9, scope: !11125)
!11130 = !DILocation(line: 238, column: 39, scope: !11125)
!11131 = !DILocation(line: 238, column: 60, scope: !11125)
!11132 = !DILocation(line: 238, column: 70, scope: !11125)
!11133 = !DILocation(line: 238, column: 78, scope: !11125)
!11134 = !DILocation(line: 238, column: 100, scope: !11125)
!11135 = !DILocation(line: 237, column: 8, scope: !11126)
!11136 = !DILocation(line: 240, column: 11, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !11072, line: 240, column: 10)
!11138 = distinct !DILexicalBlock(scope: !11125, file: !11072, line: 239, column: 5)
!11139 = !DILocation(line: 240, column: 57, scope: !11137)
!11140 = !DILocation(line: 240, column: 80, scope: !11137)
!11141 = !DILocation(line: 240, column: 89, scope: !11137)
!11142 = !DILocation(line: 240, column: 10, scope: !11138)
!11143 = !DILocation(line: 248, column: 7, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !11072, line: 248, column: 7)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !11072, line: 248, column: 7)
!11146 = distinct !DILexicalBlock(scope: !11125, file: !11072, line: 246, column: 5)
!11147 = !DILocation(line: 248, column: 7, scope: !11145)
!11148 = !DILocation(line: 248, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11144, file: !11072, line: 248, column: 7)
!11150 = !DILocation(line: 248, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !11072, line: 248, column: 7)
!11152 = distinct !DILexicalBlock(scope: !11144, file: !11072, line: 248, column: 7)
!11153 = !DILocation(line: 248, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11152, file: !11072, line: 248, column: 7)
!11155 = !DILocation(line: 0, scope: !11144)
!11156 = !DILocation(line: 251, column: 30, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11146, file: !11072, line: 251, column: 10)
!11158 = !DILocation(line: 251, column: 40, scope: !11157)
!11159 = !DILocation(line: 0, scope: !11157)
!11160 = !DILocation(line: 251, column: 10, scope: !11146)
!11161 = !DILocation(line: 257, column: 15, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11157, file: !11072, line: 252, column: 7)
!11163 = !DILocation(line: 257, column: 51, scope: !11162)
!11164 = !DILocation(line: 257, column: 9, scope: !11162)
!11165 = !DILocation(line: 259, column: 15, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !11072, line: 259, column: 14)
!11167 = distinct !DILexicalBlock(scope: !11162, file: !11072, line: 258, column: 9)
!11168 = !DILocation(line: 259, column: 29, scope: !11166)
!11169 = !DILocation(line: 259, column: 43, scope: !11166)
!11170 = !DILocation(line: 259, column: 14, scope: !11167)
!11171 = distinct !{!11171, !11164, !11172}
!11172 = !DILocation(line: 263, column: 9, scope: !11162)
!11173 = !DILocation(line: 271, column: 15, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11157, file: !11072, line: 266, column: 7)
!11175 = !DILocation(line: 271, column: 9, scope: !11174)
!11176 = !DILocation(line: 273, column: 15, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !11072, line: 273, column: 14)
!11178 = distinct !DILexicalBlock(scope: !11174, file: !11072, line: 272, column: 9)
!11179 = !DILocation(line: 273, column: 29, scope: !11177)
!11180 = !DILocation(line: 273, column: 43, scope: !11177)
!11181 = !DILocation(line: 273, column: 14, scope: !11178)
!11182 = distinct !{!11182, !11175, !11183}
!11183 = !DILocation(line: 277, column: 9, scope: !11174)
!11184 = !DILocation(line: 282, column: 27, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 282, column: 6)
!11186 = !DILocation(line: 282, column: 43, scope: !11185)
!11187 = !DILocation(line: 282, column: 69, scope: !11185)
!11188 = !DILocation(line: 282, column: 6, scope: !11077)
!11189 = !DILocation(line: 289, column: 9, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !11072, line: 289, column: 8)
!11191 = distinct !DILexicalBlock(scope: !11185, file: !11072, line: 283, column: 3)
!11192 = !DILocation(line: 289, column: 39, scope: !11190)
!11193 = !DILocation(line: 289, column: 60, scope: !11190)
!11194 = !DILocation(line: 290, column: 9, scope: !11190)
!11195 = !DILocation(line: 290, column: 39, scope: !11190)
!11196 = !DILocation(line: 290, column: 60, scope: !11190)
!11197 = !DILocation(line: 290, column: 70, scope: !11190)
!11198 = !DILocation(line: 290, column: 78, scope: !11190)
!11199 = !DILocation(line: 290, column: 100, scope: !11190)
!11200 = !DILocation(line: 289, column: 8, scope: !11191)
!11201 = !DILocation(line: 293, column: 11, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !11072, line: 293, column: 10)
!11203 = distinct !DILexicalBlock(scope: !11190, file: !11072, line: 291, column: 5)
!11204 = !DILocation(line: 293, column: 57, scope: !11202)
!11205 = !DILocation(line: 293, column: 80, scope: !11202)
!11206 = !DILocation(line: 293, column: 89, scope: !11202)
!11207 = !DILocation(line: 293, column: 10, scope: !11203)
!11208 = !DILocation(line: 307, column: 30, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !11072, line: 307, column: 10)
!11210 = distinct !DILexicalBlock(scope: !11190, file: !11072, line: 305, column: 5)
!11211 = !DILocation(line: 307, column: 39, scope: !11209)
!11212 = !DILocation(line: 307, column: 10, scope: !11210)
!11213 = !DILocation(line: 310, column: 9, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11209, file: !11072, line: 308, column: 7)
!11215 = !DILocation(line: 313, column: 21, scope: !11214)
!11216 = !DILocation(line: 316, column: 9, scope: !11214)
!11217 = !DILocation(line: 316, column: 15, scope: !11214)
!11218 = !DILocation(line: 316, column: 51, scope: !11214)
!11219 = !DILocation(line: 318, column: 15, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !11072, line: 318, column: 14)
!11221 = distinct !DILexicalBlock(scope: !11214, file: !11072, line: 317, column: 9)
!11222 = !DILocation(line: 318, column: 29, scope: !11220)
!11223 = !DILocation(line: 318, column: 43, scope: !11220)
!11224 = !DILocation(line: 318, column: 14, scope: !11221)
!11225 = distinct !{!11225, !11216, !11226}
!11226 = !DILocation(line: 322, column: 9, scope: !11214)
!11227 = !DILocation(line: 330, column: 9, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11209, file: !11072, line: 328, column: 7)
!11229 = !DILocation(line: 333, column: 21, scope: !11228)
!11230 = !DILocation(line: 336, column: 9, scope: !11228)
!11231 = !DILocation(line: 336, column: 15, scope: !11228)
!11232 = !DILocation(line: 338, column: 15, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !11072, line: 338, column: 14)
!11234 = distinct !DILexicalBlock(scope: !11228, file: !11072, line: 337, column: 9)
!11235 = !DILocation(line: 338, column: 29, scope: !11233)
!11236 = !DILocation(line: 338, column: 43, scope: !11233)
!11237 = !DILocation(line: 338, column: 14, scope: !11234)
!11238 = distinct !{!11238, !11230, !11239}
!11239 = !DILocation(line: 342, column: 9, scope: !11228)
!11240 = !DILocation(line: 0, scope: !11190)
!11241 = !DILocation(line: 347, column: 27, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 347, column: 6)
!11243 = !DILocation(line: 347, column: 43, scope: !11242)
!11244 = !DILocation(line: 347, column: 69, scope: !11242)
!11245 = !DILocation(line: 347, column: 6, scope: !11077)
!11246 = !DILocation(line: 353, column: 28, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11248, file: !11072, line: 353, column: 8)
!11248 = distinct !DILexicalBlock(scope: !11242, file: !11072, line: 348, column: 3)
!11249 = !DILocation(line: 353, column: 37, scope: !11247)
!11250 = !DILocation(line: 353, column: 8, scope: !11248)
!11251 = !DILocation(line: 356, column: 7, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11247, file: !11072, line: 354, column: 5)
!11253 = !DILocation(line: 359, column: 19, scope: !11252)
!11254 = !DILocation(line: 362, column: 7, scope: !11252)
!11255 = !DILocation(line: 362, column: 13, scope: !11252)
!11256 = !DILocation(line: 362, column: 49, scope: !11252)
!11257 = !DILocation(line: 364, column: 13, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !11072, line: 364, column: 12)
!11259 = distinct !DILexicalBlock(scope: !11252, file: !11072, line: 363, column: 7)
!11260 = !DILocation(line: 364, column: 27, scope: !11258)
!11261 = !DILocation(line: 364, column: 41, scope: !11258)
!11262 = !DILocation(line: 364, column: 12, scope: !11259)
!11263 = distinct !{!11263, !11254, !11264}
!11264 = !DILocation(line: 368, column: 7, scope: !11252)
!11265 = !DILocation(line: 373, column: 7, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11247, file: !11072, line: 371, column: 5)
!11267 = !DILocation(line: 376, column: 19, scope: !11266)
!11268 = !DILocation(line: 379, column: 7, scope: !11266)
!11269 = !DILocation(line: 379, column: 13, scope: !11266)
!11270 = !DILocation(line: 381, column: 13, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !11072, line: 381, column: 12)
!11272 = distinct !DILexicalBlock(scope: !11266, file: !11072, line: 380, column: 7)
!11273 = !DILocation(line: 381, column: 27, scope: !11271)
!11274 = !DILocation(line: 381, column: 41, scope: !11271)
!11275 = !DILocation(line: 381, column: 12, scope: !11272)
!11276 = distinct !{!11276, !11268, !11277}
!11277 = !DILocation(line: 385, column: 7, scope: !11266)
!11278 = !DILocation(line: 389, column: 27, scope: !11109)
!11279 = !DILocation(line: 389, column: 43, scope: !11109)
!11280 = !DILocation(line: 389, column: 69, scope: !11109)
!11281 = !DILocation(line: 389, column: 6, scope: !11077)
!11282 = !DILocation(line: 0, scope: !11108)
!11283 = !DILocation(line: 398, column: 8, scope: !11114)
!11284 = !DILocation(line: 398, column: 8, scope: !11108)
!11285 = !DILocation(line: 400, column: 7, scope: !11112)
!11286 = !DILocation(line: 400, column: 7, scope: !11113)
!11287 = !DILocation(line: 402, column: 5, scope: !11113)
!11288 = !DILocation(line: 404, column: 8, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11108, file: !11072, line: 404, column: 8)
!11290 = !DILocation(line: 404, column: 8, scope: !11108)
!11291 = !DILocation(line: 407, column: 7, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11289, file: !11072, line: 405, column: 5)
!11293 = !DILocation(line: 410, column: 19, scope: !11292)
!11294 = !DILocation(line: 412, column: 7, scope: !11292)
!11295 = !DILocation(line: 412, column: 13, scope: !11292)
!11296 = !DILocation(line: 414, column: 13, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !11072, line: 414, column: 12)
!11298 = distinct !DILexicalBlock(scope: !11292, file: !11072, line: 413, column: 7)
!11299 = !DILocation(line: 414, column: 27, scope: !11297)
!11300 = !DILocation(line: 414, column: 40, scope: !11297)
!11301 = !DILocation(line: 414, column: 12, scope: !11298)
!11302 = distinct !{!11302, !11294, !11303}
!11303 = !DILocation(line: 418, column: 7, scope: !11292)
!11304 = !DILocation(line: 422, column: 5, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !11072, line: 422, column: 5)
!11306 = distinct !DILexicalBlock(scope: !11108, file: !11072, line: 422, column: 5)
!11307 = !DILocation(line: 422, column: 5, scope: !11306)
!11308 = !DILocation(line: 422, column: 5, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !11072, line: 422, column: 5)
!11310 = !DILocation(line: 422, column: 5, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !11072, line: 422, column: 5)
!11312 = distinct !DILexicalBlock(scope: !11305, file: !11072, line: 422, column: 5)
!11313 = !DILocation(line: 422, column: 5, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11312, file: !11072, line: 422, column: 5)
!11315 = !DILocation(line: 0, scope: !11305)
!11316 = !DILocation(line: 424, column: 28, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11108, file: !11072, line: 424, column: 8)
!11318 = !DILocation(line: 424, column: 38, scope: !11317)
!11319 = !DILocation(line: 0, scope: !11317)
!11320 = !DILocation(line: 424, column: 8, scope: !11108)
!11321 = !DILocation(line: 430, column: 13, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11317, file: !11072, line: 425, column: 5)
!11323 = !DILocation(line: 430, column: 49, scope: !11322)
!11324 = !DILocation(line: 430, column: 7, scope: !11322)
!11325 = !DILocation(line: 432, column: 13, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !11072, line: 432, column: 12)
!11327 = distinct !DILexicalBlock(scope: !11322, file: !11072, line: 431, column: 7)
!11328 = !DILocation(line: 432, column: 27, scope: !11326)
!11329 = !DILocation(line: 432, column: 41, scope: !11326)
!11330 = !DILocation(line: 432, column: 12, scope: !11327)
!11331 = distinct !{!11331, !11324, !11332}
!11332 = !DILocation(line: 436, column: 7, scope: !11322)
!11333 = !DILocation(line: 444, column: 13, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11317, file: !11072, line: 439, column: 5)
!11335 = !DILocation(line: 444, column: 7, scope: !11334)
!11336 = !DILocation(line: 446, column: 13, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !11072, line: 446, column: 12)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !11072, line: 445, column: 7)
!11339 = !DILocation(line: 446, column: 27, scope: !11337)
!11340 = !DILocation(line: 446, column: 41, scope: !11337)
!11341 = !DILocation(line: 446, column: 12, scope: !11338)
!11342 = distinct !{!11342, !11335, !11343}
!11343 = !DILocation(line: 450, column: 7, scope: !11334)
!11344 = !DILocation(line: 454, column: 8, scope: !11108)
!11345 = !DILocation(line: 456, column: 7, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11347, file: !11072, line: 455, column: 5)
!11347 = distinct !DILexicalBlock(scope: !11108, file: !11072, line: 454, column: 8)
!11348 = !DILocation(line: 457, column: 5, scope: !11346)
!11349 = !DILocation(line: 462, column: 31, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11077, file: !11072, line: 462, column: 7)
!11351 = !DILocation(line: 462, column: 41, scope: !11350)
!11352 = !DILocation(line: 462, column: 7, scope: !11077)
!11353 = !DILocation(line: 465, column: 8, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11355, file: !11072, line: 465, column: 8)
!11355 = distinct !DILexicalBlock(scope: !11350, file: !11072, line: 463, column: 3)
!11356 = !DILocation(line: 465, column: 38, scope: !11354)
!11357 = !DILocation(line: 465, column: 8, scope: !11355)
!11358 = !DILocation(line: 467, column: 44, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !11072, line: 467, column: 10)
!11360 = distinct !DILexicalBlock(scope: !11354, file: !11072, line: 466, column: 5)
!11361 = !DILocation(line: 0, scope: !11359)
!11362 = !DILocation(line: 467, column: 10, scope: !11360)
!11363 = !DILocation(line: 483, column: 15, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !11072, line: 468, column: 7)
!11365 = !DILocation(line: 483, column: 9, scope: !11364)
!11366 = !DILocation(line: 485, column: 15, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !11072, line: 485, column: 14)
!11368 = distinct !DILexicalBlock(scope: !11364, file: !11072, line: 484, column: 9)
!11369 = !DILocation(line: 485, column: 29, scope: !11367)
!11370 = !DILocation(line: 485, column: 43, scope: !11367)
!11371 = !DILocation(line: 485, column: 14, scope: !11368)
!11372 = distinct !{!11372, !11365, !11373}
!11373 = !DILocation(line: 489, column: 9, scope: !11364)
!11374 = !DILocation(line: 492, column: 9, scope: !11364)
!11375 = !DILocation(line: 498, column: 9, scope: !11364)
!11376 = !DILocation(line: 501, column: 21, scope: !11364)
!11377 = !DILocation(line: 504, column: 9, scope: !11364)
!11378 = !DILocation(line: 504, column: 15, scope: !11364)
!11379 = !DILocation(line: 504, column: 51, scope: !11364)
!11380 = !DILocation(line: 506, column: 15, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !11072, line: 506, column: 14)
!11382 = distinct !DILexicalBlock(scope: !11364, file: !11072, line: 505, column: 9)
!11383 = !DILocation(line: 506, column: 29, scope: !11381)
!11384 = !DILocation(line: 506, column: 43, scope: !11381)
!11385 = !DILocation(line: 506, column: 14, scope: !11382)
!11386 = distinct !{!11386, !11377, !11387}
!11387 = !DILocation(line: 510, column: 9, scope: !11364)
!11388 = !DILocation(line: 521, column: 15, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11359, file: !11072, line: 513, column: 7)
!11390 = !DILocation(line: 521, column: 9, scope: !11389)
!11391 = !DILocation(line: 523, column: 15, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !11072, line: 523, column: 14)
!11393 = distinct !DILexicalBlock(scope: !11389, file: !11072, line: 522, column: 9)
!11394 = !DILocation(line: 523, column: 29, scope: !11392)
!11395 = !DILocation(line: 523, column: 43, scope: !11392)
!11396 = !DILocation(line: 523, column: 14, scope: !11393)
!11397 = distinct !{!11397, !11390, !11398}
!11398 = !DILocation(line: 527, column: 9, scope: !11389)
!11399 = !DILocation(line: 533, column: 44, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !11072, line: 533, column: 10)
!11401 = distinct !DILexicalBlock(scope: !11354, file: !11072, line: 531, column: 5)
!11402 = !DILocation(line: 533, column: 10, scope: !11401)
!11403 = !DILocation(line: 540, column: 27, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11400, file: !11072, line: 538, column: 7)
!11405 = !DILocation(line: 543, column: 14, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11404, file: !11072, line: 542, column: 13)
!11407 = !DILocation(line: 543, column: 81, scope: !11406)
!11408 = !DILocation(line: 543, column: 55, scope: !11406)
!11409 = !DILocation(line: 543, column: 92, scope: !11406)
!11410 = !DILocation(line: 544, column: 14, scope: !11406)
!11411 = !DILocation(line: 544, column: 80, scope: !11406)
!11412 = !DILocation(line: 544, column: 53, scope: !11406)
!11413 = !DILocation(line: 544, column: 111, scope: !11406)
!11414 = !DILocation(line: 545, column: 14, scope: !11406)
!11415 = !DILocation(line: 545, column: 80, scope: !11406)
!11416 = !DILocation(line: 545, column: 86, scope: !11406)
!11417 = !DILocation(line: 545, column: 53, scope: !11406)
!11418 = !DILocation(line: 545, column: 111, scope: !11406)
!11419 = !DILocation(line: 546, column: 14, scope: !11406)
!11420 = !DILocation(line: 546, column: 82, scope: !11406)
!11421 = !DILocation(line: 546, column: 101, scope: !11406)
!11422 = !DILocation(line: 546, column: 53, scope: !11406)
!11423 = !DILocation(line: 546, column: 126, scope: !11406)
!11424 = !DILocation(line: 547, column: 14, scope: !11406)
!11425 = !DILocation(line: 547, column: 80, scope: !11406)
!11426 = !DILocation(line: 547, column: 85, scope: !11406)
!11427 = !DILocation(line: 547, column: 53, scope: !11406)
!11428 = !DILocation(line: 547, column: 111, scope: !11406)
!11429 = !DILocation(line: 548, column: 14, scope: !11406)
!11430 = !DILocation(line: 548, column: 80, scope: !11406)
!11431 = !DILocation(line: 548, column: 85, scope: !11406)
!11432 = !DILocation(line: 548, column: 53, scope: !11406)
!11433 = !DILocation(line: 542, column: 13, scope: !11404)
!11434 = !DILocation(line: 563, column: 3, scope: !11077)
!11435 = !DILocation(line: 564, column: 1, scope: !11077)
!11436 = !DISubprogram(name: "HAL_GetTick", scope: !11437, file: !11437, line: 234, type: !6505, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!11437 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11438 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11072, file: !11072, line: 591, type: !11439, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11450)
!11439 = !DISubroutineType(types: !11440)
!11440 = !{!11075, !11441, !110}
!11441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11442, size: 32)
!11442 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11082, line: 92, baseType: !11443)
!11443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11082, line: 75, size: 160, elements: !11444)
!11444 = !{!11445, !11446, !11447, !11448, !11449}
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11443, file: !11082, line: 77, baseType: !110, size: 32)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11443, file: !11082, line: 80, baseType: !110, size: 32, offset: 32)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11443, file: !11082, line: 83, baseType: !110, size: 32, offset: 64)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11443, file: !11082, line: 86, baseType: !110, size: 32, offset: 96)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11443, file: !11082, line: 89, baseType: !110, size: 32, offset: 128)
!11450 = !{!11451, !11452, !11453}
!11451 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11438, file: !11072, line: 591, type: !11441)
!11452 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11438, file: !11072, line: 591, type: !110)
!11453 = !DILocalVariable(name: "tickstart", scope: !11438, file: !11072, line: 593, type: !110)
!11454 = !DILocation(line: 0, scope: !11438)
!11455 = !DILocation(line: 596, column: 24, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 596, column: 6)
!11457 = !DILocation(line: 596, column: 6, scope: !11438)
!11458 = !DILocation(line: 610, column: 17, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 610, column: 6)
!11460 = !DILocation(line: 610, column: 15, scope: !11459)
!11461 = !DILocation(line: 610, column: 6, scope: !11438)
!11462 = !DILocation(line: 613, column: 5, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11459, file: !11072, line: 611, column: 3)
!11464 = !DILocation(line: 617, column: 8, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11463, file: !11072, line: 617, column: 8)
!11466 = !DILocation(line: 617, column: 34, scope: !11465)
!11467 = !DILocation(line: 617, column: 8, scope: !11463)
!11468 = !DILocation(line: 624, column: 27, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 624, column: 6)
!11470 = !DILocation(line: 624, column: 38, scope: !11469)
!11471 = !DILocation(line: 624, column: 60, scope: !11469)
!11472 = !DILocation(line: 624, column: 6, scope: !11438)
!11473 = !DILocation(line: 628, column: 40, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11072, line: 628, column: 8)
!11475 = distinct !DILexicalBlock(scope: !11469, file: !11072, line: 625, column: 3)
!11476 = !DILocation(line: 628, column: 63, scope: !11474)
!11477 = !DILocation(line: 628, column: 8, scope: !11475)
!11478 = !DILocation(line: 630, column: 7, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11474, file: !11072, line: 629, column: 5)
!11480 = !DILocation(line: 633, column: 29, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11475, file: !11072, line: 633, column: 8)
!11482 = !DILocation(line: 631, column: 5, scope: !11479)
!11483 = !DILocation(line: 633, column: 40, scope: !11481)
!11484 = !DILocation(line: 633, column: 63, scope: !11481)
!11485 = !DILocation(line: 633, column: 8, scope: !11475)
!11486 = !DILocation(line: 635, column: 7, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11481, file: !11072, line: 634, column: 5)
!11488 = !DILocation(line: 636, column: 5, scope: !11487)
!11489 = !DILocation(line: 639, column: 5, scope: !11475)
!11490 = !DILocation(line: 643, column: 27, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 643, column: 6)
!11492 = !DILocation(line: 640, column: 3, scope: !11475)
!11493 = !DILocation(line: 643, column: 38, scope: !11491)
!11494 = !DILocation(line: 643, column: 62, scope: !11491)
!11495 = !DILocation(line: 643, column: 6, scope: !11438)
!11496 = !DILocation(line: 648, column: 27, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !11072, line: 648, column: 8)
!11498 = distinct !DILexicalBlock(scope: !11491, file: !11072, line: 644, column: 3)
!11499 = !DILocation(line: 648, column: 8, scope: !11498)
!11500 = !DILocation(line: 651, column: 10, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11072, line: 651, column: 10)
!11502 = distinct !DILexicalBlock(scope: !11497, file: !11072, line: 649, column: 5)
!11503 = !DILocation(line: 651, column: 46, scope: !11501)
!11504 = !DILocation(line: 651, column: 10, scope: !11502)
!11505 = !DILocation(line: 661, column: 10, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !11072, line: 661, column: 10)
!11507 = distinct !DILexicalBlock(scope: !11508, file: !11072, line: 659, column: 5)
!11508 = distinct !DILexicalBlock(scope: !11497, file: !11072, line: 657, column: 13)
!11509 = !DILocation(line: 661, column: 46, scope: !11506)
!11510 = !DILocation(line: 661, column: 10, scope: !11507)
!11511 = !DILocation(line: 670, column: 10, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !11072, line: 670, column: 10)
!11513 = distinct !DILexicalBlock(scope: !11508, file: !11072, line: 668, column: 5)
!11514 = !DILocation(line: 670, column: 46, scope: !11512)
!11515 = !DILocation(line: 670, column: 10, scope: !11513)
!11516 = !DILocation(line: 676, column: 5, scope: !11498)
!11517 = !DILocation(line: 679, column: 17, scope: !11498)
!11518 = !DILocation(line: 681, column: 5, scope: !11498)
!11519 = !DILocation(line: 681, column: 12, scope: !11498)
!11520 = !DILocation(line: 681, column: 65, scope: !11498)
!11521 = !DILocation(line: 681, column: 78, scope: !11498)
!11522 = !DILocation(line: 681, column: 42, scope: !11498)
!11523 = !DILocation(line: 683, column: 12, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !11072, line: 683, column: 11)
!11525 = distinct !DILexicalBlock(scope: !11498, file: !11072, line: 682, column: 5)
!11526 = !DILocation(line: 683, column: 26, scope: !11524)
!11527 = !DILocation(line: 683, column: 39, scope: !11524)
!11528 = !DILocation(line: 683, column: 11, scope: !11525)
!11529 = distinct !{!11529, !11518, !11530}
!11530 = !DILocation(line: 687, column: 5, scope: !11498)
!11531 = !DILocation(line: 691, column: 17, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 691, column: 6)
!11533 = !DILocation(line: 691, column: 15, scope: !11532)
!11534 = !DILocation(line: 691, column: 6, scope: !11438)
!11535 = !DILocation(line: 694, column: 5, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11532, file: !11072, line: 692, column: 3)
!11537 = !DILocation(line: 698, column: 8, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11536, file: !11072, line: 698, column: 8)
!11539 = !DILocation(line: 698, column: 34, scope: !11538)
!11540 = !DILocation(line: 698, column: 8, scope: !11536)
!11541 = !DILocation(line: 705, column: 27, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 705, column: 6)
!11543 = !DILocation(line: 705, column: 38, scope: !11542)
!11544 = !DILocation(line: 705, column: 61, scope: !11542)
!11545 = !DILocation(line: 705, column: 6, scope: !11438)
!11546 = !DILocation(line: 708, column: 5, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11542, file: !11072, line: 706, column: 3)
!11548 = !DILocation(line: 712, column: 27, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11438, file: !11072, line: 712, column: 6)
!11550 = !DILocation(line: 709, column: 3, scope: !11547)
!11551 = !DILocation(line: 712, column: 38, scope: !11549)
!11552 = !DILocation(line: 712, column: 61, scope: !11549)
!11553 = !DILocation(line: 712, column: 6, scope: !11438)
!11554 = !DILocation(line: 715, column: 5, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11549, file: !11072, line: 713, column: 3)
!11556 = !DILocation(line: 716, column: 3, scope: !11555)
!11557 = !DILocation(line: 719, column: 21, scope: !11438)
!11558 = !DILocation(line: 719, column: 70, scope: !11438)
!11559 = !DILocation(line: 719, column: 91, scope: !11438)
!11560 = !DILocation(line: 719, column: 50, scope: !11438)
!11561 = !DILocation(line: 719, column: 47, scope: !11438)
!11562 = !DILocation(line: 719, column: 19, scope: !11438)
!11563 = !DILocation(line: 722, column: 17, scope: !11438)
!11564 = !DILocation(line: 722, column: 3, scope: !11438)
!11565 = !DILocation(line: 724, column: 3, scope: !11438)
!11566 = !DILocation(line: 725, column: 1, scope: !11438)
!11567 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11072, file: !11072, line: 885, type: !6505, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11568)
!11568 = !{!11569, !11570, !11571, !11572}
!11569 = !DILocalVariable(name: "pllm", scope: !11567, file: !11072, line: 887, type: !110)
!11570 = !DILocalVariable(name: "pllvco", scope: !11567, file: !11072, line: 887, type: !110)
!11571 = !DILocalVariable(name: "pllp", scope: !11567, file: !11072, line: 887, type: !110)
!11572 = !DILocalVariable(name: "sysclockfreq", scope: !11567, file: !11072, line: 888, type: !110)
!11573 = !DILocation(line: 0, scope: !11567)
!11574 = !DILocation(line: 891, column: 16, scope: !11567)
!11575 = !DILocation(line: 891, column: 21, scope: !11567)
!11576 = !DILocation(line: 891, column: 3, scope: !11567)
!11577 = !DILocation(line: 907, column: 19, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !11072, line: 904, column: 5)
!11579 = distinct !DILexicalBlock(scope: !11567, file: !11072, line: 892, column: 3)
!11580 = !DILocation(line: 907, column: 27, scope: !11578)
!11581 = !DILocation(line: 908, column: 10, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11578, file: !11072, line: 908, column: 10)
!11583 = !DILocation(line: 0, scope: !11582)
!11584 = !DILocation(line: 918, column: 23, scope: !11578)
!11585 = !DILocation(line: 918, column: 82, scope: !11578)
!11586 = !DILocation(line: 920, column: 28, scope: !11578)
!11587 = !DILocation(line: 921, column: 7, scope: !11578)
!11588 = !DILocation(line: 0, scope: !11579)
!11589 = !DILocation(line: 929, column: 3, scope: !11567)
!11590 = !DISubprogram(name: "HAL_InitTick", scope: !11437, file: !11437, line: 223, type: !11591, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!11591 = !DISubroutineType(types: !11592)
!11592 = !{!11075, !110}
!11593 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11072, file: !11072, line: 775, type: !11594, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11596)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{null, !110, !110, !110}
!11596 = !{!11597, !11598, !11599, !11600, !11610}
!11597 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11593, file: !11072, line: 775, type: !110)
!11598 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11593, file: !11072, line: 775, type: !110)
!11599 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11593, file: !11072, line: 775, type: !110)
!11600 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11593, file: !11072, line: 777, type: !11601)
!11601 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11602, line: 62, baseType: !11603)
!11602 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11602, line: 46, size: 160, elements: !11604)
!11604 = !{!11605, !11606, !11607, !11608, !11609}
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11603, file: !11602, line: 48, baseType: !110, size: 32)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11603, file: !11602, line: 51, baseType: !110, size: 32, offset: 32)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11603, file: !11602, line: 54, baseType: !110, size: 32, offset: 64)
!11608 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11603, file: !11602, line: 57, baseType: !110, size: 32, offset: 96)
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11603, file: !11602, line: 60, baseType: !110, size: 32, offset: 128)
!11610 = !DILocalVariable(name: "tmpreg", scope: !11611, file: !11072, line: 787, type: !316)
!11611 = distinct !DILexicalBlock(scope: !11612, file: !11072, line: 787, column: 5)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !11072, line: 783, column: 3)
!11613 = distinct !DILexicalBlock(scope: !11593, file: !11072, line: 782, column: 6)
!11614 = !DILocation(line: 0, scope: !11593)
!11615 = !DILocation(line: 777, column: 3, scope: !11593)
!11616 = !DILocation(line: 777, column: 20, scope: !11593)
!11617 = !DILocation(line: 782, column: 15, scope: !11613)
!11618 = !DILocation(line: 782, column: 6, scope: !11593)
!11619 = !DILocation(line: 787, column: 5, scope: !11611)
!11620 = !DILocation(line: 787, column: 5, scope: !11612)
!11621 = !DILocation(line: 790, column: 21, scope: !11612)
!11622 = !DILocation(line: 790, column: 25, scope: !11612)
!11623 = !DILocation(line: 791, column: 21, scope: !11612)
!11624 = !DILocation(line: 791, column: 26, scope: !11612)
!11625 = !DILocation(line: 792, column: 21, scope: !11612)
!11626 = !DILocation(line: 792, column: 27, scope: !11612)
!11627 = !DILocation(line: 793, column: 21, scope: !11612)
!11628 = !DILocation(line: 793, column: 26, scope: !11612)
!11629 = !DILocation(line: 794, column: 21, scope: !11612)
!11630 = !DILocation(line: 794, column: 31, scope: !11612)
!11631 = !DILocation(line: 795, column: 5, scope: !11612)
!11632 = !DILocation(line: 798, column: 5, scope: !11612)
!11633 = !DILocation(line: 804, column: 3, scope: !11612)
!11634 = !DILocation(line: 830, column: 1, scope: !11593)
!11635 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11602, file: !11602, line: 224, type: !11636, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{null, !2970, !11638}
!11638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11601, size: 32)
!11639 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11072, file: !11072, line: 841, type: !3087, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11640 = !DILocation(line: 843, column: 38, scope: !11639)
!11641 = !DILocation(line: 844, column: 1, scope: !11639)
!11642 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11072, file: !11072, line: 850, type: !3087, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11643 = !DILocation(line: 852, column: 38, scope: !11642)
!11644 = !DILocation(line: 853, column: 1, scope: !11642)
!11645 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11072, file: !11072, line: 941, type: !6505, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11646 = !DILocation(line: 943, column: 10, scope: !11645)
!11647 = !DILocation(line: 943, column: 3, scope: !11645)
!11648 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11072, file: !11072, line: 952, type: !6505, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11649 = !DILocation(line: 955, column: 11, scope: !11648)
!11650 = !DILocation(line: 955, column: 56, scope: !11648)
!11651 = !DILocation(line: 955, column: 78, scope: !11648)
!11652 = !DILocation(line: 955, column: 36, scope: !11648)
!11653 = !DILocation(line: 955, column: 33, scope: !11648)
!11654 = !DILocation(line: 955, column: 3, scope: !11648)
!11655 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11072, file: !11072, line: 964, type: !6505, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11656 = !DILocation(line: 967, column: 11, scope: !11655)
!11657 = !DILocation(line: 967, column: 55, scope: !11655)
!11658 = !DILocation(line: 967, column: 77, scope: !11655)
!11659 = !DILocation(line: 967, column: 35, scope: !11655)
!11660 = !DILocation(line: 967, column: 32, scope: !11655)
!11661 = !DILocation(line: 967, column: 3, scope: !11655)
!11662 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11072, file: !11072, line: 977, type: !11663, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11665)
!11663 = !DISubroutineType(types: !11664)
!11664 = !{null, !11080}
!11665 = !{!11666}
!11666 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11662, file: !11072, line: 977, type: !11080)
!11667 = !DILocation(line: 0, scope: !11662)
!11668 = !DILocation(line: 980, column: 22, scope: !11662)
!11669 = !DILocation(line: 980, column: 37, scope: !11662)
!11670 = !DILocation(line: 983, column: 12, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11662, file: !11072, line: 983, column: 6)
!11672 = !DILocation(line: 983, column: 15, scope: !11671)
!11673 = !DILocation(line: 983, column: 31, scope: !11671)
!11674 = !DILocation(line: 983, column: 6, scope: !11662)
!11675 = !DILocation(line: 985, column: 24, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11671, file: !11072, line: 984, column: 3)
!11677 = !DILocation(line: 985, column: 33, scope: !11676)
!11678 = !DILocation(line: 986, column: 3, scope: !11676)
!11679 = !DILocation(line: 987, column: 17, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11671, file: !11072, line: 987, column: 11)
!11681 = !DILocation(line: 987, column: 20, scope: !11680)
!11682 = !DILocation(line: 987, column: 35, scope: !11680)
!11683 = !DILocation(line: 0, scope: !11680)
!11684 = !DILocation(line: 987, column: 11, scope: !11671)
!11685 = !DILocation(line: 989, column: 33, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11680, file: !11072, line: 988, column: 3)
!11687 = !DILocation(line: 990, column: 3, scope: !11686)
!11688 = !DILocation(line: 993, column: 33, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11680, file: !11072, line: 992, column: 3)
!11690 = !DILocation(line: 997, column: 12, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11662, file: !11072, line: 997, column: 6)
!11692 = !DILocation(line: 997, column: 15, scope: !11691)
!11693 = !DILocation(line: 1003, column: 24, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11691, file: !11072, line: 1002, column: 3)
!11695 = !DILocation(line: 1003, column: 33, scope: !11694)
!11696 = !DILocation(line: 1006, column: 61, scope: !11662)
!11697 = !DILocation(line: 1006, column: 81, scope: !11662)
!11698 = !DILocation(line: 1006, column: 22, scope: !11662)
!11699 = !DILocation(line: 1006, column: 42, scope: !11662)
!11700 = !DILocation(line: 1009, column: 12, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11662, file: !11072, line: 1009, column: 6)
!11702 = !DILocation(line: 1009, column: 17, scope: !11701)
!11703 = !DILocation(line: 1009, column: 35, scope: !11701)
!11704 = !DILocation(line: 1009, column: 6, scope: !11662)
!11705 = !DILocation(line: 1011, column: 24, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11701, file: !11072, line: 1010, column: 3)
!11707 = !DILocation(line: 1011, column: 33, scope: !11706)
!11708 = !DILocation(line: 1012, column: 3, scope: !11706)
!11709 = !DILocation(line: 1013, column: 17, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11701, file: !11072, line: 1013, column: 11)
!11711 = !DILocation(line: 1013, column: 22, scope: !11710)
!11712 = !DILocation(line: 1013, column: 39, scope: !11710)
!11713 = !DILocation(line: 0, scope: !11710)
!11714 = !DILocation(line: 1013, column: 11, scope: !11701)
!11715 = !DILocation(line: 1015, column: 33, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11710, file: !11072, line: 1014, column: 3)
!11717 = !DILocation(line: 1016, column: 3, scope: !11716)
!11718 = !DILocation(line: 1019, column: 33, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11710, file: !11072, line: 1018, column: 3)
!11720 = !DILocation(line: 1023, column: 12, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11662, file: !11072, line: 1023, column: 6)
!11722 = !DILocation(line: 1023, column: 16, scope: !11721)
!11723 = !DILocation(line: 1029, column: 24, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11721, file: !11072, line: 1028, column: 3)
!11725 = !DILocation(line: 1029, column: 33, scope: !11724)
!11726 = !DILocation(line: 1033, column: 12, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11662, file: !11072, line: 1033, column: 6)
!11728 = !DILocation(line: 1033, column: 15, scope: !11727)
!11729 = !DILocation(line: 1033, column: 30, scope: !11727)
!11730 = !DILocation(line: 1033, column: 6, scope: !11662)
!11731 = !DILocation(line: 1039, column: 28, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11727, file: !11072, line: 1038, column: 3)
!11733 = !DILocation(line: 1039, column: 37, scope: !11732)
!11734 = !DILocation(line: 1041, column: 54, scope: !11662)
!11735 = !DILocation(line: 1041, column: 62, scope: !11662)
!11736 = !DILocation(line: 1041, column: 26, scope: !11662)
!11737 = !DILocation(line: 1041, column: 36, scope: !11662)
!11738 = !DILocation(line: 1042, column: 49, scope: !11662)
!11739 = !DILocation(line: 1042, column: 57, scope: !11662)
!11740 = !DILocation(line: 1042, column: 26, scope: !11662)
!11741 = !DILocation(line: 1042, column: 31, scope: !11662)
!11742 = !DILocation(line: 1043, column: 50, scope: !11662)
!11743 = !DILocation(line: 1043, column: 78, scope: !11662)
!11744 = !DILocation(line: 1043, column: 26, scope: !11662)
!11745 = !DILocation(line: 1043, column: 31, scope: !11662)
!11746 = !DILocation(line: 1044, column: 52, scope: !11662)
!11747 = !DILocation(line: 1044, column: 102, scope: !11662)
!11748 = !DILocation(line: 1044, column: 109, scope: !11662)
!11749 = !DILocation(line: 1044, column: 26, scope: !11662)
!11750 = !DILocation(line: 1044, column: 31, scope: !11662)
!11751 = !DILocation(line: 1045, column: 50, scope: !11662)
!11752 = !DILocation(line: 1045, column: 78, scope: !11662)
!11753 = !DILocation(line: 1045, column: 26, scope: !11662)
!11754 = !DILocation(line: 1045, column: 31, scope: !11662)
!11755 = !DILocation(line: 1046, column: 1, scope: !11662)
!11756 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11072, file: !11072, line: 1056, type: !11757, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !11759)
!11757 = !DISubroutineType(types: !11758)
!11758 = !{null, !11441, !882}
!11759 = !{!11760, !11761}
!11760 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11756, file: !11072, line: 1056, type: !11441)
!11761 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11756, file: !11072, line: 1056, type: !882)
!11762 = !DILocation(line: 0, scope: !11756)
!11763 = !DILocation(line: 1059, column: 22, scope: !11756)
!11764 = !DILocation(line: 1059, column: 32, scope: !11756)
!11765 = !DILocation(line: 1062, column: 53, scope: !11756)
!11766 = !DILocation(line: 1062, column: 58, scope: !11756)
!11767 = !DILocation(line: 1062, column: 22, scope: !11756)
!11768 = !DILocation(line: 1062, column: 35, scope: !11756)
!11769 = !DILocation(line: 1065, column: 54, scope: !11756)
!11770 = !DILocation(line: 1065, column: 59, scope: !11756)
!11771 = !DILocation(line: 1065, column: 22, scope: !11756)
!11772 = !DILocation(line: 1065, column: 36, scope: !11756)
!11773 = !DILocation(line: 1068, column: 55, scope: !11756)
!11774 = !DILocation(line: 1068, column: 60, scope: !11756)
!11775 = !DILocation(line: 1068, column: 22, scope: !11756)
!11776 = !DILocation(line: 1068, column: 37, scope: !11756)
!11777 = !DILocation(line: 1071, column: 56, scope: !11756)
!11778 = !DILocation(line: 1071, column: 79, scope: !11756)
!11779 = !DILocation(line: 1071, column: 22, scope: !11756)
!11780 = !DILocation(line: 1071, column: 37, scope: !11756)
!11781 = !DILocation(line: 1074, column: 34, scope: !11756)
!11782 = !DILocation(line: 1074, column: 38, scope: !11756)
!11783 = !DILocation(line: 1074, column: 14, scope: !11756)
!11784 = !DILocation(line: 1075, column: 1, scope: !11756)
!11785 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11072, file: !11072, line: 1082, type: !3087, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11786 = !DILocation(line: 1085, column: 6, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11785, file: !11072, line: 1085, column: 6)
!11788 = !DILocation(line: 1085, column: 6, scope: !11785)
!11789 = !DILocation(line: 1088, column: 5, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11787, file: !11072, line: 1086, column: 3)
!11791 = !DILocation(line: 1091, column: 5, scope: !11790)
!11792 = !DILocation(line: 1092, column: 3, scope: !11790)
!11793 = !DILocation(line: 1093, column: 1, scope: !11785)
!11794 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11072, file: !11072, line: 1099, type: !3087, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !2024)
!11795 = !DILocation(line: 1104, column: 1, scope: !11794)
!11796 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11797, file: !11797, line: 257, type: !6515, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11798)
!11797 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11798 = !{!11799}
!11799 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11796, file: !11797, line: 257, type: !110)
!11800 = !DILocation(line: 0, scope: !11796)
!11801 = !DILocation(line: 260, column: 3, scope: !11796)
!11802 = !DILocation(line: 261, column: 1, scope: !11796)
!11803 = distinct !DISubprogram(name: "LL_InitTick", scope: !11804, file: !11804, line: 260, type: !9431, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11805)
!11804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11805 = !{!11806, !11807}
!11806 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11803, file: !11804, line: 260, type: !110)
!11807 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11803, file: !11804, line: 260, type: !110)
!11808 = !DILocation(line: 0, scope: !11803)
!11809 = !DILocation(line: 263, column: 46, scope: !11803)
!11810 = !DILocation(line: 263, column: 55, scope: !11803)
!11811 = !DILocation(line: 263, column: 18, scope: !11803)
!11812 = !DILocation(line: 264, column: 18, scope: !11803)
!11813 = !DILocation(line: 265, column: 18, scope: !11803)
!11814 = !DILocation(line: 267, column: 1, scope: !11803)
!11815 = distinct !DISubprogram(name: "LL_mDelay", scope: !11797, file: !11797, line: 273, type: !6515, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11816)
!11816 = !{!11817, !11818}
!11817 = !DILocalVariable(name: "Delay", arg: 1, scope: !11815, file: !11797, line: 273, type: !110)
!11818 = !DILocalVariable(name: "tmp", scope: !11815, file: !11797, line: 275, type: !316)
!11819 = !DILocation(line: 0, scope: !11815)
!11820 = !DILocation(line: 275, column: 3, scope: !11815)
!11821 = !DILocation(line: 275, column: 18, scope: !11815)
!11822 = !DILocation(line: 275, column: 33, scope: !11815)
!11823 = !DILocation(line: 277, column: 10, scope: !11815)
!11824 = !DILocation(line: 280, column: 12, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11815, file: !11797, line: 280, column: 6)
!11826 = !DILocation(line: 285, column: 3, scope: !11815)
!11827 = !DILocation(line: 287, column: 18, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !11797, line: 287, column: 8)
!11829 = distinct !DILexicalBlock(scope: !11815, file: !11797, line: 286, column: 3)
!11830 = !DILocation(line: 292, column: 1, scope: !11815)
!11831 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11797, file: !11797, line: 323, type: !6515, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11832)
!11832 = !{!11833}
!11833 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11831, file: !11797, line: 323, type: !110)
!11834 = !DILocation(line: 0, scope: !11831)
!11835 = !DILocation(line: 326, column: 19, scope: !11831)
!11836 = !DILocation(line: 327, column: 1, scope: !11831)
!11837 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11797, file: !11797, line: 338, type: !11838, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11841)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{!11840, !110}
!11840 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !828, line: 201, baseType: !827)
!11841 = !{!11842, !11843, !11844, !11845, !11846}
!11842 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11837, file: !11797, line: 338, type: !110)
!11843 = !DILocalVariable(name: "timeout", scope: !11837, file: !11797, line: 340, type: !110)
!11844 = !DILocalVariable(name: "getlatency", scope: !11837, file: !11797, line: 341, type: !110)
!11845 = !DILocalVariable(name: "latency", scope: !11837, file: !11797, line: 342, type: !110)
!11846 = !DILocalVariable(name: "status", scope: !11837, file: !11797, line: 343, type: !11840)
!11847 = !DILocation(line: 0, scope: !11837)
!11848 = !DILocation(line: 347, column: 21, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11837, file: !11797, line: 347, column: 6)
!11850 = !DILocation(line: 347, column: 6, scope: !11837)
!11851 = !DILocation(line: 353, column: 8, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !11797, line: 353, column: 8)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !11797, line: 352, column: 3)
!11854 = !DILocation(line: 353, column: 40, scope: !11852)
!11855 = !DILocation(line: 353, column: 8, scope: !11853)
!11856 = !DILocation(line: 374, column: 55, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !11797, line: 374, column: 10)
!11858 = distinct !DILexicalBlock(scope: !11852, file: !11797, line: 354, column: 5)
!11859 = !DILocation(line: 368, column: 26, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11858, file: !11797, line: 368, column: 10)
!11861 = !DILocation(line: 368, column: 55, scope: !11860)
!11862 = !DILocation(line: 380, column: 57, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11864, file: !11797, line: 380, column: 12)
!11864 = distinct !DILexicalBlock(scope: !11857, file: !11797, line: 379, column: 7)
!11865 = !DILocation(line: 387, column: 8, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11853, file: !11797, line: 387, column: 8)
!11867 = !DILocation(line: 387, column: 40, scope: !11866)
!11868 = !DILocation(line: 387, column: 8, scope: !11853)
!11869 = !DILocation(line: 407, column: 26, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11871, file: !11797, line: 407, column: 10)
!11871 = distinct !DILexicalBlock(scope: !11866, file: !11797, line: 388, column: 5)
!11872 = !DILocation(line: 407, column: 55, scope: !11870)
!11873 = !DILocation(line: 413, column: 28, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11797, line: 413, column: 12)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !11797, line: 412, column: 7)
!11876 = !DILocation(line: 413, column: 57, scope: !11874)
!11877 = !DILocation(line: 0, scope: !11853)
!11878 = !DILocation(line: 420, column: 8, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11853, file: !11797, line: 420, column: 8)
!11880 = !DILocation(line: 420, column: 40, scope: !11879)
!11881 = !DILocation(line: 420, column: 8, scope: !11853)
!11882 = !DILocation(line: 429, column: 26, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !11797, line: 429, column: 10)
!11884 = distinct !DILexicalBlock(scope: !11879, file: !11797, line: 421, column: 5)
!11885 = !DILocation(line: 429, column: 55, scope: !11883)
!11886 = !DILocation(line: 435, column: 28, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !11797, line: 435, column: 12)
!11888 = distinct !DILexicalBlock(scope: !11883, file: !11797, line: 434, column: 7)
!11889 = !DILocation(line: 435, column: 57, scope: !11887)
!11890 = !DILocation(line: 444, column: 5, scope: !11853)
!11891 = !DILocation(line: 448, column: 5, scope: !11853)
!11892 = !DILocation(line: 451, column: 18, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11853, file: !11797, line: 449, column: 5)
!11894 = !DILocation(line: 452, column: 12, scope: !11893)
!11895 = !DILocation(line: 453, column: 26, scope: !11853)
!11896 = !DILocation(line: 453, column: 38, scope: !11853)
!11897 = !DILocation(line: 453, column: 5, scope: !11893)
!11898 = distinct !{!11898, !11891, !11899}
!11899 = !DILocation(line: 453, column: 54, scope: !11853)
!11900 = !DILocation(line: 0, scope: !11849)
!11901 = !DILocation(line: 464, column: 3, scope: !11837)
!11902 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11903, file: !11903, line: 519, type: !6505, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!11903 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11904 = !DILocation(line: 521, column: 21, scope: !11902)
!11905 = !DILocation(line: 521, column: 3, scope: !11902)
!11906 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6118, file: !6118, line: 1543, type: !6515, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11907)
!11907 = !{!11908}
!11908 = !DILocalVariable(name: "Latency", arg: 1, scope: !11906, file: !6118, line: 1543, type: !110)
!11909 = !DILocation(line: 0, scope: !11906)
!11910 = !DILocation(line: 1545, column: 3, scope: !11906)
!11911 = !DILocation(line: 1546, column: 1, scope: !11906)
!11912 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6118, file: !6118, line: 1569, type: !6505, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!11913 = !DILocation(line: 1571, column: 21, scope: !11912)
!11914 = !DILocation(line: 1571, column: 3, scope: !11912)
!11915 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11797, file: !11797, line: 483, type: !11916, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11932)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!11840, !11918, !11925}
!11918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11919, size: 32)
!11919 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11804, line: 114, baseType: !11920)
!11920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11804, line: 94, size: 96, elements: !11921)
!11921 = !{!11922, !11923, !11924}
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11920, file: !11804, line: 96, baseType: !110, size: 32)
!11923 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11920, file: !11804, line: 102, baseType: !110, size: 32, offset: 32)
!11924 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11920, file: !11804, line: 109, baseType: !110, size: 32, offset: 64)
!11925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11926, size: 32)
!11926 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11804, line: 139, baseType: !11927)
!11927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11804, line: 119, size: 96, elements: !11928)
!11928 = !{!11929, !11930, !11931}
!11929 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11927, file: !11804, line: 121, baseType: !110, size: 32)
!11930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11927, file: !11804, line: 127, baseType: !110, size: 32, offset: 32)
!11931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11927, file: !11804, line: 133, baseType: !110, size: 32, offset: 64)
!11932 = !{!11933, !11934, !11935, !11936}
!11933 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11915, file: !11797, line: 483, type: !11918)
!11934 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11915, file: !11797, line: 484, type: !11925)
!11935 = !DILocalVariable(name: "status", scope: !11915, file: !11797, line: 486, type: !11840)
!11936 = !DILocalVariable(name: "pllfreq", scope: !11915, file: !11797, line: 487, type: !110)
!11937 = !DILocation(line: 0, scope: !11915)
!11938 = !DILocation(line: 490, column: 6, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11915, file: !11797, line: 490, column: 6)
!11940 = !DILocation(line: 490, column: 25, scope: !11939)
!11941 = !DILocation(line: 490, column: 6, scope: !11915)
!11942 = !DILocation(line: 493, column: 15, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11939, file: !11797, line: 491, column: 3)
!11944 = !DILocation(line: 496, column: 8, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11943, file: !11797, line: 496, column: 8)
!11946 = !DILocation(line: 496, column: 29, scope: !11945)
!11947 = !DILocation(line: 496, column: 8, scope: !11943)
!11948 = !DILocation(line: 498, column: 7, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11945, file: !11797, line: 497, column: 5)
!11950 = !DILocation(line: 499, column: 7, scope: !11949)
!11951 = !DILocation(line: 499, column: 14, scope: !11949)
!11952 = !DILocation(line: 499, column: 35, scope: !11949)
!11953 = distinct !{!11953, !11950, !11954}
!11954 = !DILocation(line: 502, column: 7, scope: !11949)
!11955 = !DILocation(line: 506, column: 76, scope: !11943)
!11956 = !DILocation(line: 506, column: 103, scope: !11943)
!11957 = !DILocation(line: 507, column: 54, scope: !11943)
!11958 = !DILocation(line: 506, column: 5, scope: !11943)
!11959 = !DILocation(line: 510, column: 14, scope: !11943)
!11960 = !DILocation(line: 511, column: 3, scope: !11943)
!11961 = !DILocation(line: 0, scope: !11939)
!11962 = !DILocation(line: 518, column: 3, scope: !11915)
!11963 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11797, file: !11797, line: 642, type: !11964, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11966)
!11964 = !DISubroutineType(types: !11965)
!11965 = !{!11840}
!11966 = !{!11967}
!11967 = !DILocalVariable(name: "status", scope: !11963, file: !11797, line: 644, type: !11840)
!11968 = !DILocation(line: 0, scope: !11963)
!11969 = !DILocation(line: 647, column: 6, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11963, file: !11797, line: 647, column: 6)
!11971 = !DILocation(line: 647, column: 27, scope: !11970)
!11972 = !DILocation(line: 663, column: 6, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11963, file: !11797, line: 663, column: 6)
!11974 = !DILocation(line: 663, column: 30, scope: !11973)
!11975 = !DILocation(line: 663, column: 6, scope: !11963)
!11976 = !DILocation(line: 669, column: 3, scope: !11963)
!11977 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11797, file: !11797, line: 611, type: !11978, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !11980)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!110, !110, !11918}
!11980 = !{!11981, !11982, !11983}
!11981 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11977, file: !11797, line: 611, type: !110)
!11982 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11977, file: !11797, line: 611, type: !11918)
!11983 = !DILocalVariable(name: "pllfreq", scope: !11977, file: !11797, line: 613, type: !110)
!11984 = !DILocation(line: 0, scope: !11977)
!11985 = !DILocation(line: 622, column: 56, scope: !11977)
!11986 = !DILocation(line: 622, column: 61, scope: !11977)
!11987 = !DILocation(line: 622, column: 32, scope: !11977)
!11988 = !DILocation(line: 626, column: 45, scope: !11977)
!11989 = !DILocation(line: 626, column: 50, scope: !11977)
!11990 = !DILocation(line: 626, column: 21, scope: !11977)
!11991 = !DILocation(line: 630, column: 47, scope: !11977)
!11992 = !DILocation(line: 630, column: 82, scope: !11977)
!11993 = !DILocation(line: 630, column: 21, scope: !11977)
!11994 = !DILocation(line: 633, column: 3, scope: !11977)
!11995 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8757, file: !8757, line: 3007, type: !6505, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!11996 = !DILocation(line: 3009, column: 11, scope: !11995)
!11997 = !DILocation(line: 3009, column: 44, scope: !11995)
!11998 = !DILocation(line: 3009, column: 3, scope: !11995)
!11999 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8757, file: !8757, line: 2987, type: !3087, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12000 = !DILocation(line: 2989, column: 3, scope: !11999)
!12001 = !DILocation(line: 2990, column: 1, scope: !11999)
!12002 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8757, file: !8757, line: 4304, type: !8891, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12003)
!12003 = !{!12004, !12005, !12006, !12007}
!12004 = !DILocalVariable(name: "Source", arg: 1, scope: !12002, file: !8757, line: 4304, type: !110)
!12005 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12002, file: !8757, line: 4304, type: !110)
!12006 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12002, file: !8757, line: 4304, type: !110)
!12007 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12002, file: !8757, line: 4304, type: !110)
!12008 = !DILocation(line: 0, scope: !12002)
!12009 = !DILocation(line: 4306, column: 3, scope: !12002)
!12010 = !DILocation(line: 4308, column: 3, scope: !12002)
!12011 = !DILocation(line: 4312, column: 1, scope: !12002)
!12012 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11797, file: !11797, line: 681, type: !12013, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12015)
!12013 = !DISubroutineType(types: !12014)
!12014 = !{!11840, !110, !11925}
!12015 = !{!12016, !12017, !12018, !12019}
!12016 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12012, file: !11797, line: 681, type: !110)
!12017 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12012, file: !11797, line: 681, type: !11925)
!12018 = !DILocalVariable(name: "status", scope: !12012, file: !11797, line: 683, type: !11840)
!12019 = !DILocalVariable(name: "hclk_frequency", scope: !12012, file: !11797, line: 684, type: !110)
!12020 = !DILocation(line: 0, scope: !12012)
!12021 = !DILocation(line: 691, column: 20, scope: !12012)
!12022 = !DILocation(line: 694, column: 6, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12012, file: !11797, line: 694, column: 6)
!12024 = !DILocation(line: 694, column: 22, scope: !12023)
!12025 = !DILocation(line: 694, column: 6, scope: !12012)
!12026 = !DILocation(line: 697, column: 14, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12023, file: !11797, line: 695, column: 3)
!12028 = !DILocation(line: 701, column: 13, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12012, file: !11797, line: 701, column: 6)
!12030 = !DILocation(line: 701, column: 6, scope: !12012)
!12031 = !DILocation(line: 704, column: 5, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12029, file: !11797, line: 702, column: 3)
!12033 = !DILocation(line: 705, column: 5, scope: !12032)
!12034 = !DILocation(line: 705, column: 12, scope: !12032)
!12035 = !DILocation(line: 705, column: 33, scope: !12032)
!12036 = distinct !{!12036, !12033, !12037}
!12037 = !DILocation(line: 708, column: 5, scope: !12032)
!12038 = !DILocation(line: 711, column: 49, scope: !12032)
!12039 = !DILocation(line: 711, column: 5, scope: !12032)
!12040 = !DILocation(line: 712, column: 5, scope: !12032)
!12041 = !DILocation(line: 713, column: 5, scope: !12032)
!12042 = !DILocation(line: 713, column: 12, scope: !12032)
!12043 = !DILocation(line: 713, column: 37, scope: !12032)
!12044 = distinct !{!12044, !12041, !12045}
!12045 = !DILocation(line: 716, column: 5, scope: !12032)
!12046 = !DILocation(line: 719, column: 50, scope: !12032)
!12047 = !DILocation(line: 719, column: 5, scope: !12032)
!12048 = !DILocation(line: 720, column: 50, scope: !12032)
!12049 = !DILocation(line: 720, column: 5, scope: !12032)
!12050 = !DILocation(line: 721, column: 3, scope: !12032)
!12051 = !DILocation(line: 724, column: 6, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12012, file: !11797, line: 724, column: 6)
!12053 = !DILocation(line: 724, column: 22, scope: !12052)
!12054 = !DILocation(line: 724, column: 6, scope: !12012)
!12055 = !DILocation(line: 727, column: 14, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12052, file: !11797, line: 725, column: 3)
!12057 = !DILocation(line: 728, column: 3, scope: !12056)
!12058 = !DILocation(line: 731, column: 13, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12012, file: !11797, line: 731, column: 6)
!12060 = !DILocation(line: 731, column: 6, scope: !12012)
!12061 = !DILocation(line: 733, column: 5, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12059, file: !11797, line: 732, column: 3)
!12063 = !DILocation(line: 734, column: 3, scope: !12062)
!12064 = !DILocation(line: 736, column: 3, scope: !12012)
!12065 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8757, file: !8757, line: 4184, type: !3087, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12066 = !DILocation(line: 4186, column: 3, scope: !12065)
!12067 = !DILocation(line: 4187, column: 1, scope: !12065)
!12068 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8757, file: !8757, line: 4205, type: !6505, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12069 = !DILocation(line: 4207, column: 11, scope: !12068)
!12070 = !DILocation(line: 4207, column: 44, scope: !12068)
!12071 = !DILocation(line: 4207, column: 3, scope: !12068)
!12072 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8757, file: !8757, line: 3224, type: !6515, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12073)
!12073 = !{!12074}
!12074 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12072, file: !8757, line: 3224, type: !110)
!12075 = !DILocation(line: 0, scope: !12072)
!12076 = !DILocation(line: 3226, column: 3, scope: !12072)
!12077 = !DILocation(line: 3227, column: 1, scope: !12072)
!12078 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8757, file: !8757, line: 3188, type: !6515, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12079)
!12079 = !{!12080}
!12080 = !DILocalVariable(name: "Source", arg: 1, scope: !12078, file: !8757, line: 3188, type: !110)
!12081 = !DILocation(line: 0, scope: !12078)
!12082 = !DILocation(line: 3190, column: 3, scope: !12078)
!12083 = !DILocation(line: 3191, column: 1, scope: !12078)
!12084 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8757, file: !8757, line: 3204, type: !6505, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12085 = !DILocation(line: 3206, column: 21, scope: !12084)
!12086 = !DILocation(line: 3206, column: 3, scope: !12084)
!12087 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8757, file: !8757, line: 3240, type: !6515, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12088)
!12088 = !{!12089}
!12089 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12087, file: !8757, line: 3240, type: !110)
!12090 = !DILocation(line: 0, scope: !12087)
!12091 = !DILocation(line: 3242, column: 3, scope: !12087)
!12092 = !DILocation(line: 3243, column: 1, scope: !12087)
!12093 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8757, file: !8757, line: 3256, type: !6515, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12094)
!12094 = !{!12095}
!12095 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12093, file: !8757, line: 3256, type: !110)
!12096 = !DILocation(line: 0, scope: !12093)
!12097 = !DILocation(line: 3258, column: 3, scope: !12093)
!12098 = !DILocation(line: 3259, column: 1, scope: !12093)
!12099 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8757, file: !8757, line: 5153, type: !6505, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12100 = !DILocation(line: 5155, column: 11, scope: !12099)
!12101 = !DILocation(line: 5155, column: 47, scope: !12099)
!12102 = !DILocation(line: 5155, column: 3, scope: !12099)
!12103 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11797, file: !11797, line: 540, type: !12104, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !12106)
!12104 = !DISubroutineType(types: !12105)
!12105 = !{!11840, !110, !110, !11918, !11925}
!12106 = !{!12107, !12108, !12109, !12110, !12111, !12112}
!12107 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12103, file: !11797, line: 540, type: !110)
!12108 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12103, file: !11797, line: 540, type: !110)
!12109 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12103, file: !11797, line: 541, type: !11918)
!12110 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12103, file: !11797, line: 541, type: !11925)
!12111 = !DILocalVariable(name: "status", scope: !12103, file: !11797, line: 543, type: !11840)
!12112 = !DILocalVariable(name: "pllfreq", scope: !12103, file: !11797, line: 544, type: !110)
!12113 = !DILocation(line: 0, scope: !12103)
!12114 = !DILocation(line: 551, column: 6, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12103, file: !11797, line: 551, column: 6)
!12116 = !DILocation(line: 551, column: 25, scope: !12115)
!12117 = !DILocation(line: 551, column: 6, scope: !12103)
!12118 = !DILocation(line: 554, column: 15, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12115, file: !11797, line: 552, column: 3)
!12120 = !DILocation(line: 557, column: 8, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12119, file: !11797, line: 557, column: 8)
!12122 = !DILocation(line: 557, column: 29, scope: !12121)
!12123 = !DILocation(line: 557, column: 8, scope: !12119)
!12124 = !DILocation(line: 560, column: 20, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11797, line: 560, column: 10)
!12126 = distinct !DILexicalBlock(scope: !12121, file: !11797, line: 558, column: 5)
!12127 = !DILocation(line: 560, column: 10, scope: !12126)
!12128 = !DILocation(line: 562, column: 9, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12125, file: !11797, line: 561, column: 7)
!12130 = !DILocation(line: 563, column: 7, scope: !12129)
!12131 = !DILocation(line: 566, column: 9, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12125, file: !11797, line: 565, column: 7)
!12133 = !DILocation(line: 570, column: 7, scope: !12126)
!12134 = !DILocation(line: 571, column: 7, scope: !12126)
!12135 = !DILocation(line: 571, column: 14, scope: !12126)
!12136 = !DILocation(line: 571, column: 35, scope: !12126)
!12137 = distinct !{!12137, !12134, !12138}
!12138 = !DILocation(line: 574, column: 7, scope: !12126)
!12139 = !DILocation(line: 578, column: 76, scope: !12119)
!12140 = !DILocation(line: 578, column: 103, scope: !12119)
!12141 = !DILocation(line: 579, column: 54, scope: !12119)
!12142 = !DILocation(line: 578, column: 5, scope: !12119)
!12143 = !DILocation(line: 582, column: 14, scope: !12119)
!12144 = !DILocation(line: 583, column: 3, scope: !12119)
!12145 = !DILocation(line: 0, scope: !12115)
!12146 = !DILocation(line: 590, column: 3, scope: !12103)
!12147 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8757, file: !8757, line: 2969, type: !6505, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12148 = !DILocation(line: 2971, column: 11, scope: !12147)
!12149 = !DILocation(line: 2971, column: 44, scope: !12147)
!12150 = !DILocation(line: 2971, column: 3, scope: !12147)
!12151 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8757, file: !8757, line: 2929, type: !3087, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12152 = !DILocation(line: 2931, column: 3, scope: !12151)
!12153 = !DILocation(line: 2932, column: 1, scope: !12151)
!12154 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8757, file: !8757, line: 2939, type: !3087, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12155 = !DILocation(line: 2941, column: 3, scope: !12154)
!12156 = !DILocation(line: 2942, column: 1, scope: !12154)
!12157 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8757, file: !8757, line: 2949, type: !3087, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !2024)
!12158 = !DILocation(line: 2951, column: 3, scope: !12157)
!12159 = !DILocation(line: 2952, column: 1, scope: !12157)
!12160 = distinct !DISubprogram(name: "z_device_state_init", scope: !12161, file: !12161, line: 23, type: !3087, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12162)
!12161 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12162 = !{!12163}
!12163 = !DILocalVariable(name: "dev", scope: !12160, file: !12161, line: 25, type: !12164)
!12164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12165, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12166)
!12166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12167)
!12167 = !{!12168, !12169, !12170, !12171, !12177, !12178}
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12166, file: !336, line: 380, baseType: !279, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12166, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12170 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12166, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12166, file: !336, line: 386, baseType: !12172, size: 32, offset: 96)
!12172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12173, size: 32)
!12173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12174)
!12174 = !{!12175, !12176}
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12173, file: !336, line: 359, baseType: !180, size: 8)
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12173, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12166, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12166, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12179 = !DILocation(line: 0, scope: !12160)
!12180 = !DILocation(line: 31, column: 1, scope: !12160)
!12181 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12161, file: !12161, line: 33, type: !12182, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12184)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{!12164, !279}
!12184 = !{!12185, !12186}
!12185 = !DILocalVariable(name: "name", arg: 1, scope: !12181, file: !12161, line: 33, type: !279)
!12186 = !DILocalVariable(name: "dev", scope: !12181, file: !12161, line: 35, type: !12164)
!12187 = !DILocation(line: 0, scope: !12181)
!12188 = !DILocation(line: 40, column: 12, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12181, file: !12161, line: 40, column: 6)
!12190 = !DILocation(line: 40, column: 21, scope: !12189)
!12191 = !DILocation(line: 40, column: 25, scope: !12189)
!12192 = !DILocation(line: 40, column: 33, scope: !12189)
!12193 = !DILocation(line: 40, column: 6, scope: !12181)
!12194 = !DILocation(line: 55, column: 2, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12181, file: !12161, line: 55, column: 2)
!12196 = !DILocation(line: 50, column: 7, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12198, file: !12161, line: 50, column: 7)
!12198 = distinct !DILexicalBlock(scope: !12199, file: !12161, line: 49, column: 57)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !12161, line: 49, column: 2)
!12200 = distinct !DILexicalBlock(scope: !12181, file: !12161, line: 49, column: 2)
!12201 = !DILocation(line: 50, column: 30, scope: !12197)
!12202 = !DILocation(line: 50, column: 39, scope: !12197)
!12203 = !DILocation(line: 50, column: 44, scope: !12197)
!12204 = !DILocation(line: 50, column: 7, scope: !12198)
!12205 = !DILocation(line: 49, column: 53, scope: !12199)
!12206 = !DILocation(line: 49, column: 33, scope: !12199)
!12207 = !DILocation(line: 49, column: 2, scope: !12200)
!12208 = distinct !{!12208, !12207, !12209}
!12209 = !DILocation(line: 53, column: 2, scope: !12200)
!12210 = !DILocation(line: 56, column: 7, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12212, file: !12161, line: 56, column: 7)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !12161, line: 55, column: 57)
!12213 = distinct !DILexicalBlock(scope: !12195, file: !12161, line: 55, column: 2)
!12214 = !DILocation(line: 56, column: 30, scope: !12211)
!12215 = !DILocation(line: 56, column: 52, scope: !12211)
!12216 = !DILocation(line: 56, column: 34, scope: !12211)
!12217 = !DILocation(line: 56, column: 58, scope: !12211)
!12218 = !DILocation(line: 56, column: 7, scope: !12212)
!12219 = !DILocation(line: 55, column: 53, scope: !12213)
!12220 = !DILocation(line: 55, column: 33, scope: !12213)
!12221 = distinct !{!12221, !12194, !12222}
!12222 = !DILocation(line: 59, column: 2, scope: !12195)
!12223 = !DILocation(line: 62, column: 1, scope: !12181)
!12224 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12161, file: !12161, line: 93, type: !12225, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12227)
!12225 = !DISubroutineType(types: !12226)
!12226 = !{!347, !12164}
!12227 = !{!12228}
!12228 = !DILocalVariable(name: "dev", arg: 1, scope: !12224, file: !12161, line: 93, type: !12164)
!12229 = !DILocation(line: 0, scope: !12224)
!12230 = !DILocation(line: 99, column: 10, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12224, file: !12161, line: 99, column: 6)
!12232 = !DILocation(line: 99, column: 6, scope: !12224)
!12233 = !DILocation(line: 103, column: 14, scope: !12224)
!12234 = !DILocation(line: 103, column: 21, scope: !12224)
!12235 = !DILocation(line: 103, column: 33, scope: !12224)
!12236 = !DILocation(line: 103, column: 49, scope: !12224)
!12237 = !DILocation(line: 103, column: 58, scope: !12224)
!12238 = !DILocation(line: 104, column: 1, scope: !12224)
!12239 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12161, file: !12161, line: 87, type: !12240, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12243)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!234, !12242}
!12242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12164, size: 32)
!12243 = !{!12244}
!12244 = !DILocalVariable(name: "devices", arg: 1, scope: !12239, file: !12161, line: 87, type: !12242)
!12245 = !DILocation(line: 0, scope: !12239)
!12246 = !DILocation(line: 89, column: 11, scope: !12239)
!12247 = !DILocation(line: 90, column: 2, scope: !12239)
!12248 = distinct !DISubprogram(name: "device_required_foreach", scope: !12161, file: !12161, line: 125, type: !12249, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12255)
!12249 = !DISubroutineType(types: !12250)
!12250 = !{!109, !12164, !12251, !107}
!12251 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12252)
!12252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12253, size: 32)
!12253 = !DISubroutineType(types: !12254)
!12254 = !{!109, !12164, !107}
!12255 = !{!12256, !12257, !12258, !12259, !12260}
!12256 = !DILocalVariable(name: "dev", arg: 1, scope: !12248, file: !12161, line: 125, type: !12164)
!12257 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12248, file: !12161, line: 126, type: !12251)
!12258 = !DILocalVariable(name: "context", arg: 3, scope: !12248, file: !12161, line: 127, type: !107)
!12259 = !DILocalVariable(name: "handle_count", scope: !12248, file: !12161, line: 129, type: !234)
!12260 = !DILocalVariable(name: "handles", scope: !12248, file: !12161, line: 130, type: !350)
!12261 = !DILocation(line: 0, scope: !12248)
!12262 = !DILocation(line: 129, column: 2, scope: !12248)
!12263 = !DILocation(line: 129, column: 9, scope: !12248)
!12264 = !DILocation(line: 130, column: 35, scope: !12248)
!12265 = !DILocation(line: 132, column: 33, scope: !12248)
!12266 = !DILocation(line: 132, column: 9, scope: !12248)
!12267 = !DILocation(line: 133, column: 1, scope: !12248)
!12268 = !DILocation(line: 132, column: 2, scope: !12248)
!12269 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12270, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12272)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!350, !12164, !2540}
!12272 = !{!12273, !12274, !12275, !12276}
!12273 = !DILocalVariable(name: "dev", arg: 1, scope: !12269, file: !336, line: 493, type: !12164)
!12274 = !DILocalVariable(name: "count", arg: 2, scope: !12269, file: !336, line: 493, type: !2540)
!12275 = !DILocalVariable(name: "rv", scope: !12269, file: !336, line: 495, type: !350)
!12276 = !DILocalVariable(name: "i", scope: !12277, file: !336, line: 498, type: !234)
!12277 = distinct !DILexicalBlock(scope: !12278, file: !336, line: 497, column: 18)
!12278 = distinct !DILexicalBlock(scope: !12269, file: !336, line: 497, column: 6)
!12279 = !DILocation(line: 0, scope: !12269)
!12280 = !DILocation(line: 495, column: 35, scope: !12269)
!12281 = !DILocation(line: 497, column: 9, scope: !12278)
!12282 = !DILocation(line: 497, column: 6, scope: !12269)
!12283 = !DILocation(line: 0, scope: !12277)
!12284 = !DILocation(line: 500, column: 11, scope: !12277)
!12285 = !DILocation(line: 500, column: 40, scope: !12277)
!12286 = !DILocation(line: 502, column: 4, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12277, file: !336, line: 501, column: 40)
!12288 = distinct !{!12288, !12289, !12290}
!12289 = !DILocation(line: 500, column: 3, scope: !12277)
!12290 = !DILocation(line: 503, column: 3, scope: !12277)
!12291 = !DILocation(line: 504, column: 10, scope: !12277)
!12292 = !DILocation(line: 505, column: 2, scope: !12277)
!12293 = !DILocation(line: 507, column: 2, scope: !12269)
!12294 = distinct !DISubprogram(name: "device_visitor", scope: !12161, file: !12161, line: 106, type: !12295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12297)
!12295 = !DISubroutineType(types: !12296)
!12296 = !{!109, !350, !234, !12251, !107}
!12297 = !{!12298, !12299, !12300, !12301, !12302, !12304, !12307, !12308}
!12298 = !DILocalVariable(name: "handles", arg: 1, scope: !12294, file: !12161, line: 106, type: !350)
!12299 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12294, file: !12161, line: 107, type: !234)
!12300 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12294, file: !12161, line: 108, type: !12251)
!12301 = !DILocalVariable(name: "context", arg: 4, scope: !12294, file: !12161, line: 109, type: !107)
!12302 = !DILocalVariable(name: "i", scope: !12303, file: !12161, line: 112, type: !234)
!12303 = distinct !DILexicalBlock(scope: !12294, file: !12161, line: 112, column: 2)
!12304 = !DILocalVariable(name: "dh", scope: !12305, file: !12161, line: 113, type: !352)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !12161, line: 112, column: 44)
!12306 = distinct !DILexicalBlock(scope: !12303, file: !12161, line: 112, column: 2)
!12307 = !DILocalVariable(name: "rdev", scope: !12305, file: !12161, line: 114, type: !12164)
!12308 = !DILocalVariable(name: "rc", scope: !12305, file: !12161, line: 115, type: !109)
!12309 = !DILocation(line: 0, scope: !12294)
!12310 = !DILocation(line: 0, scope: !12303)
!12311 = !DILocation(line: 112, column: 23, scope: !12306)
!12312 = !DILocation(line: 112, column: 2, scope: !12303)
!12313 = distinct !{!12313, !12312, !12314}
!12314 = !DILocation(line: 120, column: 2, scope: !12303)
!12315 = !DILocation(line: 113, column: 24, scope: !12305)
!12316 = !DILocation(line: 0, scope: !12305)
!12317 = !DILocation(line: 114, column: 31, scope: !12305)
!12318 = !DILocation(line: 115, column: 12, scope: !12305)
!12319 = !DILocation(line: 117, column: 10, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12305, file: !12161, line: 117, column: 7)
!12321 = !DILocation(line: 112, column: 39, scope: !12306)
!12322 = !DILocation(line: 123, column: 1, scope: !12294)
!12323 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12324, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12326)
!12324 = !DISubroutineType(types: !12325)
!12325 = !{!12164, !352}
!12326 = !{!12327, !12328, !12329}
!12327 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12323, file: !336, line: 439, type: !352)
!12328 = !DILocalVariable(name: "dev", scope: !12323, file: !336, line: 443, type: !12164)
!12329 = !DILocalVariable(name: "numdev", scope: !12323, file: !336, line: 444, type: !234)
!12330 = !DILocation(line: 0, scope: !12323)
!12331 = !DILocation(line: 446, column: 7, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12323, file: !336, line: 446, column: 6)
!12333 = !DILocation(line: 446, column: 18, scope: !12332)
!12334 = !DILocation(line: 446, column: 23, scope: !12332)
!12335 = !DILocation(line: 450, column: 2, scope: !12323)
!12336 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12161, file: !12161, line: 135, type: !12249, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12337)
!12337 = !{!12338, !12339, !12340, !12341, !12342}
!12338 = !DILocalVariable(name: "dev", arg: 1, scope: !12336, file: !12161, line: 135, type: !12164)
!12339 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12336, file: !12161, line: 136, type: !12251)
!12340 = !DILocalVariable(name: "context", arg: 3, scope: !12336, file: !12161, line: 137, type: !107)
!12341 = !DILocalVariable(name: "handle_count", scope: !12336, file: !12161, line: 139, type: !234)
!12342 = !DILocalVariable(name: "handles", scope: !12336, file: !12161, line: 140, type: !350)
!12343 = !DILocation(line: 0, scope: !12336)
!12344 = !DILocation(line: 139, column: 2, scope: !12336)
!12345 = !DILocation(line: 139, column: 9, scope: !12336)
!12346 = !DILocation(line: 140, column: 35, scope: !12336)
!12347 = !DILocation(line: 142, column: 33, scope: !12336)
!12348 = !DILocation(line: 142, column: 9, scope: !12336)
!12349 = !DILocation(line: 143, column: 1, scope: !12336)
!12350 = !DILocation(line: 142, column: 2, scope: !12336)
!12351 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12270, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3047, retainedNodes: !12352)
!12352 = !{!12353, !12354, !12355, !12356, !12357}
!12353 = !DILocalVariable(name: "dev", arg: 1, scope: !12351, file: !336, line: 573, type: !12164)
!12354 = !DILocalVariable(name: "count", arg: 2, scope: !12351, file: !336, line: 573, type: !2540)
!12355 = !DILocalVariable(name: "rv", scope: !12351, file: !336, line: 575, type: !350)
!12356 = !DILocalVariable(name: "region", scope: !12351, file: !336, line: 576, type: !234)
!12357 = !DILocalVariable(name: "i", scope: !12351, file: !336, line: 577, type: !234)
!12358 = !DILocation(line: 0, scope: !12351)
!12359 = !DILocation(line: 575, column: 35, scope: !12351)
!12360 = !DILocation(line: 579, column: 9, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12351, file: !336, line: 579, column: 6)
!12362 = !DILocation(line: 579, column: 6, scope: !12351)
!12363 = !DILocation(line: 582, column: 8, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12365, file: !336, line: 582, column: 8)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !336, line: 581, column: 23)
!12366 = distinct !DILexicalBlock(scope: !12361, file: !336, line: 579, column: 18)
!12367 = !DILocation(line: 582, column: 12, scope: !12364)
!12368 = !DILocation(line: 585, column: 6, scope: !12365)
!12369 = !DILocation(line: 0, scope: !12366)
!12370 = !DILocation(line: 581, column: 17, scope: !12366)
!12371 = !DILocation(line: 581, column: 3, scope: !12366)
!12372 = !DILocation(line: 588, column: 10, scope: !12366)
!12373 = !DILocation(line: 588, column: 16, scope: !12366)
!12374 = !DILocation(line: 589, column: 4, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12366, file: !336, line: 588, column: 39)
!12376 = !DILocation(line: 588, column: 3, scope: !12366)
!12377 = distinct !{!12377, !12376, !12378}
!12378 = !DILocation(line: 590, column: 3, scope: !12366)
!12379 = !DILocation(line: 591, column: 10, scope: !12366)
!12380 = !DILocation(line: 592, column: 2, scope: !12366)
!12381 = !DILocation(line: 575, column: 25, scope: !12351)
!12382 = !DILocation(line: 594, column: 2, scope: !12351)
!12383 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1815, file: !1815, line: 49, type: !12384, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1812, retainedNodes: !2024)
!12384 = !DISubroutineType(types: !12385)
!12385 = !{!281}
!12386 = !DILocation(line: 51, column: 10, scope: !12383)
!12387 = !DILocation(line: 51, column: 20, scope: !12383)
!12388 = !DILocation(line: 51, column: 2, scope: !12383)
!12389 = distinct !DISubprogram(name: "coredump", scope: !3054, file: !3054, line: 209, type: !12390, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12539)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{null, !32, !12392, !12436}
!12392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12393, size: 32)
!12393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12394)
!12394 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2670, line: 141, baseType: !12395)
!12395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2670, line: 97, size: 256, elements: !12396)
!12396 = !{!12397}
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12395, file: !2670, line: 107, baseType: !12398, size: 256)
!12398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2670, line: 98, size: 256, elements: !12399)
!12399 = !{!12400, !12405, !12410, !12415, !12420, !12425, !12430, !12435}
!12400 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 99, baseType: !12401, size: 32)
!12401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 99, size: 32, elements: !12402)
!12402 = !{!12403, !12404}
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12401, file: !2670, line: 99, baseType: !110, size: 32)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12401, file: !2670, line: 99, baseType: !110, size: 32)
!12405 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 100, baseType: !12406, size: 32, offset: 32)
!12406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 100, size: 32, elements: !12407)
!12407 = !{!12408, !12409}
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12406, file: !2670, line: 100, baseType: !110, size: 32)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12406, file: !2670, line: 100, baseType: !110, size: 32)
!12410 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 101, baseType: !12411, size: 32, offset: 64)
!12411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 101, size: 32, elements: !12412)
!12412 = !{!12413, !12414}
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12411, file: !2670, line: 101, baseType: !110, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12411, file: !2670, line: 101, baseType: !110, size: 32)
!12415 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 102, baseType: !12416, size: 32, offset: 96)
!12416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 102, size: 32, elements: !12417)
!12417 = !{!12418, !12419}
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12416, file: !2670, line: 102, baseType: !110, size: 32)
!12419 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12416, file: !2670, line: 102, baseType: !110, size: 32)
!12420 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 103, baseType: !12421, size: 32, offset: 128)
!12421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 103, size: 32, elements: !12422)
!12422 = !{!12423, !12424}
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12421, file: !2670, line: 103, baseType: !110, size: 32)
!12424 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12421, file: !2670, line: 103, baseType: !110, size: 32)
!12425 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 104, baseType: !12426, size: 32, offset: 160)
!12426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 104, size: 32, elements: !12427)
!12427 = !{!12428, !12429}
!12428 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12426, file: !2670, line: 104, baseType: !110, size: 32)
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12426, file: !2670, line: 104, baseType: !110, size: 32)
!12430 = !DIDerivedType(tag: DW_TAG_member, scope: !12398, file: !2670, line: 105, baseType: !12431, size: 32, offset: 192)
!12431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12398, file: !2670, line: 105, size: 32, elements: !12432)
!12432 = !{!12433, !12434}
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12431, file: !2670, line: 105, baseType: !110, size: 32)
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12431, file: !2670, line: 105, baseType: !110, size: 32)
!12435 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12398, file: !2670, line: 106, baseType: !110, size: 32, offset: 224)
!12436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12437, size: 32)
!12437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !12438)
!12438 = !{!12439, !12497, !12509, !12510, !12511, !12512, !12513, !12519, !12534}
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12437, file: !158, line: 247, baseType: !12440, size: 384)
!12440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !12441)
!12441 = !{!12442, !12466, !12473, !12474, !12475, !12484, !12485, !12486}
!12442 = !DIDerivedType(tag: DW_TAG_member, scope: !12440, file: !158, line: 60, baseType: !12443, size: 64)
!12443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12440, file: !158, line: 60, size: 64, elements: !12444)
!12444 = !{!12445, !12460}
!12445 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12443, file: !158, line: 61, baseType: !12446, size: 64)
!12446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12447)
!12447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12448)
!12448 = !{!12449, !12455}
!12449 = !DIDerivedType(tag: DW_TAG_member, scope: !12447, file: !127, line: 38, baseType: !12450, size: 32)
!12450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12447, file: !127, line: 38, size: 32, elements: !12451)
!12451 = !{!12452, !12454}
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12450, file: !127, line: 39, baseType: !12453, size: 32)
!12453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12447, size: 32)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12450, file: !127, line: 40, baseType: !12453, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, scope: !12447, file: !127, line: 42, baseType: !12456, size: 32, offset: 32)
!12456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12447, file: !127, line: 42, size: 32, elements: !12457)
!12457 = !{!12458, !12459}
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12456, file: !127, line: 43, baseType: !12453, size: 32)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12456, file: !127, line: 44, baseType: !12453, size: 32)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12443, file: !158, line: 62, baseType: !12461, size: 64)
!12461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !12462)
!12462 = !{!12463}
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12461, file: !170, line: 50, baseType: !12464, size: 64)
!12464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12465, size: 64, elements: !175)
!12465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12461, size: 32)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12440, file: !158, line: 68, baseType: !12467, size: 32, offset: 64)
!12467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12468, size: 32)
!12468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12469)
!12469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12470)
!12470 = !{!12471}
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12469, file: !122, line: 232, baseType: !12472, size: 64)
!12472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12447)
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12440, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12440, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!12475 = !DIDerivedType(tag: DW_TAG_member, scope: !12440, file: !158, line: 90, baseType: !12476, size: 16, offset: 112)
!12476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12440, file: !158, line: 90, size: 16, elements: !12477)
!12477 = !{!12478, !12483}
!12478 = !DIDerivedType(tag: DW_TAG_member, scope: !12476, file: !158, line: 91, baseType: !12479, size: 16)
!12479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12476, file: !158, line: 91, size: 16, elements: !12480)
!12480 = !{!12481, !12482}
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12479, file: !158, line: 96, baseType: !190, size: 8)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12479, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12476, file: !158, line: 100, baseType: !194, size: 16)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12440, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12440, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12440, file: !158, line: 131, baseType: !12487, size: 192, offset: 192)
!12487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12488)
!12488 = !{!12489, !12490, !12496}
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12487, file: !122, line: 245, baseType: !12446, size: 64)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12487, file: !122, line: 246, baseType: !12491, size: 32, offset: 64)
!12491 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12492)
!12492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12493, size: 32)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !12495}
!12495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12487, size: 32)
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12487, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12437, file: !158, line: 250, baseType: !12498, size: 288, offset: 384)
!12498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !12499)
!12499 = !{!12500, !12501, !12502, !12503, !12504, !12505, !12506, !12507, !12508}
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12498, file: !211, line: 26, baseType: !110, size: 32)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12498, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12498, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12498, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12498, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12498, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12498, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12498, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12498, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12437, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12437, file: !158, line: 256, baseType: !12468, size: 64, offset: 704)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12437, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12437, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12437, file: !158, line: 300, baseType: !12514, size: 96, offset: 1056)
!12514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !12515)
!12515 = !{!12516, !12517, !12518}
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12514, file: !158, line: 153, baseType: !22, size: 32)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12514, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12514, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12437, file: !158, line: 325, baseType: !12520, size: 32, offset: 1152)
!12520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12521, size: 32)
!12521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12522)
!12522 = !{!12523, !12529, !12530}
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12521, file: !118, line: 5074, baseType: !12524, size: 96)
!12524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !12525)
!12525 = !{!12526, !12527, !12528}
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12524, file: !243, line: 57, baseType: !246, size: 32)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12524, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12524, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12521, file: !118, line: 5075, baseType: !12468, size: 64, offset: 96)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12521, file: !118, line: 5076, baseType: !12531, size: 32, offset: 160)
!12531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !12532)
!12532 = !{!12533}
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12531, file: !253, line: 52, baseType: !22, size: 32)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12437, file: !158, line: 343, baseType: !12535, size: 64, offset: 1184)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !12536)
!12536 = !{!12537, !12538}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12535, file: !211, line: 63, baseType: !110, size: 32)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12535, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!12539 = !{!12540, !12541, !12542}
!12540 = !DILocalVariable(name: "reason", arg: 1, scope: !12389, file: !3054, line: 209, type: !32)
!12541 = !DILocalVariable(name: "esf", arg: 2, scope: !12389, file: !3054, line: 209, type: !12392)
!12542 = !DILocalVariable(name: "thread", arg: 3, scope: !12389, file: !3054, line: 210, type: !12436)
!12543 = !DILocation(line: 0, scope: !12389)
!12544 = !DILocation(line: 212, column: 1, scope: !12389)
!12545 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3054, file: !3054, line: 214, type: !12546, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12548)
!12546 = !DISubroutineType(types: !12547)
!12547 = !{null, !22, !22}
!12548 = !{!12549, !12550}
!12549 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12545, file: !3054, line: 214, type: !22)
!12550 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12545, file: !3054, line: 214, type: !22)
!12551 = !DILocation(line: 0, scope: !12545)
!12552 = !DILocation(line: 216, column: 1, scope: !12545)
!12553 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3054, file: !3054, line: 218, type: !12554, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12556)
!12554 = !DISubroutineType(types: !12555)
!12555 = !{null, !286, !234}
!12556 = !{!12557, !12558}
!12557 = !DILocalVariable(name: "buf", arg: 1, scope: !12553, file: !3054, line: 218, type: !286)
!12558 = !DILocalVariable(name: "buflen", arg: 2, scope: !12553, file: !3054, line: 218, type: !234)
!12559 = !DILocation(line: 0, scope: !12553)
!12560 = !DILocation(line: 220, column: 1, scope: !12553)
!12561 = distinct !DISubprogram(name: "coredump_query", scope: !3054, file: !3054, line: 222, type: !12562, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12564)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{!109, !3053, !107}
!12564 = !{!12565, !12566}
!12565 = !DILocalVariable(name: "query_id", arg: 1, scope: !12561, file: !3054, line: 222, type: !3053)
!12566 = !DILocalVariable(name: "arg", arg: 2, scope: !12561, file: !3054, line: 222, type: !107)
!12567 = !DILocation(line: 0, scope: !12561)
!12568 = !DILocation(line: 224, column: 2, scope: !12561)
!12569 = distinct !DISubprogram(name: "coredump_cmd", scope: !3054, file: !3054, line: 227, type: !12570, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12572)
!12570 = !DISubroutineType(types: !12571)
!12571 = !{!109, !3060, !107}
!12572 = !{!12573, !12574}
!12573 = !DILocalVariable(name: "query_id", arg: 1, scope: !12569, file: !3054, line: 227, type: !3060)
!12574 = !DILocalVariable(name: "arg", arg: 2, scope: !12569, file: !3054, line: 227, type: !107)
!12575 = !DILocation(line: 0, scope: !12569)
!12576 = !DILocation(line: 229, column: 2, scope: !12569)
!12577 = distinct !DISubprogram(name: "arch_system_halt", scope: !12578, file: !12578, line: 23, type: !6108, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12579)
!12578 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12579 = !{!12580}
!12580 = !DILocalVariable(name: "reason", arg: 1, scope: !12577, file: !12578, line: 23, type: !32)
!12581 = !DILocation(line: 0, scope: !12577)
!12582 = !DILocation(line: 55, column: 2, scope: !12583, inlinedAt: !12587)
!12583 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12584)
!12584 = !{!12585, !12586}
!12585 = !DILocalVariable(name: "key", scope: !12583, file: !6097, line: 44, type: !32)
!12586 = !DILocalVariable(name: "tmp", scope: !12583, file: !6097, line: 53, type: !32)
!12587 = distinct !DILocation(line: 31, column: 8, scope: !12577)
!12588 = !{i64 2244721}
!12589 = !DILocation(line: 0, scope: !12583, inlinedAt: !12587)
!12590 = !DILocation(line: 32, column: 2, scope: !12577)
!12591 = !DILocation(line: 32, column: 2, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12593, file: !12578, line: 32, column: 2)
!12593 = distinct !DILexicalBlock(scope: !12577, file: !12578, line: 32, column: 2)
!12594 = distinct !{!12594, !12595, !12596}
!12595 = !DILocation(line: 32, column: 2, scope: !12593)
!12596 = !DILocation(line: 34, column: 2, scope: !12593)
!12597 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12578, file: !12578, line: 39, type: !12598, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{null, !32, !12392}
!12600 = !{!12601, !12602}
!12601 = !DILocalVariable(name: "reason", arg: 1, scope: !12597, file: !12578, line: 39, type: !32)
!12602 = !DILocalVariable(name: "esf", arg: 2, scope: !12597, file: !12578, line: 40, type: !12392)
!12603 = !DILocation(line: 0, scope: !12597)
!12604 = !DILocation(line: 45, column: 2, scope: !12605)
!12605 = distinct !DILexicalBlock(scope: !12606, file: !12578, line: 45, column: 2)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !12578, line: 45, column: 2)
!12607 = distinct !DILexicalBlock(scope: !12608, file: !12578, line: 45, column: 2)
!12608 = distinct !DILexicalBlock(scope: !12597, file: !12578, line: 45, column: 2)
!12609 = !DILocation(line: 46, column: 2, scope: !12597)
!12610 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12578, file: !12578, line: 81, type: !6108, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12611)
!12611 = !{!12612}
!12612 = !DILocalVariable(name: "reason", arg: 1, scope: !12610, file: !12578, line: 81, type: !32)
!12613 = !DILocation(line: 0, scope: !12610)
!12614 = !DILocation(line: 83, column: 2, scope: !12610)
!12615 = distinct !DISubprogram(name: "z_fatal_error", scope: !12578, file: !12578, line: 96, type: !12598, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12616)
!12616 = !{!12617, !12618, !12619, !12620}
!12617 = !DILocalVariable(name: "reason", arg: 1, scope: !12615, file: !12578, line: 96, type: !32)
!12618 = !DILocalVariable(name: "esf", arg: 2, scope: !12615, file: !12578, line: 96, type: !12392)
!12619 = !DILocalVariable(name: "key", scope: !12615, file: !12578, line: 102, type: !32)
!12620 = !DILocalVariable(name: "thread", scope: !12615, file: !12578, line: 103, type: !12436)
!12621 = !DILocation(line: 0, scope: !12615)
!12622 = !DILocation(line: 55, column: 2, scope: !12583, inlinedAt: !12623)
!12623 = distinct !DILocation(line: 102, column: 21, scope: !12615)
!12624 = !DILocation(line: 0, scope: !12583, inlinedAt: !12623)
!12625 = !DILocation(line: 104, column: 4, scope: !12615)
!12626 = !DILocation(line: 109, column: 2, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !12578, line: 109, column: 2)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !12578, line: 109, column: 2)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !12578, line: 109, column: 2)
!12630 = distinct !DILexicalBlock(scope: !12615, file: !12578, line: 109, column: 2)
!12631 = !DILocation(line: 119, column: 11, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12615, file: !12578, line: 119, column: 6)
!12633 = !DILocation(line: 119, column: 20, scope: !12632)
!12634 = !DILocalVariable(name: "esf", arg: 1, scope: !12635, file: !7470, line: 71, type: !12392)
!12635 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7470, file: !7470, line: 71, type: !12636, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12638)
!12636 = !DISubroutineType(types: !12637)
!12637 = !{!347, !12392}
!12638 = !{!12634}
!12639 = !DILocation(line: 0, scope: !12635, inlinedAt: !12640)
!12640 = distinct !DILocation(line: 119, column: 23, scope: !12632)
!12641 = !DILocation(line: 73, column: 21, scope: !12635, inlinedAt: !12640)
!12642 = !DILocation(line: 73, column: 26, scope: !12635, inlinedAt: !12640)
!12643 = !DILocation(line: 73, column: 9, scope: !12635, inlinedAt: !12640)
!12644 = !DILocation(line: 119, column: 6, scope: !12615)
!12645 = !DILocation(line: 120, column: 3, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12647, file: !12578, line: 120, column: 3)
!12647 = distinct !DILexicalBlock(scope: !12648, file: !12578, line: 120, column: 3)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !12578, line: 120, column: 3)
!12649 = distinct !DILexicalBlock(scope: !12650, file: !12578, line: 120, column: 3)
!12650 = distinct !DILexicalBlock(scope: !12632, file: !12578, line: 119, column: 57)
!12651 = !DILocation(line: 121, column: 2, scope: !12650)
!12652 = !DILocation(line: 124, column: 2, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12578, line: 124, column: 2)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !12578, line: 124, column: 2)
!12655 = distinct !DILexicalBlock(scope: !12656, file: !12578, line: 124, column: 2)
!12656 = distinct !DILexicalBlock(scope: !12615, file: !12578, line: 124, column: 2)
!12657 = !DILocation(line: 131, column: 2, scope: !12615)
!12658 = !DILocation(line: 0, scope: !12635, inlinedAt: !12659)
!12659 = distinct !DILocation(line: 163, column: 24, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12661, file: !12578, line: 163, column: 7)
!12661 = distinct !DILexicalBlock(scope: !12662, file: !12578, line: 160, column: 9)
!12662 = distinct !DILexicalBlock(scope: !12615, file: !12578, line: 146, column: 6)
!12663 = !DILocation(line: 73, column: 21, scope: !12635, inlinedAt: !12659)
!12664 = !DILocation(line: 73, column: 26, scope: !12635, inlinedAt: !12659)
!12665 = !DILocation(line: 73, column: 9, scope: !12635, inlinedAt: !12659)
!12666 = !DILocation(line: 163, column: 7, scope: !12661)
!12667 = !DILocalVariable(name: "key", arg: 1, scope: !12668, file: !6097, line: 84, type: !32)
!12668 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12669)
!12669 = !{!12667}
!12670 = !DILocation(line: 0, scope: !12668, inlinedAt: !12671)
!12671 = distinct !DILocation(line: 171, column: 4, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12660, file: !12578, line: 163, column: 58)
!12673 = !DILocation(line: 95, column: 2, scope: !12668, inlinedAt: !12671)
!12674 = !{i64 2245538}
!12675 = !DILocation(line: 172, column: 4, scope: !12672)
!12676 = !DILocation(line: 163, column: 21, scope: !12660)
!12677 = !DILocation(line: 178, column: 15, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !12578, line: 178, column: 8)
!12679 = distinct !DILexicalBlock(scope: !12660, file: !12578, line: 174, column: 10)
!12680 = !DILocation(line: 0, scope: !12668, inlinedAt: !12681)
!12681 = distinct !DILocation(line: 179, column: 5, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12678, file: !12578, line: 178, column: 38)
!12683 = !DILocation(line: 0, scope: !12668, inlinedAt: !12684)
!12684 = distinct !DILocation(line: 186, column: 2, scope: !12615)
!12685 = !DILocation(line: 178, column: 8, scope: !12679)
!12686 = !DILocation(line: 189, column: 3, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12688, file: !12578, line: 188, column: 41)
!12688 = distinct !DILexicalBlock(scope: !12615, file: !12578, line: 188, column: 6)
!12689 = !DILocation(line: 191, column: 1, scope: !12615)
!12690 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12691, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !2024)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!12693}
!12693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !12436)
!12694 = !DILocation(line: 535, column: 9, scope: !12690)
!12695 = !DILocation(line: 535, column: 2, scope: !12690)
!12696 = distinct !DISubprogram(name: "reason_to_str", scope: !12578, file: !12578, line: 62, type: !12697, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12699)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{!279, !32}
!12699 = !{!12700}
!12700 = !DILocalVariable(name: "reason", arg: 1, scope: !12696, file: !12578, line: 62, type: !32)
!12701 = !DILocation(line: 0, scope: !12696)
!12702 = !DILocation(line: 64, column: 2, scope: !12696)
!12703 = !DILocation(line: 0, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12696, file: !12578, line: 64, column: 18)
!12705 = !DILocation(line: 78, column: 1, scope: !12696)
!12706 = distinct !DISubprogram(name: "thread_name_get", scope: !12578, file: !12578, line: 51, type: !12707, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12709)
!12707 = !DISubroutineType(types: !12708)
!12708 = !{!279, !12436}
!12709 = !{!12710, !12711}
!12710 = !DILocalVariable(name: "thread", arg: 1, scope: !12706, file: !12578, line: 51, type: !12436)
!12711 = !DILocalVariable(name: "thread_name", scope: !12706, file: !12578, line: 53, type: !279)
!12712 = !DILocation(line: 0, scope: !12706)
!12713 = !DILocation(line: 53, column: 36, scope: !12706)
!12714 = !DILocation(line: 53, column: 28, scope: !12706)
!12715 = !DILocation(line: 53, column: 47, scope: !12706)
!12716 = !DILocation(line: 55, column: 19, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12706, file: !12578, line: 55, column: 6)
!12718 = !DILocation(line: 55, column: 28, scope: !12717)
!12719 = !DILocation(line: 55, column: 32, scope: !12717)
!12720 = !DILocation(line: 55, column: 47, scope: !12717)
!12721 = !DILocation(line: 55, column: 6, scope: !12706)
!12722 = !DILocation(line: 57, column: 2, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12717, file: !12578, line: 55, column: 57)
!12724 = !DILocation(line: 59, column: 2, scope: !12706)
!12725 = distinct !DISubprogram(name: "k_thread_abort", scope: !3233, file: !3233, line: 188, type: !12726, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !12728)
!12726 = !DISubroutineType(types: !12727)
!12727 = !{null, !12693}
!12728 = !{!12729}
!12729 = !DILocalVariable(name: "thread", arg: 1, scope: !12725, file: !3233, line: 188, type: !12693)
!12730 = !DILocation(line: 0, scope: !12725)
!12731 = !DILocation(line: 197, column: 2, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12725, file: !3233, line: 197, column: 2)
!12733 = !{i64 2154750093}
!12734 = !DILocation(line: 198, column: 2, scope: !12725)
!12735 = !DILocation(line: 199, column: 1, scope: !12725)
!12736 = distinct !DISubprogram(name: "z_current_get", scope: !3233, file: !3233, line: 173, type: !12691, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3050, retainedNodes: !2024)
!12737 = !DILocation(line: 180, column: 2, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12736, file: !3233, line: 180, column: 2)
!12739 = !{i64 2154750025}
!12740 = !DILocation(line: 181, column: 9, scope: !12736)
!12741 = !DILocation(line: 181, column: 2, scope: !12736)
!12742 = distinct !DISubprogram(name: "z_early_memset", scope: !1823, file: !1823, line: 108, type: !12743, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12745)
!12743 = !DISubroutineType(types: !12744)
!12744 = !{null, !107, !109, !234}
!12745 = !{!12746, !12747, !12748}
!12746 = !DILocalVariable(name: "dst", arg: 1, scope: !12742, file: !1823, line: 108, type: !107)
!12747 = !DILocalVariable(name: "c", arg: 2, scope: !12742, file: !1823, line: 108, type: !109)
!12748 = !DILocalVariable(name: "n", arg: 3, scope: !12742, file: !1823, line: 108, type: !234)
!12749 = !DILocation(line: 0, scope: !12742)
!12750 = !DILocation(line: 110, column: 9, scope: !12742)
!12751 = !DILocation(line: 111, column: 1, scope: !12742)
!12752 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1823, file: !1823, line: 121, type: !12753, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12755)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{null, !107, !13, !234}
!12755 = !{!12756, !12757, !12758}
!12756 = !DILocalVariable(name: "dst", arg: 1, scope: !12752, file: !1823, line: 121, type: !107)
!12757 = !DILocalVariable(name: "src", arg: 2, scope: !12752, file: !1823, line: 121, type: !13)
!12758 = !DILocalVariable(name: "n", arg: 3, scope: !12752, file: !1823, line: 121, type: !234)
!12759 = !DILocation(line: 0, scope: !12752)
!12760 = !DILocation(line: 123, column: 9, scope: !12752)
!12761 = !DILocation(line: 124, column: 1, scope: !12752)
!12762 = distinct !DISubprogram(name: "z_bss_zero", scope: !1823, file: !1823, line: 132, type: !3087, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2024)
!12763 = !DILocation(line: 143, column: 2, scope: !12762)
!12764 = !DILocation(line: 168, column: 1, scope: !12762)
!12765 = distinct !DISubprogram(name: "z_init_cpu", scope: !1823, file: !1823, line: 372, type: !8358, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12766)
!12766 = !{!12767}
!12767 = !DILocalVariable(name: "id", arg: 1, scope: !12765, file: !1823, line: 372, type: !109)
!12768 = !DILocation(line: 0, scope: !12765)
!12769 = !DILocation(line: 374, column: 2, scope: !12765)
!12770 = !DILocation(line: 375, column: 34, scope: !12765)
!12771 = !DILocation(line: 375, column: 19, scope: !12765)
!12772 = !DILocation(line: 375, column: 31, scope: !12765)
!12773 = !DILocation(line: 376, column: 24, scope: !12765)
!12774 = !DILocation(line: 376, column: 19, scope: !12765)
!12775 = !DILocation(line: 376, column: 22, scope: !12765)
!12776 = !DILocation(line: 378, column: 26, scope: !12765)
!12777 = !DILocation(line: 378, column: 4, scope: !12765)
!12778 = !DILocation(line: 378, column: 50, scope: !12765)
!12779 = !DILocation(line: 377, column: 19, scope: !12765)
!12780 = !DILocation(line: 377, column: 29, scope: !12765)
!12781 = !DILocation(line: 384, column: 1, scope: !12765)
!12782 = distinct !DISubprogram(name: "init_idle_thread", scope: !1823, file: !1823, line: 343, type: !8358, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12783)
!12783 = !{!12784, !12785, !12786, !12789}
!12784 = !DILocalVariable(name: "i", arg: 1, scope: !12782, file: !1823, line: 343, type: !109)
!12785 = !DILocalVariable(name: "thread", scope: !12782, file: !1823, line: 345, type: !1915)
!12786 = !DILocalVariable(name: "stack", scope: !12782, file: !1823, line: 346, type: !12787)
!12787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12788, size: 32)
!12788 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3353, line: 44, baseType: !2033)
!12789 = !DILocalVariable(name: "tname", scope: !12782, file: !1823, line: 354, type: !285)
!12790 = !DILocation(line: 0, scope: !12782)
!12791 = !DILocation(line: 345, column: 29, scope: !12782)
!12792 = !DILocation(line: 346, column: 28, scope: !12782)
!12793 = !DILocation(line: 362, column: 37, scope: !12782)
!12794 = !DILocation(line: 362, column: 36, scope: !12782)
!12795 = !DILocation(line: 361, column: 2, scope: !12782)
!12796 = !DILocation(line: 365, column: 2, scope: !12782)
!12797 = !DILocation(line: 370, column: 1, scope: !12782)
!12798 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12799, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12801)
!12799 = !DISubroutineType(types: !12800)
!12800 = !{!285, !12787}
!12801 = !{!12802}
!12802 = !DILocalVariable(name: "sym", arg: 1, scope: !12798, file: !147, line: 331, type: !12787)
!12803 = !DILocation(line: 0, scope: !12798)
!12804 = !DILocation(line: 333, column: 21, scope: !12798)
!12805 = !DILocation(line: 333, column: 2, scope: !12798)
!12806 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12807, file: !12807, line: 155, type: !12808, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12810)
!12807 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12808 = !DISubroutineType(types: !12809)
!12809 = !{null, !1915}
!12810 = !{!12811}
!12811 = !DILocalVariable(name: "thread", arg: 1, scope: !12806, file: !12807, line: 155, type: !1915)
!12812 = !DILocation(line: 0, scope: !12806)
!12813 = !DILocation(line: 157, column: 15, scope: !12806)
!12814 = !DILocation(line: 157, column: 28, scope: !12806)
!12815 = !DILocation(line: 158, column: 1, scope: !12806)
!12816 = distinct !DISubprogram(name: "z_cstart", scope: !1823, file: !1823, line: 501, type: !3087, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12817)
!12817 = !{!12818}
!12818 = !DILocalVariable(name: "dummy_thread", scope: !12816, file: !1823, line: 518, type: !1916)
!12819 = !DILocation(line: 507, column: 2, scope: !12816)
!12820 = !DILocation(line: 43, column: 14, scope: !12821, inlinedAt: !12825)
!12821 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12822, file: !12822, line: 40, type: !3087, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12823)
!12822 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12823 = !{!12824}
!12824 = !DILocalVariable(name: "msp", scope: !12821, file: !12822, line: 42, type: !110)
!12825 = distinct !DILocation(line: 44, column: 2, scope: !12826, inlinedAt: !12828)
!12826 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12827, file: !12827, line: 42, type: !3087, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2024)
!12827 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12828 = distinct !DILocation(line: 510, column: 2, scope: !12816)
!12829 = !DILocation(line: 43, column: 3, scope: !12821, inlinedAt: !12825)
!12830 = !DILocation(line: 43, column: 60, scope: !12821, inlinedAt: !12825)
!12831 = !DILocation(line: 0, scope: !12821, inlinedAt: !12825)
!12832 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12833, file: !6418, line: 1153, type: !110)
!12833 = distinct !DISubprogram(name: "__set_MSP", scope: !6418, file: !6418, line: 1153, type: !6515, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12834)
!12834 = !{!12832}
!12835 = !DILocation(line: 0, scope: !12833, inlinedAt: !12836)
!12836 = distinct !DILocation(line: 46, column: 2, scope: !12821, inlinedAt: !12825)
!12837 = !DILocation(line: 1155, column: 3, scope: !12833, inlinedAt: !12836)
!12838 = !{i64 3519097}
!12839 = !DILocation(line: 62, column: 11, scope: !12821, inlinedAt: !12825)
!12840 = !DILocation(line: 102, column: 2, scope: !12841, inlinedAt: !12842)
!12841 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7470, file: !7470, line: 97, type: !3087, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2024)
!12842 = distinct !DILocation(line: 45, column: 2, scope: !12826, inlinedAt: !12828)
!12843 = !DILocation(line: 108, column: 2, scope: !12841, inlinedAt: !12842)
!12844 = !DILocation(line: 112, column: 2, scope: !12841, inlinedAt: !12842)
!12845 = !DILocation(line: 113, column: 2, scope: !12841, inlinedAt: !12842)
!12846 = !DILocation(line: 114, column: 2, scope: !12841, inlinedAt: !12842)
!12847 = !DILocation(line: 116, column: 2, scope: !12841, inlinedAt: !12842)
!12848 = !DILocation(line: 123, column: 13, scope: !12841, inlinedAt: !12842)
!12849 = !DILocation(line: 46, column: 2, scope: !12826, inlinedAt: !12828)
!12850 = !DILocation(line: 47, column: 2, scope: !12826, inlinedAt: !12828)
!12851 = !DILocation(line: 174, column: 12, scope: !12852, inlinedAt: !12853)
!12852 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7470, file: !7470, line: 169, type: !3087, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !2024)
!12853 = distinct !DILocation(line: 48, column: 2, scope: !12826, inlinedAt: !12828)
!12854 = !DILocation(line: 179, column: 12, scope: !12852, inlinedAt: !12853)
!12855 = !DILocation(line: 50, column: 2, scope: !12826, inlinedAt: !12828)
!12856 = !DILocation(line: 57, column: 2, scope: !12826, inlinedAt: !12828)
!12857 = !DILocation(line: 518, column: 2, scope: !12816)
!12858 = !DILocation(line: 518, column: 18, scope: !12816)
!12859 = !DILocation(line: 520, column: 2, scope: !12816)
!12860 = !DILocation(line: 523, column: 2, scope: !12816)
!12861 = !DILocation(line: 526, column: 2, scope: !12816)
!12862 = !DILocation(line: 527, column: 2, scope: !12816)
!12863 = !DILocation(line: 543, column: 24, scope: !12816)
!12864 = !DILocation(line: 543, column: 2, scope: !12816)
!12865 = !DILocation(line: 0, scope: !2056)
!12866 = !DILocation(line: 246, column: 15, scope: !2074)
!12867 = !DILocation(line: 246, column: 36, scope: !2073)
!12868 = !DILocation(line: 246, column: 2, scope: !2074)
!12869 = !DILocation(line: 247, column: 37, scope: !2072)
!12870 = !DILocation(line: 0, scope: !2072)
!12871 = !DILocation(line: 248, column: 19, scope: !2072)
!12872 = !DILocation(line: 248, column: 12, scope: !2072)
!12873 = !DILocation(line: 250, column: 11, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !2072, file: !1823, line: 250, column: 7)
!12875 = !DILocation(line: 250, column: 7, scope: !2072)
!12876 = !DILocation(line: 254, column: 11, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !1823, line: 254, column: 8)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !1823, line: 250, column: 20)
!12879 = !DILocation(line: 254, column: 8, scope: !12878)
!12880 = !DILocation(line: 255, column: 9, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12877, file: !1823, line: 254, column: 17)
!12882 = !DILocation(line: 258, column: 9, scope: !12881)
!12883 = !DILocation(line: 261, column: 28, scope: !12881)
!12884 = !DILocation(line: 261, column: 10, scope: !12881)
!12885 = !DILocation(line: 261, column: 17, scope: !12881)
!12886 = !DILocation(line: 261, column: 26, scope: !12881)
!12887 = !DILocation(line: 262, column: 4, scope: !12881)
!12888 = !DILocation(line: 263, column: 9, scope: !12878)
!12889 = !DILocation(line: 263, column: 16, scope: !12878)
!12890 = !DILocation(line: 263, column: 28, scope: !12878)
!12891 = !DILocation(line: 264, column: 3, scope: !12878)
!12892 = !DILocation(line: 246, column: 60, scope: !2073)
!12893 = distinct !{!12893, !12868, !12894}
!12894 = !DILocation(line: 265, column: 2, scope: !2074)
!12895 = !DILocation(line: 266, column: 1, scope: !2056)
!12896 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6458, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12897)
!12897 = !{!12898, !12899}
!12898 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12896, file: !535, line: 1814, type: !791)
!12899 = !DILocalVariable(name: "priority", arg: 2, scope: !12896, file: !535, line: 1814, type: !110)
!12900 = !DILocation(line: 0, scope: !12896)
!12901 = !DILocation(line: 1822, column: 48, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12903, file: !535, line: 1821, column: 3)
!12903 = distinct !DILexicalBlock(scope: !12896, file: !535, line: 1816, column: 7)
!12904 = !DILocation(line: 1822, column: 32, scope: !12902)
!12905 = !DILocation(line: 1822, column: 40, scope: !12902)
!12906 = !DILocation(line: 1822, column: 5, scope: !12902)
!12907 = !DILocation(line: 1822, column: 46, scope: !12902)
!12908 = !DILocation(line: 1824, column: 1, scope: !12896)
!12909 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12827, file: !12827, line: 32, type: !3087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!12910 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12911, file: !12911, line: 215, type: !12808, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12912)
!12911 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12912 = !{!12913}
!12913 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12910, file: !12911, line: 215, type: !1915)
!12914 = !DILocation(line: 0, scope: !12910)
!12915 = !DILocation(line: 217, column: 21, scope: !12910)
!12916 = !DILocation(line: 217, column: 34, scope: !12910)
!12917 = !DILocation(line: 221, column: 21, scope: !12910)
!12918 = !DILocation(line: 221, column: 34, scope: !12910)
!12919 = !DILocation(line: 223, column: 27, scope: !12910)
!12920 = !DILocation(line: 223, column: 33, scope: !12910)
!12921 = !DILocation(line: 224, column: 27, scope: !12910)
!12922 = !DILocation(line: 224, column: 32, scope: !12910)
!12923 = !DILocation(line: 232, column: 16, scope: !12910)
!12924 = !DILocation(line: 232, column: 30, scope: !12910)
!12925 = !DILocation(line: 239, column: 24, scope: !12910)
!12926 = !DILocation(line: 240, column: 1, scope: !12910)
!12927 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1823, file: !1823, line: 399, type: !12928, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12930)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!285}
!12930 = !{!12931}
!12931 = !DILocalVariable(name: "stack_ptr", scope: !12927, file: !1823, line: 401, type: !285)
!12932 = !DILocation(line: 404, column: 2, scope: !12927)
!12933 = !DILocation(line: 416, column: 24, scope: !12927)
!12934 = !DILocation(line: 418, column: 14, scope: !12927)
!12935 = !DILocation(line: 0, scope: !12927)
!12936 = !DILocation(line: 423, column: 2, scope: !12927)
!12937 = !DILocation(line: 424, column: 2, scope: !12927)
!12938 = !DILocation(line: 426, column: 2, scope: !12927)
!12939 = !DILocation(line: 428, column: 2, scope: !12927)
!12940 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1823, file: !1823, line: 432, type: !12941, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12943)
!12941 = !DISubroutineType(types: !12942)
!12942 = !{null, !285}
!12943 = !{!12944}
!12944 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12940, file: !1823, line: 432, type: !285)
!12945 = !DILocation(line: 0, scope: !12940)
!12946 = !DILocation(line: 435, column: 2, scope: !12940)
!12947 = !DILocation(line: 445, column: 2, scope: !12940)
!12948 = distinct !DISubprogram(name: "bg_thread_main", scope: !1823, file: !1823, line: 277, type: !3199, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1819, retainedNodes: !12949)
!12949 = !{!12950, !12951, !12952}
!12950 = !DILocalVariable(name: "unused1", arg: 1, scope: !12948, file: !1823, line: 277, type: !107)
!12951 = !DILocalVariable(name: "unused2", arg: 2, scope: !12948, file: !1823, line: 277, type: !107)
!12952 = !DILocalVariable(name: "unused3", arg: 3, scope: !12948, file: !1823, line: 277, type: !107)
!12953 = !DILocation(line: 0, scope: !12948)
!12954 = !DILocation(line: 291, column: 20, scope: !12948)
!12955 = !DILocation(line: 293, column: 2, scope: !12948)
!12956 = !DILocation(line: 297, column: 2, scope: !12948)
!12957 = !DILocation(line: 305, column: 2, scope: !12948)
!12958 = !DILocation(line: 307, column: 2, scope: !12948)
!12959 = !DILocation(line: 330, column: 8, scope: !12948)
!12960 = !DILocation(line: 333, column: 34, scope: !12948)
!12961 = !DILocation(line: 339, column: 1, scope: !12948)
!12962 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2085, file: !2085, line: 45, type: !12963, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !12971)
!12963 = !DISubroutineType(types: !12964)
!12964 = !{null, !12965, !107}
!12965 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12966)
!12966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12967, size: 32)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !12969, !107}
!12969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12970, size: 32)
!12970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2090)
!12971 = !{!12972, !12973}
!12972 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12962, file: !2085, line: 45, type: !12965)
!12973 = !DILocalVariable(name: "user_data", arg: 2, scope: !12962, file: !2085, line: 45, type: !107)
!12974 = !DILocation(line: 0, scope: !12962)
!12975 = !DILocation(line: 71, column: 1, scope: !12962)
!12976 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2085, file: !2085, line: 73, type: !12963, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !12977)
!12977 = !{!12978, !12979}
!12978 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12976, file: !2085, line: 73, type: !12965)
!12979 = !DILocalVariable(name: "user_data", arg: 2, scope: !12976, file: !2085, line: 73, type: !107)
!12980 = !DILocation(line: 0, scope: !12976)
!12981 = !DILocation(line: 95, column: 1, scope: !12976)
!12982 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2085, file: !2085, line: 97, type: !7471, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2024)
!12983 = !DILocation(line: 1031, column: 3, scope: !12984, inlinedAt: !12987)
!12984 = distinct !DISubprogram(name: "__get_IPSR", scope: !6418, file: !6418, line: 1027, type: !6505, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !12985)
!12985 = !{!12986}
!12986 = !DILocalVariable(name: "result", scope: !12984, file: !6418, line: 1029, type: !110)
!12987 = distinct !DILocation(line: 48, column: 10, scope: !12988, inlinedAt: !12989)
!12988 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7470, file: !7470, line: 46, type: !7471, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2024)
!12989 = distinct !DILocation(line: 99, column: 9, scope: !12982)
!12990 = !{i64 3524748}
!12991 = !DILocation(line: 0, scope: !12984, inlinedAt: !12987)
!12992 = !DILocation(line: 48, column: 9, scope: !12988, inlinedAt: !12989)
!12993 = !DILocation(line: 99, column: 2, scope: !12982)
!12994 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2085, file: !2085, line: 106, type: !3087, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2024)
!12995 = !DILocation(line: 108, column: 2, scope: !12994)
!12996 = !DILocation(line: 108, column: 17, scope: !12994)
!12997 = !DILocation(line: 108, column: 30, scope: !12994)
!12998 = !DILocation(line: 109, column: 1, scope: !12994)
!12999 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2085, file: !2085, line: 116, type: !3087, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2024)
!13000 = !DILocation(line: 118, column: 2, scope: !12999)
!13001 = !DILocation(line: 118, column: 17, scope: !12999)
!13002 = !DILocation(line: 118, column: 30, scope: !12999)
!13003 = !DILocation(line: 119, column: 1, scope: !12999)
!13004 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2085, file: !2085, line: 126, type: !7471, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !2024)
!13005 = !DILocation(line: 128, column: 10, scope: !13004)
!13006 = !DILocation(line: 128, column: 25, scope: !13004)
!13007 = !DILocation(line: 128, column: 38, scope: !13004)
!13008 = !DILocation(line: 128, column: 53, scope: !13004)
!13009 = !DILocation(line: 128, column: 2, scope: !13004)
!13010 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2085, file: !2085, line: 187, type: !13011, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13013)
!13011 = !DISubroutineType(types: !13012)
!13012 = !{!109, !2089, !279}
!13013 = !{!13014, !13015}
!13014 = !DILocalVariable(name: "thread", arg: 1, scope: !13010, file: !2085, line: 187, type: !2089)
!13015 = !DILocalVariable(name: "value", arg: 2, scope: !13010, file: !2085, line: 187, type: !279)
!13016 = !DILocation(line: 0, scope: !13010)
!13017 = !DILocation(line: 190, column: 13, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !13010, file: !2085, line: 190, column: 6)
!13019 = !DILocation(line: 190, column: 6, scope: !13010)
!13020 = !DILocation(line: 194, column: 10, scope: !13010)
!13021 = !DILocation(line: 194, column: 2, scope: !13010)
!13022 = !DILocation(line: 195, column: 2, scope: !13010)
!13023 = !DILocation(line: 195, column: 47, scope: !13010)
!13024 = !DILocation(line: 199, column: 2, scope: !13010)
!13025 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2085, file: !2085, line: 238, type: !13026, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13028)
!13026 = !DISubroutineType(types: !13027)
!13027 = !{!279, !2089}
!13028 = !{!13029}
!13029 = !DILocalVariable(name: "thread", arg: 1, scope: !13025, file: !2085, line: 238, type: !2089)
!13030 = !DILocation(line: 0, scope: !13025)
!13031 = !DILocation(line: 241, column: 23, scope: !13025)
!13032 = !DILocation(line: 241, column: 2, scope: !13025)
!13033 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2085, file: !2085, line: 248, type: !13034, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13036)
!13034 = !DISubroutineType(types: !13035)
!13035 = !{!109, !2088, !285, !234}
!13036 = !{!13037, !13038, !13039}
!13037 = !DILocalVariable(name: "thread", arg: 1, scope: !13033, file: !2085, line: 248, type: !2088)
!13038 = !DILocalVariable(name: "buf", arg: 2, scope: !13033, file: !2085, line: 248, type: !285)
!13039 = !DILocalVariable(name: "size", arg: 3, scope: !13033, file: !2085, line: 248, type: !234)
!13040 = !DILocation(line: 0, scope: !13033)
!13041 = !DILocation(line: 251, column: 15, scope: !13033)
!13042 = !DILocation(line: 251, column: 2, scope: !13033)
!13043 = !DILocation(line: 252, column: 2, scope: !13033)
!13044 = !DILocation(line: 0, scope: !2084)
!13045 = !DILocation(line: 281, column: 11, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !2084, file: !2085, line: 281, column: 6)
!13047 = !DILocation(line: 281, column: 20, scope: !13046)
!13048 = !DILocation(line: 275, column: 45, scope: !2084)
!13049 = !DILocation(line: 285, column: 10, scope: !2084)
!13050 = !DILocation(line: 0, scope: !2208)
!13051 = !DILocation(line: 293, column: 39, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !2208, file: !2085, line: 293, column: 2)
!13053 = !DILocation(line: 293, column: 2, scope: !2208)
!13054 = !DILocation(line: 273, column: 14, scope: !2084)
!13055 = !DILocation(line: 309, column: 2, scope: !2084)
!13056 = !DILocation(line: 309, column: 11, scope: !2084)
!13057 = !DILocation(line: 311, column: 2, scope: !2084)
!13058 = !DILocation(line: 293, column: 26, scope: !13052)
!13059 = !DILocation(line: 294, column: 9, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13052, file: !2085, line: 293, column: 54)
!13061 = !DILocation(line: 295, column: 21, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13060, file: !2085, line: 295, column: 7)
!13063 = !DILocation(line: 295, column: 28, scope: !13062)
!13064 = !DILocation(line: 295, column: 7, scope: !13060)
!13065 = !DILocation(line: 299, column: 25, scope: !13060)
!13066 = !DILocation(line: 299, column: 41, scope: !13060)
!13067 = !DILocation(line: 300, column: 7, scope: !13060)
!13068 = !DILocation(line: 300, column: 26, scope: !13060)
!13069 = !DILocation(line: 299, column: 10, scope: !13060)
!13070 = !DILocation(line: 299, column: 7, scope: !13060)
!13071 = !DILocation(line: 302, column: 16, scope: !13060)
!13072 = !DILocation(line: 304, column: 20, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13060, file: !2085, line: 304, column: 7)
!13074 = !DILocation(line: 304, column: 7, scope: !13060)
!13075 = !DILocation(line: 305, column: 26, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13073, file: !2085, line: 304, column: 26)
!13077 = !DILocation(line: 305, column: 42, scope: !13076)
!13078 = !DILocation(line: 305, column: 11, scope: !13076)
!13079 = !DILocation(line: 305, column: 8, scope: !13076)
!13080 = !DILocation(line: 306, column: 3, scope: !13076)
!13081 = !DILocation(line: 293, column: 50, scope: !13052)
!13082 = !DILocation(line: 312, column: 1, scope: !2084)
!13083 = distinct !DISubprogram(name: "copy_bytes", scope: !2085, file: !2085, line: 261, type: !13084, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13086)
!13084 = !DISubroutineType(types: !13085)
!13085 = !{!234, !285, !234, !279, !234}
!13086 = !{!13087, !13088, !13089, !13090, !13091}
!13087 = !DILocalVariable(name: "dest", arg: 1, scope: !13083, file: !2085, line: 261, type: !285)
!13088 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13083, file: !2085, line: 261, type: !234)
!13089 = !DILocalVariable(name: "src", arg: 3, scope: !13083, file: !2085, line: 261, type: !279)
!13090 = !DILocalVariable(name: "src_size", arg: 4, scope: !13083, file: !2085, line: 261, type: !234)
!13091 = !DILocalVariable(name: "bytes_to_copy", scope: !13083, file: !2085, line: 263, type: !234)
!13092 = !DILocation(line: 0, scope: !13083)
!13093 = !DILocation(line: 265, column: 18, scope: !13083)
!13094 = !DILocation(line: 266, column: 2, scope: !13083)
!13095 = !DILocation(line: 268, column: 2, scope: !13083)
!13096 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2085, file: !2085, line: 383, type: !13097, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{null, !2089}
!13099 = !{!13100}
!13100 = !DILocalVariable(name: "thread", arg: 1, scope: !13096, file: !2085, line: 383, type: !2089)
!13101 = !DILocation(line: 0, scope: !13096)
!13102 = !DILocation(line: 387, column: 2, scope: !13096)
!13103 = !DILocation(line: 388, column: 1, scope: !13096)
!13104 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2085, file: !2085, line: 528, type: !13105, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13112)
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!285, !2089, !13107, !234, !3354, !107, !107, !107, !109, !110, !279}
!13107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13108, size: 32)
!13108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3353, line: 44, baseType: !13109)
!13109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13110)
!13110 = !{!13111}
!13111 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13109, file: !147, line: 48, baseType: !150, size: 8)
!13112 = !{!13113, !13114, !13115, !13116, !13117, !13118, !13119, !13120, !13121, !13122, !13123}
!13113 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13104, file: !2085, line: 528, type: !2089)
!13114 = !DILocalVariable(name: "stack", arg: 2, scope: !13104, file: !2085, line: 529, type: !13107)
!13115 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13104, file: !2085, line: 529, type: !234)
!13116 = !DILocalVariable(name: "entry", arg: 4, scope: !13104, file: !2085, line: 530, type: !3354)
!13117 = !DILocalVariable(name: "p1", arg: 5, scope: !13104, file: !2085, line: 531, type: !107)
!13118 = !DILocalVariable(name: "p2", arg: 6, scope: !13104, file: !2085, line: 531, type: !107)
!13119 = !DILocalVariable(name: "p3", arg: 7, scope: !13104, file: !2085, line: 531, type: !107)
!13120 = !DILocalVariable(name: "prio", arg: 8, scope: !13104, file: !2085, line: 532, type: !109)
!13121 = !DILocalVariable(name: "options", arg: 9, scope: !13104, file: !2085, line: 532, type: !110)
!13122 = !DILocalVariable(name: "name", arg: 10, scope: !13104, file: !2085, line: 532, type: !279)
!13123 = !DILocalVariable(name: "stack_ptr", scope: !13104, file: !2085, line: 534, type: !285)
!13124 = !DILocation(line: 0, scope: !13104)
!13125 = !DILocation(line: 536, column: 2, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13127, file: !2085, line: 536, column: 2)
!13127 = distinct !DILexicalBlock(scope: !13128, file: !2085, line: 536, column: 2)
!13128 = distinct !DILexicalBlock(scope: !13104, file: !2085, line: 536, column: 2)
!13129 = !DILocation(line: 536, column: 2, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13126, file: !2085, line: 536, column: 2)
!13131 = !DILocation(line: 550, column: 28, scope: !13104)
!13132 = !DILocation(line: 550, column: 2, scope: !13104)
!13133 = !DILocation(line: 553, column: 34, scope: !13104)
!13134 = !DILocation(line: 553, column: 2, scope: !13104)
!13135 = !DILocation(line: 554, column: 14, scope: !13104)
!13136 = !DILocation(line: 564, column: 2, scope: !13104)
!13137 = !DILocation(line: 567, column: 14, scope: !13104)
!13138 = !DILocation(line: 567, column: 24, scope: !13104)
!13139 = !DILocation(line: 594, column: 11, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13104, file: !2085, line: 594, column: 6)
!13141 = !DILocation(line: 0, scope: !13140)
!13142 = !DILocation(line: 594, column: 6, scope: !13104)
!13143 = !DILocation(line: 595, column: 3, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13140, file: !2085, line: 594, column: 20)
!13145 = !DILocation(line: 598, column: 3, scope: !13144)
!13146 = !DILocation(line: 598, column: 52, scope: !13144)
!13147 = !DILocation(line: 599, column: 2, scope: !13144)
!13148 = !DILocation(line: 600, column: 23, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13140, file: !2085, line: 599, column: 9)
!13150 = !DILocation(line: 612, column: 7, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13104, file: !2085, line: 612, column: 6)
!13152 = !DILocation(line: 612, column: 6, scope: !13104)
!13153 = !DILocation(line: 627, column: 40, scope: !13104)
!13154 = !DILocation(line: 637, column: 2, scope: !13104)
!13155 = !DILocation(line: 613, column: 15, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !2085, line: 612, column: 17)
!13157 = !DILocation(line: 613, column: 29, scope: !13156)
!13158 = !DILocation(line: 638, column: 1, scope: !13104)
!13159 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12807, file: !12807, line: 78, type: !13160, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13162)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!347, !107}
!13162 = !{!13163}
!13163 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13159, file: !12807, line: 78, type: !107)
!13164 = !DILocation(line: 0, scope: !13159)
!13165 = !DILocation(line: 80, column: 21, scope: !13159)
!13166 = !DILocation(line: 80, column: 2, scope: !13159)
!13167 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !13169, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13171)
!13168 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13169 = !DISubroutineType(types: !13170)
!13170 = !{null, !2120}
!13171 = !{!13172}
!13172 = !DILocalVariable(name: "w", arg: 1, scope: !13167, file: !13168, line: 47, type: !2120)
!13173 = !DILocation(line: 0, scope: !13167)
!13174 = !DILocation(line: 49, column: 21, scope: !13167)
!13175 = !DILocation(line: 49, column: 2, scope: !13167)
!13176 = !DILocation(line: 50, column: 1, scope: !13167)
!13177 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2085, file: !2085, line: 791, type: !13178, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13181)
!13178 = !DISubroutineType(types: !13179)
!13179 = !{null, !13180, !109, !110, !32}
!13180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 32)
!13181 = !{!13182, !13183, !13184, !13185}
!13182 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13177, file: !2085, line: 791, type: !13180)
!13183 = !DILocalVariable(name: "priority", arg: 2, scope: !13177, file: !2085, line: 791, type: !109)
!13184 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13177, file: !2085, line: 792, type: !110)
!13185 = !DILocalVariable(name: "options", arg: 4, scope: !13177, file: !2085, line: 792, type: !32)
!13186 = !DILocation(line: 0, scope: !13177)
!13187 = !DILocation(line: 795, column: 15, scope: !13177)
!13188 = !DILocation(line: 795, column: 25, scope: !13177)
!13189 = !DILocation(line: 796, column: 30, scope: !13177)
!13190 = !DILocation(line: 796, column: 15, scope: !13177)
!13191 = !DILocation(line: 796, column: 28, scope: !13177)
!13192 = !DILocation(line: 797, column: 30, scope: !13177)
!13193 = !DILocation(line: 797, column: 15, scope: !13177)
!13194 = !DILocation(line: 797, column: 28, scope: !13177)
!13195 = !DILocation(line: 799, column: 22, scope: !13177)
!13196 = !DILocation(line: 799, column: 15, scope: !13177)
!13197 = !DILocation(line: 799, column: 20, scope: !13177)
!13198 = !DILocation(line: 801, column: 15, scope: !13177)
!13199 = !DILocation(line: 801, column: 28, scope: !13177)
!13200 = !DILocation(line: 814, column: 2, scope: !13177)
!13201 = !DILocation(line: 815, column: 1, scope: !13177)
!13202 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2085, file: !2085, line: 449, type: !13203, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13205)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!285, !2089, !13107, !234}
!13205 = !{!13206, !13207, !13208, !13209, !13210, !13211, !13212, !13213}
!13206 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13202, file: !2085, line: 449, type: !2089)
!13207 = !DILocalVariable(name: "stack", arg: 2, scope: !13202, file: !2085, line: 450, type: !13107)
!13208 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13202, file: !2085, line: 450, type: !234)
!13209 = !DILocalVariable(name: "stack_obj_size", scope: !13202, file: !2085, line: 452, type: !234)
!13210 = !DILocalVariable(name: "stack_buf_size", scope: !13202, file: !2085, line: 452, type: !234)
!13211 = !DILocalVariable(name: "stack_ptr", scope: !13202, file: !2085, line: 453, type: !285)
!13212 = !DILocalVariable(name: "stack_buf_start", scope: !13202, file: !2085, line: 453, type: !285)
!13213 = !DILocalVariable(name: "delta", scope: !13202, file: !2085, line: 454, type: !234)
!13214 = !DILocation(line: 0, scope: !13202)
!13215 = !DILocation(line: 465, column: 20, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13202, file: !2085, line: 463, column: 2)
!13217 = !DILocation(line: 466, column: 21, scope: !13216)
!13218 = !DILocation(line: 473, column: 28, scope: !13202)
!13219 = !DILocation(line: 514, column: 33, scope: !13202)
!13220 = !DILocation(line: 514, column: 25, scope: !13202)
!13221 = !DILocation(line: 514, column: 31, scope: !13202)
!13222 = !DILocation(line: 515, column: 25, scope: !13202)
!13223 = !DILocation(line: 515, column: 30, scope: !13202)
!13224 = !DILocation(line: 516, column: 25, scope: !13202)
!13225 = !DILocation(line: 516, column: 31, scope: !13202)
!13226 = !DILocation(line: 520, column: 2, scope: !13202)
!13227 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13228, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13230)
!13228 = !DISubroutineType(types: !13229)
!13229 = !{!285, !13107}
!13230 = !{!13231}
!13231 = !DILocalVariable(name: "sym", arg: 1, scope: !13227, file: !147, line: 331, type: !13107)
!13232 = !DILocation(line: 0, scope: !13227)
!13233 = !DILocation(line: 333, column: 21, scope: !13227)
!13234 = !DILocation(line: 333, column: 2, scope: !13227)
!13235 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13236, file: !13236, line: 40, type: !13237, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13239)
!13236 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13237 = !DISubroutineType(types: !13238)
!13238 = !{null, !13180}
!13239 = !{!13240}
!13240 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13235, file: !13236, line: 40, type: !13180)
!13241 = !DILocation(line: 0, scope: !13235)
!13242 = !DILocation(line: 42, column: 31, scope: !13235)
!13243 = !DILocation(line: 42, column: 2, scope: !13235)
!13244 = !DILocation(line: 43, column: 1, scope: !13235)
!13245 = distinct !DISubprogram(name: "z_init_timeout", scope: !13236, file: !13236, line: 25, type: !2146, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13246)
!13246 = !{!13247}
!13247 = !DILocalVariable(name: "to", arg: 1, scope: !13245, file: !13236, line: 25, type: !2148)
!13248 = !DILocation(line: 0, scope: !13245)
!13249 = !DILocation(line: 27, column: 22, scope: !13245)
!13250 = !DILocation(line: 27, column: 2, scope: !13245)
!13251 = !DILocation(line: 28, column: 1, scope: !13245)
!13252 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13253, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13255)
!13253 = !DISubroutineType(types: !13254)
!13254 = !{null, !2195}
!13255 = !{!13256}
!13256 = !DILocalVariable(name: "node", arg: 1, scope: !13252, file: !127, line: 211, type: !2195)
!13257 = !DILocation(line: 0, scope: !13252)
!13258 = !DILocation(line: 213, column: 8, scope: !13252)
!13259 = !DILocation(line: 213, column: 13, scope: !13252)
!13260 = !DILocation(line: 214, column: 8, scope: !13252)
!13261 = !DILocation(line: 214, column: 13, scope: !13252)
!13262 = !DILocation(line: 215, column: 1, scope: !13252)
!13263 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13264, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13267)
!13264 = !DISubroutineType(types: !13265)
!13265 = !{null, !13266}
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 32)
!13267 = !{!13268}
!13268 = !DILocalVariable(name: "list", arg: 1, scope: !13263, file: !127, line: 197, type: !13266)
!13269 = !DILocation(line: 0, scope: !13263)
!13270 = !DILocation(line: 199, column: 8, scope: !13263)
!13271 = !DILocation(line: 199, column: 13, scope: !13263)
!13272 = !DILocation(line: 200, column: 8, scope: !13263)
!13273 = !DILocation(line: 200, column: 13, scope: !13263)
!13274 = !DILocation(line: 201, column: 1, scope: !13263)
!13275 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2085, file: !2085, line: 641, type: !13276, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13282)
!13276 = !DISubroutineType(types: !13277)
!13277 = !{!2088, !2089, !13107, !234, !3354, !107, !107, !107, !109, !110, !13278}
!13278 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13279)
!13279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13280)
!13280 = !{!13281}
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13279, file: !104, line: 66, baseType: !103, size: 64)
!13282 = !{!13283, !13284, !13285, !13286, !13287, !13288, !13289, !13290, !13291, !13292}
!13283 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13275, file: !2085, line: 641, type: !2089)
!13284 = !DILocalVariable(name: "stack", arg: 2, scope: !13275, file: !2085, line: 642, type: !13107)
!13285 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13275, file: !2085, line: 643, type: !234)
!13286 = !DILocalVariable(name: "entry", arg: 4, scope: !13275, file: !2085, line: 643, type: !3354)
!13287 = !DILocalVariable(name: "p1", arg: 5, scope: !13275, file: !2085, line: 644, type: !107)
!13288 = !DILocalVariable(name: "p2", arg: 6, scope: !13275, file: !2085, line: 644, type: !107)
!13289 = !DILocalVariable(name: "p3", arg: 7, scope: !13275, file: !2085, line: 644, type: !107)
!13290 = !DILocalVariable(name: "prio", arg: 8, scope: !13275, file: !2085, line: 645, type: !109)
!13291 = !DILocalVariable(name: "options", arg: 9, scope: !13275, file: !2085, line: 645, type: !110)
!13292 = !DILocalVariable(name: "delay", arg: 10, scope: !13275, file: !2085, line: 645, type: !13278)
!13293 = !DILocation(line: 0, scope: !13275)
!13294 = !DILocation(line: 1031, column: 3, scope: !12984, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 48, column: 10, scope: !12988, inlinedAt: !13296)
!13296 = distinct !DILocation(line: 647, column: 2, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13298, file: !2085, line: 647, column: 2)
!13298 = distinct !DILexicalBlock(scope: !13275, file: !2085, line: 647, column: 2)
!13299 = !DILocation(line: 0, scope: !12984, inlinedAt: !13295)
!13300 = !DILocation(line: 48, column: 9, scope: !12988, inlinedAt: !13296)
!13301 = !DILocation(line: 647, column: 2, scope: !13298)
!13302 = !DILocation(line: 647, column: 2, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13297, file: !2085, line: 647, column: 2)
!13304 = !DILocation(line: 649, column: 2, scope: !13275)
!13305 = !DILocation(line: 652, column: 7, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13275, file: !2085, line: 652, column: 6)
!13307 = !DILocation(line: 652, column: 6, scope: !13275)
!13308 = !DILocation(line: 653, column: 3, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !2085, line: 652, column: 39)
!13310 = !DILocation(line: 654, column: 2, scope: !13309)
!13311 = !DILocation(line: 656, column: 2, scope: !13275)
!13312 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2085, file: !2085, line: 401, type: !13313, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13315)
!13313 = !DISubroutineType(types: !13314)
!13314 = !{null, !2089, !13278}
!13315 = !{!13316, !13317}
!13316 = !DILocalVariable(name: "thread", arg: 1, scope: !13312, file: !2085, line: 401, type: !2089)
!13317 = !DILocalVariable(name: "delay", arg: 2, scope: !13312, file: !2085, line: 401, type: !13278)
!13318 = !DILocation(line: 0, scope: !13312)
!13319 = !DILocation(line: 404, column: 6, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13312, file: !2085, line: 404, column: 6)
!13321 = !DILocation(line: 404, column: 6, scope: !13312)
!13322 = !DILocation(line: 405, column: 3, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13320, file: !2085, line: 404, column: 38)
!13324 = !DILocation(line: 406, column: 2, scope: !13323)
!13325 = !DILocation(line: 407, column: 3, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13320, file: !2085, line: 406, column: 9)
!13327 = !DILocation(line: 413, column: 1, scope: !13312)
!13328 = distinct !DISubprogram(name: "k_thread_start", scope: !3233, file: !3233, line: 205, type: !13329, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13331)
!13329 = !DISubroutineType(types: !13330)
!13330 = !{null, !2088}
!13331 = !{!13332}
!13332 = !DILocalVariable(name: "thread", arg: 1, scope: !13328, file: !3233, line: 205, type: !2088)
!13333 = !DILocation(line: 0, scope: !13328)
!13334 = !DILocation(line: 214, column: 2, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13328, file: !3233, line: 214, column: 2)
!13336 = !{i64 2154775317}
!13337 = !DILocation(line: 215, column: 2, scope: !13328)
!13338 = !DILocation(line: 216, column: 1, scope: !13328)
!13339 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13236, file: !13236, line: 47, type: !13313, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13340)
!13340 = !{!13341, !13342}
!13341 = !DILocalVariable(name: "thread", arg: 1, scope: !13339, file: !13236, line: 47, type: !2089)
!13342 = !DILocalVariable(name: "ticks", arg: 2, scope: !13339, file: !13236, line: 47, type: !13278)
!13343 = !DILocation(line: 0, scope: !13339)
!13344 = !DILocation(line: 49, column: 30, scope: !13339)
!13345 = !DILocation(line: 49, column: 2, scope: !13339)
!13346 = !DILocation(line: 50, column: 1, scope: !13339)
!13347 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2085, file: !2085, line: 748, type: !3087, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13348)
!13348 = !{!13349, !13367}
!13349 = !DILocalVariable(name: "thread_data", scope: !13350, file: !2085, line: 750, type: !13351)
!13350 = distinct !DILexicalBlock(scope: !13347, file: !2085, line: 750, column: 2)
!13351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13352, size: 32)
!13352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13353)
!13353 = !{!13354, !13355, !13356, !13357, !13358, !13359, !13360, !13361, !13362, !13363, !13364, !13366}
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13352, file: !118, line: 621, baseType: !2089, size: 32)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13352, file: !118, line: 622, baseType: !13107, size: 32, offset: 32)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13352, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13352, file: !118, line: 624, baseType: !3354, size: 32, offset: 96)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13352, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13352, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13352, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13352, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13352, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13352, file: !118, line: 630, baseType: !765, size: 32, offset: 288)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13352, file: !118, line: 631, baseType: !13365, size: 32, offset: 320)
!13365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!13366 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13352, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13367 = !DILocalVariable(name: "thread_data", scope: !13368, file: !2085, line: 781, type: !13351)
!13368 = distinct !DILexicalBlock(scope: !13347, file: !2085, line: 781, column: 2)
!13369 = !DILocation(line: 0, scope: !13350)
!13370 = !DILocation(line: 750, column: 2, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !2085, line: 750, column: 2)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !2085, line: 750, column: 2)
!13373 = distinct !DILexicalBlock(scope: !13350, file: !2085, line: 750, column: 2)
!13374 = !DILocation(line: 750, column: 2, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13376, file: !2085, line: 750, column: 2)
!13376 = distinct !DILexicalBlock(scope: !13371, file: !2085, line: 750, column: 2)
!13377 = !DILocation(line: 750, column: 2, scope: !13372)
!13378 = !DILocation(line: 750, column: 2, scope: !13350)
!13379 = !DILocation(line: 780, column: 2, scope: !13347)
!13380 = !DILocation(line: 0, scope: !13368)
!13381 = !DILocation(line: 781, column: 2, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !2085, line: 781, column: 2)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !2085, line: 781, column: 2)
!13384 = distinct !DILexicalBlock(scope: !13368, file: !2085, line: 781, column: 2)
!13385 = !DILocation(line: 752, column: 17, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13373, file: !2085, line: 750, column: 38)
!13387 = !DILocation(line: 753, column: 17, scope: !13386)
!13388 = !DILocation(line: 754, column: 17, scope: !13386)
!13389 = !DILocation(line: 755, column: 17, scope: !13386)
!13390 = !DILocation(line: 756, column: 17, scope: !13386)
!13391 = !DILocation(line: 757, column: 17, scope: !13386)
!13392 = !DILocation(line: 758, column: 17, scope: !13386)
!13393 = !DILocation(line: 759, column: 17, scope: !13386)
!13394 = !DILocation(line: 760, column: 17, scope: !13386)
!13395 = !DILocation(line: 761, column: 17, scope: !13386)
!13396 = !DILocation(line: 751, column: 3, scope: !13386)
!13397 = !DILocation(line: 763, column: 16, scope: !13386)
!13398 = !DILocation(line: 763, column: 29, scope: !13386)
!13399 = !DILocation(line: 763, column: 39, scope: !13386)
!13400 = !DILocation(line: 750, column: 2, scope: !13373)
!13401 = !DILocation(line: 750, column: 2, scope: !13376)
!13402 = distinct !{!13402, !13378, !13403}
!13403 = !DILocation(line: 764, column: 2, scope: !13350)
!13404 = !DILocation(line: 781, column: 2, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !2085, line: 781, column: 2)
!13406 = distinct !DILexicalBlock(scope: !13382, file: !2085, line: 781, column: 2)
!13407 = !DILocation(line: 781, column: 2, scope: !13383)
!13408 = !DILocation(line: 781, column: 2, scope: !13368)
!13409 = !DILocation(line: 787, column: 2, scope: !13347)
!13410 = !DILocation(line: 788, column: 1, scope: !13347)
!13411 = !DILocation(line: 782, column: 20, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !2085, line: 782, column: 7)
!13413 = distinct !DILexicalBlock(scope: !13384, file: !2085, line: 781, column: 38)
!13414 = !DILocation(line: 782, column: 31, scope: !13412)
!13415 = !DILocation(line: 782, column: 7, scope: !13413)
!13416 = !DILocation(line: 783, column: 37, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13412, file: !2085, line: 782, column: 51)
!13418 = !DILocation(line: 784, column: 10, scope: !13417)
!13419 = !DILocation(line: 783, column: 4, scope: !13417)
!13420 = !DILocation(line: 785, column: 3, scope: !13417)
!13421 = !DILocation(line: 781, column: 2, scope: !13384)
!13422 = !DILocation(line: 781, column: 2, scope: !13406)
!13423 = distinct !{!13423, !13408, !13424}
!13424 = !DILocation(line: 786, column: 2, scope: !13368)
!13425 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13426, file: !13426, line: 403, type: !13427, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13429)
!13426 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13427 = !DISubroutineType(types: !13428)
!13428 = !{!111, !111}
!13429 = !{!13430}
!13430 = !DILocalVariable(name: "t", arg: 1, scope: !13425, file: !13426, line: 403, type: !111)
!13431 = !DILocation(line: 0, scope: !13425)
!13432 = !DILocalVariable(name: "t", arg: 1, scope: !13433, file: !13426, line: 102, type: !111)
!13433 = distinct !DISubprogram(name: "z_tmcvt", scope: !13426, file: !13426, line: 102, type: !13434, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13436)
!13434 = !DISubroutineType(types: !13435)
!13435 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!13436 = !{!13432, !13437, !13438, !13439, !13440, !13441, !13442, !13443, !13444, !13445, !13446}
!13437 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13433, file: !13426, line: 102, type: !110)
!13438 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13433, file: !13426, line: 103, type: !110)
!13439 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13433, file: !13426, line: 103, type: !347)
!13440 = !DILocalVariable(name: "result32", arg: 5, scope: !13433, file: !13426, line: 104, type: !347)
!13441 = !DILocalVariable(name: "round_up", arg: 6, scope: !13433, file: !13426, line: 104, type: !347)
!13442 = !DILocalVariable(name: "round_off", arg: 7, scope: !13433, file: !13426, line: 105, type: !347)
!13443 = !DILocalVariable(name: "mul_ratio", scope: !13433, file: !13426, line: 107, type: !347)
!13444 = !DILocalVariable(name: "div_ratio", scope: !13433, file: !13426, line: 109, type: !347)
!13445 = !DILocalVariable(name: "off", scope: !13433, file: !13426, line: 116, type: !111)
!13446 = !DILocalVariable(name: "rdivisor", scope: !13447, file: !13426, line: 119, type: !110)
!13447 = distinct !DILexicalBlock(scope: !13448, file: !13426, line: 118, column: 18)
!13448 = distinct !DILexicalBlock(scope: !13433, file: !13426, line: 118, column: 6)
!13449 = !DILocation(line: 0, scope: !13433, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 406, column: 9, scope: !13425)
!13451 = !DILocation(line: 145, column: 13, scope: !13452, inlinedAt: !13450)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !13426, line: 144, column: 10)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !13426, line: 142, column: 7)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !13426, line: 141, column: 24)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !13426, line: 141, column: 13)
!13456 = distinct !DILexicalBlock(scope: !13433, file: !13426, line: 134, column: 6)
!13457 = !DILocation(line: 406, column: 2, scope: !13425)
!13458 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2085, file: !2085, line: 817, type: !4479, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13459)
!13459 = !{!13460, !13461, !13462, !13463}
!13460 = !DILocalVariable(name: "entry", arg: 1, scope: !13458, file: !2085, line: 817, type: !3354)
!13461 = !DILocalVariable(name: "p1", arg: 2, scope: !13458, file: !2085, line: 818, type: !107)
!13462 = !DILocalVariable(name: "p2", arg: 3, scope: !13458, file: !2085, line: 818, type: !107)
!13463 = !DILocalVariable(name: "p3", arg: 4, scope: !13458, file: !2085, line: 818, type: !107)
!13464 = !DILocation(line: 0, scope: !13458)
!13465 = !DILocation(line: 822, column: 2, scope: !13458)
!13466 = !DILocation(line: 822, column: 17, scope: !13458)
!13467 = !DILocation(line: 822, column: 30, scope: !13458)
!13468 = !DILocation(line: 823, column: 2, scope: !13458)
!13469 = !DILocation(line: 845, column: 2, scope: !13458)
!13470 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2085, file: !2085, line: 853, type: !13471, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13474)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{!347, !13473}
!13473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!13474 = !{!13475, !13476}
!13475 = !DILocalVariable(name: "l", arg: 1, scope: !13470, file: !2085, line: 853, type: !13473)
!13476 = !DILocalVariable(name: "thread_cpu", scope: !13470, file: !2085, line: 855, type: !22)
!13477 = !DILocation(line: 0, scope: !13470)
!13478 = !DILocation(line: 855, column: 28, scope: !13470)
!13479 = !DILocation(line: 857, column: 17, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13470, file: !2085, line: 857, column: 6)
!13481 = !DILocation(line: 857, column: 6, scope: !13470)
!13482 = !DILocation(line: 858, column: 19, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13484, file: !2085, line: 858, column: 7)
!13484 = distinct !DILexicalBlock(scope: !13480, file: !2085, line: 857, column: 24)
!13485 = !DILocation(line: 858, column: 42, scope: !13483)
!13486 = !DILocation(line: 858, column: 28, scope: !13483)
!13487 = !DILocation(line: 858, column: 25, scope: !13483)
!13488 = !DILocation(line: 858, column: 7, scope: !13484)
!13489 = !DILocation(line: 862, column: 2, scope: !13470)
!13490 = !DILocation(line: 863, column: 1, scope: !13470)
!13491 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2085, file: !2085, line: 865, type: !13471, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13492)
!13492 = !{!13493}
!13493 = !DILocalVariable(name: "l", arg: 1, scope: !13491, file: !2085, line: 865, type: !13473)
!13494 = !DILocation(line: 0, scope: !13491)
!13495 = !DILocation(line: 867, column: 9, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13491, file: !2085, line: 867, column: 6)
!13497 = !DILocation(line: 867, column: 38, scope: !13496)
!13498 = !DILocation(line: 867, column: 24, scope: !13496)
!13499 = !DILocation(line: 867, column: 54, scope: !13496)
!13500 = !DILocation(line: 867, column: 43, scope: !13496)
!13501 = !DILocation(line: 867, column: 41, scope: !13496)
!13502 = !DILocation(line: 867, column: 20, scope: !13496)
!13503 = !DILocation(line: 867, column: 6, scope: !13491)
!13504 = !DILocation(line: 870, column: 16, scope: !13491)
!13505 = !DILocation(line: 871, column: 2, scope: !13491)
!13506 = !DILocation(line: 872, column: 1, scope: !13491)
!13507 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2085, file: !2085, line: 874, type: !13508, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13510)
!13508 = !DISubroutineType(types: !13509)
!13509 = !{null, !13473}
!13510 = !{!13511}
!13511 = !DILocalVariable(name: "l", arg: 1, scope: !13507, file: !2085, line: 874, type: !13473)
!13512 = !DILocation(line: 0, scope: !13507)
!13513 = !DILocation(line: 876, column: 32, scope: !13507)
!13514 = !DILocation(line: 876, column: 18, scope: !13507)
!13515 = !DILocation(line: 876, column: 48, scope: !13507)
!13516 = !DILocation(line: 876, column: 37, scope: !13507)
!13517 = !DILocation(line: 876, column: 35, scope: !13507)
!13518 = !DILocation(line: 876, column: 5, scope: !13507)
!13519 = !DILocation(line: 876, column: 16, scope: !13507)
!13520 = !DILocation(line: 877, column: 1, scope: !13507)
!13521 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2085, file: !2085, line: 888, type: !13522, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13524)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{!109, !2089}
!13524 = !{!13525}
!13525 = !DILocalVariable(name: "thread", arg: 1, scope: !13521, file: !2085, line: 888, type: !2089)
!13526 = !DILocation(line: 0, scope: !13521)
!13527 = !DILocation(line: 893, column: 2, scope: !13521)
!13528 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2085, file: !2085, line: 897, type: !13529, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13531)
!13529 = !DISubroutineType(types: !13530)
!13530 = !{!109, !2089, !32}
!13531 = !{!13532, !13533}
!13532 = !DILocalVariable(name: "thread", arg: 1, scope: !13528, file: !2085, line: 897, type: !2089)
!13533 = !DILocalVariable(name: "options", arg: 2, scope: !13528, file: !2085, line: 897, type: !32)
!13534 = !DILocation(line: 0, scope: !13528)
!13535 = !DILocation(line: 902, column: 2, scope: !13528)
!13536 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2085, file: !2085, line: 1072, type: !13537, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13542)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!109, !2088, !13539}
!13539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13540, size: 32)
!13540 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !13541)
!13541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2024)
!13542 = !{!13543, !13544}
!13543 = !DILocalVariable(name: "thread", arg: 1, scope: !13536, file: !2085, line: 1072, type: !2088)
!13544 = !DILocalVariable(name: "stats", arg: 2, scope: !13536, file: !2085, line: 1073, type: !13539)
!13545 = !DILocation(line: 0, scope: !13536)
!13546 = !DILocation(line: 1075, column: 14, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13536, file: !2085, line: 1075, column: 6)
!13548 = !DILocation(line: 1075, column: 23, scope: !13547)
!13549 = !DILocation(line: 1086, column: 1, scope: !13536)
!13550 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2085, file: !2085, line: 1088, type: !13551, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2192, retainedNodes: !13553)
!13551 = !DISubroutineType(types: !13552)
!13552 = !{!109, !13539}
!13553 = !{!13554}
!13554 = !DILocalVariable(name: "stats", arg: 1, scope: !13550, file: !2085, line: 1088, type: !13539)
!13555 = !DILocation(line: 0, scope: !13550)
!13556 = !DILocation(line: 1094, column: 12, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13550, file: !2085, line: 1094, column: 6)
!13558 = !DILocation(line: 1120, column: 1, scope: !13550)
!13559 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13560, file: !13560, line: 20, type: !3087, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !2024)
!13560 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13561 = !DILocation(line: 30, column: 2, scope: !13559)
!13562 = !DILocation(line: 31, column: 1, scope: !13559)
!13563 = distinct !DISubprogram(name: "idle", scope: !13560, file: !13560, line: 33, type: !3199, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !13564)
!13564 = !{!13565, !13566, !13567}
!13565 = !DILocalVariable(name: "unused1", arg: 1, scope: !13563, file: !13560, line: 33, type: !107)
!13566 = !DILocalVariable(name: "unused2", arg: 2, scope: !13563, file: !13560, line: 33, type: !107)
!13567 = !DILocalVariable(name: "unused3", arg: 3, scope: !13563, file: !13560, line: 33, type: !107)
!13568 = !DILocation(line: 0, scope: !13563)
!13569 = !DILocation(line: 39, column: 2, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !13560, line: 39, column: 2)
!13571 = distinct !DILexicalBlock(scope: !13563, file: !13560, line: 39, column: 2)
!13572 = !DILocation(line: 39, column: 2, scope: !13571)
!13573 = !DILocation(line: 39, column: 2, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13570, file: !13560, line: 39, column: 2)
!13575 = !DILocation(line: 55, column: 2, scope: !13576, inlinedAt: !13580)
!13576 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !13577)
!13577 = !{!13578, !13579}
!13578 = !DILocalVariable(name: "key", scope: !13576, file: !6097, line: 44, type: !32)
!13579 = !DILocalVariable(name: "tmp", scope: !13576, file: !6097, line: 53, type: !32)
!13580 = distinct !DILocation(line: 62, column: 10, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13563, file: !13560, line: 41, column: 15)
!13582 = !{i64 2243063}
!13583 = !DILocation(line: 0, scope: !13576, inlinedAt: !13580)
!13584 = !DILocation(line: 86, column: 3, scope: !13581)
!13585 = !DILocation(line: 41, column: 2, scope: !13563)
!13586 = distinct !{!13586, !13585, !13587}
!13587 = !DILocation(line: 105, column: 2, scope: !13563)
!13588 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3087, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !2024)
!13589 = !DILocation(line: 5629, column: 2, scope: !13588)
!13590 = !DILocation(line: 5630, column: 1, scope: !13588)
!13591 = !DISubprogram(name: "arch_cpu_idle", scope: !3353, file: !3353, line: 167, type: !3087, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!13592 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2320, file: !2320, line: 49, type: !13593, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13602)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{!109, !13595}
!13595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13596, size: 32)
!13596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13597)
!13597 = !{!13598, !13599, !13600, !13601}
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13596, file: !118, line: 2722, baseType: !2248, size: 64)
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13596, file: !118, line: 2724, baseType: !2230, size: 32, offset: 64)
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13596, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13596, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13602 = !{!13603}
!13603 = !DILocalVariable(name: "mutex", arg: 1, scope: !13592, file: !2320, line: 49, type: !13595)
!13604 = !DILocation(line: 0, scope: !13592)
!13605 = !DILocation(line: 51, column: 9, scope: !13592)
!13606 = !DILocation(line: 51, column: 15, scope: !13592)
!13607 = !DILocation(line: 52, column: 9, scope: !13592)
!13608 = !DILocation(line: 52, column: 20, scope: !13592)
!13609 = !DILocation(line: 54, column: 23, scope: !13592)
!13610 = !DILocation(line: 54, column: 2, scope: !13592)
!13611 = !DILocation(line: 60, column: 2, scope: !13592)
!13612 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !13613, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13615)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{null, !2247}
!13615 = !{!13616}
!13616 = !DILocalVariable(name: "w", arg: 1, scope: !13612, file: !13168, line: 47, type: !2247)
!13617 = !DILocation(line: 0, scope: !13612)
!13618 = !DILocation(line: 49, column: 21, scope: !13612)
!13619 = !DILocation(line: 49, column: 2, scope: !13612)
!13620 = !DILocation(line: 50, column: 1, scope: !13612)
!13621 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13622, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13625)
!13622 = !DISubroutineType(types: !13623)
!13623 = !{null, !13624}
!13624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!13625 = !{!13626}
!13626 = !DILocalVariable(name: "list", arg: 1, scope: !13621, file: !127, line: 197, type: !13624)
!13627 = !DILocation(line: 0, scope: !13621)
!13628 = !DILocation(line: 199, column: 8, scope: !13621)
!13629 = !DILocation(line: 199, column: 13, scope: !13621)
!13630 = !DILocation(line: 200, column: 8, scope: !13621)
!13631 = !DILocation(line: 200, column: 13, scope: !13621)
!13632 = !DILocation(line: 201, column: 1, scope: !13621)
!13633 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2320, file: !2320, line: 95, type: !13634, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13640)
!13634 = !DISubroutineType(types: !13635)
!13635 = !{!109, !13595, !13636}
!13636 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13637)
!13637 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13638)
!13638 = !{!13639}
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13637, file: !104, line: 66, baseType: !103, size: 64)
!13640 = !{!13641, !13642, !13643, !13644, !13649, !13650, !13651}
!13641 = !DILocalVariable(name: "mutex", arg: 1, scope: !13633, file: !2320, line: 95, type: !13595)
!13642 = !DILocalVariable(name: "timeout", arg: 2, scope: !13633, file: !2320, line: 95, type: !13636)
!13643 = !DILocalVariable(name: "new_prio", scope: !13633, file: !2320, line: 97, type: !109)
!13644 = !DILocalVariable(name: "key", scope: !13633, file: !2320, line: 98, type: !13645)
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13646)
!13646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13647)
!13647 = !{!13648}
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13646, file: !253, line: 33, baseType: !109, size: 32)
!13649 = !DILocalVariable(name: "resched", scope: !13633, file: !2320, line: 99, type: !347)
!13650 = !DILocalVariable(name: "got_mutex", scope: !13633, file: !2320, line: 146, type: !109)
!13651 = !DILocalVariable(name: "waiter", scope: !13652, file: !2320, line: 169, type: !2230)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !2320, line: 168, column: 36)
!13653 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 168, column: 6)
!13654 = !DILocation(line: 0, scope: !13633)
!13655 = !DILocation(line: 1031, column: 3, scope: !13656, inlinedAt: !13659)
!13656 = distinct !DISubprogram(name: "__get_IPSR", scope: !6418, file: !6418, line: 1027, type: !6505, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13657)
!13657 = !{!13658}
!13658 = !DILocalVariable(name: "result", scope: !13656, file: !6418, line: 1029, type: !110)
!13659 = distinct !DILocation(line: 48, column: 10, scope: !13660, inlinedAt: !13661)
!13660 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7470, file: !7470, line: 46, type: !7471, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !2024)
!13661 = distinct !DILocation(line: 101, column: 2, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13663, file: !2320, line: 101, column: 2)
!13663 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 101, column: 2)
!13664 = !{i64 3502342}
!13665 = !DILocation(line: 0, scope: !13656, inlinedAt: !13659)
!13666 = !DILocation(line: 48, column: 9, scope: !13660, inlinedAt: !13661)
!13667 = !DILocation(line: 101, column: 2, scope: !13663)
!13668 = !DILocation(line: 101, column: 2, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13662, file: !2320, line: 101, column: 2)
!13670 = !DILocalVariable(name: "l", arg: 1, scope: !13671, file: !253, line: 136, type: !13674)
!13671 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !13672, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13675)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{!13645, !13674}
!13674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!13675 = !{!13670, !13676}
!13676 = !DILocalVariable(name: "k", scope: !13671, file: !253, line: 139, type: !13645)
!13677 = !DILocation(line: 0, scope: !13671, inlinedAt: !13678)
!13678 = distinct !DILocation(line: 105, column: 8, scope: !13633)
!13679 = !DILocation(line: 55, column: 2, scope: !13680, inlinedAt: !13684)
!13680 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13681)
!13681 = !{!13682, !13683}
!13682 = !DILocalVariable(name: "key", scope: !13680, file: !6097, line: 44, type: !32)
!13683 = !DILocalVariable(name: "tmp", scope: !13680, file: !6097, line: 53, type: !32)
!13684 = distinct !DILocation(line: 145, column: 10, scope: !13671, inlinedAt: !13678)
!13685 = !{i64 2247471}
!13686 = !DILocation(line: 0, scope: !13680, inlinedAt: !13684)
!13687 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13678)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !253, line: 148, column: 2)
!13689 = distinct !DILexicalBlock(scope: !13671, file: !253, line: 148, column: 2)
!13690 = !DILocation(line: 148, column: 2, scope: !13689, inlinedAt: !13678)
!13691 = !DILocation(line: 148, column: 2, scope: !13692, inlinedAt: !13678)
!13692 = distinct !DILexicalBlock(scope: !13688, file: !253, line: 148, column: 2)
!13693 = !DILocation(line: 160, column: 2, scope: !13671, inlinedAt: !13678)
!13694 = !DILocation(line: 107, column: 6, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 107, column: 6)
!13696 = !DILocation(line: 107, column: 6, scope: !13633)
!13697 = !{!"branch_weights", i32 2000, i32 1}
!13698 = !DILocation(line: 110, column: 6, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13695, file: !2320, line: 107, column: 71)
!13700 = !DILocation(line: 110, column: 21, scope: !13699)
!13701 = !DILocation(line: 109, column: 28, scope: !13699)
!13702 = !DILocation(line: 111, column: 13, scope: !13699)
!13703 = !DILocation(line: 114, column: 18, scope: !13699)
!13704 = !DILocation(line: 109, column: 10, scope: !13699)
!13705 = !DILocation(line: 109, column: 26, scope: !13699)
!13706 = !DILocation(line: 113, column: 20, scope: !13699)
!13707 = !DILocation(line: 114, column: 10, scope: !13699)
!13708 = !DILocation(line: 114, column: 16, scope: !13699)
!13709 = !DILocalVariable(name: "key", arg: 2, scope: !13710, file: !253, line: 190, type: !13645)
!13710 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !13711, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{null, !13674, !13645}
!13713 = !{!13714, !13709}
!13714 = !DILocalVariable(name: "l", arg: 1, scope: !13710, file: !253, line: 189, type: !13674)
!13715 = !DILocation(line: 0, scope: !13710, inlinedAt: !13716)
!13716 = distinct !DILocation(line: 120, column: 3, scope: !13699)
!13717 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13716)
!13718 = distinct !DILexicalBlock(scope: !13719, file: !253, line: 194, column: 2)
!13719 = distinct !DILexicalBlock(scope: !13710, file: !253, line: 194, column: 2)
!13720 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13716)
!13721 = !DILocation(line: 194, column: 2, scope: !13722, inlinedAt: !13716)
!13722 = distinct !DILexicalBlock(scope: !13718, file: !253, line: 194, column: 2)
!13723 = !DILocalVariable(name: "key", arg: 1, scope: !13724, file: !6097, line: 84, type: !32)
!13724 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13725)
!13725 = !{!13723}
!13726 = !DILocation(line: 0, scope: !13724, inlinedAt: !13727)
!13727 = distinct !DILocation(line: 215, column: 2, scope: !13710, inlinedAt: !13716)
!13728 = !DILocation(line: 95, column: 2, scope: !13724, inlinedAt: !13727)
!13729 = !{i64 2248288}
!13730 = !DILocation(line: 124, column: 3, scope: !13699)
!13731 = !DILocation(line: 127, column: 6, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 127, column: 6)
!13733 = !DILocation(line: 127, column: 6, scope: !13633)
!13734 = !{!"branch_weights", i32 1, i32 2000}
!13735 = !DILocation(line: 0, scope: !13710, inlinedAt: !13736)
!13736 = distinct !DILocation(line: 128, column: 3, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13732, file: !2320, line: 127, column: 50)
!13738 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13736)
!13739 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13736)
!13740 = !DILocation(line: 194, column: 2, scope: !13722, inlinedAt: !13736)
!13741 = !DILocation(line: 0, scope: !13724, inlinedAt: !13742)
!13742 = distinct !DILocation(line: 215, column: 2, scope: !13710, inlinedAt: !13736)
!13743 = !DILocation(line: 95, column: 2, scope: !13724, inlinedAt: !13742)
!13744 = !DILocation(line: 132, column: 3, scope: !13737)
!13745 = !DILocation(line: 137, column: 53, scope: !13633)
!13746 = !DILocation(line: 137, column: 38, scope: !13633)
!13747 = !DILocation(line: 138, column: 29, scope: !13633)
!13748 = !DILocation(line: 138, column: 10, scope: !13633)
!13749 = !DILocation(line: 137, column: 13, scope: !13633)
!13750 = !DILocation(line: 142, column: 6, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 142, column: 6)
!13752 = !DILocation(line: 142, column: 6, scope: !13633)
!13753 = !DILocation(line: 143, column: 13, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13751, file: !2320, line: 142, column: 59)
!13755 = !DILocation(line: 144, column: 2, scope: !13754)
!13756 = !DILocation(line: 146, column: 50, scope: !13633)
!13757 = !DILocation(line: 146, column: 18, scope: !13633)
!13758 = !DILocation(line: 153, column: 16, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 153, column: 6)
!13760 = !DILocation(line: 153, column: 6, scope: !13633)
!13761 = !DILocation(line: 0, scope: !13671, inlinedAt: !13762)
!13762 = distinct !DILocation(line: 162, column: 8, scope: !13633)
!13763 = !DILocation(line: 55, column: 2, scope: !13680, inlinedAt: !13764)
!13764 = distinct !DILocation(line: 145, column: 10, scope: !13671, inlinedAt: !13762)
!13765 = !DILocation(line: 0, scope: !13680, inlinedAt: !13764)
!13766 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13762)
!13767 = !DILocation(line: 148, column: 2, scope: !13689, inlinedAt: !13762)
!13768 = !DILocation(line: 148, column: 2, scope: !13692, inlinedAt: !13762)
!13769 = !DILocation(line: 160, column: 2, scope: !13671, inlinedAt: !13762)
!13770 = !DILocation(line: 168, column: 6, scope: !13653)
!13771 = !DILocation(line: 168, column: 6, scope: !13633)
!13772 = !DILocation(line: 169, column: 29, scope: !13652)
!13773 = !DILocation(line: 0, scope: !13652)
!13774 = !DILocation(line: 171, column: 22, scope: !13652)
!13775 = !DILocation(line: 171, column: 14, scope: !13652)
!13776 = !DILocation(line: 172, column: 42, scope: !13652)
!13777 = !DILocation(line: 172, column: 29, scope: !13652)
!13778 = !DILocation(line: 172, column: 55, scope: !13652)
!13779 = !DILocation(line: 172, column: 4, scope: !13652)
!13780 = !DILocation(line: 173, column: 11, scope: !13652)
!13781 = !DILocation(line: 177, column: 13, scope: !13652)
!13782 = !DILocation(line: 177, column: 48, scope: !13652)
!13783 = !DILocation(line: 180, column: 6, scope: !13633)
!13784 = !DILocation(line: 181, column: 3, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13786, file: !2320, line: 180, column: 15)
!13786 = distinct !DILexicalBlock(scope: !13633, file: !2320, line: 180, column: 6)
!13787 = !DILocation(line: 182, column: 2, scope: !13785)
!13788 = !DILocation(line: 0, scope: !13710, inlinedAt: !13789)
!13789 = distinct !DILocation(line: 183, column: 3, scope: !13790)
!13790 = distinct !DILexicalBlock(scope: !13786, file: !2320, line: 182, column: 9)
!13791 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13789)
!13792 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13789)
!13793 = !DILocation(line: 194, column: 2, scope: !13722, inlinedAt: !13789)
!13794 = !DILocation(line: 0, scope: !13724, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 215, column: 2, scope: !13710, inlinedAt: !13789)
!13796 = !DILocation(line: 95, column: 2, scope: !13724, inlinedAt: !13795)
!13797 = !DILocation(line: 189, column: 1, scope: !13633)
!13798 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2320, file: !2320, line: 72, type: !13799, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13801)
!13799 = !DISubroutineType(types: !13800)
!13800 = !{!765, !765, !765}
!13801 = !{!13802, !13803, !13804}
!13802 = !DILocalVariable(name: "target", arg: 1, scope: !13798, file: !2320, line: 72, type: !765)
!13803 = !DILocalVariable(name: "limit", arg: 2, scope: !13798, file: !2320, line: 72, type: !765)
!13804 = !DILocalVariable(name: "new_prio", scope: !13798, file: !2320, line: 74, type: !109)
!13805 = !DILocation(line: 0, scope: !13798)
!13806 = !DILocation(line: 74, column: 17, scope: !13798)
!13807 = !DILocation(line: 76, column: 13, scope: !13798)
!13808 = !DILocation(line: 78, column: 2, scope: !13798)
!13809 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12807, file: !12807, line: 211, type: !13810, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13812)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!347, !109, !109}
!13812 = !{!13813, !13814}
!13813 = !DILocalVariable(name: "prio", arg: 1, scope: !13809, file: !12807, line: 211, type: !109)
!13814 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13809, file: !12807, line: 211, type: !109)
!13815 = !DILocation(line: 0, scope: !13809)
!13816 = !DILocation(line: 213, column: 9, scope: !13809)
!13817 = !DILocation(line: 213, column: 2, scope: !13809)
!13818 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2320, file: !2320, line: 81, type: !13819, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13821)
!13819 = !DISubroutineType(types: !13820)
!13820 = !{!347, !13595, !765}
!13821 = !{!13822, !13823}
!13822 = !DILocalVariable(name: "mutex", arg: 1, scope: !13818, file: !2320, line: 81, type: !13595)
!13823 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13818, file: !2320, line: 81, type: !765)
!13824 = !DILocation(line: 0, scope: !13818)
!13825 = !DILocation(line: 83, column: 13, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13818, file: !2320, line: 83, column: 6)
!13827 = !DILocation(line: 83, column: 25, scope: !13826)
!13828 = !DILocation(line: 83, column: 6, scope: !13826)
!13829 = !DILocation(line: 83, column: 30, scope: !13826)
!13830 = !DILocation(line: 83, column: 6, scope: !13818)
!13831 = !DILocation(line: 90, column: 10, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13826, file: !2320, line: 83, column: 43)
!13833 = !DILocation(line: 90, column: 3, scope: !13832)
!13834 = !DILocation(line: 93, column: 1, scope: !13818)
!13835 = distinct !DISubprogram(name: "z_waitq_head", scope: !13168, file: !13168, line: 52, type: !13836, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{!2230, !2247}
!13838 = !{!13839}
!13839 = !DILocalVariable(name: "w", arg: 1, scope: !13835, file: !13168, line: 52, type: !2247)
!13840 = !DILocation(line: 0, scope: !13835)
!13841 = !DILocation(line: 54, column: 52, scope: !13835)
!13842 = !DILocation(line: 54, column: 28, scope: !13835)
!13843 = !DILocation(line: 54, column: 9, scope: !13835)
!13844 = !DILocation(line: 54, column: 2, scope: !13835)
!13845 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13846, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13848)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{!2215, !13624}
!13848 = !{!13849}
!13849 = !DILocalVariable(name: "list", arg: 1, scope: !13845, file: !127, line: 294, type: !13624)
!13850 = !DILocation(line: 0, scope: !13845)
!13851 = !DILocation(line: 296, column: 9, scope: !13845)
!13852 = !DILocation(line: 296, column: 49, scope: !13845)
!13853 = !DILocation(line: 296, column: 2, scope: !13845)
!13854 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13855, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13857)
!13855 = !DISubroutineType(types: !13856)
!13856 = !{!347, !13624}
!13857 = !{!13858}
!13858 = !DILocalVariable(name: "list", arg: 1, scope: !13854, file: !127, line: 266, type: !13624)
!13859 = !DILocation(line: 0, scope: !13854)
!13860 = !DILocation(line: 268, column: 15, scope: !13854)
!13861 = !DILocation(line: 268, column: 20, scope: !13854)
!13862 = !DILocation(line: 268, column: 2, scope: !13854)
!13863 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12807, file: !12807, line: 206, type: !13810, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13864)
!13864 = !{!13865, !13866}
!13865 = !DILocalVariable(name: "prio1", arg: 1, scope: !13863, file: !12807, line: 206, type: !109)
!13866 = !DILocalVariable(name: "prio2", arg: 2, scope: !13863, file: !12807, line: 206, type: !109)
!13867 = !DILocation(line: 0, scope: !13863)
!13868 = !DILocation(line: 208, column: 15, scope: !13863)
!13869 = !DILocation(line: 208, column: 2, scope: !13863)
!13870 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12807, file: !12807, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13871)
!13871 = !{!13872}
!13872 = !DILocalVariable(name: "prio", arg: 1, scope: !13870, file: !12807, line: 186, type: !109)
!13873 = !DILocation(line: 0, scope: !13870)
!13874 = !DILocation(line: 188, column: 9, scope: !13870)
!13875 = !DILocation(line: 188, column: 2, scope: !13870)
!13876 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12807, file: !12807, line: 181, type: !13877, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13879)
!13877 = !DISubroutineType(types: !13878)
!13878 = !{!347, !109}
!13879 = !{!13880}
!13880 = !DILocalVariable(name: "prio", arg: 1, scope: !13876, file: !12807, line: 181, type: !109)
!13881 = !DILocation(line: 0, scope: !13876)
!13882 = !DILocation(line: 183, column: 14, scope: !13876)
!13883 = !DILocation(line: 183, column: 2, scope: !13876)
!13884 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2320, file: !2320, line: 201, type: !13593, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13885)
!13885 = !{!13886, !13887, !13888, !13889}
!13886 = !DILocalVariable(name: "mutex", arg: 1, scope: !13884, file: !2320, line: 201, type: !13595)
!13887 = !DILocalVariable(name: "new_owner", scope: !13884, file: !2320, line: 203, type: !2230)
!13888 = !DILocalVariable(name: "key", scope: !13884, file: !2320, line: 242, type: !13645)
!13889 = !DILabel(scope: !13884, name: "k_mutex_unlock_return", file: !2320, line: 270)
!13890 = !DILocation(line: 0, scope: !13884)
!13891 = !DILocation(line: 1031, column: 3, scope: !13656, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 48, column: 10, scope: !13660, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 205, column: 2, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13895, file: !2320, line: 205, column: 2)
!13895 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 205, column: 2)
!13896 = !DILocation(line: 0, scope: !13656, inlinedAt: !13892)
!13897 = !DILocation(line: 48, column: 9, scope: !13660, inlinedAt: !13893)
!13898 = !DILocation(line: 205, column: 2, scope: !13895)
!13899 = !DILocation(line: 205, column: 2, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13894, file: !2320, line: 205, column: 2)
!13901 = !DILocation(line: 209, column: 2, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 209, column: 2)
!13903 = !DILocation(line: 209, column: 2, scope: !13884)
!13904 = !DILocation(line: 217, column: 2, scope: !13905)
!13905 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 217, column: 2)
!13906 = !DILocation(line: 217, column: 2, scope: !13884)
!13907 = !DILocation(line: 229, column: 2, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13909, file: !2320, line: 229, column: 2)
!13909 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 229, column: 2)
!13910 = !DILocation(line: 229, column: 2, scope: !13909)
!13911 = !DILocation(line: 229, column: 2, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13908, file: !2320, line: 229, column: 2)
!13913 = !DILocation(line: 238, column: 20, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !2320, line: 237, column: 30)
!13915 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 237, column: 6)
!13916 = !DILocation(line: 239, column: 3, scope: !13914)
!13917 = !DILocation(line: 0, scope: !13671, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 242, column: 25, scope: !13884)
!13919 = !DILocation(line: 55, column: 2, scope: !13680, inlinedAt: !13920)
!13920 = distinct !DILocation(line: 145, column: 10, scope: !13671, inlinedAt: !13918)
!13921 = !DILocation(line: 0, scope: !13680, inlinedAt: !13920)
!13922 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13918)
!13923 = !DILocation(line: 148, column: 2, scope: !13689, inlinedAt: !13918)
!13924 = !DILocation(line: 148, column: 2, scope: !13692, inlinedAt: !13918)
!13925 = !DILocation(line: 160, column: 2, scope: !13671, inlinedAt: !13918)
!13926 = !DILocation(line: 244, column: 34, scope: !13884)
!13927 = !DILocation(line: 244, column: 2, scope: !13884)
!13928 = !DILocation(line: 247, column: 44, scope: !13884)
!13929 = !DILocation(line: 247, column: 14, scope: !13884)
!13930 = !DILocation(line: 249, column: 15, scope: !13884)
!13931 = !DILocation(line: 254, column: 16, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13884, file: !2320, line: 254, column: 6)
!13933 = !DILocation(line: 254, column: 6, scope: !13884)
!13934 = !DILocation(line: 260, column: 44, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13932, file: !2320, line: 254, column: 25)
!13936 = !DILocation(line: 260, column: 28, scope: !13935)
!13937 = !DILocation(line: 260, column: 26, scope: !13935)
!13938 = !DILocalVariable(name: "thread", arg: 1, scope: !13939, file: !12827, line: 65, type: !2230)
!13939 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12827, file: !12827, line: 65, type: !13940, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !2230, !32}
!13942 = !{!13938, !13943}
!13943 = !DILocalVariable(name: "value", arg: 2, scope: !13939, file: !12827, line: 65, type: !32)
!13944 = !DILocation(line: 0, scope: !13939, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 261, column: 3, scope: !13935)
!13946 = !DILocation(line: 67, column: 15, scope: !13939, inlinedAt: !13945)
!13947 = !DILocation(line: 67, column: 33, scope: !13939, inlinedAt: !13945)
!13948 = !DILocation(line: 262, column: 3, scope: !13935)
!13949 = !DILocation(line: 263, column: 3, scope: !13935)
!13950 = !DILocation(line: 264, column: 2, scope: !13935)
!13951 = !DILocation(line: 265, column: 21, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13932, file: !2320, line: 264, column: 9)
!13953 = !DILocation(line: 0, scope: !13710, inlinedAt: !13954)
!13954 = distinct !DILocation(line: 266, column: 3, scope: !13952)
!13955 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13954)
!13956 = !DILocation(line: 194, column: 2, scope: !13719, inlinedAt: !13954)
!13957 = !DILocation(line: 194, column: 2, scope: !13722, inlinedAt: !13954)
!13958 = !DILocation(line: 0, scope: !13724, inlinedAt: !13959)
!13959 = distinct !DILocation(line: 215, column: 2, scope: !13710, inlinedAt: !13954)
!13960 = !DILocation(line: 95, column: 2, scope: !13724, inlinedAt: !13959)
!13961 = !DILocation(line: 274, column: 1, scope: !13884)
!13962 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2434, file: !2434, line: 93, type: !13963, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13965)
!13963 = !DISubroutineType(types: !13964)
!13964 = !{!765, !2326, !2326}
!13965 = !{!13966, !13967, !13968, !13969}
!13966 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13962, file: !2434, line: 93, type: !2326)
!13967 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13962, file: !2434, line: 94, type: !2326)
!13968 = !DILocalVariable(name: "b1", scope: !13962, file: !2434, line: 97, type: !765)
!13969 = !DILocalVariable(name: "b2", scope: !13962, file: !2434, line: 98, type: !765)
!13970 = !DILocation(line: 0, scope: !13962)
!13971 = !DILocation(line: 97, column: 30, scope: !13962)
!13972 = !DILocation(line: 98, column: 30, scope: !13962)
!13973 = !DILocation(line: 100, column: 9, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13962, file: !2434, line: 100, column: 6)
!13975 = !DILocation(line: 100, column: 6, scope: !13962)
!13976 = !DILocation(line: 125, column: 1, scope: !13962)
!13977 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2434, file: !2434, line: 428, type: !13978, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13980)
!13978 = !DISubroutineType(types: !13979)
!13979 = !{null, !2326}
!13980 = !{!13981}
!13981 = !DILocalVariable(name: "curr", arg: 1, scope: !13977, file: !2434, line: 428, type: !2326)
!13982 = !DILocation(line: 0, scope: !13977)
!13983 = !DILocation(line: 434, column: 6, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13977, file: !2434, line: 434, column: 6)
!13985 = !DILocation(line: 434, column: 23, scope: !13984)
!13986 = !DILocation(line: 434, column: 6, scope: !13977)
!13987 = !DILocation(line: 435, column: 50, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13984, file: !2434, line: 434, column: 29)
!13989 = !DILocation(line: 435, column: 48, scope: !13988)
!13990 = !DILocation(line: 435, column: 29, scope: !13988)
!13991 = !DILocation(line: 436, column: 24, scope: !13988)
!13992 = !DILocation(line: 436, column: 3, scope: !13988)
!13993 = !DILocation(line: 437, column: 2, scope: !13988)
!13994 = !DILocation(line: 438, column: 1, scope: !13977)
!13995 = distinct !DISubprogram(name: "slice_time", scope: !2434, file: !2434, line: 407, type: !13996, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !13998)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{!109, !2326}
!13998 = !{!13999, !14000}
!13999 = !DILocalVariable(name: "curr", arg: 1, scope: !13995, file: !2434, line: 407, type: !2326)
!14000 = !DILocalVariable(name: "ret", scope: !13995, file: !2434, line: 409, type: !109)
!14001 = !DILocation(line: 0, scope: !13995)
!14002 = !DILocation(line: 409, column: 12, scope: !13995)
!14003 = !DILocation(line: 416, column: 2, scope: !13995)
!14004 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2434, file: !2434, line: 440, type: !14005, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14007)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{null, !765, !109}
!14007 = !{!14008, !14009, !14010, !14016}
!14008 = !DILocalVariable(name: "slice", arg: 1, scope: !14004, file: !2434, line: 440, type: !765)
!14009 = !DILocalVariable(name: "prio", arg: 2, scope: !14004, file: !2434, line: 440, type: !109)
!14010 = !DILocalVariable(name: "__i", scope: !14011, file: !2434, line: 442, type: !14012)
!14011 = distinct !DILexicalBlock(scope: !14004, file: !2434, line: 442, column: 2)
!14012 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14013)
!14013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14014)
!14014 = !{!14015}
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14013, file: !253, line: 33, baseType: !109, size: 32)
!14016 = !DILocalVariable(name: "__key", scope: !14011, file: !2434, line: 442, type: !14012)
!14017 = !DILocation(line: 0, scope: !14004)
!14018 = !DILocation(line: 0, scope: !14011)
!14019 = !DILocalVariable(name: "l", arg: 1, scope: !14020, file: !253, line: 136, type: !14023)
!14020 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14021, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14024)
!14021 = !DISubroutineType(types: !14022)
!14022 = !{!14012, !14023}
!14023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!14024 = !{!14019, !14025}
!14025 = !DILocalVariable(name: "k", scope: !14020, file: !253, line: 139, type: !14012)
!14026 = !DILocation(line: 0, scope: !14020, inlinedAt: !14027)
!14027 = distinct !DILocation(line: 442, column: 2, scope: !14011)
!14028 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14033)
!14029 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14030)
!14030 = !{!14031, !14032}
!14031 = !DILocalVariable(name: "key", scope: !14029, file: !6097, line: 44, type: !32)
!14032 = !DILocalVariable(name: "tmp", scope: !14029, file: !6097, line: 53, type: !32)
!14033 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14027)
!14034 = !{i64 2287034}
!14035 = !DILocation(line: 0, scope: !14029, inlinedAt: !14033)
!14036 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14027)
!14037 = distinct !DILexicalBlock(scope: !14038, file: !253, line: 148, column: 2)
!14038 = distinct !DILexicalBlock(scope: !14020, file: !253, line: 148, column: 2)
!14039 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14027)
!14040 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14027)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !253, line: 148, column: 2)
!14042 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14027)
!14043 = !DILocation(line: 443, column: 29, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !2434, line: 442, column: 26)
!14045 = distinct !DILexicalBlock(scope: !14011, file: !2434, line: 442, column: 2)
!14046 = !DILocation(line: 444, column: 17, scope: !14044)
!14047 = !DILocation(line: 445, column: 51, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14044, file: !2434, line: 445, column: 7)
!14049 = !DILocation(line: 445, column: 7, scope: !14044)
!14050 = !DILocation(line: 0, scope: !14044)
!14051 = !DILocation(line: 451, column: 18, scope: !14044)
!14052 = !DILocation(line: 452, column: 3, scope: !14044)
!14053 = !DILocalVariable(name: "key", arg: 2, scope: !14054, file: !253, line: 190, type: !14012)
!14054 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14055, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{null, !14023, !14012}
!14057 = !{!14058, !14053}
!14058 = !DILocalVariable(name: "l", arg: 1, scope: !14054, file: !253, line: 189, type: !14023)
!14059 = !DILocation(line: 0, scope: !14054, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 442, column: 2, scope: !14045)
!14061 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14060)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !253, line: 194, column: 2)
!14063 = distinct !DILexicalBlock(scope: !14054, file: !253, line: 194, column: 2)
!14064 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14060)
!14065 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14060)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !253, line: 194, column: 2)
!14067 = !DILocalVariable(name: "key", arg: 1, scope: !14068, file: !6097, line: 84, type: !32)
!14068 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14069)
!14069 = !{!14067}
!14070 = !DILocation(line: 0, scope: !14068, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14060)
!14072 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14071)
!14073 = !{i64 2287851}
!14074 = !DILocation(line: 454, column: 1, scope: !14004)
!14075 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13426, file: !13426, line: 389, type: !7705, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14076)
!14076 = !{!14077}
!14077 = !DILocalVariable(name: "t", arg: 1, scope: !14075, file: !13426, line: 389, type: !110)
!14078 = !DILocation(line: 0, scope: !14075)
!14079 = !DILocalVariable(name: "t", arg: 1, scope: !14080, file: !13426, line: 102, type: !111)
!14080 = distinct !DISubprogram(name: "z_tmcvt", scope: !13426, file: !13426, line: 102, type: !13434, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14081)
!14081 = !{!14079, !14082, !14083, !14084, !14085, !14086, !14087, !14088, !14089, !14090, !14091}
!14082 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14080, file: !13426, line: 102, type: !110)
!14083 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14080, file: !13426, line: 103, type: !110)
!14084 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14080, file: !13426, line: 103, type: !347)
!14085 = !DILocalVariable(name: "result32", arg: 5, scope: !14080, file: !13426, line: 104, type: !347)
!14086 = !DILocalVariable(name: "round_up", arg: 6, scope: !14080, file: !13426, line: 104, type: !347)
!14087 = !DILocalVariable(name: "round_off", arg: 7, scope: !14080, file: !13426, line: 105, type: !347)
!14088 = !DILocalVariable(name: "mul_ratio", scope: !14080, file: !13426, line: 107, type: !347)
!14089 = !DILocalVariable(name: "div_ratio", scope: !14080, file: !13426, line: 109, type: !347)
!14090 = !DILocalVariable(name: "off", scope: !14080, file: !13426, line: 116, type: !111)
!14091 = !DILocalVariable(name: "rdivisor", scope: !14092, file: !13426, line: 119, type: !110)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !13426, line: 118, column: 18)
!14093 = distinct !DILexicalBlock(scope: !14080, file: !13426, line: 118, column: 6)
!14094 = !DILocation(line: 0, scope: !14080, inlinedAt: !14095)
!14095 = distinct !DILocation(line: 392, column: 9, scope: !14075)
!14096 = !DILocation(line: 143, column: 25, scope: !14097, inlinedAt: !14095)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !13426, line: 142, column: 17)
!14098 = distinct !DILexicalBlock(scope: !14099, file: !13426, line: 142, column: 7)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !13426, line: 141, column: 24)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !13426, line: 141, column: 13)
!14101 = distinct !DILexicalBlock(scope: !14080, file: !13426, line: 134, column: 6)
!14102 = !DILocation(line: 392, column: 2, scope: !14075)
!14103 = distinct !DISubprogram(name: "z_time_slice", scope: !2434, file: !2434, line: 502, type: !8358, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14104)
!14104 = !{!14105, !14106}
!14105 = !DILocalVariable(name: "ticks", arg: 1, scope: !14103, file: !2434, line: 502, type: !109)
!14106 = !DILocalVariable(name: "key", scope: !14103, file: !2434, line: 511, type: !14012)
!14107 = !DILocation(line: 0, scope: !14103)
!14108 = !DILocation(line: 0, scope: !14020, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 511, column: 25, scope: !14103)
!14110 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14109)
!14112 = !DILocation(line: 0, scope: !14029, inlinedAt: !14111)
!14113 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14109)
!14114 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14109)
!14115 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14109)
!14116 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14109)
!14117 = !DILocation(line: 514, column: 6, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14103, file: !2434, line: 514, column: 6)
!14119 = !DILocation(line: 514, column: 25, scope: !14118)
!14120 = !DILocation(line: 514, column: 22, scope: !14118)
!14121 = !DILocation(line: 514, column: 6, scope: !14103)
!14122 = !DILocation(line: 515, column: 3, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14118, file: !2434, line: 514, column: 35)
!14124 = !DILocation(line: 0, scope: !14054, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 516, column: 3, scope: !14123)
!14126 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14125)
!14127 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14125)
!14128 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14125)
!14129 = !DILocation(line: 0, scope: !14068, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14125)
!14131 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14130)
!14132 = !DILocation(line: 517, column: 3, scope: !14123)
!14133 = !DILocation(line: 519, column: 18, scope: !14103)
!14134 = !DILocation(line: 522, column: 6, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14103, file: !2434, line: 522, column: 6)
!14136 = !DILocation(line: 522, column: 27, scope: !14135)
!14137 = !DILocation(line: 522, column: 30, scope: !14135)
!14138 = !DILocation(line: 522, column: 6, scope: !14103)
!14139 = !DILocation(line: 523, column: 30, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14141, file: !2434, line: 523, column: 7)
!14141 = distinct !DILexicalBlock(scope: !14135, file: !2434, line: 522, column: 51)
!14142 = !DILocation(line: 523, column: 13, scope: !14140)
!14143 = !DILocation(line: 523, column: 7, scope: !14141)
!14144 = !DILocation(line: 530, column: 10, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14140, file: !2434, line: 523, column: 43)
!14146 = !DILocation(line: 531, column: 3, scope: !14145)
!14147 = !DILocation(line: 532, column: 30, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14140, file: !2434, line: 531, column: 10)
!14149 = !DILocation(line: 535, column: 29, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14135, file: !2434, line: 534, column: 9)
!14151 = !DILocation(line: 0, scope: !14054, inlinedAt: !14152)
!14152 = distinct !DILocation(line: 537, column: 2, scope: !14103)
!14153 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14152)
!14154 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14152)
!14155 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14152)
!14156 = !DILocation(line: 0, scope: !14068, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14152)
!14158 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14157)
!14159 = !DILocation(line: 538, column: 1, scope: !14103)
!14160 = distinct !DISubprogram(name: "sliceable", scope: !2434, file: !2434, line: 468, type: !14161, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14163)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!347, !2326}
!14163 = !{!14164, !14165}
!14164 = !DILocalVariable(name: "thread", arg: 1, scope: !14160, file: !2434, line: 468, type: !2326)
!14165 = !DILocalVariable(name: "ret", scope: !14160, file: !2434, line: 470, type: !347)
!14166 = !DILocation(line: 0, scope: !14160)
!14167 = !DILocation(line: 470, column: 13, scope: !14160)
!14168 = !DILocation(line: 471, column: 3, scope: !14160)
!14169 = !DILocation(line: 471, column: 7, scope: !14160)
!14170 = !DILocation(line: 472, column: 3, scope: !14160)
!14171 = !DILocation(line: 472, column: 37, scope: !14160)
!14172 = !DILocation(line: 472, column: 24, scope: !14160)
!14173 = !DILocation(line: 472, column: 43, scope: !14160)
!14174 = !DILocation(line: 472, column: 7, scope: !14160)
!14175 = !DILocation(line: 473, column: 3, scope: !14160)
!14176 = !DILocation(line: 473, column: 7, scope: !14160)
!14177 = !DILocation(line: 473, column: 6, scope: !14160)
!14178 = !DILocation(line: 479, column: 2, scope: !14160)
!14179 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2434, file: !2434, line: 482, type: !14180, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14182)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!14012, !14012}
!14182 = !{!14183, !14184}
!14183 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14179, file: !2434, line: 482, type: !14012)
!14184 = !DILocalVariable(name: "curr", scope: !14179, file: !2434, line: 484, type: !2326)
!14185 = !DILocation(line: 0, scope: !14179)
!14186 = !DILocation(line: 484, column: 26, scope: !14179)
!14187 = !DILocation(line: 493, column: 7, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !14179, file: !2434, line: 493, column: 6)
!14189 = !DILocation(line: 493, column: 6, scope: !14179)
!14190 = !DILocation(line: 494, column: 3, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14188, file: !2434, line: 493, column: 49)
!14192 = !DILocation(line: 495, column: 2, scope: !14191)
!14193 = !DILocation(line: 496, column: 2, scope: !14179)
!14194 = !DILocation(line: 499, column: 1, scope: !14179)
!14195 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12807, file: !12807, line: 106, type: !14161, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14196)
!14196 = !{!14197, !14198}
!14197 = !DILocalVariable(name: "thread", arg: 1, scope: !14195, file: !12807, line: 106, type: !2326)
!14198 = !DILocalVariable(name: "state", scope: !14195, file: !12807, line: 108, type: !180)
!14199 = !DILocation(line: 0, scope: !14195)
!14200 = !DILocation(line: 108, column: 31, scope: !14195)
!14201 = !DILocation(line: 110, column: 16, scope: !14195)
!14202 = !DILocation(line: 111, column: 41, scope: !14195)
!14203 = !DILocation(line: 110, column: 2, scope: !14195)
!14204 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 393, type: !13978, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14205)
!14205 = !{!14206}
!14206 = !DILocalVariable(name: "thread", arg: 1, scope: !14204, file: !2434, line: 393, type: !2326)
!14207 = !DILocation(line: 0, scope: !14204)
!14208 = !DILocation(line: 395, column: 6, scope: !14209)
!14209 = distinct !DILexicalBlock(scope: !14204, file: !2434, line: 395, column: 6)
!14210 = !DILocation(line: 395, column: 6, scope: !14204)
!14211 = !DILocalVariable(name: "thread", arg: 1, scope: !14212, file: !2434, line: 264, type: !2326)
!14212 = distinct !DISubprogram(name: "dequeue_thread", scope: !2434, file: !2434, line: 264, type: !13978, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14213)
!14213 = !{!14211}
!14214 = !DILocation(line: 0, scope: !14212, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 396, column: 3, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14209, file: !2434, line: 395, column: 34)
!14217 = !DILocation(line: 266, column: 15, scope: !14212, inlinedAt: !14215)
!14218 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !14215)
!14219 = !DILocalVariable(name: "thread", arg: 1, scope: !14220, file: !2434, line: 232, type: !2326)
!14220 = distinct !DISubprogram(name: "runq_remove", scope: !2434, file: !2434, line: 232, type: !13978, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14221)
!14221 = !{!14219}
!14222 = !DILocation(line: 0, scope: !14220, inlinedAt: !14223)
!14223 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !14215)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !2434, line: 267, column: 35)
!14225 = distinct !DILexicalBlock(scope: !14212, file: !2434, line: 267, column: 6)
!14226 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !14223)
!14227 = !DILocation(line: 397, column: 2, scope: !14216)
!14228 = !DILocalVariable(name: "thread", arg: 1, scope: !14229, file: !2434, line: 250, type: !2326)
!14229 = distinct !DISubprogram(name: "queue_thread", scope: !2434, file: !2434, line: 250, type: !13978, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14230)
!14230 = !{!14228}
!14231 = !DILocation(line: 0, scope: !14229, inlinedAt: !14232)
!14232 = distinct !DILocation(line: 398, column: 2, scope: !14204)
!14233 = !DILocation(line: 252, column: 15, scope: !14229, inlinedAt: !14232)
!14234 = !DILocation(line: 252, column: 28, scope: !14229, inlinedAt: !14232)
!14235 = !DILocalVariable(name: "thread", arg: 1, scope: !14236, file: !2434, line: 227, type: !2326)
!14236 = distinct !DISubprogram(name: "runq_add", scope: !2434, file: !2434, line: 227, type: !13978, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14237)
!14237 = !{!14235}
!14238 = !DILocation(line: 0, scope: !14236, inlinedAt: !14239)
!14239 = distinct !DILocation(line: 254, column: 3, scope: !14240, inlinedAt: !14232)
!14240 = distinct !DILexicalBlock(scope: !14241, file: !2434, line: 253, column: 35)
!14241 = distinct !DILexicalBlock(scope: !14229, file: !2434, line: 253, column: 6)
!14242 = !DILocalVariable(name: "pq", arg: 1, scope: !14243, file: !2434, line: 181, type: !14246)
!14243 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2434, file: !2434, line: 181, type: !14244, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14247)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{null, !14246, !2326}
!14246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 32)
!14247 = !{!14242, !14248, !14249}
!14248 = !DILocalVariable(name: "thread", arg: 2, scope: !14243, file: !2434, line: 182, type: !2326)
!14249 = !DILocalVariable(name: "t", scope: !14243, file: !2434, line: 184, type: !2326)
!14250 = !DILocation(line: 0, scope: !14243, inlinedAt: !14251)
!14251 = distinct !DILocation(line: 229, column: 2, scope: !14236, inlinedAt: !14239)
!14252 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14251)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !2434, line: 186, column: 2)
!14254 = distinct !DILexicalBlock(scope: !14243, file: !2434, line: 186, column: 2)
!14255 = !DILocation(line: 186, column: 2, scope: !14254, inlinedAt: !14251)
!14256 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14251)
!14257 = distinct !DILexicalBlock(scope: !14253, file: !2434, line: 186, column: 2)
!14258 = !DILocation(line: 188, column: 2, scope: !14259, inlinedAt: !14251)
!14259 = distinct !DILexicalBlock(scope: !14243, file: !2434, line: 188, column: 2)
!14260 = !DILocation(line: 188, column: 2, scope: !14261, inlinedAt: !14251)
!14261 = distinct !DILexicalBlock(scope: !14259, file: !2434, line: 188, column: 2)
!14262 = !DILocation(line: 0, scope: !14259, inlinedAt: !14251)
!14263 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14251)
!14264 = distinct !DILexicalBlock(scope: !14265, file: !2434, line: 189, column: 7)
!14265 = distinct !DILexicalBlock(scope: !14261, file: !2434, line: 188, column: 56)
!14266 = !DILocation(line: 189, column: 35, scope: !14264, inlinedAt: !14251)
!14267 = !DILocation(line: 189, column: 7, scope: !14265, inlinedAt: !14251)
!14268 = !DILocation(line: 191, column: 21, scope: !14269, inlinedAt: !14251)
!14269 = distinct !DILexicalBlock(scope: !14264, file: !2434, line: 189, column: 40)
!14270 = !DILocation(line: 190, column: 4, scope: !14269, inlinedAt: !14251)
!14271 = !DILocation(line: 192, column: 4, scope: !14269, inlinedAt: !14251)
!14272 = distinct !{!14272, !14258, !14273}
!14273 = !DILocation(line: 194, column: 2, scope: !14259, inlinedAt: !14251)
!14274 = !DILocation(line: 196, column: 37, scope: !14243, inlinedAt: !14251)
!14275 = !DILocation(line: 196, column: 2, scope: !14243, inlinedAt: !14251)
!14276 = !DILocation(line: 197, column: 1, scope: !14243, inlinedAt: !14251)
!14277 = !DILocation(line: 399, column: 25, scope: !14204)
!14278 = !DILocation(line: 399, column: 22, scope: !14204)
!14279 = !DILocation(line: 399, column: 2, scope: !14204)
!14280 = !DILocation(line: 400, column: 1, scope: !14204)
!14281 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12807, file: !12807, line: 136, type: !14161, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14282)
!14282 = !{!14283}
!14283 = !DILocalVariable(name: "thread", arg: 1, scope: !14281, file: !12807, line: 136, type: !2326)
!14284 = !DILocation(line: 0, scope: !14281)
!14285 = !DILocation(line: 138, column: 9, scope: !14281)
!14286 = !DILocation(line: 138, column: 2, scope: !14281)
!14287 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2434, file: !2434, line: 1137, type: !14244, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14288)
!14288 = !{!14289, !14290}
!14289 = !DILocalVariable(name: "pq", arg: 1, scope: !14287, file: !2434, line: 1137, type: !14246)
!14290 = !DILocalVariable(name: "thread", arg: 2, scope: !14287, file: !2434, line: 1137, type: !2326)
!14291 = !DILocation(line: 0, scope: !14287)
!14292 = !DILocation(line: 1139, column: 2, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14294, file: !2434, line: 1139, column: 2)
!14294 = distinct !DILexicalBlock(scope: !14287, file: !2434, line: 1139, column: 2)
!14295 = !DILocation(line: 1139, column: 2, scope: !14294)
!14296 = !DILocation(line: 1139, column: 2, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14293, file: !2434, line: 1139, column: 2)
!14298 = !DILocation(line: 1141, column: 33, scope: !14287)
!14299 = !DILocation(line: 1141, column: 2, scope: !14287)
!14300 = !DILocation(line: 1142, column: 1, scope: !14287)
!14301 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12807, file: !12807, line: 83, type: !14161, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14302)
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "thread", arg: 1, scope: !14301, file: !12807, line: 83, type: !2326)
!14304 = !DILocation(line: 0, scope: !14301)
!14305 = !DILocation(line: 89, column: 16, scope: !14301)
!14306 = !DILocation(line: 89, column: 2, scope: !14301)
!14307 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14308, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14310)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{!2430, !14246}
!14310 = !{!14311}
!14311 = !DILocalVariable(name: "list", arg: 1, scope: !14307, file: !127, line: 294, type: !14246)
!14312 = !DILocation(line: 0, scope: !14307)
!14313 = !DILocation(line: 296, column: 9, scope: !14307)
!14314 = !DILocation(line: 296, column: 49, scope: !14307)
!14315 = !DILocation(line: 296, column: 2, scope: !14307)
!14316 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14317, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14319)
!14317 = !DISubroutineType(types: !14318)
!14318 = !{null, !2430, !2430}
!14319 = !{!14320, !14321, !14322}
!14320 = !DILocalVariable(name: "successor", arg: 1, scope: !14316, file: !127, line: 443, type: !2430)
!14321 = !DILocalVariable(name: "node", arg: 2, scope: !14316, file: !127, line: 443, type: !2430)
!14322 = !DILocalVariable(name: "prev", scope: !14316, file: !127, line: 445, type: !14323)
!14323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!14324 = !DILocation(line: 0, scope: !14316)
!14325 = !DILocation(line: 445, column: 39, scope: !14316)
!14326 = !DILocation(line: 447, column: 8, scope: !14316)
!14327 = !DILocation(line: 447, column: 13, scope: !14316)
!14328 = !DILocation(line: 448, column: 8, scope: !14316)
!14329 = !DILocation(line: 448, column: 13, scope: !14316)
!14330 = !DILocation(line: 449, column: 8, scope: !14316)
!14331 = !DILocation(line: 449, column: 13, scope: !14316)
!14332 = !DILocation(line: 450, column: 18, scope: !14316)
!14333 = !DILocation(line: 451, column: 1, scope: !14316)
!14334 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14335, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14337)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!2430, !14246, !2430}
!14337 = !{!14338, !14339}
!14338 = !DILocalVariable(name: "list", arg: 1, scope: !14334, file: !127, line: 341, type: !14246)
!14339 = !DILocalVariable(name: "node", arg: 2, scope: !14334, file: !127, line: 342, type: !2430)
!14340 = !DILocation(line: 0, scope: !14334)
!14341 = !DILocation(line: 344, column: 15, scope: !14334)
!14342 = !DILocation(line: 344, column: 9, scope: !14334)
!14343 = !DILocation(line: 344, column: 26, scope: !14334)
!14344 = !DILocation(line: 344, column: 2, scope: !14334)
!14345 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14346, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14348)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{null, !14246, !2430}
!14348 = !{!14349, !14350, !14351}
!14349 = !DILocalVariable(name: "list", arg: 1, scope: !14345, file: !127, line: 404, type: !14246)
!14350 = !DILocalVariable(name: "node", arg: 2, scope: !14345, file: !127, line: 404, type: !2430)
!14351 = !DILocalVariable(name: "tail", scope: !14345, file: !127, line: 406, type: !14323)
!14352 = !DILocation(line: 0, scope: !14345)
!14353 = !DILocation(line: 406, column: 34, scope: !14345)
!14354 = !DILocation(line: 408, column: 8, scope: !14345)
!14355 = !DILocation(line: 408, column: 13, scope: !14345)
!14356 = !DILocation(line: 409, column: 8, scope: !14345)
!14357 = !DILocation(line: 409, column: 13, scope: !14345)
!14358 = !DILocation(line: 411, column: 8, scope: !14345)
!14359 = !DILocation(line: 411, column: 13, scope: !14345)
!14360 = !DILocation(line: 412, column: 13, scope: !14345)
!14361 = !DILocation(line: 413, column: 1, scope: !14345)
!14362 = distinct !DISubprogram(name: "update_cache", scope: !2434, file: !2434, line: 559, type: !8358, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14363)
!14363 = !{!14364, !14365}
!14364 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14362, file: !2434, line: 559, type: !109)
!14365 = !DILocalVariable(name: "thread", scope: !14362, file: !2434, line: 562, type: !2326)
!14366 = !DILocation(line: 0, scope: !14362)
!14367 = !DILocation(line: 239, column: 9, scope: !14368, inlinedAt: !14371)
!14368 = distinct !DISubprogram(name: "runq_best", scope: !2434, file: !2434, line: 237, type: !14369, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!14369 = !DISubroutineType(types: !14370)
!14370 = !{!2326}
!14371 = distinct !DILocation(line: 314, column: 28, scope: !14372, inlinedAt: !14375)
!14372 = distinct !DISubprogram(name: "next_up", scope: !2434, file: !2434, line: 312, type: !14369, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14373)
!14373 = !{!14374}
!14374 = !DILocalVariable(name: "thread", scope: !14372, file: !2434, line: 314, type: !2326)
!14375 = distinct !DILocation(line: 562, column: 28, scope: !14362)
!14376 = !DILocation(line: 0, scope: !14372, inlinedAt: !14375)
!14377 = !DILocation(line: 340, column: 17, scope: !14372, inlinedAt: !14375)
!14378 = !DILocation(line: 340, column: 9, scope: !14372, inlinedAt: !14375)
!14379 = !DILocalVariable(name: "thread", arg: 1, scope: !14380, file: !2434, line: 127, type: !2326)
!14380 = distinct !DISubprogram(name: "should_preempt", scope: !2434, file: !2434, line: 127, type: !14381, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14383)
!14381 = !DISubroutineType(types: !14382)
!14382 = !{!347, !2326, !109}
!14383 = !{!14379, !14384}
!14384 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14380, file: !2434, line: 128, type: !109)
!14385 = !DILocation(line: 0, scope: !14380, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 564, column: 6, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14362, file: !2434, line: 564, column: 6)
!14388 = !DILocation(line: 133, column: 17, scope: !14389, inlinedAt: !14386)
!14389 = distinct !DILexicalBlock(scope: !14380, file: !2434, line: 133, column: 6)
!14390 = !DILocation(line: 0, scope: !14387)
!14391 = !DILocation(line: 133, column: 6, scope: !14380, inlinedAt: !14386)
!14392 = !DILocation(line: 137, column: 2, scope: !14393, inlinedAt: !14386)
!14393 = distinct !DILexicalBlock(scope: !14394, file: !2434, line: 137, column: 2)
!14394 = distinct !DILexicalBlock(scope: !14380, file: !2434, line: 137, column: 2)
!14395 = !DILocation(line: 137, column: 2, scope: !14394, inlinedAt: !14386)
!14396 = !DILocation(line: 137, column: 2, scope: !14397, inlinedAt: !14386)
!14397 = distinct !DILexicalBlock(scope: !14393, file: !2434, line: 137, column: 2)
!14398 = !DILocation(line: 140, column: 6, scope: !14399, inlinedAt: !14386)
!14399 = distinct !DILexicalBlock(scope: !14380, file: !2434, line: 140, column: 6)
!14400 = !DILocation(line: 140, column: 6, scope: !14380, inlinedAt: !14386)
!14401 = !DILocation(line: 150, column: 9, scope: !14402, inlinedAt: !14386)
!14402 = distinct !DILexicalBlock(scope: !14380, file: !2434, line: 149, column: 6)
!14403 = !DILocation(line: 149, column: 6, scope: !14380, inlinedAt: !14386)
!14404 = !DILocation(line: 157, column: 6, scope: !14405, inlinedAt: !14386)
!14405 = distinct !DILexicalBlock(scope: !14380, file: !2434, line: 157, column: 6)
!14406 = !DILocation(line: 564, column: 6, scope: !14362)
!14407 = !DILocation(line: 566, column: 14, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14409, file: !2434, line: 566, column: 7)
!14409 = distinct !DILexicalBlock(scope: !14387, file: !2434, line: 564, column: 42)
!14410 = !DILocation(line: 566, column: 7, scope: !14409)
!14411 = !DILocation(line: 567, column: 4, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14408, file: !2434, line: 566, column: 27)
!14413 = !DILocation(line: 568, column: 3, scope: !14412)
!14414 = !DILocation(line: 585, column: 1, scope: !14362)
!14415 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2434, file: !2434, line: 1144, type: !14416, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14418)
!14416 = !DISubroutineType(types: !14417)
!14417 = !{!2326, !14246}
!14418 = !{!14419, !14420, !14421}
!14419 = !DILocalVariable(name: "pq", arg: 1, scope: !14415, file: !2434, line: 1144, type: !14246)
!14420 = !DILocalVariable(name: "thread", scope: !14415, file: !2434, line: 1146, type: !2326)
!14421 = !DILocalVariable(name: "n", scope: !14415, file: !2434, line: 1147, type: !2430)
!14422 = !DILocation(line: 0, scope: !14415)
!14423 = !DILocation(line: 1147, column: 19, scope: !14415)
!14424 = !DILocation(line: 1152, column: 2, scope: !14415)
!14425 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12807, file: !12807, line: 115, type: !14161, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14426)
!14426 = !{!14427}
!14427 = !DILocalVariable(name: "thread", arg: 1, scope: !14425, file: !12807, line: 115, type: !2326)
!14428 = !DILocation(line: 0, scope: !14425)
!14429 = !DILocation(line: 117, column: 46, scope: !14425)
!14430 = !DILocation(line: 117, column: 10, scope: !14425)
!14431 = !DILocation(line: 117, column: 9, scope: !14425)
!14432 = !DILocation(line: 117, column: 2, scope: !14425)
!14433 = distinct !DISubprogram(name: "is_preempt", scope: !2434, file: !2434, line: 62, type: !13996, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14434)
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "thread", arg: 1, scope: !14433, file: !2434, line: 62, type: !2326)
!14436 = !DILocation(line: 0, scope: !14433)
!14437 = !DILocation(line: 65, column: 22, scope: !14433)
!14438 = !DILocation(line: 65, column: 30, scope: !14433)
!14439 = !DILocation(line: 65, column: 2, scope: !14433)
!14440 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13236, file: !13236, line: 35, type: !14441, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14445)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!347, !14443}
!14443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14444, size: 32)
!14444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!14445 = !{!14446}
!14446 = !DILocalVariable(name: "to", arg: 1, scope: !14440, file: !13236, line: 35, type: !14443)
!14447 = !DILocation(line: 0, scope: !14440)
!14448 = !DILocation(line: 37, column: 35, scope: !14440)
!14449 = !DILocation(line: 37, column: 10, scope: !14440)
!14450 = !DILocation(line: 37, column: 9, scope: !14440)
!14451 = !DILocation(line: 37, column: 2, scope: !14440)
!14452 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14453, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14457)
!14453 = !DISubroutineType(types: !14454)
!14454 = !{!347, !14455}
!14455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14456, size: 32)
!14456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!14457 = !{!14458}
!14458 = !DILocalVariable(name: "node", arg: 1, scope: !14452, file: !127, line: 225, type: !14455)
!14459 = !DILocation(line: 0, scope: !14452)
!14460 = !DILocation(line: 227, column: 15, scope: !14452)
!14461 = !DILocation(line: 227, column: 20, scope: !14452)
!14462 = !DILocation(line: 227, column: 2, scope: !14452)
!14463 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14335, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14464)
!14464 = !{!14465, !14466}
!14465 = !DILocalVariable(name: "list", arg: 1, scope: !14463, file: !127, line: 325, type: !14246)
!14466 = !DILocalVariable(name: "node", arg: 2, scope: !14463, file: !127, line: 326, type: !2430)
!14467 = !DILocation(line: 0, scope: !14463)
!14468 = !DILocation(line: 328, column: 24, scope: !14463)
!14469 = !DILocation(line: 328, column: 15, scope: !14463)
!14470 = !DILocation(line: 328, column: 9, scope: !14463)
!14471 = !DILocation(line: 328, column: 45, scope: !14463)
!14472 = !DILocation(line: 328, column: 2, scope: !14463)
!14473 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14474, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14476)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{!347, !14246}
!14476 = !{!14477}
!14477 = !DILocalVariable(name: "list", arg: 1, scope: !14473, file: !127, line: 266, type: !14246)
!14478 = !DILocation(line: 0, scope: !14473)
!14479 = !DILocation(line: 268, column: 15, scope: !14473)
!14480 = !DILocation(line: 268, column: 20, scope: !14473)
!14481 = !DILocation(line: 268, column: 2, scope: !14473)
!14482 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14483, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14485)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{null, !2430}
!14485 = !{!14486, !14487, !14488}
!14486 = !DILocalVariable(name: "node", arg: 1, scope: !14482, file: !127, line: 496, type: !2430)
!14487 = !DILocalVariable(name: "prev", scope: !14482, file: !127, line: 498, type: !14323)
!14488 = !DILocalVariable(name: "next", scope: !14482, file: !127, line: 499, type: !14323)
!14489 = !DILocation(line: 0, scope: !14482)
!14490 = !DILocation(line: 498, column: 34, scope: !14482)
!14491 = !DILocation(line: 499, column: 34, scope: !14482)
!14492 = !DILocation(line: 501, column: 8, scope: !14482)
!14493 = !DILocation(line: 501, column: 13, scope: !14482)
!14494 = !DILocation(line: 502, column: 8, scope: !14482)
!14495 = !DILocation(line: 502, column: 13, scope: !14482)
!14496 = !DILocation(line: 503, column: 2, scope: !14482)
!14497 = !DILocation(line: 504, column: 1, scope: !14482)
!14498 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14483, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14499)
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "node", arg: 1, scope: !14498, file: !127, line: 211, type: !2430)
!14501 = !DILocation(line: 0, scope: !14498)
!14502 = !DILocation(line: 213, column: 8, scope: !14498)
!14503 = !DILocation(line: 213, column: 13, scope: !14498)
!14504 = !DILocation(line: 214, column: 8, scope: !14498)
!14505 = !DILocation(line: 214, column: 13, scope: !14498)
!14506 = !DILocation(line: 215, column: 1, scope: !14498)
!14507 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12807, file: !12807, line: 131, type: !14508, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14510)
!14508 = !DISubroutineType(types: !14509)
!14509 = !{!347, !2326, !110}
!14510 = !{!14511, !14512}
!14511 = !DILocalVariable(name: "thread", arg: 1, scope: !14507, file: !12807, line: 131, type: !2326)
!14512 = !DILocalVariable(name: "state", arg: 2, scope: !14507, file: !12807, line: 131, type: !110)
!14513 = !DILocation(line: 0, scope: !14507)
!14514 = !DILocation(line: 133, column: 23, scope: !14507)
!14515 = !DILocation(line: 133, column: 10, scope: !14507)
!14516 = !DILocation(line: 133, column: 36, scope: !14507)
!14517 = !DILocation(line: 133, column: 45, scope: !14507)
!14518 = !DILocation(line: 133, column: 2, scope: !14507)
!14519 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12807, file: !12807, line: 211, type: !13810, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14520)
!14520 = !{!14521, !14522}
!14521 = !DILocalVariable(name: "prio", arg: 1, scope: !14519, file: !12807, line: 211, type: !109)
!14522 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14519, file: !12807, line: 211, type: !109)
!14523 = !DILocation(line: 0, scope: !14519)
!14524 = !DILocation(line: 213, column: 9, scope: !14519)
!14525 = !DILocation(line: 213, column: 2, scope: !14519)
!14526 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12807, file: !12807, line: 206, type: !13810, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14527)
!14527 = !{!14528, !14529}
!14528 = !DILocalVariable(name: "prio1", arg: 1, scope: !14526, file: !12807, line: 206, type: !109)
!14529 = !DILocalVariable(name: "prio2", arg: 2, scope: !14526, file: !12807, line: 206, type: !109)
!14530 = !DILocation(line: 0, scope: !14526)
!14531 = !DILocation(line: 208, column: 15, scope: !14526)
!14532 = !DILocation(line: 208, column: 2, scope: !14526)
!14533 = distinct !DISubprogram(name: "z_ready_thread", scope: !2434, file: !2434, line: 635, type: !13978, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14534)
!14534 = !{!14535, !14536, !14538}
!14535 = !DILocalVariable(name: "thread", arg: 1, scope: !14533, file: !2434, line: 635, type: !2326)
!14536 = !DILocalVariable(name: "__i", scope: !14537, file: !2434, line: 637, type: !14012)
!14537 = distinct !DILexicalBlock(scope: !14533, file: !2434, line: 637, column: 2)
!14538 = !DILocalVariable(name: "__key", scope: !14537, file: !2434, line: 637, type: !14012)
!14539 = !DILocation(line: 0, scope: !14533)
!14540 = !DILocation(line: 0, scope: !14537)
!14541 = !DILocation(line: 0, scope: !14020, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 637, column: 2, scope: !14537)
!14543 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14542)
!14545 = !DILocation(line: 0, scope: !14029, inlinedAt: !14544)
!14546 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14542)
!14547 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14542)
!14548 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14542)
!14549 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14542)
!14550 = !DILocation(line: 639, column: 4, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !2434, line: 638, column: 41)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !2434, line: 638, column: 7)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !2434, line: 637, column: 26)
!14554 = distinct !DILexicalBlock(scope: !14537, file: !2434, line: 637, column: 2)
!14555 = !DILocation(line: 0, scope: !14054, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 637, column: 2, scope: !14554)
!14557 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14556)
!14558 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14556)
!14559 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14556)
!14560 = !DILocation(line: 0, scope: !14068, inlinedAt: !14561)
!14561 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14556)
!14562 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14561)
!14563 = !DILocation(line: 642, column: 1, scope: !14533)
!14564 = distinct !DISubprogram(name: "ready_thread", scope: !2434, file: !2434, line: 617, type: !13978, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14565)
!14565 = !{!14566}
!14566 = !DILocalVariable(name: "thread", arg: 1, scope: !14564, file: !2434, line: 617, type: !2326)
!14567 = !DILocation(line: 0, scope: !14564)
!14568 = !DILocation(line: 626, column: 7, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14564, file: !2434, line: 626, column: 6)
!14570 = !DILocation(line: 626, column: 34, scope: !14569)
!14571 = !DILocation(line: 626, column: 37, scope: !14569)
!14572 = !DILocation(line: 626, column: 6, scope: !14564)
!14573 = !DILocation(line: 0, scope: !14229, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 629, column: 3, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14569, file: !2434, line: 626, column: 64)
!14576 = !DILocation(line: 252, column: 15, scope: !14229, inlinedAt: !14574)
!14577 = !DILocation(line: 252, column: 28, scope: !14229, inlinedAt: !14574)
!14578 = !DILocation(line: 0, scope: !14236, inlinedAt: !14579)
!14579 = distinct !DILocation(line: 254, column: 3, scope: !14240, inlinedAt: !14574)
!14580 = !DILocation(line: 0, scope: !14243, inlinedAt: !14581)
!14581 = distinct !DILocation(line: 229, column: 2, scope: !14236, inlinedAt: !14579)
!14582 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14581)
!14583 = !DILocation(line: 186, column: 2, scope: !14254, inlinedAt: !14581)
!14584 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14581)
!14585 = !DILocation(line: 188, column: 2, scope: !14259, inlinedAt: !14581)
!14586 = !DILocation(line: 188, column: 2, scope: !14261, inlinedAt: !14581)
!14587 = !DILocation(line: 0, scope: !14259, inlinedAt: !14581)
!14588 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14581)
!14589 = !DILocation(line: 189, column: 35, scope: !14264, inlinedAt: !14581)
!14590 = !DILocation(line: 189, column: 7, scope: !14265, inlinedAt: !14581)
!14591 = !DILocation(line: 191, column: 21, scope: !14269, inlinedAt: !14581)
!14592 = !DILocation(line: 190, column: 4, scope: !14269, inlinedAt: !14581)
!14593 = !DILocation(line: 192, column: 4, scope: !14269, inlinedAt: !14581)
!14594 = distinct !{!14594, !14585, !14595}
!14595 = !DILocation(line: 194, column: 2, scope: !14259, inlinedAt: !14581)
!14596 = !DILocation(line: 196, column: 37, scope: !14243, inlinedAt: !14581)
!14597 = !DILocation(line: 196, column: 2, scope: !14243, inlinedAt: !14581)
!14598 = !DILocation(line: 197, column: 1, scope: !14243, inlinedAt: !14581)
!14599 = !DILocation(line: 630, column: 3, scope: !14575)
!14600 = !DILocation(line: 632, column: 2, scope: !14575)
!14601 = !DILocation(line: 633, column: 1, scope: !14564)
!14602 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12807, file: !12807, line: 120, type: !14161, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14603)
!14603 = !{!14604}
!14604 = !DILocalVariable(name: "thread", arg: 1, scope: !14602, file: !12807, line: 120, type: !2326)
!14605 = !DILocation(line: 0, scope: !14602)
!14606 = !DILocation(line: 122, column: 12, scope: !14602)
!14607 = !DILocation(line: 122, column: 62, scope: !14602)
!14608 = !DILocation(line: 123, column: 4, scope: !14602)
!14609 = !DILocation(line: 122, column: 2, scope: !14602)
!14610 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2434, file: !2434, line: 644, type: !13978, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14611)
!14611 = !{!14612, !14613, !14615}
!14612 = !DILocalVariable(name: "thread", arg: 1, scope: !14610, file: !2434, line: 644, type: !2326)
!14613 = !DILocalVariable(name: "__i", scope: !14614, file: !2434, line: 646, type: !14012)
!14614 = distinct !DILexicalBlock(scope: !14610, file: !2434, line: 646, column: 2)
!14615 = !DILocalVariable(name: "__key", scope: !14614, file: !2434, line: 646, type: !14012)
!14616 = !DILocation(line: 0, scope: !14610)
!14617 = !DILocation(line: 0, scope: !14614)
!14618 = !DILocation(line: 0, scope: !14020, inlinedAt: !14619)
!14619 = distinct !DILocation(line: 646, column: 2, scope: !14614)
!14620 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14619)
!14622 = !DILocation(line: 0, scope: !14029, inlinedAt: !14621)
!14623 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14619)
!14624 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14619)
!14625 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14619)
!14626 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14619)
!14627 = !DILocation(line: 647, column: 3, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14629, file: !2434, line: 646, column: 26)
!14629 = distinct !DILexicalBlock(scope: !14614, file: !2434, line: 646, column: 2)
!14630 = !DILocation(line: 0, scope: !14054, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 646, column: 2, scope: !14629)
!14632 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14631)
!14633 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14631)
!14634 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14631)
!14635 = !DILocation(line: 0, scope: !14068, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14631)
!14637 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14636)
!14638 = !DILocation(line: 649, column: 1, scope: !14610)
!14639 = distinct !DISubprogram(name: "z_sched_start", scope: !2434, file: !2434, line: 651, type: !13978, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14640)
!14640 = !{!14641, !14642}
!14641 = !DILocalVariable(name: "thread", arg: 1, scope: !14639, file: !2434, line: 651, type: !2326)
!14642 = !DILocalVariable(name: "key", scope: !14639, file: !2434, line: 653, type: !14012)
!14643 = !DILocation(line: 0, scope: !14639)
!14644 = !DILocation(line: 0, scope: !14020, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 653, column: 25, scope: !14639)
!14646 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14645)
!14648 = !DILocation(line: 0, scope: !14029, inlinedAt: !14647)
!14649 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14645)
!14650 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14645)
!14651 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14645)
!14652 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14645)
!14653 = !DILocation(line: 655, column: 6, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14639, file: !2434, line: 655, column: 6)
!14655 = !DILocation(line: 655, column: 6, scope: !14639)
!14656 = !DILocation(line: 0, scope: !14054, inlinedAt: !14657)
!14657 = distinct !DILocation(line: 656, column: 3, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !2434, line: 655, column: 36)
!14659 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14657)
!14660 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14657)
!14661 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14657)
!14662 = !DILocation(line: 0, scope: !14068, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14657)
!14664 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14663)
!14665 = !DILocation(line: 657, column: 3, scope: !14658)
!14666 = !DILocation(line: 660, column: 2, scope: !14639)
!14667 = !DILocation(line: 661, column: 2, scope: !14639)
!14668 = !DILocation(line: 662, column: 2, scope: !14639)
!14669 = !DILocation(line: 663, column: 1, scope: !14639)
!14670 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12807, file: !12807, line: 126, type: !14161, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14671)
!14671 = !{!14672}
!14672 = !DILocalVariable(name: "thread", arg: 1, scope: !14670, file: !12807, line: 126, type: !2326)
!14673 = !DILocation(line: 0, scope: !14670)
!14674 = !DILocation(line: 128, column: 23, scope: !14670)
!14675 = !DILocation(line: 128, column: 36, scope: !14670)
!14676 = !DILocation(line: 128, column: 56, scope: !14670)
!14677 = !DILocation(line: 128, column: 2, scope: !14670)
!14678 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12807, file: !12807, line: 155, type: !13978, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14679)
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !12807, line: 155, type: !2326)
!14681 = !DILocation(line: 0, scope: !14678)
!14682 = !DILocation(line: 157, column: 15, scope: !14678)
!14683 = !DILocation(line: 157, column: 28, scope: !14678)
!14684 = !DILocation(line: 158, column: 1, scope: !14678)
!14685 = distinct !DISubprogram(name: "z_reschedule", scope: !2434, file: !2434, line: 967, type: !14055, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14686)
!14686 = !{!14687, !14688}
!14687 = !DILocalVariable(name: "lock", arg: 1, scope: !14685, file: !2434, line: 967, type: !14023)
!14688 = !DILocalVariable(name: "key", arg: 2, scope: !14685, file: !2434, line: 967, type: !14012)
!14689 = !DILocation(line: 0, scope: !14685)
!14690 = !DILocation(line: 969, column: 6, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14685, file: !2434, line: 969, column: 6)
!14692 = !DILocation(line: 969, column: 23, scope: !14691)
!14693 = !DILocation(line: 969, column: 26, scope: !14691)
!14694 = !DILocation(line: 969, column: 6, scope: !14685)
!14695 = !DILocalVariable(name: "key", arg: 2, scope: !14696, file: !12911, line: 193, type: !14012)
!14696 = distinct !DISubprogram(name: "z_swap", scope: !12911, file: !12911, line: 193, type: !14697, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14699)
!14697 = !DISubroutineType(types: !14698)
!14698 = !{!109, !14023, !14012}
!14699 = !{!14700, !14695}
!14700 = !DILocalVariable(name: "lock", arg: 1, scope: !14696, file: !12911, line: 193, type: !14023)
!14701 = !DILocation(line: 0, scope: !14696, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 970, column: 3, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14691, file: !2434, line: 969, column: 39)
!14704 = !DILocalVariable(name: "l", arg: 1, scope: !14705, file: !253, line: 221, type: !14023)
!14705 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !14706, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14708)
!14706 = !DISubroutineType(types: !14707)
!14707 = !{null, !14023}
!14708 = !{!14704}
!14709 = !DILocation(line: 0, scope: !14705, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !14702)
!14711 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !14710)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !253, line: 225, column: 2)
!14713 = distinct !DILexicalBlock(scope: !14705, file: !253, line: 225, column: 2)
!14714 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !14710)
!14715 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !14710)
!14716 = distinct !DILexicalBlock(scope: !14712, file: !253, line: 225, column: 2)
!14717 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !14702)
!14718 = !DILocation(line: 971, column: 2, scope: !14703)
!14719 = !DILocation(line: 0, scope: !14054, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 972, column: 3, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14691, file: !2434, line: 971, column: 9)
!14722 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14720)
!14723 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14720)
!14724 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14720)
!14725 = !DILocation(line: 0, scope: !14068, inlinedAt: !14726)
!14726 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14720)
!14727 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14726)
!14728 = !DILocation(line: 975, column: 1, scope: !14685)
!14729 = distinct !DISubprogram(name: "resched", scope: !2434, file: !2434, line: 940, type: !14730, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14732)
!14730 = !DISubroutineType(types: !14731)
!14731 = !{!347, !110}
!14732 = !{!14733}
!14733 = !DILocalVariable(name: "key", arg: 1, scope: !14729, file: !2434, line: 940, type: !110)
!14734 = !DILocation(line: 0, scope: !14729)
!14735 = !DILocalVariable(name: "key", arg: 1, scope: !14736, file: !6097, line: 112, type: !32)
!14736 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6097, file: !6097, line: 112, type: !14737, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14739)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!347, !32}
!14739 = !{!14735}
!14740 = !DILocation(line: 0, scope: !14736, inlinedAt: !14741)
!14741 = distinct !DILocation(line: 946, column: 9, scope: !14729)
!14742 = !DILocation(line: 115, column: 13, scope: !14736, inlinedAt: !14741)
!14743 = !DILocation(line: 946, column: 32, scope: !14729)
!14744 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !14748)
!14745 = distinct !DISubprogram(name: "__get_IPSR", scope: !6418, file: !6418, line: 1027, type: !6505, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14746)
!14746 = !{!14747}
!14747 = !DILocalVariable(name: "result", scope: !14745, file: !6418, line: 1029, type: !110)
!14748 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !14750)
!14749 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7470, file: !7470, line: 46, type: !7471, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!14750 = distinct !DILocation(line: 946, column: 36, scope: !14729)
!14751 = !{i64 3541905}
!14752 = !DILocation(line: 0, scope: !14745, inlinedAt: !14748)
!14753 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !14750)
!14754 = !DILocation(line: 946, column: 2, scope: !14729)
!14755 = distinct !DISubprogram(name: "need_swap", scope: !2434, file: !2434, line: 953, type: !7471, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14756)
!14756 = !{!14757}
!14757 = !DILocalVariable(name: "new_thread", scope: !14755, file: !2434, line: 959, type: !2326)
!14758 = !DILocation(line: 962, column: 31, scope: !14755)
!14759 = !DILocation(line: 0, scope: !14755)
!14760 = !DILocation(line: 963, column: 23, scope: !14755)
!14761 = !DILocation(line: 963, column: 20, scope: !14755)
!14762 = !DILocation(line: 963, column: 2, scope: !14755)
!14763 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12911, file: !12911, line: 181, type: !6428, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14764)
!14764 = !{!14765, !14766}
!14765 = !DILocalVariable(name: "key", arg: 1, scope: !14763, file: !12911, line: 181, type: !32)
!14766 = !DILocalVariable(name: "ret", scope: !14763, file: !12911, line: 183, type: !109)
!14767 = !DILocation(line: 0, scope: !14763)
!14768 = !DILocation(line: 185, column: 8, scope: !14763)
!14769 = !DILocation(line: 186, column: 2, scope: !14763)
!14770 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2434, file: !2434, line: 665, type: !13978, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14771)
!14771 = !{!14772, !14773, !14775}
!14772 = !DILocalVariable(name: "thread", arg: 1, scope: !14770, file: !2434, line: 665, type: !2326)
!14773 = !DILocalVariable(name: "__i", scope: !14774, file: !2434, line: 671, type: !14012)
!14774 = distinct !DILexicalBlock(scope: !14770, file: !2434, line: 671, column: 2)
!14775 = !DILocalVariable(name: "__key", scope: !14774, file: !2434, line: 671, type: !14012)
!14776 = !DILocation(line: 0, scope: !14770)
!14777 = !DILocation(line: 669, column: 8, scope: !14770)
!14778 = !DILocation(line: 0, scope: !14774)
!14779 = !DILocation(line: 0, scope: !14020, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 671, column: 2, scope: !14774)
!14781 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14782)
!14782 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14780)
!14783 = !DILocation(line: 0, scope: !14029, inlinedAt: !14782)
!14784 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14780)
!14785 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14780)
!14786 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14780)
!14787 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14780)
!14788 = !DILocation(line: 672, column: 7, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !2434, line: 672, column: 7)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !2434, line: 671, column: 26)
!14791 = distinct !DILexicalBlock(scope: !14774, file: !2434, line: 671, column: 2)
!14792 = !DILocation(line: 672, column: 7, scope: !14790)
!14793 = !DILocation(line: 0, scope: !14212, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 673, column: 4, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14789, file: !2434, line: 672, column: 35)
!14796 = !DILocation(line: 266, column: 15, scope: !14212, inlinedAt: !14794)
!14797 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !14794)
!14798 = !DILocation(line: 0, scope: !14220, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !14794)
!14800 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !14799)
!14801 = !DILocation(line: 674, column: 3, scope: !14795)
!14802 = !DILocation(line: 675, column: 3, scope: !14790)
!14803 = !DILocation(line: 676, column: 26, scope: !14790)
!14804 = !DILocation(line: 676, column: 23, scope: !14790)
!14805 = !DILocation(line: 676, column: 3, scope: !14790)
!14806 = !DILocation(line: 0, scope: !14054, inlinedAt: !14807)
!14807 = distinct !DILocation(line: 671, column: 2, scope: !14791)
!14808 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14807)
!14809 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14807)
!14810 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14807)
!14811 = !DILocation(line: 0, scope: !14068, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14807)
!14813 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14812)
!14814 = !DILocation(line: 679, column: 16, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14770, file: !2434, line: 679, column: 6)
!14816 = !DILocation(line: 679, column: 13, scope: !14815)
!14817 = !DILocation(line: 679, column: 6, scope: !14770)
!14818 = !DILocation(line: 680, column: 3, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14815, file: !2434, line: 679, column: 26)
!14820 = !DILocation(line: 681, column: 2, scope: !14819)
!14821 = !DILocation(line: 684, column: 1, scope: !14770)
!14822 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13236, file: !13236, line: 52, type: !13996, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14823)
!14823 = !{!14824}
!14824 = !DILocalVariable(name: "thread", arg: 1, scope: !14822, file: !13236, line: 52, type: !2326)
!14825 = !DILocation(line: 0, scope: !14822)
!14826 = !DILocation(line: 54, column: 39, scope: !14822)
!14827 = !DILocation(line: 54, column: 9, scope: !14822)
!14828 = !DILocation(line: 54, column: 2, scope: !14822)
!14829 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12807, file: !12807, line: 141, type: !13978, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14830)
!14830 = !{!14831}
!14831 = !DILocalVariable(name: "thread", arg: 1, scope: !14829, file: !12807, line: 141, type: !2326)
!14832 = !DILocation(line: 0, scope: !14829)
!14833 = !DILocation(line: 143, column: 15, scope: !14829)
!14834 = !DILocation(line: 143, column: 28, scope: !14829)
!14835 = !DILocation(line: 146, column: 1, scope: !14829)
!14836 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12807, file: !12807, line: 73, type: !3087, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!14837 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14838)
!14838 = distinct !DILocation(line: 75, column: 30, scope: !14836)
!14839 = !DILocation(line: 0, scope: !14029, inlinedAt: !14838)
!14840 = !DILocation(line: 75, column: 9, scope: !14836)
!14841 = !DILocation(line: 76, column: 1, scope: !14836)
!14842 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2434, file: !2434, line: 977, type: !6515, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14843)
!14843 = !{!14844}
!14844 = !DILocalVariable(name: "key", arg: 1, scope: !14842, file: !2434, line: 977, type: !110)
!14845 = !DILocation(line: 0, scope: !14842)
!14846 = !DILocation(line: 979, column: 6, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14842, file: !2434, line: 979, column: 6)
!14848 = !DILocation(line: 979, column: 6, scope: !14842)
!14849 = !DILocation(line: 980, column: 3, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14847, file: !2434, line: 979, column: 20)
!14851 = !DILocation(line: 981, column: 2, scope: !14850)
!14852 = !DILocation(line: 0, scope: !14068, inlinedAt: !14853)
!14853 = distinct !DILocation(line: 982, column: 3, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14847, file: !2434, line: 981, column: 9)
!14855 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14853)
!14856 = !DILocation(line: 985, column: 1, scope: !14842)
!14857 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2434, file: !2434, line: 695, type: !13978, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14858)
!14858 = !{!14859, !14860}
!14859 = !DILocalVariable(name: "thread", arg: 1, scope: !14857, file: !2434, line: 695, type: !2326)
!14860 = !DILocalVariable(name: "key", scope: !14857, file: !2434, line: 699, type: !14012)
!14861 = !DILocation(line: 0, scope: !14857)
!14862 = !DILocation(line: 0, scope: !14020, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 699, column: 25, scope: !14857)
!14864 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14863)
!14866 = !DILocation(line: 0, scope: !14029, inlinedAt: !14865)
!14867 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14863)
!14868 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14863)
!14869 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14863)
!14870 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14863)
!14871 = !DILocation(line: 702, column: 7, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14857, file: !2434, line: 702, column: 6)
!14873 = !DILocation(line: 702, column: 6, scope: !14857)
!14874 = !DILocation(line: 0, scope: !14054, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 703, column: 3, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14872, file: !2434, line: 702, column: 38)
!14877 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14875)
!14878 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14875)
!14879 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14875)
!14880 = !DILocation(line: 0, scope: !14068, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14875)
!14882 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14881)
!14883 = !DILocation(line: 704, column: 3, scope: !14876)
!14884 = !DILocation(line: 707, column: 2, scope: !14857)
!14885 = !DILocation(line: 708, column: 2, scope: !14857)
!14886 = !DILocation(line: 710, column: 2, scope: !14857)
!14887 = !DILocation(line: 713, column: 1, scope: !14857)
!14888 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12807, file: !12807, line: 96, type: !14161, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14889)
!14889 = !{!14890}
!14890 = !DILocalVariable(name: "thread", arg: 1, scope: !14888, file: !12807, line: 96, type: !2326)
!14891 = !DILocation(line: 0, scope: !14888)
!14892 = !DILocation(line: 98, column: 23, scope: !14888)
!14893 = !DILocation(line: 98, column: 36, scope: !14888)
!14894 = !DILocation(line: 98, column: 57, scope: !14888)
!14895 = !DILocation(line: 98, column: 2, scope: !14888)
!14896 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12807, file: !12807, line: 148, type: !13978, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14897)
!14897 = !{!14898}
!14898 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !12807, line: 148, type: !2326)
!14899 = !DILocation(line: 0, scope: !14896)
!14900 = !DILocation(line: 150, column: 15, scope: !14896)
!14901 = !DILocation(line: 150, column: 28, scope: !14896)
!14902 = !DILocation(line: 153, column: 1, scope: !14896)
!14903 = distinct !DISubprogram(name: "z_pend_thread", scope: !2434, file: !2434, line: 770, type: !14904, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14910)
!14904 = !DISubroutineType(types: !14905)
!14905 = !{null, !2326, !2357, !14906}
!14906 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14907)
!14907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14908)
!14908 = !{!14909}
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14907, file: !104, line: 66, baseType: !103, size: 64)
!14910 = !{!14911, !14912, !14913, !14914, !14916}
!14911 = !DILocalVariable(name: "thread", arg: 1, scope: !14903, file: !2434, line: 770, type: !2326)
!14912 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14903, file: !2434, line: 770, type: !2357)
!14913 = !DILocalVariable(name: "timeout", arg: 3, scope: !14903, file: !2434, line: 771, type: !14906)
!14914 = !DILocalVariable(name: "__i", scope: !14915, file: !2434, line: 774, type: !14012)
!14915 = distinct !DILexicalBlock(scope: !14903, file: !2434, line: 774, column: 2)
!14916 = !DILocalVariable(name: "__key", scope: !14915, file: !2434, line: 774, type: !14012)
!14917 = !DILocation(line: 0, scope: !14903)
!14918 = !DILocation(line: 773, column: 2, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2434, line: 773, column: 2)
!14920 = distinct !DILexicalBlock(scope: !14903, file: !2434, line: 773, column: 2)
!14921 = !DILocation(line: 773, column: 2, scope: !14920)
!14922 = !DILocation(line: 773, column: 2, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14919, file: !2434, line: 773, column: 2)
!14924 = !DILocation(line: 0, scope: !14915)
!14925 = !DILocation(line: 0, scope: !14020, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 774, column: 2, scope: !14915)
!14927 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !14928)
!14928 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !14926)
!14929 = !DILocation(line: 0, scope: !14029, inlinedAt: !14928)
!14930 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14926)
!14931 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !14926)
!14932 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !14926)
!14933 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !14926)
!14934 = !DILocation(line: 775, column: 3, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14936, file: !2434, line: 774, column: 26)
!14936 = distinct !DILexicalBlock(scope: !14915, file: !2434, line: 774, column: 2)
!14937 = !DILocation(line: 0, scope: !14054, inlinedAt: !14938)
!14938 = distinct !DILocation(line: 774, column: 2, scope: !14936)
!14939 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14938)
!14940 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !14938)
!14941 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !14938)
!14942 = !DILocation(line: 0, scope: !14068, inlinedAt: !14943)
!14943 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !14938)
!14944 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !14943)
!14945 = !DILocation(line: 777, column: 1, scope: !14903)
!14946 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2434, file: !2434, line: 79, type: !14161, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14947)
!14947 = !{!14948}
!14948 = !DILocalVariable(name: "thread", arg: 1, scope: !14946, file: !2434, line: 79, type: !2326)
!14949 = !DILocation(line: 0, scope: !14946)
!14950 = !DILocation(line: 81, column: 23, scope: !14946)
!14951 = !DILocation(line: 81, column: 36, scope: !14946)
!14952 = !DILocation(line: 81, column: 53, scope: !14946)
!14953 = !DILocation(line: 81, column: 2, scope: !14946)
!14954 = distinct !DISubprogram(name: "pend_locked", scope: !2434, file: !2434, line: 760, type: !14904, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14955)
!14955 = !{!14956, !14957, !14958}
!14956 = !DILocalVariable(name: "thread", arg: 1, scope: !14954, file: !2434, line: 760, type: !2326)
!14957 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14954, file: !2434, line: 760, type: !2357)
!14958 = !DILocalVariable(name: "timeout", arg: 3, scope: !14954, file: !2434, line: 761, type: !14906)
!14959 = !DILocation(line: 0, scope: !14954)
!14960 = !DILocation(line: 766, column: 2, scope: !14954)
!14961 = !DILocation(line: 767, column: 2, scope: !14954)
!14962 = !DILocation(line: 768, column: 1, scope: !14954)
!14963 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2434, file: !2434, line: 740, type: !14964, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !14966)
!14964 = !DISubroutineType(types: !14965)
!14965 = !{null, !2326, !2357}
!14966 = !{!14967, !14968}
!14967 = !DILocalVariable(name: "thread", arg: 1, scope: !14963, file: !2434, line: 740, type: !2326)
!14968 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14963, file: !2434, line: 740, type: !2357)
!14969 = !DILocation(line: 0, scope: !14963)
!14970 = !DILocation(line: 742, column: 2, scope: !14963)
!14971 = !DILocation(line: 743, column: 2, scope: !14963)
!14972 = !DILocation(line: 747, column: 13, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14963, file: !2434, line: 747, column: 6)
!14974 = !DILocation(line: 747, column: 6, scope: !14963)
!14975 = !DILocation(line: 748, column: 16, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14973, file: !2434, line: 747, column: 22)
!14977 = !DILocation(line: 748, column: 26, scope: !14976)
!14978 = !DILocation(line: 749, column: 28, scope: !14976)
!14979 = !DILocation(line: 0, scope: !14243, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 749, column: 3, scope: !14976)
!14981 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14980)
!14982 = !DILocation(line: 186, column: 2, scope: !14254, inlinedAt: !14980)
!14983 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !14980)
!14984 = !DILocation(line: 188, column: 2, scope: !14259, inlinedAt: !14980)
!14985 = !DILocation(line: 188, column: 2, scope: !14261, inlinedAt: !14980)
!14986 = !DILocation(line: 0, scope: !14259, inlinedAt: !14980)
!14987 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14980)
!14988 = !DILocation(line: 189, column: 35, scope: !14264, inlinedAt: !14980)
!14989 = !DILocation(line: 189, column: 7, scope: !14265, inlinedAt: !14980)
!14990 = !DILocation(line: 191, column: 21, scope: !14269, inlinedAt: !14980)
!14991 = !DILocation(line: 190, column: 4, scope: !14269, inlinedAt: !14980)
!14992 = !DILocation(line: 192, column: 4, scope: !14269, inlinedAt: !14980)
!14993 = distinct !{!14993, !14984, !14994}
!14994 = !DILocation(line: 194, column: 2, scope: !14259, inlinedAt: !14980)
!14995 = !DILocation(line: 196, column: 37, scope: !14243, inlinedAt: !14980)
!14996 = !DILocation(line: 196, column: 2, scope: !14243, inlinedAt: !14980)
!14997 = !DILocation(line: 197, column: 1, scope: !14243, inlinedAt: !14980)
!14998 = !DILocation(line: 751, column: 1, scope: !14963)
!14999 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2434, file: !2434, line: 753, type: !15000, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15002)
!15000 = !DISubroutineType(types: !15001)
!15001 = !{null, !2326, !14906}
!15002 = !{!15003, !15004}
!15003 = !DILocalVariable(name: "thread", arg: 1, scope: !14999, file: !2434, line: 753, type: !2326)
!15004 = !DILocalVariable(name: "timeout", arg: 2, scope: !14999, file: !2434, line: 753, type: !14906)
!15005 = !DILocation(line: 0, scope: !14999)
!15006 = !DILocation(line: 755, column: 7, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14999, file: !2434, line: 755, column: 6)
!15008 = !DILocation(line: 755, column: 6, scope: !14999)
!15009 = !DILocation(line: 756, column: 3, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15007, file: !2434, line: 755, column: 41)
!15011 = !DILocation(line: 757, column: 2, scope: !15010)
!15012 = !DILocation(line: 758, column: 1, scope: !14999)
!15013 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13236, file: !13236, line: 47, type: !15000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15014)
!15014 = !{!15015, !15016}
!15015 = !DILocalVariable(name: "thread", arg: 1, scope: !15013, file: !13236, line: 47, type: !2326)
!15016 = !DILocalVariable(name: "ticks", arg: 2, scope: !15013, file: !13236, line: 47, type: !14906)
!15017 = !DILocation(line: 0, scope: !15013)
!15018 = !DILocation(line: 49, column: 30, scope: !15013)
!15019 = !DILocation(line: 49, column: 2, scope: !15013)
!15020 = !DILocation(line: 50, column: 1, scope: !15013)
!15021 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2434, file: !2434, line: 795, type: !2383, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15022)
!15022 = !{!15023, !15024, !15025, !15027, !15028}
!15023 = !DILocalVariable(name: "timeout", arg: 1, scope: !15021, file: !2434, line: 795, type: !2385)
!15024 = !DILocalVariable(name: "thread", scope: !15021, file: !2434, line: 797, type: !2326)
!15025 = !DILocalVariable(name: "__i", scope: !15026, file: !2434, line: 800, type: !14012)
!15026 = distinct !DILexicalBlock(scope: !15021, file: !2434, line: 800, column: 2)
!15027 = !DILocalVariable(name: "__key", scope: !15026, file: !2434, line: 800, type: !14012)
!15028 = !DILocalVariable(name: "killed", scope: !15029, file: !2434, line: 801, type: !347)
!15029 = distinct !DILexicalBlock(scope: !15030, file: !2434, line: 800, column: 26)
!15030 = distinct !DILexicalBlock(scope: !15026, file: !2434, line: 800, column: 2)
!15031 = !DILocation(line: 0, scope: !15021)
!15032 = !DILocation(line: 797, column: 28, scope: !15021)
!15033 = !DILocation(line: 0, scope: !15026)
!15034 = !DILocation(line: 0, scope: !14020, inlinedAt: !15035)
!15035 = distinct !DILocation(line: 800, column: 2, scope: !15026)
!15036 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15035)
!15038 = !DILocation(line: 0, scope: !14029, inlinedAt: !15037)
!15039 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15035)
!15040 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15035)
!15041 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15035)
!15042 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15035)
!15043 = !DILocation(line: 801, column: 27, scope: !15029)
!15044 = !DILocation(line: 801, column: 32, scope: !15029)
!15045 = !DILocation(line: 801, column: 61, scope: !15029)
!15046 = !DILocation(line: 0, scope: !15029)
!15047 = !DILocation(line: 804, column: 7, scope: !15029)
!15048 = !DILocation(line: 805, column: 21, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15050, file: !2434, line: 805, column: 8)
!15050 = distinct !DILexicalBlock(scope: !15051, file: !2434, line: 804, column: 16)
!15051 = distinct !DILexicalBlock(scope: !15029, file: !2434, line: 804, column: 7)
!15052 = !DILocation(line: 805, column: 31, scope: !15049)
!15053 = !DILocation(line: 805, column: 8, scope: !15050)
!15054 = !DILocation(line: 806, column: 5, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15049, file: !2434, line: 805, column: 40)
!15056 = !DILocation(line: 807, column: 4, scope: !15055)
!15057 = !DILocation(line: 808, column: 4, scope: !15050)
!15058 = !DILocation(line: 809, column: 4, scope: !15050)
!15059 = !DILocation(line: 810, column: 4, scope: !15050)
!15060 = !DILocation(line: 811, column: 3, scope: !15050)
!15061 = !DILocation(line: 0, scope: !14054, inlinedAt: !15062)
!15062 = distinct !DILocation(line: 800, column: 2, scope: !15030)
!15063 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15062)
!15064 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15062)
!15065 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15062)
!15066 = !DILocation(line: 0, scope: !14068, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15062)
!15068 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15067)
!15069 = !DILocation(line: 813, column: 1, scope: !15021)
!15070 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2434, file: !2434, line: 779, type: !13978, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15071)
!15071 = !{!15072}
!15072 = !DILocalVariable(name: "thread", arg: 1, scope: !15070, file: !2434, line: 779, type: !2326)
!15073 = !DILocation(line: 0, scope: !15070)
!15074 = !DILocation(line: 781, column: 21, scope: !15070)
!15075 = !DILocation(line: 781, column: 2, scope: !15070)
!15076 = !DILocation(line: 782, column: 2, scope: !15070)
!15077 = !DILocation(line: 783, column: 15, scope: !15070)
!15078 = !DILocation(line: 783, column: 25, scope: !15070)
!15079 = !DILocation(line: 784, column: 1, scope: !15070)
!15080 = distinct !DISubprogram(name: "pended_on_thread", scope: !2434, file: !2434, line: 724, type: !15081, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15083)
!15081 = !DISubroutineType(types: !15082)
!15082 = !{!2357, !2326}
!15083 = !{!15084}
!15084 = !DILocalVariable(name: "thread", arg: 1, scope: !15080, file: !2434, line: 724, type: !2326)
!15085 = !DILocation(line: 0, scope: !15080)
!15086 = !DILocation(line: 726, column: 2, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15088, file: !2434, line: 726, column: 2)
!15088 = distinct !DILexicalBlock(scope: !15080, file: !2434, line: 726, column: 2)
!15089 = !DILocation(line: 726, column: 2, scope: !15088)
!15090 = !DILocation(line: 726, column: 2, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15087, file: !2434, line: 726, column: 2)
!15092 = !DILocation(line: 728, column: 2, scope: !15080)
!15093 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12807, file: !12807, line: 165, type: !13978, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15094)
!15094 = !{!15095}
!15095 = !DILocalVariable(name: "thread", arg: 1, scope: !15093, file: !12807, line: 165, type: !2326)
!15096 = !DILocation(line: 0, scope: !15093)
!15097 = !DILocation(line: 167, column: 15, scope: !15093)
!15098 = !DILocation(line: 167, column: 28, scope: !15093)
!15099 = !DILocation(line: 168, column: 1, scope: !15093)
!15100 = distinct !DISubprogram(name: "unready_thread", scope: !2434, file: !2434, line: 731, type: !13978, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15101)
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15100, file: !2434, line: 731, type: !2326)
!15103 = !DILocation(line: 0, scope: !15100)
!15104 = !DILocation(line: 733, column: 6, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15100, file: !2434, line: 733, column: 6)
!15106 = !DILocation(line: 733, column: 6, scope: !15100)
!15107 = !DILocation(line: 0, scope: !14212, inlinedAt: !15108)
!15108 = distinct !DILocation(line: 734, column: 3, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15105, file: !2434, line: 733, column: 34)
!15110 = !DILocation(line: 266, column: 15, scope: !14212, inlinedAt: !15108)
!15111 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !15108)
!15112 = !DILocation(line: 0, scope: !14220, inlinedAt: !15113)
!15113 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !15108)
!15114 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !15113)
!15115 = !DILocation(line: 735, column: 2, scope: !15109)
!15116 = !DILocation(line: 736, column: 25, scope: !15100)
!15117 = !DILocation(line: 736, column: 22, scope: !15100)
!15118 = !DILocation(line: 736, column: 2, scope: !15100)
!15119 = !DILocation(line: 737, column: 1, scope: !15100)
!15120 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12807, file: !12807, line: 160, type: !13978, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15121)
!15121 = !{!15122}
!15122 = !DILocalVariable(name: "thread", arg: 1, scope: !15120, file: !12807, line: 160, type: !2326)
!15123 = !DILocation(line: 0, scope: !15120)
!15124 = !DILocation(line: 162, column: 15, scope: !15120)
!15125 = !DILocation(line: 162, column: 28, scope: !15120)
!15126 = !DILocation(line: 163, column: 1, scope: !15120)
!15127 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2434, file: !2434, line: 786, type: !13978, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15128)
!15128 = !{!15129, !15130, !15132}
!15129 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !2434, line: 786, type: !2326)
!15130 = !DILocalVariable(name: "__i", scope: !15131, file: !2434, line: 788, type: !14012)
!15131 = distinct !DILexicalBlock(scope: !15127, file: !2434, line: 788, column: 2)
!15132 = !DILocalVariable(name: "__key", scope: !15131, file: !2434, line: 788, type: !14012)
!15133 = !DILocation(line: 0, scope: !15127)
!15134 = !DILocation(line: 0, scope: !15131)
!15135 = !DILocation(line: 0, scope: !14020, inlinedAt: !15136)
!15136 = distinct !DILocation(line: 788, column: 2, scope: !15131)
!15137 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15138)
!15138 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15136)
!15139 = !DILocation(line: 0, scope: !14029, inlinedAt: !15138)
!15140 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15136)
!15141 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15136)
!15142 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15136)
!15143 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15136)
!15144 = !DILocation(line: 789, column: 3, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15146, file: !2434, line: 788, column: 26)
!15146 = distinct !DILexicalBlock(scope: !15131, file: !2434, line: 788, column: 2)
!15147 = !DILocation(line: 0, scope: !14054, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 788, column: 2, scope: !15146)
!15149 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15148)
!15150 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15148)
!15151 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15148)
!15152 = !DILocation(line: 0, scope: !14068, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15148)
!15154 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15153)
!15155 = !DILocation(line: 791, column: 1, scope: !15127)
!15156 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2434, file: !2434, line: 816, type: !15157, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15159)
!15157 = !DISubroutineType(types: !15158)
!15158 = !{!109, !110, !2357, !14906}
!15159 = !{!15160, !15161, !15162, !15163, !15164, !15166}
!15160 = !DILocalVariable(name: "key", arg: 1, scope: !15156, file: !2434, line: 816, type: !110)
!15161 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15156, file: !2434, line: 816, type: !2357)
!15162 = !DILocalVariable(name: "timeout", arg: 3, scope: !15156, file: !2434, line: 816, type: !14906)
!15163 = !DILocalVariable(name: "ret", scope: !15156, file: !2434, line: 828, type: !109)
!15164 = !DILocalVariable(name: "__i", scope: !15165, file: !2434, line: 829, type: !14012)
!15165 = distinct !DILexicalBlock(scope: !15156, file: !2434, line: 829, column: 2)
!15166 = !DILocalVariable(name: "__key", scope: !15165, file: !2434, line: 829, type: !14012)
!15167 = !DILocation(line: 0, scope: !15156)
!15168 = !DILocation(line: 823, column: 14, scope: !15156)
!15169 = !DILocation(line: 823, column: 2, scope: !15156)
!15170 = !DILocation(line: 826, column: 20, scope: !15156)
!15171 = !DILocation(line: 826, column: 18, scope: !15156)
!15172 = !DILocation(line: 828, column: 12, scope: !15156)
!15173 = !DILocation(line: 0, scope: !15165)
!15174 = !DILocation(line: 0, scope: !14020, inlinedAt: !15175)
!15175 = distinct !DILocation(line: 829, column: 2, scope: !15165)
!15176 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15177)
!15177 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15175)
!15178 = !DILocation(line: 0, scope: !14029, inlinedAt: !15177)
!15179 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15175)
!15180 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15175)
!15181 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15175)
!15182 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15175)
!15183 = !DILocation(line: 830, column: 7, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !2434, line: 830, column: 7)
!15185 = distinct !DILexicalBlock(scope: !15186, file: !2434, line: 829, column: 26)
!15186 = distinct !DILexicalBlock(scope: !15165, file: !2434, line: 829, column: 2)
!15187 = !DILocation(line: 830, column: 26, scope: !15184)
!15188 = !DILocation(line: 830, column: 23, scope: !15184)
!15189 = !DILocation(line: 830, column: 7, scope: !15185)
!15190 = !DILocation(line: 831, column: 20, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15184, file: !2434, line: 830, column: 36)
!15192 = !DILocation(line: 832, column: 3, scope: !15191)
!15193 = !DILocation(line: 0, scope: !14054, inlinedAt: !15194)
!15194 = distinct !DILocation(line: 829, column: 2, scope: !15186)
!15195 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15194)
!15196 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15194)
!15197 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15194)
!15198 = !DILocation(line: 0, scope: !14068, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15194)
!15200 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15199)
!15201 = !DILocation(line: 834, column: 2, scope: !15156)
!15202 = distinct !DISubprogram(name: "z_pend_curr", scope: !2434, file: !2434, line: 840, type: !15203, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15205)
!15203 = !DISubroutineType(types: !15204)
!15204 = !{!109, !14023, !14012, !2357, !14906}
!15205 = !{!15206, !15207, !15208, !15209}
!15206 = !DILocalVariable(name: "lock", arg: 1, scope: !15202, file: !2434, line: 840, type: !14023)
!15207 = !DILocalVariable(name: "key", arg: 2, scope: !15202, file: !2434, line: 840, type: !14012)
!15208 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15202, file: !2434, line: 841, type: !2357)
!15209 = !DILocalVariable(name: "timeout", arg: 4, scope: !15202, file: !2434, line: 841, type: !14906)
!15210 = !DILocation(line: 0, scope: !15202)
!15211 = !DILocation(line: 844, column: 20, scope: !15202)
!15212 = !DILocation(line: 844, column: 18, scope: !15202)
!15213 = !DILocation(line: 846, column: 2, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15215, file: !2434, line: 846, column: 2)
!15215 = distinct !DILexicalBlock(scope: !15202, file: !2434, line: 846, column: 2)
!15216 = !DILocation(line: 846, column: 2, scope: !15215)
!15217 = !DILocation(line: 846, column: 2, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15214, file: !2434, line: 846, column: 2)
!15219 = !DILocation(line: 0, scope: !14020, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 856, column: 9, scope: !15202)
!15221 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15220)
!15223 = !DILocation(line: 0, scope: !14029, inlinedAt: !15222)
!15224 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15220)
!15225 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15220)
!15226 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15220)
!15227 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15220)
!15228 = !DILocation(line: 857, column: 14, scope: !15202)
!15229 = !DILocation(line: 857, column: 2, scope: !15202)
!15230 = !DILocation(line: 0, scope: !14705, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 858, column: 2, scope: !15202)
!15232 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15231)
!15233 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !15231)
!15234 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !15231)
!15235 = !DILocation(line: 0, scope: !14696, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 859, column: 9, scope: !15202)
!15237 = !DILocation(line: 0, scope: !14705, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !15236)
!15239 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15238)
!15240 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !15238)
!15241 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !15238)
!15242 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !15236)
!15243 = !DILocation(line: 859, column: 2, scope: !15202)
!15244 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2434, file: !2434, line: 862, type: !15245, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15247)
!15245 = !DISubroutineType(types: !15246)
!15246 = !{!2326, !2357}
!15247 = !{!15248, !15249, !15250, !15252}
!15248 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15244, file: !2434, line: 862, type: !2357)
!15249 = !DILocalVariable(name: "thread", scope: !15244, file: !2434, line: 864, type: !2326)
!15250 = !DILocalVariable(name: "__i", scope: !15251, file: !2434, line: 866, type: !14012)
!15251 = distinct !DILexicalBlock(scope: !15244, file: !2434, line: 866, column: 2)
!15252 = !DILocalVariable(name: "__key", scope: !15251, file: !2434, line: 866, type: !14012)
!15253 = !DILocation(line: 0, scope: !15244)
!15254 = !DILocation(line: 0, scope: !15251)
!15255 = !DILocation(line: 0, scope: !14020, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 866, column: 2, scope: !15251)
!15257 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15256)
!15259 = !DILocation(line: 0, scope: !14029, inlinedAt: !15258)
!15260 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15256)
!15261 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15256)
!15262 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15256)
!15263 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15256)
!15264 = !DILocation(line: 867, column: 12, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15266, file: !2434, line: 866, column: 26)
!15266 = distinct !DILexicalBlock(scope: !15251, file: !2434, line: 866, column: 2)
!15267 = !DILocation(line: 869, column: 14, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15265, file: !2434, line: 869, column: 7)
!15269 = !DILocation(line: 869, column: 7, scope: !15265)
!15270 = !DILocation(line: 870, column: 4, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15268, file: !2434, line: 869, column: 23)
!15272 = !DILocation(line: 871, column: 3, scope: !15271)
!15273 = !DILocation(line: 0, scope: !14054, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 866, column: 2, scope: !15266)
!15275 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15274)
!15276 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15274)
!15277 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15274)
!15278 = !DILocation(line: 0, scope: !14068, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15274)
!15280 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15279)
!15281 = !DILocation(line: 874, column: 2, scope: !15244)
!15282 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2434, file: !2434, line: 877, type: !15245, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15283)
!15283 = !{!15284, !15285, !15286, !15288}
!15284 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15282, file: !2434, line: 877, type: !2357)
!15285 = !DILocalVariable(name: "thread", scope: !15282, file: !2434, line: 879, type: !2326)
!15286 = !DILocalVariable(name: "__i", scope: !15287, file: !2434, line: 881, type: !14012)
!15287 = distinct !DILexicalBlock(scope: !15282, file: !2434, line: 881, column: 2)
!15288 = !DILocalVariable(name: "__key", scope: !15287, file: !2434, line: 881, type: !14012)
!15289 = !DILocation(line: 0, scope: !15282)
!15290 = !DILocation(line: 0, scope: !15287)
!15291 = !DILocation(line: 0, scope: !14020, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 881, column: 2, scope: !15287)
!15293 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15292)
!15295 = !DILocation(line: 0, scope: !14029, inlinedAt: !15294)
!15296 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15292)
!15297 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15292)
!15298 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15292)
!15299 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15292)
!15300 = !DILocation(line: 882, column: 12, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15302, file: !2434, line: 881, column: 26)
!15302 = distinct !DILexicalBlock(scope: !15287, file: !2434, line: 881, column: 2)
!15303 = !DILocation(line: 884, column: 14, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15301, file: !2434, line: 884, column: 7)
!15305 = !DILocation(line: 884, column: 7, scope: !15301)
!15306 = !DILocation(line: 885, column: 4, scope: !15307)
!15307 = distinct !DILexicalBlock(scope: !15304, file: !2434, line: 884, column: 23)
!15308 = !DILocation(line: 886, column: 10, scope: !15307)
!15309 = !DILocation(line: 887, column: 3, scope: !15307)
!15310 = !DILocation(line: 0, scope: !14054, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 881, column: 2, scope: !15302)
!15312 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15311)
!15313 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15311)
!15314 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15311)
!15315 = !DILocation(line: 0, scope: !14068, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15311)
!15317 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15316)
!15318 = !DILocation(line: 890, column: 2, scope: !15282)
!15319 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2434, file: !2434, line: 893, type: !13978, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15320)
!15320 = !{!15321}
!15321 = !DILocalVariable(name: "thread", arg: 1, scope: !15319, file: !2434, line: 893, type: !2326)
!15322 = !DILocation(line: 0, scope: !15319)
!15323 = !DILocation(line: 0, scope: !15127, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 895, column: 2, scope: !15319)
!15325 = !DILocation(line: 0, scope: !15131, inlinedAt: !15324)
!15326 = !DILocation(line: 0, scope: !14020, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 788, column: 2, scope: !15131, inlinedAt: !15324)
!15328 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15327)
!15330 = !DILocation(line: 0, scope: !14029, inlinedAt: !15329)
!15331 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15327)
!15332 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15327)
!15333 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15327)
!15334 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15327)
!15335 = !DILocation(line: 789, column: 3, scope: !15145, inlinedAt: !15324)
!15336 = !DILocation(line: 0, scope: !14054, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 788, column: 2, scope: !15146, inlinedAt: !15324)
!15338 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15337)
!15339 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15337)
!15340 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15337)
!15341 = !DILocation(line: 0, scope: !14068, inlinedAt: !15342)
!15342 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15337)
!15343 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15342)
!15344 = !DILocation(line: 896, column: 8, scope: !15319)
!15345 = !DILocation(line: 897, column: 1, scope: !15319)
!15346 = distinct !DISubprogram(name: "z_set_prio", scope: !2434, file: !2434, line: 902, type: !14381, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15347)
!15347 = !{!15348, !15349, !15350, !15351, !15353}
!15348 = !DILocalVariable(name: "thread", arg: 1, scope: !15346, file: !2434, line: 902, type: !2326)
!15349 = !DILocalVariable(name: "prio", arg: 2, scope: !15346, file: !2434, line: 902, type: !109)
!15350 = !DILocalVariable(name: "need_sched", scope: !15346, file: !2434, line: 904, type: !347)
!15351 = !DILocalVariable(name: "__i", scope: !15352, file: !2434, line: 906, type: !14012)
!15352 = distinct !DILexicalBlock(scope: !15346, file: !2434, line: 906, column: 2)
!15353 = !DILocalVariable(name: "__key", scope: !15352, file: !2434, line: 906, type: !14012)
!15354 = !DILocation(line: 0, scope: !15346)
!15355 = !DILocation(line: 0, scope: !15352)
!15356 = !DILocation(line: 0, scope: !14020, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 906, column: 2, scope: !15352)
!15358 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15359)
!15359 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15357)
!15360 = !DILocation(line: 0, scope: !14029, inlinedAt: !15359)
!15361 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15357)
!15362 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15357)
!15363 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15357)
!15364 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15357)
!15365 = !DILocation(line: 907, column: 16, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15367, file: !2434, line: 906, column: 26)
!15367 = distinct !DILexicalBlock(scope: !15352, file: !2434, line: 906, column: 2)
!15368 = !DILocation(line: 909, column: 7, scope: !15366)
!15369 = !DILocation(line: 0, scope: !14212, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 912, column: 5, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !2434, line: 911, column: 63)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !2434, line: 911, column: 8)
!15373 = distinct !DILexicalBlock(scope: !15374, file: !2434, line: 909, column: 19)
!15374 = distinct !DILexicalBlock(scope: !15366, file: !2434, line: 909, column: 7)
!15375 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !15370)
!15376 = !DILocation(line: 0, scope: !14220, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !15370)
!15378 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !15377)
!15379 = !DILocation(line: 913, column: 23, scope: !15371)
!15380 = !DILocation(line: 0, scope: !14229, inlinedAt: !15381)
!15381 = distinct !DILocation(line: 914, column: 5, scope: !15371)
!15382 = !DILocation(line: 252, column: 28, scope: !14229, inlinedAt: !15381)
!15383 = !DILocation(line: 0, scope: !14236, inlinedAt: !15384)
!15384 = distinct !DILocation(line: 254, column: 3, scope: !14240, inlinedAt: !15381)
!15385 = !DILocation(line: 0, scope: !14243, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 229, column: 2, scope: !14236, inlinedAt: !15384)
!15387 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !15386)
!15388 = !DILocation(line: 186, column: 2, scope: !14254, inlinedAt: !15386)
!15389 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !15386)
!15390 = !DILocation(line: 188, column: 2, scope: !14259, inlinedAt: !15386)
!15391 = !DILocation(line: 188, column: 2, scope: !14261, inlinedAt: !15386)
!15392 = !DILocation(line: 0, scope: !14259, inlinedAt: !15386)
!15393 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !15386)
!15394 = !DILocation(line: 189, column: 35, scope: !14264, inlinedAt: !15386)
!15395 = !DILocation(line: 189, column: 7, scope: !14265, inlinedAt: !15386)
!15396 = !DILocation(line: 190, column: 4, scope: !14269, inlinedAt: !15386)
!15397 = !DILocation(line: 192, column: 4, scope: !14269, inlinedAt: !15386)
!15398 = distinct !{!15398, !15390, !15399}
!15399 = !DILocation(line: 194, column: 2, scope: !14259, inlinedAt: !15386)
!15400 = !DILocation(line: 196, column: 2, scope: !14243, inlinedAt: !15386)
!15401 = !DILocation(line: 197, column: 1, scope: !14243, inlinedAt: !15386)
!15402 = !DILocation(line: 918, column: 4, scope: !15373)
!15403 = !DILocation(line: 919, column: 3, scope: !15373)
!15404 = !DILocation(line: 920, column: 22, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15374, file: !2434, line: 919, column: 10)
!15406 = !DILocation(line: 0, scope: !14054, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 906, column: 2, scope: !15367)
!15408 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15407)
!15409 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15407)
!15410 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15407)
!15411 = !DILocation(line: 0, scope: !14068, inlinedAt: !15412)
!15412 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15407)
!15413 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15412)
!15414 = !DILocation(line: 926, column: 2, scope: !15346)
!15415 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2434, file: !2434, line: 929, type: !15416, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15418)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{null, !2326, !109}
!15418 = !{!15419, !15420, !15421}
!15419 = !DILocalVariable(name: "thread", arg: 1, scope: !15415, file: !2434, line: 929, type: !2326)
!15420 = !DILocalVariable(name: "prio", arg: 2, scope: !15415, file: !2434, line: 929, type: !109)
!15421 = !DILocalVariable(name: "need_sched", scope: !15415, file: !2434, line: 931, type: !347)
!15422 = !DILocation(line: 0, scope: !15415)
!15423 = !DILocation(line: 931, column: 20, scope: !15415)
!15424 = !DILocation(line: 935, column: 17, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15415, file: !2434, line: 935, column: 6)
!15426 = !DILocation(line: 935, column: 20, scope: !15425)
!15427 = !DILocation(line: 935, column: 35, scope: !15425)
!15428 = !DILocation(line: 935, column: 48, scope: !15425)
!15429 = !DILocation(line: 935, column: 6, scope: !15415)
!15430 = !DILocation(line: 936, column: 3, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15425, file: !2434, line: 935, column: 55)
!15432 = !DILocation(line: 937, column: 2, scope: !15431)
!15433 = !DILocation(line: 938, column: 1, scope: !15415)
!15434 = distinct !DISubprogram(name: "k_sched_lock", scope: !2434, file: !2434, line: 987, type: !3087, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15435)
!15435 = !{!15436, !15438}
!15436 = !DILocalVariable(name: "__i", scope: !15437, file: !2434, line: 989, type: !14012)
!15437 = distinct !DILexicalBlock(scope: !15434, file: !2434, line: 989, column: 2)
!15438 = !DILocalVariable(name: "__key", scope: !15437, file: !2434, line: 989, type: !14012)
!15439 = !DILocation(line: 0, scope: !15437)
!15440 = !DILocation(line: 0, scope: !14020, inlinedAt: !15441)
!15441 = distinct !DILocation(line: 989, column: 2, scope: !15437)
!15442 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15443)
!15443 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15441)
!15444 = !DILocation(line: 0, scope: !14029, inlinedAt: !15443)
!15445 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15441)
!15446 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15441)
!15447 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15441)
!15448 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15441)
!15449 = !DILocation(line: 992, column: 3, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15451, file: !2434, line: 989, column: 26)
!15451 = distinct !DILexicalBlock(scope: !15437, file: !2434, line: 989, column: 2)
!15452 = !DILocation(line: 0, scope: !14054, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 989, column: 2, scope: !15451)
!15454 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15453)
!15455 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15453)
!15456 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15453)
!15457 = !DILocation(line: 0, scope: !14068, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15453)
!15459 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15458)
!15460 = !DILocation(line: 994, column: 1, scope: !15434)
!15461 = distinct !DISubprogram(name: "z_sched_lock", scope: !12807, file: !12807, line: 251, type: !3087, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15462 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15464)
!15464 = distinct !DILocation(line: 253, column: 2, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !12807, line: 253, column: 2)
!15466 = distinct !DILexicalBlock(scope: !15461, file: !12807, line: 253, column: 2)
!15467 = !DILocation(line: 0, scope: !14745, inlinedAt: !15463)
!15468 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15464)
!15469 = !DILocation(line: 253, column: 2, scope: !15466)
!15470 = !DILocation(line: 253, column: 2, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !12807, line: 253, column: 2)
!15472 = !DILocation(line: 254, column: 2, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !12807, line: 254, column: 2)
!15474 = distinct !DILexicalBlock(scope: !15461, file: !12807, line: 254, column: 2)
!15475 = !DILocation(line: 254, column: 2, scope: !15474)
!15476 = !DILocation(line: 254, column: 2, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15473, file: !12807, line: 254, column: 2)
!15478 = !DILocation(line: 256, column: 2, scope: !15461)
!15479 = !DILocation(line: 258, column: 2, scope: !15480)
!15480 = distinct !DILexicalBlock(scope: !15461, file: !12807, line: 258, column: 2)
!15481 = !{i64 2154876724}
!15482 = !DILocation(line: 259, column: 1, scope: !15461)
!15483 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2434, file: !2434, line: 996, type: !3087, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15484)
!15484 = !{!15485, !15487}
!15485 = !DILocalVariable(name: "__i", scope: !15486, file: !2434, line: 998, type: !14012)
!15486 = distinct !DILexicalBlock(scope: !15483, file: !2434, line: 998, column: 2)
!15487 = !DILocalVariable(name: "__key", scope: !15486, file: !2434, line: 998, type: !14012)
!15488 = !DILocation(line: 0, scope: !15486)
!15489 = !DILocation(line: 0, scope: !14020, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 998, column: 2, scope: !15486)
!15491 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15490)
!15493 = !DILocation(line: 0, scope: !14029, inlinedAt: !15492)
!15494 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15490)
!15495 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15490)
!15496 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15490)
!15497 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15490)
!15498 = !DILocation(line: 999, column: 3, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15500, file: !2434, line: 999, column: 3)
!15500 = distinct !DILexicalBlock(scope: !15501, file: !2434, line: 999, column: 3)
!15501 = distinct !DILexicalBlock(scope: !15502, file: !2434, line: 998, column: 26)
!15502 = distinct !DILexicalBlock(scope: !15486, file: !2434, line: 998, column: 2)
!15503 = !DILocation(line: 999, column: 3, scope: !15500)
!15504 = !DILocation(line: 999, column: 3, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15499, file: !2434, line: 999, column: 3)
!15506 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 1000, column: 3, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2434, line: 1000, column: 3)
!15510 = distinct !DILexicalBlock(scope: !15501, file: !2434, line: 1000, column: 3)
!15511 = !DILocation(line: 0, scope: !14745, inlinedAt: !15507)
!15512 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15508)
!15513 = !DILocation(line: 1000, column: 3, scope: !15510)
!15514 = !DILocation(line: 1000, column: 3, scope: !15515)
!15515 = distinct !DILexicalBlock(scope: !15509, file: !2434, line: 1000, column: 3)
!15516 = !DILocation(line: 1002, column: 5, scope: !15501)
!15517 = !DILocation(line: 1002, column: 20, scope: !15501)
!15518 = !DILocation(line: 1002, column: 3, scope: !15501)
!15519 = !DILocation(line: 1003, column: 3, scope: !15501)
!15520 = !DILocation(line: 0, scope: !14054, inlinedAt: !15521)
!15521 = distinct !DILocation(line: 998, column: 2, scope: !15502)
!15522 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15521)
!15523 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !15521)
!15524 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !15521)
!15525 = !DILocation(line: 0, scope: !14068, inlinedAt: !15526)
!15526 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !15521)
!15527 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !15526)
!15528 = !DILocation(line: 1011, column: 2, scope: !15483)
!15529 = !DILocation(line: 1012, column: 1, scope: !15483)
!15530 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2434, file: !2434, line: 1014, type: !14369, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15531 = !DILocation(line: 1028, column: 25, scope: !15530)
!15532 = !DILocation(line: 1028, column: 2, scope: !15530)
!15533 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2434, file: !2434, line: 1155, type: !15534, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15536)
!15534 = !DISubroutineType(types: !15535)
!15535 = !{!347, !2355, !2355}
!15536 = !{!15537, !15538, !15539, !15540, !15541}
!15537 = !DILocalVariable(name: "a", arg: 1, scope: !15533, file: !2434, line: 1155, type: !2355)
!15538 = !DILocalVariable(name: "b", arg: 2, scope: !15533, file: !2434, line: 1155, type: !2355)
!15539 = !DILocalVariable(name: "thread_a", scope: !15533, file: !2434, line: 1157, type: !2326)
!15540 = !DILocalVariable(name: "thread_b", scope: !15533, file: !2434, line: 1157, type: !2326)
!15541 = !DILocalVariable(name: "cmp", scope: !15533, file: !2434, line: 1158, type: !765)
!15542 = !DILocation(line: 0, scope: !15533)
!15543 = !DILocation(line: 1160, column: 13, scope: !15533)
!15544 = !DILocation(line: 1161, column: 13, scope: !15533)
!15545 = !DILocation(line: 1163, column: 8, scope: !15533)
!15546 = !DILocation(line: 1165, column: 10, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15533, file: !2434, line: 1165, column: 6)
!15548 = !DILocation(line: 1165, column: 6, scope: !15533)
!15549 = !DILocation(line: 1167, column: 17, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15547, file: !2434, line: 1167, column: 13)
!15551 = !DILocation(line: 1167, column: 13, scope: !15547)
!15552 = !DILocation(line: 1170, column: 25, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15550, file: !2434, line: 1169, column: 9)
!15554 = !DILocation(line: 1170, column: 52, scope: !15553)
!15555 = !DILocation(line: 1170, column: 35, scope: !15553)
!15556 = !DILocation(line: 1170, column: 3, scope: !15553)
!15557 = !DILocation(line: 0, scope: !15547)
!15558 = !DILocation(line: 1173, column: 1, scope: !15533)
!15559 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2434, file: !2434, line: 1175, type: !15560, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15575)
!15560 = !DISubroutineType(types: !15561)
!15561 = !{null, !15562, !2326}
!15562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15563, size: 32)
!15563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15564, line: 37, size: 128, elements: !15565)
!15564 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15565 = !{!15566, !15574}
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15563, file: !15564, line: 38, baseType: !15567, size: 96)
!15567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !15568)
!15568 = !{!15569, !15570, !15573}
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15567, file: !170, line: 84, baseType: !2355, size: 32)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15567, file: !170, line: 85, baseType: !15571, size: 32, offset: 32)
!15571 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !15572)
!15572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15534, size: 32)
!15573 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15567, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15563, file: !15564, line: 39, baseType: !109, size: 32, offset: 96)
!15575 = !{!15576, !15577, !15578, !15579, !15588}
!15576 = !DILocalVariable(name: "pq", arg: 1, scope: !15559, file: !2434, line: 1175, type: !15562)
!15577 = !DILocalVariable(name: "thread", arg: 2, scope: !15559, file: !2434, line: 1175, type: !2326)
!15578 = !DILocalVariable(name: "t", scope: !15559, file: !2434, line: 1177, type: !2326)
!15579 = !DILocalVariable(name: "__f", scope: !15580, file: !2434, line: 1190, type: !15583)
!15580 = distinct !DILexicalBlock(scope: !15581, file: !2434, line: 1190, column: 3)
!15581 = distinct !DILexicalBlock(scope: !15582, file: !2434, line: 1189, column: 27)
!15582 = distinct !DILexicalBlock(scope: !15559, file: !2434, line: 1189, column: 6)
!15583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !15584)
!15584 = !{!15585, !15586, !15587}
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15583, file: !170, line: 156, baseType: !2429, size: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15583, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!15587 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15583, file: !170, line: 158, baseType: !765, size: 32, offset: 64)
!15588 = !DILocalVariable(name: "n", scope: !15589, file: !2434, line: 1190, type: !2355)
!15589 = distinct !DILexicalBlock(scope: !15590, file: !2434, line: 1190, column: 3)
!15590 = distinct !DILexicalBlock(scope: !15580, file: !2434, line: 1190, column: 3)
!15591 = !DILocation(line: 0, scope: !15559)
!15592 = !DILocation(line: 1179, column: 2, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15594, file: !2434, line: 1179, column: 2)
!15594 = distinct !DILexicalBlock(scope: !15559, file: !2434, line: 1179, column: 2)
!15595 = !DILocation(line: 1179, column: 2, scope: !15594)
!15596 = !DILocation(line: 1179, column: 2, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15593, file: !2434, line: 1179, column: 2)
!15598 = !DILocation(line: 1181, column: 31, scope: !15559)
!15599 = !DILocation(line: 1181, column: 45, scope: !15559)
!15600 = !DILocation(line: 1181, column: 15, scope: !15559)
!15601 = !DILocation(line: 1181, column: 25, scope: !15559)
!15602 = !DILocation(line: 1189, column: 11, scope: !15582)
!15603 = !DILocation(line: 1189, column: 7, scope: !15582)
!15604 = !DILocation(line: 1189, column: 6, scope: !15559)
!15605 = !DILocation(line: 1190, column: 3, scope: !15580)
!15606 = !DILocation(line: 1190, column: 3, scope: !15589)
!15607 = !DILocation(line: 0, scope: !15589)
!15608 = !DILocation(line: 1190, column: 3, scope: !15590)
!15609 = !DILocation(line: 1193, column: 2, scope: !15581)
!15610 = !DILocation(line: 1191, column: 42, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15590, file: !2434, line: 1190, column: 54)
!15612 = !DILocation(line: 1191, column: 12, scope: !15611)
!15613 = !DILocation(line: 1191, column: 22, scope: !15611)
!15614 = distinct !{!15614, !15605, !15615}
!15615 = !DILocation(line: 1192, column: 3, scope: !15580)
!15616 = !DILocation(line: 1195, column: 17, scope: !15559)
!15617 = !DILocation(line: 1195, column: 37, scope: !15559)
!15618 = !DILocation(line: 1195, column: 2, scope: !15559)
!15619 = !DILocation(line: 1196, column: 1, scope: !15559)
!15620 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !15621, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!15621 = !DISubroutineType(types: !15622)
!15622 = !{!2355, !15623, !15624}
!15623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15567, size: 32)
!15624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15583, size: 32)
!15625 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !15626, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!15626 = !DISubroutineType(types: !15627)
!15627 = !{null, !15623, !2355}
!15628 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2434, file: !2434, line: 1198, type: !15560, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15629)
!15629 = !{!15630, !15631}
!15630 = !DILocalVariable(name: "pq", arg: 1, scope: !15628, file: !2434, line: 1198, type: !15562)
!15631 = !DILocalVariable(name: "thread", arg: 2, scope: !15628, file: !2434, line: 1198, type: !2326)
!15632 = !DILocation(line: 0, scope: !15628)
!15633 = !DILocation(line: 1200, column: 2, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15635, file: !2434, line: 1200, column: 2)
!15635 = distinct !DILexicalBlock(scope: !15628, file: !2434, line: 1200, column: 2)
!15636 = !DILocation(line: 1200, column: 2, scope: !15635)
!15637 = !DILocation(line: 1200, column: 2, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !2434, line: 1200, column: 2)
!15639 = !DILocation(line: 1202, column: 17, scope: !15628)
!15640 = !DILocation(line: 1202, column: 37, scope: !15628)
!15641 = !DILocation(line: 1202, column: 2, scope: !15628)
!15642 = !DILocation(line: 1204, column: 16, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15628, file: !2434, line: 1204, column: 6)
!15644 = !DILocation(line: 1204, column: 7, scope: !15643)
!15645 = !DILocation(line: 1204, column: 6, scope: !15628)
!15646 = !DILocation(line: 1205, column: 7, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15643, file: !2434, line: 1204, column: 22)
!15648 = !DILocation(line: 1205, column: 22, scope: !15647)
!15649 = !DILocation(line: 1206, column: 2, scope: !15647)
!15650 = !DILocation(line: 1207, column: 1, scope: !15628)
!15651 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !15626, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!15652 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2434, file: !2434, line: 1209, type: !15653, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15655)
!15653 = !DISubroutineType(types: !15654)
!15654 = !{!2326, !15562}
!15655 = !{!15656, !15657, !15658}
!15656 = !DILocalVariable(name: "pq", arg: 1, scope: !15652, file: !2434, line: 1209, type: !15562)
!15657 = !DILocalVariable(name: "thread", scope: !15652, file: !2434, line: 1211, type: !2326)
!15658 = !DILocalVariable(name: "n", scope: !15652, file: !2434, line: 1212, type: !2355)
!15659 = !DILocation(line: 0, scope: !15652)
!15660 = !DILocation(line: 1212, column: 37, scope: !15652)
!15661 = !DILocation(line: 1212, column: 21, scope: !15652)
!15662 = !DILocation(line: 1217, column: 2, scope: !15652)
!15663 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !15664, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{!2355, !15623}
!15666 = !{!15667}
!15667 = !DILocalVariable(name: "tree", arg: 1, scope: !15663, file: !170, line: 115, type: !15623)
!15668 = !DILocation(line: 0, scope: !15663)
!15669 = !DILocation(line: 117, column: 9, scope: !15663)
!15670 = !DILocation(line: 117, column: 2, scope: !15663)
!15671 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !15672, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2024)
!15672 = !DISubroutineType(types: !15673)
!15673 = !{!2355, !15623, !180}
!15674 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2434, file: !2434, line: 1246, type: !15675, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15683)
!15675 = !DISubroutineType(types: !15676)
!15676 = !{!2326, !15677}
!15677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15678, size: 32)
!15678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15564, line: 53, size: 2080, elements: !15679)
!15679 = !{!15680, !15682}
!15680 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15678, file: !15564, line: 54, baseType: !15681, size: 2048)
!15681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 2048, elements: !226)
!15682 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15678, file: !15564, line: 55, baseType: !32, size: 32, offset: 2048)
!15683 = !{!15684, !15685, !15686, !15687}
!15684 = !DILocalVariable(name: "pq", arg: 1, scope: !15674, file: !2434, line: 1246, type: !15677)
!15685 = !DILocalVariable(name: "thread", scope: !15674, file: !2434, line: 1252, type: !2326)
!15686 = !DILocalVariable(name: "l", scope: !15674, file: !2434, line: 1253, type: !14246)
!15687 = !DILocalVariable(name: "n", scope: !15674, file: !2434, line: 1254, type: !2430)
!15688 = !DILocation(line: 0, scope: !15674)
!15689 = !DILocation(line: 1248, column: 11, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15674, file: !2434, line: 1248, column: 6)
!15691 = !DILocation(line: 1248, column: 7, scope: !15690)
!15692 = !DILocation(line: 1248, column: 6, scope: !15674)
!15693 = !DILocation(line: 1253, column: 31, scope: !15674)
!15694 = !DILocation(line: 1253, column: 20, scope: !15674)
!15695 = !DILocation(line: 1254, column: 19, scope: !15674)
!15696 = !DILocation(line: 1260, column: 1, scope: !15674)
!15697 = distinct !DISubprogram(name: "z_unpend_all", scope: !2434, file: !2434, line: 1262, type: !15698, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15700)
!15698 = !DISubroutineType(types: !15699)
!15699 = !{!109, !2357}
!15700 = !{!15701, !15702, !15703}
!15701 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15697, file: !2434, line: 1262, type: !2357)
!15702 = !DILocalVariable(name: "need_sched", scope: !15697, file: !2434, line: 1264, type: !109)
!15703 = !DILocalVariable(name: "thread", scope: !15697, file: !2434, line: 1265, type: !2326)
!15704 = !DILocation(line: 0, scope: !15697)
!15705 = !DILocation(line: 1267, column: 19, scope: !15697)
!15706 = !DILocation(line: 1267, column: 41, scope: !15697)
!15707 = !DILocation(line: 1267, column: 2, scope: !15697)
!15708 = !DILocation(line: 1268, column: 3, scope: !15709)
!15709 = distinct !DILexicalBlock(scope: !15697, file: !2434, line: 1267, column: 50)
!15710 = !DILocation(line: 1269, column: 3, scope: !15709)
!15711 = distinct !{!15711, !15707, !15712}
!15712 = !DILocation(line: 1271, column: 2, scope: !15697)
!15713 = !DILocation(line: 1273, column: 2, scope: !15697)
!15714 = distinct !DISubprogram(name: "z_waitq_head", scope: !13168, file: !13168, line: 52, type: !15245, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15715)
!15715 = !{!15716}
!15716 = !DILocalVariable(name: "w", arg: 1, scope: !15714, file: !13168, line: 52, type: !2357)
!15717 = !DILocation(line: 0, scope: !15714)
!15718 = !DILocation(line: 54, column: 52, scope: !15714)
!15719 = !DILocation(line: 54, column: 28, scope: !15714)
!15720 = !DILocation(line: 54, column: 9, scope: !15714)
!15721 = !DILocation(line: 54, column: 2, scope: !15714)
!15722 = distinct !DISubprogram(name: "init_ready_q", scope: !2434, file: !2434, line: 1276, type: !15723, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15730)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{null, !15725}
!15725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15726, size: 32)
!15726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15727)
!15727 = !{!15728, !15729}
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15726, file: !122, line: 86, baseType: !2326, size: 32)
!15729 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15726, file: !122, line: 90, baseType: !2362, size: 64, offset: 32)
!15730 = !{!15731}
!15731 = !DILocalVariable(name: "rq", arg: 1, scope: !15722, file: !2434, line: 1276, type: !15725)
!15732 = !DILocation(line: 0, scope: !15722)
!15733 = !DILocation(line: 1289, column: 22, scope: !15722)
!15734 = !DILocation(line: 1289, column: 2, scope: !15722)
!15735 = !DILocation(line: 1291, column: 1, scope: !15722)
!15736 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15737, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15739)
!15737 = !DISubroutineType(types: !15738)
!15738 = !{null, !14246}
!15739 = !{!15740}
!15740 = !DILocalVariable(name: "list", arg: 1, scope: !15736, file: !127, line: 197, type: !14246)
!15741 = !DILocation(line: 0, scope: !15736)
!15742 = !DILocation(line: 199, column: 8, scope: !15736)
!15743 = !DILocation(line: 199, column: 13, scope: !15736)
!15744 = !DILocation(line: 200, column: 8, scope: !15736)
!15745 = !DILocation(line: 200, column: 13, scope: !15736)
!15746 = !DILocation(line: 201, column: 1, scope: !15736)
!15747 = distinct !DISubprogram(name: "z_sched_init", scope: !2434, file: !2434, line: 1293, type: !3087, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15748 = !DILocation(line: 1302, column: 2, scope: !15747)
!15749 = !DILocation(line: 1306, column: 2, scope: !15747)
!15750 = !DILocation(line: 1309, column: 1, scope: !15747)
!15751 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2434, file: !2434, line: 1311, type: !15752, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15755)
!15752 = !DISubroutineType(types: !15753)
!15753 = !{!109, !15754}
!15754 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2326)
!15755 = !{!15756}
!15756 = !DILocalVariable(name: "thread", arg: 1, scope: !15751, file: !2434, line: 1311, type: !15754)
!15757 = !DILocation(line: 0, scope: !15751)
!15758 = !DILocation(line: 1313, column: 22, scope: !15751)
!15759 = !DILocation(line: 1313, column: 9, scope: !15751)
!15760 = !DILocation(line: 1313, column: 2, scope: !15751)
!15761 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2434, file: !2434, line: 1325, type: !15762, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15764)
!15762 = !DISubroutineType(types: !15763)
!15763 = !{null, !15754, !109}
!15764 = !{!15765, !15766, !15767}
!15765 = !DILocalVariable(name: "thread", arg: 1, scope: !15761, file: !2434, line: 1325, type: !15754)
!15766 = !DILocalVariable(name: "prio", arg: 2, scope: !15761, file: !2434, line: 1325, type: !109)
!15767 = !DILocalVariable(name: "th", scope: !15761, file: !2434, line: 1334, type: !2326)
!15768 = !DILocation(line: 0, scope: !15761)
!15769 = !DILocation(line: 1331, column: 2, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2434, line: 1331, column: 2)
!15771 = distinct !DILexicalBlock(scope: !15772, file: !2434, line: 1331, column: 2)
!15772 = distinct !DILexicalBlock(scope: !15761, file: !2434, line: 1331, column: 2)
!15773 = !DILocation(line: 1331, column: 2, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15770, file: !2434, line: 1331, column: 2)
!15775 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 1332, column: 2, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15779, file: !2434, line: 1332, column: 2)
!15779 = distinct !DILexicalBlock(scope: !15761, file: !2434, line: 1332, column: 2)
!15780 = !DILocation(line: 0, scope: !14745, inlinedAt: !15776)
!15781 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15777)
!15782 = !DILocation(line: 1332, column: 2, scope: !15779)
!15783 = !DILocation(line: 1332, column: 2, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15778, file: !2434, line: 1332, column: 2)
!15785 = !DILocation(line: 1336, column: 2, scope: !15761)
!15786 = !DILocation(line: 1337, column: 1, scope: !15761)
!15787 = distinct !DISubprogram(name: "k_can_yield", scope: !2434, file: !2434, line: 1384, type: !7471, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15788 = !DILocation(line: 1386, column: 11, scope: !15787)
!15789 = !DILocation(line: 1386, column: 29, scope: !15787)
!15790 = !DILocation(line: 1386, column: 32, scope: !15787)
!15791 = !DILocation(line: 1386, column: 46, scope: !15787)
!15792 = !DILocation(line: 1387, column: 28, scope: !15787)
!15793 = !DILocation(line: 1387, column: 4, scope: !15787)
!15794 = !DILocation(line: 1386, column: 2, scope: !15787)
!15795 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7471, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15796 = !DILocation(line: 993, column: 10, scope: !15795)
!15797 = !DILocation(line: 993, column: 2, scope: !15795)
!15798 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2434, file: !2434, line: 1390, type: !3087, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15799)
!15799 = !{!15800}
!15800 = !DILocalVariable(name: "key", scope: !15798, file: !2434, line: 1396, type: !14012)
!15801 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 1392, column: 2, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15805, file: !2434, line: 1392, column: 2)
!15805 = distinct !DILexicalBlock(scope: !15798, file: !2434, line: 1392, column: 2)
!15806 = !DILocation(line: 0, scope: !14745, inlinedAt: !15802)
!15807 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15803)
!15808 = !DILocation(line: 1392, column: 2, scope: !15805)
!15809 = !DILocation(line: 1392, column: 2, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15804, file: !2434, line: 1392, column: 2)
!15811 = !DILocation(line: 0, scope: !14020, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 1396, column: 25, scope: !15798)
!15813 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15814)
!15814 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15812)
!15815 = !DILocation(line: 0, scope: !14029, inlinedAt: !15814)
!15816 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15812)
!15817 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15812)
!15818 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15812)
!15819 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15812)
!15820 = !DILocation(line: 0, scope: !15798)
!15821 = !DILocation(line: 1400, column: 18, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15823, file: !2434, line: 1399, column: 36)
!15823 = distinct !DILexicalBlock(scope: !15798, file: !2434, line: 1398, column: 6)
!15824 = !DILocation(line: 0, scope: !14212, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 1400, column: 3, scope: !15822)
!15826 = !DILocation(line: 266, column: 15, scope: !14212, inlinedAt: !15825)
!15827 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !15825)
!15828 = !DILocation(line: 0, scope: !14220, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !15825)
!15830 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !15829)
!15831 = !DILocation(line: 1402, column: 15, scope: !15798)
!15832 = !DILocation(line: 0, scope: !14229, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 1402, column: 2, scope: !15798)
!15834 = !DILocation(line: 252, column: 15, scope: !14229, inlinedAt: !15833)
!15835 = !DILocation(line: 252, column: 28, scope: !14229, inlinedAt: !15833)
!15836 = !DILocation(line: 0, scope: !14236, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 254, column: 3, scope: !14240, inlinedAt: !15833)
!15838 = !DILocation(line: 0, scope: !14243, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 229, column: 2, scope: !14236, inlinedAt: !15837)
!15840 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !15839)
!15841 = !DILocation(line: 186, column: 2, scope: !14254, inlinedAt: !15839)
!15842 = !DILocation(line: 186, column: 2, scope: !14257, inlinedAt: !15839)
!15843 = !DILocation(line: 188, column: 2, scope: !14259, inlinedAt: !15839)
!15844 = !DILocation(line: 188, column: 2, scope: !14261, inlinedAt: !15839)
!15845 = !DILocation(line: 0, scope: !14259, inlinedAt: !15839)
!15846 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !15839)
!15847 = !DILocation(line: 189, column: 35, scope: !14264, inlinedAt: !15839)
!15848 = !DILocation(line: 189, column: 7, scope: !14265, inlinedAt: !15839)
!15849 = !DILocation(line: 191, column: 21, scope: !14269, inlinedAt: !15839)
!15850 = !DILocation(line: 190, column: 4, scope: !14269, inlinedAt: !15839)
!15851 = !DILocation(line: 192, column: 4, scope: !14269, inlinedAt: !15839)
!15852 = distinct !{!15852, !15843, !15853}
!15853 = !DILocation(line: 194, column: 2, scope: !14259, inlinedAt: !15839)
!15854 = !DILocation(line: 196, column: 37, scope: !14243, inlinedAt: !15839)
!15855 = !DILocation(line: 196, column: 2, scope: !14243, inlinedAt: !15839)
!15856 = !DILocation(line: 197, column: 1, scope: !14243, inlinedAt: !15839)
!15857 = !DILocation(line: 1403, column: 2, scope: !15798)
!15858 = !DILocation(line: 0, scope: !14696, inlinedAt: !15859)
!15859 = distinct !DILocation(line: 1404, column: 2, scope: !15798)
!15860 = !DILocation(line: 0, scope: !14705, inlinedAt: !15861)
!15861 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !15859)
!15862 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15861)
!15863 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !15861)
!15864 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !15861)
!15865 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !15859)
!15866 = !DILocation(line: 1405, column: 1, scope: !15798)
!15867 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2434, file: !2434, line: 1459, type: !15868, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15870)
!15868 = !DISubroutineType(types: !15869)
!15869 = !{!765, !14906}
!15870 = !{!15871, !15872, !15873}
!15871 = !DILocalVariable(name: "timeout", arg: 1, scope: !15867, file: !2434, line: 1459, type: !14906)
!15872 = !DILocalVariable(name: "ticks", scope: !15867, file: !2434, line: 1461, type: !103)
!15873 = !DILocalVariable(name: "ret", scope: !15867, file: !2434, line: 1480, type: !765)
!15874 = !DILocation(line: 0, scope: !15867)
!15875 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 1463, column: 2, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15879, file: !2434, line: 1463, column: 2)
!15879 = distinct !DILexicalBlock(scope: !15867, file: !2434, line: 1463, column: 2)
!15880 = !DILocation(line: 0, scope: !14745, inlinedAt: !15876)
!15881 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15877)
!15882 = !DILocation(line: 1463, column: 2, scope: !15879)
!15883 = !DILocation(line: 1463, column: 2, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15878, file: !2434, line: 1463, column: 2)
!15885 = !DILocation(line: 1468, column: 6, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15867, file: !2434, line: 1468, column: 6)
!15887 = !DILocation(line: 1468, column: 6, scope: !15867)
!15888 = !DILocation(line: 1469, column: 20, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15886, file: !2434, line: 1468, column: 40)
!15890 = !DILocation(line: 1469, column: 3, scope: !15889)
!15891 = !DILocation(line: 1473, column: 3, scope: !15889)
!15892 = !DILocation(line: 1478, column: 10, scope: !15867)
!15893 = !DILocation(line: 1480, column: 16, scope: !15867)
!15894 = !DILocation(line: 1485, column: 1, scope: !15867)
!15895 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3233, file: !3233, line: 310, type: !15896, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15898)
!15896 = !DISubroutineType(types: !15897)
!15897 = !{null, !15754}
!15898 = !{!15899}
!15899 = !DILocalVariable(name: "thread", arg: 1, scope: !15895, file: !3233, line: 310, type: !15754)
!15900 = !DILocation(line: 0, scope: !15895)
!15901 = !DILocation(line: 319, column: 2, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15895, file: !3233, line: 319, column: 2)
!15903 = !{i64 2154792882}
!15904 = !DILocation(line: 320, column: 2, scope: !15895)
!15905 = !DILocation(line: 321, column: 1, scope: !15895)
!15906 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2434, file: !2434, line: 1415, type: !15907, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15909)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{!765, !103}
!15909 = !{!15910, !15911, !15912, !15913}
!15910 = !DILocalVariable(name: "ticks", arg: 1, scope: !15906, file: !2434, line: 1415, type: !103)
!15911 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15906, file: !2434, line: 1418, type: !110)
!15912 = !DILocalVariable(name: "timeout", scope: !15906, file: !2434, line: 1430, type: !14906)
!15913 = !DILocalVariable(name: "key", scope: !15906, file: !2434, line: 1437, type: !14012)
!15914 = !DILocation(line: 0, scope: !15906)
!15915 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 1420, column: 2, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15919, file: !2434, line: 1420, column: 2)
!15919 = distinct !DILexicalBlock(scope: !15906, file: !2434, line: 1420, column: 2)
!15920 = !DILocation(line: 0, scope: !14745, inlinedAt: !15916)
!15921 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !15917)
!15922 = !DILocation(line: 1420, column: 2, scope: !15919)
!15923 = !DILocation(line: 1420, column: 2, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15918, file: !2434, line: 1420, column: 2)
!15925 = !DILocation(line: 1425, column: 12, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15906, file: !2434, line: 1425, column: 6)
!15927 = !DILocation(line: 1425, column: 6, scope: !15906)
!15928 = !DILocation(line: 1426, column: 3, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15926, file: !2434, line: 1425, column: 18)
!15930 = !DILocation(line: 1427, column: 3, scope: !15929)
!15931 = !DILocation(line: 1431, column: 24, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15906, file: !2434, line: 1431, column: 6)
!15933 = !DILocation(line: 1431, column: 6, scope: !15906)
!15934 = !DILocation(line: 1432, column: 35, scope: !15935)
!15935 = distinct !DILexicalBlock(scope: !15932, file: !2434, line: 1431, column: 30)
!15936 = !DILocation(line: 1432, column: 27, scope: !15935)
!15937 = !DILocation(line: 1433, column: 2, scope: !15935)
!15938 = !DILocation(line: 1434, column: 27, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15932, file: !2434, line: 1433, column: 9)
!15940 = !DILocation(line: 0, scope: !15932)
!15941 = !DILocation(line: 0, scope: !14020, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 1437, column: 25, scope: !15906)
!15943 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !15942)
!15945 = !DILocation(line: 0, scope: !14029, inlinedAt: !15944)
!15946 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15942)
!15947 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !15942)
!15948 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !15942)
!15949 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !15942)
!15950 = !DILocation(line: 1440, column: 20, scope: !15906)
!15951 = !DILocation(line: 1440, column: 18, scope: !15906)
!15952 = !DILocation(line: 1442, column: 2, scope: !15906)
!15953 = !DILocation(line: 1443, column: 23, scope: !15906)
!15954 = !DILocation(line: 1443, column: 2, scope: !15906)
!15955 = !DILocation(line: 1444, column: 29, scope: !15906)
!15956 = !DILocation(line: 1444, column: 2, scope: !15906)
!15957 = !DILocation(line: 0, scope: !14696, inlinedAt: !15958)
!15958 = distinct !DILocation(line: 1446, column: 8, scope: !15906)
!15959 = !DILocation(line: 0, scope: !14705, inlinedAt: !15960)
!15960 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !15958)
!15961 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15960)
!15962 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !15960)
!15963 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !15960)
!15964 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !15958)
!15965 = !DILocation(line: 1448, column: 2, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !2434, line: 1448, column: 2)
!15967 = distinct !DILexicalBlock(scope: !15906, file: !2434, line: 1448, column: 2)
!15968 = !DILocation(line: 1448, column: 2, scope: !15967)
!15969 = !DILocation(line: 1448, column: 2, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15966, file: !2434, line: 1448, column: 2)
!15971 = !DILocation(line: 1450, column: 10, scope: !15906)
!15972 = !DILocation(line: 1450, column: 45, scope: !15906)
!15973 = !DILocation(line: 1450, column: 43, scope: !15906)
!15974 = !DILocation(line: 1451, column: 6, scope: !15906)
!15975 = !DILocation(line: 1457, column: 1, scope: !15906)
!15976 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13426, file: !13426, line: 1103, type: !13427, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15977)
!15977 = !{!15978}
!15978 = !DILocalVariable(name: "t", arg: 1, scope: !15976, file: !13426, line: 1103, type: !111)
!15979 = !DILocation(line: 0, scope: !15976)
!15980 = !DILocation(line: 0, scope: !14080, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 1106, column: 9, scope: !15976)
!15982 = !DILocation(line: 139, column: 13, scope: !15983, inlinedAt: !15981)
!15983 = distinct !DILexicalBlock(scope: !15984, file: !13426, line: 138, column: 10)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !13426, line: 136, column: 7)
!15985 = distinct !DILexicalBlock(scope: !14101, file: !13426, line: 134, column: 17)
!15986 = !DILocation(line: 1106, column: 2, scope: !15976)
!15987 = distinct !DISubprogram(name: "k_yield", scope: !3233, file: !3233, line: 140, type: !3087, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!15988 = !DILocation(line: 148, column: 2, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15987, file: !3233, line: 148, column: 2)
!15990 = !{i64 2154792202}
!15991 = !DILocation(line: 149, column: 2, scope: !15987)
!15992 = !DILocation(line: 150, column: 1, scope: !15987)
!15993 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2434, file: !2434, line: 1495, type: !15994, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !15996)
!15994 = !DISubroutineType(types: !15995)
!15995 = !{!765, !109}
!15996 = !{!15997, !15998}
!15997 = !DILocalVariable(name: "us", arg: 1, scope: !15993, file: !2434, line: 1495, type: !109)
!15998 = !DILocalVariable(name: "ticks", scope: !15993, file: !2434, line: 1497, type: !765)
!15999 = !DILocation(line: 0, scope: !15993)
!16000 = !DILocation(line: 1501, column: 31, scope: !15993)
!16001 = !DILocation(line: 1501, column: 10, scope: !15993)
!16002 = !DILocation(line: 1502, column: 23, scope: !15993)
!16003 = !DILocation(line: 1502, column: 10, scope: !15993)
!16004 = !DILocation(line: 1506, column: 31, scope: !15993)
!16005 = !DILocation(line: 1506, column: 9, scope: !15993)
!16006 = !DILocation(line: 1506, column: 2, scope: !15993)
!16007 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13426, file: !13426, line: 571, type: !13427, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16008)
!16008 = !{!16009}
!16009 = !DILocalVariable(name: "t", arg: 1, scope: !16007, file: !13426, line: 571, type: !111)
!16010 = !DILocation(line: 0, scope: !16007)
!16011 = !DILocation(line: 0, scope: !14080, inlinedAt: !16012)
!16012 = distinct !DILocation(line: 574, column: 9, scope: !16007)
!16013 = !DILocation(line: 135, column: 5, scope: !15985, inlinedAt: !16012)
!16014 = !DILocation(line: 139, column: 13, scope: !15983, inlinedAt: !16012)
!16015 = !DILocation(line: 574, column: 2, scope: !16007)
!16016 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13426, file: !13426, line: 1187, type: !13427, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16017)
!16017 = !{!16018}
!16018 = !DILocalVariable(name: "t", arg: 1, scope: !16016, file: !13426, line: 1187, type: !111)
!16019 = !DILocation(line: 0, scope: !16016)
!16020 = !DILocation(line: 0, scope: !14080, inlinedAt: !16021)
!16021 = distinct !DILocation(line: 1190, column: 9, scope: !16016)
!16022 = !DILocation(line: 145, column: 13, scope: !16023, inlinedAt: !16021)
!16023 = distinct !DILexicalBlock(scope: !14098, file: !13426, line: 144, column: 10)
!16024 = !DILocation(line: 1190, column: 2, scope: !16016)
!16025 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2434, file: !2434, line: 1517, type: !15896, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16026)
!16026 = !{!16027}
!16027 = !DILocalVariable(name: "thread", arg: 1, scope: !16025, file: !2434, line: 1517, type: !15754)
!16028 = !DILocation(line: 0, scope: !16025)
!16029 = !DILocation(line: 1521, column: 6, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16025, file: !2434, line: 1521, column: 6)
!16031 = !DILocation(line: 1521, column: 6, scope: !16025)
!16032 = !DILocation(line: 1525, column: 6, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16025, file: !2434, line: 1525, column: 6)
!16034 = !DILocation(line: 1525, column: 37, scope: !16033)
!16035 = !DILocation(line: 1525, column: 6, scope: !16025)
!16036 = !DILocation(line: 1527, column: 20, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16038, file: !2434, line: 1527, column: 7)
!16038 = distinct !DILexicalBlock(scope: !16033, file: !2434, line: 1525, column: 42)
!16039 = !DILocation(line: 1527, column: 33, scope: !16037)
!16040 = !DILocation(line: 1527, column: 7, scope: !16038)
!16041 = !DILocation(line: 1532, column: 2, scope: !16025)
!16042 = !DILocation(line: 1533, column: 2, scope: !16025)
!16043 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 1537, column: 7, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16025, file: !2434, line: 1537, column: 6)
!16047 = !DILocation(line: 0, scope: !14745, inlinedAt: !16044)
!16048 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !16045)
!16049 = !DILocation(line: 1537, column: 6, scope: !16025)
!16050 = !DILocation(line: 1538, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16046, file: !2434, line: 1537, column: 25)
!16052 = !DILocation(line: 1539, column: 2, scope: !16051)
!16053 = !DILocation(line: 1540, column: 1, scope: !16025)
!16054 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12807, file: !12807, line: 101, type: !14161, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16055)
!16055 = !{!16056}
!16056 = !DILocalVariable(name: "thread", arg: 1, scope: !16054, file: !12807, line: 101, type: !2326)
!16057 = !DILocation(line: 0, scope: !16054)
!16058 = !DILocation(line: 103, column: 23, scope: !16054)
!16059 = !DILocation(line: 103, column: 36, scope: !16054)
!16060 = !DILocation(line: 103, column: 55, scope: !16054)
!16061 = !DILocation(line: 103, column: 2, scope: !16054)
!16062 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2434, file: !2434, line: 1567, type: !16063, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16065)
!16063 = !DISubroutineType(types: !16064)
!16064 = !{!15754}
!16065 = !{!16066}
!16066 = !DILocalVariable(name: "ret", scope: !16062, file: !2434, line: 1577, type: !15754)
!16067 = !DILocation(line: 1577, column: 30, scope: !16062)
!16068 = !DILocation(line: 0, scope: !16062)
!16069 = !DILocation(line: 1582, column: 2, scope: !16062)
!16070 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2434, file: !2434, line: 1593, type: !7774, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !2024)
!16071 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !16073)
!16073 = distinct !DILocation(line: 1595, column: 10, scope: !16070)
!16074 = !DILocation(line: 0, scope: !14745, inlinedAt: !16072)
!16075 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !16073)
!16076 = !DILocation(line: 1595, column: 27, scope: !16070)
!16077 = !DILocation(line: 1595, column: 41, scope: !16070)
!16078 = !DILocation(line: 1595, column: 30, scope: !16070)
!16079 = !DILocation(line: 1595, column: 2, scope: !16070)
!16080 = distinct !DISubprogram(name: "z_thread_abort", scope: !2434, file: !2434, line: 1725, type: !13978, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16081)
!16081 = !{!16082, !16083}
!16082 = !DILocalVariable(name: "thread", arg: 1, scope: !16080, file: !2434, line: 1725, type: !2326)
!16083 = !DILocalVariable(name: "key", scope: !16080, file: !2434, line: 1727, type: !14012)
!16084 = !DILocation(line: 0, scope: !16080)
!16085 = !DILocation(line: 0, scope: !14020, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 1727, column: 25, scope: !16080)
!16087 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !16086)
!16089 = !DILocation(line: 0, scope: !14029, inlinedAt: !16088)
!16090 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16086)
!16091 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !16086)
!16092 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16086)
!16093 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !16086)
!16094 = !DILocation(line: 1729, column: 20, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16080, file: !2434, line: 1729, column: 6)
!16096 = !DILocation(line: 1729, column: 33, scope: !16095)
!16097 = !DILocation(line: 1729, column: 48, scope: !16095)
!16098 = !DILocation(line: 1729, column: 6, scope: !16080)
!16099 = !DILocation(line: 0, scope: !14054, inlinedAt: !16100)
!16100 = distinct !DILocation(line: 1730, column: 3, scope: !16101)
!16101 = distinct !DILexicalBlock(scope: !16095, file: !2434, line: 1729, column: 54)
!16102 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16100)
!16103 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !16100)
!16104 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16100)
!16105 = !DILocation(line: 0, scope: !14068, inlinedAt: !16106)
!16106 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !16100)
!16107 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !16106)
!16108 = !DILocation(line: 1731, column: 3, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16110, file: !2434, line: 1731, column: 3)
!16110 = distinct !DILexicalBlock(scope: !16111, file: !2434, line: 1731, column: 3)
!16111 = distinct !DILexicalBlock(scope: !16101, file: !2434, line: 1731, column: 3)
!16112 = !DILocation(line: 1736, column: 20, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16080, file: !2434, line: 1736, column: 6)
!16114 = !DILocation(line: 1736, column: 33, scope: !16113)
!16115 = !DILocation(line: 1736, column: 49, scope: !16113)
!16116 = !DILocation(line: 1736, column: 6, scope: !16080)
!16117 = !DILocation(line: 0, scope: !14054, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 1737, column: 3, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16113, file: !2434, line: 1736, column: 56)
!16120 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16118)
!16121 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !16118)
!16122 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16118)
!16123 = !DILocation(line: 0, scope: !14068, inlinedAt: !16124)
!16124 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !16118)
!16125 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !16124)
!16126 = !DILocation(line: 1738, column: 3, scope: !16119)
!16127 = !DILocation(line: 1775, column: 2, scope: !16080)
!16128 = !DILocation(line: 1776, column: 16, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16080, file: !2434, line: 1776, column: 6)
!16130 = !DILocation(line: 1776, column: 13, scope: !16129)
!16131 = !DILocation(line: 1776, column: 25, scope: !16129)
!16132 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !16134)
!16134 = distinct !DILocation(line: 1776, column: 29, scope: !16129)
!16135 = !DILocation(line: 0, scope: !14745, inlinedAt: !16133)
!16136 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !16134)
!16137 = !DILocation(line: 1776, column: 6, scope: !16080)
!16138 = !DILocation(line: 0, scope: !14696, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 1777, column: 3, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16129, file: !2434, line: 1776, column: 47)
!16141 = !DILocation(line: 0, scope: !14705, inlinedAt: !16142)
!16142 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !16139)
!16143 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !16142)
!16144 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !16142)
!16145 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !16142)
!16146 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !16139)
!16147 = !DILocation(line: 1778, column: 3, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2434, line: 1778, column: 3)
!16149 = distinct !DILexicalBlock(scope: !16150, file: !2434, line: 1778, column: 3)
!16150 = distinct !DILexicalBlock(scope: !16140, file: !2434, line: 1778, column: 3)
!16151 = !DILocation(line: 0, scope: !14054, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 1780, column: 2, scope: !16080)
!16153 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16152)
!16154 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !16152)
!16155 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16152)
!16156 = !DILocation(line: 0, scope: !14068, inlinedAt: !16157)
!16157 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !16152)
!16158 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !16157)
!16159 = !DILocation(line: 1781, column: 1, scope: !16080)
!16160 = distinct !DISubprogram(name: "end_thread", scope: !2434, file: !2434, line: 1690, type: !13978, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16161)
!16161 = !{!16162}
!16162 = !DILocalVariable(name: "thread", arg: 1, scope: !16160, file: !2434, line: 1690, type: !2326)
!16163 = !DILocation(line: 0, scope: !16160)
!16164 = !DILocation(line: 1695, column: 20, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16160, file: !2434, line: 1695, column: 6)
!16166 = !DILocation(line: 1695, column: 33, scope: !16165)
!16167 = !DILocation(line: 1695, column: 49, scope: !16165)
!16168 = !DILocation(line: 1695, column: 6, scope: !16160)
!16169 = !DILocation(line: 1697, column: 29, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16165, file: !2434, line: 1695, column: 56)
!16171 = !DILocation(line: 1698, column: 7, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16170, file: !2434, line: 1698, column: 7)
!16173 = !DILocation(line: 1698, column: 7, scope: !16170)
!16174 = !DILocation(line: 0, scope: !14212, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 1699, column: 4, scope: !16176)
!16176 = distinct !DILexicalBlock(scope: !16172, file: !2434, line: 1698, column: 35)
!16177 = !DILocation(line: 266, column: 28, scope: !14212, inlinedAt: !16175)
!16178 = !DILocation(line: 0, scope: !14220, inlinedAt: !16179)
!16179 = distinct !DILocation(line: 268, column: 3, scope: !14224, inlinedAt: !16175)
!16180 = !DILocation(line: 234, column: 2, scope: !14220, inlinedAt: !16179)
!16181 = !DILocation(line: 1700, column: 3, scope: !16176)
!16182 = !DILocation(line: 1701, column: 20, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16170, file: !2434, line: 1701, column: 7)
!16184 = !DILocation(line: 1701, column: 30, scope: !16183)
!16185 = !DILocation(line: 1701, column: 7, scope: !16170)
!16186 = !DILocation(line: 1702, column: 4, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16183, file: !2434, line: 1701, column: 39)
!16188 = !DILocation(line: 1703, column: 3, scope: !16187)
!16189 = !DILocation(line: 1704, column: 9, scope: !16170)
!16190 = !DILocation(line: 1705, column: 23, scope: !16170)
!16191 = !DILocation(line: 1705, column: 3, scope: !16170)
!16192 = !DILocation(line: 1706, column: 3, scope: !16170)
!16193 = !DILocation(line: 1722, column: 2, scope: !16170)
!16194 = !DILocation(line: 1723, column: 1, scope: !16160)
!16195 = distinct !DISubprogram(name: "unpend_all", scope: !2434, file: !2434, line: 1674, type: !16196, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16198)
!16196 = !DISubroutineType(types: !16197)
!16197 = !{null, !2357}
!16198 = !{!16199, !16200}
!16199 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16195, file: !2434, line: 1674, type: !2357)
!16200 = !DILocalVariable(name: "thread", scope: !16195, file: !2434, line: 1676, type: !2326)
!16201 = !DILocation(line: 0, scope: !16195)
!16202 = !DILocation(line: 1678, column: 19, scope: !16195)
!16203 = !DILocation(line: 1678, column: 41, scope: !16195)
!16204 = !DILocation(line: 1678, column: 2, scope: !16195)
!16205 = !DILocation(line: 1679, column: 3, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16195, file: !2434, line: 1678, column: 50)
!16207 = !DILocation(line: 1680, column: 9, scope: !16206)
!16208 = !DILocalVariable(name: "thread", arg: 1, scope: !16209, file: !12827, line: 65, type: !2326)
!16209 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12827, file: !12827, line: 65, type: !16210, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16212)
!16210 = !DISubroutineType(types: !16211)
!16211 = !{null, !2326, !32}
!16212 = !{!16208, !16213}
!16213 = !DILocalVariable(name: "value", arg: 2, scope: !16209, file: !12827, line: 65, type: !32)
!16214 = !DILocation(line: 0, scope: !16209, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 1681, column: 3, scope: !16206)
!16216 = !DILocation(line: 67, column: 15, scope: !16209, inlinedAt: !16215)
!16217 = !DILocation(line: 67, column: 33, scope: !16209, inlinedAt: !16215)
!16218 = !DILocation(line: 1682, column: 3, scope: !16206)
!16219 = distinct !{!16219, !16204, !16220}
!16220 = !DILocation(line: 1683, column: 2, scope: !16195)
!16221 = !DILocation(line: 1684, column: 1, scope: !16195)
!16222 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2434, file: !2434, line: 1794, type: !16223, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16225)
!16223 = !DISubroutineType(types: !16224)
!16224 = !{!109, !2326, !14906}
!16225 = !{!16226, !16227, !16228, !16229}
!16226 = !DILocalVariable(name: "thread", arg: 1, scope: !16222, file: !2434, line: 1794, type: !2326)
!16227 = !DILocalVariable(name: "timeout", arg: 2, scope: !16222, file: !2434, line: 1794, type: !14906)
!16228 = !DILocalVariable(name: "key", scope: !16222, file: !2434, line: 1796, type: !14012)
!16229 = !DILocalVariable(name: "ret", scope: !16222, file: !2434, line: 1797, type: !109)
!16230 = !DILocation(line: 0, scope: !16222)
!16231 = !DILocation(line: 0, scope: !14020, inlinedAt: !16232)
!16232 = distinct !DILocation(line: 1796, column: 25, scope: !16222)
!16233 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !16232)
!16235 = !DILocation(line: 0, scope: !14029, inlinedAt: !16234)
!16236 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16232)
!16237 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !16232)
!16238 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16232)
!16239 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !16232)
!16240 = !DILocation(line: 1801, column: 20, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16222, file: !2434, line: 1801, column: 6)
!16242 = !DILocation(line: 1801, column: 33, scope: !16241)
!16243 = !DILocation(line: 1801, column: 49, scope: !16241)
!16244 = !DILocation(line: 1801, column: 6, scope: !16222)
!16245 = !DILocation(line: 1803, column: 13, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16241, file: !2434, line: 1803, column: 13)
!16247 = !DILocation(line: 1803, column: 13, scope: !16241)
!16248 = !DILocation(line: 1805, column: 24, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16246, file: !2434, line: 1805, column: 13)
!16250 = !DILocation(line: 1805, column: 21, scope: !16249)
!16251 = !DILocation(line: 1805, column: 34, scope: !16249)
!16252 = !DILocation(line: 1806, column: 20, scope: !16249)
!16253 = !DILocation(line: 1806, column: 44, scope: !16249)
!16254 = !DILocation(line: 1806, column: 30, scope: !16249)
!16255 = !DILocation(line: 1805, column: 13, scope: !16246)
!16256 = !DILocation(line: 1031, column: 3, scope: !14745, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 48, column: 10, scope: !14749, inlinedAt: !16258)
!16258 = distinct !DILocation(line: 1809, column: 3, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16260, file: !2434, line: 1809, column: 3)
!16260 = distinct !DILexicalBlock(scope: !16261, file: !2434, line: 1809, column: 3)
!16261 = distinct !DILexicalBlock(scope: !16249, file: !2434, line: 1808, column: 9)
!16262 = !DILocation(line: 0, scope: !14745, inlinedAt: !16257)
!16263 = !DILocation(line: 48, column: 9, scope: !14749, inlinedAt: !16258)
!16264 = !DILocation(line: 1809, column: 3, scope: !16260)
!16265 = !DILocation(line: 1809, column: 3, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16259, file: !2434, line: 1809, column: 3)
!16267 = !DILocation(line: 1810, column: 23, scope: !16261)
!16268 = !DILocation(line: 1810, column: 42, scope: !16261)
!16269 = !DILocation(line: 1810, column: 3, scope: !16261)
!16270 = !DILocation(line: 1811, column: 22, scope: !16261)
!16271 = !DILocation(line: 1811, column: 3, scope: !16261)
!16272 = !DILocation(line: 0, scope: !14696, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 1814, column: 9, scope: !16261)
!16274 = !DILocation(line: 0, scope: !14705, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 195, column: 2, scope: !14696, inlinedAt: !16273)
!16276 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !16275)
!16277 = !DILocation(line: 225, column: 2, scope: !14713, inlinedAt: !16275)
!16278 = !DILocation(line: 225, column: 2, scope: !14716, inlinedAt: !16275)
!16279 = !DILocation(line: 196, column: 9, scope: !14696, inlinedAt: !16273)
!16280 = !DILocation(line: 1817, column: 3, scope: !16261)
!16281 = !DILocation(line: 0, scope: !16241)
!16282 = !DILocation(line: 0, scope: !14054, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 1822, column: 2, scope: !16222)
!16284 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16283)
!16285 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !16283)
!16286 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16283)
!16287 = !DILocation(line: 0, scope: !14068, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !16283)
!16289 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !16288)
!16290 = !DILocation(line: 1823, column: 2, scope: !16222)
!16291 = !DILocation(line: 1824, column: 1, scope: !16222)
!16292 = distinct !DISubprogram(name: "z_sched_wake", scope: !2434, file: !2434, line: 1882, type: !16293, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16295)
!16293 = !DISubroutineType(types: !16294)
!16294 = !{!347, !2357, !109, !107}
!16295 = !{!16296, !16297, !16298, !16299, !16300, !16301, !16303}
!16296 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16292, file: !2434, line: 1882, type: !2357)
!16297 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16292, file: !2434, line: 1882, type: !109)
!16298 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16292, file: !2434, line: 1882, type: !107)
!16299 = !DILocalVariable(name: "thread", scope: !16292, file: !2434, line: 1884, type: !2326)
!16300 = !DILocalVariable(name: "ret", scope: !16292, file: !2434, line: 1885, type: !347)
!16301 = !DILocalVariable(name: "__i", scope: !16302, file: !2434, line: 1887, type: !14012)
!16302 = distinct !DILexicalBlock(scope: !16292, file: !2434, line: 1887, column: 2)
!16303 = !DILocalVariable(name: "__key", scope: !16302, file: !2434, line: 1887, type: !14012)
!16304 = !DILocation(line: 0, scope: !16292)
!16305 = !DILocation(line: 0, scope: !16302)
!16306 = !DILocation(line: 0, scope: !14020, inlinedAt: !16307)
!16307 = distinct !DILocation(line: 1887, column: 2, scope: !16302)
!16308 = !DILocation(line: 55, column: 2, scope: !14029, inlinedAt: !16309)
!16309 = distinct !DILocation(line: 145, column: 10, scope: !14020, inlinedAt: !16307)
!16310 = !DILocation(line: 0, scope: !14029, inlinedAt: !16309)
!16311 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16307)
!16312 = !DILocation(line: 148, column: 2, scope: !14038, inlinedAt: !16307)
!16313 = !DILocation(line: 148, column: 2, scope: !14041, inlinedAt: !16307)
!16314 = !DILocation(line: 160, column: 2, scope: !14020, inlinedAt: !16307)
!16315 = !DILocation(line: 1888, column: 12, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16317, file: !2434, line: 1887, column: 26)
!16317 = distinct !DILexicalBlock(scope: !16302, file: !2434, line: 1887, column: 2)
!16318 = !DILocation(line: 1890, column: 14, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16316, file: !2434, line: 1890, column: 7)
!16320 = !DILocation(line: 1890, column: 7, scope: !16316)
!16321 = !DILocalVariable(name: "thread", arg: 1, scope: !16322, file: !16323, line: 134, type: !2326)
!16322 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16323, file: !16323, line: 134, type: !16324, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16326)
!16323 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16324 = !DISubroutineType(types: !16325)
!16325 = !{null, !2326, !32, !107}
!16326 = !{!16321, !16327, !16328}
!16327 = !DILocalVariable(name: "value", arg: 2, scope: !16322, file: !16323, line: 135, type: !32)
!16328 = !DILocalVariable(name: "data", arg: 3, scope: !16322, file: !16323, line: 136, type: !107)
!16329 = !DILocation(line: 0, scope: !16322, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 1891, column: 4, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16319, file: !2434, line: 1890, column: 23)
!16332 = !DILocation(line: 0, scope: !16209, inlinedAt: !16333)
!16333 = distinct !DILocation(line: 138, column: 2, scope: !16322, inlinedAt: !16330)
!16334 = !DILocation(line: 67, column: 15, scope: !16209, inlinedAt: !16333)
!16335 = !DILocation(line: 67, column: 33, scope: !16209, inlinedAt: !16333)
!16336 = !DILocation(line: 139, column: 15, scope: !16322, inlinedAt: !16330)
!16337 = !DILocation(line: 139, column: 25, scope: !16322, inlinedAt: !16330)
!16338 = !DILocation(line: 1894, column: 4, scope: !16331)
!16339 = !DILocation(line: 1895, column: 10, scope: !16331)
!16340 = !DILocation(line: 1896, column: 4, scope: !16331)
!16341 = !DILocation(line: 1898, column: 3, scope: !16331)
!16342 = !DILocation(line: 0, scope: !14054, inlinedAt: !16343)
!16343 = distinct !DILocation(line: 1887, column: 2, scope: !16317)
!16344 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16343)
!16345 = !DILocation(line: 194, column: 2, scope: !14063, inlinedAt: !16343)
!16346 = !DILocation(line: 194, column: 2, scope: !14066, inlinedAt: !16343)
!16347 = !DILocation(line: 0, scope: !14068, inlinedAt: !16348)
!16348 = distinct !DILocation(line: 215, column: 2, scope: !14054, inlinedAt: !16343)
!16349 = !DILocation(line: 95, column: 2, scope: !14068, inlinedAt: !16348)
!16350 = !DILocation(line: 1901, column: 2, scope: !16292)
!16351 = distinct !DISubprogram(name: "z_sched_wait", scope: !2434, file: !2434, line: 1904, type: !16352, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2323, retainedNodes: !16355)
!16352 = !DISubroutineType(types: !16353)
!16353 = !{!109, !14023, !14012, !2357, !14906, !16354}
!16354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16355 = !{!16356, !16357, !16358, !16359, !16360, !16361}
!16356 = !DILocalVariable(name: "lock", arg: 1, scope: !16351, file: !2434, line: 1904, type: !14023)
!16357 = !DILocalVariable(name: "key", arg: 2, scope: !16351, file: !2434, line: 1904, type: !14012)
!16358 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16351, file: !2434, line: 1905, type: !2357)
!16359 = !DILocalVariable(name: "timeout", arg: 4, scope: !16351, file: !2434, line: 1905, type: !14906)
!16360 = !DILocalVariable(name: "data", arg: 5, scope: !16351, file: !2434, line: 1905, type: !16354)
!16361 = !DILocalVariable(name: "ret", scope: !16351, file: !2434, line: 1907, type: !109)
!16362 = !DILocation(line: 0, scope: !16351)
!16363 = !DILocation(line: 1907, column: 12, scope: !16351)
!16364 = !DILocation(line: 1909, column: 11, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16351, file: !2434, line: 1909, column: 6)
!16366 = !DILocation(line: 1909, column: 6, scope: !16351)
!16367 = !DILocation(line: 1910, column: 11, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16365, file: !2434, line: 1909, column: 20)
!16369 = !DILocation(line: 1910, column: 26, scope: !16368)
!16370 = !DILocation(line: 1910, column: 9, scope: !16368)
!16371 = !DILocation(line: 1911, column: 2, scope: !16368)
!16372 = !DILocation(line: 1912, column: 2, scope: !16351)
!16373 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2460, file: !2460, line: 16, type: !16374, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16385)
!16374 = !DISubroutineType(types: !16375)
!16375 = !{!109, !16376}
!16376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16377, size: 32)
!16377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16378)
!16378 = !{!16379}
!16379 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16377, file: !118, line: 2829, baseType: !16380, size: 64)
!16380 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16381)
!16381 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16382)
!16382 = !{!16383}
!16383 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16381, file: !122, line: 232, baseType: !16384, size: 64)
!16384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2446)
!16385 = !{!16386}
!16386 = !DILocalVariable(name: "condvar", arg: 1, scope: !16373, file: !2460, line: 16, type: !16376)
!16387 = !DILocation(line: 0, scope: !16373)
!16388 = !DILocation(line: 18, column: 25, scope: !16373)
!16389 = !DILocation(line: 18, column: 2, scope: !16373)
!16390 = !DILocation(line: 23, column: 2, scope: !16373)
!16391 = distinct !DISubprogram(name: "z_waitq_init", scope: !13168, file: !13168, line: 47, type: !16392, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16395)
!16392 = !DISubroutineType(types: !16393)
!16393 = !{null, !16394}
!16394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16380, size: 32)
!16395 = !{!16396}
!16396 = !DILocalVariable(name: "w", arg: 1, scope: !16391, file: !13168, line: 47, type: !16394)
!16397 = !DILocation(line: 0, scope: !16391)
!16398 = !DILocation(line: 49, column: 21, scope: !16391)
!16399 = !DILocation(line: 49, column: 2, scope: !16391)
!16400 = !DILocation(line: 50, column: 1, scope: !16391)
!16401 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16402, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16405)
!16402 = !DISubroutineType(types: !16403)
!16403 = !{null, !16404}
!16404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16384, size: 32)
!16405 = !{!16406}
!16406 = !DILocalVariable(name: "list", arg: 1, scope: !16401, file: !127, line: 197, type: !16404)
!16407 = !DILocation(line: 0, scope: !16401)
!16408 = !DILocation(line: 199, column: 8, scope: !16401)
!16409 = !DILocation(line: 199, column: 13, scope: !16401)
!16410 = !DILocation(line: 200, column: 8, scope: !16401)
!16411 = !DILocation(line: 200, column: 13, scope: !16401)
!16412 = !DILocation(line: 201, column: 1, scope: !16401)
!16413 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2460, file: !2460, line: 35, type: !16374, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16414)
!16414 = !{!16415, !16416, !16421}
!16415 = !DILocalVariable(name: "condvar", arg: 1, scope: !16413, file: !2460, line: 35, type: !16376)
!16416 = !DILocalVariable(name: "key", scope: !16413, file: !2460, line: 37, type: !16417)
!16417 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16418)
!16418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16419)
!16419 = !{!16420}
!16420 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16418, file: !253, line: 33, baseType: !109, size: 32)
!16421 = !DILocalVariable(name: "thread", scope: !16413, file: !2460, line: 41, type: !16422)
!16422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16423, size: 32)
!16423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !16424)
!16424 = !{!16425, !16463, !16475, !16476, !16477, !16478, !16479, !16485, !16497}
!16425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16423, file: !158, line: 247, baseType: !16426, size: 384)
!16426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !16427)
!16427 = !{!16428, !16438, !16439, !16440, !16441, !16450, !16451, !16452}
!16428 = !DIDerivedType(tag: DW_TAG_member, scope: !16426, file: !158, line: 60, baseType: !16429, size: 64)
!16429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16426, file: !158, line: 60, size: 64, elements: !16430)
!16430 = !{!16431, !16432}
!16431 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16429, file: !158, line: 61, baseType: !2445, size: 64)
!16432 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16429, file: !158, line: 62, baseType: !16433, size: 64)
!16433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !16434)
!16434 = !{!16435}
!16435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16433, file: !170, line: 50, baseType: !16436, size: 64)
!16436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16437, size: 64, elements: !175)
!16437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16433, size: 32)
!16438 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16426, file: !158, line: 68, baseType: !16394, size: 32, offset: 64)
!16439 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16426, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!16440 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16426, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!16441 = !DIDerivedType(tag: DW_TAG_member, scope: !16426, file: !158, line: 90, baseType: !16442, size: 16, offset: 112)
!16442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16426, file: !158, line: 90, size: 16, elements: !16443)
!16443 = !{!16444, !16449}
!16444 = !DIDerivedType(tag: DW_TAG_member, scope: !16442, file: !158, line: 91, baseType: !16445, size: 16)
!16445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16442, file: !158, line: 91, size: 16, elements: !16446)
!16446 = !{!16447, !16448}
!16447 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16445, file: !158, line: 96, baseType: !190, size: 8)
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16445, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16442, file: !158, line: 100, baseType: !194, size: 16)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16426, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!16451 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16426, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!16452 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16426, file: !158, line: 131, baseType: !16453, size: 192, offset: 192)
!16453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16454)
!16454 = !{!16455, !16456, !16462}
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16453, file: !122, line: 245, baseType: !2445, size: 64)
!16456 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16453, file: !122, line: 246, baseType: !16457, size: 32, offset: 64)
!16457 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16458)
!16458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16459, size: 32)
!16459 = !DISubroutineType(types: !16460)
!16460 = !{null, !16461}
!16461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16453, size: 32)
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16453, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16423, file: !158, line: 250, baseType: !16464, size: 288, offset: 384)
!16464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !16465)
!16465 = !{!16466, !16467, !16468, !16469, !16470, !16471, !16472, !16473, !16474}
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16464, file: !211, line: 26, baseType: !110, size: 32)
!16467 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16464, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16464, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16464, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16464, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16464, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16464, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16464, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16464, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16423, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16423, file: !158, line: 256, baseType: !16380, size: 64, offset: 704)
!16477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16423, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!16478 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16423, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!16479 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16423, file: !158, line: 300, baseType: !16480, size: 96, offset: 1056)
!16480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !16481)
!16481 = !{!16482, !16483, !16484}
!16482 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16480, file: !158, line: 153, baseType: !22, size: 32)
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16480, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16480, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!16485 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16423, file: !158, line: 325, baseType: !16486, size: 32, offset: 1152)
!16486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16487, size: 32)
!16487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16488)
!16488 = !{!16489, !16495, !16496}
!16489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16487, file: !118, line: 5074, baseType: !16490, size: 96)
!16490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !16491)
!16491 = !{!16492, !16493, !16494}
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16490, file: !243, line: 57, baseType: !246, size: 32)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16490, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16490, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16487, file: !118, line: 5075, baseType: !16380, size: 64, offset: 96)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16487, file: !118, line: 5076, baseType: !2461, size: 32, offset: 160)
!16497 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16423, file: !158, line: 343, baseType: !16498, size: 64, offset: 1184)
!16498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !16499)
!16499 = !{!16500, !16501}
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16498, file: !211, line: 63, baseType: !110, size: 32)
!16501 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16498, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!16502 = !DILocation(line: 0, scope: !16413)
!16503 = !DILocalVariable(name: "l", arg: 1, scope: !16504, file: !253, line: 136, type: !16507)
!16504 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16505, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16508)
!16505 = !DISubroutineType(types: !16506)
!16506 = !{!16417, !16507}
!16507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!16508 = !{!16503, !16509}
!16509 = !DILocalVariable(name: "k", scope: !16504, file: !253, line: 139, type: !16417)
!16510 = !DILocation(line: 0, scope: !16504, inlinedAt: !16511)
!16511 = distinct !DILocation(line: 37, column: 25, scope: !16413)
!16512 = !DILocation(line: 55, column: 2, scope: !16513, inlinedAt: !16517)
!16513 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16514)
!16514 = !{!16515, !16516}
!16515 = !DILocalVariable(name: "key", scope: !16513, file: !6097, line: 44, type: !32)
!16516 = !DILocalVariable(name: "tmp", scope: !16513, file: !6097, line: 53, type: !32)
!16517 = distinct !DILocation(line: 145, column: 10, scope: !16504, inlinedAt: !16511)
!16518 = !{i64 2242970}
!16519 = !DILocation(line: 0, scope: !16513, inlinedAt: !16517)
!16520 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16511)
!16521 = distinct !DILexicalBlock(scope: !16522, file: !253, line: 148, column: 2)
!16522 = distinct !DILexicalBlock(scope: !16504, file: !253, line: 148, column: 2)
!16523 = !DILocation(line: 148, column: 2, scope: !16522, inlinedAt: !16511)
!16524 = !DILocation(line: 148, column: 2, scope: !16525, inlinedAt: !16511)
!16525 = distinct !DILexicalBlock(scope: !16521, file: !253, line: 148, column: 2)
!16526 = !DILocation(line: 160, column: 2, scope: !16504, inlinedAt: !16511)
!16527 = !DILocation(line: 41, column: 60, scope: !16413)
!16528 = !DILocation(line: 41, column: 28, scope: !16413)
!16529 = !DILocation(line: 43, column: 13, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16413, file: !2460, line: 43, column: 6)
!16531 = !DILocation(line: 43, column: 6, scope: !16413)
!16532 = !DILocalVariable(name: "thread", arg: 1, scope: !16533, file: !12827, line: 65, type: !16422)
!16533 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12827, file: !12827, line: 65, type: !16534, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16536)
!16534 = !DISubroutineType(types: !16535)
!16535 = !{null, !16422, !32}
!16536 = !{!16532, !16537}
!16537 = !DILocalVariable(name: "value", arg: 2, scope: !16533, file: !12827, line: 65, type: !32)
!16538 = !DILocation(line: 0, scope: !16533, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 46, column: 3, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16530, file: !2460, line: 43, column: 22)
!16541 = !DILocation(line: 67, column: 15, scope: !16533, inlinedAt: !16539)
!16542 = !DILocation(line: 67, column: 33, scope: !16533, inlinedAt: !16539)
!16543 = !DILocation(line: 47, column: 3, scope: !16540)
!16544 = !DILocation(line: 48, column: 3, scope: !16540)
!16545 = !DILocation(line: 49, column: 2, scope: !16540)
!16546 = !DILocalVariable(name: "key", arg: 2, scope: !16547, file: !253, line: 190, type: !16417)
!16547 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16548, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16550)
!16548 = !DISubroutineType(types: !16549)
!16549 = !{null, !16507, !16417}
!16550 = !{!16551, !16546}
!16551 = !DILocalVariable(name: "l", arg: 1, scope: !16547, file: !253, line: 189, type: !16507)
!16552 = !DILocation(line: 0, scope: !16547, inlinedAt: !16553)
!16553 = distinct !DILocation(line: 50, column: 3, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16530, file: !2460, line: 49, column: 9)
!16555 = !DILocation(line: 194, column: 2, scope: !16556, inlinedAt: !16553)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !253, line: 194, column: 2)
!16557 = distinct !DILexicalBlock(scope: !16547, file: !253, line: 194, column: 2)
!16558 = !DILocation(line: 194, column: 2, scope: !16557, inlinedAt: !16553)
!16559 = !DILocation(line: 194, column: 2, scope: !16560, inlinedAt: !16553)
!16560 = distinct !DILexicalBlock(scope: !16556, file: !253, line: 194, column: 2)
!16561 = !DILocalVariable(name: "key", arg: 1, scope: !16562, file: !6097, line: 84, type: !32)
!16562 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16563)
!16563 = !{!16561}
!16564 = !DILocation(line: 0, scope: !16562, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 215, column: 2, scope: !16547, inlinedAt: !16553)
!16566 = !DILocation(line: 95, column: 2, scope: !16562, inlinedAt: !16565)
!16567 = !{i64 2243787}
!16568 = !DILocation(line: 55, column: 2, scope: !16413)
!16569 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2460, file: !2460, line: 67, type: !16374, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16570)
!16570 = !{!16571, !16572, !16573, !16574}
!16571 = !DILocalVariable(name: "condvar", arg: 1, scope: !16569, file: !2460, line: 67, type: !16376)
!16572 = !DILocalVariable(name: "pending_thread", scope: !16569, file: !2460, line: 69, type: !16422)
!16573 = !DILocalVariable(name: "key", scope: !16569, file: !2460, line: 70, type: !16417)
!16574 = !DILocalVariable(name: "woken", scope: !16569, file: !2460, line: 71, type: !109)
!16575 = !DILocation(line: 0, scope: !16569)
!16576 = !DILocation(line: 0, scope: !16504, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 73, column: 8, scope: !16569)
!16578 = !DILocation(line: 55, column: 2, scope: !16513, inlinedAt: !16579)
!16579 = distinct !DILocation(line: 145, column: 10, scope: !16504, inlinedAt: !16577)
!16580 = !DILocation(line: 0, scope: !16513, inlinedAt: !16579)
!16581 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16577)
!16582 = !DILocation(line: 148, column: 2, scope: !16522, inlinedAt: !16577)
!16583 = !DILocation(line: 148, column: 2, scope: !16525, inlinedAt: !16577)
!16584 = !DILocation(line: 160, column: 2, scope: !16504, inlinedAt: !16577)
!16585 = !DILocation(line: 78, column: 27, scope: !16569)
!16586 = !DILocation(line: 78, column: 68, scope: !16569)
!16587 = !DILocation(line: 78, column: 2, scope: !16569)
!16588 = !DILocation(line: 80, column: 8, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16569, file: !2460, line: 79, column: 15)
!16590 = !DILocation(line: 0, scope: !16533, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 81, column: 3, scope: !16589)
!16592 = !DILocation(line: 67, column: 15, scope: !16533, inlinedAt: !16591)
!16593 = !DILocation(line: 67, column: 33, scope: !16533, inlinedAt: !16591)
!16594 = !DILocation(line: 82, column: 3, scope: !16589)
!16595 = distinct !{!16595, !16587, !16596}
!16596 = !DILocation(line: 83, column: 2, scope: !16569)
!16597 = !DILocation(line: 87, column: 2, scope: !16569)
!16598 = !DILocation(line: 89, column: 2, scope: !16569)
!16599 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2460, file: !2460, line: 100, type: !16600, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16613)
!16600 = !DISubroutineType(types: !16601)
!16601 = !{!109, !16376, !16602, !16609}
!16602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16603, size: 32)
!16603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16604)
!16604 = !{!16605, !16606, !16607, !16608}
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16603, file: !118, line: 2722, baseType: !16380, size: 64)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16603, file: !118, line: 2724, baseType: !16422, size: 32, offset: 64)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16603, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16608 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16603, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16609 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16610)
!16610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16611)
!16611 = !{!16612}
!16612 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16610, file: !104, line: 66, baseType: !103, size: 64)
!16613 = !{!16614, !16615, !16616, !16617, !16618}
!16614 = !DILocalVariable(name: "condvar", arg: 1, scope: !16599, file: !2460, line: 100, type: !16376)
!16615 = !DILocalVariable(name: "mutex", arg: 2, scope: !16599, file: !2460, line: 100, type: !16602)
!16616 = !DILocalVariable(name: "timeout", arg: 3, scope: !16599, file: !2460, line: 101, type: !16609)
!16617 = !DILocalVariable(name: "key", scope: !16599, file: !2460, line: 103, type: !16417)
!16618 = !DILocalVariable(name: "ret", scope: !16599, file: !2460, line: 104, type: !109)
!16619 = !DILocation(line: 0, scope: !16599)
!16620 = !DILocation(line: 0, scope: !16504, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 108, column: 8, scope: !16599)
!16622 = !DILocation(line: 55, column: 2, scope: !16513, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 145, column: 10, scope: !16504, inlinedAt: !16621)
!16624 = !DILocation(line: 0, scope: !16513, inlinedAt: !16623)
!16625 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16621)
!16626 = !DILocation(line: 148, column: 2, scope: !16522, inlinedAt: !16621)
!16627 = !DILocation(line: 148, column: 2, scope: !16525, inlinedAt: !16621)
!16628 = !DILocation(line: 160, column: 2, scope: !16504, inlinedAt: !16621)
!16629 = !DILocation(line: 109, column: 2, scope: !16599)
!16630 = !DILocation(line: 111, column: 42, scope: !16599)
!16631 = !DILocation(line: 111, column: 8, scope: !16599)
!16632 = !DILocation(line: 112, column: 2, scope: !16599)
!16633 = !DILocation(line: 116, column: 2, scope: !16599)
!16634 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3233, file: !3233, line: 944, type: !16635, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16637)
!16635 = !DISubroutineType(types: !16636)
!16636 = !{!109, !16602}
!16637 = !{!16638}
!16638 = !DILocalVariable(name: "mutex", arg: 1, scope: !16634, file: !3233, line: 944, type: !16602)
!16639 = !DILocation(line: 0, scope: !16634)
!16640 = !DILocation(line: 952, column: 2, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16634, file: !3233, line: 952, column: 2)
!16642 = !{i64 2154751370}
!16643 = !DILocation(line: 953, column: 9, scope: !16634)
!16644 = !DILocation(line: 953, column: 2, scope: !16634)
!16645 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3233, file: !3233, line: 927, type: !16646, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2441, retainedNodes: !16648)
!16646 = !DISubroutineType(types: !16647)
!16647 = !{!109, !16602, !16609}
!16648 = !{!16649, !16650}
!16649 = !DILocalVariable(name: "mutex", arg: 1, scope: !16645, file: !3233, line: 927, type: !16602)
!16650 = !DILocalVariable(name: "timeout", arg: 2, scope: !16645, file: !3233, line: 927, type: !16609)
!16651 = !DILocation(line: 0, scope: !16645)
!16652 = !DILocation(line: 936, column: 2, scope: !16653)
!16653 = distinct !DILexicalBlock(scope: !16645, file: !3233, line: 936, column: 2)
!16654 = !{i64 2154751302}
!16655 = !DILocation(line: 937, column: 9, scope: !16645)
!16656 = !DILocation(line: 937, column: 2, scope: !16645)
!16657 = distinct !DISubprogram(name: "z_data_copy", scope: !16658, file: !16658, line: 22, type: !3087, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2024)
!16658 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16659 = !DILocation(line: 24, column: 2, scope: !16657)
!16660 = !DILocation(line: 27, column: 2, scope: !16657)
!16661 = !DILocation(line: 71, column: 1, scope: !16657)
!16662 = distinct !DISubprogram(name: "z_add_timeout", scope: !2496, file: !2496, line: 88, type: !16663, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16669)
!16663 = !DISubroutineType(types: !16664)
!16664 = !{null, !2469, !2488, !16665}
!16665 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16666)
!16666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16667)
!16667 = !{!16668}
!16668 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16666, file: !104, line: 66, baseType: !103, size: 64)
!16669 = !{!16670, !16671, !16672, !16673, !16679, !16680, !16683, !16686}
!16670 = !DILocalVariable(name: "to", arg: 1, scope: !16662, file: !2496, line: 88, type: !2469)
!16671 = !DILocalVariable(name: "fn", arg: 2, scope: !16662, file: !2496, line: 88, type: !2488)
!16672 = !DILocalVariable(name: "timeout", arg: 3, scope: !16662, file: !2496, line: 89, type: !16665)
!16673 = !DILocalVariable(name: "__i", scope: !16674, file: !2496, line: 102, type: !16675)
!16674 = distinct !DILexicalBlock(scope: !16662, file: !2496, line: 102, column: 2)
!16675 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16676)
!16676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16677)
!16677 = !{!16678}
!16678 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16676, file: !253, line: 33, baseType: !109, size: 32)
!16679 = !DILocalVariable(name: "__key", scope: !16674, file: !2496, line: 102, type: !16675)
!16680 = !DILocalVariable(name: "t", scope: !16681, file: !2496, line: 103, type: !2469)
!16681 = distinct !DILexicalBlock(scope: !16682, file: !2496, line: 102, column: 24)
!16682 = distinct !DILexicalBlock(scope: !16674, file: !2496, line: 102, column: 2)
!16683 = !DILocalVariable(name: "ticks", scope: !16684, file: !2496, line: 107, type: !103)
!16684 = distinct !DILexicalBlock(scope: !16685, file: !2496, line: 106, column: 39)
!16685 = distinct !DILexicalBlock(scope: !16681, file: !2496, line: 105, column: 7)
!16686 = !DILocalVariable(name: "next_time", scope: !16687, file: !2496, line: 137, type: !765)
!16687 = distinct !DILexicalBlock(scope: !16688, file: !2496, line: 127, column: 22)
!16688 = distinct !DILexicalBlock(scope: !16681, file: !2496, line: 127, column: 7)
!16689 = !DILocation(line: 0, scope: !16662)
!16690 = !DILocation(line: 91, column: 6, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16662, file: !2496, line: 91, column: 6)
!16692 = !DILocation(line: 91, column: 6, scope: !16662)
!16693 = !DILocation(line: 99, column: 2, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16695, file: !2496, line: 99, column: 2)
!16695 = distinct !DILexicalBlock(scope: !16662, file: !2496, line: 99, column: 2)
!16696 = !DILocation(line: 99, column: 2, scope: !16695)
!16697 = !DILocation(line: 99, column: 2, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16694, file: !2496, line: 99, column: 2)
!16699 = !DILocation(line: 100, column: 6, scope: !16662)
!16700 = !DILocation(line: 100, column: 9, scope: !16662)
!16701 = !DILocation(line: 0, scope: !16674)
!16702 = !DILocalVariable(name: "l", arg: 1, scope: !16703, file: !253, line: 136, type: !16706)
!16703 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16704, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16707)
!16704 = !DISubroutineType(types: !16705)
!16705 = !{!16675, !16706}
!16706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 32)
!16707 = !{!16702, !16708}
!16708 = !DILocalVariable(name: "k", scope: !16703, file: !253, line: 139, type: !16675)
!16709 = !DILocation(line: 0, scope: !16703, inlinedAt: !16710)
!16710 = distinct !DILocation(line: 102, column: 2, scope: !16674)
!16711 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !16716)
!16712 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6097, file: !6097, line: 42, type: !6098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16713)
!16713 = !{!16714, !16715}
!16714 = !DILocalVariable(name: "key", scope: !16712, file: !6097, line: 44, type: !32)
!16715 = !DILocalVariable(name: "tmp", scope: !16712, file: !6097, line: 53, type: !32)
!16716 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !16710)
!16717 = !{i64 2248576}
!16718 = !DILocation(line: 0, scope: !16712, inlinedAt: !16716)
!16719 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !16710)
!16720 = distinct !DILexicalBlock(scope: !16721, file: !253, line: 148, column: 2)
!16721 = distinct !DILexicalBlock(scope: !16703, file: !253, line: 148, column: 2)
!16722 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !16710)
!16723 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !16710)
!16724 = distinct !DILexicalBlock(scope: !16720, file: !253, line: 148, column: 2)
!16725 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !16710)
!16726 = !DILocation(line: 106, column: 33, scope: !16685)
!16727 = !DILocation(line: 105, column: 7, scope: !16681)
!16728 = !DILocation(line: 107, column: 50, scope: !16684)
!16729 = !DILocation(line: 107, column: 48, scope: !16684)
!16730 = !DILocation(line: 0, scope: !16684)
!16731 = !DILocation(line: 109, column: 17, scope: !16684)
!16732 = !DILocation(line: 110, column: 3, scope: !16684)
!16733 = !DILocation(line: 111, column: 31, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16685, file: !2496, line: 110, column: 10)
!16735 = !DILocation(line: 111, column: 37, scope: !16734)
!16736 = !DILocation(line: 111, column: 35, scope: !16734)
!16737 = !DILocation(line: 0, scope: !16685)
!16738 = !DILocation(line: 109, column: 8, scope: !16684)
!16739 = !DILocation(line: 109, column: 15, scope: !16684)
!16740 = !DILocation(line: 114, column: 12, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16681, file: !2496, line: 114, column: 3)
!16742 = !DILocation(line: 0, scope: !16681)
!16743 = !DILocation(line: 114, column: 3, scope: !16741)
!16744 = !DILocation(line: 115, column: 24, scope: !16745)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !2496, line: 115, column: 8)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !2496, line: 114, column: 45)
!16747 = distinct !DILexicalBlock(scope: !16741, file: !2496, line: 114, column: 3)
!16748 = !DILocation(line: 115, column: 11, scope: !16745)
!16749 = !DILocation(line: 115, column: 18, scope: !16745)
!16750 = !DILocation(line: 115, column: 8, scope: !16746)
!16751 = !DILocation(line: 116, column: 15, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16745, file: !2496, line: 115, column: 32)
!16753 = !DILocation(line: 117, column: 26, scope: !16752)
!16754 = !DILocation(line: 117, column: 5, scope: !16752)
!16755 = !DILocation(line: 123, column: 7, scope: !16681)
!16756 = !DILocation(line: 120, column: 15, scope: !16746)
!16757 = !DILocation(line: 114, column: 36, scope: !16747)
!16758 = distinct !{!16758, !16743, !16759}
!16759 = !DILocation(line: 121, column: 3, scope: !16741)
!16760 = !DILocation(line: 124, column: 4, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16762, file: !2496, line: 123, column: 18)
!16762 = distinct !DILexicalBlock(scope: !16681, file: !2496, line: 123, column: 7)
!16763 = !DILocation(line: 125, column: 3, scope: !16761)
!16764 = !DILocation(line: 127, column: 13, scope: !16688)
!16765 = !DILocation(line: 127, column: 10, scope: !16688)
!16766 = !DILocation(line: 127, column: 7, scope: !16681)
!16767 = !DILocation(line: 137, column: 24, scope: !16687)
!16768 = !DILocation(line: 0, scope: !16687)
!16769 = !DILocation(line: 139, column: 18, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16687, file: !2496, line: 139, column: 8)
!16771 = !DILocation(line: 139, column: 23, scope: !16770)
!16772 = !DILocation(line: 141, column: 5, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16770, file: !2496, line: 140, column: 48)
!16774 = !DILocation(line: 142, column: 4, scope: !16773)
!16775 = !DILocalVariable(name: "key", arg: 2, scope: !16776, file: !253, line: 190, type: !16675)
!16776 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16777, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16779)
!16777 = !DISubroutineType(types: !16778)
!16778 = !{null, !16706, !16675}
!16779 = !{!16780, !16775}
!16780 = !DILocalVariable(name: "l", arg: 1, scope: !16776, file: !253, line: 189, type: !16706)
!16781 = !DILocation(line: 0, scope: !16776, inlinedAt: !16782)
!16782 = distinct !DILocation(line: 102, column: 2, scope: !16682)
!16783 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !16782)
!16784 = distinct !DILexicalBlock(scope: !16785, file: !253, line: 194, column: 2)
!16785 = distinct !DILexicalBlock(scope: !16776, file: !253, line: 194, column: 2)
!16786 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !16782)
!16787 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !16782)
!16788 = distinct !DILexicalBlock(scope: !16784, file: !253, line: 194, column: 2)
!16789 = !DILocalVariable(name: "key", arg: 1, scope: !16790, file: !6097, line: 84, type: !32)
!16790 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6097, file: !6097, line: 84, type: !6108, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16791)
!16791 = !{!16789}
!16792 = !DILocation(line: 0, scope: !16790, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !16782)
!16794 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !16793)
!16795 = !{i64 2249393}
!16796 = !DILocation(line: 148, column: 1, scope: !16662)
!16797 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16798, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16802)
!16798 = !DISubroutineType(types: !16799)
!16799 = !{!347, !16800}
!16800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16801, size: 32)
!16801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2473)
!16802 = !{!16803}
!16803 = !DILocalVariable(name: "node", arg: 1, scope: !16797, file: !127, line: 225, type: !16800)
!16804 = !DILocation(line: 0, scope: !16797)
!16805 = !DILocation(line: 227, column: 15, scope: !16797)
!16806 = !DILocation(line: 227, column: 20, scope: !16797)
!16807 = !DILocation(line: 227, column: 2, scope: !16797)
!16808 = distinct !DISubprogram(name: "elapsed", scope: !2496, file: !2496, line: 62, type: !16809, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !2024)
!16809 = !DISubroutineType(types: !16810)
!16810 = !{!765}
!16811 = !DILocation(line: 64, column: 9, scope: !16808)
!16812 = !DILocation(line: 64, column: 28, scope: !16808)
!16813 = !DILocation(line: 64, column: 35, scope: !16808)
!16814 = !DILocation(line: 64, column: 2, scope: !16808)
!16815 = distinct !DISubprogram(name: "first", scope: !2496, file: !2496, line: 39, type: !16816, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16818)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{!2469}
!16818 = !{!16819}
!16819 = !DILocalVariable(name: "t", scope: !16815, file: !2496, line: 41, type: !16820)
!16820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!16821 = !DILocation(line: 41, column: 19, scope: !16815)
!16822 = !DILocation(line: 0, scope: !16815)
!16823 = !DILocation(line: 43, column: 9, scope: !16815)
!16824 = !DILocation(line: 43, column: 2, scope: !16815)
!16825 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16826, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16828)
!16826 = !DISubroutineType(types: !16827)
!16827 = !{null, !16820, !16820}
!16828 = !{!16829, !16830, !16831}
!16829 = !DILocalVariable(name: "successor", arg: 1, scope: !16825, file: !127, line: 443, type: !16820)
!16830 = !DILocalVariable(name: "node", arg: 2, scope: !16825, file: !127, line: 443, type: !16820)
!16831 = !DILocalVariable(name: "prev", scope: !16825, file: !127, line: 445, type: !16832)
!16832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16820)
!16833 = !DILocation(line: 0, scope: !16825)
!16834 = !DILocation(line: 445, column: 39, scope: !16825)
!16835 = !DILocation(line: 447, column: 8, scope: !16825)
!16836 = !DILocation(line: 447, column: 13, scope: !16825)
!16837 = !DILocation(line: 448, column: 8, scope: !16825)
!16838 = !DILocation(line: 448, column: 13, scope: !16825)
!16839 = !DILocation(line: 449, column: 8, scope: !16825)
!16840 = !DILocation(line: 449, column: 13, scope: !16825)
!16841 = !DILocation(line: 450, column: 18, scope: !16825)
!16842 = !DILocation(line: 451, column: 1, scope: !16825)
!16843 = distinct !DISubprogram(name: "next", scope: !2496, file: !2496, line: 46, type: !16844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16846)
!16844 = !DISubroutineType(types: !16845)
!16845 = !{!2469, !2469}
!16846 = !{!16847, !16848}
!16847 = !DILocalVariable(name: "t", arg: 1, scope: !16843, file: !2496, line: 46, type: !2469)
!16848 = !DILocalVariable(name: "n", scope: !16843, file: !2496, line: 48, type: !16820)
!16849 = !DILocation(line: 0, scope: !16843)
!16850 = !DILocation(line: 48, column: 58, scope: !16843)
!16851 = !DILocation(line: 48, column: 19, scope: !16843)
!16852 = !DILocation(line: 50, column: 9, scope: !16843)
!16853 = !DILocation(line: 50, column: 2, scope: !16843)
!16854 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16855, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16858)
!16855 = !DISubroutineType(types: !16856)
!16856 = !{null, !16857, !16820}
!16857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!16858 = !{!16859, !16860, !16861}
!16859 = !DILocalVariable(name: "list", arg: 1, scope: !16854, file: !127, line: 404, type: !16857)
!16860 = !DILocalVariable(name: "node", arg: 2, scope: !16854, file: !127, line: 404, type: !16820)
!16861 = !DILocalVariable(name: "tail", scope: !16854, file: !127, line: 406, type: !16832)
!16862 = !DILocation(line: 0, scope: !16854)
!16863 = !DILocation(line: 406, column: 34, scope: !16854)
!16864 = !DILocation(line: 408, column: 8, scope: !16854)
!16865 = !DILocation(line: 408, column: 13, scope: !16854)
!16866 = !DILocation(line: 409, column: 8, scope: !16854)
!16867 = !DILocation(line: 409, column: 13, scope: !16854)
!16868 = !DILocation(line: 411, column: 8, scope: !16854)
!16869 = !DILocation(line: 411, column: 13, scope: !16854)
!16870 = !DILocation(line: 412, column: 13, scope: !16854)
!16871 = !DILocation(line: 413, column: 1, scope: !16854)
!16872 = distinct !DISubprogram(name: "next_timeout", scope: !2496, file: !2496, line: 67, type: !16809, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16873)
!16873 = !{!16874, !16875, !16876}
!16874 = !DILocalVariable(name: "to", scope: !16872, file: !2496, line: 69, type: !2469)
!16875 = !DILocalVariable(name: "ticks_elapsed", scope: !16872, file: !2496, line: 70, type: !765)
!16876 = !DILocalVariable(name: "ret", scope: !16872, file: !2496, line: 71, type: !765)
!16877 = !DILocation(line: 69, column: 24, scope: !16872)
!16878 = !DILocation(line: 0, scope: !16872)
!16879 = !DILocation(line: 70, column: 26, scope: !16872)
!16880 = !DILocation(line: 73, column: 10, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16872, file: !2496, line: 73, column: 6)
!16882 = !DILocation(line: 73, column: 19, scope: !16881)
!16883 = !DILocation(line: 74, column: 21, scope: !16881)
!16884 = !DILocation(line: 74, column: 30, scope: !16881)
!16885 = !DILocation(line: 74, column: 28, scope: !16881)
!16886 = !DILocation(line: 74, column: 45, scope: !16881)
!16887 = !DILocation(line: 73, column: 6, scope: !16872)
!16888 = !DILocation(line: 77, column: 9, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16881, file: !2496, line: 76, column: 9)
!16890 = !DILocation(line: 0, scope: !16881)
!16891 = !DILocation(line: 81, column: 20, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16872, file: !2496, line: 81, column: 6)
!16893 = !DILocation(line: 81, column: 6, scope: !16892)
!16894 = !DILocation(line: 81, column: 32, scope: !16892)
!16895 = !DILocation(line: 85, column: 2, scope: !16872)
!16896 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16897, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16899)
!16897 = !DISubroutineType(types: !16898)
!16898 = !{!16820, !16857, !16820}
!16899 = !{!16900, !16901}
!16900 = !DILocalVariable(name: "list", arg: 1, scope: !16896, file: !127, line: 341, type: !16857)
!16901 = !DILocalVariable(name: "node", arg: 2, scope: !16896, file: !127, line: 342, type: !16820)
!16902 = !DILocation(line: 0, scope: !16896)
!16903 = !DILocation(line: 344, column: 15, scope: !16896)
!16904 = !DILocation(line: 344, column: 9, scope: !16896)
!16905 = !DILocation(line: 344, column: 26, scope: !16896)
!16906 = !DILocation(line: 344, column: 2, scope: !16896)
!16907 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16897, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16908)
!16908 = !{!16909, !16910}
!16909 = !DILocalVariable(name: "list", arg: 1, scope: !16907, file: !127, line: 325, type: !16857)
!16910 = !DILocalVariable(name: "node", arg: 2, scope: !16907, file: !127, line: 326, type: !16820)
!16911 = !DILocation(line: 0, scope: !16907)
!16912 = !DILocation(line: 328, column: 24, scope: !16907)
!16913 = !DILocation(line: 328, column: 15, scope: !16907)
!16914 = !DILocation(line: 328, column: 9, scope: !16907)
!16915 = !DILocation(line: 328, column: 45, scope: !16907)
!16916 = !DILocation(line: 328, column: 2, scope: !16907)
!16917 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16918, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16920)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{!16820, !16857}
!16920 = !{!16921}
!16921 = !DILocalVariable(name: "list", arg: 1, scope: !16917, file: !127, line: 294, type: !16857)
!16922 = !DILocation(line: 0, scope: !16917)
!16923 = !DILocation(line: 296, column: 9, scope: !16917)
!16924 = !DILocation(line: 296, column: 2, scope: !16917)
!16925 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16926, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16928)
!16926 = !DISubroutineType(types: !16927)
!16927 = !{!347, !16857}
!16928 = !{!16929}
!16929 = !DILocalVariable(name: "list", arg: 1, scope: !16925, file: !127, line: 266, type: !16857)
!16930 = !DILocation(line: 0, scope: !16925)
!16931 = !DILocation(line: 268, column: 15, scope: !16925)
!16932 = !DILocation(line: 268, column: 20, scope: !16925)
!16933 = !DILocation(line: 268, column: 2, scope: !16925)
!16934 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2496, file: !2496, line: 150, type: !16935, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16937)
!16935 = !DISubroutineType(types: !16936)
!16936 = !{!109, !2469}
!16937 = !{!16938, !16939, !16940, !16942}
!16938 = !DILocalVariable(name: "to", arg: 1, scope: !16934, file: !2496, line: 150, type: !2469)
!16939 = !DILocalVariable(name: "ret", scope: !16934, file: !2496, line: 152, type: !109)
!16940 = !DILocalVariable(name: "__i", scope: !16941, file: !2496, line: 154, type: !16675)
!16941 = distinct !DILexicalBlock(scope: !16934, file: !2496, line: 154, column: 2)
!16942 = !DILocalVariable(name: "__key", scope: !16941, file: !2496, line: 154, type: !16675)
!16943 = !DILocation(line: 0, scope: !16934)
!16944 = !DILocation(line: 0, scope: !16941)
!16945 = !DILocation(line: 0, scope: !16703, inlinedAt: !16946)
!16946 = distinct !DILocation(line: 154, column: 2, scope: !16941)
!16947 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !16946)
!16949 = !DILocation(line: 0, scope: !16712, inlinedAt: !16948)
!16950 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !16946)
!16951 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !16946)
!16952 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !16946)
!16953 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !16946)
!16954 = !DILocation(line: 155, column: 7, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2496, line: 155, column: 7)
!16956 = distinct !DILexicalBlock(scope: !16957, file: !2496, line: 154, column: 24)
!16957 = distinct !DILexicalBlock(scope: !16941, file: !2496, line: 154, column: 2)
!16958 = !DILocation(line: 155, column: 7, scope: !16956)
!16959 = !DILocation(line: 156, column: 4, scope: !16960)
!16960 = distinct !DILexicalBlock(scope: !16955, file: !2496, line: 155, column: 39)
!16961 = !DILocation(line: 158, column: 3, scope: !16960)
!16962 = !DILocation(line: 0, scope: !16776, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 154, column: 2, scope: !16957)
!16964 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !16963)
!16965 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !16963)
!16966 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !16963)
!16967 = !DILocation(line: 0, scope: !16790, inlinedAt: !16968)
!16968 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !16963)
!16969 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !16968)
!16970 = !DILocation(line: 161, column: 2, scope: !16934)
!16971 = distinct !DISubprogram(name: "remove_timeout", scope: !2496, file: !2496, line: 53, type: !2490, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16972)
!16972 = !{!16973}
!16973 = !DILocalVariable(name: "t", arg: 1, scope: !16971, file: !2496, line: 53, type: !2469)
!16974 = !DILocation(line: 0, scope: !16971)
!16975 = !DILocation(line: 55, column: 6, scope: !16976)
!16976 = distinct !DILexicalBlock(scope: !16971, file: !2496, line: 55, column: 6)
!16977 = !DILocation(line: 55, column: 14, scope: !16976)
!16978 = !DILocation(line: 55, column: 6, scope: !16971)
!16979 = !DILocation(line: 56, column: 25, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16976, file: !2496, line: 55, column: 23)
!16981 = !DILocation(line: 56, column: 12, scope: !16980)
!16982 = !DILocation(line: 56, column: 19, scope: !16980)
!16983 = !DILocation(line: 57, column: 2, scope: !16980)
!16984 = !DILocation(line: 59, column: 23, scope: !16971)
!16985 = !DILocation(line: 59, column: 2, scope: !16971)
!16986 = !DILocation(line: 60, column: 1, scope: !16971)
!16987 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !16988, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !16990)
!16988 = !DISubroutineType(types: !16989)
!16989 = !{null, !16820}
!16990 = !{!16991, !16992, !16993}
!16991 = !DILocalVariable(name: "node", arg: 1, scope: !16987, file: !127, line: 496, type: !16820)
!16992 = !DILocalVariable(name: "prev", scope: !16987, file: !127, line: 498, type: !16832)
!16993 = !DILocalVariable(name: "next", scope: !16987, file: !127, line: 499, type: !16832)
!16994 = !DILocation(line: 0, scope: !16987)
!16995 = !DILocation(line: 498, column: 34, scope: !16987)
!16996 = !DILocation(line: 499, column: 34, scope: !16987)
!16997 = !DILocation(line: 501, column: 8, scope: !16987)
!16998 = !DILocation(line: 501, column: 13, scope: !16987)
!16999 = !DILocation(line: 502, column: 8, scope: !16987)
!17000 = !DILocation(line: 502, column: 13, scope: !16987)
!17001 = !DILocation(line: 503, column: 2, scope: !16987)
!17002 = !DILocation(line: 504, column: 1, scope: !16987)
!17003 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !16988, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17004)
!17004 = !{!17005}
!17005 = !DILocalVariable(name: "node", arg: 1, scope: !17003, file: !127, line: 211, type: !16820)
!17006 = !DILocation(line: 0, scope: !17003)
!17007 = !DILocation(line: 213, column: 8, scope: !17003)
!17008 = !DILocation(line: 213, column: 13, scope: !17003)
!17009 = !DILocation(line: 214, column: 8, scope: !17003)
!17010 = !DILocation(line: 214, column: 13, scope: !17003)
!17011 = !DILocation(line: 215, column: 1, scope: !17003)
!17012 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2496, file: !2496, line: 183, type: !17013, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17017)
!17013 = !DISubroutineType(types: !17014)
!17014 = !{!103, !17015}
!17015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17016, size: 32)
!17016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2470)
!17017 = !{!17018, !17019, !17020, !17022}
!17018 = !DILocalVariable(name: "timeout", arg: 1, scope: !17012, file: !2496, line: 183, type: !17015)
!17019 = !DILocalVariable(name: "ticks", scope: !17012, file: !2496, line: 185, type: !103)
!17020 = !DILocalVariable(name: "__i", scope: !17021, file: !2496, line: 187, type: !16675)
!17021 = distinct !DILexicalBlock(scope: !17012, file: !2496, line: 187, column: 2)
!17022 = !DILocalVariable(name: "__key", scope: !17021, file: !2496, line: 187, type: !16675)
!17023 = !DILocation(line: 0, scope: !17012)
!17024 = !DILocation(line: 0, scope: !17021)
!17025 = !DILocation(line: 0, scope: !16703, inlinedAt: !17026)
!17026 = distinct !DILocation(line: 187, column: 2, scope: !17021)
!17027 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17028)
!17028 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17026)
!17029 = !DILocation(line: 0, scope: !16712, inlinedAt: !17028)
!17030 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17026)
!17031 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17026)
!17032 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17026)
!17033 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17026)
!17034 = !DILocation(line: 188, column: 11, scope: !17035)
!17035 = distinct !DILexicalBlock(scope: !17036, file: !2496, line: 187, column: 24)
!17036 = distinct !DILexicalBlock(scope: !17021, file: !2496, line: 187, column: 2)
!17037 = !DILocation(line: 0, scope: !16776, inlinedAt: !17038)
!17038 = distinct !DILocation(line: 187, column: 2, scope: !17036)
!17039 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17038)
!17040 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17038)
!17041 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17038)
!17042 = !DILocation(line: 0, scope: !16790, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17038)
!17044 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17043)
!17045 = !DILocation(line: 191, column: 2, scope: !17012)
!17046 = distinct !DISubprogram(name: "timeout_rem", scope: !2496, file: !2496, line: 165, type: !17013, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17047)
!17047 = !{!17048, !17049, !17050}
!17048 = !DILocalVariable(name: "timeout", arg: 1, scope: !17046, file: !2496, line: 165, type: !17015)
!17049 = !DILocalVariable(name: "ticks", scope: !17046, file: !2496, line: 167, type: !103)
!17050 = !DILocalVariable(name: "t", scope: !17051, file: !2496, line: 173, type: !2469)
!17051 = distinct !DILexicalBlock(scope: !17046, file: !2496, line: 173, column: 2)
!17052 = !DILocation(line: 0, scope: !17046)
!17053 = !DILocation(line: 169, column: 6, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17046, file: !2496, line: 169, column: 6)
!17055 = !DILocation(line: 169, column: 6, scope: !17046)
!17056 = !DILocation(line: 173, column: 28, scope: !17051)
!17057 = !DILocation(line: 0, scope: !17051)
!17058 = !DILocation(line: 173, column: 39, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17051, file: !2496, line: 173, column: 2)
!17060 = !DILocation(line: 173, column: 2, scope: !17051)
!17061 = !DILocation(line: 174, column: 15, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17059, file: !2496, line: 173, column: 61)
!17063 = !DILocation(line: 174, column: 9, scope: !17062)
!17064 = !DILocation(line: 175, column: 15, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17062, file: !2496, line: 175, column: 7)
!17066 = !DILocation(line: 175, column: 7, scope: !17062)
!17067 = !DILocation(line: 173, column: 52, scope: !17059)
!17068 = distinct !{!17068, !17060, !17069}
!17069 = !DILocation(line: 178, column: 2, scope: !17051)
!17070 = !DILocation(line: 180, column: 17, scope: !17046)
!17071 = !DILocation(line: 180, column: 15, scope: !17046)
!17072 = !DILocation(line: 180, column: 2, scope: !17046)
!17073 = !DILocation(line: 181, column: 1, scope: !17046)
!17074 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13236, file: !13236, line: 35, type: !17075, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17077)
!17075 = !DISubroutineType(types: !17076)
!17076 = !{!347, !17015}
!17077 = !{!17078}
!17078 = !DILocalVariable(name: "to", arg: 1, scope: !17074, file: !13236, line: 35, type: !17015)
!17079 = !DILocation(line: 0, scope: !17074)
!17080 = !DILocation(line: 37, column: 35, scope: !17074)
!17081 = !DILocation(line: 37, column: 10, scope: !17074)
!17082 = !DILocation(line: 37, column: 9, scope: !17074)
!17083 = !DILocation(line: 37, column: 2, scope: !17074)
!17084 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2496, file: !2496, line: 194, type: !17013, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17085)
!17085 = !{!17086, !17087, !17088, !17090}
!17086 = !DILocalVariable(name: "timeout", arg: 1, scope: !17084, file: !2496, line: 194, type: !17015)
!17087 = !DILocalVariable(name: "ticks", scope: !17084, file: !2496, line: 196, type: !103)
!17088 = !DILocalVariable(name: "__i", scope: !17089, file: !2496, line: 198, type: !16675)
!17089 = distinct !DILexicalBlock(scope: !17084, file: !2496, line: 198, column: 2)
!17090 = !DILocalVariable(name: "__key", scope: !17089, file: !2496, line: 198, type: !16675)
!17091 = !DILocation(line: 0, scope: !17084)
!17092 = !DILocation(line: 0, scope: !17089)
!17093 = !DILocation(line: 0, scope: !16703, inlinedAt: !17094)
!17094 = distinct !DILocation(line: 198, column: 2, scope: !17089)
!17095 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17094)
!17097 = !DILocation(line: 0, scope: !16712, inlinedAt: !17096)
!17098 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17094)
!17099 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17094)
!17100 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17094)
!17101 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17094)
!17102 = !DILocation(line: 199, column: 11, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17104, file: !2496, line: 198, column: 24)
!17104 = distinct !DILexicalBlock(scope: !17089, file: !2496, line: 198, column: 2)
!17105 = !DILocation(line: 199, column: 23, scope: !17103)
!17106 = !DILocation(line: 0, scope: !16776, inlinedAt: !17107)
!17107 = distinct !DILocation(line: 198, column: 2, scope: !17104)
!17108 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17107)
!17109 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17107)
!17110 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17107)
!17111 = !DILocation(line: 0, scope: !16790, inlinedAt: !17112)
!17112 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17107)
!17113 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17112)
!17114 = !DILocation(line: 199, column: 21, scope: !17103)
!17115 = !DILocation(line: 202, column: 2, scope: !17084)
!17116 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2496, file: !2496, line: 205, type: !16809, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17117)
!17117 = !{!17118, !17119, !17121}
!17118 = !DILocalVariable(name: "ret", scope: !17116, file: !2496, line: 207, type: !765)
!17119 = !DILocalVariable(name: "__i", scope: !17120, file: !2496, line: 209, type: !16675)
!17120 = distinct !DILexicalBlock(scope: !17116, file: !2496, line: 209, column: 2)
!17121 = !DILocalVariable(name: "__key", scope: !17120, file: !2496, line: 209, type: !16675)
!17122 = !DILocation(line: 0, scope: !17116)
!17123 = !DILocation(line: 0, scope: !17120)
!17124 = !DILocation(line: 0, scope: !16703, inlinedAt: !17125)
!17125 = distinct !DILocation(line: 209, column: 2, scope: !17120)
!17126 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17127)
!17127 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17125)
!17128 = !DILocation(line: 0, scope: !16712, inlinedAt: !17127)
!17129 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17125)
!17130 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17125)
!17131 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17125)
!17132 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17125)
!17133 = !DILocation(line: 210, column: 9, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17135, file: !2496, line: 209, column: 24)
!17135 = distinct !DILexicalBlock(scope: !17120, file: !2496, line: 209, column: 2)
!17136 = !DILocation(line: 0, scope: !16776, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 209, column: 2, scope: !17135)
!17138 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17137)
!17139 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17137)
!17140 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17137)
!17141 = !DILocation(line: 0, scope: !16790, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17137)
!17143 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17142)
!17144 = !DILocation(line: 212, column: 2, scope: !17116)
!17145 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2496, file: !2496, line: 215, type: !10731, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17146)
!17146 = !{!17147, !17148, !17149, !17151, !17152, !17155, !17156}
!17147 = !DILocalVariable(name: "ticks", arg: 1, scope: !17145, file: !2496, line: 215, type: !765)
!17148 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17145, file: !2496, line: 215, type: !347)
!17149 = !DILocalVariable(name: "__i", scope: !17150, file: !2496, line: 217, type: !16675)
!17150 = distinct !DILexicalBlock(scope: !17145, file: !2496, line: 217, column: 2)
!17151 = !DILocalVariable(name: "__key", scope: !17150, file: !2496, line: 217, type: !16675)
!17152 = !DILocalVariable(name: "next_to", scope: !17153, file: !2496, line: 218, type: !109)
!17153 = distinct !DILexicalBlock(scope: !17154, file: !2496, line: 217, column: 24)
!17154 = distinct !DILexicalBlock(scope: !17150, file: !2496, line: 217, column: 2)
!17155 = !DILocalVariable(name: "sooner", scope: !17153, file: !2496, line: 219, type: !347)
!17156 = !DILocalVariable(name: "imminent", scope: !17153, file: !2496, line: 221, type: !347)
!17157 = !DILocation(line: 0, scope: !17145)
!17158 = !DILocation(line: 0, scope: !17150)
!17159 = !DILocation(line: 0, scope: !16703, inlinedAt: !17160)
!17160 = distinct !DILocation(line: 217, column: 2, scope: !17150)
!17161 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17160)
!17163 = !DILocation(line: 0, scope: !16712, inlinedAt: !17162)
!17164 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17160)
!17165 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17160)
!17166 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17160)
!17167 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17160)
!17168 = !DILocation(line: 218, column: 17, scope: !17153)
!17169 = !DILocation(line: 0, scope: !17153)
!17170 = !DILocation(line: 221, column: 27, scope: !17153)
!17171 = !DILocation(line: 233, column: 17, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17153, file: !2496, line: 233, column: 7)
!17173 = !DILocation(line: 234, column: 26, scope: !17174)
!17174 = distinct !DILexicalBlock(scope: !17172, file: !2496, line: 233, column: 56)
!17175 = !DILocation(line: 234, column: 4, scope: !17174)
!17176 = !DILocation(line: 235, column: 3, scope: !17174)
!17177 = !DILocation(line: 0, scope: !16776, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 217, column: 2, scope: !17154)
!17179 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17178)
!17180 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17178)
!17181 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17178)
!17182 = !DILocation(line: 0, scope: !16790, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17178)
!17184 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17183)
!17185 = !DILocation(line: 237, column: 1, scope: !17145)
!17186 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2496, file: !2496, line: 239, type: !17187, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17189)
!17187 = !DISubroutineType(types: !17188)
!17188 = !{null, !765}
!17189 = !{!17190, !17191, !17192, !17194}
!17190 = !DILocalVariable(name: "ticks", arg: 1, scope: !17186, file: !2496, line: 239, type: !765)
!17191 = !DILocalVariable(name: "key", scope: !17186, file: !2496, line: 245, type: !16675)
!17192 = !DILocalVariable(name: "t", scope: !17193, file: !2496, line: 262, type: !2469)
!17193 = distinct !DILexicalBlock(scope: !17186, file: !2496, line: 261, column: 67)
!17194 = !DILocalVariable(name: "dt", scope: !17193, file: !2496, line: 263, type: !109)
!17195 = !DILocation(line: 0, scope: !17186)
!17196 = !DILocation(line: 242, column: 2, scope: !17186)
!17197 = !DILocation(line: 0, scope: !16703, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 245, column: 25, scope: !17186)
!17199 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17200)
!17200 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17198)
!17201 = !DILocation(line: 0, scope: !16712, inlinedAt: !17200)
!17202 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17198)
!17203 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17198)
!17204 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17198)
!17205 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17198)
!17206 = !DILocation(line: 261, column: 9, scope: !17186)
!17207 = !DILocation(line: 261, column: 17, scope: !17186)
!17208 = !DILocation(line: 261, column: 25, scope: !17186)
!17209 = !DILocation(line: 261, column: 37, scope: !17186)
!17210 = !DILocation(line: 261, column: 47, scope: !17186)
!17211 = !DILocation(line: 261, column: 44, scope: !17186)
!17212 = !DILocation(line: 261, column: 2, scope: !17186)
!17213 = !DILocation(line: 0, scope: !17193)
!17214 = !DILocation(line: 263, column: 12, scope: !17193)
!17215 = !DILocation(line: 265, column: 16, scope: !17193)
!17216 = !DILocation(line: 265, column: 13, scope: !17193)
!17217 = !DILocation(line: 266, column: 13, scope: !17193)
!17218 = !DILocation(line: 267, column: 3, scope: !17193)
!17219 = !DILocation(line: 0, scope: !16776, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 269, column: 3, scope: !17193)
!17221 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17220)
!17222 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17220)
!17223 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17220)
!17224 = !DILocation(line: 0, scope: !16790, inlinedAt: !17225)
!17225 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17220)
!17226 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17225)
!17227 = !DILocation(line: 270, column: 6, scope: !17193)
!17228 = !DILocation(line: 270, column: 3, scope: !17193)
!17229 = !DILocation(line: 0, scope: !16703, inlinedAt: !17230)
!17230 = distinct !DILocation(line: 271, column: 9, scope: !17193)
!17231 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17232)
!17232 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17230)
!17233 = !DILocation(line: 0, scope: !16712, inlinedAt: !17232)
!17234 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17230)
!17235 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17230)
!17236 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17230)
!17237 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17230)
!17238 = !DILocation(line: 272, column: 22, scope: !17193)
!17239 = distinct !{!17239, !17212, !17240}
!17240 = !DILocation(line: 273, column: 2, scope: !17186)
!17241 = !DILocation(line: 276, column: 19, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17243, file: !2496, line: 275, column: 23)
!17243 = distinct !DILexicalBlock(scope: !17186, file: !2496, line: 275, column: 6)
!17244 = !DILocation(line: 277, column: 2, scope: !17242)
!17245 = !DILocation(line: 279, column: 15, scope: !17186)
!17246 = !DILocation(line: 279, column: 12, scope: !17186)
!17247 = !DILocation(line: 280, column: 21, scope: !17186)
!17248 = !DILocation(line: 282, column: 24, scope: !17186)
!17249 = !DILocation(line: 282, column: 2, scope: !17186)
!17250 = !DILocation(line: 0, scope: !16776, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 284, column: 2, scope: !17186)
!17252 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17251)
!17253 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17251)
!17254 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17251)
!17255 = !DILocation(line: 0, scope: !16790, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17251)
!17257 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17256)
!17258 = !DILocation(line: 285, column: 1, scope: !17186)
!17259 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2496, file: !2496, line: 287, type: !17260, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17262)
!17260 = !DISubroutineType(types: !17261)
!17261 = !{!105}
!17262 = !{!17263, !17264, !17266}
!17263 = !DILocalVariable(name: "t", scope: !17259, file: !2496, line: 289, type: !111)
!17264 = !DILocalVariable(name: "__i", scope: !17265, file: !2496, line: 291, type: !16675)
!17265 = distinct !DILexicalBlock(scope: !17259, file: !2496, line: 291, column: 2)
!17266 = !DILocalVariable(name: "__key", scope: !17265, file: !2496, line: 291, type: !16675)
!17267 = !DILocation(line: 0, scope: !17259)
!17268 = !DILocation(line: 0, scope: !17265)
!17269 = !DILocation(line: 0, scope: !16703, inlinedAt: !17270)
!17270 = distinct !DILocation(line: 291, column: 2, scope: !17265)
!17271 = !DILocation(line: 55, column: 2, scope: !16712, inlinedAt: !17272)
!17272 = distinct !DILocation(line: 145, column: 10, scope: !16703, inlinedAt: !17270)
!17273 = !DILocation(line: 0, scope: !16712, inlinedAt: !17272)
!17274 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17270)
!17275 = !DILocation(line: 148, column: 2, scope: !16721, inlinedAt: !17270)
!17276 = !DILocation(line: 148, column: 2, scope: !16724, inlinedAt: !17270)
!17277 = !DILocation(line: 160, column: 2, scope: !16703, inlinedAt: !17270)
!17278 = !DILocation(line: 292, column: 7, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17280, file: !2496, line: 291, column: 24)
!17280 = distinct !DILexicalBlock(scope: !17265, file: !2496, line: 291, column: 2)
!17281 = !DILocation(line: 292, column: 19, scope: !17279)
!17282 = !DILocation(line: 0, scope: !16776, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 291, column: 2, scope: !17280)
!17284 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17283)
!17285 = !DILocation(line: 194, column: 2, scope: !16785, inlinedAt: !17283)
!17286 = !DILocation(line: 194, column: 2, scope: !16788, inlinedAt: !17283)
!17287 = !DILocation(line: 0, scope: !16790, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 215, column: 2, scope: !16776, inlinedAt: !17283)
!17289 = !DILocation(line: 95, column: 2, scope: !16790, inlinedAt: !17288)
!17290 = !DILocation(line: 292, column: 17, scope: !17279)
!17291 = !DILocation(line: 294, column: 2, scope: !17259)
!17292 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2496, file: !2496, line: 297, type: !6505, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !2024)
!17293 = !DILocation(line: 300, column: 19, scope: !17292)
!17294 = !DILocation(line: 300, column: 9, scope: !17292)
!17295 = !DILocation(line: 300, column: 2, scope: !17292)
!17296 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2496, file: !2496, line: 306, type: !17260, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !2024)
!17297 = !DILocation(line: 308, column: 9, scope: !17296)
!17298 = !DILocation(line: 308, column: 2, scope: !17296)
!17299 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2496, file: !2496, line: 319, type: !6515, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17300)
!17300 = !{!17301, !17302, !17303, !17304}
!17301 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17299, file: !2496, line: 319, type: !110)
!17302 = !DILocalVariable(name: "start_cycles", scope: !17299, file: !2496, line: 328, type: !110)
!17303 = !DILocalVariable(name: "cycles_to_wait", scope: !17299, file: !2496, line: 331, type: !110)
!17304 = !DILocalVariable(name: "current_cycles", scope: !17305, file: !2496, line: 338, type: !110)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2496, line: 337, column: 11)
!17306 = distinct !DILexicalBlock(scope: !17307, file: !2496, line: 337, column: 2)
!17307 = distinct !DILexicalBlock(scope: !17299, file: !2496, line: 337, column: 2)
!17308 = !DILocation(line: 0, scope: !17299)
!17309 = !DILocation(line: 322, column: 19, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17299, file: !2496, line: 322, column: 6)
!17311 = !DILocation(line: 322, column: 6, scope: !17299)
!17312 = !DILocation(line: 328, column: 26, scope: !17299)
!17313 = !DILocation(line: 333, column: 43, scope: !17299)
!17314 = !DILocation(line: 337, column: 2, scope: !17299)
!17315 = !DILocation(line: 338, column: 29, scope: !17305)
!17316 = !DILocation(line: 0, scope: !17305)
!17317 = !DILocation(line: 341, column: 23, scope: !17318)
!17318 = distinct !DILexicalBlock(scope: !17305, file: !2496, line: 341, column: 7)
!17319 = !DILocation(line: 341, column: 39, scope: !17318)
!17320 = !DILocation(line: 349, column: 1, scope: !17299)
!17321 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6505, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !2024)
!17322 = !DILocation(line: 1677, column: 9, scope: !17321)
!17323 = !DILocation(line: 1677, column: 2, scope: !17321)
!17324 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17325, file: !17325, line: 24, type: !6505, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !2024)
!17325 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17326 = !DILocation(line: 26, column: 9, scope: !17324)
!17327 = !DILocation(line: 26, column: 2, scope: !17324)
!17328 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2496, file: !2496, line: 364, type: !17329, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2466, retainedNodes: !17331)
!17329 = !DISubroutineType(types: !17330)
!17330 = !{!111, !16665}
!17331 = !{!17332, !17333}
!17332 = !DILocalVariable(name: "timeout", arg: 1, scope: !17328, file: !2496, line: 364, type: !16665)
!17333 = !DILocalVariable(name: "dt", scope: !17328, file: !2496, line: 366, type: !103)
!17334 = !DILocation(line: 0, scope: !17328)
!17335 = !DILocation(line: 368, column: 6, scope: !17328)
!17336 = !DILocation(line: 371, column: 10, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2496, line: 370, column: 47)
!17338 = distinct !DILexicalBlock(scope: !17339, file: !2496, line: 370, column: 13)
!17339 = distinct !DILexicalBlock(scope: !17328, file: !2496, line: 368, column: 6)
!17340 = !DILocation(line: 371, column: 3, scope: !17337)
!17341 = !DILocation(line: 376, column: 58, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !2496, line: 376, column: 7)
!17343 = distinct !DILexicalBlock(scope: !17338, file: !2496, line: 372, column: 9)
!17344 = !DILocation(line: 376, column: 7, scope: !17343)
!17345 = !DILocation(line: 376, column: 43, scope: !17342)
!17346 = !DILocation(line: 377, column: 4, scope: !17347)
!17347 = distinct !DILexicalBlock(scope: !17342, file: !2496, line: 376, column: 64)
!17348 = !DILocation(line: 379, column: 10, scope: !17343)
!17349 = !DILocation(line: 379, column: 33, scope: !17343)
!17350 = !DILocation(line: 379, column: 31, scope: !17343)
!17351 = !DILocation(line: 379, column: 3, scope: !17343)
!17352 = !DILocation(line: 0, scope: !17339)
!17353 = !DILocation(line: 381, column: 1, scope: !17328)
!17354 = distinct !DISubprogram(name: "boot_banner", scope: !17355, file: !17355, line: 26, type: !3087, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3073, retainedNodes: !2024)
!17355 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17356 = !DILocation(line: 34, column: 2, scope: !17354)
!17357 = !DILocation(line: 36, column: 1, scope: !17354)
