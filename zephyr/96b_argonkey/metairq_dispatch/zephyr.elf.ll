; ModuleID = 'build/96b_argonkey/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237111 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237091 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237081 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237181 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237171 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237161 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237151 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237141 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237131 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237121 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238500 to i8*), void (i8*)* inttoptr (i32 134237101 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [46 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !501
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !663
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !672
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !708
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !718
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !723
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.139 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !743
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.4.135 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !895
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !878
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.135, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !851
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !867
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !897
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !918
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !920
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !922
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !924
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !926
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !928
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.140 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !965
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1060
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1049
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1101
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !958
@.str.149 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1167
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1448
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1418
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1404
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1346
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !956
@.str.1.157 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1450
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1422
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1420
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1360
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.2.158 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1463
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1426
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1424
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1369
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.3.159 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1465
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1430
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1428
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1378
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.4.160 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1467
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1434
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1384
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.5.161 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1469
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1438
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1436
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1390
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.6.162 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1471
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1442
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1440
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1396
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.7.163 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1473
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1444
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1402
@.str.8.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.156 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.152 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.155 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.151 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.153 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.154 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1475
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !960
@.str.1.170 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1631
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1686
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1629
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1688
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1620
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1622
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1675
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1678
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1680
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1683
@.str.2.172 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.173 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.174 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.175 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.176 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.179 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.181 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.182 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1033
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1699
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1808
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1810
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1806
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1801
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1775
@.str.186 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.188 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.189 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.191 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1812
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1344
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.157, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1358
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.158, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1367
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1376
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1382
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.161, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1388
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.162, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1394
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.163, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1400
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1902
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1943
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1946
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1951
@.str.225 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.229 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.230 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.231 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.232 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.233 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.234 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.235 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.239 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.240 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.241 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.242 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.243 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.238 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.237 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.239, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.240, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.241, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.242, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.243, i32 0, i32 0)], align 4
@.str.245 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1958
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2183
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2170
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2178
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2189
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2194
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.254 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.261, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.264, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.265, i32 0, i32 0)], align 4, !dbg !2222
@.str.259 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.260 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.261 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.262 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.263 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.264 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.258 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.265 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2336
@.str.8.257 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.268 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.269 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.270 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.271 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.275 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.276 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.279 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.280 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.289 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.290 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.291 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.298 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.299 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.300 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.301 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.302 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.303 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.304 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.305 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.306 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.311 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2349
@.str.312 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.318 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.319 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.320 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.313 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.314 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.315 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.321 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.322 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2374
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2484
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2487
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2489
@.str.323 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.343 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.330 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.350 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.360 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.333 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.355 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.329 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.367 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.368 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.376 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.377 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.378 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.379 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.324 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.325 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.326 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.327 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.328 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.332 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.347 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.356 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.357 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2180
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2187
@.str.23.371 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.385 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.386 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.387 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.388 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2491
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2521
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2526
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2045
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2524
@.str.4.389 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.390 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.391 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.395 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.396 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.416 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2532
@.str.418 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.427 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.420 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.428 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.419 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.421 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.424 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.425 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.426 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.429 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.430 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3283 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3339, !srcloc !3342
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3353, !srcloc !3354
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3355, !srcloc !3356
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3389, !srcloc !3390
  ret void, !dbg !3391
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3394 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3396, metadata !DIExpression()), !dbg !3402
  call void @llvm.dbg.value(metadata i8* %1, metadata !3397, metadata !DIExpression()), !dbg !3402
  call void @llvm.dbg.value(metadata i8* %2, metadata !3398, metadata !DIExpression()), !dbg !3402
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3403

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3404
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3399, metadata !DIExpression()), !dbg !3405
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3406
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3407
  %12 = load i32, i32* %6, align 4, !dbg !3408
  %13 = sub i32 %11, %12, !dbg !3409
  store i32 %13, i32* %7, align 4, !dbg !3410
  %14 = load i32, i32* %8, align 4, !dbg !3411
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3412
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %16, metadata !3401, metadata !DIExpression()), !dbg !3414
  %17 = icmp eq i32 %16, 0, !dbg !3415
  br i1 %17, label %23, label %18, !dbg !3417

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3418
  %20 = zext i8 %19 to i32, !dbg !3418
  %21 = load i32, i32* %8, align 4, !dbg !3418
  %22 = load i32, i32* %9, align 4, !dbg !3418
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3418
  br label %23, !dbg !3424

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3425
  br label %10, !dbg !3403, !llvm.loop !3426
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3427 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3428
  ret i32 %1, !dbg !3429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3430 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3442, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3440, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i8* %1, metadata !3441, metadata !DIExpression()), !dbg !3443
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3444, !srcloc !3446
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3447
  ret i32 %3, !dbg !3448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3454, metadata !DIExpression()), !dbg !3455
  %2 = icmp eq i32 %0, 2, !dbg !3456
  %3 = select i1 %2, i8 87, i8 63, !dbg !3456
  %4 = icmp eq i32 %0, 3, !dbg !3456
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3456
  ret i8 %5, !dbg !3457
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3458 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3460
  ret i32 %1, !dbg !3461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3462 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3464, metadata !DIExpression()), !dbg !3469
  br label %2, !dbg !3470

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3471
  ret void, !dbg !3472

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3464, metadata !DIExpression()), !dbg !3469
  %4 = add nsw i32 %3, -2, !dbg !3473
  call void @llvm.dbg.value(metadata i32 %4, metadata !3466, metadata !DIExpression()), !dbg !3474
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3475
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3476
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3477
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3478
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3479
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3480
  %10 = inttoptr i32 %3 to i8*, !dbg !3481
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3482
  %11 = add nuw nsw i32 %3, 1, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %11, metadata !3464, metadata !DIExpression()), !dbg !3469
  %12 = icmp eq i32 %11, 4, !dbg !3484
  br i1 %12, label %1, label %2, !dbg !3470, !llvm.loop !3485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3487 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3500, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3491, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3492, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 2048, metadata !3493, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3494, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i8* %2, metadata !3495, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i8* null, metadata !3496, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i8* null, metadata !3497, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %3, metadata !3498, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 0, metadata !3499, metadata !DIExpression()), !dbg !3501
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3502, !srcloc !3504
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3505
  ret void, !dbg !3506
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3507 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3509, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.value(metadata i8* %1, metadata !3510, metadata !DIExpression()), !dbg !3522
  call void @llvm.dbg.value(metadata i8* %2, metadata !3511, metadata !DIExpression()), !dbg !3522
  %6 = ptrtoint i8* %0 to i32, !dbg !3523
  call void @llvm.dbg.value(metadata i32 %6, metadata !3512, metadata !DIExpression()), !dbg !3522
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3524
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3524
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3513, metadata !DIExpression()), !dbg !3525
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3526
  %9 = zext i8 %8 to i32, !dbg !3526
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3526
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3526
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3526
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %13, metadata !3514, metadata !DIExpression()), !dbg !3532
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %14, metadata !3516, metadata !DIExpression()), !dbg !3532
  %15 = icmp eq i32 %13, 0, !dbg !3534
  br i1 %15, label %16, label %28, !dbg !3537

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3537

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3538
  %25 = sub i32 %24, %23, !dbg !3539
  %26 = load i32, i32* %17, align 4, !dbg !3540
  %27 = icmp ult i32 %25, %26, !dbg !3541
  br i1 %27, label %29, label %42, !dbg !3542

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3543
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3543
  unreachable, !dbg !3543

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3545
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3517, metadata !DIExpression()), !dbg !3546
  store volatile i32 0, i32* %5, align 4, !dbg !3546
  %30 = load volatile i32, i32* %5, align 4, !dbg !3547
  %31 = icmp slt i32 %30, 100, !dbg !3549
  br i1 %31, label %37, label %32, !dbg !3550

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3551
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3538
  %34 = sub i32 %33, %23, !dbg !3539
  %35 = load i32, i32* %17, align 4, !dbg !3540
  %36 = icmp ult i32 %34, %35, !dbg !3541
  br i1 %36, label %29, label %42, !dbg !3542, !llvm.loop !3552

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3554
  %39 = add nsw i32 %38, 1, !dbg !3554
  store volatile i32 %39, i32* %5, align 4, !dbg !3554
  %40 = load volatile i32, i32* %5, align 4, !dbg !3547
  %41 = icmp slt i32 %40, 100, !dbg !3549
  br i1 %41, label %37, label %32, !dbg !3550, !llvm.loop !3555

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3557
  %44 = sub i32 %43, %23, !dbg !3558
  call void @llvm.dbg.value(metadata i32 %44, metadata !3521, metadata !DIExpression()), !dbg !3532
  %45 = load i32, i32* %18, align 4, !dbg !3559
  %46 = load i32, i32* %19, align 4, !dbg !3559
  %47 = load i32, i32* %20, align 4, !dbg !3559
  %48 = sub i32 %23, %47, !dbg !3559
  %49 = load i32, i32* %17, align 4, !dbg !3559
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3559
  %50 = load i32, i32* %20, align 4, !dbg !3564
  %51 = sub i32 %23, %50, !dbg !3565
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3566
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3531
  call void @llvm.dbg.value(metadata i32 %52, metadata !3514, metadata !DIExpression()), !dbg !3532
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3533
  call void @llvm.dbg.value(metadata i32 %53, metadata !3516, metadata !DIExpression()), !dbg !3532
  %54 = icmp eq i32 %52, 0, !dbg !3534
  br i1 %54, label %22, label %28, !dbg !3537, !llvm.loop !3567
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3570 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3573
  ret %struct.k_thread* %1, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3579, metadata !DIExpression()), !dbg !3580
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3581, !srcloc !3583
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3584
  ret i32 %2, !dbg !3585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3586 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3592, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3590, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %1, metadata !3591, metadata !DIExpression()), !dbg !3593
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3594, !srcloc !3596
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3597
  ret i32 %3, !dbg !3598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3599 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3604, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %1, metadata !3605, metadata !DIExpression()), !dbg !3617
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3618
  %8 = load i32, i32* %7, align 4, !dbg !3618
  %9 = icmp ugt i32 %8, 39, !dbg !3620
  br i1 %9, label %60, label %10, !dbg !3621

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3622
  %12 = load i32, i32* %11, align 4, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %12, metadata !3606, metadata !DIExpression()), !dbg !3617
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3623
  %14 = load i32, i32* %13, align 4, !dbg !3624
  %15 = add i32 %14, 1, !dbg !3624
  store i32 %15, i32* %13, align 4, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %14, metadata !3607, metadata !DIExpression()), !dbg !3617
  %16 = icmp ult i32 %14, 20, !dbg !3625
  br i1 %16, label %17, label %19, !dbg !3627

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3628
  store i32 %1, i32* %18, align 4, !dbg !3630
  br label %19, !dbg !3631

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3632
  %21 = load i32, i32* %20, align 4, !dbg !3632
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3633
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3634
  store i32 %21, i32* %23, align 4, !dbg !3635
  %24 = load i32, i32* %7, align 4, !dbg !3636
  %25 = icmp eq i32 %24, 39, !dbg !3637
  br i1 %25, label %26, label %60, !dbg !3638

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3639
  %28 = bitcast i32* %4 to i8*, !dbg !3639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3639
  %29 = bitcast i32* %5 to i8*, !dbg !3639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3639
  %30 = bitcast i32* %6 to i8*, !dbg !3639
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3639
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %31, metadata !3614, metadata !DIExpression()), !dbg !3641
  %32 = icmp eq i32 %31, 0, !dbg !3642
  br i1 %32, label %34, label %33, !dbg !3645

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3646
  unreachable, !dbg !3646

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3648
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3649
  call void @llvm.dbg.value(metadata i32* %3, metadata !3608, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %4, metadata !3611, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %5, metadata !3612, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %6, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3650
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3651
  %37 = zext i8 %36 to i32, !dbg !3651
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3651
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3656
  %38 = load i32, i32* %4, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %38, metadata !3611, metadata !DIExpression()), !dbg !3641
  %39 = load i32, i32* %3, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %39, metadata !3608, metadata !DIExpression()), !dbg !3641
  %40 = load i32, i32* %5, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %40, metadata !3612, metadata !DIExpression()), !dbg !3641
  %41 = load i32, i32* %6, align 4, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %41, metadata !3613, metadata !DIExpression()), !dbg !3641
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3615, metadata !DIExpression()), !dbg !3666
  br label %43, !dbg !3667

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3668
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3673
  br label %60, !dbg !3674

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3615, metadata !DIExpression()), !dbg !3666
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3675
  %46 = load i32, i32* %45, align 4, !dbg !3675
  %47 = icmp eq i32 %46, 0, !dbg !3679
  br i1 %47, label %48, label %51, !dbg !3680

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3681
  %50 = zext i8 %49 to i32, !dbg !3681
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3681
  br label %57, !dbg !3687

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3688
  call void @llvm.dbg.value(metadata i32* %3, metadata !3608, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %4, metadata !3611, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %5, metadata !3612, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call void @llvm.dbg.value(metadata i32* %6, metadata !3613, metadata !DIExpression(DW_OP_deref)), !dbg !3641
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3689
  %53 = load i32, i32* %4, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %53, metadata !3611, metadata !DIExpression()), !dbg !3641
  %54 = load i32, i32* %3, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %54, metadata !3608, metadata !DIExpression()), !dbg !3641
  %55 = load i32, i32* %5, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %55, metadata !3612, metadata !DIExpression()), !dbg !3641
  %56 = load i32, i32* %6, align 4, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %56, metadata !3613, metadata !DIExpression()), !dbg !3641
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3690
  br label %57, !dbg !3695

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3696
  call void @llvm.dbg.value(metadata i32 %58, metadata !3615, metadata !DIExpression()), !dbg !3666
  %59 = icmp eq i32 %58, 4, !dbg !3697
  br i1 %59, label %42, label %43, !dbg !3667, !llvm.loop !3698

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3700
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3701 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3708, metadata !DIExpression()), !dbg !3709
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3710
  ret i32 %1, !dbg !3711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3712 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3718, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3717, metadata !DIExpression()), !dbg !3719
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3720, !srcloc !3722
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3723
  ret i32 %1, !dbg !3724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3725 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3729, metadata !DIExpression()), !dbg !3730
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3731
  ret void, !dbg !3732
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3733 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3739, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 %1, metadata !3740, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32* %2, metadata !3741, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32* %3, metadata !3742, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32* %4, metadata !3743, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32* %5, metadata !3744, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i64 0, metadata !3745, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i64 0, metadata !3746, metadata !DIExpression()), !dbg !3754
  store i32 2147483647, i32* %2, align 4, !dbg !3755
  store i32 0, i32* %3, align 4, !dbg !3756
  call void @llvm.dbg.value(metadata i32 0, metadata !3747, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata i64 0, metadata !3745, metadata !DIExpression()), !dbg !3754
  %7 = icmp eq i32 %1, 0, !dbg !3758
  br i1 %7, label %8, label %21, !dbg !3760

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3761
  %10 = trunc i32 %9 to i8, !dbg !3762
  %11 = trunc i32 %1 to i8, !dbg !3762
  %12 = udiv i8 %10, %11, !dbg !3762
  %13 = zext i8 %12 to i32, !dbg !3763
  store i32 %13, i32* %4, align 4, !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3749, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata i64 0, metadata !3746, metadata !DIExpression()), !dbg !3754
  br label %38, !dbg !3766

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3761
  %16 = zext i32 %15 to i64, !dbg !3767
  %17 = add i64 %35, %16, !dbg !3768
  %18 = zext i32 %1 to i64, !dbg !3769
  %19 = udiv i64 %17, %18, !dbg !3762
  %20 = trunc i64 %19 to i32, !dbg !3763
  store i32 %20, i32* %4, align 4, !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3749, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata i64 0, metadata !3746, metadata !DIExpression()), !dbg !3754
  br i1 %7, label %38, label %45, !dbg !3766

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3745, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i32 %23, metadata !3747, metadata !DIExpression()), !dbg !3757
  %24 = load i32, i32* %2, align 4, !dbg !3770
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3770
  %26 = load i32, i32* %25, align 4, !dbg !3770
  %27 = icmp ult i32 %24, %26, !dbg !3770
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3770
  store i32 %28, i32* %2, align 4, !dbg !3772
  %29 = load i32, i32* %3, align 4, !dbg !3773
  %30 = load i32, i32* %25, align 4, !dbg !3773
  %31 = icmp ugt i32 %29, %30, !dbg !3773
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3773
  store i32 %32, i32* %3, align 4, !dbg !3774
  %33 = load i32, i32* %25, align 4, !dbg !3775
  %34 = zext i32 %33 to i64, !dbg !3775
  %35 = add i64 %22, %34, !dbg !3776
  call void @llvm.dbg.value(metadata i64 %35, metadata !3745, metadata !DIExpression()), !dbg !3754
  %36 = add nuw nsw i32 %23, 1, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %36, metadata !3747, metadata !DIExpression()), !dbg !3757
  %37 = icmp eq i32 %36, %1, !dbg !3758
  br i1 %37, label %14, label %21, !dbg !3760, !llvm.loop !3778

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3754
  %42 = add i64 %41, %40, !dbg !3780
  %43 = udiv i64 %42, %39, !dbg !3781
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3782
  store i32 %44, i32* %5, align 4, !dbg !3783
  ret void, !dbg !3784

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3749, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.value(metadata i64 %47, metadata !3746, metadata !DIExpression()), !dbg !3754
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3785
  %49 = load i32, i32* %48, align 4, !dbg !3785
  %50 = sub i32 %49, %20, !dbg !3786
  %51 = sext i32 %50 to i64, !dbg !3787
  call void @llvm.dbg.value(metadata i64 %51, metadata !3751, metadata !DIExpression()), !dbg !3788
  %52 = mul nsw i64 %51, %51, !dbg !3789
  %53 = add i64 %52, %47, !dbg !3790
  call void @llvm.dbg.value(metadata i64 %53, metadata !3746, metadata !DIExpression()), !dbg !3754
  %54 = add nuw nsw i32 %46, 1, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %54, metadata !3749, metadata !DIExpression()), !dbg !3765
  %55 = icmp eq i32 %54, %1, !dbg !3792
  br i1 %55, label %38, label %45, !dbg !3766, !llvm.loop !3793
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3795 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3799, metadata !DIExpression()), !dbg !3804
  %2 = icmp ugt i64 %0, 1, !dbg !3805
  %3 = trunc i64 %0 to i32, !dbg !3806
  br i1 %2, label %6, label %4, !dbg !3806

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3807

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3808
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3809
  %9 = shl i32 %8, 1, !dbg !3810
  %10 = zext i32 %9 to i64, !dbg !3809
  call void @llvm.dbg.value(metadata i64 %10, metadata !3800, metadata !DIExpression()), !dbg !3811
  %11 = or i64 %10, 1, !dbg !3812
  call void @llvm.dbg.value(metadata i64 %11, metadata !3803, metadata !DIExpression()), !dbg !3811
  %12 = mul nuw i64 %11, %11, !dbg !3813
  %13 = icmp ugt i64 %12, %0, !dbg !3814
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3815
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3816 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3820, metadata !DIExpression()), !dbg !3821
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3822, !srcloc !3824
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3825
  ret void, !dbg !3826
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3827 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3831, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i32 1, metadata !3832, metadata !DIExpression()), !dbg !3833
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3834
  ret i32 %1, !dbg !3835
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3836 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3837, !srcloc !3839
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3840
  ret %struct.k_thread* %1, !dbg !3841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3842 {
  call void @llvm.dbg.value(metadata i64 8400, metadata !3844, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i64 4, metadata !3845, metadata !DIExpression()), !dbg !3847
  call void @llvm.dbg.value(metadata i64 33600, metadata !3846, metadata !DIExpression()), !dbg !3847
  store i32 40320, i32* @max_duty_cyc, align 4, !dbg !3848
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3849
  ret void, !dbg !3850
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3851 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3853, metadata !DIExpression()), !dbg !3864
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3865
  br i1 %3, label %5, label %4, !dbg !3868

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3869
  unreachable, !dbg !3869

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %6, metadata !3854, metadata !DIExpression()), !dbg !3864
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3872
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3872
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3855, metadata !DIExpression()), !dbg !3873
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3874
  %9 = add i32 %8, 1, !dbg !3874
  store i32 %9, i32* @msg_seq, align 4, !dbg !3874
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3875
  store i32 %8, i32* %10, align 4, !dbg !3876
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3877
  store i32 %6, i32* %11, align 4, !dbg !3878
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3879
  %13 = and i32 %12, 3, !dbg !3880
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3881
  store i32 %13, i32* %14, align 4, !dbg !3882
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3883
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3884
  %17 = urem i32 %15, %16, !dbg !3885
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3886
  store i32 %17, i32* %18, align 4, !dbg !3887
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %19, metadata !3863, metadata !DIExpression()), !dbg !3864
  %20 = icmp eq i32 %19, 0, !dbg !3889
  br i1 %20, label %22, label %21, !dbg !3891

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3892
  br label %22, !dbg !3894

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3895
  %24 = icmp ult i32 %23, 40, !dbg !3897
  br i1 %24, label %25, label %26, !dbg !3898

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3899
  br label %26, !dbg !3901

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3902
  ret void, !dbg !3902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3903 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3904
  ret i32 %1, !dbg !3905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3906
  %2 = icmp eq i64 %1, 0, !dbg !3906
  br i1 %2, label %3, label %7, !dbg !3908

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3909
  %5 = zext i32 %4 to i64, !dbg !3911
  %6 = shl nuw nsw i64 %5, 16, !dbg !3912
  br label %7, !dbg !3913

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3914
  %9 = mul i64 %8, 6364136223846793005, !dbg !3915
  %10 = add i64 %9, 1442695040888963407, !dbg !3916
  store i64 %10, i64* @rand32.state, align 8, !dbg !3917
  %11 = lshr i64 %10, 32, !dbg !3918
  %12 = trunc i64 %11 to i32, !dbg !3919
  ret i32 %12, !dbg !3920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3921 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3932, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3930, metadata !DIExpression()), !dbg !3933
  call void @llvm.dbg.value(metadata i8* %0, metadata !3931, metadata !DIExpression()), !dbg !3933
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3934, !srcloc !3936
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !3937
  ret i32 %2, !dbg !3938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3939 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !3942
  %2 = and i32 %1, 7, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %2, metadata !3941, metadata !DIExpression()), !dbg !3944
  %3 = zext i32 %2 to i64, !dbg !3945
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3946
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !3946
  ret void, !dbg !3947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3948 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3949
  ret i32 %1, !dbg !3950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3951 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3956, metadata !DIExpression()), !dbg !3958
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3959
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %3, metadata !3957, metadata !DIExpression()), !dbg !3958
  %4 = icmp eq i32 %3, 0, !dbg !3961
  br i1 %4, label %6, label %5, !dbg !3964

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3965
  unreachable, !dbg !3965

6:                                                ; preds = %1
  ret void, !dbg !3967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3968 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3974, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3972, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8* %0, metadata !3973, metadata !DIExpression()), !dbg !3975
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3976, !srcloc !3978
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3979
  ret i32 %2, !dbg !3980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3981 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %0, metadata !3992, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %1, metadata !3993, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %2, metadata !3994, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %3, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %0, metadata !3997, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %0, metadata !3998, metadata !DIExpression()), !dbg !4059
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4060
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4060
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4001, metadata !DIExpression()), !dbg !4061
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4062
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4062
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4003, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 0, metadata !4004, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 0, metadata !4005, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 0, metadata !4006, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 -1, metadata !4007, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 0, metadata !4010, metadata !DIExpression()), !dbg !4059
  %12 = and i32 %2, 4, !dbg !4064
  %13 = icmp eq i32 %12, 0, !dbg !4065
  call void @llvm.dbg.value(metadata i1 %13, metadata !4011, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4059
  %14 = lshr i32 %2, 3, !dbg !4066
  %15 = and i32 %14, 7, !dbg !4066
  %16 = add nuw nsw i32 %15, 1, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %16, metadata !4012, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 0, metadata !4013, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %0, metadata !4014, metadata !DIExpression()), !dbg !4059
  %17 = ptrtoint i8* %0 to i32, !dbg !4068
  %18 = and i32 %17, 3, !dbg !4070
  %19 = icmp eq i32 %18, 0, !dbg !4070
  br i1 %19, label %20, label %320, !dbg !4071

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %21, metadata !3998, metadata !DIExpression()), !dbg !4059
  %22 = icmp eq i8* %0, null, !dbg !4073
  %23 = and i32 %1, 7, !dbg !4075
  %24 = sub nuw nsw i32 8, %23, !dbg !4075
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4075
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4075
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %27, metadata !3993, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %26, metadata !3998, metadata !DIExpression()), !dbg !4059
  br i1 %22, label %33, label %28, !dbg !4076

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4078
  %30 = sub i32 4, %17, !dbg !4078
  %31 = add i32 %30, %29, !dbg !4079
  %32 = icmp ugt i32 %31, %27, !dbg !4080
  br i1 %32, label %320, label %33, !dbg !4081

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4082
  call void @llvm.dbg.value(metadata i8* %34, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %3, metadata !4009, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 4, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 4, metadata !3999, metadata !DIExpression()), !dbg !4059
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4083

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %42, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %43, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %44, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %45, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %72, metadata !4007, metadata !DIExpression()), !dbg !4059
  br i1 %46, label %73, label %47, !dbg !4084

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4085
  %49 = zext i1 %48 to i32, !dbg !4089
  %50 = add nsw i32 %72, %49, !dbg !4089
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4089
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %52, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %51, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %50, metadata !4007, metadata !DIExpression()), !dbg !4059
  br label %53, !dbg !4090

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %40, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %58, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %57, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %56, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %54, metadata !4007, metadata !DIExpression()), !dbg !4059
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4091
  call void @llvm.dbg.value(metadata i8* %60, metadata !3995, metadata !DIExpression()), !dbg !4059
  %61 = load i8, i8* %60, align 1, !dbg !4093
  %62 = icmp eq i8 %61, 0, !dbg !4094
  br i1 %62, label %226, label %63, !dbg !4095, !llvm.loop !4096

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4084

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4099

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4010, metadata !DIExpression()), !dbg !4059
  %75 = add nsw i32 %72, -1, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %75, metadata !4007, metadata !DIExpression()), !dbg !4059
  br label %53, !dbg !4101

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4102

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 4, metadata !3999, metadata !DIExpression()), !dbg !4059
  br label %53, !dbg !4103

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 4, metadata !3999, metadata !DIExpression()), !dbg !4059
  br label %53, !dbg !4104

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4105
  %81 = icmp eq i8 %80, 108, !dbg !4107
  br i1 %81, label %82, label %109, !dbg !4108

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4109
  %84 = load i8, i8* %83, align 1, !dbg !4109
  %85 = icmp eq i8 %84, 108, !dbg !4112
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4113
  %89 = add i32 %88, 7, !dbg !4113
  %90 = and i32 %89, -8, !dbg !4113
  %91 = inttoptr i32 %90 to i8*, !dbg !4113
  %92 = inttoptr i32 %90 to double*, !dbg !4113
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4113
  %94 = load double, double* %92, align 8, !dbg !4113
  call void @llvm.dbg.value(metadata i8* %93, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 8, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 8, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata double %94, metadata !4027, metadata !DIExpression()), !dbg !4115
  %95 = ptrtoint i8* %43 to i32, !dbg !4116
  %96 = add i32 %95, 7, !dbg !4116
  %97 = and i32 %96, -8, !dbg !4116
  %98 = inttoptr i32 %97 to i8*, !dbg !4117
  call void @llvm.dbg.value(metadata i8* %98, metadata !3998, metadata !DIExpression()), !dbg !4059
  br i1 %22, label %104, label %99, !dbg !4118

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4119
  %101 = icmp ugt i32 %100, %196, !dbg !4123
  br i1 %101, label %320, label %102, !dbg !4124

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4125
  store double %94, double* %103, align 8, !dbg !4125
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4128
  call void @llvm.dbg.value(metadata i8* %105, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4010, metadata !DIExpression()), !dbg !4059
  br label %53, !dbg !4129

107:                                              ; preds = %73, %73
  br label %109, !dbg !4130

108:                                              ; preds = %73
  br label %109, !dbg !4130

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4059
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4059
  call void @llvm.dbg.value(metadata i32 %113, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %112, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4013, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  %114 = ptrtoint i8* %43 to i32, !dbg !4130
  %115 = add i32 %114, -1, !dbg !4130
  %116 = add i32 %115, %112, !dbg !4130
  %117 = sub i32 0, %112, !dbg !4130
  %118 = and i32 %116, %117, !dbg !4130
  %119 = inttoptr i32 %118 to i8*, !dbg !4131
  call void @llvm.dbg.value(metadata i8* %119, metadata !3998, metadata !DIExpression()), !dbg !4059
  br i1 %22, label %124, label %120, !dbg !4132

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4134
  %122 = add i32 %121, %118, !dbg !4135
  %123 = icmp ugt i32 %122, %196, !dbg !4136
  br i1 %123, label %320, label %124, !dbg !4137

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4138

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4131
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %127, metadata !3996, metadata !DIExpression()), !dbg !4059
  %128 = bitcast i8* %41 to i8**, !dbg !4139
  %129 = load i8*, i8** %128, align 4, !dbg !4139
  call void @llvm.dbg.value(metadata i8* %129, metadata !4009, metadata !DIExpression()), !dbg !4059
  br label %130, !dbg !4140

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4059
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4141
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4059
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4142
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4059
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4059
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4059
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4059
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4059
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4059
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4143
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %142, metadata !3993, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %141, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %140, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %139, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %138, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %137, metadata !4004, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %136, metadata !4012, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %135, metadata !4005, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %133, metadata !4009, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %132, metadata !4007, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %131, metadata !4006, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.label(metadata !4058), !dbg !4145
  br i1 %22, label %146, label %144, !dbg !4146

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4147
  store i8* %133, i8** %145, align 4, !dbg !4150
  br label %146, !dbg !4151

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %147, metadata !4012, metadata !DIExpression()), !dbg !4059
  %148 = icmp sgt i32 %136, 0, !dbg !4153
  br i1 %148, label %152, label %149, !dbg !4154

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4155
  %151 = zext i1 %150 to i32, !dbg !4155
  br label %152, !dbg !4154

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4154
  %154 = icmp eq i32 %153, 0, !dbg !4154
  call void @llvm.dbg.value(metadata i1 %154, metadata !4036, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4156
  call void @llvm.dbg.value(metadata i1 %36, metadata !4039, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4156
  %155 = or i1 %36, %154, !dbg !4157
  br i1 %155, label %156, label %192, !dbg !4157

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4158
  %158 = sub i32 %157, %17, !dbg !4158
  %159 = lshr i32 %158, 2, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %159, metadata !4040, metadata !DIExpression()), !dbg !4160
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4161
  br i1 %161, label %162, label %163, !dbg !4161

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4163
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4163
  unreachable, !dbg !4163

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4168
  br i1 %164, label %165, label %166, !dbg !4170

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4171
  unreachable, !dbg !4171

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4176

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4177
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4180
  store i8 %168, i8* %169, align 1, !dbg !4181
  %170 = trunc i32 %132 to i8, !dbg !4182
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4183
  store i8 %170, i8* %171, align 1, !dbg !4184
  br i1 %154, label %175, label %172, !dbg !4185

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4186
  store i8 %173, i8* %169, align 1, !dbg !4186
  %174 = add i32 %131, 1, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %174, metadata !4006, metadata !DIExpression()), !dbg !4059
  br label %187, !dbg !4190

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4191
  call void @llvm.dbg.value(metadata i32 %176, metadata !4005, metadata !DIExpression()), !dbg !4059
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4193

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4194
  call void @llvm.dbg.value(metadata i32 %179, metadata !3993, metadata !DIExpression()), !dbg !4059
  br label %187, !dbg !4197

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4198

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4199
  call void @llvm.dbg.value(metadata i32 %182, metadata !3993, metadata !DIExpression()), !dbg !4059
  br label %187, !dbg !4202

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4203
  %185 = add i32 %142, 2, !dbg !4205
  %186 = add i32 %185, %184, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %186, metadata !3993, metadata !DIExpression()), !dbg !4059
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4059
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4059
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4059
  call void @llvm.dbg.value(metadata i32 %190, metadata !3993, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %189, metadata !4005, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %188, metadata !4006, metadata !DIExpression()), !dbg !4059
  %191 = add nuw nsw i32 %137, 1, !dbg !4207
  call void @llvm.dbg.value(metadata i32 %191, metadata !4004, metadata !DIExpression()), !dbg !4059
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4059
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4142
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4059
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4143
  call void @llvm.dbg.value(metadata i32 %196, metadata !3993, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %195, metadata !4004, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %194, metadata !4005, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %193, metadata !4006, metadata !DIExpression()), !dbg !4059
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4208
  call void @llvm.dbg.value(metadata i8* %197, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %143, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %141, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %139, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %138, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4013, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %132, metadata !4007, metadata !DIExpression()), !dbg !4059
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4091
  call void @llvm.dbg.value(metadata i8* %198, metadata !3995, metadata !DIExpression()), !dbg !4059
  %199 = load i8, i8* %198, align 1, !dbg !4093
  %200 = icmp eq i8 %199, 0, !dbg !4094
  br i1 %200, label %226, label %63, !dbg !4095

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4209

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4210
  call void @llvm.dbg.value(metadata i8* %203, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 undef, metadata !4043, metadata !DIExpression()), !dbg !4211
  br i1 %22, label %219, label %204, !dbg !4212

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4210
  %206 = load i32, i32* %205, align 4, !dbg !4210
  call void @llvm.dbg.value(metadata i32 %206, metadata !4043, metadata !DIExpression()), !dbg !4211
  %207 = inttoptr i32 %118 to i32*, !dbg !4213
  store i32 %206, i32* %207, align 4, !dbg !4216
  br label %219, !dbg !4217

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4218
  %210 = add i32 %209, 7, !dbg !4218
  %211 = and i32 %210, -8, !dbg !4218
  %212 = inttoptr i32 %211 to i8*, !dbg !4218
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4218
  call void @llvm.dbg.value(metadata i8* %213, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i64 undef, metadata !4049, metadata !DIExpression()), !dbg !4219
  br i1 %22, label %219, label %214, !dbg !4220

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4218
  %216 = load i64, i64* %215, align 8, !dbg !4218
  call void @llvm.dbg.value(metadata i64 %216, metadata !4049, metadata !DIExpression()), !dbg !4219
  %217 = inttoptr i32 %118 to i64*, !dbg !4221
  store i64 %216, i64* %217, align 8, !dbg !4226
  br label %219, !dbg !4227

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4228
  unreachable, !dbg !4228

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4233
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %221, metadata !3996, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %40, metadata !3995, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %222, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %113, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %112, metadata !4000, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4013, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8 poison, metadata !4010, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %72, metadata !4007, metadata !DIExpression()), !dbg !4059
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4091
  call void @llvm.dbg.value(metadata i8* %223, metadata !3995, metadata !DIExpression()), !dbg !4059
  %224 = load i8, i8* %223, align 1, !dbg !4093
  %225 = icmp eq i8 %224, 0, !dbg !4094
  br i1 %225, label %226, label %38, !dbg !4095

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4234
  %228 = ptrtoint i8* %227 to i32, !dbg !4235
  %229 = sub i32 %228, %17, !dbg !4235
  %230 = lshr i32 %229, 2, !dbg !4237
  %231 = icmp ugt i32 %229, 1023, !dbg !4238
  br i1 %231, label %232, label %233, !dbg !4239

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4240
  unreachable, !dbg !4240

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4245

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4246
  %236 = add i32 %235, %229, !dbg !4249
  br label %320, !dbg !4250

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4251
  store i8 %238, i8* %0, align 1, !dbg !4252
  %239 = trunc i32 %194 to i8, !dbg !4253
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4255
  store i8 %240, i8* %242, align 1, !dbg !4257
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4258
  store i8 %241, i8* %243, align 1, !dbg !4259
  %244 = trunc i32 %193 to i8, !dbg !4260
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4261
  store i8 %244, i8* %245, align 1, !dbg !4262
  %246 = icmp eq i32 %193, 0, !dbg !4263
  %247 = xor i1 %246, true, !dbg !4264
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4264
  call void @llvm.dbg.value(metadata i8* %227, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 0, metadata !4008, metadata !DIExpression()), !dbg !4059
  br i1 %249, label %250, label %269, !dbg !4264

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4265

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %254, metadata !4008, metadata !DIExpression()), !dbg !4059
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4266
  %256 = load i8, i8* %255, align 1, !dbg !4266
  %257 = icmp sgt i8 %256, -1, !dbg !4268
  br i1 %257, label %265, label %258, !dbg !4269

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4052, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4270
  %259 = ptrtoint i8* %253 to i32, !dbg !4271
  %260 = add i32 %251, %259, !dbg !4273
  %261 = icmp ugt i32 %260, %196, !dbg !4274
  br i1 %261, label %320, label %262, !dbg !4275

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4276
  call void @llvm.dbg.value(metadata i8 %263, metadata !4052, metadata !DIExpression()), !dbg !4270
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4277
  call void @llvm.dbg.value(metadata i8* %264, metadata !3998, metadata !DIExpression()), !dbg !4059
  store i8 %263, i8* %253, align 1, !dbg !4278
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %266, metadata !3998, metadata !DIExpression()), !dbg !4059
  %267 = add nuw i32 %254, 1, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %267, metadata !4008, metadata !DIExpression()), !dbg !4059
  %268 = icmp eq i32 %267, %195, !dbg !4280
  br i1 %268, label %269, label %252, !dbg !4265, !llvm.loop !4281

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4208
  call void @llvm.dbg.value(metadata i8* %270, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 0, metadata !4008, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %133, metadata !4009, metadata !DIExpression()), !dbg !4059
  %271 = icmp eq i32 %195, 0, !dbg !4283
  br i1 %271, label %316, label %272, !dbg !4286

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4286

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %276, metadata !4009, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %277, metadata !4008, metadata !DIExpression()), !dbg !4059
  br i1 %246, label %282, label %278, !dbg !4287

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4290
  %280 = load i8, i8* %279, align 1, !dbg !4290
  %281 = icmp sgt i8 %280, -1, !dbg !4291
  br i1 %281, label %282, label %311, !dbg !4292

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4293

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3999, metadata !DIExpression()), !dbg !4059
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4294
  %285 = load i8, i8* %284, align 1, !dbg !4294
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4297
  call void @llvm.dbg.value(metadata i8* %286, metadata !3998, metadata !DIExpression()), !dbg !4059
  store i8 %285, i8* %275, align 1, !dbg !4298
  br label %297, !dbg !4299

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4300
  %289 = load i8, i8* %288, align 1, !dbg !4300
  %290 = zext i8 %289 to i32, !dbg !4300
  %291 = shl nuw nsw i32 %290, 2, !dbg !4302
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4303
  %293 = bitcast i8* %292 to i8**, !dbg !4304
  %294 = load i8*, i8** %293, align 4, !dbg !4304
  call void @llvm.dbg.value(metadata i8* %294, metadata !4009, metadata !DIExpression()), !dbg !4059
  store i8* null, i8** %293, align 4, !dbg !4305
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4306
  %296 = add i32 %295, 1, !dbg !4307
  call void @llvm.dbg.value(metadata i32 %296, metadata !3999, metadata !DIExpression()), !dbg !4059
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4059
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4308
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4059
  call void @llvm.dbg.value(metadata i8* %300, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %299, metadata !3999, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %298, metadata !4009, metadata !DIExpression()), !dbg !4059
  %301 = ptrtoint i8* %300 to i32, !dbg !4309
  %302 = add i32 %273, %299, !dbg !4311
  %303 = add i32 %302, %301, !dbg !4312
  %304 = icmp ugt i32 %303, %196, !dbg !4313
  br i1 %304, label %320, label %305, !dbg !4314

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4315
  %307 = load i8, i8* %306, align 1, !dbg !4315
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4316
  call void @llvm.dbg.value(metadata i8* %308, metadata !3998, metadata !DIExpression()), !dbg !4059
  store i8 %307, i8* %300, align 1, !dbg !4317
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4318
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4319
  call void @llvm.dbg.value(metadata i8* %310, metadata !3998, metadata !DIExpression()), !dbg !4059
  br label %311, !dbg !4320

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4321
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4059
  call void @llvm.dbg.value(metadata i8* %313, metadata !3998, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %312, metadata !4009, metadata !DIExpression()), !dbg !4059
  %314 = add nuw i32 %277, 1, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %314, metadata !4008, metadata !DIExpression()), !dbg !4059
  %315 = icmp eq i32 %314, %195, !dbg !4283
  br i1 %315, label %316, label %274, !dbg !4286, !llvm.loop !4323

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4208
  %318 = ptrtoint i8* %317 to i32, !dbg !4325
  %319 = sub i32 %318, %17, !dbg !4325
  br label %320, !dbg !4326

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4327
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4327
  ret i32 %321, !dbg !4327
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4332, metadata !DIExpression()), !dbg !4333
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4334
  ret i1 %2, !dbg !4335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4341, metadata !DIExpression()), !dbg !4342
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4343
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4344
  %4 = and i1 %2, %3, !dbg !4344
  ret i1 %4, !dbg !4345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4346 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4350, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %1, metadata !4351, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i32 %2, metadata !4352, metadata !DIExpression()), !dbg !4356
  call void @llvm.dbg.value(metadata i8* %3, metadata !4353, metadata !DIExpression()), !dbg !4356
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4357
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4357
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4354, metadata !DIExpression()), !dbg !4358
  call void @llvm.va_start(i8* nonnull %6), !dbg !4359
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4360
  %8 = load i32, i32* %7, align 4, !dbg !4360
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4360
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %10, metadata !4355, metadata !DIExpression()), !dbg !4356
  call void @llvm.va_end(i8* nonnull %6), !dbg !4361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4362
  ret i32 %10, !dbg !4363
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4364 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4376, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4377, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i8* %2, metadata !4378, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i8* %3, metadata !4379, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i8* %3, metadata !4380, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i8* %3, metadata !4381, metadata !DIExpression()), !dbg !4395
  %5 = icmp eq i8* %3, null, !dbg !4396
  br i1 %5, label %45, label %6, !dbg !4398

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4390, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4395
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4399
  %8 = load i8, i8* %7, align 1, !dbg !4399
  %9 = zext i8 %8 to i32, !dbg !4400
  call void @llvm.dbg.value(metadata i32 %9, metadata !4391, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i8 undef, metadata !4392, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata i8 undef, metadata !4393, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata i32 0, metadata !4389, metadata !DIExpression()), !dbg !4395
  %10 = icmp eq i8 %8, 0, !dbg !4401
  br i1 %10, label %39, label %11, !dbg !4404

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4405
  call void @llvm.dbg.value(metadata i8 %12, metadata !4390, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %13 = zext i8 %12 to i32, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %13, metadata !4390, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %14 = shl nuw nsw i32 %13, 2, !dbg !4407
  call void @llvm.dbg.value(metadata i32 %14, metadata !4390, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4409
  %17 = load i8, i8* %16, align 1, !dbg !4409
  call void @llvm.dbg.value(metadata i8 %17, metadata !4392, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %18 = zext i8 %17 to i32, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %18, metadata !4392, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4411
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4412
  %21 = load i8, i8* %20, align 1, !dbg !4412
  call void @llvm.dbg.value(metadata i8 %21, metadata !4393, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %22 = zext i8 %21 to i32, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %22, metadata !4393, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %23 = shl nuw nsw i32 %22, 1, !dbg !4414
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4387, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4395
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %24, metadata !4387, metadata !DIExpression()), !dbg !4395
  br label %25, !dbg !4404

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4387, metadata !DIExpression()), !dbg !4395
  call void @llvm.dbg.value(metadata i32 %27, metadata !4389, metadata !DIExpression()), !dbg !4395
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4416
  call void @llvm.dbg.value(metadata i8* %28, metadata !4387, metadata !DIExpression()), !dbg !4395
  %29 = load i8, i8* %26, align 1, !dbg !4418
  %30 = zext i8 %29 to i32, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %30, metadata !4394, metadata !DIExpression()), !dbg !4395
  %31 = shl nuw nsw i32 %30, 2, !dbg !4419
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4420
  %33 = bitcast i8* %32 to i8**, !dbg !4421
  call void @llvm.dbg.value(metadata i8** %33, metadata !4388, metadata !DIExpression()), !dbg !4395
  store i8* %28, i8** %33, align 4, !dbg !4422
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4423
  %35 = add i32 %34, 1, !dbg !4424
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4425
  call void @llvm.dbg.value(metadata i8* %36, metadata !4387, metadata !DIExpression()), !dbg !4395
  %37 = add nuw nsw i32 %27, 1, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %37, metadata !4389, metadata !DIExpression()), !dbg !4395
  %38 = icmp eq i32 %37, %9, !dbg !4401
  br i1 %38, label %39, label %25, !dbg !4404, !llvm.loop !4427

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %40, metadata !4380, metadata !DIExpression()), !dbg !4395
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4430
  %42 = bitcast i8* %41 to i8**, !dbg !4430
  %43 = load i8*, i8** %42, align 1, !dbg !4430
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4431
  br label %45, !dbg !4432

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4395
  ret i32 %46, !dbg !4433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4434 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4438, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4439, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %2, metadata !4440, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %3, metadata !4441, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %4, metadata !4442, metadata !DIExpression()), !dbg !4448
  call void @llvm.dbg.value(metadata i8* %4, metadata !4443, metadata !DIExpression()), !dbg !4448
  %6 = ptrtoint i8* %4 to i32, !dbg !4449
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4449
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4449
  ret i32 %8, !dbg !4450
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4455, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i32 %1, metadata !4456, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i8 0, metadata !4458, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i32 0, metadata !4459, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i8 poison, metadata !4458, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i8* %0, metadata !4455, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4460
  %3 = load i8, i8* %0, align 1, !dbg !4461
  call void @llvm.dbg.value(metadata i8 %3, metadata !4457, metadata !DIExpression()), !dbg !4460
  %4 = icmp eq i8 %3, 0, !dbg !4462
  br i1 %4, label %29, label %5, !dbg !4463

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4464
  call void @llvm.dbg.value(metadata i32 %8, metadata !4459, metadata !DIExpression()), !dbg !4460
  br i1 %9, label %11, label %22, !dbg !4465

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4467
  br i1 %12, label %13, label %17, !dbg !4471

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4472
  br i1 %14, label %29, label %15, !dbg !4475

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4476
  br i1 %16, label %29, label %22, !dbg !4478

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4479
  %19 = xor i1 %18, true, !dbg !4481
  %20 = zext i1 %18 to i32, !dbg !4481
  %21 = add nsw i32 %8, %20, !dbg !4481
  br label %22, !dbg !4481

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4460
  call void @llvm.dbg.value(metadata i32 %24, metadata !4459, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i8 poison, metadata !4458, metadata !DIExpression()), !dbg !4460
  %25 = icmp eq i8 %6, 37, !dbg !4482
  %26 = xor i1 %25, %23, !dbg !4484
  call void @llvm.dbg.value(metadata i8* %10, metadata !4455, metadata !DIExpression()), !dbg !4460
  call void @llvm.dbg.value(metadata i8* %10, metadata !4455, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4460
  %27 = load i8, i8* %10, align 1, !dbg !4461
  call void @llvm.dbg.value(metadata i8 %27, metadata !4457, metadata !DIExpression()), !dbg !4460
  %28 = icmp eq i8 %27, 0, !dbg !4462
  br i1 %28, label %29, label %5, !dbg !4463, !llvm.loop !4485

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4460
  ret i1 %30, !dbg !4487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4488 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4492, metadata !DIExpression()), !dbg !4493
  %2 = add i8 %0, -64, !dbg !4494
  %3 = icmp ult i8 %2, 59, !dbg !4494
  ret i1 %3, !dbg !4495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4496 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4504, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %1, metadata !4505, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4506, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %3, metadata !4507, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %4, metadata !4508, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i16* %5, metadata !4509, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %6, metadata !4510, metadata !DIExpression()), !dbg !4573
  %11 = icmp eq i8* %0, null, !dbg !4574
  br i1 %11, label %12, label %13, !dbg !4577

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4578
  unreachable, !dbg !4578

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4511, metadata !DIExpression()), !dbg !4573
  %14 = bitcast i8* %0 to i32*, !dbg !4580
  call void @llvm.dbg.value(metadata i32* %14, metadata !4512, metadata !DIExpression()), !dbg !4573
  %15 = and i32 %4, 8, !dbg !4581
  %16 = icmp eq i32 %15, 0, !dbg !4582
  call void @llvm.dbg.value(metadata i1 %16, metadata !4516, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %0, metadata !4519, metadata !DIExpression()), !dbg !4573
  %17 = icmp eq i32 %1, 0, !dbg !4583
  br i1 %17, label %18, label %20, !dbg !4584

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4585
  br label %20, !dbg !4584

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4584
  call void @llvm.dbg.value(metadata i32 %21, metadata !4505, metadata !DIExpression()), !dbg !4573
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4586
  %23 = load i8, i8* %22, align 1, !dbg !4586
  %24 = zext i8 %23 to i32, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %24, metadata !4514, metadata !DIExpression()), !dbg !4573
  %25 = icmp ne i8 %23, 0, !dbg !4588
  %26 = and i32 %4, 1, !dbg !4589
  %27 = icmp ne i32 %26, 0, !dbg !4589
  %28 = and i1 %27, %25, !dbg !4589
  call void @llvm.dbg.value(metadata i1 %28, metadata !4518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4573
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4590
  %30 = load i8, i8* %29, align 1, !dbg !4590
  %31 = zext i8 %30 to i32, !dbg !4591
  call void @llvm.dbg.value(metadata i32 %31, metadata !4515, metadata !DIExpression()), !dbg !4573
  %32 = icmp ne i8 %30, 0, !dbg !4592
  %33 = and i32 %4, 2, !dbg !4593
  %34 = icmp ne i32 %33, 0, !dbg !4593
  %35 = and i1 %34, %32, !dbg !4593
  call void @llvm.dbg.value(metadata i1 %35, metadata !4517, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4573
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4594
  br i1 %36, label %41, label %37, !dbg !4594

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4596
  br i1 %38, label %287, label %39, !dbg !4599

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4600
  br label %287, !dbg !4602

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4603
  %43 = zext i8 %42 to i32, !dbg !4604
  %44 = shl nuw nsw i32 %43, 2, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %44, metadata !4513, metadata !DIExpression()), !dbg !4573
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4606
  %46 = bitcast i8* %45 to i8**, !dbg !4607
  %47 = load i8*, i8** %46, align 4, !dbg !4607
  call void @llvm.dbg.value(metadata i8* %47, metadata !4522, metadata !DIExpression()), !dbg !4573
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4608
  call void @llvm.dbg.value(metadata i8* %48, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4524, metadata !DIExpression()), !dbg !4573
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4609
  br i1 %49, label %50, label %135, !dbg !4610

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4521, metadata !DIExpression()), !dbg !4573
  br i1 %28, label %51, label %76, !dbg !4611

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %48, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4524, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4525, metadata !DIExpression()), !dbg !4612
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4613

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %55, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %56, metadata !4524, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %57, metadata !4525, metadata !DIExpression()), !dbg !4612
  %58 = load i8, i8* %55, align 1, !dbg !4614
  %59 = zext i8 %58 to i32, !dbg !4615
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4615
  %61 = bitcast i32* %60 to i8**, !dbg !4616
  %62 = load i8*, i8** %61, align 4, !dbg !4616
  call void @llvm.dbg.value(metadata i8* %62, metadata !4531, metadata !DIExpression()), !dbg !4617
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4618
  call void @llvm.dbg.value(metadata i32 %63, metadata !4534, metadata !DIExpression()), !dbg !4617
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4619
  br i1 %65, label %66, label %70, !dbg !4619

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4621
  %68 = add nuw i32 %56, 1, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %68, metadata !4524, metadata !DIExpression()), !dbg !4573
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4624
  store i16 %67, i16* %69, align 2, !dbg !4625
  br label %70, !dbg !4626

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %71, metadata !4524, metadata !DIExpression()), !dbg !4573
  %72 = add nsw i32 %63, %54, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %72, metadata !4521, metadata !DIExpression()), !dbg !4573
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %73, metadata !4523, metadata !DIExpression()), !dbg !4573
  %74 = add nuw nsw i32 %57, 1, !dbg !4629
  call void @llvm.dbg.value(metadata i32 %74, metadata !4525, metadata !DIExpression()), !dbg !4612
  %75 = icmp eq i32 %74, %24, !dbg !4630
  br i1 %75, label %82, label %53, !dbg !4613, !llvm.loop !4631

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4633
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4633
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4633
  br label %82, !dbg !4633

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4636
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4573
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4637
  call void @llvm.dbg.value(metadata i1 undef, metadata !4535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4638
  call void @llvm.dbg.value(metadata i32 0, metadata !4536, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.value(metadata i32 %85, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %84, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %83, metadata !4524, metadata !DIExpression()), !dbg !4573
  %86 = icmp eq i8 %30, 0, !dbg !4640
  br i1 %86, label %287, label %87, !dbg !4641

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4642
  %89 = icmp eq i32 %88, 0, !dbg !4643
  call void @llvm.dbg.value(metadata i1 %89, metadata !4535, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4638
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4641

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8* %96, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %97, metadata !4524, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %98, metadata !4536, metadata !DIExpression()), !dbg !4639
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %99, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 undef, metadata !4538, metadata !DIExpression()), !dbg !4645
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4646
  call void @llvm.dbg.value(metadata i8* %100, metadata !4523, metadata !DIExpression()), !dbg !4573
  %101 = load i8, i8* %99, align 1, !dbg !4647
  call void @llvm.dbg.value(metadata i8 %101, metadata !4541, metadata !DIExpression()), !dbg !4645
  %102 = zext i8 %101 to i32, !dbg !4648
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4648
  %104 = bitcast i32* %103 to i8**, !dbg !4649
  %105 = load i8*, i8** %104, align 4, !dbg !4649
  call void @llvm.dbg.value(metadata i8* %105, metadata !4542, metadata !DIExpression()), !dbg !4645
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4650
  call void @llvm.dbg.value(metadata i1 %106, metadata !4543, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4645
  br i1 %16, label %113, label %107, !dbg !4651

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4653
  call void @llvm.dbg.value(metadata i8 %108, metadata !4538, metadata !DIExpression()), !dbg !4645
  %109 = zext i8 %108 to i32, !dbg !4654
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4655
  br i1 %110, label %111, label %113, !dbg !4656

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4657
  %112 = add nsw i32 %95, -2, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %112, metadata !4521, metadata !DIExpression()), !dbg !4573
  br label %130, !dbg !4664

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4665

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4666

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4668
  call void @llvm.dbg.value(metadata i32 %116, metadata !4521, metadata !DIExpression()), !dbg !4573
  br label %130, !dbg !4671

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4672

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4569), !dbg !4673
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %119, metadata !4544, metadata !DIExpression()), !dbg !4645
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4675
  br i1 %121, label %122, label %126, !dbg !4675

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4677
  %124 = add nuw i32 %97, 1, !dbg !4679
  call void @llvm.dbg.value(metadata i32 %124, metadata !4524, metadata !DIExpression()), !dbg !4573
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4680
  store i16 %123, i16* %125, align 2, !dbg !4681
  br label %126, !dbg !4682

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4573
  call void @llvm.dbg.value(metadata i32 %127, metadata !4524, metadata !DIExpression()), !dbg !4573
  %128 = add i32 %95, -1, !dbg !4683
  %129 = add i32 %128, %119, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %129, metadata !4521, metadata !DIExpression()), !dbg !4573
  br label %130, !dbg !4685

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4573
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4645
  call void @llvm.dbg.value(metadata i32 %132, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %131, metadata !4524, metadata !DIExpression()), !dbg !4573
  %133 = add nuw nsw i32 %98, 1, !dbg !4686
  call void @llvm.dbg.value(metadata i8* %100, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %133, metadata !4536, metadata !DIExpression()), !dbg !4639
  %134 = icmp eq i32 %133, %31, !dbg !4640
  br i1 %134, label %287, label %94, !dbg !4641, !llvm.loop !4687

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4546, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4547, metadata !DIExpression()), !dbg !4690
  br i1 %28, label %136, label %138, !dbg !4691

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4548, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 0, metadata !4549, metadata !DIExpression()), !dbg !4573
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4692
  call void @llvm.dbg.value(metadata i8* %137, metadata !4550, metadata !DIExpression()), !dbg !4573
  br label %143, !dbg !4695

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4696
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4696

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4550, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 undef, metadata !4549, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 0, metadata !4548, metadata !DIExpression()), !dbg !4573
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4698
  br label %148, !dbg !4701

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4702
  call void @llvm.dbg.value(metadata i8* %151, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4552, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i8 %149, metadata !4549, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 %150, metadata !4548, metadata !DIExpression()), !dbg !4573
  %152 = icmp eq i8 %30, 0, !dbg !4704
  br i1 %152, label %153, label %155, !dbg !4705

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4706
  br label %160, !dbg !4705

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4705

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4706
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4707
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4708
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4573
  call void @llvm.dbg.value(metadata i8 undef, metadata !4545, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4573
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4709
  %166 = load i8, i8* %165, align 1, !dbg !4709
  %167 = zext i8 %162 to i32, !dbg !4710
  %168 = add i8 %166, %162, !dbg !4711
  call void @llvm.dbg.value(metadata i8 %168, metadata !4545, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4573
  %169 = icmp eq i32 %33, 0, !dbg !4712
  %170 = lshr i8 %163, 1, !dbg !4713
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4713
  call void @llvm.dbg.value(metadata i8 %171, metadata !4545, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4573
  %172 = icmp eq i32 %26, 0, !dbg !4714
  %173 = icmp eq i32 %161, 0, !dbg !4706
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4706
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4706
  call void @llvm.dbg.value(metadata i8 %175, metadata !4545, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4573
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4560, metadata !DIExpression()), !dbg !4715
  %176 = load i32, i32* %14, align 1, !dbg !4716
  store i8 %168, i8* %165, align 1, !dbg !4717
  store i8 %175, i8* %22, align 1, !dbg !4717
  store i8 %171, i8* %29, align 1, !dbg !4717
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4718
  call void @llvm.dbg.value(metadata i32 %177, metadata !4551, metadata !DIExpression()), !dbg !4573
  %178 = icmp slt i32 %177, 0, !dbg !4719
  br i1 %178, label %287, label %240, !dbg !4721

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %181, metadata !4552, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.value(metadata i8 %182, metadata !4549, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 %183, metadata !4548, metadata !DIExpression()), !dbg !4573
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4722
  call void @llvm.dbg.value(metadata i8* %184, metadata !4523, metadata !DIExpression()), !dbg !4573
  %185 = load i8, i8* %180, align 1, !dbg !4723
  call void @llvm.dbg.value(metadata i8 %185, metadata !4554, metadata !DIExpression()), !dbg !4724
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %186, metadata !4523, metadata !DIExpression()), !dbg !4573
  %187 = load i8, i8* %184, align 1, !dbg !4726
  call void @llvm.dbg.value(metadata i8 %187, metadata !4557, metadata !DIExpression()), !dbg !4724
  %188 = zext i8 %187 to i32, !dbg !4727
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4727
  %190 = bitcast i32* %189 to i8**, !dbg !4728
  %191 = load i8*, i8** %190, align 4, !dbg !4728
  call void @llvm.dbg.value(metadata i8* %191, metadata !4558, metadata !DIExpression()), !dbg !4724
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4729
  call void @llvm.dbg.value(metadata i1 %192, metadata !4559, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4724
  br i1 %16, label %196, label %193, !dbg !4730

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4732
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4733
  br i1 %195, label %235, label %196, !dbg !4734

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4735

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4736

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4739
  br i1 %199, label %201, label %200, !dbg !4744

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4745
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4745
  unreachable, !dbg !4745

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4739
  %203 = add nuw nsw i8 %183, 1, !dbg !4747
  call void @llvm.dbg.value(metadata i8 %203, metadata !4548, metadata !DIExpression()), !dbg !4573
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4748
  br label %231, !dbg !4749

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4750

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4751
  br i1 %207, label %209, label %208, !dbg !4756

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4757
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4757
  unreachable, !dbg !4757

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4751
  %211 = add nuw nsw i8 %182, 1, !dbg !4759
  call void @llvm.dbg.value(metadata i8 %211, metadata !4549, metadata !DIExpression()), !dbg !4573
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4760
  br label %231, !dbg !4761

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4762

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4764
  br i1 %215, label %217, label %216, !dbg !4769

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4770
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4770
  unreachable, !dbg !4770

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4764
  %219 = add nuw nsw i8 %183, 1, !dbg !4772
  call void @llvm.dbg.value(metadata i8 %219, metadata !4548, metadata !DIExpression()), !dbg !4573
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4773
  br label %231, !dbg !4774

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4775
  br i1 %222, label %224, label %223, !dbg !4779

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4780
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4780
  unreachable, !dbg !4780

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4775
  %226 = add nuw nsw i8 %182, 1, !dbg !4782
  call void @llvm.dbg.value(metadata i8 %226, metadata !4549, metadata !DIExpression()), !dbg !4573
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4783
  store i8 %185, i8* %227, align 1, !dbg !4784
  %228 = add nuw nsw i8 %182, 2, !dbg !4785
  call void @llvm.dbg.value(metadata i8 %228, metadata !4549, metadata !DIExpression()), !dbg !4573
  %229 = zext i8 %226 to i32, !dbg !4786
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4786
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4787
  br label %235, !dbg !4788

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4573
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4708
  call void @llvm.dbg.value(metadata i8 %237, metadata !4549, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i8 %236, metadata !4548, metadata !DIExpression()), !dbg !4573
  %238 = add nuw nsw i32 %181, 1, !dbg !4788
  call void @llvm.dbg.value(metadata i8* %186, metadata !4523, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 %238, metadata !4552, metadata !DIExpression()), !dbg !4703
  %239 = icmp eq i32 %238, %31, !dbg !4704
  br i1 %239, label %160, label %179, !dbg !4705, !llvm.loop !4789

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %177, metadata !4521, metadata !DIExpression()), !dbg !4573
  store i32 %176, i32* %14, align 1, !dbg !4791
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4792
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %243, metadata !4551, metadata !DIExpression()), !dbg !4573
  %244 = icmp slt i32 %243, 0, !dbg !4794
  br i1 %244, label %287, label %245, !dbg !4796

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4521, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4573
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4797
  %248 = add nuw nsw i32 %44, %24, !dbg !4797
  %249 = sub i32 %247, %248, !dbg !4797
  call void @llvm.dbg.value(metadata i32 %249, metadata !4561, metadata !DIExpression()), !dbg !4573
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %250, metadata !4551, metadata !DIExpression()), !dbg !4573
  %251 = icmp slt i32 %250, 0, !dbg !4799
  br i1 %251, label %287, label %252, !dbg !4801

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %253, metadata !4521, metadata !DIExpression()), !dbg !4573
  %254 = add nuw nsw i32 %253, %250, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %254, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.value(metadata i32 0, metadata !4562, metadata !DIExpression()), !dbg !4804
  %255 = icmp eq i8 %162, 0, !dbg !4805
  br i1 %255, label %284, label %256, !dbg !4806

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4806

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4562, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %260, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4807
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4808
  %262 = load i8, i8* %261, align 1, !dbg !4808
  call void @llvm.dbg.value(metadata i8 %262, metadata !4564, metadata !DIExpression()), !dbg !4809
  store i8 %262, i8* %10, align 1, !dbg !4810
  %263 = zext i8 %262 to i32, !dbg !4811
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4811
  %265 = bitcast i32* %264 to i8**, !dbg !4812
  %266 = load i8*, i8** %265, align 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %266, metadata !4567, metadata !DIExpression()), !dbg !4809
  br i1 %257, label %270, label %267, !dbg !4813

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4814
  %269 = load i16, i16* %268, align 2, !dbg !4814
  br label %270, !dbg !4813

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 undef, metadata !4568, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %10, metadata !4564, metadata !DIExpression(DW_OP_deref)), !dbg !4809
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %272, metadata !4551, metadata !DIExpression()), !dbg !4573
  %273 = icmp slt i32 %272, 0, !dbg !4816
  br i1 %273, label %277, label %274, !dbg !4818

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4568, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4521, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4573
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %275, metadata !4551, metadata !DIExpression()), !dbg !4573
  %276 = icmp slt i32 %275, 0, !dbg !4820
  br i1 %276, label %277, label %279, !dbg !4822

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4521, metadata !DIExpression()), !dbg !4573
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %280, metadata !4521, metadata !DIExpression()), !dbg !4573
  %281 = add nsw i32 %280, %275, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %281, metadata !4521, metadata !DIExpression()), !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4823
  %282 = add nuw nsw i32 %259, 1, !dbg !4826
  call void @llvm.dbg.value(metadata i32 %282, metadata !4562, metadata !DIExpression()), !dbg !4804
  %283 = icmp eq i32 %282, %167, !dbg !4805
  br i1 %283, label %284, label %258, !dbg !4806, !llvm.loop !4827

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4803
  call void @llvm.dbg.value(metadata i32 %285, metadata !4521, metadata !DIExpression()), !dbg !4573
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4829
  br label %287, !dbg !4830

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4573
  ret i32 %288, !dbg !4831
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4832 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4836, metadata !DIExpression()), !dbg !4844
  %2 = icmp eq i8* %0, null, !dbg !4845
  br i1 %2, label %3, label %4, !dbg !4848

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4849
  unreachable, !dbg !4849

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4837, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.value(metadata i8* %0, metadata !4838, metadata !DIExpression()), !dbg !4844
  %5 = load i8, i8* %0, align 1, !dbg !4851
  %6 = zext i8 %5 to i32, !dbg !4851
  %7 = shl nuw nsw i32 %6, 2, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %7, metadata !4839, metadata !DIExpression()), !dbg !4844
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4853
  %9 = load i8, i8* %8, align 1, !dbg !4853
  %10 = zext i8 %9 to i32, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %10, metadata !4840, metadata !DIExpression()), !dbg !4844
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4854
  %12 = load i8, i8* %11, align 1, !dbg !4854
  %13 = zext i8 %12 to i32, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %13, metadata !4841, metadata !DIExpression()), !dbg !4844
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4855
  call void @llvm.dbg.value(metadata i8* %14, metadata !4837, metadata !DIExpression()), !dbg !4844
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4856
  call void @llvm.dbg.value(metadata i8* %15, metadata !4837, metadata !DIExpression()), !dbg !4844
  call void @llvm.dbg.value(metadata i32 0, metadata !4842, metadata !DIExpression()), !dbg !4857
  %16 = icmp eq i8 %9, 0, !dbg !4858
  br i1 %16, label %17, label %22, !dbg !4860

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4844
  %19 = ptrtoint i8* %18 to i32, !dbg !4861
  %20 = ptrtoint i8* %0 to i32, !dbg !4861
  %21 = sub i32 %19, %20, !dbg !4861
  ret i32 %21, !dbg !4862

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4842, metadata !DIExpression()), !dbg !4857
  call void @llvm.dbg.value(metadata i8* %24, metadata !4837, metadata !DIExpression()), !dbg !4844
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %25, metadata !4837, metadata !DIExpression()), !dbg !4844
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4865
  %27 = add i32 %26, 1, !dbg !4866
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %28, metadata !4837, metadata !DIExpression()), !dbg !4844
  %29 = add nuw nsw i32 %23, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %29, metadata !4842, metadata !DIExpression()), !dbg !4857
  %30 = icmp eq i32 %29, %10, !dbg !4858
  br i1 %30, label %17, label %22, !dbg !4860, !llvm.loop !4869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4871 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4875, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8* %1, metadata !4876, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i8* %2, metadata !4877, metadata !DIExpression()), !dbg !4879
  call void @llvm.dbg.value(metadata i16 %3, metadata !4878, metadata !DIExpression()), !dbg !4879
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4880
  br i1 %5, label %6, label %9, !dbg !4882

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4883
  %8 = add i32 %7, 1, !dbg !4885
  br label %20, !dbg !4886

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4887
  br i1 %10, label %13, label %11, !dbg !4888

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4888
  br label %16, !dbg !4888

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4889
  %15 = add i32 %14, 1, !dbg !4890
  br label %16, !dbg !4888

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4888
  %18 = and i32 %17, 65535, !dbg !4891
  call void @llvm.dbg.value(metadata i32 %17, metadata !4878, metadata !DIExpression()), !dbg !4879
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4892
  br label %20, !dbg !4893

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4879
  ret i32 %21, !dbg !4894
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4897, metadata !DIExpression()), !dbg !4898
  ret i32 0, !dbg !4899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4900 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4904, metadata !DIExpression()), !dbg !4905
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4906
  ret void, !dbg !4907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4908 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4911
  ret i8* %1, !dbg !4912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4913 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4924, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i8* %0, metadata !4923, metadata !DIExpression()), !dbg !4933
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !4934
  ret void, !dbg !4936
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4941, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i8* %1, metadata !4942, metadata !DIExpression()), !dbg !4943
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4944
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4944
  ret i32 %4, !dbg !4945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4946 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4950, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i8* %1, metadata !4951, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.value(metadata i8* %2, metadata !4952, metadata !DIExpression()), !dbg !4954
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4955
  ret void, !dbg !4956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4961, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32 %1, metadata !4962, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32 0, metadata !4963, metadata !DIExpression()), !dbg !4964
  %3 = icmp eq i32 %1, 0, !dbg !4965
  br i1 %3, label %13, label %4, !dbg !4968

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4963, metadata !DIExpression()), !dbg !4964
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4969
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4971
  %8 = load i8, i8* %7, align 1, !dbg !4971
  %9 = zext i8 %8 to i32, !dbg !4971
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4969
  %11 = add nuw i32 %5, 1, !dbg !4972
  call void @llvm.dbg.value(metadata i32 %11, metadata !4963, metadata !DIExpression()), !dbg !4964
  %12 = icmp eq i32 %11, %1, !dbg !4965
  br i1 %12, label %13, label %4, !dbg !4968, !llvm.loop !4973

13:                                               ; preds = %4, %2
  ret void, !dbg !4975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4976 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4980, metadata !DIExpression()), !dbg !4982
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4983
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4981, metadata !DIExpression()), !dbg !4984
  call void @llvm.va_start(i8* nonnull %3), !dbg !4985
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4986
  %5 = load i32, i32* %4, align 4, !dbg !4986
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4986
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !4986
  call void @llvm.va_end(i8* nonnull %3), !dbg !4987
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4988
  ret void, !dbg !4988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4989 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4993, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.value(metadata i32 %1, metadata !4994, metadata !DIExpression()), !dbg !4998
  call void @llvm.dbg.value(metadata i8* %2, metadata !4995, metadata !DIExpression()), !dbg !4998
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4999
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4996, metadata !DIExpression()), !dbg !5000
  call void @llvm.va_start(i8* nonnull %5), !dbg !5001
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5002
  %7 = load i32, i32* %6, align 4, !dbg !5002
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5002
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %9, metadata !4997, metadata !DIExpression()), !dbg !4998
  call void @llvm.va_end(i8* nonnull %5), !dbg !5003
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !5004
  ret i32 %9, !dbg !5005
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5006 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5013, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %0, metadata !5010, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 %1, metadata !5011, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %2, metadata !5012, metadata !DIExpression()), !dbg !5020
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5021
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5021
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5014, metadata !DIExpression()), !dbg !5022
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5023
  store i8* %0, i8** %7, align 4, !dbg !5023
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5023
  store i32 %1, i32* %8, align 4, !dbg !5023
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5023
  store i32 0, i32* %9, align 4, !dbg !5023
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !5024
  %10 = load i32, i32* %9, align 4, !dbg !5025
  %11 = load i32, i32* %8, align 4, !dbg !5027
  %12 = icmp slt i32 %10, %11, !dbg !5028
  br i1 %12, label %13, label %15, !dbg !5029

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5030
  store i8 0, i8* %14, align 1, !dbg !5032
  br label %15, !dbg !5033

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5034
  ret i32 %10, !dbg !5035
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5041, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5042, metadata !DIExpression()), !dbg !5043
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5044
  %4 = load i8*, i8** %3, align 4, !dbg !5044
  %5 = icmp eq i8* %4, null, !dbg !5046
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5047
  br i1 %5, label %12, label %8, !dbg !5048

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5049
  %10 = load i32, i32* %9, align 4, !dbg !5049
  %11 = icmp slt i32 %7, %10, !dbg !5050
  br i1 %11, label %15, label %12, !dbg !5051

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5052
  %14 = add nsw i32 %7, 1, !dbg !5054
  store i32 %14, i32* %13, align 4, !dbg !5054
  br label %25, !dbg !5055

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5056
  %17 = icmp eq i32 %7, %16, !dbg !5058
  br i1 %17, label %18, label %21, !dbg !5059

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5060
  store i32 %19, i32* %6, align 4, !dbg !5060
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5062
  store i8 0, i8* %20, align 1, !dbg !5063
  br label %25, !dbg !5064

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5065
  %23 = add nsw i32 %7, 1, !dbg !5067
  store i32 %23, i32* %6, align 4, !dbg !5067
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5068
  store i8 %22, i8* %24, align 1, !dbg !5069
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5070
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5071 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5076, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %1, metadata !5077, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %2, metadata !5078, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %3, metadata !5079, metadata !DIExpression()), !dbg !5080
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5081
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5082
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5083
  unreachable, !dbg !5084
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5085 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5191
  ret %struct.k_thread* %1, !dbg !5192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5197, metadata !DIExpression()), !dbg !5198
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5199, !srcloc !5201
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5202
  ret void, !dbg !5203
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5204 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5205, !srcloc !5207
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5208
  ret %struct.k_thread* %1, !dbg !5209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5210 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5221, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5225
  %3 = icmp eq i8* %1, null, !dbg !5226
  br i1 %3, label %16, label %4, !dbg !5228

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5229
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5229
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5223, metadata !DIExpression()), !dbg !5225
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5230, !range !5231
  call void @llvm.dbg.value(metadata i32 %7, metadata !5224, metadata !DIExpression()), !dbg !5225
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5232
  br i1 %8, label %10, label %9, !dbg !5235

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5236
  unreachable, !dbg !5236

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5238
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5238
  %13 = icmp eq i32 %12, %7, !dbg !5238
  br i1 %13, label %15, label %14, !dbg !5241

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5242
  unreachable, !dbg !5242

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5244
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5245
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5247 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5251, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.value(metadata i8* %1, metadata !5252, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.value(metadata i8* %1, metadata !5253, metadata !DIExpression()), !dbg !5255
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5256
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5254, metadata !DIExpression()), !dbg !5255
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5257
  %5 = ptrtoint i8* %4 to i32, !dbg !5258
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5258
  %7 = sub i32 %5, %6, !dbg !5258
  %8 = lshr i32 %7, 3, !dbg !5259
  ret i32 %8, !dbg !5260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5261 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5265, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i32 %1, metadata !5266, metadata !DIExpression()), !dbg !5267
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5268
  %4 = and i32 %3, 1, !dbg !5269
  %5 = icmp ne i32 %4, 0, !dbg !5268
  ret i1 %5, !dbg !5270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5271 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5275, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i32 %1, metadata !5276, metadata !DIExpression()), !dbg !5277
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5278
  %4 = add i32 %3, %1, !dbg !5279
  ret i32 %4, !dbg !5280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 %1, metadata !5284, metadata !DIExpression()), !dbg !5285
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5286
  %4 = sub i32 %1, %3, !dbg !5287
  ret i32 %4, !dbg !5288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5289 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5293, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i32 %1, metadata !5294, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata i1 %2, metadata !5295, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5298
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5299
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5296, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5297, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5298
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5300
  %6 = bitcast i8* %5 to i16*, !dbg !5300
  %7 = load i16, i16* %6, align 2, !dbg !5300
  %8 = and i16 %7, -2, !dbg !5304
  %9 = zext i1 %2 to i16, !dbg !5304
  %10 = or i16 %8, %9, !dbg !5304
  store i16 %10, i16* %6, align 2, !dbg !5300
  ret void, !dbg !5305
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5306 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5310, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.value(metadata i32 %1, metadata !5311, metadata !DIExpression()), !dbg !5312
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5313
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5315
  br i1 %4, label %7, label %5, !dbg !5316

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5317
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5319
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5320
  br label %7, !dbg !5321

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5322
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5324
  br i1 %9, label %13, label %10, !dbg !5325

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5326
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5328
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5329
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5330
  call void @llvm.dbg.value(metadata i32 %12, metadata !5311, metadata !DIExpression()), !dbg !5312
  br label %13, !dbg !5331

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5311, metadata !DIExpression()), !dbg !5312
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5332
  ret void, !dbg !5333
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5334 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5336, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata i32 %1, metadata !5337, metadata !DIExpression()), !dbg !5341
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5342, !range !5343
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %4, metadata !5338, metadata !DIExpression()), !dbg !5345
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5348 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5352, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %1, metadata !5353, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %2, metadata !5354, metadata !DIExpression()), !dbg !5357
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5358
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5359
  %6 = add i32 %5, %4, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %6, metadata !5355, metadata !DIExpression()), !dbg !5357
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5361
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5362
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5363
  ret void, !dbg !5364
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5365 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5367, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.value(metadata i32 %1, metadata !5368, metadata !DIExpression()), !dbg !5372
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5373, !range !5343
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %4, metadata !5369, metadata !DIExpression()), !dbg !5375
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5376
  ret void, !dbg !5377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5378 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5382, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %1, metadata !5383, metadata !DIExpression()), !dbg !5384
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5385
  %4 = lshr i32 %3, 1, !dbg !5386
  ret i32 %4, !dbg !5387
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5388 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5392, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 %1, metadata !5393, metadata !DIExpression()), !dbg !5395
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5396
  %4 = add i32 %1, 1, !dbg !5397
  %5 = sub i32 %4, %3, !dbg !5398
  call void @llvm.dbg.value(metadata i32 %5, metadata !5394, metadata !DIExpression()), !dbg !5395
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5399, !range !5400
  %7 = sub nsw i32 31, %6, !dbg !5401
  ret i32 %7, !dbg !5402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5403 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5407, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %1, metadata !5408, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata i32 %2, metadata !5409, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5416
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5417
  %5 = load i32, i32* %4, align 4, !dbg !5417
  %6 = icmp eq i32 %5, 0, !dbg !5418
  br i1 %6, label %7, label %12, !dbg !5419

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5420
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5422
  %10 = load i32, i32* %9, align 4, !dbg !5423
  %11 = or i32 %10, %8, !dbg !5423
  store i32 %11, i32* %9, align 4, !dbg !5423
  store i32 %1, i32* %4, align 4, !dbg !5424
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5425
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5426
  br label %14, !dbg !5427

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5412, metadata !DIExpression()), !dbg !5428
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5429, !range !5430
  call void @llvm.dbg.value(metadata i32 %13, metadata !5415, metadata !DIExpression()), !dbg !5428
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5431
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5432
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5433
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5434
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5436 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5438, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %1, metadata !5439, metadata !DIExpression()), !dbg !5441
  call void @llvm.dbg.value(metadata i32 %2, metadata !5440, metadata !DIExpression()), !dbg !5441
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5442
  ret void, !dbg !5443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5444 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5446, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %1, metadata !5447, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %2, metadata !5448, metadata !DIExpression()), !dbg !5449
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5450
  ret void, !dbg !5451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5452 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5454, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %1, metadata !5455, metadata !DIExpression()), !dbg !5456
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5457
  ret i32 %3, !dbg !5458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5463, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 %1, metadata !5464, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata i32 %2, metadata !5465, metadata !DIExpression()), !dbg !5468
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5469
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5466, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5468
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5467, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5468
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5470
  call void @llvm.dbg.value(metadata i8* %5, metadata !5467, metadata !DIExpression()), !dbg !5468
  %6 = bitcast i8* %5 to i16*, !dbg !5471
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5474
  %8 = load i16, i16* %7, align 2, !dbg !5474
  %9 = zext i16 %8 to i32, !dbg !5474
  ret i32 %9, !dbg !5475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5476 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5480, metadata !DIExpression()), !dbg !5481
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5482
  ret %struct.chunk_unit_t* %2, !dbg !5483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5484 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5488, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %1, metadata !5489, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %2, metadata !5490, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %3, metadata !5491, metadata !DIExpression()), !dbg !5494
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5495
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5492, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5493, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5494
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5496
  call void @llvm.dbg.value(metadata i8* %6, metadata !5493, metadata !DIExpression()), !dbg !5494
  %7 = trunc i32 %3 to i16, !dbg !5497
  %8 = bitcast i8* %6 to i16*, !dbg !5500
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5501
  store i16 %7, i16* %9, align 2, !dbg !5502
  ret void, !dbg !5503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5504 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5508, metadata !DIExpression()), !dbg !5509
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5510
  ret i32 %2, !dbg !5511
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5512 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5516, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata i32 %1, metadata !5517, metadata !DIExpression()), !dbg !5518
  %3 = add i32 %1, 4, !dbg !5519
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5520
  ret i32 %4, !dbg !5521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5526, metadata !DIExpression()), !dbg !5527
  %2 = add i32 %0, 7, !dbg !5528
  %3 = lshr i32 %2, 3, !dbg !5529
  ret i32 %3, !dbg !5530
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5531 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5535, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata i32 %1, metadata !5536, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.value(metadata i32 %2, metadata !5537, metadata !DIExpression()), !dbg !5538
  %4 = shl i32 %2, 1, !dbg !5539
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5542 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5544, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.value(metadata i32 %1, metadata !5545, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.value(metadata i32 %2, metadata !5546, metadata !DIExpression()), !dbg !5547
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5548
  ret void, !dbg !5549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5550 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5552, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %1, metadata !5553, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %2, metadata !5554, metadata !DIExpression()), !dbg !5560
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5555, metadata !DIExpression()), !dbg !5560
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5562
  %6 = icmp eq i32 %5, %1, !dbg !5563
  br i1 %6, label %7, label %14, !dbg !5564

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5565
  %9 = xor i32 %8, -1, !dbg !5567
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5568
  %11 = load i32, i32* %10, align 4, !dbg !5569
  %12 = and i32 %11, %9, !dbg !5569
  store i32 %12, i32* %10, align 4, !dbg !5569
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5570
  store i32 0, i32* %13, align 4, !dbg !5571
  br label %17, !dbg !5572

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %15, metadata !5556, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.value(metadata i32 %5, metadata !5559, metadata !DIExpression()), !dbg !5574
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5575
  store i32 %5, i32* %16, align 4, !dbg !5576
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5577
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5578
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5580 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 %1, metadata !5583, metadata !DIExpression()), !dbg !5584
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5585
  ret i32 %3, !dbg !5586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5587 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5591, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i8* %1, metadata !5592, metadata !DIExpression()), !dbg !5598
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5599
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5599
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5593, metadata !DIExpression()), !dbg !5598
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %5, metadata !5594, metadata !DIExpression()), !dbg !5598
  %6 = ptrtoint i8* %1 to i32, !dbg !5601
  call void @llvm.dbg.value(metadata i32 %6, metadata !5595, metadata !DIExpression()), !dbg !5598
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5602
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5602
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %9, metadata !5596, metadata !DIExpression()), !dbg !5598
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5604
  %11 = shl i32 %10, 3, !dbg !5605
  call void @llvm.dbg.value(metadata i32 %11, metadata !5597, metadata !DIExpression()), !dbg !5598
  %12 = sub i32 %9, %6, !dbg !5606
  %13 = add i32 %12, %11, !dbg !5607
  ret i32 %13, !dbg !5608
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5609 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5613, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.value(metadata i32 %1, metadata !5614, metadata !DIExpression()), !dbg !5619
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5620
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5620
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5615, metadata !DIExpression()), !dbg !5619
  %5 = icmp eq i32 %1, 0, !dbg !5621
  br i1 %5, label %19, label %6, !dbg !5623

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5624
  br i1 %7, label %19, label %8, !dbg !5625

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5626, !range !5231
  call void @llvm.dbg.value(metadata i32 %9, metadata !5617, metadata !DIExpression()), !dbg !5619
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %10, metadata !5618, metadata !DIExpression()), !dbg !5619
  %11 = icmp eq i32 %10, 0, !dbg !5628
  br i1 %11, label %19, label %12, !dbg !5630

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5631
  %14 = icmp ugt i32 %13, %9, !dbg !5633
  br i1 %14, label %15, label %17, !dbg !5634

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5635
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5637
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5638
  br label %17, !dbg !5639

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5640
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5641
  call void @llvm.dbg.value(metadata i8* %18, metadata !5616, metadata !DIExpression()), !dbg !5619
  br label %19, !dbg !5642

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5619
  ret i8* %20, !dbg !5643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5644 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5648, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.value(metadata i32 %1, metadata !5649, metadata !DIExpression()), !dbg !5650
  %3 = lshr i32 %1, 3, !dbg !5651
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5652
  %5 = load i32, i32* %4, align 4, !dbg !5652
  %6 = icmp uge i32 %3, %5, !dbg !5653
  ret i1 %6, !dbg !5654
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5655 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5659, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata i32 %1, metadata !5660, metadata !DIExpression()), !dbg !5674
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5675
  call void @llvm.dbg.value(metadata i32 %3, metadata !5661, metadata !DIExpression()), !dbg !5674
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5662, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5674
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5676
  %5 = load i32, i32* %4, align 4, !dbg !5676
  %6 = icmp eq i32 %5, 0, !dbg !5677
  br i1 %6, label %19, label %7, !dbg !5678

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5679
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5680
  call void @llvm.dbg.value(metadata i32 %9, metadata !5666, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata i32 %8, metadata !5667, metadata !DIExpression()), !dbg !5681
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5682
  %11 = icmp ult i32 %10, %1, !dbg !5684
  br i1 %11, label %13, label %12, !dbg !5685

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5686
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5688
  store i32 %14, i32* %4, align 4, !dbg !5689
  %15 = add nsw i32 %9, -1, !dbg !5690
  call void @llvm.dbg.value(metadata i32 %15, metadata !5666, metadata !DIExpression()), !dbg !5680
  %16 = icmp eq i32 %15, 0, !dbg !5690
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5691
  br i1 %18, label %19, label %7, !dbg !5691, !llvm.loop !5692

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5695
  %21 = load i32, i32* %20, align 4, !dbg !5695
  %22 = add nsw i32 %3, 1, !dbg !5696
  %23 = shl nsw i32 -1, %22, !dbg !5696
  %24 = and i32 %21, %23, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %24, metadata !5669, metadata !DIExpression()), !dbg !5674
  %25 = icmp eq i32 %24, 0, !dbg !5698
  br i1 %25, label %30, label %26, !dbg !5699

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5700, !range !5400
  call void @llvm.dbg.value(metadata i32 %27, metadata !5670, metadata !DIExpression()), !dbg !5701
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5702
  %29 = load i32, i32* %28, align 4, !dbg !5702
  call void @llvm.dbg.value(metadata i32 %29, metadata !5673, metadata !DIExpression()), !dbg !5701
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5703
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5674
  ret i32 %31, !dbg !5704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5705 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5707, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata i32 %1, metadata !5708, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.value(metadata i32 %2, metadata !5709, metadata !DIExpression()), !dbg !5713
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %4, metadata !5710, metadata !DIExpression()), !dbg !5713
  %5 = sub i32 %2, %1, !dbg !5715
  call void @llvm.dbg.value(metadata i32 %5, metadata !5711, metadata !DIExpression()), !dbg !5713
  %6 = sub i32 %4, %5, !dbg !5716
  call void @llvm.dbg.value(metadata i32 %6, metadata !5712, metadata !DIExpression()), !dbg !5713
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5717
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5718
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5719
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5720
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5721
  ret void, !dbg !5722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5723 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5727, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.value(metadata i32 %1, metadata !5728, metadata !DIExpression()), !dbg !5731
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5732
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5729, metadata !DIExpression()), !dbg !5731
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5733
  call void @llvm.dbg.value(metadata i8* %4, metadata !5730, metadata !DIExpression()), !dbg !5731
  ret i8* %4, !dbg !5734
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5735 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5739, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.value(metadata i32 %1, metadata !5740, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.value(metadata i32 %2, metadata !5741, metadata !DIExpression()), !dbg !5751
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5752
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5752
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5742, metadata !DIExpression()), !dbg !5751
  %6 = sub i32 0, %1, !dbg !5753
  %7 = and i32 %6, %1, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %7, metadata !5744, metadata !DIExpression()), !dbg !5751
  %8 = icmp eq i32 %7, %1, !dbg !5755
  br i1 %8, label %13, label %9, !dbg !5757

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %10, metadata !5740, metadata !DIExpression()), !dbg !5751
  %11 = icmp ult i32 %7, 4, !dbg !5760
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5760
  br label %17, !dbg !5760

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5761
  br i1 %14, label %15, label %17, !dbg !5764

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5765
  br label %61, !dbg !5767

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5751
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5768
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5740, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.value(metadata i32 %19, metadata !5743, metadata !DIExpression()), !dbg !5751
  call void @llvm.dbg.value(metadata i32 %18, metadata !5744, metadata !DIExpression()), !dbg !5751
  %21 = add i32 %20, -1, !dbg !5769
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5769, !range !5400
  %23 = icmp ult i32 %22, 2, !dbg !5769
  br i1 %23, label %25, label %24, !dbg !5772

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5773
  unreachable, !dbg !5773

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5775
  br i1 %26, label %61, label %27, !dbg !5777

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5778
  br i1 %28, label %61, label %29, !dbg !5779

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5780
  %31 = add i32 %30, %20, !dbg !5781
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5782, !range !5231
  call void @llvm.dbg.value(metadata i32 %32, metadata !5745, metadata !DIExpression()), !dbg !5751
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5783
  call void @llvm.dbg.value(metadata i32 %33, metadata !5746, metadata !DIExpression()), !dbg !5751
  %34 = icmp eq i32 %33, 0, !dbg !5784
  br i1 %34, label %61, label %35, !dbg !5786

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5787
  call void @llvm.dbg.value(metadata i8* %36, metadata !5747, metadata !DIExpression()), !dbg !5751
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5788
  %38 = ptrtoint i8* %37 to i32, !dbg !5788
  %39 = add i32 %21, %38, !dbg !5788
  %40 = sub i32 0, %20, !dbg !5788
  %41 = and i32 %39, %40, !dbg !5788
  %42 = inttoptr i32 %41 to i8*, !dbg !5789
  %43 = sub i32 0, %18, !dbg !5790
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5790
  call void @llvm.dbg.value(metadata i8* %44, metadata !5747, metadata !DIExpression()), !dbg !5751
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5791
  %46 = ptrtoint i8* %45 to i32, !dbg !5791
  %47 = add i32 %46, 7, !dbg !5791
  %48 = and i32 %47, -8, !dbg !5791
  call void @llvm.dbg.value(metadata i32 %48, metadata !5748, metadata !DIExpression()), !dbg !5751
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5792
  call void @llvm.dbg.value(metadata i32 %49, metadata !5749, metadata !DIExpression()), !dbg !5751
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5793
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5794
  %52 = sub i32 %48, %51, !dbg !5794
  %53 = ashr exact i32 %52, 3, !dbg !5794
  call void @llvm.dbg.value(metadata i32 %53, metadata !5750, metadata !DIExpression()), !dbg !5751
  %54 = icmp ugt i32 %49, %33, !dbg !5795
  br i1 %54, label %55, label %56, !dbg !5797

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5798
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5800
  br label %56, !dbg !5801

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5802
  %58 = icmp ugt i32 %57, %53, !dbg !5804
  br i1 %58, label %59, label %60, !dbg !5805

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5806
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5808
  br label %60, !dbg !5809

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5810
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5751
  ret i8* %62, !dbg !5811
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5812 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5816, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata i8* %1, metadata !5817, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata i32 %2, metadata !5818, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.value(metadata i32 %3, metadata !5819, metadata !DIExpression()), !dbg !5835
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5836
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5836
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5820, metadata !DIExpression()), !dbg !5835
  %7 = icmp eq i8* %1, null, !dbg !5837
  br i1 %7, label %8, label %10, !dbg !5839

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5840
  br label %63, !dbg !5842

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5843
  br i1 %11, label %12, label %13, !dbg !5845

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5846
  br label %63, !dbg !5848

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5849
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5849, !range !5400
  %16 = icmp ult i32 %15, 2, !dbg !5849
  br i1 %16, label %18, label %17, !dbg !5852

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5853
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5853
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5853
  unreachable, !dbg !5853

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5855
  br i1 %19, label %63, label %20, !dbg !5857

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5858, !range !5231
  call void @llvm.dbg.value(metadata i32 %21, metadata !5821, metadata !DIExpression()), !dbg !5835
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5859
  call void @llvm.dbg.value(metadata i32 %22, metadata !5822, metadata !DIExpression()), !dbg !5835
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5860
  %24 = ptrtoint i8* %1 to i32, !dbg !5861
  %25 = ptrtoint i8* %23 to i32, !dbg !5861
  %26 = sub i32 %24, %25, !dbg !5861
  call void @llvm.dbg.value(metadata i32 %26, metadata !5823, metadata !DIExpression()), !dbg !5835
  %27 = add i32 %26, %3, !dbg !5862
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %28, metadata !5824, metadata !DIExpression()), !dbg !5835
  %29 = icmp eq i32 %2, 0, !dbg !5864
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5865
  br i1 %32, label %33, label %53, !dbg !5865

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5866
  %35 = icmp eq i32 %28, %34, !dbg !5867
  br i1 %35, label %63, label %36, !dbg !5868

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5869
  br i1 %37, label %38, label %40, !dbg !5870

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5871
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5873
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5874
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5875
  br label %63, !dbg !5876

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5877
  br i1 %41, label %53, label %42, !dbg !5878

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5879
  %44 = add i32 %43, %34, !dbg !5880
  %45 = icmp ult i32 %44, %28, !dbg !5881
  br i1 %45, label %53, label %46, !dbg !5882

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5883
  call void @llvm.dbg.value(metadata i32 %47, metadata !5825, metadata !DIExpression()), !dbg !5884
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5885
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5886
  %49 = icmp ult i32 %47, %48, !dbg !5888
  br i1 %49, label %50, label %52, !dbg !5889

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5890
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5892
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5893
  br label %52, !dbg !5894

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5895
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5896
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5897
  call void @llvm.dbg.value(metadata i8* %54, metadata !5831, metadata !DIExpression()), !dbg !5835
  %55 = icmp eq i8* %54, null, !dbg !5898
  br i1 %55, label %63, label %56, !dbg !5899

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5900, !range !5343
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5901
  %59 = sub i32 %58, %26, !dbg !5902
  call void @llvm.dbg.value(metadata i32 %59, metadata !5832, metadata !DIExpression()), !dbg !5903
  %60 = icmp ult i32 %59, %3, !dbg !5904
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5904
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5905
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5906
  br label %63, !dbg !5907

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5835
  ret i8* %64, !dbg !5908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5909 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5913, metadata !DIExpression()), !dbg !5915
  call void @llvm.dbg.value(metadata i32 %1, metadata !5914, metadata !DIExpression()), !dbg !5915
  %3 = shl i32 %1, 3, !dbg !5916
  %4 = add i32 %3, -4, !dbg !5917
  ret i32 %4, !dbg !5918
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5919 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5923, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i8* %1, metadata !5924, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata i32 %2, metadata !5925, metadata !DIExpression()), !dbg !5934
  %4 = icmp ult i32 %2, 262144, !dbg !5935
  br i1 %4, label %6, label %5, !dbg !5940

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !5941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5941
  unreachable, !dbg !5941

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5943
  br i1 %7, label %9, label %8, !dbg !5946

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5947
  unreachable, !dbg !5947

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %10, metadata !5925, metadata !DIExpression()), !dbg !5934
  %11 = ptrtoint i8* %1 to i32, !dbg !5950
  %12 = add i32 %11, 7, !dbg !5950
  %13 = and i32 %12, -8, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %13, metadata !5926, metadata !DIExpression()), !dbg !5934
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5951
  %15 = ptrtoint i8* %14 to i32, !dbg !5951
  %16 = and i32 %15, -8, !dbg !5951
  call void @llvm.dbg.value(metadata i32 %16, metadata !5927, metadata !DIExpression()), !dbg !5934
  %17 = sub i32 %16, %13, !dbg !5952
  %18 = lshr exact i32 %17, 3, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %18, metadata !5928, metadata !DIExpression()), !dbg !5934
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !5954
  %20 = icmp ugt i32 %18, %19, !dbg !5954
  br i1 %20, label %22, label %21, !dbg !5957

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5958
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5958
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5958
  unreachable, !dbg !5958

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5960
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5929, metadata !DIExpression()), !dbg !5934
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5961
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5962
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5963
  store i32 %18, i32* %25, align 8, !dbg !5964
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5965
  store i32 0, i32* %26, align 4, !dbg !5966
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !5967
  call void @llvm.dbg.value(metadata i32 %27, metadata !5930, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5934
  %28 = shl i32 %27, 2, !dbg !5968
  %29 = add i32 %28, 20, !dbg !5969
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !5970
  call void @llvm.dbg.value(metadata i32 %30, metadata !5931, metadata !DIExpression()), !dbg !5934
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !5971
  %32 = add i32 %31, %30, !dbg !5971
  %33 = icmp ugt i32 %32, %18, !dbg !5971
  br i1 %33, label %36, label %34, !dbg !5974

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5932, metadata !DIExpression()), !dbg !5975
  %35 = icmp slt i32 %27, 0, !dbg !5976
  br i1 %35, label %37, label %39, !dbg !5978

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5979
  unreachable, !dbg !5979

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !5981
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !5982
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !5983
  %38 = sub i32 %18, %30, !dbg !5984
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !5985
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !5986
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !5987
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !5988
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !5989
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !5990
  ret void, !dbg !5991

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5932, metadata !DIExpression()), !dbg !5975
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5992
  store i32 0, i32* %41, align 4, !dbg !5994
  %42 = add nuw i32 %40, 1, !dbg !5995
  call void @llvm.dbg.value(metadata i32 %42, metadata !5932, metadata !DIExpression()), !dbg !5975
  %43 = icmp eq i32 %40, %27, !dbg !5976
  br i1 %43, label %37, label %39, !dbg !5978, !llvm.loop !5996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5998 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6008, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %1, metadata !6009, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %2, metadata !6010, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %4, metadata !6012, metadata !DIExpression()), !dbg !6137
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6138
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6138
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6013, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.value(metadata i32 0, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i1 undef, metadata !6019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6137
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6140

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6140

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6141
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %30, metadata !6010, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %29, metadata !6017, metadata !DIExpression()), !dbg !6137
  %31 = load i8, i8* %30, align 1, !dbg !6142
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6140

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6142
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6143
  call void @llvm.dbg.value(metadata i8* %34, metadata !6010, metadata !DIExpression()), !dbg !6137
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %35, metadata !6021, metadata !DIExpression()), !dbg !6144
  %36 = icmp slt i32 %35, 0, !dbg !6145
  %37 = add i32 %29, 1, !dbg !6143
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %36, label %365, label %28, !llvm.loop !6147

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6149
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6026, metadata !DIExpression()), !dbg !6150
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6150
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6069, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6072, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8* %30, metadata !6075, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 -1, metadata !6076, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 -1, metadata !6077, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8* null, metadata !6078, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8* %14, metadata !6079, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8 0, metadata !6080, metadata !DIExpression()), !dbg !6151
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6152
  call void @llvm.dbg.value(metadata i8* %39, metadata !6010, metadata !DIExpression()), !dbg !6137
  %40 = load i24, i24* %15, align 8, !dbg !6153
  %41 = and i24 %40, 256, !dbg !6153
  %42 = icmp eq i24 %41, 0, !dbg !6153
  br i1 %42, label %51, label %43, !dbg !6155

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6156
  call void @llvm.dbg.value(metadata i8* %44, metadata !6011, metadata !DIExpression()), !dbg !6137
  %45 = bitcast i8* %27 to i32*, !dbg !6156
  %46 = load i32, i32* %45, align 4, !dbg !6156
  call void @llvm.dbg.value(metadata i32 %46, metadata !6076, metadata !DIExpression()), !dbg !6151
  %47 = icmp slt i32 %46, 0, !dbg !6158
  br i1 %47, label %48, label %56, !dbg !6160

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6161
  store i24 %49, i24* %15, align 8, !dbg !6161
  %50 = sub nsw i32 0, %46, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %50, metadata !6076, metadata !DIExpression()), !dbg !6151
  br label %56, !dbg !6164

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6165
  %53 = icmp eq i24 %52, 0, !dbg !6165
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6167
  br label %56, !dbg !6167

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6168
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6151
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %58, metadata !6076, metadata !DIExpression()), !dbg !6151
  %60 = and i24 %57, 1024, !dbg !6168
  %61 = icmp eq i24 %60, 0, !dbg !6168
  br i1 %61, label %69, label %62, !dbg !6169

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6170
  call void @llvm.dbg.value(metadata i8* %63, metadata !6011, metadata !DIExpression()), !dbg !6137
  %64 = bitcast i8* %59 to i32*, !dbg !6170
  %65 = load i32, i32* %64, align 4, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %65, metadata !6081, metadata !DIExpression()), !dbg !6171
  %66 = icmp slt i32 %65, 0, !dbg !6172
  br i1 %66, label %67, label %74, !dbg !6174

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6175
  store i24 %68, i24* %15, align 8, !dbg !6175
  br label %74, !dbg !6177

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6178
  %71 = icmp eq i24 %70, 0, !dbg !6178
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6180
  br label %74, !dbg !6180

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6181
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6151
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6151
  call void @llvm.dbg.value(metadata i8* %77, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %76, metadata !6077, metadata !DIExpression()), !dbg !6151
  store i32 0, i32* %16, align 4, !dbg !6182
  store i32 0, i32* %17, align 8, !dbg !6183
  %78 = lshr i24 %75, 16, !dbg !6181
  call void @llvm.dbg.value(metadata i24 %78, metadata !6084, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6151
  %79 = lshr i24 %75, 11, !dbg !6184
  %80 = and i24 %79, 15, !dbg !6184
  %81 = zext i24 %80 to i32, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %81, metadata !6085, metadata !DIExpression()), !dbg !6151
  %82 = trunc i24 %78 to i3, !dbg !6185
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6185

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6186

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %85, metadata !6011, metadata !DIExpression()), !dbg !6137
  %86 = bitcast i8* %77 to i32*, !dbg !6189
  %87 = load i32, i32* %86, align 4, !dbg !6189
  %88 = sext i32 %87 to i64, !dbg !6189
  store i64 %88, i64* %20, align 8, !dbg !6191
  br label %115, !dbg !6192

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6193
  call void @llvm.dbg.value(metadata i8* %90, metadata !6011, metadata !DIExpression()), !dbg !6137
  %91 = bitcast i8* %77 to i32*, !dbg !6193
  %92 = load i32, i32* %91, align 4, !dbg !6193
  %93 = sext i32 %92 to i64, !dbg !6193
  store i64 %93, i64* %20, align 8, !dbg !6196
  br label %115, !dbg !6197

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6198
  %96 = add i32 %95, 7, !dbg !6198
  %97 = and i32 %96, -8, !dbg !6198
  %98 = inttoptr i32 %97 to i8*, !dbg !6198
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6198
  call void @llvm.dbg.value(metadata i8* %99, metadata !6011, metadata !DIExpression()), !dbg !6137
  %100 = inttoptr i32 %97 to i64*, !dbg !6198
  %101 = load i64, i64* %100, align 8, !dbg !6198
  store i64 %101, i64* %20, align 8, !dbg !6199
  br label %115, !dbg !6200

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6201
  %104 = add i32 %103, 7, !dbg !6201
  %105 = and i32 %104, -8, !dbg !6201
  %106 = inttoptr i32 %105 to i8*, !dbg !6201
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6201
  call void @llvm.dbg.value(metadata i8* %107, metadata !6011, metadata !DIExpression()), !dbg !6137
  %108 = inttoptr i32 %105 to i64*, !dbg !6201
  %109 = load i64, i64* %108, align 8, !dbg !6201
  store i64 %109, i64* %20, align 8, !dbg !6202
  br label %115, !dbg !6203

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6204
  call void @llvm.dbg.value(metadata i8* %111, metadata !6011, metadata !DIExpression()), !dbg !6137
  %112 = bitcast i8* %77 to i32*, !dbg !6204
  %113 = load i32, i32* %112, align 4, !dbg !6204
  %114 = sext i32 %113 to i64, !dbg !6205
  store i64 %114, i64* %20, align 8, !dbg !6206
  br label %115, !dbg !6207

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6208
  call void @llvm.dbg.value(metadata i8* %117, metadata !6011, metadata !DIExpression()), !dbg !6137
  %118 = trunc i24 %79 to i4, !dbg !6209
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6209

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6210
  %121 = ashr exact i64 %120, 56, !dbg !6210
  store i64 %121, i64* %20, align 8, !dbg !6213
  br label %177, !dbg !6214

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6215
  %124 = ashr exact i64 %123, 48, !dbg !6215
  store i64 %124, i64* %20, align 8, !dbg !6218
  br label %177, !dbg !6219

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6220

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6223
  call void @llvm.dbg.value(metadata i8* %127, metadata !6011, metadata !DIExpression()), !dbg !6137
  %128 = bitcast i8* %77 to i32*, !dbg !6223
  %129 = load i32, i32* %128, align 4, !dbg !6223
  %130 = zext i32 %129 to i64, !dbg !6223
  store i64 %130, i64* %20, align 8, !dbg !6225
  br label %157, !dbg !6226

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6227
  call void @llvm.dbg.value(metadata i8* %132, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %132, metadata !6011, metadata !DIExpression()), !dbg !6137
  %133 = bitcast i8* %77 to i32*, !dbg !6227
  %134 = load i32, i32* %133, align 4, !dbg !6227
  %135 = zext i32 %134 to i64, !dbg !6227
  store i64 %135, i64* %20, align 8, !dbg !6227
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6229
  %138 = add i32 %137, 7, !dbg !6229
  %139 = and i32 %138, -8, !dbg !6229
  %140 = inttoptr i32 %139 to i8*, !dbg !6229
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %141, metadata !6011, metadata !DIExpression()), !dbg !6137
  %142 = inttoptr i32 %139 to i64*, !dbg !6229
  %143 = load i64, i64* %142, align 8, !dbg !6229
  store i64 %143, i64* %20, align 8, !dbg !6230
  br label %157, !dbg !6231

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6232
  %146 = add i32 %145, 7, !dbg !6232
  %147 = and i32 %146, -8, !dbg !6232
  %148 = inttoptr i32 %147 to i8*, !dbg !6232
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6232
  call void @llvm.dbg.value(metadata i8* %149, metadata !6011, metadata !DIExpression()), !dbg !6137
  %150 = inttoptr i32 %147 to i64*, !dbg !6232
  %151 = load i64, i64* %150, align 8, !dbg !6232
  store i64 %151, i64* %20, align 8, !dbg !6233
  br label %157, !dbg !6234

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6235
  call void @llvm.dbg.value(metadata i8* %153, metadata !6011, metadata !DIExpression()), !dbg !6137
  %154 = bitcast i8* %77 to i32*, !dbg !6235
  %155 = load i32, i32* %154, align 4, !dbg !6235
  %156 = zext i32 %155 to i64, !dbg !6236
  store i64 %156, i64* %20, align 8, !dbg !6237
  br label %157, !dbg !6238

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6239
  call void @llvm.dbg.value(metadata i8* %159, metadata !6011, metadata !DIExpression()), !dbg !6137
  %160 = trunc i24 %79 to i4, !dbg !6240
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6240

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6241
  store i64 %162, i64* %20, align 8, !dbg !6244
  br label %177, !dbg !6245

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6246
  store i64 %164, i64* %20, align 8, !dbg !6249
  br label %177, !dbg !6250

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6251
  %167 = add i32 %166, 7, !dbg !6251
  %168 = and i32 %167, -8, !dbg !6251
  %169 = inttoptr i32 %168 to i8*, !dbg !6251
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6251
  call void @llvm.dbg.value(metadata i8* %170, metadata !6011, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %170, metadata !6011, metadata !DIExpression()), !dbg !6137
  %171 = inttoptr i32 %168 to double*, !dbg !6251
  %172 = load double, double* %171, align 8, !dbg !6251
  store double %172, double* %19, align 8, !dbg !6251
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6255
  call void @llvm.dbg.value(metadata i8* %174, metadata !6011, metadata !DIExpression()), !dbg !6137
  %175 = bitcast i8* %77 to i8**, !dbg !6255
  %176 = load i8*, i8** %175, align 4, !dbg !6255
  store i8* %176, i8** %18, align 8, !dbg !6258
  br label %177, !dbg !6259

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6151
  call void @llvm.dbg.value(metadata i8* %178, metadata !6011, metadata !DIExpression()), !dbg !6137
  %179 = and i24 %75, 3, !dbg !6260
  %180 = icmp eq i24 %179, 0, !dbg !6260
  br i1 %180, label %185, label %181, !dbg !6260

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %182, metadata !6086, metadata !DIExpression()), !dbg !6262
  %183 = icmp slt i32 %182, 0, !dbg !6263
  %184 = add i32 %182, %29, !dbg !6261
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6265
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6266

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %188, metadata !6090, metadata !DIExpression()), !dbg !6268
  %189 = icmp slt i32 %188, 0, !dbg !6269
  %190 = add i32 %29, 1, !dbg !6267
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6271
  call void @llvm.dbg.value(metadata i8* %192, metadata !6078, metadata !DIExpression()), !dbg !6151
  %193 = icmp sgt i32 %76, -1, !dbg !6272
  br i1 %193, label %194, label %196, !dbg !6274

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %195, metadata !6093, metadata !DIExpression()), !dbg !6277
  br label %241, !dbg !6278

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6279
  call void @llvm.dbg.value(metadata i32 %197, metadata !6093, metadata !DIExpression()), !dbg !6277
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6078, metadata !DIExpression()), !dbg !6151
  %199 = load i64, i64* %20, align 8, !dbg !6281
  %200 = trunc i64 %199 to i8, !dbg !6282
  store i8 %200, i8* %10, align 1, !dbg !6283
  call void @llvm.dbg.value(metadata i8* %23, metadata !6079, metadata !DIExpression()), !dbg !6151
  br label %245, !dbg !6284

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6285
  %203 = icmp eq i24 %202, 0, !dbg !6285
  %204 = trunc i24 %75 to i8, !dbg !6287
  %205 = shl i8 %204, 1, !dbg !6287
  %206 = and i8 %205, 32, !dbg !6287
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6287
  call void @llvm.dbg.value(metadata i8 %207, metadata !6080, metadata !DIExpression()), !dbg !6151
  %208 = load i64, i64* %20, align 8, !dbg !6288
  call void @llvm.dbg.value(metadata i64 %208, metadata !6018, metadata !DIExpression()), !dbg !6137
  %209 = icmp slt i64 %208, 0, !dbg !6289
  br i1 %209, label %210, label %212, !dbg !6291

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6080, metadata !DIExpression()), !dbg !6151
  %211 = sub nsw i64 0, %208, !dbg !6292
  store i64 %211, i64* %20, align 8, !dbg !6294
  br label %212, !dbg !6295

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6151
  call void @llvm.dbg.value(metadata i8 %213, metadata !6080, metadata !DIExpression()), !dbg !6151
  %214 = load i64, i64* %20, align 8, !dbg !6296
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6297
  call void @llvm.dbg.value(metadata i8* %215, metadata !6078, metadata !DIExpression()), !dbg !6151
  br label %216, !dbg !6298

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6299
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6300
  call void @llvm.dbg.value(metadata i8* %218, metadata !6078, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8 %217, metadata !6080, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.label(metadata !6136), !dbg !6301
  %219 = icmp sgt i32 %76, -1, !dbg !6302
  br i1 %219, label %222, label %220, !dbg !6303

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6304
  br label %245, !dbg !6303

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6306
  %224 = sub i32 %22, %223, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %224, metadata !6095, metadata !DIExpression()), !dbg !6307
  %225 = load i24, i24* %15, align 8, !dbg !6308
  %226 = and i24 %225, -65, !dbg !6308
  store i24 %226, i24* %15, align 8, !dbg !6308
  %227 = icmp ugt i32 %76, %224, !dbg !6309
  br i1 %227, label %228, label %245, !dbg !6311

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6312
  store i32 %229, i32* %16, align 4, !dbg !6314
  br label %245, !dbg !6315

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6316
  %232 = icmp eq i8* %231, null, !dbg !6318
  br i1 %232, label %245, label %233, !dbg !6319

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6320
  %235 = zext i32 %234 to i64, !dbg !6320
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6322
  call void @llvm.dbg.value(metadata i8* %236, metadata !6078, metadata !DIExpression()), !dbg !6151
  %237 = load i24, i24* %15, align 8, !dbg !6323
  %238 = or i24 %237, 1048576, !dbg !6323
  store i24 %238, i24* %15, align 8, !dbg !6323
  store i8 120, i8* %21, align 1, !dbg !6324
  br label %216, !dbg !6325

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6326
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6329
  br label %363, !dbg !6330

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6331
  call void @llvm.dbg.value(metadata i32 %242, metadata !6093, metadata !DIExpression()), !dbg !6277
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6332
  call void @llvm.dbg.value(metadata i32 -1, metadata !6077, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 %29, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8* %192, metadata !6078, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8* %243, metadata !6079, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8 0, metadata !6080, metadata !DIExpression()), !dbg !6151
  %244 = icmp eq i8* %192, null, !dbg !6333
  br i1 %244, label %363, label %245, !dbg !6335, !llvm.loop !6147

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6304
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata i32 0, metadata !6099, metadata !DIExpression()), !dbg !6151
  %250 = zext i8 %249 to i32, !dbg !6336
  %251 = icmp eq i8 %249, 0, !dbg !6338
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata i32 undef, metadata !6098, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata i32 undef, metadata !6098, metadata !DIExpression()), !dbg !6151
  %252 = icmp sgt i32 %58, 0, !dbg !6339
  br i1 %252, label %253, label %302, !dbg !6340

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6304
  %255 = icmp eq i24 %254, 0, !dbg !6304
  %256 = ptrtoint i8* %248 to i32, !dbg !6341
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  %257 = ptrtoint i8* %247 to i32, !dbg !6341
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  %258 = xor i1 %251, true, !dbg !6342
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  %259 = sext i1 %258 to i32, !dbg !6342
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  %260 = lshr i24 %246, 19, !dbg !6343
  %261 = and i24 %260, 1, !dbg !6343
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6343
  %263 = zext i24 %262 to i32, !dbg !6343
  %264 = add i32 %257, %259, !dbg !6343
  %265 = add i32 %256, %263, !dbg !6343
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  %266 = and i24 %246, 4194304, !dbg !6344
  %267 = icmp eq i24 %266, 0, !dbg !6344
  %268 = load i32, i32* %16, align 4, !dbg !6346
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6151
  call void @llvm.dbg.value(metadata i32 undef, metadata !6098, metadata !DIExpression()), !dbg !6151
  %269 = load i32, i32* %17, align 8, !dbg !6347
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6347
  call void @llvm.dbg.value(metadata i32 undef, metadata !6098, metadata !DIExpression()), !dbg !6151
  %271 = add i32 %264, %58, !dbg !6347
  %272 = add i32 %265, %268, !dbg !6347
  %273 = add i32 %272, %270, !dbg !6348
  %274 = sub i32 %271, %273, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %274, metadata !6076, metadata !DIExpression()), !dbg !6151
  %275 = and i24 %246, 4, !dbg !6349
  %276 = icmp eq i24 %275, 0, !dbg !6349
  br i1 %276, label %277, label %302, !dbg !6350

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6100, metadata !DIExpression()), !dbg !6351
  %278 = and i24 %246, 64, !dbg !6352
  %279 = icmp eq i24 %278, 0, !dbg !6352
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6353
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6353
  %282 = select i1 %279, i32 32, i32 48, !dbg !6353
  br i1 %280, label %287, label %283, !dbg !6353

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %284, metadata !6105, metadata !DIExpression()), !dbg !6355
  %285 = icmp slt i32 %284, 0, !dbg !6356
  %286 = add i32 %29, 1, !dbg !6354
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6151
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %290, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i8 undef, metadata !6100, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.value(metadata i8 %288, metadata !6080, metadata !DIExpression()), !dbg !6151
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6358
  %292 = add i32 %291, -1, !dbg !6358
  br label %293, !dbg !6358

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6359
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %295, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %294, metadata !6076, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i32 %294, metadata !6076, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6151
  %296 = icmp sgt i32 %294, 0, !dbg !6360
  br i1 %296, label %297, label %302, !dbg !6358

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6361
  call void @llvm.dbg.value(metadata i32 %298, metadata !6076, metadata !DIExpression()), !dbg !6151
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6362
  call void @llvm.dbg.value(metadata i32 %299, metadata !6111, metadata !DIExpression()), !dbg !6363
  %300 = icmp slt i32 %299, 0, !dbg !6364
  %301 = add i32 %295, 1, !dbg !6362
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %300, label %361, label %293, !llvm.loop !6366

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6151
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6151
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %305, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %304, metadata !6076, metadata !DIExpression()), !dbg !6151
  call void @llvm.dbg.value(metadata i8 %303, metadata !6080, metadata !DIExpression()), !dbg !6151
  %306 = icmp eq i8 %303, 0, !dbg !6368
  br i1 %306, label %312, label %307, !dbg !6369

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6370
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6371
  call void @llvm.dbg.value(metadata i32 %309, metadata !6114, metadata !DIExpression()), !dbg !6372
  %310 = icmp slt i32 %309, 0, !dbg !6373
  %311 = add i32 %305, 1, !dbg !6371
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %313, metadata !6017, metadata !DIExpression()), !dbg !6137
  %314 = lshr i24 %246, 20, !dbg !6375
  %315 = lshr i24 %246, 19, !dbg !6376
  %316 = or i24 %314, %315, !dbg !6377
  %317 = and i24 %316, 1, !dbg !6377
  %318 = icmp eq i24 %317, 0, !dbg !6377
  br i1 %318, label %323, label %319, !dbg !6378

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %320, metadata !6118, metadata !DIExpression()), !dbg !6380
  %321 = icmp slt i32 %320, 0, !dbg !6381
  %322 = add i32 %313, 1, !dbg !6379
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %324, metadata !6017, metadata !DIExpression()), !dbg !6137
  %325 = and i24 %246, 1048576, !dbg !6383
  %326 = icmp eq i24 %325, 0, !dbg !6383
  br i1 %326, label %333, label %327, !dbg !6384

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6385
  %329 = zext i8 %328 to i32, !dbg !6385
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6385
  call void @llvm.dbg.value(metadata i32 %330, metadata !6124, metadata !DIExpression()), !dbg !6386
  %331 = icmp slt i32 %330, 0, !dbg !6387
  %332 = add i32 %324, 1, !dbg !6385
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %334, metadata !6017, metadata !DIExpression()), !dbg !6137
  %335 = load i32, i32* %16, align 4, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %335, metadata !6099, metadata !DIExpression()), !dbg !6151
  br label %336, !dbg !6390

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6391
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %338, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %337, metadata !6099, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6151
  %339 = icmp sgt i32 %337, 0, !dbg !6392
  br i1 %339, label %340, label %345, !dbg !6390

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6393
  call void @llvm.dbg.value(metadata i32 %341, metadata !6099, metadata !DIExpression()), !dbg !6151
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %342, metadata !6128, metadata !DIExpression()), !dbg !6395
  %343 = icmp slt i32 %342, 0, !dbg !6396
  %344 = add i32 %338, 1, !dbg !6394
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %343, label %361, label %336, !llvm.loop !6398

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6400
  call void @llvm.dbg.value(metadata i32 %346, metadata !6131, metadata !DIExpression()), !dbg !6401
  %347 = icmp slt i32 %346, 0, !dbg !6402
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6400
  call void @llvm.dbg.value(metadata i32 %349, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %304, metadata !6076, metadata !DIExpression()), !dbg !6151
  %350 = icmp sgt i32 %304, 0, !dbg !6404
  br i1 %350, label %351, label %363, !dbg !6405

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6405
  %353 = add i32 %352, %338, !dbg !6405
  br label %354, !dbg !6405

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %355, metadata !6076, metadata !DIExpression()), !dbg !6151
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %356, metadata !6133, metadata !DIExpression()), !dbg !6407
  %357 = icmp slt i32 %356, 0, !dbg !6408
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6410
  call void @llvm.dbg.value(metadata i32 undef, metadata !6017, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6137
  call void @llvm.dbg.value(metadata i32 %359, metadata !6076, metadata !DIExpression()), !dbg !6151
  %360 = icmp sgt i32 %355, 1, !dbg !6404
  br i1 %360, label %354, label %363, !dbg !6405, !llvm.loop !6411

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6148
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6141
  call void @llvm.dbg.value(metadata i32 %364, metadata !6017, metadata !DIExpression()), !dbg !6137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6148
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6137
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6413
  ret i32 %366, !dbg !6413
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6414 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6418, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.value(metadata i8* %1, metadata !6419, metadata !DIExpression()), !dbg !6420
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6421
  store i24 0, i24* %3, align 4, !dbg !6421
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6421
  store i8 0, i8* %4, align 1, !dbg !6421
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6421
  store i32 0, i32* %5, align 4, !dbg !6421
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6421
  store i32 0, i32* %6, align 4, !dbg !6421
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6422
  call void @llvm.dbg.value(metadata i8* %7, metadata !6419, metadata !DIExpression()), !dbg !6420
  %8 = load i8, i8* %7, align 1, !dbg !6423
  %9 = icmp eq i8 %8, 37, !dbg !6425
  br i1 %9, label %10, label %12, !dbg !6426

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6427
  call void @llvm.dbg.value(metadata i8* %11, metadata !6419, metadata !DIExpression()), !dbg !6420
  store i8 37, i8* %4, align 1, !dbg !6429
  br label %18, !dbg !6430

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6431
  call void @llvm.dbg.value(metadata i8* %13, metadata !6419, metadata !DIExpression()), !dbg !6420
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6432
  call void @llvm.dbg.value(metadata i8* %14, metadata !6419, metadata !DIExpression()), !dbg !6420
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6433
  call void @llvm.dbg.value(metadata i8* %15, metadata !6419, metadata !DIExpression()), !dbg !6420
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6434
  call void @llvm.dbg.value(metadata i8* %16, metadata !6419, metadata !DIExpression()), !dbg !6420
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6435
  call void @llvm.dbg.value(metadata i8* %17, metadata !6419, metadata !DIExpression()), !dbg !6420
  br label %18, !dbg !6436

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6420
  ret i8* %19, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6442, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i8* %1, metadata !6443, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i8* %2, metadata !6444, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i8* %3, metadata !6445, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 0, metadata !6446, metadata !DIExpression()), !dbg !6449
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6450

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6451
  call void @llvm.dbg.value(metadata i32 %9, metadata !6446, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i8* %8, metadata !6444, metadata !DIExpression()), !dbg !6449
  %10 = icmp ult i8* %8, %3, !dbg !6452
  br i1 %10, label %11, label %13, !dbg !6453

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6454
  br label %17, !dbg !6453

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6455

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6456
  %16 = icmp eq i8 %15, 0, !dbg !6455
  br i1 %16, label %24, label %17, !dbg !6450

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6454
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6457
  call void @llvm.dbg.value(metadata i8* %19, metadata !6444, metadata !DIExpression()), !dbg !6449
  %20 = zext i8 %18 to i32, !dbg !6458
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6459
  call void @llvm.dbg.value(metadata i32 %21, metadata !6447, metadata !DIExpression()), !dbg !6460
  %22 = icmp slt i32 %21, 0, !dbg !6461
  %23 = add i32 %9, 1, !dbg !6463
  call void @llvm.dbg.value(metadata i32 undef, metadata !6446, metadata !DIExpression()), !dbg !6449
  br i1 %22, label %24, label %7, !llvm.loop !6464

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6449
  ret i32 %25, !dbg !6466
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6467 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6471, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6472, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %2, metadata !6473, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %3, metadata !6474, metadata !DIExpression()), !dbg !6481
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6482
  %6 = load i8, i8* %5, align 1, !dbg !6482
  %7 = zext i8 %6 to i32, !dbg !6483
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6484
  %9 = icmp eq i32 %8, 0, !dbg !6484
  call void @llvm.dbg.value(metadata i1 %9, metadata !6475, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6481
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6485
  call void @llvm.dbg.value(metadata i32 %10, metadata !6476, metadata !DIExpression()), !dbg !6481
  %11 = ptrtoint i8* %3 to i32, !dbg !6486
  %12 = ptrtoint i8* %2 to i32, !dbg !6486
  %13 = sub i32 %11, %12, !dbg !6486
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6487
  call void @llvm.dbg.value(metadata i8* %14, metadata !6478, metadata !DIExpression()), !dbg !6481
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6488

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6481
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6471, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %18, metadata !6478, metadata !DIExpression()), !dbg !6481
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6489
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6490
  call void @llvm.dbg.value(metadata i32 %25, metadata !6479, metadata !DIExpression()), !dbg !6491
  %26 = icmp ult i32 %25, 10, !dbg !6492
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6493
  %28 = add i32 %27, %25, !dbg !6491
  %29 = trunc i32 %28 to i8, !dbg !6493
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %30, metadata !6478, metadata !DIExpression()), !dbg !6481
  store i8 %29, i8* %30, align 1, !dbg !6495
  call void @llvm.dbg.value(metadata i64 %22, metadata !6471, metadata !DIExpression()), !dbg !6481
  %31 = icmp uge i64 %19, %15, !dbg !6496
  %32 = icmp ugt i8* %30, %2, !dbg !6497
  %33 = and i1 %31, %32, !dbg !6497
  br i1 %33, label %17, label %34, !dbg !6498, !llvm.loop !6499

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6501
  %36 = load i24, i24* %35, align 4, !dbg !6501
  %37 = and i24 %36, 32, !dbg !6501
  %38 = icmp eq i24 %37, 0, !dbg !6501
  br i1 %38, label %44, label %39, !dbg !6503

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6504

40:                                               ; preds = %39
  br label %41, !dbg !6506

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6510
  store i24 %43, i24* %35, align 4, !dbg !6510
  br label %44, !dbg !6511

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6512 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6518, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i8* %1, metadata !6519, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 %2, metadata !6520, metadata !DIExpression()), !dbg !6521
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6522
  %5 = load i24, i24* %4, align 4, !dbg !6522
  %6 = lshr i24 %5, 11, !dbg !6522
  %7 = and i24 %6, 15, !dbg !6522
  %8 = zext i24 %7 to i32, !dbg !6522
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6523

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6524
  store i32 %2, i32* %10, align 4, !dbg !6526
  br label %28, !dbg !6527

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6528
  store i8 %12, i8* %1, align 1, !dbg !6529
  br label %28, !dbg !6530

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6531
  %15 = bitcast i8* %1 to i16*, !dbg !6532
  store i16 %14, i16* %15, align 2, !dbg !6533
  br label %28, !dbg !6534

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6535
  store i32 %2, i32* %17, align 4, !dbg !6536
  br label %28, !dbg !6537

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6538
  %20 = bitcast i8* %1 to i64*, !dbg !6539
  store i64 %19, i64* %20, align 8, !dbg !6540
  br label %28, !dbg !6541

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6542
  %23 = bitcast i8* %1 to i64*, !dbg !6543
  store i64 %22, i64* %23, align 8, !dbg !6544
  br label %28, !dbg !6545

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6546
  store i32 %2, i32* %25, align 4, !dbg !6547
  br label %28, !dbg !6548

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6549
  store i32 %2, i32* %27, align 4, !dbg !6550
  br label %28, !dbg !6551

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6552
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6556, metadata !DIExpression()), !dbg !6557
  %2 = add i32 %0, -65, !dbg !6558
  %3 = icmp ult i32 %2, 26, !dbg !6559
  %4 = zext i1 %3 to i32, !dbg !6559
  ret i32 %4, !dbg !6560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6561 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6565, metadata !DIExpression()), !dbg !6566
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6567

2:                                                ; preds = %1
  br label %4, !dbg !6568

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6570

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6571
  ret i32 %5, !dbg !6572
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6573 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6575, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8* %1, metadata !6576, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8 1, metadata !6577, metadata !DIExpression()), !dbg !6578
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6579

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6577, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8* %5, metadata !6576, metadata !DIExpression()), !dbg !6578
  %6 = load i8, i8* %5, align 1, !dbg !6580
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6582

7:                                                ; preds = %4
  br label %11, !dbg !6583

8:                                                ; preds = %4
  br label %11, !dbg !6585

9:                                                ; preds = %4
  br label %11, !dbg !6586

10:                                               ; preds = %4
  br label %11, !dbg !6587

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6588
  %14 = or i24 %13, %12, !dbg !6588
  store i24 %14, i24* %3, align 4, !dbg !6588
  call void @llvm.dbg.value(metadata i8 poison, metadata !6577, metadata !DIExpression()), !dbg !6578
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6576, metadata !DIExpression()), !dbg !6578
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6577, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.value(metadata i8* %15, metadata !6576, metadata !DIExpression()), !dbg !6578
  %17 = load i24, i24* %3, align 4, !dbg !6589
  %18 = and i24 %17, 68, !dbg !6591
  %19 = icmp eq i24 %18, 68, !dbg !6591
  br i1 %19, label %20, label %22, !dbg !6591

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6592
  store i24 %21, i24* %3, align 4, !dbg !6592
  br label %22, !dbg !6594

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6595
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6596 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6598, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i8* %1, metadata !6599, metadata !DIExpression()), !dbg !6602
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6603
  %5 = load i24, i24* %4, align 4, !dbg !6604
  %6 = or i24 %5, 128, !dbg !6604
  store i24 %6, i24* %4, align 4, !dbg !6604
  call void @llvm.dbg.value(metadata i8* %1, metadata !6599, metadata !DIExpression()), !dbg !6602
  %7 = load i8, i8* %1, align 1, !dbg !6605
  %8 = icmp eq i8 %7, 42, !dbg !6607
  br i1 %8, label %9, label %12, !dbg !6608

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6609
  store i24 %10, i24* %4, align 4, !dbg !6609
  call void @llvm.dbg.value(metadata i8* %1, metadata !6599, metadata !DIExpression()), !dbg !6602
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6611
  call void @llvm.dbg.value(metadata i8* %11, metadata !6599, metadata !DIExpression()), !dbg !6602
  store i8* %11, i8** %3, align 4, !dbg !6611
  br label %29, !dbg !6612

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6600, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.value(metadata i8** %3, metadata !6599, metadata !DIExpression(DW_OP_deref)), !dbg !6602
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6613
  call void @llvm.dbg.value(metadata i32 %13, metadata !6601, metadata !DIExpression()), !dbg !6602
  %14 = load i8*, i8** %3, align 4, !dbg !6614
  call void @llvm.dbg.value(metadata i8* %14, metadata !6599, metadata !DIExpression()), !dbg !6602
  %15 = icmp eq i8* %14, %1, !dbg !6616
  br i1 %15, label %29, label %16, !dbg !6617

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6618
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6620
  store i32 %13, i32* %18, align 4, !dbg !6621
  %19 = lshr i32 %13, 31, !dbg !6622
  %20 = lshr i24 %17, 1, !dbg !6623
  %21 = and i24 %20, 1, !dbg !6623
  %22 = zext i24 %21 to i32, !dbg !6623
  %23 = or i32 %19, %22, !dbg !6623
  %24 = trunc i32 %23 to i24, !dbg !6623
  %25 = shl nuw nsw i24 %24, 1, !dbg !6623
  %26 = and i24 %17, -131, !dbg !6623
  %27 = or i24 %26, 128, !dbg !6623
  %28 = or i24 %25, %27, !dbg !6623
  store i24 %28, i24* %4, align 4, !dbg !6623
  br label %29, !dbg !6624

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6602
  ret i8* %30, !dbg !6625
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6626 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6628, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i8* %1, metadata !6629, metadata !DIExpression()), !dbg !6631
  %4 = load i8, i8* %1, align 1, !dbg !6632
  %5 = icmp eq i8 %4, 46, !dbg !6633
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6634
  %7 = load i24, i24* %6, align 4, !dbg !6635
  %8 = select i1 %5, i24 512, i24 0, !dbg !6635
  %9 = and i24 %7, -513, !dbg !6635
  %10 = or i24 %9, %8, !dbg !6635
  store i24 %10, i24* %6, align 4, !dbg !6635
  br i1 %5, label %11, label %32, !dbg !6636

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6629, metadata !DIExpression()), !dbg !6631
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6637
  call void @llvm.dbg.value(metadata i8* %12, metadata !6629, metadata !DIExpression()), !dbg !6631
  store i8* %12, i8** %3, align 4, !dbg !6637
  %13 = load i8, i8* %12, align 1, !dbg !6638
  %14 = icmp eq i8 %13, 42, !dbg !6640
  br i1 %14, label %15, label %18, !dbg !6641

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6642
  store i24 %16, i24* %6, align 4, !dbg !6642
  call void @llvm.dbg.value(metadata i8* %12, metadata !6629, metadata !DIExpression()), !dbg !6631
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6644
  call void @llvm.dbg.value(metadata i8* %17, metadata !6629, metadata !DIExpression()), !dbg !6631
  store i8* %17, i8** %3, align 4, !dbg !6644
  br label %32, !dbg !6645

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6629, metadata !DIExpression(DW_OP_deref)), !dbg !6631
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6646
  call void @llvm.dbg.value(metadata i32 %19, metadata !6630, metadata !DIExpression()), !dbg !6631
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6647
  store i32 %19, i32* %20, align 4, !dbg !6648
  %21 = lshr i32 %19, 31, !dbg !6649
  %22 = load i24, i24* %6, align 4, !dbg !6650
  %23 = lshr i24 %22, 1, !dbg !6650
  %24 = and i24 %23, 1, !dbg !6650
  %25 = zext i24 %24 to i32, !dbg !6650
  %26 = or i32 %21, %25, !dbg !6650
  %27 = trunc i32 %26 to i24, !dbg !6650
  %28 = shl nuw nsw i24 %27, 1, !dbg !6650
  %29 = and i24 %22, -3, !dbg !6650
  %30 = or i24 %28, %29, !dbg !6650
  store i24 %30, i24* %6, align 4, !dbg !6650
  %31 = load i8*, i8** %3, align 4, !dbg !6651
  call void @llvm.dbg.value(metadata i8* %31, metadata !6629, metadata !DIExpression()), !dbg !6631
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6631
  ret i8* %33, !dbg !6652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6653 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6655, metadata !DIExpression()), !dbg !6657
  call void @llvm.dbg.value(metadata i8* %1, metadata !6656, metadata !DIExpression()), !dbg !6657
  %3 = load i8, i8* %1, align 1, !dbg !6658
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6659

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6660
  call void @llvm.dbg.value(metadata i8* %5, metadata !6656, metadata !DIExpression()), !dbg !6657
  %6 = load i8, i8* %5, align 1, !dbg !6663
  %7 = icmp eq i8 %6, 104, !dbg !6664
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6665
  %9 = load i24, i24* %8, align 4, !dbg !6665
  %10 = and i24 %9, -30721, !dbg !6665
  br i1 %7, label %11, label %14, !dbg !6666

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6667
  store i24 %12, i24* %8, align 4, !dbg !6667
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6669
  call void @llvm.dbg.value(metadata i8* %13, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %56, !dbg !6670

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6671
  store i24 %15, i24* %8, align 4, !dbg !6671
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6673
  call void @llvm.dbg.value(metadata i8* %17, metadata !6656, metadata !DIExpression()), !dbg !6657
  %18 = load i8, i8* %17, align 1, !dbg !6675
  %19 = icmp eq i8 %18, 108, !dbg !6676
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6677
  %21 = load i24, i24* %20, align 4, !dbg !6677
  %22 = and i24 %21, -30721, !dbg !6677
  br i1 %19, label %23, label %26, !dbg !6678

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6679
  store i24 %24, i24* %20, align 4, !dbg !6679
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6681
  call void @llvm.dbg.value(metadata i8* %25, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %56, !dbg !6682

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6683
  store i24 %27, i24* %20, align 4, !dbg !6683
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6685
  %30 = load i24, i24* %29, align 4, !dbg !6686
  %31 = and i24 %30, -30721, !dbg !6686
  %32 = or i24 %31, 10240, !dbg !6686
  store i24 %32, i24* %29, align 4, !dbg !6686
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6687
  call void @llvm.dbg.value(metadata i8* %33, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %56, !dbg !6688

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6689
  %36 = load i24, i24* %35, align 4, !dbg !6690
  %37 = and i24 %36, -30721, !dbg !6690
  %38 = or i24 %37, 12288, !dbg !6690
  store i24 %38, i24* %35, align 4, !dbg !6690
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6691
  call void @llvm.dbg.value(metadata i8* %39, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %56, !dbg !6692

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6693
  %42 = load i24, i24* %41, align 4, !dbg !6694
  %43 = and i24 %42, -30721, !dbg !6694
  %44 = or i24 %43, 14336, !dbg !6694
  store i24 %44, i24* %41, align 4, !dbg !6694
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6695
  call void @llvm.dbg.value(metadata i8* %45, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %56, !dbg !6696

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6697
  %48 = load i24, i24* %47, align 4, !dbg !6698
  %49 = and i24 %48, -30723, !dbg !6698
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6699
  call void @llvm.dbg.value(metadata i8* %50, metadata !6656, metadata !DIExpression()), !dbg !6657
  %51 = or i24 %49, 16386, !dbg !6700
  store i24 %51, i24* %47, align 4, !dbg !6700
  br label %56, !dbg !6701

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6702
  %54 = load i24, i24* %53, align 4, !dbg !6703
  %55 = and i24 %54, -30721, !dbg !6703
  store i24 %55, i24* %53, align 4, !dbg !6703
  br label %56, !dbg !6704

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6656, metadata !DIExpression()), !dbg !6657
  ret i8* %57, !dbg !6705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6706 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6708, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i8* %1, metadata !6709, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i8 0, metadata !6710, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i8* %1, metadata !6709, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6713
  %3 = load i8, i8* %1, align 1, !dbg !6714
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6715
  store i8 %3, i8* %4, align 1, !dbg !6716
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6717

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6718

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6719
  %9 = load i24, i24* %8, align 4, !dbg !6719
  %10 = and i24 %9, -458753, !dbg !6719
  %11 = or i24 %10, %7, !dbg !6719
  call void @llvm.dbg.label(metadata !6711), !dbg !6720
  %12 = and i24 %9, 30720, !dbg !6721
  %13 = icmp eq i24 %12, 16384, !dbg !6721
  %14 = zext i1 %13 to i24, !dbg !6723
  %15 = or i24 %11, %14, !dbg !6723
  %16 = icmp eq i8 %3, 99, !dbg !6724
  br i1 %16, label %17, label %43, !dbg !6726

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6727
  %19 = icmp ne i24 %18, 0, !dbg !6727
  call void @llvm.dbg.value(metadata i1 %19, metadata !6710, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6713
  br label %43, !dbg !6729

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6730
  %22 = load i24, i24* %21, align 4, !dbg !6731
  %23 = and i24 %22, -458753, !dbg !6731
  %24 = or i24 %23, 262144, !dbg !6731
  call void @llvm.dbg.value(metadata i8 1, metadata !6710, metadata !DIExpression()), !dbg !6713
  br label %43, !dbg !6732

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6735
  %27 = load i24, i24* %26, align 4, !dbg !6736
  %28 = and i24 %27, -458753, !dbg !6736
  %29 = or i24 %28, 196608, !dbg !6736
  %30 = and i24 %27, 30720, !dbg !6737
  %31 = icmp eq i24 %30, 16384, !dbg !6737
  br label %43, !dbg !6739

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6740
  %34 = load i24, i24* %33, align 4, !dbg !6741
  %35 = and i24 %34, -458753, !dbg !6741
  %36 = or i24 %35, 196608, !dbg !6741
  %37 = and i24 %34, 30720, !dbg !6742
  %38 = icmp ne i24 %37, 0, !dbg !6742
  br label %43, !dbg !6744

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6745
  %41 = load i24, i24* %40, align 4, !dbg !6746
  %42 = or i24 %41, 1, !dbg !6746
  br label %43, !dbg !6747

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6748
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6749
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %48, metadata !6709, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.value(metadata i8 poison, metadata !6710, metadata !DIExpression()), !dbg !6713
  %49 = lshr i24 %44, 1, !dbg !6748
  %50 = and i24 %49, 1, !dbg !6748
  %51 = zext i24 %50 to i32, !dbg !6748
  %52 = or i32 %51, %47, !dbg !6748
  %53 = trunc i32 %52 to i24, !dbg !6748
  %54 = shl nuw nsw i24 %53, 1, !dbg !6748
  %55 = and i24 %44, -3, !dbg !6748
  %56 = or i24 %54, %55, !dbg !6748
  store i24 %56, i24* %46, align 4, !dbg !6748
  ret i8* %48, !dbg !6751
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6752 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6756, metadata !DIExpression()), !dbg !6759
  %2 = load i8*, i8** %0, align 4, !dbg !6760
  call void @llvm.dbg.value(metadata i8* %2, metadata !6757, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  %3 = load i8, i8* %2, align 1, !dbg !6761
  %4 = zext i8 %3 to i32, !dbg !6762
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6763
  %6 = icmp eq i32 %5, 0, !dbg !6764
  br i1 %6, label %19, label %7, !dbg !6764

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6758, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i8* %10, metadata !6757, metadata !DIExpression()), !dbg !6759
  %11 = mul i32 %9, 10, !dbg !6765
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6767
  call void @llvm.dbg.value(metadata i8* %12, metadata !6757, metadata !DIExpression()), !dbg !6759
  %13 = add i32 %11, -48, !dbg !6768
  %14 = add i32 %13, %8, !dbg !6769
  call void @llvm.dbg.value(metadata i32 %14, metadata !6758, metadata !DIExpression()), !dbg !6759
  %15 = load i8, i8* %12, align 1, !dbg !6761
  %16 = zext i8 %15 to i32, !dbg !6762
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6763
  %18 = icmp eq i32 %17, 0, !dbg !6764
  br i1 %18, label %19, label %7, !dbg !6764, !llvm.loop !6770

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6759
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6759
  store i8* %20, i8** %0, align 4, !dbg !6772
  ret i32 %21, !dbg !6773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6776, metadata !DIExpression()), !dbg !6777
  %2 = add i32 %0, -48, !dbg !6778
  %3 = icmp ult i32 %2, 10, !dbg !6779
  %4 = zext i1 %3 to i32, !dbg !6779
  ret i32 %4, !dbg !6780
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6781 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6786, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata i32 %1, metadata !6787, metadata !DIExpression()), !dbg !6788
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6789, !srcloc !6791
  ret void, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6793 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6795, metadata !DIExpression()), !dbg !6803
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6804
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6796, metadata !DIExpression()), !dbg !6805
  call void @llvm.va_start(i8* nonnull %3), !dbg !6806
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6807
  %5 = load i32, i32* %4, align 4, !dbg !6807
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6807
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6807
  call void @llvm.va_end(i8* nonnull %3), !dbg !6808
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6809
  ret void, !dbg !6809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6810 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #26, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #26, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #26, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #26, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #26, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #26, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #26, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #26, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #26, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #26, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #26, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7164, !srcloc !7165
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7166, !srcloc !7167
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7168, !srcloc !7169
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7170, !srcloc !7171
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7172, !srcloc !7173
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7174, !srcloc !7175
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7176, !srcloc !7177
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7178, !srcloc !7179
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7180, !srcloc !7181
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7182, !srcloc !7183
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7184, !srcloc !7185
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7186, !srcloc !7187
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7188, !srcloc !7189
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7190, !srcloc !7191
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7192, !srcloc !7193
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7194, !srcloc !7195
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7196, !srcloc !7197
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7198, !srcloc !7199
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7200, !srcloc !7201
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7202, !srcloc !7203
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7204, !srcloc !7205
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7206, !srcloc !7207
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7208, !srcloc !7209
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7210, !srcloc !7211
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7212, !srcloc !7213
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7214, !srcloc !7215
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7216, !srcloc !7217
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7218, !srcloc !7219
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7220, !srcloc !7221
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7222, !srcloc !7223
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7226, !srcloc !7227
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7228, !srcloc !7229
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7230, !srcloc !7231
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7232, !srcloc !7233
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7234, !srcloc !7235
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7236, !srcloc !7237
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7238, !srcloc !7239
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #26, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7420, !srcloc !7421
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7422, !srcloc !7423
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7424, !srcloc !7425
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7426, !srcloc !7427
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7430, !srcloc !7431
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7432, !srcloc !7433
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7434, !srcloc !7435
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7436, !srcloc !7437
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7438, !srcloc !7439
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7440, !srcloc !7441
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7442, !srcloc !7443
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7444, !srcloc !7445
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7446, !srcloc !7447
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7448, !srcloc !7449
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7450, !srcloc !7451
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7452, !srcloc !7453
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7454, !srcloc !7455
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7456, !srcloc !7457
  ret void, !dbg !7458
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7461, metadata !DIExpression()), !dbg !7463
  tail call fastcc void @LL_FLASH_EnableInstCache() #28, !dbg !7464
  tail call fastcc void @LL_FLASH_EnableDataCache() #28, !dbg !7465
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7466, !srcloc !7475
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %3, metadata !7472, metadata !DIExpression()) #26, !dbg !7476
  call void @llvm.dbg.value(metadata i32 undef, metadata !7473, metadata !DIExpression()) #26, !dbg !7476
  call void @llvm.dbg.value(metadata i32 %3, metadata !7462, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata i32 %3, metadata !7477, metadata !DIExpression()) #26, !dbg !7482
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7484, !srcloc !7485
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7486
  ret i32 0, !dbg !7487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #18 !dbg !7488 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7490
  %2 = or i32 %1, 512, !dbg !7490
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #18 !dbg !7492 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7493
  %2 = or i32 %1, 1024, !dbg !7493
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7493
  ret void, !dbg !7494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7497, metadata !DIExpression()), !dbg !7498
  ret i32 0, !dbg !7499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7500 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7503, metadata !DIExpression()), !dbg !7511
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7512
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7504, metadata !DIExpression()), !dbg !7513
  call void @llvm.va_start(i8* nonnull %3), !dbg !7514
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7515
  %5 = load i32, i32* %4, align 4, !dbg !7515
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7515
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7515
  call void @llvm.va_end(i8* nonnull %3), !dbg !7516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7517
  ret void, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7518 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7523, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata i8* %0, metadata !7522, metadata !DIExpression()), !dbg !7524
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7525
  ret void, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7531, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %1, metadata !7532, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %1, metadata !7534, metadata !DIExpression()), !dbg !7535
  %4 = icmp eq i32 %2, 0, !dbg !7536
  br i1 %4, label %14, label %5, !dbg !7537

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7535
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7537

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7534, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i32 %10, metadata !7533, metadata !DIExpression()), !dbg !7535
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7538
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7540
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7541
  call void @llvm.dbg.value(metadata i32 %11, metadata !7533, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.value(metadata i8* %12, metadata !7534, metadata !DIExpression()), !dbg !7535
  br i1 %13, label %14, label %8, !dbg !7541, !llvm.loop !7542

14:                                               ; preds = %8, %3
  ret void, !dbg !7544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7547, metadata !DIExpression()), !dbg !7548
  %2 = add i32 %0, -1, !dbg !7549
  %3 = icmp ult i32 %2, 4, !dbg !7549
  %4 = shl i32 %2, 3, !dbg !7549
  %5 = lshr i32 1145657157, %4, !dbg !7549
  %6 = trunc i32 %5 to i8, !dbg !7549
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7549
  ret i8 %7, !dbg !7550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7555, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 %1, metadata !7556, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i32 0, metadata !7557, metadata !DIExpression()), !dbg !7567
  br label %4, !dbg !7568

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7569
  call void @llvm.dbg.value(metadata i32 0, metadata !7559, metadata !DIExpression()), !dbg !7570
  br label %16, !dbg !7571

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7557, metadata !DIExpression()), !dbg !7567
  %6 = icmp ult i32 %5, %1, !dbg !7572
  br i1 %6, label %7, label %11, !dbg !7576

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7577
  %9 = load i8, i8* %8, align 1, !dbg !7577
  %10 = zext i8 %9 to i32, !dbg !7579
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7580
  br label %12, !dbg !7581

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7582
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7584
  call void @llvm.dbg.value(metadata i32 %13, metadata !7557, metadata !DIExpression()), !dbg !7567
  %14 = icmp eq i32 %13, 8, !dbg !7585
  br i1 %14, label %3, label %4, !dbg !7568, !llvm.loop !7586

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7588
  ret void, !dbg !7589

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7559, metadata !DIExpression()), !dbg !7570
  %18 = icmp ult i32 %17, %1, !dbg !7590
  br i1 %18, label %19, label %26, !dbg !7591

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7592
  %21 = load i8, i8* %20, align 1, !dbg !7592
  call void @llvm.dbg.value(metadata i8 %21, metadata !7561, metadata !DIExpression()), !dbg !7593
  %22 = zext i8 %21 to i32, !dbg !7594
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7595
  %24 = icmp eq i32 %23, 0, !dbg !7596
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7595
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7597
  br label %27, !dbg !7598

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7599
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %28, metadata !7559, metadata !DIExpression()), !dbg !7570
  %29 = icmp eq i32 %28, 8, !dbg !7602
  br i1 %29, label %15, label %16, !dbg !7571, !llvm.loop !7603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7607, metadata !DIExpression()), !dbg !7608
  %2 = add i32 %0, -32, !dbg !7609
  %3 = icmp ult i32 %2, 95, !dbg !7609
  %4 = zext i1 %3 to i32, !dbg !7609
  ret i32 %4, !dbg !7610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7660, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7661, metadata !DIExpression()), !dbg !7662
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7663
  br i1 %3, label %5, label %4, !dbg !7665

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7666
  br label %5, !dbg !7668

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7669
  ret void, !dbg !7670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7671 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7675, metadata !DIExpression()), !dbg !7676
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7677
  %3 = load i32, i32* %2, align 4, !dbg !7677
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7677
  %5 = load i32, i32* %4, align 4, !dbg !7677
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7677
  %7 = load i32, i32* %6, align 4, !dbg !7677
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7677
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7682
  %9 = load i32, i32* %8, align 4, !dbg !7682
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7682
  %11 = load i32, i32* %10, align 4, !dbg !7682
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7682
  %13 = load i32, i32* %12, align 4, !dbg !7682
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7682
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7687
  %15 = load i32, i32* %14, align 4, !dbg !7687
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7687
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7692
  %17 = load i32, i32* %16, align 4, !dbg !7692
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7692
  ret void, !dbg !7697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7698 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7715, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7716, metadata !DIExpression()), !dbg !7718
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7719
  %4 = load i32, i32* %3, align 4, !dbg !7719
  call void @llvm.dbg.value(metadata i32 %4, metadata !7717, metadata !DIExpression()), !dbg !7718
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7720
  ret void, !dbg !7721
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7722 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %0, metadata !7727, metadata !DIExpression()), !dbg !7729
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7730
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7730
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7728, metadata !DIExpression()), !dbg !7731
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7731
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7732
  %5 = bitcast i8* %4 to i32*, !dbg !7732
  %6 = load i32, i32* %5, align 4, !dbg !7732
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7733
  store i32 %6, i32* %7, align 4, !dbg !7734
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7735
  unreachable, !dbg !7736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7740, metadata !DIExpression()), !dbg !7741
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7742
  ret void, !dbg !7743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7748, metadata !DIExpression()), !dbg !7749
  %2 = icmp sgt i32 %0, -1, !dbg !7750
  br i1 %2, label %3, label %8, !dbg !7752

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7753, !srcloc !7755
  %4 = and i32 %0, 31, !dbg !7756
  %5 = shl nuw i32 1, %4, !dbg !7757
  %6 = lshr i32 %0, 5, !dbg !7758
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7759
  store volatile i32 %5, i32* %7, align 4, !dbg !7760
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7761, !srcloc !7762
  br label %8, !dbg !7763

8:                                                ; preds = %3, %1
  ret void, !dbg !7764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7767, metadata !DIExpression()), !dbg !7768
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7769
  ret void, !dbg !7770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7773, metadata !DIExpression()), !dbg !7774
  %2 = icmp sgt i32 %0, -1, !dbg !7775
  br i1 %2, label %3, label %8, !dbg !7777

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7778
  %5 = shl nuw i32 1, %4, !dbg !7780
  %6 = lshr i32 %0, 5, !dbg !7781
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7782
  store volatile i32 %5, i32* %7, align 4, !dbg !7783
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7784, !srcloc !7788
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7789, !srcloc !7792
  br label %8, !dbg !7793

8:                                                ; preds = %3, %1
  ret void, !dbg !7794
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7799, metadata !DIExpression()), !dbg !7800
  %2 = lshr i32 %0, 5, !dbg !7801
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7802
  %4 = load volatile i32, i32* %3, align 4, !dbg !7802
  %5 = and i32 %0, 31, !dbg !7803
  %6 = shl nuw i32 1, %5, !dbg !7803
  %7 = and i32 %4, %6, !dbg !7804
  ret i32 %7, !dbg !7805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7810, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %1, metadata !7811, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.value(metadata i32 %2, metadata !7812, metadata !DIExpression()), !dbg !7813
  %4 = add i32 %1, 1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %4, metadata !7811, metadata !DIExpression()), !dbg !7813
  %5 = icmp ult i32 %4, 16, !dbg !7817
  br i1 %5, label %7, label %6, !dbg !7820

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7821
  unreachable, !dbg !7821

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7823
  ret void, !dbg !7824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7829, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %1, metadata !7830, metadata !DIExpression()), !dbg !7831
  %3 = trunc i32 %1 to i8, !dbg !7832
  %4 = shl i8 %3, 4, !dbg !7832
  %5 = and i32 %0, 15, !dbg !7834
  %6 = add nsw i32 %5, -4, !dbg !7834
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7834
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7834
  %9 = icmp slt i32 %0, 0, !dbg !7834
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7834
  store volatile i8 %4, i8* %10, align 1, !dbg !7832
  ret void, !dbg !7835
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7836 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7838, metadata !DIExpression()), !dbg !7839
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7842 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7844
  tail call void @z_arm_int_exit() #27, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: optsize
declare !dbg !7847 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7848 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7850 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7852
  tail call fastcc void @z_arm_floating_point_init() #28, !dbg !7853
  tail call void @z_bss_zero() #27, !dbg !7854
  tail call void @z_data_copy() #27, !dbg !7855
  tail call void @z_arm_interrupt_init() #27, !dbg !7856
  tail call void @z_cstart() #30, !dbg !7857
  unreachable, !dbg !7857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7858 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7859
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7860, !srcloc !7863
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7864, !srcloc !7867
  ret void, !dbg !7868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7869 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7870
  %2 = and i32 %1, -15728641, !dbg !7870
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7870
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7871, !srcloc !7876
  call void @llvm.dbg.value(metadata i32 %3, metadata !7874, metadata !DIExpression()) #26, !dbg !7877
  %4 = and i32 %3, -5, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %4, metadata !7879, metadata !DIExpression()) #26, !dbg !7884
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7886, !srcloc !7887
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7888, !srcloc !7867
  ret void, !dbg !7890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7894, metadata !DIExpression()), !dbg !7895
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7896
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7897
  store i32 %0, i32* %3, align 4, !dbg !7898
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7899
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7900
  store i32 %4, i32* %5, align 4, !dbg !7901
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7902
  %7 = or i32 %6, 268435456, !dbg !7902
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7902
  call void @llvm.dbg.value(metadata i32 0, metadata !7903, metadata !DIExpression()) #26, !dbg !7906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7908, !srcloc !7909
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7910
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7911
  %10 = load i32, i32* %9, align 4, !dbg !7911
  ret i32 %10, !dbg !7912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8025, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8026, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %2, metadata !8027, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8028, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %4, metadata !8029, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %5, metadata !8030, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.value(metadata i8* %6, metadata !8031, metadata !DIExpression()), !dbg !8033
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8034
  call void @llvm.dbg.value(metadata i8* %8, metadata !8032, metadata !DIExpression()), !dbg !8033
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8035
  %10 = bitcast i8* %9 to i32*, !dbg !8035
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8036
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8037
  %12 = bitcast i8* %8 to i32*, !dbg !8038
  store i32 %11, i32* %12, align 4, !dbg !8039
  %13 = ptrtoint i8* %4 to i32, !dbg !8040
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8041
  %15 = bitcast i8* %14 to i32*, !dbg !8041
  store i32 %13, i32* %15, align 4, !dbg !8042
  %16 = ptrtoint i8* %5 to i32, !dbg !8043
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8044
  %18 = bitcast i8* %17 to i32*, !dbg !8044
  store i32 %16, i32* %18, align 4, !dbg !8045
  %19 = ptrtoint i8* %6 to i32, !dbg !8046
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8047
  %21 = bitcast i8* %20 to i32*, !dbg !8047
  store i32 %19, i32* %21, align 4, !dbg !8048
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8049
  %23 = bitcast i8* %22 to i32*, !dbg !8049
  store i32 16777216, i32* %23, align 4, !dbg !8050
  %24 = ptrtoint i8* %8 to i32, !dbg !8051
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8052
  store i32 %24, i32* %25, align 8, !dbg !8053
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8054
  store i32 0, i32* %26, align 4, !dbg !8055
  ret void, !dbg !8056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8061, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %1, metadata !8062, metadata !DIExpression()), !dbg !8067
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8068
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8063, metadata !DIExpression()), !dbg !8067
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8069
  br i1 %4, label %19, label %5, !dbg !8071

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8066, metadata !DIExpression()), !dbg !8067
  %6 = icmp eq i32 %0, -22, !dbg !8072
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8072
  %8 = load i32, i32* %7, align 4, !dbg !8072
  br i1 %6, label %16, label %9, !dbg !8074

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8072
  %11 = icmp ule i32 %10, %0, !dbg !8072
  %12 = icmp ugt i32 %8, %0, !dbg !8072
  %13 = and i1 %12, %11, !dbg !8072
  %14 = icmp ugt i32 %8, %1, !dbg !8072
  %15 = and i1 %14, %13, !dbg !8072
  br i1 %15, label %18, label %19, !dbg !8072

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8072
  br i1 %17, label %18, label %19, !dbg !8074

18:                                               ; preds = %9, %16
  br label %19, !dbg !8075

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8067
  ret i32 %20, !dbg !8077
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8078 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8082, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %1, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8084, metadata !DIExpression()), !dbg !8085
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8086
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8087
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8088, !srcloc !8089
  unreachable, !dbg !8090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8091 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8109, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 %1, metadata !8110, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 %2, metadata !8111, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8112, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32 0, metadata !8113, metadata !DIExpression()), !dbg !8119
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %8, metadata !8114, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8119
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8121
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8121
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8122
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8122
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8118, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata i32 0, metadata !8124, metadata !DIExpression()) #26, !dbg !8127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8129, !srcloc !8130
  call void @llvm.dbg.value(metadata i8* %6, metadata !8116, metadata !DIExpression(DW_OP_deref)), !dbg !8119
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8131
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8117, metadata !DIExpression()), !dbg !8119
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8132
  br i1 %11, label %12, label %13, !dbg !8135

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8136
  unreachable, !dbg !8136

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %14, metadata !8114, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i8* %5, metadata !8115, metadata !DIExpression(DW_OP_deref)), !dbg !8119
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8139
  call void @llvm.dbg.value(metadata i32 %15, metadata !8113, metadata !DIExpression()), !dbg !8119
  %16 = load i8, i8* %5, align 1, !dbg !8140, !range !8142
  call void @llvm.dbg.value(metadata i8 %16, metadata !8115, metadata !DIExpression()), !dbg !8119
  %17 = icmp eq i8 %16, 0, !dbg !8140
  br i1 %17, label %18, label %35, !dbg !8143

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8144
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8145
  %21 = load i8, i8* %6, align 1, !dbg !8146, !range !8142
  call void @llvm.dbg.value(metadata i8 %21, metadata !8116, metadata !DIExpression()), !dbg !8119
  %22 = icmp eq i8 %21, 0, !dbg !8146
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8148
  %24 = load i32, i32* %23, align 4, !dbg !8148
  br i1 %22, label %30, label %25, !dbg !8149

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8150
  %27 = icmp eq i32 %26, 0, !dbg !8153
  br i1 %27, label %28, label %34, !dbg !8154

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8155
  br label %32, !dbg !8157

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8158
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8148
  br label %34, !dbg !8160

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8160
  br label %35, !dbg !8161

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8161
  ret void, !dbg !8161
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8167, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 %1, metadata !8168, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 %2, metadata !8169, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i8* %3, metadata !8170, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i8 0, metadata !8171, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i8 0, i8* %3, align 1, !dbg !8174
  %5 = icmp ugt i32 %2, -16777217, !dbg !8175
  br i1 %5, label %6, label %17, !dbg !8177

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8178
  %8 = icmp eq i32 %7, 8, !dbg !8178
  br i1 %8, label %9, label %10, !dbg !8178

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8180
  br label %17, !dbg !8186

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8187
  %12 = icmp eq i32 %11, 0, !dbg !8187
  br i1 %12, label %13, label %14, !dbg !8188

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i8 1, i8* %3, align 1, !dbg !8191
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8173
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8172, metadata !DIExpression()), !dbg !8173
  br label %17, !dbg !8194

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8173
  ret %struct.__esf* %18, !dbg !8195
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8196 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8200, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 %1, metadata !8201, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %2, metadata !8202, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 0, metadata !8203, metadata !DIExpression()), !dbg !8204
  store i8 0, i8* %2, align 1, !dbg !8205
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8206

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8207
  call void @llvm.dbg.value(metadata i32 %5, metadata !8203, metadata !DIExpression()), !dbg !8204
  br label %12, !dbg !8209

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8210
  call void @llvm.dbg.value(metadata i32 %7, metadata !8203, metadata !DIExpression()), !dbg !8204
  br label %12, !dbg !8211

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8212
  call void @llvm.dbg.value(metadata i32 0, metadata !8203, metadata !DIExpression()), !dbg !8204
  br label %12, !dbg !8213

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8214
  call void @llvm.dbg.value(metadata i32 0, metadata !8203, metadata !DIExpression()), !dbg !8204
  br label %12, !dbg !8215

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8216
  br label %12, !dbg !8217

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8218
  br label %12, !dbg !8219

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8204
  call void @llvm.dbg.value(metadata i32 %13, metadata !8203, metadata !DIExpression()), !dbg !8204
  ret i32 %13, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8221 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8225, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.value(metadata i8* %1, metadata !8226, metadata !DIExpression()), !dbg !8228
  call void @llvm.dbg.value(metadata i32 0, metadata !8227, metadata !DIExpression()), !dbg !8228
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8229
  store i8 0, i8* %1, align 1, !dbg !8234
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8235
  %4 = and i32 %3, 2, !dbg !8237
  %5 = icmp eq i32 %4, 0, !dbg !8238
  br i1 %5, label %7, label %6, !dbg !8239

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8240
  br label %38, !dbg !8246

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8247
  %9 = icmp sgt i32 %8, -1, !dbg !8249
  br i1 %9, label %11, label %10, !dbg !8250

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8251
  br label %38, !dbg !8257

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8258
  %13 = and i32 %12, 1073741824, !dbg !8260
  %14 = icmp eq i32 %13, 0, !dbg !8261
  br i1 %14, label %37, label %15, !dbg !8262

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8263
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8269
  br i1 %16, label %17, label %21, !dbg !8271

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8272
  %19 = load i32, i32* %18, align 4, !dbg !8272
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8272
  %20 = load i32, i32* %18, align 4, !dbg !8278
  call void @llvm.dbg.value(metadata i32 %20, metadata !8227, metadata !DIExpression()), !dbg !8228
  br label %38, !dbg !8279

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8280
  %23 = and i32 %22, 255, !dbg !8282
  %24 = icmp eq i32 %23, 0, !dbg !8283
  br i1 %24, label %27, label %25, !dbg !8284

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8285
  call void @llvm.dbg.value(metadata i32 %26, metadata !8227, metadata !DIExpression()), !dbg !8228
  br label %38, !dbg !8287

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8288
  %29 = and i32 %28, 65280, !dbg !8290
  %30 = icmp eq i32 %29, 0, !dbg !8291
  br i1 %30, label %32, label %31, !dbg !8292

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8293
  call void @llvm.dbg.value(metadata i32 0, metadata !8227, metadata !DIExpression()), !dbg !8228
  br label %38, !dbg !8295

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8296
  %34 = icmp ult i32 %33, 65536, !dbg !8298
  br i1 %34, label %36, label %35, !dbg !8299

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8300
  call void @llvm.dbg.value(metadata i32 0, metadata !8227, metadata !DIExpression()), !dbg !8228
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8302
  unreachable, !dbg !8302

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8307
  unreachable, !dbg !8307

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8228
  call void @llvm.dbg.value(metadata i32 %39, metadata !8227, metadata !DIExpression()), !dbg !8228
  ret i32 %39, !dbg !8312
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8313 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8315, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 %1, metadata !8316, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i8* %2, metadata !8317, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 0, metadata !8318, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.value(metadata i32 -22, metadata !8319, metadata !DIExpression()), !dbg !8328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8329
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8334
  %5 = and i32 %4, 16, !dbg !8336
  %6 = icmp eq i32 %5, 0, !dbg !8337
  br i1 %6, label %8, label %7, !dbg !8338

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8339
  br label %8, !dbg !8345

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8346
  %10 = and i32 %9, 8, !dbg !8348
  %11 = icmp eq i32 %10, 0, !dbg !8349
  br i1 %11, label %13, label %12, !dbg !8350

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8351
  br label %13, !dbg !8357

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8358
  %15 = and i32 %14, 2, !dbg !8359
  %16 = icmp eq i32 %15, 0, !dbg !8360
  br i1 %16, label %27, label %17, !dbg !8361

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8362
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %18, metadata !8320, metadata !DIExpression()), !dbg !8368
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8369
  %20 = and i32 %19, 128, !dbg !8371
  %21 = icmp eq i32 %20, 0, !dbg !8372
  br i1 %21, label %27, label %22, !dbg !8373

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8319, metadata !DIExpression()), !dbg !8328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8374
  %23 = icmp eq i32 %1, 0, !dbg !8380
  br i1 %23, label %27, label %24, !dbg !8382

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8383
  %26 = and i32 %25, -129, !dbg !8383
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8383
  br label %27, !dbg !8385

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8328
  call void @llvm.dbg.value(metadata i32 %28, metadata !8319, metadata !DIExpression()), !dbg !8328
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8386
  %30 = and i32 %29, 1, !dbg !8388
  %31 = icmp eq i32 %30, 0, !dbg !8389
  br i1 %31, label %33, label %32, !dbg !8390

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8391
  br label %33, !dbg !8397

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8398
  %35 = and i32 %34, 32, !dbg !8400
  %36 = icmp eq i32 %35, 0, !dbg !8401
  br i1 %36, label %38, label %37, !dbg !8402

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8403
  br label %38, !dbg !8409

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8410
  %40 = and i32 %39, 16, !dbg !8411
  %41 = icmp eq i32 %40, 0, !dbg !8411
  br i1 %41, label %42, label %46, !dbg !8412

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8413
  %44 = and i32 %43, 2, !dbg !8414
  %45 = icmp eq i32 %44, 0, !dbg !8414
  br i1 %45, label %60, label %46, !dbg !8415

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8416
  %48 = and i32 %47, 2048, !dbg !8417
  %49 = icmp eq i32 %48, 0, !dbg !8417
  br i1 %49, label %60, label %50, !dbg !8418

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8419
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %52, metadata !8323, metadata !DIExpression()), !dbg !8421
  %53 = icmp eq i32 %52, 0, !dbg !8422
  br i1 %53, label %55, label %54, !dbg !8424

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8425, metadata !DIExpression()) #26, !dbg !8428
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8431, !srcloc !8432
  call void @llvm.dbg.value(metadata i32 2, metadata !8318, metadata !DIExpression()), !dbg !8328
  br label %60, !dbg !8433

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8434
  %57 = and i32 %56, 16, !dbg !8434
  %58 = icmp eq i32 %57, 0, !dbg !8434
  br i1 %58, label %60, label %59, !dbg !8438

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8439
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !8439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8439
  unreachable, !dbg !8439

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8328
  call void @llvm.dbg.value(metadata i32 %61, metadata !8318, metadata !DIExpression()), !dbg !8328
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8441
  %63 = and i32 %62, 32, !dbg !8443
  %64 = icmp eq i32 %63, 0, !dbg !8444
  br i1 %64, label %68, label %65, !dbg !8445

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8446
  %67 = and i32 %66, -8193, !dbg !8446
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8446
  br label %68, !dbg !8448

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8449
  %70 = or i32 %69, 255, !dbg !8449
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8449
  store i8 0, i8* %2, align 1, !dbg !8450
  ret i32 %61, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8456, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 %0, metadata !8457, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i8* %1, metadata !8458, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.value(metadata i32 0, metadata !8459, metadata !DIExpression()), !dbg !8463
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8464
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8469
  %4 = and i32 %3, 4096, !dbg !8471
  %5 = icmp eq i32 %4, 0, !dbg !8471
  br i1 %5, label %7, label %6, !dbg !8472

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8473
  br label %7, !dbg !8479

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8480
  %9 = and i32 %8, 2048, !dbg !8482
  %10 = icmp eq i32 %9, 0, !dbg !8482
  br i1 %10, label %12, label %11, !dbg !8483

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8484
  br label %12, !dbg !8490

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8491
  %14 = and i32 %13, 512, !dbg !8492
  %15 = icmp eq i32 %14, 0, !dbg !8492
  br i1 %15, label %26, label %16, !dbg !8493

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8494
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8499
  call void @llvm.dbg.value(metadata i32 %17, metadata !8460, metadata !DIExpression()), !dbg !8500
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8501
  %19 = and i32 %18, 32768, !dbg !8503
  %20 = icmp eq i32 %19, 0, !dbg !8504
  br i1 %20, label %26, label %21, !dbg !8505

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8506
  %22 = icmp eq i32 %0, 0, !dbg !8512
  br i1 %22, label %26, label %23, !dbg !8514

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8515
  %25 = and i32 %24, -32769, !dbg !8515
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8515
  br label %26, !dbg !8517

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8518
  %28 = and i32 %27, 1024, !dbg !8520
  %29 = icmp eq i32 %28, 0, !dbg !8520
  br i1 %29, label %31, label %30, !dbg !8521

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8522
  br label %31, !dbg !8528

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8529
  %33 = and i32 %32, 256, !dbg !8531
  %34 = icmp eq i32 %33, 0, !dbg !8532
  br i1 %34, label %35, label %39, !dbg !8533

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8534
  %37 = and i32 %36, 8192, !dbg !8536
  %38 = icmp eq i32 %37, 0, !dbg !8536
  br i1 %38, label %41, label %39, !dbg !8537

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8538
  br label %41, !dbg !8539

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8539
  %43 = or i32 %42, 65280, !dbg !8539
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8539
  store i8 0, i8* %1, align 1, !dbg !8540
  ret void, !dbg !8541
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8542 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8548, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.value(metadata i32 0, metadata !8549, metadata !DIExpression()), !dbg !8550
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8551
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8556
  %2 = and i32 %1, 33554432, !dbg !8558
  %3 = icmp eq i32 %2, 0, !dbg !8559
  br i1 %3, label %5, label %4, !dbg !8560

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8561
  br label %5, !dbg !8567

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8568
  %7 = and i32 %6, 16777216, !dbg !8570
  %8 = icmp eq i32 %7, 0, !dbg !8571
  br i1 %8, label %10, label %9, !dbg !8572

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8573
  br label %10, !dbg !8579

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8580
  %12 = and i32 %11, 524288, !dbg !8582
  %13 = icmp eq i32 %12, 0, !dbg !8583
  br i1 %13, label %15, label %14, !dbg !8584

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8585
  br label %15, !dbg !8591

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8592
  %17 = and i32 %16, 262144, !dbg !8594
  %18 = icmp eq i32 %17, 0, !dbg !8595
  br i1 %18, label %20, label %19, !dbg !8596

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8597
  br label %20, !dbg !8603

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8604
  %22 = and i32 %21, 131072, !dbg !8606
  %23 = icmp eq i32 %22, 0, !dbg !8607
  br i1 %23, label %25, label %24, !dbg !8608

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8609
  br label %25, !dbg !8615

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8616
  %27 = and i32 %26, 65536, !dbg !8618
  %28 = icmp eq i32 %27, 0, !dbg !8619
  br i1 %28, label %30, label %29, !dbg !8620

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8621
  br label %30, !dbg !8627

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8628
  %32 = or i32 %31, -65536, !dbg !8628
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8628
  ret void, !dbg !8629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8630 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8634, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i8* %0, metadata !8635, metadata !DIExpression()), !dbg !8636
  store i8 0, i8* %0, align 1, !dbg !8637
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8638
  ret void, !dbg !8643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8648, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.value(metadata i32 %0, metadata !8649, metadata !DIExpression()), !dbg !8650
  %2 = icmp slt i32 %0, 16, !dbg !8651
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8651
  %4 = add nsw i32 %0, -16, !dbg !8651
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8651
  ret void, !dbg !8656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8657 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8661, metadata !DIExpression()), !dbg !8664
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8665
  %3 = load i32, i32* %2, align 4, !dbg !8665
  %4 = inttoptr i32 %3 to i16*, !dbg !8666
  call void @llvm.dbg.value(metadata i16* %4, metadata !8662, metadata !DIExpression()), !dbg !8664
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8667
  %6 = or i32 %5, 256, !dbg !8667
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8667
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8668, !srcloc !8671
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8672, !srcloc !8675
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8676
  %8 = load i16, i16* %7, align 2, !dbg !8677
  call void @llvm.dbg.value(metadata i16 %8, metadata !8663, metadata !DIExpression()), !dbg !8664
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8678
  %10 = and i32 %9, -257, !dbg !8678
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8678
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8679, !srcloc !8671
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8681, !srcloc !8675
  %11 = icmp eq i16 %8, -8446, !dbg !8683
  ret i1 %11, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8686 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8687
  %2 = or i32 %1, 16, !dbg !8687
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8687
  ret void, !dbg !8688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8692, metadata !DIExpression()), !dbg !8693
  br label %1, !dbg !8694

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8692, metadata !DIExpression()), !dbg !8693
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8696
  %3 = add nuw nsw i32 %2, 1, !dbg !8699
  call void @llvm.dbg.value(metadata i32 %3, metadata !8692, metadata !DIExpression()), !dbg !8693
  %4 = icmp eq i32 %3, 97, !dbg !8700
  br i1 %4, label %5, label %1, !dbg !8694, !llvm.loop !8701

5:                                                ; preds = %1
  ret void, !dbg !8703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #18 !dbg !8704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 1, metadata !8707, metadata !DIExpression()), !dbg !8708
  %2 = and i32 %0, 15, !dbg !8709
  %3 = add nsw i32 %2, -4, !dbg !8709
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8709
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8709
  %6 = icmp slt i32 %0, 0, !dbg !8709
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8709
  store volatile i8 16, i8* %7, align 1, !dbg !8710
  ret void, !dbg !8712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8821, metadata !DIExpression()), !dbg !8822
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8823
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8825
  br i1 %3, label %4, label %12, !dbg !8826

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8827, !srcloc !8839
  call void @llvm.dbg.value(metadata i32 %5, metadata !8830, metadata !DIExpression()) #26, !dbg !8840
  %6 = icmp eq i32 %5, 0, !dbg !8841
  br i1 %6, label %12, label %7, !dbg !8842

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8843
  %9 = or i32 %8, 268435456, !dbg !8843
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8843
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8845
  %11 = and i32 %10, -32769, !dbg !8845
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8845
  br label %12, !dbg !8846

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8847
  ret void, !dbg !8848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8849 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8850
  ret void, !dbg !8851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !645, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i8 0, metadata !646, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 64, metadata !648, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.value(metadata i32 undef, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8852
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8853
  %3 = load i32, i32* %2, align 4, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %3, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8852
  %4 = add i32 %3, -64, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %4, metadata !647, metadata !DIExpression()), !dbg !8852
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8856
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8857
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8858
  call void @llvm.dbg.value(metadata i8 1, metadata !646, metadata !DIExpression()), !dbg !8852
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8859
  ret void, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8861 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8862
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8863, !srcloc !8866
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8867, !srcloc !8870
  ret void, !dbg !8871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8872 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8873, !srcloc !8876
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8877
  ret void, !dbg !8878
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8879 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8894, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i8 %1, metadata !8895, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 %2, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.value(metadata i32 %3, metadata !8897, metadata !DIExpression()), !dbg !8898
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8899
  %6 = icmp eq i32 %5, -22, !dbg !8901
  br i1 %6, label %7, label %9, !dbg !8902

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8903
  %8 = zext i8 %1 to i32, !dbg !8903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8903
  unreachable, !dbg !8903

9:                                                ; preds = %4
  ret void, !dbg !8908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8909 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8914, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i8 %1, metadata !8915, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 undef, metadata !8916, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.value(metadata i32 undef, metadata !8917, metadata !DIExpression()), !dbg !8919
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8920
  call void @llvm.dbg.value(metadata i8 %3, metadata !8918, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8919
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %4, metadata !8918, metadata !DIExpression()), !dbg !8919
  %5 = trunc i32 %4 to i8, !dbg !8922
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8923
  ret i32 %4, !dbg !8924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8925 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8929, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i8 %1, metadata !8930, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i8 %2, metadata !8931, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i1 %3, metadata !8932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8935
  %5 = zext i8 %2 to i32, !dbg !8936
  call void @llvm.dbg.value(metadata i32 %5, metadata !8934, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i32 0, metadata !8933, metadata !DIExpression()), !dbg !8935
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8934, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i32 0, metadata !8933, metadata !DIExpression()), !dbg !8935
  %7 = icmp eq i8 %1, 0, !dbg !8937
  br i1 %7, label %30, label %8, !dbg !8940

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8934, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i32 %10, metadata !8933, metadata !DIExpression()), !dbg !8935
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8941
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8944
  %13 = load i32, i32* %12, align 4, !dbg !8944
  %14 = icmp eq i32 %13, 0, !dbg !8945
  br i1 %14, label %26, label %15, !dbg !8946

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8947

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8949
  %18 = icmp eq i32 %17, 0, !dbg !8949
  br i1 %18, label %19, label %20, !dbg !8950

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8951
  br label %30, !dbg !8957

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8958
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %22, metadata !8934, metadata !DIExpression()), !dbg !8935
  %23 = icmp eq i32 %22, -22, !dbg !8960
  br i1 %23, label %30, label %24, !dbg !8962

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8963
  call void @llvm.dbg.value(metadata i32 %25, metadata !8934, metadata !DIExpression()), !dbg !8935
  br label %26, !dbg !8964

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8935
  call void @llvm.dbg.value(metadata i32 %27, metadata !8934, metadata !DIExpression()), !dbg !8935
  %28 = add nuw nsw i32 %10, 1, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %28, metadata !8933, metadata !DIExpression()), !dbg !8935
  %29 = icmp eq i32 %28, %6, !dbg !8937
  br i1 %29, label %30, label %8, !dbg !8940, !llvm.loop !8966

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8935
  ret i32 %31, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8973, metadata !DIExpression()), !dbg !8975
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8976
  %3 = load i32, i32* %2, align 4, !dbg !8976
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8977, !range !5400
  %5 = icmp ult i32 %4, 2, !dbg !8977
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8978
  br i1 %7, label %8, label %15, !dbg !8978

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8979
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8980
  %11 = load i32, i32* %10, align 4, !dbg !8980
  %12 = and i32 %11, %9, !dbg !8981
  %13 = icmp eq i32 %12, 0, !dbg !8982
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8974, metadata !DIExpression()), !dbg !8975
  ret i32 %16, !dbg !8983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8984 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8988, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8989, metadata !DIExpression()), !dbg !8991
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8992
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8992
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8990, metadata !DIExpression()), !dbg !8993
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8994
  %6 = load i32, i32* %5, align 4, !dbg !8994
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8995
  store i32 %6, i32* %7, align 4, !dbg !8996
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8997
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8998
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8999
  %11 = load i32, i32* %10, align 4, !dbg !8999
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !9000
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !9001
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !9002
  ret i32 %12, !dbg !9003
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !9004 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9011, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9012, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32 undef, metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.value(metadata i32 %2, metadata !9014, metadata !DIExpression()), !dbg !9015
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9016
  %5 = load i32, i32* %4, align 4, !dbg !9016
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !9017
  %7 = or i32 %6, %5, !dbg !9018
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9019
  store i32 %7, i32* %8, align 4, !dbg !9020
  ret void, !dbg !9021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9022 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9026, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9027, metadata !DIExpression()), !dbg !9028
  %3 = zext i8 %0 to i32, !dbg !9029
  %4 = icmp ugt i8 %0, 7, !dbg !9031
  br i1 %4, label %5, label %6, !dbg !9032

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9033
  br label %7, !dbg !9039

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !9040
  br label %7, !dbg !9041

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9028
  ret i32 %8, !dbg !9042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !9043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9047, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !9050
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9051
  %4 = load i32, i32* %3, align 4, !dbg !9051
  %5 = and i32 %4, -32, !dbg !9052
  %6 = or i32 %5, %0, !dbg !9053
  %7 = or i32 %6, 16, !dbg !9053
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9054
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9055
  %9 = load i32, i32* %8, align 4, !dbg !9055
  %10 = or i32 %9, 1, !dbg !9056
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !9059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9062, metadata !DIExpression()), !dbg !9063
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9064
  ret void, !dbg !9065
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !9066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9070, metadata !DIExpression()), !dbg !9071
  %2 = icmp ult i32 %0, 33, !dbg !9072
  br i1 %2, label %11, label %3, !dbg !9074

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9075
  br i1 %4, label %11, label %5, !dbg !9077

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9078
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9079, !range !5400
  %8 = mul nsw i32 %7, -2, !dbg !9080
  %9 = add nsw i32 %8, 62, !dbg !9080
  %10 = and i32 %9, 62, !dbg !9081
  br label %11, !dbg !9082

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9071
  ret i32 %12, !dbg !9083
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9084 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9088, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i8 %1, metadata !9089, metadata !DIExpression()), !dbg !9090
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9091
  %4 = icmp eq i32 %3, -22, !dbg !9093
  br i1 %4, label %5, label %7, !dbg !9094

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9095
  %6 = zext i8 %1 to i32, !dbg !9095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9095
  unreachable, !dbg !9095

7:                                                ; preds = %2
  ret void, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9101 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9105, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i8 %1, metadata !9106, metadata !DIExpression()), !dbg !9112
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9113
  call void @llvm.dbg.value(metadata i8 %3, metadata !9107, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9112
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %4, metadata !9107, metadata !DIExpression()), !dbg !9112
  %5 = icmp ne i32 %4, -22, !dbg !9115
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9116
  call void @llvm.dbg.value(metadata i32 %4, metadata !9108, metadata !DIExpression()), !dbg !9117
  br i1 %7, label %8, label %12, !dbg !9116

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9108, metadata !DIExpression()), !dbg !9117
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9118
  %10 = add i32 %9, 1, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %10, metadata !9108, metadata !DIExpression()), !dbg !9117
  %11 = icmp eq i32 %10, 8, !dbg !9122
  br i1 %11, label %12, label %8, !dbg !9123, !llvm.loop !9124

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !9127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9130, metadata !DIExpression()), !dbg !9131
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9132
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9133
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9135 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9140
  %2 = icmp ugt i32 %1, 8, !dbg !9142
  br i1 %2, label %3, label %4, !dbg !9143

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9144
  unreachable, !dbg !9144

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9149
  call void @llvm.dbg.value(metadata i32 0, metadata !9139, metadata !DIExpression()), !dbg !9150
  %5 = icmp eq i32 %1, 0, !dbg !9151
  br i1 %5, label %13, label %6, !dbg !9154

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9154

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9139, metadata !DIExpression()), !dbg !9150
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9155
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9157
  %11 = add nuw i32 %9, 1, !dbg !9158
  call void @llvm.dbg.value(metadata i32 %11, metadata !9139, metadata !DIExpression()), !dbg !9150
  %12 = icmp eq i32 %11, %1, !dbg !9151
  br i1 %12, label %13, label %8, !dbg !9154, !llvm.loop !9159

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9161
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9162
  tail call void @arm_core_mpu_enable() #28, !dbg !9163
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9164
  %16 = and i32 %15, 65280, !dbg !9164
  %17 = icmp eq i32 %16, 2048, !dbg !9164
  br i1 %17, label %19, label %18, !dbg !9167

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9168
  unreachable, !dbg !9168

19:                                               ; preds = %13
  ret i32 0, !dbg !9170
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9178, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8* %1, metadata !9179, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8* %0, metadata !9180, metadata !DIExpression()), !dbg !9181
  %3 = load i8, i8* %1, align 1, !dbg !9182
  %4 = icmp eq i8 %3, 0, !dbg !9183
  br i1 %4, label %13, label %5, !dbg !9184

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9178, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8* %8, metadata !9179, metadata !DIExpression()), !dbg !9181
  store i8 %6, i8* %7, align 1, !dbg !9185
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9187
  call void @llvm.dbg.value(metadata i8* %9, metadata !9178, metadata !DIExpression()), !dbg !9181
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9188
  call void @llvm.dbg.value(metadata i8* %10, metadata !9179, metadata !DIExpression()), !dbg !9181
  %11 = load i8, i8* %10, align 1, !dbg !9182
  %12 = icmp eq i8 %11, 0, !dbg !9183
  br i1 %12, label %13, label %5, !dbg !9184, !llvm.loop !9189

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9191
  ret i8* %0, !dbg !9192
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i8* %1, metadata !9198, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %2, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i8* %0, metadata !9200, metadata !DIExpression()), !dbg !9201
  %4 = icmp eq i32 %2, 0, !dbg !9202
  br i1 %4, label %22, label %5, !dbg !9203

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %7, metadata !9199, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i8* %8, metadata !9198, metadata !DIExpression()), !dbg !9201
  %9 = load i8, i8* %8, align 1, !dbg !9204
  %10 = icmp eq i8 %9, 0, !dbg !9205
  br i1 %10, label %16, label %11, !dbg !9206

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9207
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9209
  call void @llvm.dbg.value(metadata i8* %12, metadata !9198, metadata !DIExpression()), !dbg !9201
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9210
  call void @llvm.dbg.value(metadata i8* %13, metadata !9197, metadata !DIExpression()), !dbg !9201
  %14 = add i32 %7, -1, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %14, metadata !9199, metadata !DIExpression()), !dbg !9201
  %15 = icmp eq i32 %14, 0, !dbg !9202
  br i1 %15, label %22, label %5, !dbg !9203, !llvm.loop !9212

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9197, metadata !DIExpression()), !dbg !9201
  call void @llvm.dbg.value(metadata i32 %18, metadata !9199, metadata !DIExpression()), !dbg !9201
  store i8 0, i8* %17, align 1, !dbg !9214
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9216
  call void @llvm.dbg.value(metadata i8* %19, metadata !9197, metadata !DIExpression()), !dbg !9201
  %20 = add i32 %18, -1, !dbg !9217
  call void @llvm.dbg.value(metadata i32 %20, metadata !9199, metadata !DIExpression()), !dbg !9201
  %21 = icmp eq i32 %20, 0, !dbg !9218
  br i1 %21, label %22, label %16, !dbg !9219, !llvm.loop !9220

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9222
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9223 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9227, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i32 %1, metadata !9228, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.value(metadata i32 %1, metadata !9229, metadata !DIExpression()), !dbg !9230
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9231

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9227, metadata !DIExpression()), !dbg !9230
  %6 = load i8, i8* %5, align 1, !dbg !9232
  %7 = icmp eq i8 %6, %3, !dbg !9233
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9234
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9235
  call void @llvm.dbg.value(metadata i8* %10, metadata !9227, metadata !DIExpression()), !dbg !9230
  br i1 %9, label %11, label %4, !dbg !9234, !llvm.loop !9237

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9239
  ret i8* %12, !dbg !9240
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9243, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i32 %1, metadata !9244, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i8* null, metadata !9245, metadata !DIExpression()), !dbg !9246
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9247

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9246
  call void @llvm.dbg.value(metadata i8* %6, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i8* %5, metadata !9243, metadata !DIExpression()), !dbg !9246
  %7 = load i8, i8* %5, align 1, !dbg !9248
  %8 = icmp eq i8 %7, %3, !dbg !9251
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9252
  call void @llvm.dbg.value(metadata i8* %9, metadata !9245, metadata !DIExpression()), !dbg !9246
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9253
  call void @llvm.dbg.value(metadata i8* %10, metadata !9243, metadata !DIExpression()), !dbg !9246
  %11 = icmp eq i8 %7, 0, !dbg !9254
  br i1 %11, label %12, label %4, !dbg !9254, !llvm.loop !9255

12:                                               ; preds = %4
  ret i8* %9, !dbg !9257
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9262, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 0, metadata !9263, metadata !DIExpression()), !dbg !9264
  %2 = load i8, i8* %0, align 1, !dbg !9265
  %3 = icmp eq i8 %2, 0, !dbg !9266
  br i1 %3, label %11, label %4, !dbg !9267

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i8* %6, metadata !9262, metadata !DIExpression()), !dbg !9264
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9268
  call void @llvm.dbg.value(metadata i8* %7, metadata !9262, metadata !DIExpression()), !dbg !9264
  %8 = add i32 %5, 1, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %8, metadata !9263, metadata !DIExpression()), !dbg !9264
  %9 = load i8, i8* %7, align 1, !dbg !9265
  %10 = icmp eq i8 %9, 0, !dbg !9266
  br i1 %10, label %11, label %4, !dbg !9267, !llvm.loop !9271

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9264
  ret i32 %12, !dbg !9273
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9274 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9278, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i32 %1, metadata !9279, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i32 0, metadata !9280, metadata !DIExpression()), !dbg !9281
  %3 = load i8, i8* %0, align 1, !dbg !9282
  %4 = icmp ne i8 %3, 0, !dbg !9283
  %5 = icmp ne i32 %1, 0, !dbg !9284
  %6 = and i1 %4, %5, !dbg !9284
  br i1 %6, label %7, label %16, !dbg !9285

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.value(metadata i8* %9, metadata !9278, metadata !DIExpression()), !dbg !9281
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9286
  call void @llvm.dbg.value(metadata i8* %10, metadata !9278, metadata !DIExpression()), !dbg !9281
  %11 = add nuw i32 %8, 1, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %11, metadata !9280, metadata !DIExpression()), !dbg !9281
  %12 = load i8, i8* %10, align 1, !dbg !9282
  %13 = icmp ne i8 %12, 0, !dbg !9283
  %14 = icmp ult i32 %11, %1, !dbg !9284
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9284
  br i1 %15, label %7, label %16, !dbg !9285, !llvm.loop !9289

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9281
  ret i32 %17, !dbg !9291
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9292 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9296, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i8* %1, metadata !9297, metadata !DIExpression()), !dbg !9298
  %3 = load i8, i8* %0, align 1, !dbg !9299
  %4 = load i8, i8* %1, align 1, !dbg !9300
  %5 = icmp ne i8 %3, %4, !dbg !9301
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9302
  br i1 %7, label %18, label %8, !dbg !9302

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9297, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i8* %10, metadata !9296, metadata !DIExpression()), !dbg !9298
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9303
  call void @llvm.dbg.value(metadata i8* %11, metadata !9296, metadata !DIExpression()), !dbg !9298
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9305
  call void @llvm.dbg.value(metadata i8* %12, metadata !9297, metadata !DIExpression()), !dbg !9298
  %13 = load i8, i8* %11, align 1, !dbg !9299
  %14 = load i8, i8* %12, align 1, !dbg !9300
  %15 = icmp ne i8 %13, %14, !dbg !9301
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9302
  br i1 %17, label %18, label %8, !dbg !9302, !llvm.loop !9306

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9299
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9300
  %21 = zext i8 %19 to i32, !dbg !9309
  %22 = zext i8 %20 to i32, !dbg !9310
  %23 = sub nsw i32 %21, %22, !dbg !9311
  ret i32 %23, !dbg !9312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9317, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.value(metadata i8* %1, metadata !9318, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.value(metadata i32 %2, metadata !9319, metadata !DIExpression()), !dbg !9320
  %4 = icmp eq i32 %2, 0, !dbg !9321
  br i1 %4, label %23, label %5, !dbg !9321

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.value(metadata i8* %7, metadata !9318, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.value(metadata i8* %8, metadata !9317, metadata !DIExpression()), !dbg !9320
  %9 = load i8, i8* %8, align 1, !dbg !9322
  %10 = load i8, i8* %7, align 1, !dbg !9323
  %11 = icmp ne i8 %9, %10, !dbg !9324
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9325
  br i1 %13, label %19, label %14, !dbg !9325

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9326
  call void @llvm.dbg.value(metadata i8* %15, metadata !9317, metadata !DIExpression()), !dbg !9320
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9328
  call void @llvm.dbg.value(metadata i8* %16, metadata !9318, metadata !DIExpression()), !dbg !9320
  %17 = add i32 %6, -1, !dbg !9329
  call void @llvm.dbg.value(metadata i32 %17, metadata !9319, metadata !DIExpression()), !dbg !9320
  %18 = icmp eq i32 %17, 0, !dbg !9321
  br i1 %18, label %23, label %5, !dbg !9321, !llvm.loop !9330

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9333
  %21 = zext i8 %10 to i32, !dbg !9334
  %22 = sub nsw i32 %20, %21, !dbg !9335
  br label %23, !dbg !9336

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9336
  ret i32 %24, !dbg !9337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9342, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8* %1, metadata !9343, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8** %2, metadata !9344, metadata !DIExpression()), !dbg !9347
  %4 = icmp eq i8* %0, null, !dbg !9348
  br i1 %4, label %5, label %7, !dbg !9348

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9349
  br label %7, !dbg !9348

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9348
  call void @llvm.dbg.value(metadata i8* %8, metadata !9345, metadata !DIExpression()), !dbg !9347
  %9 = load i8, i8* %8, align 1, !dbg !9350
  %10 = icmp eq i8 %9, 0, !dbg !9350
  br i1 %10, label %33, label %11, !dbg !9351

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9345, metadata !DIExpression()), !dbg !9347
  %14 = zext i8 %12 to i32, !dbg !9350
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9352
  %16 = icmp eq i8* %15, null, !dbg !9351
  br i1 %16, label %21, label %17, !dbg !9353

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9354
  call void @llvm.dbg.value(metadata i8* %18, metadata !9345, metadata !DIExpression()), !dbg !9347
  %19 = load i8, i8* %18, align 1, !dbg !9350
  %20 = icmp eq i8 %19, 0, !dbg !9350
  br i1 %20, label %33, label %11, !dbg !9351, !llvm.loop !9356

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9346, metadata !DIExpression()), !dbg !9347
  %24 = zext i8 %22 to i32, !dbg !9358
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9359
  %26 = icmp eq i8* %25, null, !dbg !9360
  br i1 %26, label %27, label %31, !dbg !9361

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9362
  call void @llvm.dbg.value(metadata i8* %28, metadata !9346, metadata !DIExpression()), !dbg !9347
  %29 = load i8, i8* %28, align 1, !dbg !9358
  %30 = icmp eq i8 %29, 0, !dbg !9358
  br i1 %30, label %33, label %21, !dbg !9364, !llvm.loop !9365

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9367
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9370
  br label %33, !dbg !9371

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9347
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9347
  store i8* %34, i8** %2, align 4, !dbg !9347
  ret i8* %35, !dbg !9372
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9375, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9376, metadata !DIExpression()), !dbg !9377
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9378
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9379
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9380
  ret i8* %0, !dbg !9381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9384, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i8* %1, metadata !9385, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %2, metadata !9386, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i8* %0, metadata !9387, metadata !DIExpression()), !dbg !9389
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9390
  call void @llvm.dbg.value(metadata i32 %4, metadata !9388, metadata !DIExpression()), !dbg !9389
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9391
  call void @llvm.dbg.value(metadata i8* %5, metadata !9384, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i8* %1, metadata !9385, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %2, metadata !9386, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %2, metadata !9386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9389
  %6 = icmp eq i32 %2, 0, !dbg !9392
  br i1 %6, label %18, label %7, !dbg !9393

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9394
  call void @llvm.dbg.value(metadata i8* %9, metadata !9384, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i8* %10, metadata !9385, metadata !DIExpression()), !dbg !9389
  %12 = load i8, i8* %10, align 1, !dbg !9395
  %13 = icmp eq i8 %12, 0, !dbg !9396
  br i1 %13, label %18, label %14, !dbg !9397

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9398
  call void @llvm.dbg.value(metadata i8* %15, metadata !9385, metadata !DIExpression()), !dbg !9389
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9400
  call void @llvm.dbg.value(metadata i8* %16, metadata !9384, metadata !DIExpression()), !dbg !9389
  store i8 %12, i8* %9, align 1, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %11, metadata !9386, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %11, metadata !9386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9389
  %17 = icmp eq i32 %11, 0, !dbg !9392
  br i1 %17, label %18, label %7, !dbg !9393, !llvm.loop !9402

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9389
  store i8 0, i8* %19, align 1, !dbg !9404
  ret i8* %0, !dbg !9405
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9406 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9410, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %1, metadata !9411, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 %2, metadata !9412, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %0, metadata !9413, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %1, metadata !9414, metadata !DIExpression()), !dbg !9415
  %4 = icmp eq i32 %2, 0, !dbg !9416
  br i1 %4, label %31, label %5, !dbg !9418

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %0, metadata !9413, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 %2, metadata !9412, metadata !DIExpression()), !dbg !9415
  %6 = add i32 %2, -1, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %6, metadata !9412, metadata !DIExpression()), !dbg !9415
  %7 = icmp eq i32 %6, 0, !dbg !9420
  br i1 %7, label %23, label %8, !dbg !9421

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9422
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9422
  br label %11, !dbg !9422

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i8* %14, metadata !9413, metadata !DIExpression()), !dbg !9415
  %15 = load i8, i8* %14, align 1, !dbg !9423
  %16 = load i8, i8* %13, align 1, !dbg !9424
  %17 = icmp eq i8 %15, %16, !dbg !9425
  br i1 %17, label %18, label %23, !dbg !9422

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9426
  call void @llvm.dbg.value(metadata i8* %19, metadata !9413, metadata !DIExpression()), !dbg !9415
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9428
  call void @llvm.dbg.value(metadata i8* %20, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata i32 %12, metadata !9412, metadata !DIExpression()), !dbg !9415
  %21 = add i32 %12, -1, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %21, metadata !9412, metadata !DIExpression()), !dbg !9415
  %22 = icmp eq i32 %21, 0, !dbg !9420
  br i1 %22, label %23, label %11, !dbg !9421, !llvm.loop !9429

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9415
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9415
  %26 = load i8, i8* %24, align 1, !dbg !9431
  %27 = zext i8 %26 to i32, !dbg !9431
  %28 = load i8, i8* %25, align 1, !dbg !9432
  %29 = zext i8 %28 to i32, !dbg !9432
  %30 = sub nsw i32 %27, %29, !dbg !9433
  br label %31, !dbg !9434

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9415
  ret i32 %32, !dbg !9435
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9436 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9440, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9441, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %2, metadata !9442, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %1, metadata !9444, metadata !DIExpression()), !dbg !9445
  %4 = ptrtoint i8* %0 to i32, !dbg !9446
  %5 = ptrtoint i8* %1 to i32, !dbg !9446
  %6 = sub i32 %4, %5, !dbg !9446
  %7 = icmp ult i32 %6, %2, !dbg !9448
  br i1 %7, label %10, label %8, !dbg !9449

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %2, metadata !9442, metadata !DIExpression()), !dbg !9445
  %9 = icmp eq i32 %2, 0, !dbg !9450
  br i1 %9, label %26, label %17, !dbg !9452

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9442, metadata !DIExpression()), !dbg !9445
  %12 = add i32 %11, -1, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %12, metadata !9442, metadata !DIExpression()), !dbg !9445
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9456
  %14 = load i8, i8* %13, align 1, !dbg !9456
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9457
  store i8 %14, i8* %15, align 1, !dbg !9458
  %16 = icmp eq i32 %12, 0, !dbg !9459
  br i1 %16, label %26, label %10, !dbg !9460, !llvm.loop !9461

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i8* %19, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %20, metadata !9442, metadata !DIExpression()), !dbg !9445
  %21 = load i8, i8* %18, align 1, !dbg !9463
  store i8 %21, i8* %19, align 1, !dbg !9465
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9466
  call void @llvm.dbg.value(metadata i8* %22, metadata !9443, metadata !DIExpression()), !dbg !9445
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9467
  call void @llvm.dbg.value(metadata i8* %23, metadata !9444, metadata !DIExpression()), !dbg !9445
  %24 = add i32 %20, -1, !dbg !9468
  call void @llvm.dbg.value(metadata i32 %24, metadata !9442, metadata !DIExpression()), !dbg !9445
  %25 = icmp eq i32 %24, 0, !dbg !9450
  br i1 %25, label %26, label %17, !dbg !9452, !llvm.loop !9469

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9471
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9478, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i8* %1, metadata !9479, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32 %2, metadata !9480, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i8* %0, metadata !9481, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i8* %1, metadata !9482, metadata !DIExpression()), !dbg !9483
  %4 = icmp eq i32 %2, 0, !dbg !9484
  br i1 %4, label %14, label %5, !dbg !9485

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9482, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i8* %7, metadata !9481, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.value(metadata i32 %8, metadata !9480, metadata !DIExpression()), !dbg !9483
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9486
  call void @llvm.dbg.value(metadata i8* %9, metadata !9482, metadata !DIExpression()), !dbg !9483
  %10 = load i8, i8* %6, align 1, !dbg !9488
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9489
  call void @llvm.dbg.value(metadata i8* %11, metadata !9481, metadata !DIExpression()), !dbg !9483
  store i8 %10, i8* %7, align 1, !dbg !9490
  %12 = add i32 %8, -1, !dbg !9491
  call void @llvm.dbg.value(metadata i32 %12, metadata !9480, metadata !DIExpression()), !dbg !9483
  %13 = icmp eq i32 %12, 0, !dbg !9484
  br i1 %13, label %14, label %5, !dbg !9485, !llvm.loop !9492

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9494
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9495 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9499, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 %1, metadata !9500, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 %2, metadata !9501, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i8* %0, metadata !9502, metadata !DIExpression()), !dbg !9504
  %4 = trunc i32 %1 to i8, !dbg !9505
  call void @llvm.dbg.value(metadata i8 %4, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 %2, metadata !9501, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i8* %0, metadata !9502, metadata !DIExpression()), !dbg !9504
  %5 = icmp eq i32 %2, 0, !dbg !9506
  br i1 %5, label %12, label %6, !dbg !9507

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9501, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i8* %8, metadata !9502, metadata !DIExpression()), !dbg !9504
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9508
  call void @llvm.dbg.value(metadata i8* %9, metadata !9502, metadata !DIExpression()), !dbg !9504
  store i8 %4, i8* %8, align 1, !dbg !9510
  %10 = add i32 %7, -1, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %10, metadata !9501, metadata !DIExpression()), !dbg !9504
  %11 = icmp eq i32 %10, 0, !dbg !9506
  br i1 %11, label %12, label %6, !dbg !9507, !llvm.loop !9512

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9514
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9515 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9519, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %1, metadata !9520, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i32 %2, metadata !9521, metadata !DIExpression()), !dbg !9525
  %4 = icmp eq i32 %2, 0, !dbg !9526
  br i1 %4, label %17, label %5, !dbg !9527

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9528

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9529
  call void @llvm.dbg.value(metadata i8* %9, metadata !9522, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %8, metadata !9521, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.value(metadata i8* %9, metadata !9522, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9529
  %10 = load i8, i8* %9, align 1, !dbg !9530
  %11 = icmp eq i8 %10, %6, !dbg !9533
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9534
  call void @llvm.dbg.value(metadata i8* %12, metadata !9522, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.value(metadata i32 %13, metadata !9521, metadata !DIExpression()), !dbg !9525
  br i1 %15, label %16, label %7, !dbg !9534, !llvm.loop !9535

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9537

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9525
  ret i8* %19, !dbg !9538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9539 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9541, metadata !DIExpression()), !dbg !9542
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9543
  ret void, !dbg !9544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9547, metadata !DIExpression()), !dbg !9548
  ret i32 -1, !dbg !9549
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9554, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.value(metadata i32* %1, metadata !9555, metadata !DIExpression()), !dbg !9556
  %3 = ptrtoint i32* %1 to i32, !dbg !9557
  %4 = and i32 %3, -2, !dbg !9557
  %5 = icmp eq i32 %4, 2, !dbg !9557
  br i1 %5, label %6, label %9, !dbg !9557

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9558
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9558
  br label %9, !dbg !9559

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9559
  ret i32 %10, !dbg !9560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32* %1, metadata !9564, metadata !DIExpression()), !dbg !9565
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9566
  ret i32 %3, !dbg !9567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9571, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.value(metadata i32* %1, metadata !9572, metadata !DIExpression()), !dbg !9573
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9574, !srcloc !9576
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9577
  ret i32 %3, !dbg !9578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9579 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9584, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i32* %1, metadata !9585, metadata !DIExpression()), !dbg !9588
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %3, metadata !9586, metadata !DIExpression()), !dbg !9588
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %4, metadata !9587, metadata !DIExpression()), !dbg !9588
  %5 = icmp ne i32 %3, %4, !dbg !9591
  %6 = sext i1 %5 to i32, !dbg !9592
  ret i32 %6, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9598, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %1, metadata !9599, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32 %2, metadata !9600, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.value(metadata i32* %3, metadata !9601, metadata !DIExpression()), !dbg !9602
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9603
  ret i32 %5, !dbg !9604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9605 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9607, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %1, metadata !9608, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32 %2, metadata !9609, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i32* %3, metadata !9610, metadata !DIExpression()), !dbg !9611
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9612, !srcloc !9614
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9615
  ret i32 %5, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9619, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %1, metadata !9620, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %2, metadata !9621, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32* %3, metadata !9622, metadata !DIExpression()), !dbg !9627
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9628
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9630
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9630
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9630
  br i1 %11, label %33, label %12, !dbg !9630

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9627
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9627
  call void @llvm.dbg.value(metadata i8* %14, metadata !9625, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %13, metadata !9623, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %1, metadata !9624, metadata !DIExpression()), !dbg !9627
  br label %15, !dbg !9631

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9633
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9627
  call void @llvm.dbg.value(metadata i8* %17, metadata !9625, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.value(metadata i32 %16, metadata !9624, metadata !DIExpression()), !dbg !9627
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9634
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9637
  call void @llvm.dbg.value(metadata i8* %19, metadata !9625, metadata !DIExpression()), !dbg !9627
  %20 = load i8, i8* %17, align 1, !dbg !9638
  %21 = zext i8 %20 to i32, !dbg !9639
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9634
  %23 = icmp eq i32 %22, -1, !dbg !9640
  br i1 %23, label %30, label %24, !dbg !9641

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %25, metadata !9624, metadata !DIExpression()), !dbg !9627
  %26 = icmp eq i32 %25, 0, !dbg !9643
  br i1 %26, label %27, label %15, !dbg !9644, !llvm.loop !9645

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %28, metadata !9623, metadata !DIExpression()), !dbg !9627
  %29 = icmp eq i32 %28, 0, !dbg !9648
  br i1 %29, label %30, label %12, !dbg !9649, !llvm.loop !9650

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9627
  call void @llvm.dbg.value(metadata i32 %31, metadata !9623, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.label(metadata !9626), !dbg !9653
  %32 = sub i32 %2, %31, !dbg !9654
  br label %33, !dbg !9655

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9627
  ret i32 %34, !dbg !9656
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9661, metadata !DIExpression()), !dbg !9662
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9663
  %3 = icmp eq i32 %2, -1, !dbg !9665
  br i1 %3, label %8, label %4, !dbg !9666

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9667
  %6 = icmp eq i32 %5, -1, !dbg !9668
  %7 = sext i1 %6 to i32, !dbg !9667
  br label %8, !dbg !9669

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9662
  ret i32 %9, !dbg !9670
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9671 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9673, metadata !DIExpression()), !dbg !9674
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9675
  ret void, !dbg !9676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9681, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.value(metadata i32 %1, metadata !9682, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9683, metadata !DIExpression()), !dbg !9687
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9688
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9688
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9688
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9684, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.value(metadata i32 %0, metadata !9686, metadata !DIExpression()), !dbg !9687
  %7 = icmp slt i32 %0, %1, !dbg !9689
  br i1 %7, label %8, label %22, !dbg !9692

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9686, metadata !DIExpression()), !dbg !9687
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9693
  %11 = icmp eq i32 %10, 0, !dbg !9693
  br i1 %11, label %19, label %12, !dbg !9696

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9697
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9699
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9699
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9701
  br i1 %15, label %19, label %16, !dbg !9702

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9703
  %18 = load i8*, i8** %17, align 4, !dbg !9703
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9704
  br label %19, !dbg !9705

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %20, metadata !9686, metadata !DIExpression()), !dbg !9687
  %21 = icmp eq i32 %20, %1, !dbg !9689
  br i1 %21, label %22, label %8, !dbg !9692, !llvm.loop !9707

22:                                               ; preds = %19, %3
  ret void, !dbg !9709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9712, metadata !DIExpression()), !dbg !9713
  %2 = shl nuw i32 1, %0, !dbg !9714
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9717
  ret i32 %3, !dbg !9718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #18 !dbg !9719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9723, metadata !DIExpression()), !dbg !9724
  %2 = shl nuw i32 1, %0, !dbg !9725
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9728
  ret void, !dbg !9729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9733, metadata !DIExpression()), !dbg !9734
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9735
  ret void, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9739, metadata !DIExpression()), !dbg !9740
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9741
  %3 = and i32 %2, %0, !dbg !9741
  %4 = icmp eq i32 %3, %0, !dbg !9742
  %5 = zext i1 %4 to i32, !dbg !9742
  ret i32 %5, !dbg !9743
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9746, metadata !DIExpression()), !dbg !9747
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9752, metadata !DIExpression()), !dbg !9753
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9758, metadata !DIExpression()), !dbg !9759
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9760
  ret void, !dbg !9761
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #28, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9771
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #28, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9776, metadata !DIExpression()), !dbg !9777
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9778
  ret void, !dbg !9779
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9782, metadata !DIExpression()), !dbg !9783
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #28, !dbg !9784
  ret void, !dbg !9785
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9788, metadata !DIExpression()), !dbg !9789
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #28, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9794, metadata !DIExpression()), !dbg !9795
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9800, metadata !DIExpression()), !dbg !9801
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9802
  ret void, !dbg !9803
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9804 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9806, metadata !DIExpression()), !dbg !9807
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9808
  ret i32 0, !dbg !9809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !899 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !903, metadata !DIExpression()), !dbg !9810
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9811
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9813
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9815
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9817
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9819
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9821
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9823
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9825
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9827
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9829
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9831
  ret void, !dbg !9833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9836, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 0, metadata !9837, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 undef, metadata !9837, metadata !DIExpression()), !dbg !9838
  %2 = lshr i32 6684671, %0, !dbg !9839
  %3 = and i32 %2, 1, !dbg !9839
  %4 = or i32 %3, %0, !dbg !9841
  %5 = icmp eq i32 %4, 0, !dbg !9841
  br i1 %5, label %6, label %7, !dbg !9841

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9842
  unreachable, !dbg !9842

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9847
  %9 = load i32, i32* %8, align 4, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %9, metadata !9837, metadata !DIExpression()), !dbg !9838
  %10 = shl nuw i32 1, %0, !dbg !9848
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #28, !dbg !9849
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !9850
  ret void, !dbg !9851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9854, metadata !DIExpression()), !dbg !9855
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9856
  %3 = or i32 %2, %0, !dbg !9856
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9856
  ret void, !dbg !9857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #18 !dbg !9858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9860, metadata !DIExpression()), !dbg !9861
  %2 = icmp slt i32 %0, 32, !dbg !9862
  br i1 %2, label %3, label %5, !dbg !9864

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9865
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9867
  br label %5, !dbg !9868

5:                                                ; preds = %1, %3
  ret void, !dbg !9869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9872, metadata !DIExpression()), !dbg !9873
  %2 = xor i32 %0, -1, !dbg !9874
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9874
  %4 = and i32 %3, %2, !dbg !9874
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !9876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9880, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 %1, metadata !9881, metadata !DIExpression()), !dbg !9882
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9883

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9884
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9886
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9887
  br label %11, !dbg !9888

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9889
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9890
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9891
  br label %11, !dbg !9892

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9893
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9894
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9895
  br label %11, !dbg !9896

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9897
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9898
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9899
  br label %11, !dbg !9900

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9904, metadata !DIExpression()), !dbg !9905
  %2 = xor i32 %0, -1, !dbg !9906
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9906
  %4 = and i32 %3, %2, !dbg !9906
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9906
  ret void, !dbg !9907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9910, metadata !DIExpression()), !dbg !9911
  %2 = xor i32 %0, -1, !dbg !9912
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9912
  %4 = and i32 %3, %2, !dbg !9912
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9912
  ret void, !dbg !9913
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9916, metadata !DIExpression()), !dbg !9917
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9918
  %3 = or i32 %2, %0, !dbg !9918
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9918
  ret void, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9922, metadata !DIExpression()), !dbg !9923
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9924
  %3 = or i32 %2, %0, !dbg !9924
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9924
  ret void, !dbg !9925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9926 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9930, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9931, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i8* %2, metadata !9932, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9933, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9935, metadata !DIExpression()), !dbg !9936
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9937
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9937
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9939
  br i1 %6, label %7, label %9, !dbg !9940

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9941
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9942
  store i8* %2, i8** %8, align 4, !dbg !9943
  br label %9, !dbg !9944

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9936
  ret i32 %10, !dbg !9945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !9946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9948, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !9949, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9950, metadata !DIExpression()), !dbg !9951
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9952
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9953
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9954
  store i8* null, i8** %3, align 4, !dbg !9955
  ret void, !dbg !9956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9957 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9959, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %1, metadata !9960, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %1, metadata !9961, metadata !DIExpression()), !dbg !9964
  %3 = bitcast i8* %1 to i32*, !dbg !9965
  %4 = load i32, i32* %3, align 4, !dbg !9965
  %5 = add i32 %4, -169, !dbg !9965
  %6 = icmp ult i32 %5, -121, !dbg !9965
  br i1 %6, label %15, label %7, !dbg !9967

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9968
  %9 = inttoptr i32 %8 to i32*, !dbg !9969
  call void @llvm.dbg.value(metadata i32* %9, metadata !9962, metadata !DIExpression()), !dbg !9964
  %10 = load volatile i32, i32* %9, align 4, !dbg !9970
  call void @llvm.dbg.value(metadata i32 %10, metadata !9963, metadata !DIExpression()), !dbg !9964
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9971
  %12 = bitcast i8* %11 to i32*, !dbg !9971
  %13 = load i32, i32* %12, align 4, !dbg !9971
  %14 = or i32 %13, %10, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %14, metadata !9963, metadata !DIExpression()), !dbg !9964
  store volatile i32 %14, i32* %9, align 4, !dbg !9973
  br label %15, !dbg !9974

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9964
  ret i32 %16, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9978, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i8* %1, metadata !9979, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.value(metadata i8* %1, metadata !9980, metadata !DIExpression()), !dbg !9983
  %3 = bitcast i8* %1 to i32*, !dbg !9984
  %4 = load i32, i32* %3, align 4, !dbg !9984
  %5 = add i32 %4, -169, !dbg !9984
  %6 = icmp ult i32 %5, -121, !dbg !9984
  br i1 %6, label %16, label %7, !dbg !9986

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9987
  %9 = inttoptr i32 %8 to i32*, !dbg !9988
  call void @llvm.dbg.value(metadata i32* %9, metadata !9981, metadata !DIExpression()), !dbg !9983
  %10 = load volatile i32, i32* %9, align 4, !dbg !9989
  call void @llvm.dbg.value(metadata i32 %10, metadata !9982, metadata !DIExpression()), !dbg !9983
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9990
  %12 = bitcast i8* %11 to i32*, !dbg !9990
  %13 = load i32, i32* %12, align 4, !dbg !9990
  %14 = xor i32 %13, -1, !dbg !9991
  %15 = and i32 %10, %14, !dbg !9992
  call void @llvm.dbg.value(metadata i32 %15, metadata !9982, metadata !DIExpression()), !dbg !9983
  store volatile i32 %15, i32* %9, align 4, !dbg !9993
  br label %16, !dbg !9994

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9983
  ret i32 %17, !dbg !9995
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9998, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %1, metadata !9999, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32* %2, metadata !10000, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i8* %1, metadata !10001, metadata !DIExpression()), !dbg !10006
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %4, metadata !10002, metadata !DIExpression()), !dbg !10006
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #28, !dbg !10008
  call void @llvm.dbg.value(metadata i32 %5, metadata !10003, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %5, metadata !10004, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %4, metadata !10005, metadata !DIExpression()), !dbg !10006
  %6 = bitcast i8* %1 to i32*, !dbg !10009
  %7 = load i32, i32* %6, align 4, !dbg !10009
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !10010

8:                                                ; preds = %3
  br label %18, !dbg !10011

9:                                                ; preds = %3
  br label %18, !dbg !10013

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10014
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #28, !dbg !10015
  br label %18, !dbg !10016

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10017
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #28, !dbg !10018
  br label %18, !dbg !10019

16:                                               ; preds = %3
  br label %18, !dbg !10020

17:                                               ; preds = %3
  br label %18, !dbg !10021

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !10022
  br label %20, !dbg !10023

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !10006
  ret i32 %21, !dbg !10023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #18 !dbg !10024 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %1, metadata !10027, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %2, metadata !10028, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.value(metadata i8* %1, metadata !10029, metadata !DIExpression()), !dbg !10034
  %4 = bitcast i8* %1 to i32*, !dbg !10035
  %5 = load i32, i32* %4, align 4, !dbg !10035
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !10036
  call void @llvm.dbg.value(metadata i32 %6, metadata !10033, metadata !DIExpression()), !dbg !10034
  %7 = icmp slt i32 %6, 0, !dbg !10037
  br i1 %7, label %22, label %8, !dbg !10039

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10029, metadata !DIExpression()), !dbg !10034
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10040
  %10 = bitcast i8* %9 to i32*, !dbg !10040
  %11 = load i32, i32* %10, align 4, !dbg !10040
  %12 = lshr i32 %11, 16, !dbg !10040
  %13 = and i32 %12, 7, !dbg !10040
  %14 = lshr i32 %11, 8, !dbg !10041
  %15 = and i32 %14, 31, !dbg !10041
  %16 = shl i32 %13, %15, !dbg !10042
  call void @llvm.dbg.value(metadata i32 %16, metadata !10032, metadata !DIExpression()), !dbg !10034
  %17 = and i32 %11, 255, !dbg !10043
  %18 = or i32 %17, 1073887232, !dbg !10044
  %19 = inttoptr i32 %18 to i32*, !dbg !10045
  call void @llvm.dbg.value(metadata i32* %19, metadata !10030, metadata !DIExpression()), !dbg !10034
  %20 = load volatile i32, i32* %19, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i32 %20, metadata !10031, metadata !DIExpression()), !dbg !10034
  %21 = or i32 %16, %20, !dbg !10047
  call void @llvm.dbg.value(metadata i32 %21, metadata !10031, metadata !DIExpression()), !dbg !10034
  store volatile i32 %21, i32* %19, align 4, !dbg !10048
  br label %22, !dbg !10049

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10034
  ret i32 %23, !dbg !10050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10055, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.value(metadata i32 0, metadata !10056, metadata !DIExpression()), !dbg !10057
  %2 = add i32 %0, -1, !dbg !10058
  %3 = icmp ult i32 %2, 6, !dbg !10058
  br i1 %3, label %4, label %7, !dbg !10058

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10058
  %6 = load i32, i32* %5, align 4, !dbg !10058
  call void @llvm.dbg.value(metadata i32 %6, metadata !10056, metadata !DIExpression()), !dbg !10057
  br label %7, !dbg !10059

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10057
  ret i32 %8, !dbg !10060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #5 !dbg !10061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10065, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i32 2, metadata !10066, metadata !DIExpression()), !dbg !10067
  %2 = lshr i32 %0, 1, !dbg !10068
  ret i32 %2, !dbg !10069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 8, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 84, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %1, metadata !10077, metadata !DIExpression()), !dbg !10078
  %3 = mul i32 %0, 84, !dbg !10079
  %4 = shl nsw i32 %1, 3, !dbg !10080
  %5 = udiv i32 %3, %4, !dbg !10081
  ret i32 %5, !dbg !10082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10085, metadata !DIExpression()), !dbg !10088
  tail call void @config_enable_default_clocks() #27, !dbg !10089
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10090
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10090
  %4 = lshr i32 %3, 4, !dbg !10090
  %5 = and i32 %4, 15, !dbg !10090
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10090
  %7 = load i8, i8* %6, align 1, !dbg !10090
  %8 = zext i8 %7 to i32, !dbg !10090
  %9 = lshr i32 %2, %8, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %9, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10087, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10088
  %10 = icmp ult i32 %9, 84000000, !dbg !10091
  br i1 %10, label %11, label %13, !dbg !10093

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10094
  br label %13, !dbg !10096

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10097
  tail call fastcc void @set_up_plls() #28, !dbg !10098
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10099
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #28, !dbg !10102
  br label %14, !dbg !10103

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10104
  %16 = icmp eq i32 %15, 8, !dbg !10105
  br i1 %16, label %17, label %14, !dbg !10103, !llvm.loop !10106

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10108
  br i1 %18, label %19, label %21, !dbg !10110

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10111
  br label %21, !dbg !10113

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10114
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10115
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10116
  ret i32 0, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10120
  %2 = and i32 %1, 240, !dbg !10120
  ret i32 %2, !dbg !10121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #18 !dbg !10122 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !10123
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !10128
  br label %1, !dbg !10129

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !10130
  %3 = icmp eq i32 %2, 1, !dbg !10131
  br i1 %3, label %4, label %1, !dbg !10129, !llvm.loop !10132

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10134
  br label %5, !dbg !10137

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10138
  %7 = icmp eq i32 %6, 1, !dbg !10139
  br i1 %7, label %8, label %5, !dbg !10137, !llvm.loop !10140

8:                                                ; preds = %5
  ret void, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10143 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10144
  %2 = icmp eq i32 %1, 8, !dbg !10146
  br i1 %2, label %3, label %4, !dbg !10147

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10148
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10150
  br label %4, !dbg !10151

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10152
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10153
  %6 = and i32 %5, -196609, !dbg !10153
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10153
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10154
  %8 = and i32 %7, -251658241, !dbg !10154
  %9 = or i32 %8, 134217728, !dbg !10154
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10154
  tail call void @config_pll_sysclock() #27, !dbg !10155
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10156
  br label %10, !dbg !10157

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10158
  %12 = icmp eq i32 %11, 1, !dbg !10159
  br i1 %12, label %13, label %10, !dbg !10157, !llvm.loop !10160

13:                                               ; preds = %10
  ret void, !dbg !10162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #18 !dbg !10163 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10165, metadata !DIExpression()), !dbg !10166
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10167
  %2 = and i32 %1, -241, !dbg !10167
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10167
  ret void, !dbg !10168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #18 !dbg !10169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10172
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10173
  %3 = and i32 %2, -4, !dbg !10173
  %4 = or i32 %3, %0, !dbg !10173
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10173
  ret void, !dbg !10174
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10176
  %2 = and i32 %1, 12, !dbg !10176
  ret i32 %2, !dbg !10177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #18 !dbg !10178 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10180, metadata !DIExpression()), !dbg !10181
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10182
  %2 = and i32 %1, -7169, !dbg !10182
  %3 = or i32 %2, 4096, !dbg !10182
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #18 !dbg !10184 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10186, metadata !DIExpression()), !dbg !10187
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10188
  %2 = and i32 %1, -57345, !dbg !10188
  %3 = or i32 %2, 32768, !dbg !10188
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #18 !dbg !10190 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10191
  %2 = icmp eq i32 %1, 1, !dbg !10193
  br i1 %2, label %7, label %3, !dbg !10194

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10195
  br label %4, !dbg !10197

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10198
  %6 = icmp eq i32 %5, 1, !dbg !10199
  br i1 %6, label %7, label %4, !dbg !10197, !llvm.loop !10200

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #28, !dbg !10202
  br label %8, !dbg !10203

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10204
  %10 = icmp eq i32 %9, 0, !dbg !10205
  br i1 %10, label %11, label %8, !dbg !10203, !llvm.loop !10206

11:                                               ; preds = %8
  ret void, !dbg !10208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #18 !dbg !10209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10210
  %2 = and i32 %1, -16777217, !dbg !10210
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10210
  ret void, !dbg !10211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #18 !dbg !10212 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10213
  %2 = or i32 %1, 16777216, !dbg !10213
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10215 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10216
  %2 = lshr i32 %1, 25, !dbg !10217
  %3 = and i32 %2, 1, !dbg !10217
  ret i32 %3, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10220
  %2 = lshr i32 %1, 1, !dbg !10221
  %3 = and i32 %2, 1, !dbg !10221
  ret i32 %3, !dbg !10222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #18 !dbg !10223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10224
  %2 = or i32 %1, 1, !dbg !10224
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10224
  ret void, !dbg !10225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #18 !dbg !10226 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10227
  %2 = and i32 %1, -262145, !dbg !10227
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10227
  ret void, !dbg !10228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #18 !dbg !10229 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10230
  %2 = or i32 %1, 65536, !dbg !10230
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10230
  ret void, !dbg !10231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !10232 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10233
  %2 = lshr i32 %1, 17, !dbg !10234
  %3 = and i32 %2, 1, !dbg !10234
  ret i32 %3, !dbg !10235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #18 !dbg !10236 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10237
  %2 = or i32 %1, 1, !dbg !10237
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10239 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10240
  %2 = lshr i32 %1, 1, !dbg !10241
  %3 = and i32 %2, 1, !dbg !10241
  ret i32 %3, !dbg !10242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10243 {
  ret i32 16000000, !dbg !10245
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #18 !dbg !10249 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #18 !dbg !10252 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10256, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 8, metadata !10257, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 84, metadata !10258, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.value(metadata i32 0, metadata !10259, metadata !DIExpression()), !dbg !10260
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %2 = and i32 %1, -4227072, !dbg !10261
  %3 = or i32 %2, 4199688, !dbg !10261
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10261
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10262
  %5 = and i32 %4, -196609, !dbg !10262
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10262
  ret void, !dbg !10263
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10264 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !10265
  ret void, !dbg !10266
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10267 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10270, metadata !DIExpression()), !dbg !10272
  %2 = bitcast i32* %1 to i8*, !dbg !10273
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10273
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10271, metadata !DIExpression()), !dbg !10274
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10275
  %4 = or i32 %3, 268435456, !dbg !10275
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10275
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10276
  %6 = and i32 %5, 268435456, !dbg !10276
  store volatile i32 %6, i32* %1, align 4, !dbg !10277
  %7 = load volatile i32, i32* %1, align 4, !dbg !10278
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10279
  ret void, !dbg !10279
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10282, metadata !DIExpression()), !dbg !10283
  %2 = tail call fastcc zeroext i1 @device_is_ready() #28, !dbg !10284
  br i1 %2, label %3, label %4, !dbg !10286

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10287
  br label %4, !dbg !10288

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10283
  ret i32 %5, !dbg !10289
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10290 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10295, metadata !DIExpression()), !dbg !10296
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10297, !srcloc !10299
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #28, !dbg !10300
  ret i1 %1, !dbg !10301
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10302 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10303
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10308, metadata !DIExpression()), !dbg !10309
  %2 = icmp eq i32 %0, 10, !dbg !10310
  br i1 %2, label %3, label %4, !dbg !10312

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10313
  br label %4, !dbg !10315

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10316
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10317
  ret i32 %0, !dbg !10318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10322, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i8 %0, metadata !10323, metadata !DIExpression()), !dbg !10324
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10325, !srcloc !10327
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10328
  ret void, !dbg !10329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i8 %0, metadata !10333, metadata !DIExpression()), !dbg !10335
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10336
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10334, metadata !DIExpression()), !dbg !10335
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10337
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10337
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10342, metadata !DIExpression()), !dbg !10343
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !10344
  ret i1 %1, !dbg !10345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10395, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10396, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10397, metadata !DIExpression()), !dbg !10398
  ret void, !dbg !10399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10400 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10402, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i8 %1, metadata !10403, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i32 %2, metadata !10404, metadata !DIExpression()), !dbg !10407
  %5 = bitcast i32* %4 to i8*, !dbg !10408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10408
  call void @llvm.dbg.value(metadata i32* %4, metadata !10406, metadata !DIExpression(DW_OP_deref)), !dbg !10407
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %6, metadata !10405, metadata !DIExpression()), !dbg !10407
  %7 = icmp eq i32 %6, 0, !dbg !10410
  br i1 %7, label %8, label %31, !dbg !10412

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10405, metadata !DIExpression()), !dbg !10407
  %9 = and i32 %2, 131072, !dbg !10413
  %10 = icmp eq i32 %9, 0, !dbg !10415
  br i1 %10, label %28, label %11, !dbg !10416

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10417
  %13 = icmp eq i32 %12, 0, !dbg !10420
  br i1 %13, label %18, label %14, !dbg !10421

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10422
  %16 = shl nuw i32 1, %15, !dbg !10422
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10424
  br label %25, !dbg !10425

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10426
  %20 = icmp eq i32 %19, 0, !dbg !10428
  %21 = zext i8 %1 to i32, !dbg !10407
  br i1 %20, label %25, label %22, !dbg !10429

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10430
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10432
  br label %25, !dbg !10433

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10434
  %27 = load i32, i32* %4, align 4, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %30, metadata !10406, metadata !DIExpression()), !dbg !10407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10436
  br label %31, !dbg !10437

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10434
  %30 = load i32, i32* %4, align 4, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %30, metadata !10406, metadata !DIExpression()), !dbg !10407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10436
  call void @llvm.dbg.value(metadata i32 0, metadata !10405, metadata !DIExpression()), !dbg !10407
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10438
  ret i32 %6, !dbg !10438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10443, metadata !DIExpression()), !dbg !10448
  call void @llvm.dbg.value(metadata i32* %1, metadata !10444, metadata !DIExpression()), !dbg !10448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10449
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10449
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10449
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10445, metadata !DIExpression()), !dbg !10448
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10450
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10450
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10447, metadata !DIExpression()), !dbg !10448
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10451
  store i32 %9, i32* %1, align 4, !dbg !10452
  ret i32 0, !dbg !10453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10456, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10457, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 %2, metadata !10458, metadata !DIExpression()), !dbg !10462
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10463
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10463
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10463
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10459, metadata !DIExpression()), !dbg !10462
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10464
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10464
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10464
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10460, metadata !DIExpression()), !dbg !10462
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %10, metadata !10461, metadata !DIExpression()), !dbg !10462
  %11 = xor i32 %1, -1, !dbg !10466
  %12 = and i32 %10, %11, !dbg !10467
  %13 = and i32 %2, %1, !dbg !10468
  %14 = or i32 %12, %13, !dbg !10469
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10470
  ret i32 0, !dbg !10471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 %1, metadata !10475, metadata !DIExpression()), !dbg !10478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10479
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10479
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10479
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10476, metadata !DIExpression()), !dbg !10478
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10480
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10480
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10480
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10477, metadata !DIExpression()), !dbg !10478
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10481
  store volatile i32 %1, i32* %9, align 4, !dbg !10481
  ret i32 0, !dbg !10482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10485, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10486, metadata !DIExpression()), !dbg !10489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10490
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10490
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10490
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10487, metadata !DIExpression()), !dbg !10489
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10491
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10491
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10491
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10488, metadata !DIExpression()), !dbg !10489
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10492
  ret i32 0, !dbg !10493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10496, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i32 %1, metadata !10497, metadata !DIExpression()), !dbg !10500
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10501
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10501
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10498, metadata !DIExpression()), !dbg !10500
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10502
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10502
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10502
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10499, metadata !DIExpression()), !dbg !10500
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10503
  %10 = load volatile i32, i32* %9, align 4, !dbg !10503
  %11 = xor i32 %10, %1, !dbg !10503
  store volatile i32 %11, i32* %9, align 4, !dbg !10503
  ret i32 0, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i8 %1, metadata !10508, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 %3, metadata !10510, metadata !DIExpression()), !dbg !10517
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10518
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10518
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10518
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10511, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i8* undef, metadata !10512, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10514, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.value(metadata i32 0, metadata !10515, metadata !DIExpression()), !dbg !10517
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10519

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10520
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10524
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10525
  %12 = load i32, i32* %11, align 4, !dbg !10525
  %13 = icmp eq i32 %10, %12, !dbg !10526
  br i1 %13, label %14, label %29, !dbg !10527

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10528
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10530
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10531
  br label %29, !dbg !10532

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10533
  %17 = load i8*, i8** %16, align 4, !dbg !10533
  call void @llvm.dbg.value(metadata i8* %17, metadata !10512, metadata !DIExpression()), !dbg !10517
  %18 = zext i8 %1 to i32, !dbg !10534
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10536
  %20 = icmp eq i32 %19, 0, !dbg !10537
  br i1 %20, label %21, label %29, !dbg !10538

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10539
  %23 = load i32, i32* %22, align 4, !dbg !10539
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10540
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10541

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10542

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10544

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10514, metadata !DIExpression()), !dbg !10517
  br label %27, !dbg !10545

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10517
  call void @llvm.dbg.value(metadata i32 %28, metadata !10514, metadata !DIExpression()), !dbg !10517
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10546
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10547
  br label %29, !dbg !10547

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10517
  call void @llvm.dbg.value(metadata i32 %30, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.label(metadata !10516), !dbg !10548
  ret i32 %30, !dbg !10549
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10552, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10553, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.value(metadata i1 %2, metadata !10554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10556
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10557
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10557
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10555, metadata !DIExpression()), !dbg !10556
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10558
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10559
  ret i32 %8, !dbg !10560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10561 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10567, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10568, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i1 %2, metadata !10569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10570
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10571
  br i1 %4, label %5, label %6, !dbg !10574

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.153, i32 0, i32 0)) #27, !dbg !10575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10575
  unreachable, !dbg !10575

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10577
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10577
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10577
  br i1 %9, label %10, label %11, !dbg !10580

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10581
  unreachable, !dbg !10581

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10583
  br i1 %12, label %18, label %13, !dbg !10585

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10586
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10589
  %16 = or i1 %15, %2, !dbg !10590
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10590
  br i1 %2, label %19, label %21, !dbg !10590

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10591

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10592
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10595
  br label %21, !dbg !10596

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10570
  ret i32 %22, !dbg !10597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10602, metadata !DIExpression()), !dbg !10603
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10604
  %3 = icmp eq %struct._snode* %2, null, !dbg !10604
  ret i1 %3, !dbg !10604
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10605 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10609, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10610, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10614
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %4 = icmp eq %struct._snode* %3, null, !dbg !10616
  br i1 %4, label %15, label %5, !dbg !10614

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10611, metadata !DIExpression()), !dbg !10613
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10618
  br i1 %6, label %9, label %11, !dbg !10621

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10611, metadata !DIExpression()), !dbg !10613
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10618
  br i1 %8, label %9, label %11, !dbg !10621, !llvm.loop !10622

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10623
  br label %15, !dbg !10623

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10612, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10611, metadata !DIExpression()), !dbg !10613
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10616
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10612, metadata !DIExpression()), !dbg !10613
  %14 = icmp eq %struct._snode* %13, null, !dbg !10616
  br i1 %14, label %15, label %7, !dbg !10614, !llvm.loop !10622

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10626 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10630, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10631, metadata !DIExpression()), !dbg !10632
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10633
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10633
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10633
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10634
  %5 = icmp eq %struct._snode* %4, null, !dbg !10634
  br i1 %5, label %6, label %8, !dbg !10633

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10636
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10636
  br label %8, !dbg !10636

8:                                                ; preds = %6, %2
  ret void, !dbg !10633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10638 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10644
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10644
  ret %struct._snode* %3, !dbg !10645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10650, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10651, metadata !DIExpression()), !dbg !10652
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10653
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10654
  ret void, !dbg !10655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10656 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10659, metadata !DIExpression()), !dbg !10660
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10661
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10662
  ret void, !dbg !10663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10666, metadata !DIExpression()), !dbg !10667
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10668
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10668
  ret %struct._snode* %3, !dbg !10669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10670 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10672, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10673, metadata !DIExpression()), !dbg !10674
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10675
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10676
  ret void, !dbg !10677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10678 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10682, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10683, metadata !DIExpression()), !dbg !10685
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10684, metadata !DIExpression()), !dbg !10685
  %4 = icmp eq %struct._snode* %1, null, !dbg !10686
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10688
  br i1 %4, label %6, label %11, !dbg !10689

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10690
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10692
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10692
  br i1 %8, label %9, label %15, !dbg !10690

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10694
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10694
  br label %15, !dbg !10694

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10696
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10698
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10698
  br i1 %13, label %14, label %15, !dbg !10696

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10700
  br label %15, !dbg !10700

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10689
  ret void, !dbg !10689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10702 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10706, metadata !DIExpression()), !dbg !10707
  %2 = icmp eq %struct._snode* %0, null, !dbg !10708
  br i1 %2, label %5, label %3, !dbg !10708

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10708
  br label %5, !dbg !10708

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10708
  ret %struct._snode* %6, !dbg !10708
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10709 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10711, metadata !DIExpression()), !dbg !10712
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10713
  ret %struct._snode* %2, !dbg !10713
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10714 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10716, metadata !DIExpression()), !dbg !10717
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10718
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10718
  ret %struct._snode* %3, !dbg !10719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10722, metadata !DIExpression()), !dbg !10725
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10726, !range !10727
  call void @llvm.dbg.value(metadata i32 %2, metadata !10723, metadata !DIExpression()), !dbg !10725
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10728
  call void @llvm.dbg.value(metadata i32 %3, metadata !10724, metadata !DIExpression()), !dbg !10725
  ret i32 %3, !dbg !10729
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10732, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8* %1, metadata !10733, metadata !DIExpression()), !dbg !10735
  call void @llvm.dbg.value(metadata i8* %1, metadata !10734, metadata !DIExpression()), !dbg !10735
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10736
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10736
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10737
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10737
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10737
  %8 = shl nuw i32 1, %0, !dbg !10738
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10739
  ret void, !dbg !10740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10741 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10745, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 %1, metadata !10746, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10747, metadata !DIExpression()), !dbg !10751
  %4 = bitcast i64* %3 to i8*, !dbg !10752
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10752
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10749, metadata !DIExpression()), !dbg !10751
  store i64 70368744177732, i64* %3, align 8, !dbg !10753
  call void @llvm.dbg.value(metadata i64* %3, metadata !10749, metadata !DIExpression(DW_OP_deref)), !dbg !10751
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10754
  call void @llvm.dbg.value(metadata i32 %5, metadata !10750, metadata !DIExpression()), !dbg !10751
  %6 = icmp eq i32 %5, 0, !dbg !10755
  br i1 %6, label %7, label %8, !dbg !10757

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10758
  br label %8, !dbg !10759

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10760
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10761 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10763, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i8* %0, metadata !10764, metadata !DIExpression()), !dbg !10766
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10767
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10765, metadata !DIExpression()), !dbg !10766
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10768
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10768
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10769
  ret i32 %5, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10773, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata i32 %1, metadata !10774, metadata !DIExpression()), !dbg !10776
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %3, metadata !10775, metadata !DIExpression()), !dbg !10776
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10784, metadata !DIExpression()), !dbg !10785
  %2 = sdiv i32 %0, 4, !dbg !10786
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10787
  %6 = add nsw i32 %5, 16, !dbg !10788
  %7 = shl i32 15, %6, !dbg !10789
  %8 = or i32 %7, %2, !dbg !10790
  ret i32 %8, !dbg !10791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10796, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.value(metadata i32 %1, metadata !10797, metadata !DIExpression()), !dbg !10798
  %3 = and i32 %1, 255, !dbg !10799
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10799
  %5 = load volatile i32, i32* %4, align 4, !dbg !10799
  %6 = lshr i32 %1, 16, !dbg !10799
  %7 = xor i32 %6, -1, !dbg !10799
  %8 = and i32 %5, %7, !dbg !10799
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !10804
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10806, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %9, metadata !10803, metadata !DIExpression()) #26, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %9, metadata !10808, metadata !DIExpression()) #26, !dbg !10813
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10815, !range !5400
  %11 = shl i32 %0, %10, !dbg !10799
  %12 = or i32 %11, %8, !dbg !10799
  store volatile i32 %12, i32* %4, align 4, !dbg !10799
  ret void, !dbg !10816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10817 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10821, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10822, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata i32 %2, metadata !10823, metadata !DIExpression()), !dbg !10826
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10827
  %5 = icmp eq %struct._snode* %4, null, !dbg !10827
  br i1 %5, label %24, label %6, !dbg !10827

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10829
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10825, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10824, metadata !DIExpression()), !dbg !10826
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10830
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10830
  %12 = load i32, i32* %11, align 4, !dbg !10830
  %13 = and i32 %12, %2, !dbg !10834
  %14 = icmp eq i32 %13, 0, !dbg !10834
  br i1 %14, label %22, label %15, !dbg !10835

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10836
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10836
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10836
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10836
  br i1 %19, label %20, label %21, !dbg !10840

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10841
  unreachable, !dbg !10841

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10843
  br label %22, !dbg !10844

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10824, metadata !DIExpression()), !dbg !10826
  %23 = icmp eq %struct._snode* %8, null, !dbg !10845
  br i1 %23, label %24, label %6, !dbg !10845

24:                                               ; preds = %22, %3
  ret void, !dbg !10846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10849, metadata !DIExpression()), !dbg !10850
  %2 = and i32 %0, 255, !dbg !10851
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10851
  %4 = load volatile i32, i32* %3, align 4, !dbg !10851
  %5 = lshr i32 %0, 16, !dbg !10851
  %6 = and i32 %4, %5, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %5, metadata !10800, metadata !DIExpression()) #26, !dbg !10852
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10854, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !10855
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10857, !range !5400
  %9 = lshr i32 %6, %8, !dbg !10858
  ret i32 %9, !dbg !10859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10860 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10865, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.value(metadata i32 %1, metadata !10866, metadata !DIExpression()), !dbg !10867
  %3 = shl i32 %1, 16, !dbg !10868
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10868
  store volatile i32 %3, i32* %4, align 4, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10874, metadata !DIExpression()), !dbg !10875
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10876
  %3 = load volatile i32, i32* %2, align 4, !dbg !10876
  ret i32 %3, !dbg !10877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10878 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i32 %1, metadata !10881, metadata !DIExpression()), !dbg !10882
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10883
  store volatile i32 %1, i32* %3, align 4, !dbg !10883
  ret void, !dbg !10884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10887, metadata !DIExpression()), !dbg !10888
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10889
  %3 = load volatile i32, i32* %2, align 4, !dbg !10889
  ret i32 %3, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10895, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.value(metadata i32* %1, metadata !10896, metadata !DIExpression()), !dbg !10897
  %3 = and i32 %0, 131072, !dbg !10898
  %4 = icmp eq i32 %3, 0, !dbg !10900
  br i1 %4, label %22, label %5, !dbg !10901

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10902
  %6 = and i32 %0, 2, !dbg !10904
  %7 = icmp eq i32 %6, 0, !dbg !10906
  br i1 %7, label %11, label %8, !dbg !10907

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10908
  %10 = icmp eq i32 %9, 0, !dbg !10908
  br i1 %10, label %33, label %11, !dbg !10911

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10912
  store i32 %12, i32* %1, align 4, !dbg !10912
  %13 = and i32 %0, 16, !dbg !10913
  %14 = icmp eq i32 %13, 0, !dbg !10915
  br i1 %14, label %17, label %15, !dbg !10916

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10917
  br label %31, !dbg !10919

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10920
  %19 = icmp eq i32 %18, 0, !dbg !10922
  br i1 %19, label %33, label %20, !dbg !10923

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10924
  br label %31, !dbg !10926

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10927
  %24 = icmp eq i32 %23, 0, !dbg !10929
  br i1 %24, label %31, label %25, !dbg !10930

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10931
  %27 = icmp eq i32 %26, 0, !dbg !10934
  br i1 %27, label %28, label %31, !dbg !10935

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10936
  br label %33, !dbg !10937

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10897
  ret i32 %34, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10942, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %1, metadata !10943, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10944, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %3, metadata !10945, metadata !DIExpression()), !dbg !10953
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10954
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10954
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10954
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10946, metadata !DIExpression()), !dbg !10953
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10955
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10955
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10947, metadata !DIExpression()), !dbg !10953
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %11, metadata !10948, metadata !DIExpression()), !dbg !10953
  %12 = and i32 %2, 48, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %12, metadata !10949, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10950, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10951, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10952, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10953
  %13 = lshr i32 %2, 6, !dbg !10958
  %14 = and i32 %13, 1, !dbg !10958
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !10959
  %15 = lshr i32 %2, 7, !dbg !10960
  %16 = and i32 %15, 3, !dbg !10960
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !10961
  %17 = lshr i32 %2, 9, !dbg !10962
  %18 = and i32 %17, 3, !dbg !10962
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !10963
  %19 = icmp eq i32 %12, 32, !dbg !10964
  br i1 %19, label %20, label %24, !dbg !10966

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10967
  br i1 %21, label %22, label %23, !dbg !10970

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10971
  br label %24, !dbg !10973

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10974
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10976
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !10977
  ret void, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10981, metadata !DIExpression()), !dbg !10983
  %2 = shl nuw i32 1, %0, !dbg !10984
  call void @llvm.dbg.value(metadata i32 %2, metadata !10982, metadata !DIExpression()), !dbg !10983
  ret i32 %2, !dbg !10985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !10986 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10990, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i32 %1, metadata !10991, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.value(metadata i32 %2, metadata !10992, metadata !DIExpression()), !dbg !10993
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10994
  %5 = load volatile i32, i32* %4, align 4, !dbg !10994
  %6 = xor i32 %1, -1, !dbg !10994
  %7 = and i32 %5, %6, !dbg !10994
  %8 = mul i32 %2, %1, !dbg !10994
  %9 = or i32 %7, %8, !dbg !10994
  store volatile i32 %9, i32* %4, align 4, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %1, metadata !10999, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.value(metadata i32 %2, metadata !11000, metadata !DIExpression()), !dbg !11001
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11002
  %5 = load volatile i32, i32* %4, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11003
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11005, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11006
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11008, !range !5400
  %8 = shl nuw nsw i32 %7, 1, !dbg !11002
  %9 = shl i32 3, %8, !dbg !11002
  %10 = xor i32 %9, -1, !dbg !11002
  %11 = and i32 %5, %10, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11011
  %12 = shl i32 %2, %8, !dbg !11002
  %13 = or i32 %11, %12, !dbg !11002
  store volatile i32 %13, i32* %4, align 4, !dbg !11002
  ret void, !dbg !11013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11014 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11016, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %1, metadata !11017, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.value(metadata i32 %2, metadata !11018, metadata !DIExpression()), !dbg !11019
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11020
  %5 = load volatile i32, i32* %4, align 4, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11021
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11023, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11021
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11024
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11026, !range !5400
  %8 = shl nuw nsw i32 %7, 1, !dbg !11020
  %9 = shl i32 3, %8, !dbg !11020
  %10 = xor i32 %9, -1, !dbg !11020
  %11 = and i32 %5, %10, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11029
  %12 = shl i32 %2, %8, !dbg !11020
  %13 = or i32 %11, %12, !dbg !11020
  store volatile i32 %13, i32* %4, align 4, !dbg !11020
  ret void, !dbg !11031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11032 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11034, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %1, metadata !11035, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.value(metadata i32 %2, metadata !11036, metadata !DIExpression()), !dbg !11037
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11038
  %5 = load volatile i32, i32* %4, align 4, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11039
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11041, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11042
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11044, !range !5400
  %8 = shl nuw nsw i32 %7, 2, !dbg !11038
  %9 = shl i32 15, %8, !dbg !11038
  %10 = xor i32 %9, -1, !dbg !11038
  %11 = and i32 %5, %10, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11047
  %12 = shl i32 %2, %8, !dbg !11038
  %13 = or i32 %11, %12, !dbg !11038
  store volatile i32 %13, i32* %4, align 4, !dbg !11038
  ret void, !dbg !11049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %1, metadata !11053, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11056
  %5 = load volatile i32, i32* %4, align 4, !dbg !11056
  %6 = lshr i32 %1, 8, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !11057
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11059, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !11060
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11062, !range !5400
  %9 = shl nuw nsw i32 %8, 2, !dbg !11056
  %10 = shl i32 15, %9, !dbg !11056
  %11 = xor i32 %10, -1, !dbg !11056
  %12 = and i32 %5, %11, !dbg !11056
  call void @llvm.dbg.value(metadata i32 %6, metadata !10800, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !10803, metadata !DIExpression()) #26, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %7, metadata !10808, metadata !DIExpression()) #26, !dbg !11065
  %13 = shl i32 %2, %9, !dbg !11056
  %14 = or i32 %12, %13, !dbg !11056
  store volatile i32 %14, i32* %4, align 4, !dbg !11056
  ret void, !dbg !11067
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11070, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %1, metadata !11071, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.value(metadata i32 %2, metadata !11072, metadata !DIExpression()), !dbg !11073
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11074
  %5 = load volatile i32, i32* %4, align 4, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11075
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11077, !srcloc !10807
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11078
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11080, !range !5400
  %8 = shl nuw nsw i32 %7, 1, !dbg !11074
  %9 = shl i32 3, %8, !dbg !11074
  %10 = xor i32 %9, -1, !dbg !11074
  %11 = and i32 %5, %10, !dbg !11074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10800, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %6, metadata !10803, metadata !DIExpression()) #26, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %6, metadata !10808, metadata !DIExpression()) #26, !dbg !11083
  %12 = shl i32 %2, %8, !dbg !11074
  %13 = or i32 %11, %12, !dbg !11074
  store volatile i32 %13, i32* %4, align 4, !dbg !11074
  ret void, !dbg !11085
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11088, metadata !DIExpression()), !dbg !11091
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11092
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11092
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11092
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11089, metadata !DIExpression()), !dbg !11091
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11093
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11094
  %6 = tail call fastcc zeroext i1 @device_is_ready.165() #28, !dbg !11095
  br i1 %6, label %7, label %11, !dbg !11097

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11098
  call void @llvm.dbg.value(metadata i32 %8, metadata !11090, metadata !DIExpression()), !dbg !11091
  %9 = icmp slt i32 %8, 0, !dbg !11099
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11101
  br label %11, !dbg !11101

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11091
  ret i32 %12, !dbg !11102
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.165() unnamed_addr #1 !dbg !11103 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11107, metadata !DIExpression()), !dbg !11108
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11109, !srcloc !11111
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.166() #28, !dbg !11112
  ret i1 %1, !dbg !11113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11118, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i8 1, metadata !11119, metadata !DIExpression()), !dbg !11123
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11124
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11124
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11124
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11120, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i32 0, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11122, metadata !DIExpression()), !dbg !11123
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11125
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11128
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %7, metadata !11121, metadata !DIExpression()), !dbg !11123
  ret i32 %7, !dbg !11130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.166() unnamed_addr #1 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11133, metadata !DIExpression()), !dbg !11134
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !11135
  ret i1 %1, !dbg !11136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11141, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %1, metadata !11142, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %2, metadata !11143, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 %3, metadata !11144, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.value(metadata i32 0, metadata !11145, metadata !DIExpression()), !dbg !11149
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11150
  %5 = icmp eq i32 %3, 17, !dbg !11151
  br i1 %5, label %6, label %14, !dbg !11152

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11153
  call void @llvm.dbg.value(metadata i32 %7, metadata !11146, metadata !DIExpression()), !dbg !11154
  %8 = icmp eq i32 %7, 0, !dbg !11155
  %9 = shl nuw i32 1, %1, !dbg !11157
  br i1 %8, label %12, label %10, !dbg !11158

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11159
  br label %14, !dbg !11161

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11162
  br label %14, !dbg !11165

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11166
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11169, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i8* %1, metadata !11170, metadata !DIExpression()), !dbg !11173
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11174
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11174
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11174
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11171, metadata !DIExpression()), !dbg !11173
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11175
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11175
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11177
  %9 = icmp eq i32 %8, 0, !dbg !11177
  br i1 %9, label %12, label %10, !dbg !11178

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11179
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11181
  br label %12, !dbg !11182

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11183
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11185
  %15 = icmp eq i32 %14, 0, !dbg !11185
  br i1 %15, label %19, label %16, !dbg !11186

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11187
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11188
  store i8 %18, i8* %1, align 1, !dbg !11189
  br label %19, !dbg !11190

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11173
  ret i32 %20, !dbg !11191
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11194, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i8 %1, metadata !11195, metadata !DIExpression()), !dbg !11198
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11199
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11199
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11199
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11196, metadata !DIExpression()), !dbg !11198
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11200

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11201
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11204
  %10 = icmp eq i32 %9, 0, !dbg !11204
  br i1 %10, label %18, label %11, !dbg !11205

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11206, !srcloc !11213
  call void @llvm.dbg.value(metadata i32 undef, metadata !11209, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 undef, metadata !11210, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 undef, metadata !11197, metadata !DIExpression()), !dbg !11198
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11215
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11217
  %15 = icmp eq i32 %14, 0, !dbg !11217
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11206
  br i1 %15, label %17, label %19, !dbg !11218

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11209, metadata !DIExpression()) #26, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %16, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.value(metadata i32 undef, metadata !11219, metadata !DIExpression()) #26, !dbg !11222
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11224, !srcloc !11225
  br label %18, !dbg !11226

18:                                               ; preds = %17, %7
  br label %7, !dbg !11201, !llvm.loop !11227

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11206
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11229
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %20, metadata !11219, metadata !DIExpression()) #26, !dbg !11231
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11233, !srcloc !11225
  ret void, !dbg !11234
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11237, metadata !DIExpression()), !dbg !11240
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11241
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11241
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11241
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11238, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.value(metadata i32 0, metadata !11239, metadata !DIExpression()), !dbg !11240
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11242
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11242
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11244
  %8 = icmp ne i32 %7, 0, !dbg !11244
  %9 = zext i1 %8 to i32, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %9, metadata !11239, metadata !DIExpression()), !dbg !11240
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11246
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11248
  %12 = icmp eq i32 %11, 0, !dbg !11248
  %13 = or i32 %9, 2, !dbg !11249
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11249
  call void @llvm.dbg.value(metadata i32 %14, metadata !11239, metadata !DIExpression()), !dbg !11240
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11250
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11252
  %17 = icmp eq i32 %16, 0, !dbg !11252
  %18 = or i32 %14, 4, !dbg !11253
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %19, metadata !11239, metadata !DIExpression()), !dbg !11240
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11254
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11256
  %22 = icmp eq i32 %21, 0, !dbg !11256
  %23 = or i32 %19, 8, !dbg !11257
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %24, metadata !11239, metadata !DIExpression()), !dbg !11240
  %25 = and i32 %24, 8, !dbg !11258
  %26 = icmp eq i32 %25, 0, !dbg !11258
  br i1 %26, label %29, label %27, !dbg !11260

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11261
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11263
  br label %29, !dbg !11264

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11265
  %31 = icmp eq i32 %30, 0, !dbg !11265
  br i1 %31, label %34, label %32, !dbg !11267

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11268
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11270
  br label %34, !dbg !11271

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11272
  %36 = icmp eq i32 %35, 0, !dbg !11272
  br i1 %36, label %39, label %37, !dbg !11274

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11275
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11277
  br label %39, !dbg !11278

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11279
  %41 = icmp eq i32 %40, 0, !dbg !11279
  br i1 %41, label %44, label %42, !dbg !11281

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11282
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11284
  br label %44, !dbg !11285

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11286
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11287
  ret i32 %24, !dbg !11288
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11289 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11291, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11292, metadata !DIExpression()), !dbg !11300
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11301
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11301
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11301
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11293, metadata !DIExpression()), !dbg !11300
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11302
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11302
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11302
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11294, metadata !DIExpression()), !dbg !11300
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11303
  %10 = load i8, i8* %9, align 4, !dbg !11303
  %11 = zext i8 %10 to i32, !dbg !11304
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11305
  call void @llvm.dbg.value(metadata i32 %12, metadata !11296, metadata !DIExpression()), !dbg !11300
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11306
  %14 = load i8, i8* %13, align 1, !dbg !11306
  %15 = zext i8 %14 to i32, !dbg !11307
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %16, metadata !11297, metadata !DIExpression()), !dbg !11300
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11309
  %18 = load i8, i8* %17, align 2, !dbg !11309
  %19 = zext i8 %18 to i32, !dbg !11310
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %20, metadata !11298, metadata !DIExpression()), !dbg !11300
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11312
  %22 = load i8, i8* %21, align 1, !dbg !11312
  %23 = zext i8 %22 to i32, !dbg !11313
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %24, metadata !11299, metadata !DIExpression()), !dbg !11300
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11315

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11317
  br i1 %26, label %69, label %27, !dbg !11319

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11320

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11321
  br i1 %29, label %65, label %30, !dbg !11321

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11323
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11300
  br i1 %31, label %38, label %34, !dbg !11325

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11326
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11326

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11329
  br i1 %37, label %38, label %69, !dbg !11330

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11331
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11332
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11333
  %41 = icmp eq i32 %12, %40, !dbg !11335
  br i1 %41, label %43, label %42, !dbg !11336

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11337
  br label %43, !dbg !11339

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11340
  %45 = icmp eq i32 %16, %44, !dbg !11342
  br i1 %45, label %47, label %46, !dbg !11343

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11344
  br label %47, !dbg !11346

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11347
  %49 = icmp eq i32 %20, %48, !dbg !11349
  br i1 %49, label %51, label %50, !dbg !11350

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11351
  br label %51, !dbg !11353

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11354
  %53 = icmp eq i32 %24, %52, !dbg !11356
  br i1 %53, label %55, label %54, !dbg !11357

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11358
  br label %55, !dbg !11360

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11361
  %57 = load i32, i32* %56, align 4, !dbg !11361
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11363
  %59 = load i32, i32* %58, align 4, !dbg !11363
  %60 = icmp eq i32 %57, %59, !dbg !11364
  br i1 %60, label %63, label %61, !dbg !11365

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11366
  %62 = load i32, i32* %56, align 4, !dbg !11368
  store i32 %62, i32* %58, align 4, !dbg !11369
  br label %63, !dbg !11370

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11371
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11372
  br label %69, !dbg !11373

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11321
  %67 = and i8 %66, 1, !dbg !11321
  %68 = icmp eq i8 %67, 0, !dbg !11321
  br i1 %68, label %30, label %69, !dbg !11321

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11300
  ret i32 %70, !dbg !11374
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11377, metadata !DIExpression()), !dbg !11380
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11378, metadata !DIExpression()), !dbg !11380
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11381
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11381
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11381
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11379, metadata !DIExpression()), !dbg !11380
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11382
  %7 = load i32, i32* %6, align 4, !dbg !11382
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11383
  store i32 %7, i32* %8, align 4, !dbg !11384
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11385, !range !11386
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11387
  %11 = trunc i32 %10 to i8, !dbg !11387
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11388
  store i8 %11, i8* %12, align 4, !dbg !11389
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11390, !range !11391
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11392
  %15 = trunc i32 %14 to i8, !dbg !11392
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11393
  store i8 %15, i8* %16, align 1, !dbg !11394
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11395
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11396, !range !11386
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11397
  %20 = trunc i32 %19 to i8, !dbg !11397
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11398
  store i8 %20, i8* %21, align 2, !dbg !11399
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11400, !range !11401
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11402
  %24 = trunc i32 %23 to i8, !dbg !11402
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11403
  store i8 %24, i8* %25, align 1, !dbg !11404
  ret i32 0, !dbg !11405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11410, metadata !DIExpression()), !dbg !11412
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11413
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11413
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11413
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11411, metadata !DIExpression()), !dbg !11412
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11414
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11414
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11415
  ret i32 %7, !dbg !11416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11421, metadata !DIExpression()), !dbg !11422
  %2 = icmp eq i32 %0, 1024, !dbg !11423
  %3 = select i1 %2, i32 2, i32 0, !dbg !11423
  %4 = icmp eq i32 %0, 1536, !dbg !11423
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11423
  ret i32 %5, !dbg !11424
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11425 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11427, metadata !DIExpression()), !dbg !11429
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11430
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11430
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11430
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11428, metadata !DIExpression()), !dbg !11429
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11431
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11431
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11432
  ret i32 %7, !dbg !11433
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11439
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11440
  %3 = icmp ult i32 %2, 4, !dbg !11440
  br i1 %3, label %4, label %7, !dbg !11440

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11440
  %6 = load i32, i32* %5, align 4, !dbg !11440
  br label %7, !dbg !11440

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11441
  ret i32 %8, !dbg !11443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11446, metadata !DIExpression()), !dbg !11448
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11449
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11449
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11449
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11447, metadata !DIExpression()), !dbg !11448
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11450
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11450
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11451
  ret i32 %7, !dbg !11452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.value(metadata i32 %1, metadata !11458, metadata !DIExpression()), !dbg !11459
  %3 = icmp eq i32 %0, 4096, !dbg !11460
  %4 = icmp eq i32 %1, 0, !dbg !11460
  %5 = select i1 %4, i32 4, i32 3, !dbg !11460
  %6 = select i1 %4, i32 3, i32 2, !dbg !11460
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11460
  ret i32 %7, !dbg !11461
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11464, metadata !DIExpression()), !dbg !11466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11467
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11467
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11465, metadata !DIExpression()), !dbg !11466
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11468
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11468
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11469
  ret i32 %7, !dbg !11470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  %2 = icmp eq i32 %0, 768, !dbg !11477
  %3 = zext i1 %2 to i32, !dbg !11476
  ret i32 %3, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11480 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11485, metadata !DIExpression()), !dbg !11486
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11487
  %3 = load volatile i32, i32* %2, align 4, !dbg !11487
  %4 = and i32 %3, 768, !dbg !11487
  ret i32 %4, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11493
  %3 = load volatile i32, i32* %2, align 4, !dbg !11493
  %4 = and i32 %3, 4096, !dbg !11493
  ret i32 %4, !dbg !11494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11497, metadata !DIExpression()), !dbg !11498
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11499
  %3 = load volatile i32, i32* %2, align 4, !dbg !11499
  %4 = and i32 %3, 12288, !dbg !11499
  ret i32 %4, !dbg !11500
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11501 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11503, metadata !DIExpression()), !dbg !11504
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11505
  %3 = load volatile i32, i32* %2, align 4, !dbg !11505
  %4 = and i32 %3, 1536, !dbg !11505
  ret i32 %4, !dbg !11506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11511, metadata !DIExpression()), !dbg !11512
  %2 = icmp eq i32 %0, 2, !dbg !11513
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11513
  %4 = icmp eq i32 %0, 1, !dbg !11513
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11513
  ret i32 %5, !dbg !11514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11519, metadata !DIExpression()), !dbg !11520
  %2 = icmp ult i32 %0, 3, !dbg !11521
  br i1 %2, label %3, label %6, !dbg !11521

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11521
  %5 = load i32, i32* %4, align 4, !dbg !11521
  br label %6, !dbg !11521

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11522
  ret i32 %7, !dbg !11524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11529, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.value(metadata i32 %1, metadata !11530, metadata !DIExpression()), !dbg !11531
  %3 = icmp eq i32 %0, 4, !dbg !11532
  %4 = icmp eq i32 %1, 0, !dbg !11532
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11532
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11532
  ret i32 %6, !dbg !11533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11538, metadata !DIExpression()), !dbg !11539
  %2 = icmp eq i32 %0, 1, !dbg !11540
  %3 = select i1 %2, i32 768, i32 0, !dbg !11539
  ret i32 %3, !dbg !11542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11543 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11547, metadata !DIExpression()), !dbg !11548
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11549
  %3 = load volatile i32, i32* %2, align 4, !dbg !11549
  %4 = and i32 %3, -8193, !dbg !11549
  store volatile i32 %4, i32* %2, align 4, !dbg !11549
  ret void, !dbg !11550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11555, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.value(metadata i32 %1, metadata !11556, metadata !DIExpression()), !dbg !11558
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11559
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11559
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11559
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11557, metadata !DIExpression()), !dbg !11558
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11560
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11560
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11561
  ret void, !dbg !11562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11565, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.value(metadata i32 %1, metadata !11566, metadata !DIExpression()), !dbg !11568
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11569
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11569
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11569
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11567, metadata !DIExpression()), !dbg !11568
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11570
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11570
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11571
  ret void, !dbg !11572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11575, metadata !DIExpression()), !dbg !11578
  call void @llvm.dbg.value(metadata i32 %1, metadata !11576, metadata !DIExpression()), !dbg !11578
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11579
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11579
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11579
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11577, metadata !DIExpression()), !dbg !11578
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11580
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11580
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11585, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.value(metadata i32 %1, metadata !11586, metadata !DIExpression()), !dbg !11588
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11589
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11589
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11589
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11587, metadata !DIExpression()), !dbg !11588
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11590
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11590
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11593 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11595, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32 %1, metadata !11596, metadata !DIExpression()), !dbg !11600
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11601
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11601
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11601
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11597, metadata !DIExpression()), !dbg !11600
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11602
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11602
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11602
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11598, metadata !DIExpression()), !dbg !11600
  %10 = bitcast i32* %3 to i8*, !dbg !11603
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11603
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11604
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11604
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11608
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11608
  %15 = load i8*, i8** %14, align 4, !dbg !11608
  call void @llvm.dbg.value(metadata i32* %3, metadata !11599, metadata !DIExpression(DW_OP_deref)), !dbg !11600
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11609
  %17 = icmp slt i32 %16, 0, !dbg !11610
  br i1 %17, label %18, label %21, !dbg !11611

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11612
  %20 = zext i8 %19 to i32, !dbg !11612
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef %20) #27, !dbg !11612
  br label %31, !dbg !11618

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11619
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11619
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11620
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11621
  %25 = load i32, i32* %3, align 4, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %25, metadata !11599, metadata !DIExpression()), !dbg !11600
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11623
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11624
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11624
  %28 = load volatile i32, i32* %27, align 4, !dbg !11624
  %29 = icmp ugt i32 %28, 16, !dbg !11624
  br i1 %29, label %31, label %30, !dbg !11627

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11628
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.176, i32 0, i32 0)) #27, !dbg !11628
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11628
  unreachable, !dbg !11628

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11630
  ret void, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11633, metadata !DIExpression()), !dbg !11634
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11635
  %3 = load volatile i32, i32* %2, align 4, !dbg !11635
  %4 = or i32 %3, 8192, !dbg !11635
  store volatile i32 %4, i32* %2, align 4, !dbg !11635
  ret void, !dbg !11636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11639, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata i8* %1, metadata !11640, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata i32* %2, metadata !11641, metadata !DIExpression()), !dbg !11643
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11644
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11644
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11644
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11642, metadata !DIExpression()), !dbg !11643
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11645
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11645
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11647
  br i1 %9, label %12, label %10, !dbg !11648

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11649
  br label %12, !dbg !11650

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11643
  ret i32 %13, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef %0) unnamed_addr #5 !dbg !11652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11654, metadata !DIExpression()), !dbg !11655
  %2 = icmp eq i32 %0, 2, !dbg !11656
  %3 = select i1 %2, i8 87, i8 63, !dbg !11656
  %4 = icmp eq i32 %0, 1, !dbg !11656
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11656
  ret i8 %5, !dbg !11657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11658 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11662, metadata !DIExpression()), !dbg !11664
  call void @llvm.dbg.value(metadata i32 0, metadata !11663, metadata !DIExpression()), !dbg !11664
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11665
  %3 = load volatile i32, i32* %2, align 4, !dbg !11665
  %4 = and i32 %3, -32769, !dbg !11665
  store volatile i32 %4, i32* %2, align 4, !dbg !11665
  ret void, !dbg !11666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11667 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11671, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 %1, metadata !11672, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 0, metadata !11673, metadata !DIExpression()), !dbg !11675
  call void @llvm.dbg.value(metadata i32 %2, metadata !11674, metadata !DIExpression()), !dbg !11675
  %4 = zext i32 %1 to i64, !dbg !11676
  %5 = mul nuw nsw i64 %4, 25, !dbg !11676
  %6 = zext i32 %2 to i64, !dbg !11676
  %7 = shl nuw nsw i64 %6, 2, !dbg !11676
  %8 = udiv i64 %5, %7, !dbg !11676
  %9 = trunc i64 %8 to i32, !dbg !11676
  %10 = udiv i32 %9, 100, !dbg !11676
  %11 = shl nuw nsw i32 %10, 4, !dbg !11676
  %12 = mul i32 %10, -100, !dbg !11676
  %13 = add i32 %12, %9, !dbg !11676
  %14 = shl i32 %13, 4, !dbg !11676
  %15 = add i32 %14, 50, !dbg !11676
  %16 = udiv i32 %15, 100, !dbg !11676
  %17 = and i32 %16, 240, !dbg !11676
  %18 = add nuw nsw i32 %17, %11, !dbg !11676
  %19 = and i32 %16, 15, !dbg !11676
  %20 = and i32 %18, 65520, !dbg !11679
  %21 = or i32 %20, %19, !dbg !11679
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11680
  store volatile i32 %21, i32* %22, align 4, !dbg !11681
  ret void, !dbg !11682
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11687
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()), !dbg !11687
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11688
  %4 = load volatile i32, i32* %3, align 4, !dbg !11688
  %5 = and i32 %4, -769, !dbg !11688
  %6 = or i32 %5, %1, !dbg !11688
  store volatile i32 %6, i32* %3, align 4, !dbg !11688
  ret void, !dbg !11689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11692, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %1, metadata !11693, metadata !DIExpression()), !dbg !11694
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11695
  %4 = load volatile i32, i32* %3, align 4, !dbg !11695
  %5 = and i32 %4, -4097, !dbg !11695
  %6 = or i32 %5, %1, !dbg !11695
  store volatile i32 %6, i32* %3, align 4, !dbg !11695
  ret void, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11697 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11699, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.value(metadata i32 %1, metadata !11700, metadata !DIExpression()), !dbg !11701
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11702
  %4 = load volatile i32, i32* %3, align 4, !dbg !11702
  %5 = and i32 %4, -12289, !dbg !11702
  %6 = or i32 %5, %1, !dbg !11702
  store volatile i32 %6, i32* %3, align 4, !dbg !11702
  ret void, !dbg !11703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11706, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.value(metadata i32 %1, metadata !11707, metadata !DIExpression()), !dbg !11708
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11709
  %4 = load volatile i32, i32* %3, align 4, !dbg !11709
  %5 = and i32 %4, -1537, !dbg !11709
  %6 = or i32 %5, %1, !dbg !11709
  store volatile i32 %6, i32* %3, align 4, !dbg !11709
  ret void, !dbg !11710
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11711 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11713, metadata !DIExpression()), !dbg !11714
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11715
  %3 = load volatile i32, i32* %2, align 4, !dbg !11715
  %4 = lshr i32 %3, 3, !dbg !11716
  %5 = and i32 %4, 1, !dbg !11716
  ret i32 %5, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11718 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11722
  %3 = load volatile i32, i32* %2, align 4, !dbg !11722
  %4 = and i32 %3, 1, !dbg !11722
  ret i32 %4, !dbg !11723
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11724 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11726, metadata !DIExpression()), !dbg !11727
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11728
  %3 = load volatile i32, i32* %2, align 4, !dbg !11728
  %4 = lshr i32 %3, 1, !dbg !11729
  %5 = and i32 %4, 1, !dbg !11729
  ret i32 %5, !dbg !11730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11731 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11735
  %3 = load volatile i32, i32* %2, align 4, !dbg !11735
  %4 = lshr i32 %3, 8, !dbg !11736
  %5 = and i32 %4, 1, !dbg !11736
  ret i32 %5, !dbg !11737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11738 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11741
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11742
  store volatile i32 -257, i32* %2, align 4, !dbg !11742
  ret void, !dbg !11743
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11744 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11746, metadata !DIExpression()), !dbg !11748
  %3 = bitcast i32* %2 to i8*, !dbg !11749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11749
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11747, metadata !DIExpression()), !dbg !11750
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11751
  %5 = load volatile i32, i32* %4, align 4, !dbg !11751
  store volatile i32 %5, i32* %2, align 4, !dbg !11752
  %6 = load volatile i32, i32* %2, align 4, !dbg !11753
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11754
  %8 = load volatile i32, i32* %7, align 4, !dbg !11754
  store volatile i32 %8, i32* %2, align 4, !dbg !11755
  %9 = load volatile i32, i32* %2, align 4, !dbg !11756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11757
  ret void, !dbg !11757
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11758 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11760, metadata !DIExpression()), !dbg !11762
  %3 = bitcast i32* %2 to i8*, !dbg !11763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11763
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11761, metadata !DIExpression()), !dbg !11764
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11765
  %5 = load volatile i32, i32* %4, align 4, !dbg !11765
  store volatile i32 %5, i32* %2, align 4, !dbg !11766
  %6 = load volatile i32, i32* %2, align 4, !dbg !11767
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11768
  %8 = load volatile i32, i32* %7, align 4, !dbg !11768
  store volatile i32 %8, i32* %2, align 4, !dbg !11769
  %9 = load volatile i32, i32* %2, align 4, !dbg !11770
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11771
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11772 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11774, metadata !DIExpression()), !dbg !11776
  %3 = bitcast i32* %2 to i8*, !dbg !11777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11777
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11775, metadata !DIExpression()), !dbg !11778
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11779
  %5 = load volatile i32, i32* %4, align 4, !dbg !11779
  store volatile i32 %5, i32* %2, align 4, !dbg !11780
  %6 = load volatile i32, i32* %2, align 4, !dbg !11781
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11782
  %8 = load volatile i32, i32* %7, align 4, !dbg !11782
  store volatile i32 %8, i32* %2, align 4, !dbg !11783
  %9 = load volatile i32, i32* %2, align 4, !dbg !11784
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11785
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11786 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11788, metadata !DIExpression()), !dbg !11790
  %3 = bitcast i32* %2 to i8*, !dbg !11791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11789, metadata !DIExpression()), !dbg !11792
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11793
  %5 = load volatile i32, i32* %4, align 4, !dbg !11793
  store volatile i32 %5, i32* %2, align 4, !dbg !11794
  %6 = load volatile i32, i32* %2, align 4, !dbg !11795
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11796
  %8 = load volatile i32, i32* %7, align 4, !dbg !11796
  store volatile i32 %8, i32* %2, align 4, !dbg !11797
  %9 = load volatile i32, i32* %2, align 4, !dbg !11798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11799
  ret void, !dbg !11799
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11800 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11802, metadata !DIExpression()), !dbg !11803
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11804
  %3 = load volatile i32, i32* %2, align 4, !dbg !11804
  %4 = lshr i32 %3, 7, !dbg !11805
  %5 = and i32 %4, 1, !dbg !11805
  ret i32 %5, !dbg !11806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !11807 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11811, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.value(metadata i8 %1, metadata !11812, metadata !DIExpression()), !dbg !11813
  %3 = zext i8 %1 to i32, !dbg !11814
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11815
  store volatile i32 %3, i32* %4, align 4, !dbg !11816
  ret void, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11820, metadata !DIExpression()), !dbg !11821
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11822
  %3 = load volatile i32, i32* %2, align 4, !dbg !11822
  %4 = lshr i32 %3, 5, !dbg !11823
  %5 = and i32 %4, 1, !dbg !11823
  ret i32 %5, !dbg !11824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11829, metadata !DIExpression()), !dbg !11830
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11831
  %3 = load volatile i32, i32* %2, align 4, !dbg !11831
  %4 = trunc i32 %3 to i8, !dbg !11832
  ret i8 %4, !dbg !11833
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11836, metadata !DIExpression()), !dbg !11842
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11843
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11843
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11843
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11837, metadata !DIExpression()), !dbg !11842
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11844
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11844
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11844
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11838, metadata !DIExpression()), !dbg !11842
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11845
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11846
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11846
  %10 = tail call fastcc zeroext i1 @device_is_ready.178(%struct.device* noundef %9) #28, !dbg !11848
  br i1 %10, label %14, label %11, !dbg !11849

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11850
  %13 = zext i8 %12 to i32, !dbg !11850
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.179, i32 0, i32 0), i32 noundef %13) #27, !dbg !11850
  br label %62, !dbg !11856

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11857
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11858
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11858
  %18 = load i8*, i8** %17, align 4, !dbg !11858
  %19 = tail call fastcc i32 @clock_control_on.180(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %19, metadata !11841, metadata !DIExpression()), !dbg !11842
  %20 = icmp eq i32 %19, 0, !dbg !11860
  br i1 %20, label %24, label %21, !dbg !11862

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11863
  %23 = zext i8 %22 to i32, !dbg !11863
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.181, i32 0, i32 0), i32 noundef %23) #27, !dbg !11863
  br label %62, !dbg !11869

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11870
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11870
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %27, metadata !11841, metadata !DIExpression()), !dbg !11842
  %28 = icmp slt i32 %27, 0, !dbg !11872
  br i1 %28, label %62, label %29, !dbg !11874

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11875
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11875
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11876
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11877
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11878
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11879
  %34 = load i32, i32* %33, align 4, !dbg !11879
  %35 = icmp ult i32 %34, 3, !dbg !11881
  br i1 %35, label %39, label %36, !dbg !11881

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 2) #28, !dbg !11882
  %38 = zext i8 %37 to i32, !dbg !11882
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.182, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11882
  call void @llvm.dbg.value(metadata i32 0, metadata !11839, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 0, metadata !11840, metadata !DIExpression()), !dbg !11842
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11881
  %41 = load i32, i32* %40, align 4, !dbg !11881
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11881
  %43 = load i32, i32* %42, align 4, !dbg !11881
  br label %44, !dbg !11881

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11891
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11891
  call void @llvm.dbg.value(metadata i32 %46, metadata !11840, metadata !DIExpression()), !dbg !11842
  call void @llvm.dbg.value(metadata i32 %45, metadata !11839, metadata !DIExpression()), !dbg !11842
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11892
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11893
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11894
  %49 = load i8, i8* %48, align 4, !dbg !11894, !range !8142
  %50 = icmp eq i8 %49, 0, !dbg !11894
  br i1 %50, label %52, label %51, !dbg !11896

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11897
  br label %52, !dbg !11899

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11900
  %54 = load i32, i32* %53, align 4, !dbg !11900
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11901
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11902
  %56 = load i8, i8* %55, align 4, !dbg !11902, !range !8142
  %57 = icmp eq i8 %56, 0, !dbg !11902
  br i1 %57, label %60, label %58, !dbg !11904

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11905
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11907
  br label %60, !dbg !11908

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11909
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11910
  br label %62, !dbg !11911

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11842
  ret i32 %63, !dbg !11912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11917, metadata !DIExpression()), !dbg !11921
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11922
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11922
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11922
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11918, metadata !DIExpression()), !dbg !11921
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11919, metadata !DIExpression()), !dbg !11921
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11923
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11924
  ret void, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178(%struct.device* noundef %0) unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11930, metadata !DIExpression()), !dbg !11931
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11932, !srcloc !11934
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.183(%struct.device* noundef %0) #28, !dbg !11935
  ret i1 %2, !dbg !11936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.180(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11937 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11939, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.value(metadata i8* %1, metadata !11940, metadata !DIExpression()), !dbg !11942
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11943
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11943
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11943
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11941, metadata !DIExpression()), !dbg !11942
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11944
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11944
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11945
  ret i32 %8, !dbg !11946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11947 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11951, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i8 0, metadata !11952, metadata !DIExpression()), !dbg !11955
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11956
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11956
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11954, metadata !DIExpression(DW_OP_deref)), !dbg !11955
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %4, metadata !11953, metadata !DIExpression()), !dbg !11955
  %5 = icmp slt i32 %4, 0, !dbg !11958
  br i1 %5, label %9, label %6, !dbg !11960

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11961
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11954, metadata !DIExpression()), !dbg !11955
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !11962
  br label %9, !dbg !11963

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11955
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11964
  ret i32 %10, !dbg !11964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11965 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11967, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i32 12, metadata !11968, metadata !DIExpression()), !dbg !11971
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11972

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11973, metadata !DIExpression()) #26, !dbg !11979
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !11982, !srcloc !11983
  call void @llvm.dbg.value(metadata i32 %4, metadata !11978, metadata !DIExpression()) #26, !dbg !11979
  %5 = or i32 %4, 12, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %5, metadata !11969, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 %5, metadata !11986, metadata !DIExpression()) #26, !dbg !11993
  call void @llvm.dbg.value(metadata i32* %2, metadata !11991, metadata !DIExpression()) #26, !dbg !11993
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !11995, !srcloc !11996
  call void @llvm.dbg.value(metadata i32 %6, metadata !11992, metadata !DIExpression()) #26, !dbg !11993
  %7 = icmp eq i32 %6, 0, !dbg !11972
  br i1 %7, label %8, label %3, !dbg !11984, !llvm.loop !11997

8:                                                ; preds = %3
  ret void, !dbg !11998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11999 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12001, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 %1, metadata !12002, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 %2, metadata !12003, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12006
  %5 = load volatile i32, i32* %4, align 4, !dbg !12006
  %6 = and i32 %5, -5633, !dbg !12006
  %7 = or i32 %2, %1, !dbg !12006
  %8 = or i32 %7, %6, !dbg !12006
  store volatile i32 %8, i32* %4, align 4, !dbg !12006
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12007
  %10 = load volatile i32, i32* %9, align 4, !dbg !12007
  %11 = and i32 %10, -12289, !dbg !12007
  store volatile i32 %11, i32* %9, align 4, !dbg !12007
  ret void, !dbg !12008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12009 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12011, metadata !DIExpression()), !dbg !12012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12013
  %3 = load volatile i32, i32* %2, align 4, !dbg !12013
  %4 = or i32 %3, 8, !dbg !12013
  store volatile i32 %4, i32* %2, align 4, !dbg !12013
  ret void, !dbg !12014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12015 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12019, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.value(metadata i32 0, metadata !12021, metadata !DIExpression()), !dbg !12022
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12023
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12023
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12024
  %5 = load i8, i8* %4, align 4, !dbg !12024
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12025
  ret i32 %6, !dbg !12026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.183(%struct.device* noundef %0) unnamed_addr #1 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12029, metadata !DIExpression()), !dbg !12030
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12031
  ret i1 %2, !dbg !12032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !12033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12035, metadata !DIExpression()), !dbg !12036
  tail call fastcc void @__NVIC_SetPriority.185() #28, !dbg !12037
  store i32 8399, i32* @last_load, align 4, !dbg !12038
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12039
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12040
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12041
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12042
  %3 = or i32 %2, 7, !dbg !12042
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12042
  ret i32 0, !dbg !12043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.185() unnamed_addr #18 !dbg !12044 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 1, metadata !12047, metadata !DIExpression()), !dbg !12048
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12049
  ret void, !dbg !12052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12053 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12055, metadata !DIExpression()), !dbg !12057
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12058
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12059
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12060
  %5 = add i32 %4, %3, !dbg !12060
  store i32 %5, i32* @cycle_count, align 4, !dbg !12060
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12061
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12062
  %7 = sub i32 %5, %6, !dbg !12065
  %8 = udiv i32 %7, 8400, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %8, metadata !12056, metadata !DIExpression()), !dbg !12057
  %9 = mul nuw i32 %8, 8400, !dbg !12067
  %10 = add i32 %9, %6, !dbg !12068
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12068
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12069
  tail call void @z_arm_int_exit() #27, !dbg !12070
  ret void, !dbg !12071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !12072 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12077
  call void @llvm.dbg.value(metadata i32 %1, metadata !12074, metadata !DIExpression()), !dbg !12078
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %2, metadata !12075, metadata !DIExpression()), !dbg !12078
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %3, metadata !12076, metadata !DIExpression()), !dbg !12078
  %4 = and i32 %2, 65536, !dbg !12081
  %5 = icmp ne i32 %4, 0, !dbg !12081
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12083
  %8 = load i32, i32* @last_load, align 4, !dbg !12078
  br i1 %7, label %9, label %13, !dbg !12083

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12084
  %11 = add i32 %10, %8, !dbg !12084
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12084
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12086
  br label %13, !dbg !12087

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12088
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12089
  %16 = add i32 %14, %15, !dbg !12090
  ret i32 %16, !dbg !12091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12096, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i1 %1, metadata !12097, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12109
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12110
  br i1 %4, label %5, label %8, !dbg !12110

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12112
  %7 = and i32 %6, -2, !dbg !12112
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12112
  store i32 -16777216, i32* @last_load, align 4, !dbg !12114
  br label %60, !dbg !12115

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12116
  call void @llvm.dbg.value(metadata i32 %9, metadata !12101, metadata !DIExpression()), !dbg !12109
  br i1 %3, label %18, label %10, !dbg !12117

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12117
  call void @llvm.dbg.value(metadata i32 undef, metadata !12096, metadata !DIExpression()), !dbg !12109
  %12 = icmp slt i32 %11, 1, !dbg !12118
  br i1 %12, label %18, label %13, !dbg !12118

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12118
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12118
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12118
  %17 = add nuw nsw i32 %16, 8399, !dbg !12118
  br label %18, !dbg !12118

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12096, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12126
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12128, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12126
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12136
  br i1 %21, label %23, label %22, !dbg !12139

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12140
  unreachable, !dbg !12140

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %24, metadata !12131, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %24, metadata !12125, metadata !DIExpression()) #26, !dbg !12126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %24, metadata !12102, metadata !DIExpression()), !dbg !12109
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %25, metadata !12107, metadata !DIExpression()), !dbg !12109
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %26, metadata !12099, metadata !DIExpression()), !dbg !12109
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12145
  %28 = add i32 %27, %25, !dbg !12145
  store i32 %28, i32* @cycle_count, align 4, !dbg !12145
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12146
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12147
  %30 = sub i32 %28, %29, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %30, metadata !12108, metadata !DIExpression()), !dbg !12109
  %31 = icmp slt i32 %30, 0, !dbg !12149
  br i1 %31, label %41, label %32, !dbg !12151

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i32 undef, metadata !12098, metadata !DIExpression()), !dbg !12109
  %33 = add nuw i32 %19, %30, !dbg !12152
  %34 = urem i32 %33, 8400, !dbg !12154
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12098, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12109
  %35 = sub nuw nsw i32 %19, %34, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %35, metadata !12098, metadata !DIExpression()), !dbg !12109
  %36 = icmp ugt i32 %35, 1024, !dbg !12156
  br i1 %36, label %37, label %39, !dbg !12156

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12098, metadata !DIExpression()), !dbg !12109
  %38 = icmp ugt i32 %35, 16766400, !dbg !12157
  br i1 %38, label %41, label %39, !dbg !12159

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12160
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %43, metadata !12100, metadata !DIExpression()), !dbg !12109
  %44 = add nsw i32 %42, -1, !dbg !12162
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12163
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12164
  %45 = icmp ult i32 %26, %43, !dbg !12165
  br i1 %45, label %46, label %51, !dbg !12167

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12168
  %48 = add i32 %26, %9, !dbg !12170
  %49 = sub i32 %48, %43, !dbg !12171
  %50 = add i32 %49, %47, !dbg !12168
  br label %55, !dbg !12172

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12173
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12175
  %54 = add i32 %52, %53, !dbg !12175
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12176
  store i32 %56, i32* @cycle_count, align 4, !dbg !12176
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12183
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12185
  br i1 %57, label %59, label %58, !dbg !12188

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12189
  unreachable, !dbg !12189

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12177, metadata !DIExpression()) #26, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %24, metadata !12191, metadata !DIExpression()) #26, !dbg !12194
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12196, !srcloc !12197
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12199 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12203
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12205, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12208
  br i1 %2, label %4, label %3, !dbg !12209

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12210
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12210
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12210
  unreachable, !dbg !12210

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12211
  call void @llvm.dbg.value(metadata i32 undef, metadata !12201, metadata !DIExpression()), !dbg !12212
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12213
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12214
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12215
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12216
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12218
  br i1 %8, label %10, label %9, !dbg !12219

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12220
  unreachable, !dbg !12220

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12221
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12202, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12212
  %12 = sub i32 %11, %7, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %12, metadata !12202, metadata !DIExpression()), !dbg !12212
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12205
  call void @llvm.dbg.value(metadata i32 %13, metadata !12131, metadata !DIExpression()) #26, !dbg !12207
  call void @llvm.dbg.value(metadata i32 %13, metadata !12125, metadata !DIExpression()) #26, !dbg !12203
  call void @llvm.dbg.value(metadata i32 %13, metadata !12201, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12216
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12225, !srcloc !12197
  %14 = udiv i32 %12, 8400, !dbg !12226
  ret i32 %14, !dbg !12227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12119, metadata !DIExpression()) #26, !dbg !12232
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12234, !srcloc !12134
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12132, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12237
  br i1 %2, label %4, label %3, !dbg !12238

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12239
  unreachable, !dbg !12239

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12240
  call void @llvm.dbg.value(metadata i32 undef, metadata !12230, metadata !DIExpression()), !dbg !12241
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12242
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12243
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12231, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12182, metadata !DIExpression()) #26, !dbg !12244
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12246
  br i1 %7, label %9, label %8, !dbg !12247

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12248
  unreachable, !dbg !12248

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12249
  call void @llvm.dbg.value(metadata i32 %10, metadata !12231, metadata !DIExpression()), !dbg !12241
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %11, metadata !12131, metadata !DIExpression()) #26, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %11, metadata !12125, metadata !DIExpression()) #26, !dbg !12232
  call void @llvm.dbg.value(metadata i32 %11, metadata !12230, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !12177, metadata !DIExpression()) #26, !dbg !12244
  call void @llvm.dbg.value(metadata i32 undef, metadata !12191, metadata !DIExpression()) #26, !dbg !12250
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12252, !srcloc !12197
  ret i32 %10, !dbg !12253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !12254 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12255
  %2 = icmp eq i32 %1, -16777216, !dbg !12257
  br i1 %2, label %3, label %6, !dbg !12258

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12259
  %5 = or i32 %4, 1, !dbg !12259
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12259
  br label %6, !dbg !12261

6:                                                ; preds = %3, %0
  ret void, !dbg !12262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !12263 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12264
  %2 = and i32 %1, -2, !dbg !12264
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12264
  ret void, !dbg !12265
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12266 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12292, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata i8 %1, metadata !12293, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12294, metadata !DIExpression()), !dbg !12295
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12296
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12296
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12295
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12297
  %8 = load i8, i8* %6, align 4, !dbg !12298
  %9 = zext i8 %8 to i32, !dbg !12299
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12299
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12300
  br i1 %11, label %18, label %24, !dbg !12301

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12295
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12297
  %14 = load i8, i8* %6, align 4, !dbg !12298
  %15 = zext i8 %14 to i32, !dbg !12299
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12299
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12300
  br i1 %17, label %18, label %24, !dbg !12301, !llvm.loop !12302

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12304
  %21 = load i8, i8* %20, align 1, !dbg !12304
  %22 = icmp eq i8 %21, %1, !dbg !12307
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12308
  br i1 %22, label %24, label %12, !dbg !12309

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12295
  ret i32 %25, !dbg !12310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12311 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12322, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i8 %1, metadata !12323, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 %2, metadata !12324, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12327, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i32 0, metadata !12328, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.value(metadata i8 0, metadata !12329, metadata !DIExpression()), !dbg !12339
  %4 = icmp eq i8 %1, 0, !dbg !12340
  br i1 %4, label %35, label %5, !dbg !12341

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12340
  br label %9, !dbg !12341

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12329, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata i32 %29, metadata !12327, metadata !DIExpression()), !dbg !12338
  %8 = icmp eq i32 %34, %6, !dbg !12340
  br i1 %8, label %35, label %9, !dbg !12341, !llvm.loop !12342

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12329, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.value(metadata i32 %11, metadata !12327, metadata !DIExpression()), !dbg !12338
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12344
  %13 = load i32, i32* %12, align 4, !dbg !12344
  call void @llvm.dbg.value(metadata i32 %13, metadata !12326, metadata !DIExpression()), !dbg !12338
  %14 = and i32 %13, 31, !dbg !12345
  %15 = icmp ult i32 %14, 16, !dbg !12346
  br i1 %15, label %16, label %20, !dbg !12347

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12348
  %18 = load i32, i32* %17, align 4, !dbg !12348
  %19 = or i32 %18, 32, !dbg !12350
  call void @llvm.dbg.value(metadata i32 %19, metadata !12327, metadata !DIExpression()), !dbg !12338
  br label %28, !dbg !12351

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12352

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12353
  %23 = load i32, i32* %22, align 4, !dbg !12353
  call void @llvm.dbg.value(metadata i32 %23, metadata !12331, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12354
  %24 = lshr i32 %23, 7, !dbg !12355
  %25 = and i32 %24, 16, !dbg !12355
  %26 = or i32 %25, %23, !dbg !12355
  call void @llvm.dbg.value(metadata i32 %26, metadata !12327, metadata !DIExpression()), !dbg !12338
  br label %28, !dbg !12356

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12338
  call void @llvm.dbg.value(metadata i32 %29, metadata !12327, metadata !DIExpression()), !dbg !12338
  %30 = lshr i32 %13, 5, !dbg !12357
  %31 = and i32 %30, 255, !dbg !12357
  call void @llvm.dbg.value(metadata i32 %31, metadata !12325, metadata !DIExpression()), !dbg !12338
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12358
  call void @llvm.dbg.value(metadata i32 %32, metadata !12328, metadata !DIExpression()), !dbg !12338
  %33 = icmp slt i32 %32, 0, !dbg !12359
  %34 = add nuw nsw i32 %10, 1, !dbg !12361
  call void @llvm.dbg.value(metadata i32 %34, metadata !12329, metadata !DIExpression()), !dbg !12339
  br i1 %33, label %35, label %7, !dbg !12362

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12368, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i32 %1, metadata !12369, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i32 %2, metadata !12370, metadata !DIExpression()), !dbg !12372
  %4 = icmp ugt i32 %0, 175, !dbg !12373
  br i1 %4, label %16, label %5, !dbg !12375

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12376
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12377
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12377
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12371, metadata !DIExpression()), !dbg !12372
  %9 = add nsw i32 %6, -8, !dbg !12378
  %10 = icmp ult i32 %9, 3, !dbg !12378
  br i1 %10, label %16, label %11, !dbg !12380

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.198(%struct.device* noundef %8) #28, !dbg !12381
  br i1 %12, label %13, label %16, !dbg !12382

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12383
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12384
  br label %16, !dbg !12385

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12372
  ret i32 %17, !dbg !12386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.198(%struct.device* noundef %0) unnamed_addr #1 !dbg !12387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12391, metadata !DIExpression()), !dbg !12392
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12393, !srcloc !12395
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) #28, !dbg !12396
  ret i1 %2, !dbg !12397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !12398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12400, metadata !DIExpression()), !dbg !12401
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12402
  ret i1 %2, !dbg !12403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12404 {
  ret void, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12406 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12408, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 0, metadata !12409, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 2, metadata !12410, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 0, metadata !12411, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 2, metadata !12412, metadata !DIExpression()), !dbg !12413
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12414
  %2 = and i32 %1, 12, !dbg !12415
  call void @llvm.dbg.value(metadata i32 %2, metadata !12408, metadata !DIExpression()), !dbg !12413
  %3 = icmp eq i32 %2, 8, !dbg !12416
  br i1 %3, label %4, label %18, !dbg !12416

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %5, metadata !12411, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12413
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12419
  %7 = and i32 %6, 63, !dbg !12420
  call void @llvm.dbg.value(metadata i32 %7, metadata !12412, metadata !DIExpression()), !dbg !12413
  %8 = udiv i32 16000000, %7, !dbg !12421
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12421
  %10 = lshr i32 %9, 6, !dbg !12421
  %11 = and i32 %10, 511, !dbg !12421
  %12 = mul i32 %11, %8, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %12, metadata !12409, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 %12, metadata !12409, metadata !DIExpression()), !dbg !12413
  call void @llvm.dbg.value(metadata i32 %12, metadata !12409, metadata !DIExpression()), !dbg !12413
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12423
  %14 = lshr i32 %13, 15, !dbg !12424
  %15 = and i32 %14, 6, !dbg !12424
  %16 = add nuw nsw i32 %15, 2, !dbg !12424
  call void @llvm.dbg.value(metadata i32 %16, metadata !12410, metadata !DIExpression()), !dbg !12413
  %17 = udiv i32 %12, %16, !dbg !12425
  br label %18, !dbg !12426

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !12427
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12428
  %21 = lshr i32 %20, 4, !dbg !12429
  %22 = and i32 %21, 15, !dbg !12429
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !12430
  %24 = load i8, i8* %23, align 1, !dbg !12430
  %25 = zext i8 %24 to i32, !dbg !12430
  call void @llvm.dbg.value(metadata i32 %25, metadata !12408, metadata !DIExpression()), !dbg !12413
  %26 = lshr i32 %19, %25, !dbg !12431
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !12431
  ret void, !dbg !12432
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12433 {
  ret i32 0, !dbg !12438
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12439 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12466, metadata !DIExpression()), !dbg !12477
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12478
  br i1 %3, label %317, label %4, !dbg !12480

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12481
  %6 = load i32, i32* %5, align 4, !dbg !12481
  %7 = and i32 %6, 1, !dbg !12483
  %8 = icmp eq i32 %7, 0, !dbg !12484
  br i1 %8, label %66, label %9, !dbg !12485

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12486
  %11 = and i32 %10, 12, !dbg !12486
  %12 = icmp eq i32 %11, 4, !dbg !12489
  br i1 %12, label %21, label %13, !dbg !12490

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12491
  %15 = and i32 %14, 12, !dbg !12491
  %16 = icmp eq i32 %15, 8, !dbg !12492
  br i1 %16, label %17, label %29, !dbg !12493

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12494
  %19 = and i32 %18, 4194304, !dbg !12495
  %20 = icmp eq i32 %19, 0, !dbg !12496
  br i1 %20, label %29, label %21, !dbg !12497

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12498
  %23 = and i32 %22, 131072, !dbg !12498
  %24 = icmp eq i32 %23, 0, !dbg !12498
  br i1 %24, label %66, label %25, !dbg !12501

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12502
  %27 = load i32, i32* %26, align 4, !dbg !12502
  %28 = icmp eq i32 %27, 0, !dbg !12503
  br i1 %28, label %317, label %66, !dbg !12504

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12505
  %31 = load i32, i32* %30, align 4, !dbg !12505
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12509

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12510
  %34 = or i32 %33, 65536, !dbg !12510
  br label %45, !dbg !12510

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12512
  %37 = or i32 %36, 262144, !dbg !12512
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12512
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12512
  %39 = or i32 %38, 65536, !dbg !12512
  br label %45, !dbg !12512

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12515
  %42 = and i32 %41, -65537, !dbg !12515
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12515
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12515
  %44 = and i32 %43, -262145, !dbg !12515
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12517
  %47 = load i32, i32* %30, align 4, !dbg !12518
  %48 = icmp eq i32 %47, 0, !dbg !12520
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12521
  call void @llvm.dbg.value(metadata i32 %49, metadata !12467, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %49, metadata !12467, metadata !DIExpression()), !dbg !12477
  br i1 %48, label %58, label %50, !dbg !12522

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12523
  %52 = and i32 %51, 131072, !dbg !12525
  %53 = icmp eq i32 %52, 0, !dbg !12525
  br i1 %53, label %54, label %66, !dbg !12526

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12527
  %56 = sub i32 %55, %49, !dbg !12530
  %57 = icmp ugt i32 %56, 100, !dbg !12531
  br i1 %57, label %317, label %50, !dbg !12532, !llvm.loop !12533

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12535
  %60 = and i32 %59, 131072, !dbg !12535
  %61 = icmp eq i32 %60, 0, !dbg !12535
  br i1 %61, label %66, label %62, !dbg !12537

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12538
  %64 = sub i32 %63, %49, !dbg !12541
  %65 = icmp ugt i32 %64, 100, !dbg !12542
  br i1 %65, label %317, label %58, !dbg !12543, !llvm.loop !12544

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12546
  %68 = and i32 %67, 2, !dbg !12548
  %69 = icmp eq i32 %68, 0, !dbg !12549
  br i1 %69, label %121, label %70, !dbg !12550

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12551
  %72 = and i32 %71, 12, !dbg !12551
  %73 = icmp eq i32 %72, 0, !dbg !12554
  br i1 %73, label %82, label %74, !dbg !12555

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12556
  %76 = and i32 %75, 12, !dbg !12556
  %77 = icmp eq i32 %76, 8, !dbg !12557
  br i1 %77, label %78, label %90, !dbg !12558

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12559
  %80 = and i32 %79, 4194304, !dbg !12560
  %81 = icmp eq i32 %80, 0, !dbg !12561
  br i1 %81, label %82, label %90, !dbg !12562

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12563
  %84 = and i32 %83, 2, !dbg !12563
  %85 = icmp eq i32 %84, 0, !dbg !12563
  br i1 %85, label %114, label %86, !dbg !12566

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12567
  %88 = load i32, i32* %87, align 4, !dbg !12567
  %89 = icmp eq i32 %88, 1, !dbg !12568
  br i1 %89, label %114, label %317, !dbg !12569

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12570
  %92 = load i32, i32* %91, align 4, !dbg !12570
  %93 = icmp eq i32 %92, 0, !dbg !12573
  br i1 %93, label %104, label %94, !dbg !12574

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12575
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12577
  call void @llvm.dbg.value(metadata i32 %95, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %96, !dbg !12578

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12579
  %98 = and i32 %97, 2, !dbg !12580
  %99 = icmp eq i32 %98, 0, !dbg !12580
  br i1 %99, label %100, label %114, !dbg !12578

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12581
  %102 = sub i32 %101, %95, !dbg !12584
  %103 = icmp ugt i32 %102, 2, !dbg !12585
  br i1 %103, label %317, label %96, !dbg !12586, !llvm.loop !12587

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12589
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %105, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %106, !dbg !12592

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12593
  %108 = and i32 %107, 2, !dbg !12593
  %109 = icmp eq i32 %108, 0, !dbg !12593
  br i1 %109, label %121, label %110, !dbg !12592

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12594
  %112 = sub i32 %111, %105, !dbg !12597
  %113 = icmp ugt i32 %112, 2, !dbg !12598
  br i1 %113, label %317, label %106, !dbg !12599, !llvm.loop !12600

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12602
  %116 = and i32 %115, -249, !dbg !12602
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12602
  %118 = load i32, i32* %117, align 4, !dbg !12602
  %119 = shl i32 %118, 3, !dbg !12602
  %120 = or i32 %119, %116, !dbg !12602
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12602
  br label %121, !dbg !12603

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12603
  %123 = and i32 %122, 8, !dbg !12605
  %124 = icmp eq i32 %123, 0, !dbg !12606
  br i1 %124, label %149, label %125, !dbg !12607

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12608
  %127 = load i32, i32* %126, align 4, !dbg !12608
  %128 = icmp eq i32 %127, 0, !dbg !12611
  br i1 %128, label %139, label %129, !dbg !12612

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12613
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %130, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %131, !dbg !12616

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12617
  %133 = and i32 %132, 2, !dbg !12618
  %134 = icmp eq i32 %133, 0, !dbg !12618
  br i1 %134, label %135, label %149, !dbg !12616

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12619
  %137 = sub i32 %136, %130, !dbg !12622
  %138 = icmp ugt i32 %137, 2, !dbg !12623
  br i1 %138, label %317, label %131, !dbg !12624, !llvm.loop !12625

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12627
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12629
  call void @llvm.dbg.value(metadata i32 %140, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %141, !dbg !12630

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12631
  %143 = and i32 %142, 2, !dbg !12631
  %144 = icmp eq i32 %143, 0, !dbg !12631
  br i1 %144, label %149, label %145, !dbg !12630

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12632
  %147 = sub i32 %146, %140, !dbg !12635
  %148 = icmp ugt i32 %147, 2, !dbg !12636
  br i1 %148, label %317, label %141, !dbg !12637, !llvm.loop !12638

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12640
  %151 = and i32 %150, 4, !dbg !12641
  %152 = icmp eq i32 %151, 0, !dbg !12642
  br i1 %152, label %221, label %153, !dbg !12643

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12469, metadata !DIExpression()), !dbg !12644
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12645
  %155 = and i32 %154, 268435456, !dbg !12645
  %156 = icmp eq i32 %155, 0, !dbg !12645
  br i1 %156, label %157, label %164, !dbg !12646

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12647
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12647
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12473, metadata !DIExpression()), !dbg !12647
  store volatile i32 0, i32* %2, align 4, !dbg !12647
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12647
  %160 = or i32 %159, 268435456, !dbg !12647
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12647
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12647
  %162 = and i32 %161, 268435456, !dbg !12647
  store volatile i32 %162, i32* %2, align 4, !dbg !12647
  %163 = load volatile i32, i32* %2, align 4, !dbg !12647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12648
  call void @llvm.dbg.value(metadata i32 1, metadata !12469, metadata !DIExpression()), !dbg !12644
  br label %164, !dbg !12649

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12469, metadata !DIExpression()), !dbg !12644
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12650
  %166 = and i32 %165, 256, !dbg !12650
  %167 = icmp eq i32 %166, 0, !dbg !12650
  br i1 %167, label %168, label %180, !dbg !12652

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12653
  %170 = or i32 %169, 256, !dbg !12653
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12653
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12655
  call void @llvm.dbg.value(metadata i32 %171, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %172, !dbg !12656

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12657
  %174 = and i32 %173, 256, !dbg !12657
  %175 = icmp eq i32 %174, 0, !dbg !12657
  br i1 %175, label %176, label %180, !dbg !12656

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12658
  %178 = sub i32 %177, %171, !dbg !12661
  %179 = icmp ugt i32 %178, 2, !dbg !12662
  br i1 %179, label %317, label %172, !dbg !12663, !llvm.loop !12664

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12666
  %182 = load i32, i32* %181, align 4, !dbg !12666
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12669

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12670
  %185 = or i32 %184, 1, !dbg !12670
  br label %196, !dbg !12670

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12672
  %188 = or i32 %187, 4, !dbg !12672
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12672
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12672
  %190 = or i32 %189, 1, !dbg !12672
  br label %196, !dbg !12672

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12675
  %193 = and i32 %192, -2, !dbg !12675
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12675
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12675
  %195 = and i32 %194, -5, !dbg !12675
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12677
  %198 = load i32, i32* %181, align 4, !dbg !12678
  %199 = icmp eq i32 %198, 0, !dbg !12680
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12681
  call void @llvm.dbg.value(metadata i32 %200, metadata !12467, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %200, metadata !12467, metadata !DIExpression()), !dbg !12477
  br i1 %199, label %209, label %201, !dbg !12682

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12683
  %203 = and i32 %202, 2, !dbg !12685
  %204 = icmp eq i32 %203, 0, !dbg !12685
  br i1 %204, label %205, label %217, !dbg !12686

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12687
  %207 = sub i32 %206, %200, !dbg !12690
  %208 = icmp ugt i32 %207, 5000, !dbg !12691
  br i1 %208, label %317, label %201, !dbg !12692, !llvm.loop !12693

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12695
  %211 = and i32 %210, 2, !dbg !12695
  %212 = icmp eq i32 %211, 0, !dbg !12695
  br i1 %212, label %217, label %213, !dbg !12697

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12698
  %215 = sub i32 %214, %200, !dbg !12701
  %216 = icmp ugt i32 %215, 5000, !dbg !12702
  br i1 %216, label %317, label %209, !dbg !12703, !llvm.loop !12704

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12706

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12707
  %220 = and i32 %219, -268435457, !dbg !12707
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12707
  br label %221, !dbg !12710

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12711
  %223 = load i32, i32* %222, align 4, !dbg !12711
  %224 = icmp eq i32 %223, 0, !dbg !12713
  br i1 %224, label %316, label %225, !dbg !12714

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12715
  %227 = and i32 %226, 12, !dbg !12715
  %228 = icmp eq i32 %227, 8, !dbg !12718
  br i1 %228, label %277, label %229, !dbg !12719

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12720
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12723
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %231, metadata !12467, metadata !DIExpression()), !dbg !12477
  call void @llvm.dbg.value(metadata i32 %231, metadata !12467, metadata !DIExpression()), !dbg !12477
  br i1 %230, label %232, label %269, !dbg !12724

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12725
  %234 = and i32 %233, 33554432, !dbg !12725
  %235 = icmp eq i32 %234, 0, !dbg !12725
  br i1 %235, label %240, label %236, !dbg !12727

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12728
  %238 = sub i32 %237, %231, !dbg !12731
  %239 = icmp ugt i32 %238, 2, !dbg !12732
  br i1 %239, label %317, label %232, !dbg !12733, !llvm.loop !12734

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12736
  %242 = load i32, i32* %241, align 4, !dbg !12736
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12736
  %244 = load i32, i32* %243, align 4, !dbg !12736
  %245 = or i32 %244, %242, !dbg !12736
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12736
  %247 = load i32, i32* %246, align 4, !dbg !12736
  %248 = shl i32 %247, 6, !dbg !12736
  %249 = or i32 %245, %248, !dbg !12736
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12736
  %251 = load i32, i32* %250, align 4, !dbg !12736
  %252 = shl i32 %251, 15, !dbg !12736
  %253 = add i32 %252, -65536, !dbg !12736
  %254 = and i32 %253, -65536, !dbg !12736
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12736
  %256 = load i32, i32* %255, align 4, !dbg !12736
  %257 = shl i32 %256, 24, !dbg !12736
  %258 = or i32 %249, %257, !dbg !12736
  %259 = or i32 %258, %254, !dbg !12736
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12736
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12737
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12738
  call void @llvm.dbg.value(metadata i32 %260, metadata !12467, metadata !DIExpression()), !dbg !12477
  br label %261, !dbg !12739

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12740
  %263 = and i32 %262, 33554432, !dbg !12741
  %264 = icmp eq i32 %263, 0, !dbg !12741
  br i1 %264, label %265, label %316, !dbg !12739

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12742
  %267 = sub i32 %266, %260, !dbg !12745
  %268 = icmp ugt i32 %267, 2, !dbg !12746
  br i1 %268, label %317, label %261, !dbg !12747, !llvm.loop !12748

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12750
  %271 = and i32 %270, 33554432, !dbg !12750
  %272 = icmp eq i32 %271, 0, !dbg !12750
  br i1 %272, label %316, label %273, !dbg !12752

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12753
  %275 = sub i32 %274, %231, !dbg !12756
  %276 = icmp ugt i32 %275, 2, !dbg !12757
  br i1 %276, label %317, label %269, !dbg !12758, !llvm.loop !12759

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12761
  br i1 %278, label %317, label %279, !dbg !12764

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12765
  call void @llvm.dbg.value(metadata i32 %280, metadata !12468, metadata !DIExpression()), !dbg !12477
  %281 = and i32 %280, 4194304, !dbg !12767
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12769
  %283 = load i32, i32* %282, align 4, !dbg !12769
  %284 = icmp eq i32 %281, %283, !dbg !12770
  br i1 %284, label %285, label %317, !dbg !12771

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12772
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12773
  %288 = load i32, i32* %287, align 4, !dbg !12773
  %289 = icmp eq i32 %286, %288, !dbg !12774
  br i1 %289, label %290, label %317, !dbg !12775

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12776
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12777
  %293 = load i32, i32* %292, align 4, !dbg !12777
  %294 = shl i32 %293, 6, !dbg !12778
  %295 = icmp eq i32 %291, %294, !dbg !12779
  br i1 %295, label %296, label %317, !dbg !12780

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12781
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12782
  %299 = load i32, i32* %298, align 4, !dbg !12782
  %300 = shl i32 %299, 15, !dbg !12783
  %301 = add i32 %300, -65536, !dbg !12783
  %302 = and i32 %301, -65536, !dbg !12783
  %303 = icmp eq i32 %297, %302, !dbg !12784
  br i1 %303, label %304, label %317, !dbg !12785

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12786
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12787
  %307 = load i32, i32* %306, align 4, !dbg !12787
  %308 = shl i32 %307, 24, !dbg !12788
  %309 = icmp eq i32 %305, %308, !dbg !12789
  br i1 %309, label %310, label %317, !dbg !12790

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !12791
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12792
  %313 = load i32, i32* %312, align 4, !dbg !12792
  %314 = shl i32 %313, 28, !dbg !12793
  %315 = icmp eq i32 %311, %314, !dbg !12794
  br i1 %315, label %316, label %317, !dbg !12795

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !12796

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12477
  ret i32 %318, !dbg !12797
}

; Function Attrs: optsize
declare !dbg !12798 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.msg* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12800 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !12813, metadata !DIExpression()), !dbg !12816
  call void @llvm.dbg.value(metadata i32 %1, metadata !12814, metadata !DIExpression()), !dbg !12816
  %3 = icmp eq %struct.msg* %0, null, !dbg !12817
  br i1 %3, label %115, label %4, !dbg !12819

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12820
  %6 = and i32 %5, 7, !dbg !12820
  %7 = icmp ult i32 %6, %1, !dbg !12822
  br i1 %7, label %8, label %13, !dbg !12823

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12824
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12824
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12826
  %11 = and i32 %10, 7, !dbg !12826
  %12 = icmp eq i32 %11, %1, !dbg !12828
  br i1 %12, label %13, label %115, !dbg !12829

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !12830
  %15 = load i32, i32* %14, align 4, !dbg !12830
  %16 = and i32 %15, 2, !dbg !12832
  %17 = icmp eq i32 %16, 0, !dbg !12833
  br i1 %17, label %39, label %18, !dbg !12834

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12835
  %20 = icmp eq i32 %19, 0, !dbg !12838
  br i1 %20, label %25, label %21, !dbg !12839

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12840
  %23 = or i32 %22, 7168, !dbg !12840
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12840
  %24 = load i32, i32* %14, align 4, !dbg !12842
  br label %25, !dbg !12844

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12842
  %27 = and i32 %26, 8, !dbg !12845
  %28 = icmp eq i32 %27, 0, !dbg !12846
  br i1 %28, label %32, label %29, !dbg !12847

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12848
  %31 = or i32 %30, 57344, !dbg !12848
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12848
  br label %32, !dbg !12850

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12851
  %34 = and i32 %33, -241, !dbg !12851
  %35 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !12851
  %36 = load i32, i32* %35, align 4, !dbg !12851
  %37 = or i32 %34, %36, !dbg !12851
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12851
  %38 = load i32, i32* %14, align 4, !dbg !12852
  br label %39, !dbg !12854

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12852
  %41 = and i32 %40, 1, !dbg !12855
  %42 = icmp eq i32 %41, 0, !dbg !12856
  br i1 %42, label %73, label %43, !dbg !12857

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !12858
  %45 = load i32, i32* %44, align 4, !dbg !12858
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12861

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12862
  %48 = and i32 %47, 131072, !dbg !12865
  %49 = icmp eq i32 %48, 0, !dbg !12865
  br i1 %49, label %115, label %58, !dbg !12866

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12867
  %52 = and i32 %51, 33554432, !dbg !12871
  %53 = icmp eq i32 %52, 0, !dbg !12871
  br i1 %53, label %115, label %58, !dbg !12872

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12873
  %56 = and i32 %55, 2, !dbg !12876
  %57 = icmp eq i32 %56, 0, !dbg !12876
  br i1 %57, label %115, label %58, !dbg !12877

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12878
  %60 = and i32 %59, -4, !dbg !12878
  %61 = or i32 %60, %45, !dbg !12878
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12878
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %62, metadata !12815, metadata !DIExpression()), !dbg !12816
  br label %63, !dbg !12880

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12881
  %65 = and i32 %64, 12, !dbg !12881
  %66 = load i32, i32* %44, align 4, !dbg !12882
  %67 = shl i32 %66, 2, !dbg !12883
  %68 = icmp eq i32 %65, %67, !dbg !12884
  br i1 %68, label %73, label %69, !dbg !12880

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12885
  %71 = sub i32 %70, %62, !dbg !12888
  %72 = icmp ugt i32 %71, 5000, !dbg !12889
  br i1 %72, label %115, label %63, !dbg !12890, !llvm.loop !12891

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12893
  %75 = and i32 %74, 7, !dbg !12893
  %76 = icmp ugt i32 %75, %1, !dbg !12895
  br i1 %76, label %77, label %82, !dbg !12896

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12897
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12897
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12899
  %80 = and i32 %79, 7, !dbg !12899
  %81 = icmp eq i32 %80, %1, !dbg !12901
  br i1 %81, label %82, label %115, !dbg !12902

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12903
  %84 = and i32 %83, 4, !dbg !12905
  %85 = icmp eq i32 %84, 0, !dbg !12906
  br i1 %85, label %93, label %86, !dbg !12907

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12908
  %88 = and i32 %87, -7169, !dbg !12908
  %89 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !12908
  %90 = load i32, i32* %89, align 4, !dbg !12908
  %91 = or i32 %88, %90, !dbg !12908
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12908
  %92 = load i32, i32* %14, align 4, !dbg !12910
  br label %93, !dbg !12912

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12910
  %95 = and i32 %94, 8, !dbg !12913
  %96 = icmp eq i32 %95, 0, !dbg !12914
  br i1 %96, label %104, label %97, !dbg !12915

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  %99 = and i32 %98, -57345, !dbg !12916
  %100 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !12916
  %101 = load i32, i32* %100, align 4, !dbg !12916
  %102 = shl i32 %101, 3, !dbg !12916
  %103 = or i32 %102, %99, !dbg !12916
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12916
  br label %104, !dbg !12918

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !12919
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12920
  %107 = lshr i32 %106, 4, !dbg !12921
  %108 = and i32 %107, 15, !dbg !12921
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12922
  %110 = load i8, i8* %109, align 1, !dbg !12922
  %111 = zext i8 %110 to i32, !dbg !12922
  %112 = lshr i32 %105, %111, !dbg !12923
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12924
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12925
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12926
  br label %115, !dbg !12927

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12816
  ret i32 %116, !dbg !12928
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12929 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12931, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 0, metadata !12932, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 0, metadata !12933, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 0, metadata !12934, metadata !DIExpression()), !dbg !12935
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12936
  %2 = and i32 %1, 12, !dbg !12937
  %3 = icmp eq i32 %2, 8, !dbg !12938
  br i1 %3, label %4, label %21, !dbg !12938

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12939
  %6 = and i32 %5, 63, !dbg !12942
  call void @llvm.dbg.value(metadata i32 %6, metadata !12931, metadata !DIExpression()), !dbg !12935
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12943
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12945
  %9 = lshr i32 %8, 6, !dbg !12945
  %10 = and i32 %9, 511, !dbg !12945
  %11 = zext i32 %10 to i64, !dbg !12945
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !12945
  %13 = zext i32 %6 to i64, !dbg !12945
  %14 = udiv i64 %12, %13, !dbg !12945
  %15 = trunc i64 %14 to i32, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %15, metadata !12932, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 %15, metadata !12932, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 %15, metadata !12932, metadata !DIExpression()), !dbg !12935
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12946
  %17 = lshr i32 %16, 15, !dbg !12947
  %18 = and i32 %17, 6, !dbg !12947
  %19 = add nuw nsw i32 %18, 2, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %19, metadata !12933, metadata !DIExpression()), !dbg !12935
  %20 = udiv i32 %15, %19, !dbg !12948
  call void @llvm.dbg.value(metadata i32 %20, metadata !12934, metadata !DIExpression()), !dbg !12935
  br label %21, !dbg !12949

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !12950
  call void @llvm.dbg.value(metadata i32 %22, metadata !12934, metadata !DIExpression()), !dbg !12935
  ret i32 %22, !dbg !12951
}

; Function Attrs: optsize
declare !dbg !12952 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12955 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12959, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %1, metadata !12960, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %2, metadata !12961, metadata !DIExpression()), !dbg !12976
  %6 = bitcast %struct.msg* %4 to i8*, !dbg !12977
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #26, !dbg !12977
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !12962, metadata !DIExpression()), !dbg !12978
  %7 = icmp eq i32 %0, 0, !dbg !12979
  br i1 %7, label %8, label %24, !dbg !12980

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !12981
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !12981
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12972, metadata !DIExpression()), !dbg !12981
  store volatile i32 0, i32* %5, align 4, !dbg !12981
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12981
  %11 = or i32 %10, 1, !dbg !12981
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12981
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12981
  %13 = and i32 %12, 1, !dbg !12981
  store volatile i32 %13, i32* %5, align 4, !dbg !12981
  %14 = load volatile i32, i32* %5, align 4, !dbg !12981
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !12982
  %15 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !12983
  store i32 256, i32* %15, align 4, !dbg !12984
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !12985
  store i32 2, i32* %16, align 4, !dbg !12986
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !12987
  store i32 3, i32* %17, align 4, !dbg !12988
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !12989
  store i32 0, i32* %18, align 4, !dbg !12990
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !12991
  store i32 0, i32* %19, align 4, !dbg !12992
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !12993
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12994
  %21 = and i32 %20, -123731969, !dbg !12994
  %22 = or i32 %2, %1, !dbg !12994
  %23 = or i32 %22, %21, !dbg !12994
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12994
  br label %24, !dbg !12995

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #26, !dbg !12996
  ret void, !dbg !12996
}

; Function Attrs: optsize
declare !dbg !12997 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.msg* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #18 !dbg !13001 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13002
  ret void, !dbg !13003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #18 !dbg !13004 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13005
  ret void, !dbg !13006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #13 !dbg !13007 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13008
  ret i32 %1, !dbg !13009
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #7 !dbg !13010 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13011
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13012
  %3 = lshr i32 %2, 10, !dbg !13013
  %4 = and i32 %3, 7, !dbg !13013
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13014
  %6 = load i8, i8* %5, align 1, !dbg !13014
  %7 = zext i8 %6 to i32, !dbg !13014
  %8 = lshr i32 %1, %7, !dbg !13015
  ret i32 %8, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #7 !dbg !13017 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !13018
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13019
  %3 = lshr i32 %2, 13, !dbg !13020
  %4 = and i32 %3, 7, !dbg !13020
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13021
  %6 = load i8, i8* %5, align 1, !dbg !13021
  %7 = zext i8 %6 to i32, !dbg !13021
  %8 = lshr i32 %1, %7, !dbg !13022
  ret i32 %8, !dbg !13023
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13024 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13028, metadata !DIExpression()), !dbg !13029
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13030
  store i32 15, i32* %2, align 4, !dbg !13031
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13032
  %4 = and i32 %3, 262144, !dbg !13034
  %5 = icmp eq i32 %4, 0, !dbg !13035
  br i1 %5, label %8, label %6, !dbg !13036

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13037
  store i32 327680, i32* %7, align 4, !dbg !13039
  br label %15, !dbg !13040

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13041
  %10 = and i32 %9, 65536, !dbg !13043
  %11 = icmp eq i32 %10, 0, !dbg !13044
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13045
  br i1 %11, label %14, label %13, !dbg !13046

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13047
  br label %15, !dbg !13049

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13050
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13052
  %17 = and i32 %16, 1, !dbg !13054
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13055
  store i32 %17, i32* %18, align 4, !dbg !13057
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13058
  %20 = lshr i32 %19, 3, !dbg !13059
  %21 = and i32 %20, 31, !dbg !13059
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13060
  store i32 %21, i32* %22, align 4, !dbg !13061
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13062
  %24 = and i32 %23, 4, !dbg !13064
  %25 = icmp eq i32 %24, 0, !dbg !13065
  br i1 %25, label %28, label %26, !dbg !13066

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13067
  store i32 5, i32* %27, align 4, !dbg !13069
  br label %35, !dbg !13070

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13071
  %30 = and i32 %29, 1, !dbg !13073
  %31 = icmp eq i32 %30, 0, !dbg !13074
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13075
  br i1 %31, label %34, label %33, !dbg !13076

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13077
  br label %35, !dbg !13079

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13080
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13082
  %37 = and i32 %36, 1, !dbg !13084
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13085
  store i32 %37, i32* %38, align 4, !dbg !13087
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13088
  %40 = and i32 %39, 16777216, !dbg !13090
  %41 = icmp eq i32 %40, 0, !dbg !13091
  %42 = select i1 %41, i32 1, i32 2, !dbg !13092
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13093
  store i32 %42, i32* %43, align 4, !dbg !13095
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13096
  %45 = and i32 %44, 4194304, !dbg !13097
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13098
  store i32 %45, i32* %46, align 4, !dbg !13099
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13100
  %48 = and i32 %47, 63, !dbg !13101
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13102
  store i32 %48, i32* %49, align 4, !dbg !13103
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13104
  %51 = lshr i32 %50, 6, !dbg !13105
  %52 = and i32 %51, 511, !dbg !13105
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13106
  store i32 %52, i32* %53, align 4, !dbg !13107
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13108
  %55 = shl i32 %54, 1, !dbg !13109
  %56 = and i32 %55, 393216, !dbg !13109
  %57 = add nuw nsw i32 %56, 131072, !dbg !13109
  %58 = lshr exact i32 %57, 16, !dbg !13110
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13111
  store i32 %58, i32* %59, align 4, !dbg !13112
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13113
  %61 = lshr i32 %60, 24, !dbg !13114
  %62 = and i32 %61, 15, !dbg !13114
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13115
  store i32 %62, i32* %63, align 4, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.msg* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13118 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13122, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.value(metadata i32* %1, metadata !13123, metadata !DIExpression()), !dbg !13124
  %3 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13125
  store i32 15, i32* %3, align 4, !dbg !13126
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13127
  %5 = and i32 %4, 3, !dbg !13128
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13129
  store i32 %5, i32* %6, align 4, !dbg !13130
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13131
  %8 = and i32 %7, 240, !dbg !13132
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13133
  store i32 %8, i32* %9, align 4, !dbg !13134
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13135
  %11 = and i32 %10, 7168, !dbg !13136
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13137
  store i32 %11, i32* %12, align 4, !dbg !13138
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13139
  %14 = lshr i32 %13, 3, !dbg !13140
  %15 = and i32 %14, 7168, !dbg !13140
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13141
  store i32 %15, i32* %16, align 4, !dbg !13142
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13143
  %18 = and i32 %17, 7, !dbg !13144
  store i32 %18, i32* %1, align 4, !dbg !13145
  ret void, !dbg !13146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13147 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13148
  %2 = and i32 %1, 128, !dbg !13148
  %3 = icmp eq i32 %2, 0, !dbg !13148
  br i1 %3, label %5, label %4, !dbg !13150

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #28, !dbg !13151
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13153
  br label %5, !dbg !13154

5:                                                ; preds = %4, %0
  ret void, !dbg !13155
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13156 {
  ret void, !dbg !13157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #18 !dbg !13158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13161, metadata !DIExpression()), !dbg !13162
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13163
  ret void, !dbg !13164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #18 !dbg !13165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13168, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.value(metadata i32 1000, metadata !13169, metadata !DIExpression()), !dbg !13170
  %2 = udiv i32 %0, 1000, !dbg !13171
  %3 = add nsw i32 %2, -1, !dbg !13172
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13173
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13174
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13175
  ret void, !dbg !13176
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13177 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13179, metadata !DIExpression()), !dbg !13181
  %3 = bitcast i32* %2 to i8*, !dbg !13182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13182
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13180, metadata !DIExpression()), !dbg !13183
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13184
  store volatile i32 %4, i32* %2, align 4, !dbg !13183
  %5 = load volatile i32, i32* %2, align 4, !dbg !13185
  %6 = icmp eq i32 %0, -1, !dbg !13186
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13179, metadata !DIExpression()), !dbg !13181
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %8, metadata !13179, metadata !DIExpression()), !dbg !13181
  br label %9, !dbg !13188

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13179, metadata !DIExpression()), !dbg !13181
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13189
  call void @llvm.dbg.value(metadata i32 undef, metadata !13179, metadata !DIExpression()), !dbg !13181
  %12 = shl i32 %11, 15, !dbg !13181
  %13 = ashr i32 %12, 31, !dbg !13181
  %14 = add i32 %13, %10, !dbg !13181
  call void @llvm.dbg.value(metadata i32 %14, metadata !13179, metadata !DIExpression()), !dbg !13181
  %15 = icmp eq i32 %14, 0, !dbg !13188
  br i1 %15, label %16, label %9, !dbg !13188

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13192
  ret void, !dbg !13192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13195, metadata !DIExpression()), !dbg !13196
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #18 !dbg !13199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13204, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 0, metadata !13207, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 0, metadata !13208, metadata !DIExpression()), !dbg !13209
  %2 = icmp eq i32 %0, 0, !dbg !13210
  br i1 %2, label %50, label %3, !dbg !13212

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13213
  %5 = icmp eq i32 %4, 49152, !dbg !13216
  br i1 %5, label %6, label %15, !dbg !13217

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13207, metadata !DIExpression()), !dbg !13209
  %7 = add i32 %0, -64000001, !dbg !13218
  %8 = icmp ult i32 %7, 26000000, !dbg !13218
  br i1 %8, label %15, label %9, !dbg !13218

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13221
  %11 = select i1 %10, i32 0, i32 3, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %11, metadata !13207, metadata !DIExpression()), !dbg !13209
  %12 = add i32 %0, -30000001, !dbg !13224
  %13 = icmp ult i32 %12, 60000000, !dbg !13224
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13224
  call void @llvm.dbg.value(metadata i32 %14, metadata !13207, metadata !DIExpression()), !dbg !13209
  br label %15, !dbg !13224

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13209
  call void @llvm.dbg.value(metadata i32 %16, metadata !13207, metadata !DIExpression()), !dbg !13209
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13227
  %18 = icmp eq i32 %17, 32768, !dbg !13229
  br i1 %18, label %19, label %27, !dbg !13230

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13231
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13234
  br i1 %22, label %27, label %23, !dbg !13234

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13235
  %25 = and i1 %24, %21, !dbg !13238
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13238
  call void @llvm.dbg.value(metadata i32 %26, metadata !13207, metadata !DIExpression()), !dbg !13209
  br label %27, !dbg !13238

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13239
  call void @llvm.dbg.value(metadata i32 %28, metadata !13207, metadata !DIExpression()), !dbg !13209
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13240
  %30 = icmp eq i32 %29, 16384, !dbg !13242
  br i1 %30, label %31, label %39, !dbg !13243

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13244
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13247
  br i1 %34, label %39, label %35, !dbg !13247

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13248
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13251
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %38, metadata !13207, metadata !DIExpression()), !dbg !13209
  br label %39, !dbg !13251

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13239
  call void @llvm.dbg.value(metadata i32 %40, metadata !13207, metadata !DIExpression()), !dbg !13209
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #28, !dbg !13252
  call void @llvm.dbg.value(metadata i32 2, metadata !13205, metadata !DIExpression()), !dbg !13209
  br label %41, !dbg !13253

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13239
  call void @llvm.dbg.value(metadata i32 %42, metadata !13205, metadata !DIExpression()), !dbg !13209
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %43, metadata !13206, metadata !DIExpression()), !dbg !13209
  %44 = add nsw i32 %42, -1, !dbg !13256
  call void @llvm.dbg.value(metadata i32 %44, metadata !13205, metadata !DIExpression()), !dbg !13209
  %45 = icmp ne i32 %43, %40, !dbg !13257
  %46 = icmp ne i32 %44, 0, !dbg !13258
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13258
  br i1 %47, label %41, label %48, !dbg !13259, !llvm.loop !13260

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13262
  call void @llvm.dbg.value(metadata i32 %51, metadata !13208, metadata !DIExpression()), !dbg !13209
  ret i32 %51, !dbg !13263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13264 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13266
  %2 = and i32 %1, 49152, !dbg !13266
  ret i32 %2, !dbg !13267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #18 !dbg !13268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13270, metadata !DIExpression()), !dbg !13271
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13272
  %3 = and i32 %2, -8, !dbg !13272
  %4 = or i32 %3, %0, !dbg !13272
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13272
  ret void, !dbg !13273
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13274 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13275
  %2 = and i32 %1, 7, !dbg !13275
  ret i32 %2, !dbg !13276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !13277 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13295, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13296, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 0, metadata !13297, metadata !DIExpression()), !dbg !13299
  call void @llvm.dbg.value(metadata i32 0, metadata !13298, metadata !DIExpression()), !dbg !13299
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13300
  %4 = icmp eq i32 %3, 0, !dbg !13302
  br i1 %4, label %5, label %21, !dbg !13303

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #28, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %6, metadata !13298, metadata !DIExpression()), !dbg !13299
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.208() #28, !dbg !13306
  %8 = icmp eq i32 %7, 1, !dbg !13308
  br i1 %8, label %13, label %9, !dbg !13309

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.209() #28, !dbg !13310
  br label %10, !dbg !13312

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.208() #28, !dbg !13313
  %12 = icmp eq i32 %11, 1, !dbg !13314
  br i1 %12, label %13, label %10, !dbg !13312, !llvm.loop !13315

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13317
  %15 = load i32, i32* %14, align 4, !dbg !13317
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13318
  %17 = load i32, i32* %16, align 4, !dbg !13318
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13319
  %19 = load i32, i32* %18, align 4, !dbg !13319
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #28, !dbg !13320
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13321
  call void @llvm.dbg.value(metadata i32 %20, metadata !13297, metadata !DIExpression()), !dbg !13299
  br label %21, !dbg !13322

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13323
  call void @llvm.dbg.value(metadata i32 %22, metadata !13297, metadata !DIExpression()), !dbg !13299
  ret i32 %22, !dbg !13324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13325 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13329, metadata !DIExpression()), !dbg !13330
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.212() #28, !dbg !13331
  %2 = icmp ne i32 %1, 0, !dbg !13333
  call void @llvm.dbg.value(metadata i1 %2, metadata !13329, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13330
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #28, !dbg !13334
  %4 = icmp ne i32 %3, 0, !dbg !13336
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13337
  %6 = zext i1 %5 to i32, !dbg !13337
  call void @llvm.dbg.value(metadata i32 %6, metadata !13329, metadata !DIExpression()), !dbg !13330
  ret i32 %6, !dbg !13338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !13339 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13343, metadata !DIExpression()), !dbg !13346
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13344, metadata !DIExpression()), !dbg !13346
  call void @llvm.dbg.value(metadata i32 0, metadata !13345, metadata !DIExpression()), !dbg !13346
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13347
  %4 = load i32, i32* %3, align 4, !dbg !13347
  %5 = and i32 %4, 63, !dbg !13348
  %6 = udiv i32 %0, %5, !dbg !13349
  call void @llvm.dbg.value(metadata i32 %6, metadata !13345, metadata !DIExpression()), !dbg !13346
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13350
  %8 = load i32, i32* %7, align 4, !dbg !13350
  %9 = and i32 %8, 511, !dbg !13351
  %10 = mul i32 %9, %6, !dbg !13352
  call void @llvm.dbg.value(metadata i32 %10, metadata !13345, metadata !DIExpression()), !dbg !13346
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13353
  %12 = load i32, i32* %11, align 4, !dbg !13353
  %13 = lshr i32 %12, 15, !dbg !13354
  %14 = and i32 %13, 131070, !dbg !13354
  %15 = add nuw nsw i32 %14, 2, !dbg !13354
  %16 = udiv i32 %10, %15, !dbg !13355
  call void @llvm.dbg.value(metadata i32 %16, metadata !13345, metadata !DIExpression()), !dbg !13346
  ret i32 %16, !dbg !13356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.208() unnamed_addr #7 !dbg !13357 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13358
  %2 = lshr i32 %1, 1, !dbg !13359
  %3 = and i32 %2, 1, !dbg !13359
  ret i32 %3, !dbg !13360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.209() unnamed_addr #18 !dbg !13361 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13362
  %2 = or i32 %1, 1, !dbg !13362
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13362
  ret void, !dbg !13363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #18 !dbg !13364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13366, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 %1, metadata !13367, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 %2, metadata !13368, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata i32 %3, metadata !13369, metadata !DIExpression()), !dbg !13370
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13371
  %6 = and i32 %5, -4227072, !dbg !13371
  %7 = or i32 %1, %0, !dbg !13371
  %8 = shl i32 %2, 6, !dbg !13371
  %9 = or i32 %7, %8, !dbg !13371
  %10 = or i32 %9, %6, !dbg !13371
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13371
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13372
  %12 = and i32 %11, -196609, !dbg !13372
  %13 = or i32 %12, %3, !dbg !13372
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13372
  ret void, !dbg !13373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #18 !dbg !13374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13378, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13379, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 0, metadata !13380, metadata !DIExpression()), !dbg !13382
  call void @llvm.dbg.value(metadata i32 0, metadata !13381, metadata !DIExpression()), !dbg !13382
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13383
  %4 = load i32, i32* %3, align 4, !dbg !13383
  %5 = lshr i32 %4, 4, !dbg !13383
  %6 = and i32 %5, 15, !dbg !13383
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13383
  %8 = load i8, i8* %7, align 1, !dbg !13383
  %9 = zext i8 %8 to i32, !dbg !13383
  %10 = lshr i32 %0, %9, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %10, metadata !13381, metadata !DIExpression()), !dbg !13382
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13384
  %12 = icmp ult i32 %11, %10, !dbg !13386
  br i1 %12, label %13, label %16, !dbg !13387

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13388
  call void @llvm.dbg.value(metadata i32 %14, metadata !13380, metadata !DIExpression()), !dbg !13382
  %15 = icmp eq i32 %14, 0, !dbg !13390
  br i1 %15, label %16, label %30, !dbg !13392

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.211() #28, !dbg !13393
  br label %17, !dbg !13395

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.212() #28, !dbg !13396
  %19 = icmp eq i32 %18, 1, !dbg !13397
  br i1 %19, label %20, label %17, !dbg !13395, !llvm.loop !13398

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13400
  tail call fastcc void @LL_RCC_SetAHBPrescaler.213(i32 noundef %21) #28, !dbg !13401
  tail call fastcc void @LL_RCC_SetSysClkSource.214() #28, !dbg !13402
  br label %22, !dbg !13403

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.215() #28, !dbg !13404
  %24 = icmp eq i32 %23, 8, !dbg !13405
  br i1 %24, label %25, label %22, !dbg !13403, !llvm.loop !13406

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13408
  %27 = load i32, i32* %26, align 4, !dbg !13408
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.216(i32 noundef %27) #28, !dbg !13409
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13410
  %29 = load i32, i32* %28, align 4, !dbg !13410
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.217(i32 noundef %29) #28, !dbg !13411
  br label %30, !dbg !13412

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13413
  %33 = icmp ugt i32 %32, %10, !dbg !13415
  br i1 %33, label %34, label %36, !dbg !13416

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %35, metadata !13380, metadata !DIExpression()), !dbg !13382
  br label %36, !dbg !13419

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13382
  call void @llvm.dbg.value(metadata i32 %37, metadata !13380, metadata !DIExpression()), !dbg !13382
  %38 = icmp eq i32 %37, 0, !dbg !13420
  br i1 %38, label %39, label %40, !dbg !13422

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !13423
  br label %40, !dbg !13425

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.211() unnamed_addr #18 !dbg !13427 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13428
  %2 = or i32 %1, 16777216, !dbg !13428
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13428
  ret void, !dbg !13429
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.212() unnamed_addr #7 !dbg !13430 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13431
  %2 = lshr i32 %1, 25, !dbg !13432
  %3 = and i32 %2, 1, !dbg !13432
  ret i32 %3, !dbg !13433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.213(i32 noundef %0) unnamed_addr #18 !dbg !13434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13436, metadata !DIExpression()), !dbg !13437
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13438
  %3 = and i32 %2, -241, !dbg !13438
  %4 = or i32 %3, %0, !dbg !13438
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13438
  ret void, !dbg !13439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.214() unnamed_addr #18 !dbg !13440 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13442, metadata !DIExpression()), !dbg !13443
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13444
  %2 = and i32 %1, -4, !dbg !13444
  %3 = or i32 %2, 2, !dbg !13444
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13444
  ret void, !dbg !13445
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.215() unnamed_addr #7 !dbg !13446 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13447
  %2 = and i32 %1, 12, !dbg !13447
  ret i32 %2, !dbg !13448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.216(i32 noundef %0) unnamed_addr #18 !dbg !13449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13451, metadata !DIExpression()), !dbg !13452
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13453
  %3 = and i32 %2, -7169, !dbg !13453
  %4 = or i32 %3, %0, !dbg !13453
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13453
  ret void, !dbg !13454
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.217(i32 noundef %0) unnamed_addr #18 !dbg !13455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13457, metadata !DIExpression()), !dbg !13458
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13459
  %3 = and i32 %2, -57345, !dbg !13459
  %4 = or i32 %3, %0, !dbg !13459
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13459
  ret void, !dbg !13460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #7 !dbg !13461 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13462
  %2 = lshr i32 %1, 27, !dbg !13463
  %3 = and i32 %2, 1, !dbg !13463
  ret i32 %3, !dbg !13464
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #18 !dbg !13465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13469, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %1, metadata !13470, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13471, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13472, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 0, metadata !13473, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13476
  %6 = icmp eq i32 %5, 0, !dbg !13478
  br i1 %6, label %7, label %27, !dbg !13479

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #28, !dbg !13480
  call void @llvm.dbg.value(metadata i32 %8, metadata !13474, metadata !DIExpression()), !dbg !13475
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.218() #28, !dbg !13482
  %10 = icmp eq i32 %9, 1, !dbg !13484
  br i1 %10, label %19, label %11, !dbg !13485

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13486
  br i1 %12, label %13, label %14, !dbg !13489

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !13490
  br label %15, !dbg !13492

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.219() #28, !dbg !13493
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.220() #28, !dbg !13495
  br label %16, !dbg !13496

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.218() #28, !dbg !13497
  %18 = icmp eq i32 %17, 1, !dbg !13498
  br i1 %18, label %19, label %16, !dbg !13496, !llvm.loop !13499

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13501
  %21 = load i32, i32* %20, align 4, !dbg !13501
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13502
  %23 = load i32, i32* %22, align 4, !dbg !13502
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13503
  %25 = load i32, i32* %24, align 4, !dbg !13503
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #28, !dbg !13504
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %26, metadata !13473, metadata !DIExpression()), !dbg !13475
  br label %27, !dbg !13506

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13507
  call void @llvm.dbg.value(metadata i32 %28, metadata !13473, metadata !DIExpression()), !dbg !13475
  ret i32 %28, !dbg !13508
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.218() unnamed_addr #7 !dbg !13509 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13510
  %2 = lshr i32 %1, 17, !dbg !13511
  %3 = and i32 %2, 1, !dbg !13511
  ret i32 %3, !dbg !13512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #18 !dbg !13513 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13514
  %2 = or i32 %1, 262144, !dbg !13514
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13514
  ret void, !dbg !13515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.219() unnamed_addr #18 !dbg !13516 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13517
  %2 = and i32 %1, -262145, !dbg !13517
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13517
  ret void, !dbg !13518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.220() unnamed_addr #18 !dbg !13519 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13520
  %2 = or i32 %1, 65536, !dbg !13520
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13520
  ret void, !dbg !13521
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13522 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13525, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i32 undef, metadata !13525, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata i32 undef, metadata !13525, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13541
  ret void, !dbg !13542
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13547, metadata !DIExpression()), !dbg !13549
  %2 = icmp eq i8* %0, null, !dbg !13550
  br i1 %2, label %29, label %3, !dbg !13552

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13553
  %5 = icmp eq i8 %4, 0, !dbg !13554
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13555
  br i1 %6, label %29, label %8, !dbg !13555

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13548, metadata !DIExpression()), !dbg !13549
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13556

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13548, metadata !DIExpression()), !dbg !13549
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !13558
  br i1 %10, label %11, label %15, !dbg !13563

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13564
  %13 = load i8*, i8** %12, align 4, !dbg !13564
  %14 = icmp eq i8* %13, %0, !dbg !13565
  br i1 %14, label %29, label %15, !dbg !13566

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13567
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13548, metadata !DIExpression()), !dbg !13549
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13568
  br i1 %17, label %7, label %8, !dbg !13569, !llvm.loop !13570

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13548, metadata !DIExpression()), !dbg !13549
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !13572
  br i1 %20, label %21, label %26, !dbg !13576

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13577
  %23 = load i8*, i8** %22, align 4, !dbg !13577
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13578
  %25 = icmp eq i32 %24, 0, !dbg !13579
  br i1 %25, label %29, label %26, !dbg !13580

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13581
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13548, metadata !DIExpression()), !dbg !13549
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13582
  br i1 %28, label %29, label %18, !dbg !13556, !llvm.loop !13583

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13549
  ret %struct.device* %30, !dbg !13585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !13586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13590, metadata !DIExpression()), !dbg !13591
  %2 = icmp eq %struct.device* %0, null, !dbg !13592
  br i1 %2, label %14, label %3, !dbg !13594

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13595
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13595
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13596
  %7 = load i8, i8* %6, align 1, !dbg !13596
  %8 = and i8 %7, 1, !dbg !13596
  %9 = icmp eq i8 %8, 0, !dbg !13596
  br i1 %9, label %14, label %10, !dbg !13597

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13598
  %12 = load i8, i8* %11, align 1, !dbg !13598
  %13 = icmp eq i8 %12, 0, !dbg !13599
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13591
  ret i1 %15, !dbg !13600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !13601 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13606, metadata !DIExpression()), !dbg !13607
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13608
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13609
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13610 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13618, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13619, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.value(metadata i8* %2, metadata !13620, metadata !DIExpression()), !dbg !13623
  %5 = bitcast i32* %4 to i8*, !dbg !13624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13624
  call void @llvm.dbg.value(metadata i32 0, metadata !13621, metadata !DIExpression()), !dbg !13623
  store i32 0, i32* %4, align 4, !dbg !13625
  call void @llvm.dbg.value(metadata i32* %4, metadata !13621, metadata !DIExpression(DW_OP_deref)), !dbg !13623
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13626
  call void @llvm.dbg.value(metadata i16* %6, metadata !13622, metadata !DIExpression()), !dbg !13623
  %7 = load i32, i32* %4, align 4, !dbg !13627
  call void @llvm.dbg.value(metadata i32 %7, metadata !13621, metadata !DIExpression()), !dbg !13623
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13628
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13629
  ret i32 %8, !dbg !13630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13635, metadata !DIExpression()), !dbg !13641
  call void @llvm.dbg.value(metadata i32* %1, metadata !13636, metadata !DIExpression()), !dbg !13641
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13642
  %4 = load i16*, i16** %3, align 4, !dbg !13642
  call void @llvm.dbg.value(metadata i16* %4, metadata !13637, metadata !DIExpression()), !dbg !13641
  %5 = icmp eq i16* %4, null, !dbg !13643
  br i1 %5, label %14, label %6, !dbg !13644

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13645
  call void @llvm.dbg.value(metadata i32 %7, metadata !13638, metadata !DIExpression()), !dbg !13645
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13646
  %9 = load i16, i16* %8, align 2, !dbg !13646
  %10 = add i16 %9, -32767, !dbg !13647
  %11 = icmp ult i16 %10, 2, !dbg !13647
  %12 = add i32 %7, 1, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %12, metadata !13638, metadata !DIExpression()), !dbg !13645
  br i1 %11, label %13, label %6, !dbg !13647, !llvm.loop !13650

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13653
  br label %14, !dbg !13654

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13656 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13660, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 %1, metadata !13661, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13662, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i8* %3, metadata !13663, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i32 0, metadata !13664, metadata !DIExpression()), !dbg !13672
  %5 = icmp eq i32 %1, 0, !dbg !13673
  br i1 %5, label %16, label %8, !dbg !13674

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13664, metadata !DIExpression()), !dbg !13672
  %7 = icmp eq i32 %15, %1, !dbg !13673
  br i1 %7, label %16, label %8, !dbg !13674, !llvm.loop !13675

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13664, metadata !DIExpression()), !dbg !13672
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13677
  %11 = load i16, i16* %10, align 2, !dbg !13677
  call void @llvm.dbg.value(metadata i16 %11, metadata !13666, metadata !DIExpression()), !dbg !13678
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !13679
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13669, metadata !DIExpression()), !dbg !13678
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13680
  call void @llvm.dbg.value(metadata i32 %13, metadata !13670, metadata !DIExpression()), !dbg !13678
  %14 = icmp slt i32 %13, 0, !dbg !13681
  %15 = add nuw i32 %9, 1, !dbg !13683
  call void @llvm.dbg.value(metadata i32 %15, metadata !13664, metadata !DIExpression()), !dbg !13672
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13685 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13689, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13690, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13691, metadata !DIExpression()), !dbg !13692
  %2 = sext i16 %0 to i32, !dbg !13693
  %3 = icmp slt i16 %0, 1, !dbg !13695
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13696
  %6 = add nsw i32 %2, -1, !dbg !13696
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13696
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13696
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13690, metadata !DIExpression()), !dbg !13692
  ret %struct.device* %8, !dbg !13697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13698 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13700, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13701, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i8* %2, metadata !13702, metadata !DIExpression()), !dbg !13705
  %5 = bitcast i32* %4 to i8*, !dbg !13706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13706
  call void @llvm.dbg.value(metadata i32 0, metadata !13703, metadata !DIExpression()), !dbg !13705
  store i32 0, i32* %4, align 4, !dbg !13707
  call void @llvm.dbg.value(metadata i32* %4, metadata !13703, metadata !DIExpression(DW_OP_deref)), !dbg !13705
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13708
  call void @llvm.dbg.value(metadata i16* %6, metadata !13704, metadata !DIExpression()), !dbg !13705
  %7 = load i32, i32* %4, align 4, !dbg !13709
  call void @llvm.dbg.value(metadata i32 %7, metadata !13703, metadata !DIExpression()), !dbg !13705
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13710
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13711
  ret i32 %8, !dbg !13712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13715, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32* %1, metadata !13716, metadata !DIExpression()), !dbg !13720
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13721
  %4 = load i16*, i16** %3, align 4, !dbg !13721
  call void @llvm.dbg.value(metadata i16* %4, metadata !13717, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 0, metadata !13718, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 0, metadata !13719, metadata !DIExpression()), !dbg !13720
  %5 = icmp eq i16* %4, null, !dbg !13722
  br i1 %5, label %22, label %6, !dbg !13724

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13718, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i16* %8, metadata !13717, metadata !DIExpression()), !dbg !13720
  %9 = load i16, i16* %8, align 2, !dbg !13725
  %10 = icmp eq i16 %9, -32768, !dbg !13729
  call void @llvm.dbg.value(metadata i32 undef, metadata !13718, metadata !DIExpression()), !dbg !13720
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13730
  call void @llvm.dbg.value(metadata i16* %11, metadata !13717, metadata !DIExpression()), !dbg !13720
  %12 = zext i1 %10 to i32, !dbg !13731
  %13 = add i32 %7, %12, !dbg !13731
  call void @llvm.dbg.value(metadata i32 %13, metadata !13718, metadata !DIExpression()), !dbg !13720
  %14 = icmp eq i32 %13, 2, !dbg !13732
  br i1 %14, label %15, label %6, !dbg !13733

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13720
  call void @llvm.dbg.value(metadata i32 %16, metadata !13719, metadata !DIExpression()), !dbg !13720
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13734
  %18 = load i16, i16* %17, align 2, !dbg !13734
  %19 = icmp eq i16 %18, 32767, !dbg !13735
  %20 = add i32 %16, 1, !dbg !13736
  call void @llvm.dbg.value(metadata i32 %20, metadata !13719, metadata !DIExpression()), !dbg !13720
  br i1 %19, label %21, label %15, !dbg !13738, !llvm.loop !13739

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13741
  br label %22, !dbg !13742

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13743
  call void @llvm.dbg.value(metadata i16* %23, metadata !13717, metadata !DIExpression()), !dbg !13720
  ret i16* %23, !dbg !13744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !13745 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13748
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13749
  ret i32* %2, !dbg !13750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13751 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13901, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13902, metadata !DIExpression()), !dbg !13904
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13903, metadata !DIExpression()), !dbg !13904
  ret void, !dbg !13905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.value(metadata i32 %1, metadata !13911, metadata !DIExpression()), !dbg !13912
  ret void, !dbg !13913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13914 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13918, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 %1, metadata !13919, metadata !DIExpression()), !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13926, metadata !DIExpression()), !dbg !13928
  call void @llvm.dbg.value(metadata i8* %1, metadata !13927, metadata !DIExpression()), !dbg !13928
  ret i32 -134, !dbg !13929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13934, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i8* %1, metadata !13935, metadata !DIExpression()), !dbg !13936
  ret i32 -134, !dbg !13937
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13941, metadata !DIExpression()), !dbg !13942
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13943, !srcloc !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !13946, metadata !DIExpression()) #26, !dbg !13950
  call void @llvm.dbg.value(metadata i32 undef, metadata !13947, metadata !DIExpression()) #26, !dbg !13950
  br label %3, !dbg !13951

3:                                                ; preds = %3, %1
  br label %3, !dbg !13952, !llvm.loop !13955
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13962, metadata !DIExpression()), !dbg !13964
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13963, metadata !DIExpression()), !dbg !13964
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.225, i32 0, i32 0), i32 noundef 69) #27, !dbg !13965
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13970
  unreachable, !dbg !13970
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13973, metadata !DIExpression()), !dbg !13974
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13975
  unreachable, !dbg !13975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13978, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13979, metadata !DIExpression()), !dbg !13982
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13983, !srcloc !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !13946, metadata !DIExpression()) #26, !dbg !13985
  call void @llvm.dbg.value(metadata i32 undef, metadata !13947, metadata !DIExpression()) #26, !dbg !13985
  call void @llvm.dbg.value(metadata i32 undef, metadata !13980, metadata !DIExpression()), !dbg !13982
  %4 = tail call fastcc %struct.k_thread* @k_current_get.228() #29, !dbg !13986
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13981, metadata !DIExpression()), !dbg !13982
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !13987
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.229, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13987
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13992
  br i1 %6, label %13, label %7, !dbg !13994

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13995, metadata !DIExpression()), !dbg !14000
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14002
  %9 = load i32, i32* %8, align 4, !dbg !14002
  %10 = and i32 %9, 511, !dbg !14003
  %11 = icmp eq i32 %10, 0, !dbg !14004
  br i1 %11, label %13, label %12, !dbg !14005

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.230, i32 0, i32 0), i32 noundef 69) #27, !dbg !14006
  br label %13, !dbg !14012

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !14013
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.231, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14013
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !14018
  %15 = icmp eq i32 %0, 4, !dbg !14019
  br i1 %15, label %16, label %17, !dbg !14024

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.233, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.235, i32 0, i32 0)) #27, !dbg !14025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.234, i32 0, i32 0), i32 noundef 148) #27, !dbg !14025
  unreachable, !dbg !14025

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13983
  call void @llvm.dbg.value(metadata i32 %18, metadata !13946, metadata !DIExpression()) #26, !dbg !13985
  call void @llvm.dbg.value(metadata i32 %18, metadata !13980, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()) #26, !dbg !14030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14032, !srcloc !14033
  tail call fastcc void @k_thread_abort.236(%struct.k_thread* noundef %4) #28, !dbg !14034
  ret void, !dbg !14037
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.228() unnamed_addr #6 !dbg !14038 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.244() #29, !dbg !14042
  ret %struct.k_thread* %1, !dbg !14043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14048, metadata !DIExpression()), !dbg !14049
  %2 = icmp ult i32 %0, 5, !dbg !14050
  br i1 %2, label %3, label %6, !dbg !14050

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14050
  %5 = load i8*, i8** %4, align 4, !dbg !14050
  br label %6, !dbg !14050

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.238, i32 0, i32 0), %1 ], !dbg !14051
  ret i8* %7, !dbg !14053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14058, metadata !DIExpression()), !dbg !14060
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14061
  br i1 %2, label %9, label %3, !dbg !14062

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14063
  call void @llvm.dbg.value(metadata i8* %4, metadata !14059, metadata !DIExpression()), !dbg !14060
  %5 = icmp eq i8* %4, null, !dbg !14064
  br i1 %5, label %9, label %6, !dbg !14066

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14067
  %8 = icmp eq i8 %7, 0, !dbg !14068
  br i1 %8, label %9, label %10, !dbg !14069

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.237, i32 0, i32 0), metadata !14059, metadata !DIExpression()), !dbg !14060
  br label %10, !dbg !14070

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.237, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14060
  call void @llvm.dbg.value(metadata i8* %11, metadata !14059, metadata !DIExpression()), !dbg !14060
  ret i8* %11, !dbg !14072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.236(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14073 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14077, metadata !DIExpression()), !dbg !14078
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14079, !srcloc !14081
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14082
  ret void, !dbg !14083
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.244() unnamed_addr #6 !dbg !14084 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14085, !srcloc !14087
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14088
  ret %struct.k_thread* %1, !dbg !14089
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14090 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14094, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i32 %1, metadata !14095, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.value(metadata i32 %2, metadata !14096, metadata !DIExpression()), !dbg !14097
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14098
  ret void, !dbg !14099
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14104, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i8* %1, metadata !14105, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata i32 %2, metadata !14106, metadata !DIExpression()), !dbg !14107
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14108
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14110 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14111
  ret void, !dbg !14112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14115, metadata !DIExpression()), !dbg !14116
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14117
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14118
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14119
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14120
  %4 = trunc i32 %0 to i8, !dbg !14121
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14122
  store i8 %4, i8* %5, align 4, !dbg !14123
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14124
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14125
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14126
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14127
  store i8* %8, i8** %9, align 4, !dbg !14128
  ret void, !dbg !14129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14132, metadata !DIExpression()), !dbg !14138
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14139
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14133, metadata !DIExpression()), !dbg !14138
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14140
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14134, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.value(metadata i8* null, metadata !14137, metadata !DIExpression()), !dbg !14138
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14141
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14142
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14143
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14144
  ret void, !dbg !14145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14146 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14150, metadata !DIExpression()), !dbg !14151
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14152
  ret i8* %2, !dbg !14153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14154 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14159, metadata !DIExpression()), !dbg !14160
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14161
  %3 = load i8, i8* %2, align 1, !dbg !14162
  %4 = and i8 %3, -5, !dbg !14162
  store i8 %4, i8* %2, align 1, !dbg !14162
  ret void, !dbg !14163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14164 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14166, metadata !DIExpression()), !dbg !14168
  call void @llvm.dbg.value(metadata i32 %1, metadata !14167, metadata !DIExpression()), !dbg !14168
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14169
  ret void, !dbg !14170
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14176, metadata !DIExpression()), !dbg !14178
  call void @llvm.dbg.value(metadata i32 %1, metadata !14177, metadata !DIExpression()), !dbg !14178
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14179, !srcloc !14181
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14182
  ret void, !dbg !14183
}

; Function Attrs: optsize
declare !dbg !14184 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14185 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14188
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14189
  %3 = ptrtoint i8* %2 to i32, !dbg !14198
  %4 = add i32 %3, 2048, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %4, metadata !14193, metadata !DIExpression()) #26, !dbg !14200
  call void @llvm.dbg.value(metadata i32 %4, metadata !14201, metadata !DIExpression()) #26, !dbg !14204
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14206, !srcloc !14207
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14208
  %6 = or i32 %5, 512, !dbg !14208
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14208
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -2, i32 noundef 255) #27, !dbg !14209
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -5, i32 noundef 0) #27, !dbg !14212
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -12, i32 noundef 0) #27, !dbg !14213
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -11, i32 noundef 0) #27, !dbg !14214
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -10, i32 noundef 0) #27, !dbg !14215
  tail call fastcc void @__NVIC_SetPriority.253(i32 noundef -4, i32 noundef 0) #27, !dbg !14216
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14217
  %8 = or i32 %7, 458752, !dbg !14217
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14217
  tail call void @z_arm_fault_init() #27, !dbg !14218
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14219
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14220
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14223
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14224
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14225
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14226
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14226
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14187, metadata !DIExpression()), !dbg !14227
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14228
  call void @z_device_state_init() #27, !dbg !14229
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14230
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14231
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14232
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14233
  unreachable, !dbg !14233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2200, metadata !DIExpression()), !dbg !14234
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14235
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14235
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2201, metadata !DIExpression()), !dbg !14234
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2201, metadata !DIExpression()), !dbg !14234
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14236
  br i1 %7, label %8, label %35, !dbg !14237

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2201, metadata !DIExpression()), !dbg !14234
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14238
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14238
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2211, metadata !DIExpression()), !dbg !14239
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14240
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14240
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14241
  call void @llvm.dbg.value(metadata i32 %14, metadata !2215, metadata !DIExpression()), !dbg !14239
  %15 = icmp eq %struct.device* %11, null, !dbg !14242
  br i1 %15, label %32, label %16, !dbg !14244

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14245
  br i1 %17, label %26, label %18, !dbg !14248

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14249
  call void @llvm.dbg.value(metadata i32 %19, metadata !2215, metadata !DIExpression()), !dbg !14239
  %20 = icmp ult i32 %19, 255, !dbg !14251
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14251
  call void @llvm.dbg.value(metadata i32 %21, metadata !2215, metadata !DIExpression()), !dbg !14239
  %22 = trunc i32 %21 to i8, !dbg !14252
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14253
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14253
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14254
  store i8 %22, i8* %25, align 1, !dbg !14255
  br label %26, !dbg !14256

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14257
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14257
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14258
  %30 = load i8, i8* %29, align 1, !dbg !14259
  %31 = or i8 %30, 1, !dbg !14259
  store i8 %31, i8* %29, align 1, !dbg !14259
  br label %32, !dbg !14260

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14261
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2201, metadata !DIExpression()), !dbg !14234
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14236
  br i1 %34, label %8, label %35, !dbg !14237, !llvm.loop !14262

35:                                               ; preds = %32, %1
  ret void, !dbg !14264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.253(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !14265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14267, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %1, metadata !14268, metadata !DIExpression()), !dbg !14269
  %3 = trunc i32 %1 to i8, !dbg !14270
  %4 = shl i8 %3, 4, !dbg !14270
  %5 = and i32 %0, 15, !dbg !14273
  %6 = add nsw i32 %5, -4, !dbg !14274
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14275
  store volatile i8 %4, i8* %7, align 1, !dbg !14276
  ret void, !dbg !14277
}

; Function Attrs: optsize
declare !dbg !14278 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14282, metadata !DIExpression()), !dbg !14283
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14284
  store i8 1, i8* %2, align 1, !dbg !14285
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14286
  store i8 1, i8* %3, align 4, !dbg !14287
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14288
  store i32 0, i32* %4, align 4, !dbg !14289
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14290
  store i32 0, i32* %5, align 4, !dbg !14291
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14292
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14293
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14296 {
  tail call void @z_sched_init() #27, !dbg !14301
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14302
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.254, i32 0, i32 0)) #27, !dbg !14303
  call void @llvm.dbg.value(metadata i8* %1, metadata !14300, metadata !DIExpression()), !dbg !14304
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14305
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14306
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14307
  ret i8* %1, !dbg !14308
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14309 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14313, metadata !DIExpression()), !dbg !14314
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14315
  unreachable, !dbg !14316
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14319, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata i8* %1, metadata !14320, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata i8* %2, metadata !14321, metadata !DIExpression()), !dbg !14322
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14323
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !14324
  tail call void @boot_banner() #27, !dbg !14325
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !14326
  tail call void @z_init_static_threads() #27, !dbg !14327
  tail call void @main() #27, !dbg !14328
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14329
  %5 = and i8 %4, -2, !dbg !14329
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14329
  ret void, !dbg !14330
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14331 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14341, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i8* %1, metadata !14342, metadata !DIExpression()), !dbg !14343
  ret void, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14345 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14347, metadata !DIExpression()), !dbg !14349
  call void @llvm.dbg.value(metadata i8* %1, metadata !14348, metadata !DIExpression()), !dbg !14349
  ret void, !dbg !14350
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14351 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14352, !srcloc !14359
  call void @llvm.dbg.value(metadata i32 %1, metadata !14355, metadata !DIExpression()) #26, !dbg !14360
  %2 = icmp ne i32 %1, 0, !dbg !14361
  ret i1 %2, !dbg !14362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !14363 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14364
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14365
  %3 = load i8, i8* %2, align 4, !dbg !14366
  %4 = or i8 %3, 1, !dbg !14366
  store i8 %4, i8* %2, align 4, !dbg !14366
  ret void, !dbg !14367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !14368 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14369
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14370
  %3 = load i8, i8* %2, align 4, !dbg !14371
  %4 = and i8 %3, -2, !dbg !14371
  store i8 %4, i8* %2, align 4, !dbg !14371
  ret void, !dbg !14372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !14373 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14374
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14375
  %3 = load i8, i8* %2, align 4, !dbg !14375
  %4 = and i8 %3, 1, !dbg !14376
  %5 = icmp ne i8 %4, 0, !dbg !14377
  ret i1 %5, !dbg !14378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.value(metadata i8* %1, metadata !14384, metadata !DIExpression()), !dbg !14385
  ret i32 -88, !dbg !14386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14391, metadata !DIExpression()), !dbg !14392
  ret i8* null, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14398, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata i8* %1, metadata !14399, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata i32 %2, metadata !14400, metadata !DIExpression()), !dbg !14401
  ret i32 -88, !dbg !14402
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2340, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i8* %1, metadata !2341, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i32 %2, metadata !2342, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i32 0, metadata !2343, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i8 undef, metadata !2345, metadata !DIExpression()), !dbg !14403
  %4 = icmp eq i8* %1, null, !dbg !14404
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14406
  br i1 %6, label %46, label %7, !dbg !14406

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14407
  %9 = load i8, i8* %8, align 1, !dbg !14407
  call void @llvm.dbg.value(metadata i8 %9, metadata !2345, metadata !DIExpression()), !dbg !14403
  %10 = add i32 %2, -1, !dbg !14408
  call void @llvm.dbg.value(metadata i32 %10, metadata !2342, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i8 0, metadata !2346, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i8 %9, metadata !2345, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i32 0, metadata !2343, metadata !DIExpression()), !dbg !14403
  %11 = icmp eq i8 %9, 0, !dbg !14410
  br i1 %11, label %12, label %15, !dbg !14412

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14413
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14414
  store i8 0, i8* %14, align 1, !dbg !14415
  br label %46, !dbg !14416

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2346, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.value(metadata i8 %17, metadata !2345, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i32 %18, metadata !2343, metadata !DIExpression()), !dbg !14403
  %19 = zext i8 %17 to i32, !dbg !14417
  %20 = zext i8 %16 to i32, !dbg !14418
  %21 = shl nuw i32 1, %20, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %21, metadata !2344, metadata !DIExpression()), !dbg !14403
  %22 = and i32 %21, %19, !dbg !14420
  %23 = icmp eq i32 %22, 0, !dbg !14422
  br i1 %23, label %42, label %24, !dbg !14423

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14424
  %26 = sub i32 %10, %18, !dbg !14425
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14426
  %28 = load i8*, i8** %27, align 4, !dbg !14426
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14427
  %30 = load i32, i32* %29, align 4, !dbg !14427
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !14428
  %32 = add i32 %31, %18, !dbg !14429
  call void @llvm.dbg.value(metadata i32 %32, metadata !2343, metadata !DIExpression()), !dbg !14403
  %33 = trunc i32 %21 to i8, !dbg !14430
  %34 = xor i8 %33, -1, !dbg !14430
  %35 = and i8 %17, %34, !dbg !14430
  call void @llvm.dbg.value(metadata i8 %35, metadata !2345, metadata !DIExpression()), !dbg !14403
  %36 = icmp eq i8 %35, 0, !dbg !14431
  br i1 %36, label %12, label %37, !dbg !14433

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14434
  %39 = sub i32 %10, %32, !dbg !14436
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.257, i32 0, i32 0), i32 noundef 1) #28, !dbg !14437
  %41 = add i32 %40, %32, !dbg !14438
  call void @llvm.dbg.value(metadata i32 %41, metadata !2343, metadata !DIExpression()), !dbg !14403
  br label %42, !dbg !14439

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14403
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14403
  call void @llvm.dbg.value(metadata i8 %44, metadata !2345, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.value(metadata i32 %43, metadata !2343, metadata !DIExpression()), !dbg !14403
  %45 = add i8 %16, 1, !dbg !14440
  call void @llvm.dbg.value(metadata i8 %45, metadata !2346, metadata !DIExpression()), !dbg !14409
  br label %15, !dbg !14412

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.258, i32 0, i32 0), %3 ], !dbg !14403
  ret i8* %47, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14446, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i32 %1, metadata !14447, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i8* %2, metadata !14448, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.value(metadata i32 %3, metadata !14449, metadata !DIExpression()), !dbg !14451
  %5 = icmp ult i32 %1, %3, !dbg !14452
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %6, metadata !14450, metadata !DIExpression()), !dbg !14451
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14453
  ret i32 %6, !dbg !14454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14455 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14459, metadata !DIExpression()), !dbg !14460
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14461
  ret void, !dbg !14462
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14472, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14473, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 %2, metadata !14474, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14475, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i8* %4, metadata !14476, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i8* %5, metadata !14477, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i8* %6, metadata !14478, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 %7, metadata !14479, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i32 %8, metadata !14480, metadata !DIExpression()), !dbg !14483
  call void @llvm.dbg.value(metadata i8* undef, metadata !14481, metadata !DIExpression()), !dbg !14483
  %11 = icmp eq i32 %7, 15, !dbg !14484
  br i1 %11, label %12, label %15, !dbg !14484

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14484
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !14484
  br i1 %14, label %19, label %18, !dbg !14484

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14484
  %17 = icmp ult i32 %16, 31, !dbg !14484
  br i1 %17, label %19, label %18, !dbg !14484

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 536) #27, !dbg !14488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.271, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !14488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 536) #27, !dbg !14488
  unreachable, !dbg !14488

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14490
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !14491
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14492
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !14493
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !14494
  call void @llvm.dbg.value(metadata i8* %22, metadata !14482, metadata !DIExpression()), !dbg !14483
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14495
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14496
  store i8* null, i8** %23, align 4, !dbg !14497
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14498
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14498
  br i1 %25, label %29, label %26, !dbg !14500

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !14501
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !14501
  br label %29, !dbg !14502

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14483
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14503
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !14505
  ret i8* %22, !dbg !14506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !14507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14511, metadata !DIExpression()), !dbg !14512
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14513
  ret i1 %2, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !14515 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14520, metadata !DIExpression()), !dbg !14521
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14522
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !14523
  ret void, !dbg !14524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14525 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14530, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i32 %1, metadata !14531, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i32 %2, metadata !14532, metadata !DIExpression()), !dbg !14534
  call void @llvm.dbg.value(metadata i32 %3, metadata !14533, metadata !DIExpression()), !dbg !14534
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14535
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14536
  %6 = trunc i32 %3 to i8, !dbg !14537
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14538
  store i8 %6, i8* %7, align 4, !dbg !14539
  %8 = trunc i32 %2 to i8, !dbg !14540
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14541
  store i8 %8, i8* %9, align 1, !dbg !14542
  %10 = trunc i32 %1 to i8, !dbg !14543
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14544
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14544
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14544
  store i8 %10, i8* %13, align 2, !dbg !14545
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14546
  store i8 0, i8* %14, align 1, !dbg !14547
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !14548
  ret void, !dbg !14549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !14550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14554, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14555, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 %2, metadata !14556, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 0, metadata !14561, metadata !DIExpression()), !dbg !14562
  %4 = add i32 %2, 7, !dbg !14563
  %5 = and i32 %4, -8, !dbg !14563
  %6 = add i32 %5, 64, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %6, metadata !14557, metadata !DIExpression()), !dbg !14562
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.272(%struct.z_thread_stack_element* noundef %1) #28, !dbg !14565
  call void @llvm.dbg.value(metadata i8* %7, metadata !14560, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 %5, metadata !14558, metadata !DIExpression()), !dbg !14562
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14566
  call void @llvm.dbg.value(metadata i8* %8, metadata !14559, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 0, metadata !14561, metadata !DIExpression()), !dbg !14562
  %9 = ptrtoint i8* %7 to i32, !dbg !14567
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14568
  store i32 %9, i32* %10, align 4, !dbg !14569
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14570
  store i32 %5, i32* %11, align 4, !dbg !14571
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14572
  store i32 0, i32* %12, align 4, !dbg !14573
  call void @llvm.dbg.value(metadata i8* %8, metadata !14559, metadata !DIExpression()), !dbg !14562
  ret i8* %8, !dbg !14574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.272(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14575 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14579, metadata !DIExpression()), !dbg !14580
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14581
  ret i8* %2, !dbg !14582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14583 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14588, metadata !DIExpression()), !dbg !14589
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14590
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !14591
  ret void, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14593 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14595, metadata !DIExpression()), !dbg !14596
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14597
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !14598
  ret void, !dbg !14599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14604, metadata !DIExpression()), !dbg !14605
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14606
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14607
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14608
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14609
  ret void, !dbg !14610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14616, metadata !DIExpression()), !dbg !14617
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14618
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14619
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14620
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14621
  ret void, !dbg !14622
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14623 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14640, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14631, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14632, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i32 %2, metadata !14633, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14634, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i8* %4, metadata !14635, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i8* %5, metadata !14636, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i8* %6, metadata !14637, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i32 %7, metadata !14638, metadata !DIExpression()), !dbg !14641
  call void @llvm.dbg.value(metadata i32 %8, metadata !14639, metadata !DIExpression()), !dbg !14641
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14642, !srcloc !14359
  call void @llvm.dbg.value(metadata i32 %11, metadata !14355, metadata !DIExpression()) #26, !dbg !14647
  %12 = icmp eq i32 %11, 0, !dbg !14648
  br i1 %12, label %14, label %13, !dbg !14649

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 647) #27, !dbg !14650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.276, i32 0, i32 0)) #27, !dbg !14650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 647) #27, !dbg !14650
  unreachable, !dbg !14650

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14640, metadata !DIExpression()), !dbg !14641
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !14652
  %17 = icmp eq i64 %15, -1, !dbg !14653
  br i1 %17, label %19, label %18, !dbg !14655

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !14656
  br label %19, !dbg !14658

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14659
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14660 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14665, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14664, metadata !DIExpression()), !dbg !14666
  %4 = icmp eq i64 %3, 0, !dbg !14667
  br i1 %4, label %5, label %6, !dbg !14669

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14670
  br label %7, !dbg !14672

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !14673
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14680, metadata !DIExpression()), !dbg !14681
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14682, !srcloc !14684
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14685
  ret void, !dbg !14686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14687 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14690, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14689, metadata !DIExpression()), !dbg !14691
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14692
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14693
  ret void, !dbg !14694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14695 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14697, metadata !DIExpression()), !dbg !14716
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14717

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 750) #27, !dbg !14721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.280, i32 0, i32 0)) #27, !dbg !14721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 750) #27, !dbg !14721
  unreachable, !dbg !14721

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14697, metadata !DIExpression()), !dbg !14716
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14724
  br i1 %4, label %6, label %5, !dbg !14725

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14726
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14714, metadata !DIExpression()), !dbg !14727
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14728

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14732
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14732
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14734
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14734
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14735
  %12 = load i32, i32* %11, align 4, !dbg !14735
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14736
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14736
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14737
  %16 = load i8*, i8** %15, align 4, !dbg !14737
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14738
  %18 = load i8*, i8** %17, align 4, !dbg !14738
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14739
  %20 = load i8*, i8** %19, align 4, !dbg !14739
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14740
  %22 = load i32, i32* %21, align 4, !dbg !14740
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14741
  %24 = load i32, i32* %23, align 4, !dbg !14741
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !14742
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14743
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14744
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14745
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14745
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14746
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14697, metadata !DIExpression()), !dbg !14716
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14747
  br i1 %30, label %1, label %2, !dbg !14717, !llvm.loop !14748

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 781) #27, !dbg !14750
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.280, i32 0, i32 0)) #27, !dbg !14750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.270, i32 0, i32 0), i32 noundef 781) #27, !dbg !14750
  unreachable, !dbg !14750

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14714, metadata !DIExpression()), !dbg !14727
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14753
  br i1 %34, label %36, label %35, !dbg !14754

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !14755
  ret void, !dbg !14756

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14757
  %38 = load i32, i32* %37, align 4, !dbg !14757
  %39 = icmp eq i32 %38, -1, !dbg !14760
  br i1 %39, label %48, label %40, !dbg !14761

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14762
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14762
  %43 = icmp sgt i32 %38, 0, !dbg !14764
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14764
  %45 = zext i32 %44 to i64, !dbg !14764
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !14764
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14765
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !14765
  br label %48, !dbg !14766

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14767
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14714, metadata !DIExpression()), !dbg !14727
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14768
  br i1 %50, label %31, label %32, !dbg !14728, !llvm.loop !14769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14771 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14776, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i64 %0, metadata !14778, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 1000, metadata !14783, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i32 10000, metadata !14784, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 1, metadata !14785, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 0, metadata !14786, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 1, metadata !14787, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 0, metadata !14788, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 1, metadata !14789, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i8 0, metadata !14790, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i64 0, metadata !14791, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.value(metadata i64 0, metadata !14791, metadata !DIExpression()), !dbg !14795
  %2 = mul i64 %0, 10, !dbg !14797
  ret i64 %2, !dbg !14803
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14804 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14806, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata i8* %1, metadata !14807, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata i8* %2, metadata !14808, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata i8* %3, metadata !14809, metadata !DIExpression()), !dbg !14810
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14811
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14812
  %7 = load i8, i8* %6, align 4, !dbg !14813
  %8 = or i8 %7, 4, !dbg !14813
  store i8 %8, i8* %6, align 4, !dbg !14813
  tail call void @z_thread_essential_clear() #28, !dbg !14814
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14815
  unreachable, !dbg !14815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14816 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14821, metadata !DIExpression()), !dbg !14823
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14824
  %3 = load i32, i32* %2, align 4, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %3, metadata !14822, metadata !DIExpression()), !dbg !14823
  %4 = icmp eq i32 %3, 0, !dbg !14825
  br i1 %4, label %10, label %5, !dbg !14827

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14828
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14831
  %8 = zext i8 %7 to i32, !dbg !14832
  %9 = icmp eq i32 %6, %8, !dbg !14833
  br i1 %9, label %11, label %10, !dbg !14834

10:                                               ; preds = %5, %1
  br label %11, !dbg !14835

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14823
  ret i1 %12, !dbg !14836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !14837 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14839, metadata !DIExpression()), !dbg !14840
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14841
  %3 = load i32, i32* %2, align 4, !dbg !14841
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14843
  %5 = zext i8 %4 to i32, !dbg !14844
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14845
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14846
  %8 = or i32 %7, %5, !dbg !14847
  %9 = icmp eq i32 %3, %8, !dbg !14848
  br i1 %9, label %10, label %11, !dbg !14849

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14850
  br label %11, !dbg !14851

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14857, metadata !DIExpression()), !dbg !14858
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14859
  %3 = zext i8 %2 to i32, !dbg !14860
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14861
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14862
  %6 = or i32 %5, %3, !dbg !14863
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14864
  store i32 %6, i32* %7, align 4, !dbg !14865
  ret void, !dbg !14866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14871, metadata !DIExpression()), !dbg !14872
  ret i32 -134, !dbg !14873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14878, metadata !DIExpression()), !dbg !14880
  call void @llvm.dbg.value(metadata i32 %1, metadata !14879, metadata !DIExpression()), !dbg !14880
  ret i32 -134, !dbg !14881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !14882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14889, metadata !DIExpression()), !dbg !14891
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14890, metadata !DIExpression()), !dbg !14891
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14892
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14894
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14891
  ret i32 %6, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !14896 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14900, metadata !DIExpression()), !dbg !14901
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14902
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14901
  ret i32 %3, !dbg !14904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14905 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14907
  ret void, !dbg !14908
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14911, metadata !DIExpression()), !dbg !14914
  call void @llvm.dbg.value(metadata i8* %1, metadata !14912, metadata !DIExpression()), !dbg !14914
  call void @llvm.dbg.value(metadata i8* %2, metadata !14913, metadata !DIExpression()), !dbg !14914
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14915
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14915
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14915
  %7 = load i8, i8* %6, align 2, !dbg !14915
  %8 = icmp sgt i8 %7, -1, !dbg !14915
  br i1 %8, label %10, label %9, !dbg !14918

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 39) #27, !dbg !14919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 39) #27, !dbg !14919
  unreachable, !dbg !14919

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14921, !srcloc !14928
  call void @llvm.dbg.value(metadata i32 undef, metadata !14924, metadata !DIExpression()) #26, !dbg !14929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14925, metadata !DIExpression()) #26, !dbg !14929
  tail call fastcc void @k_cpu_idle() #28, !dbg !14930
  br label %10, !dbg !14931, !llvm.loop !14932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14934 {
  tail call void @arch_cpu_idle() #27, !dbg !14935
  ret void, !dbg !14936
}

; Function Attrs: optsize
declare !dbg !14937 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14938 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14956, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i8* %1, metadata !14957, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i32 %2, metadata !14958, metadata !DIExpression()), !dbg !14960
  call void @llvm.dbg.value(metadata i32 %3, metadata !14959, metadata !DIExpression()), !dbg !14960
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14961
  store i32 %2, i32* %5, align 4, !dbg !14962
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14963
  store i32 %3, i32* %6, align 4, !dbg !14964
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14965
  store i8* %1, i8** %7, align 4, !dbg !14966
  %8 = mul i32 %3, %2, !dbg !14967
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14968
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14969
  store i8* %9, i8** %10, align 4, !dbg !14970
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14971
  store i8* %1, i8** %11, align 4, !dbg !14972
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14973
  store i8* %1, i8** %12, align 4, !dbg !14974
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14975
  store i32 0, i32* %13, align 4, !dbg !14976
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14977
  store i8 0, i8* %14, align 4, !dbg !14978
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14979
  tail call fastcc void @z_waitq_init.294(%union.anon* noundef %15) #28, !dbg !14980
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !14981
  store i32 0, i32* %16, align 4, !dbg !14981
  ret void, !dbg !14982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.294(%union.anon* noundef %0) unnamed_addr #12 !dbg !14983 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14987, metadata !DIExpression()), !dbg !14988
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14989
  tail call fastcc void @sys_dlist_init.295(%struct._dnode* noundef %2) #28, !dbg !14990
  ret void, !dbg !14991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.295(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14992 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14997, metadata !DIExpression()), !dbg !14998
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14999
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15000
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15001
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15002
  ret void, !dbg !15003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15004 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15008, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 %1, metadata !15009, metadata !DIExpression()), !dbg !15014
  call void @llvm.dbg.value(metadata i32 %2, metadata !15010, metadata !DIExpression()), !dbg !15014
  %5 = bitcast i32* %4 to i8*, !dbg !15015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15015
  call void @llvm.dbg.value(metadata i32* %4, metadata !15013, metadata !DIExpression(DW_OP_deref)), !dbg !15014
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !15016
  br i1 %6, label %13, label %7, !dbg !15018

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %8, metadata !15013, metadata !DIExpression()), !dbg !15014
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15021
  call void @llvm.dbg.value(metadata i8* %9, metadata !15011, metadata !DIExpression()), !dbg !15014
  %10 = icmp eq i8* %9, null, !dbg !15022
  br i1 %10, label %13, label %11, !dbg !15024

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15025
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15027
  store i8 1, i8* %12, align 4, !dbg !15028
  call void @llvm.dbg.value(metadata i32 0, metadata !15012, metadata !DIExpression()), !dbg !15014
  br label %13, !dbg !15029

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15030
  call void @llvm.dbg.value(metadata i32 %14, metadata !15012, metadata !DIExpression()), !dbg !15014
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15031
  ret i32 %14, !dbg !15032
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15038, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i32 %1, metadata !15039, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata i32* %2, metadata !15040, metadata !DIExpression()), !dbg !15041
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15042
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15042
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15042
  store i32 %6, i32* %2, align 4, !dbg !15042
  ret i1 %5, !dbg !15043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15048, metadata !DIExpression()), !dbg !15049
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15050
  ret i8* %2, !dbg !15051
}

; Function Attrs: optsize
declare !dbg !15052 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15055 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15061
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15061
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15061
  br i1 %4, label %5, label %15, !dbg !15063

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15064
  %7 = load i8, i8* %6, align 4, !dbg !15064
  %8 = and i8 %7, 1, !dbg !15066
  %9 = icmp eq i8 %8, 0, !dbg !15067
  br i1 %9, label %15, label %10, !dbg !15068

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15069
  %12 = load i8*, i8** %11, align 4, !dbg !15069
  tail call void @k_free(i8* noundef %12) #27, !dbg !15071
  %13 = load i8, i8* %6, align 4, !dbg !15072
  %14 = and i8 %13, -2, !dbg !15072
  store i8 %14, i8* %6, align 4, !dbg !15072
  br label %15, !dbg !15073

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15060
  ret i32 %16, !dbg !15074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15075 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15081
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15082
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15083
  ret %struct.k_thread* %4, !dbg !15084
}

; Function Attrs: optsize
declare !dbg !15085 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15086 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15090, metadata !DIExpression()), !dbg !15091
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15092
  br i1 %2, label %6, label %3, !dbg !15092

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15093
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15093
  br label %6, !dbg !15092

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15092
  ret %struct._dnode* %7, !dbg !15094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15095 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15099, metadata !DIExpression()), !dbg !15100
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15101
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15101
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15102
  ret i1 %4, !dbg !15103
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15104 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15114, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15112, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata i8* %1, metadata !15113, metadata !DIExpression()), !dbg !15122
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15123, !srcloc !15132
  call void @llvm.dbg.value(metadata i32 %5, metadata !15126, metadata !DIExpression()) #26, !dbg !15133
  %6 = icmp eq i32 %5, 0, !dbg !15134
  %7 = icmp eq i64 %4, 0, !dbg !15135
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15135
  br i1 %8, label %10, label %9, !dbg !15135

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 118) #27, !dbg !15136
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.301, i32 0, i32 0)) #27, !dbg !15136
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 118) #27, !dbg !15136
  unreachable, !dbg !15136

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15139, metadata !DIExpression()) #26, !dbg !15146
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15148, !srcloc !15154
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #26, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15146
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15156
  br i1 %13, label %15, label %14, !dbg !15159

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15160
  unreachable, !dbg !15160

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15148
  call void @llvm.dbg.value(metadata i32 %16, metadata !15151, metadata !DIExpression()) #26, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %16, metadata !15145, metadata !DIExpression()) #26, !dbg !15146
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %16, metadata !15116, metadata !DIExpression()), !dbg !15122
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15163
  %18 = load i32, i32* %17, align 4, !dbg !15163
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15165
  %20 = load i32, i32* %19, align 4, !dbg !15165
  %21 = icmp ult i32 %18, %20, !dbg !15166
  br i1 %21, label %22, label %52, !dbg !15167

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15168
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15170
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15115, metadata !DIExpression()), !dbg !15122
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15171
  br i1 %25, label %34, label %26, !dbg !15173

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15174
  %28 = load i8*, i8** %27, align 4, !dbg !15174
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15176
  %30 = load i32, i32* %29, align 4, !dbg !15176
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15177
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15178, metadata !DIExpression()), !dbg !15184
  call void @llvm.dbg.value(metadata i32 0, metadata !15183, metadata !DIExpression()), !dbg !15184
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15186
  store i32 0, i32* %32, align 4, !dbg !15187
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15188
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15189
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15189
  br label %64, !dbg !15190

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15191
  %36 = load i8*, i8** %35, align 4, !dbg !15191
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15193
  %38 = load i32, i32* %37, align 4, !dbg !15193
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15194
  %40 = load i32, i32* %37, align 4, !dbg !15195
  %41 = load i8*, i8** %35, align 4, !dbg !15196
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15196
  store i8* %42, i8** %35, align 4, !dbg !15196
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15197
  %44 = load i8*, i8** %43, align 4, !dbg !15197
  %45 = icmp eq i8* %42, %44, !dbg !15199
  br i1 %45, label %46, label %49, !dbg !15200

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15201
  %48 = load i8*, i8** %47, align 4, !dbg !15201
  store i8* %48, i8** %35, align 4, !dbg !15203
  br label %49, !dbg !15204

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15205
  %51 = add i32 %50, 1, !dbg !15205
  store i32 %51, i32* %17, align 4, !dbg !15205
  call void @llvm.dbg.value(metadata i32 0, metadata !15121, metadata !DIExpression()), !dbg !15122
  br label %59, !dbg !15206

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15207

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15208
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15211
  store i8* %1, i8** %55, align 4, !dbg !15212
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15213
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15214
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15214
  call void @llvm.dbg.value(metadata i32 %58, metadata !15121, metadata !DIExpression()), !dbg !15122
  br label %64, !dbg !15215

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15216
  call void @llvm.dbg.value(metadata i32 %60, metadata !15121, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata i32 undef, metadata !15217, metadata !DIExpression()) #26, !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15222, metadata !DIExpression()) #26, !dbg !15223
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15225
  br i1 %61, label %63, label %62, !dbg !15228

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15229
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15229
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15229
  unreachable, !dbg !15229

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15217, metadata !DIExpression()) #26, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %16, metadata !15231, metadata !DIExpression()) #26, !dbg !15234
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15236, !srcloc !15237
  br label %64, !dbg !15238

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15122
  ret i32 %65, !dbg !15239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15250, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15251, metadata !DIExpression()), !dbg !15252
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15253
  %4 = load i32, i32* %3, align 4, !dbg !15253
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15254
  store i32 %4, i32* %5, align 4, !dbg !15255
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15256
  %7 = load i32, i32* %6, align 4, !dbg !15256
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15257
  store i32 %7, i32* %8, align 4, !dbg !15258
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15259
  %10 = load i32, i32* %9, align 4, !dbg !15259
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15260
  store i32 %10, i32* %11, align 4, !dbg !15261
  ret void, !dbg !15262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15263 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15269, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15267, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i8* %1, metadata !15268, metadata !DIExpression()), !dbg !15273
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15274, !srcloc !15132
  call void @llvm.dbg.value(metadata i32 %5, metadata !15126, metadata !DIExpression()) #26, !dbg !15279
  %6 = icmp eq i32 %5, 0, !dbg !15280
  %7 = icmp eq i64 %4, 0, !dbg !15281
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15281
  br i1 %8, label %10, label %9, !dbg !15281

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 208) #27, !dbg !15282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.301, i32 0, i32 0)) #27, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.300, i32 0, i32 0), i32 noundef 208) #27, !dbg !15282
  unreachable, !dbg !15282

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15139, metadata !DIExpression()) #26, !dbg !15285
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15287, !srcloc !15154
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #26, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15285
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15290
  br i1 %13, label %15, label %14, !dbg !15291

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15292
  unreachable, !dbg !15292

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15287
  call void @llvm.dbg.value(metadata i32 %16, metadata !15151, metadata !DIExpression()) #26, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %16, metadata !15145, metadata !DIExpression()) #26, !dbg !15285
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %16, metadata !15270, metadata !DIExpression()), !dbg !15273
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15294
  %18 = load i32, i32* %17, align 4, !dbg !15294
  %19 = icmp eq i32 %18, 0, !dbg !15296
  br i1 %19, label %61, label %20, !dbg !15297

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15298
  %22 = load i8*, i8** %21, align 4, !dbg !15298
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15300
  %24 = load i32, i32* %23, align 4, !dbg !15300
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15301
  %26 = load i32, i32* %23, align 4, !dbg !15302
  %27 = load i8*, i8** %21, align 4, !dbg !15303
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15303
  store i8* %28, i8** %21, align 4, !dbg !15303
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15304
  %30 = load i8*, i8** %29, align 4, !dbg !15304
  %31 = icmp eq i8* %28, %30, !dbg !15306
  br i1 %31, label %32, label %35, !dbg !15307

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15308
  %34 = load i8*, i8** %33, align 4, !dbg !15308
  store i8* %34, i8** %21, align 4, !dbg !15310
  br label %35, !dbg !15311

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15312
  %37 = add i32 %36, -1, !dbg !15312
  store i32 %37, i32* %17, align 4, !dbg !15312
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15313
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15314
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15271, metadata !DIExpression()), !dbg !15273
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15315
  br i1 %40, label %68, label %41, !dbg !15317

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15318
  %43 = load i8*, i8** %42, align 4, !dbg !15318
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15320
  %45 = load i8*, i8** %44, align 4, !dbg !15320
  %46 = load i32, i32* %23, align 4, !dbg !15321
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15322
  %48 = load i32, i32* %23, align 4, !dbg !15323
  %49 = load i8*, i8** %42, align 4, !dbg !15324
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15324
  store i8* %50, i8** %42, align 4, !dbg !15324
  %51 = load i8*, i8** %29, align 4, !dbg !15325
  %52 = icmp eq i8* %50, %51, !dbg !15327
  br i1 %52, label %53, label %56, !dbg !15328

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15329
  %55 = load i8*, i8** %54, align 4, !dbg !15329
  store i8* %55, i8** %42, align 4, !dbg !15331
  br label %56, !dbg !15332

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15333
  %58 = add i32 %57, 1, !dbg !15333
  store i32 %58, i32* %17, align 4, !dbg !15333
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15178, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.value(metadata i32 0, metadata !15183, metadata !DIExpression()), !dbg !15334
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15336
  store i32 0, i32* %59, align 4, !dbg !15337
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !15338
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15339
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !15339
  br label %73, !dbg !15340

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15341

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15342
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15345
  store i8* %1, i8** %64, align 4, !dbg !15346
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15347
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15348
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %67, metadata !15272, metadata !DIExpression()), !dbg !15273
  br label %73, !dbg !15349

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15350
  call void @llvm.dbg.value(metadata i32 %69, metadata !15272, metadata !DIExpression()), !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !15217, metadata !DIExpression()) #26, !dbg !15351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15222, metadata !DIExpression()) #26, !dbg !15351
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15353
  br i1 %70, label %72, label %71, !dbg !15354

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15355
  unreachable, !dbg !15355

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15217, metadata !DIExpression()) #26, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %16, metadata !15231, metadata !DIExpression()) #26, !dbg !15356
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15358, !srcloc !15237
  br label %73, !dbg !15359

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15273
  ret i32 %74, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15361 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15365, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i8* %1, metadata !15366, metadata !DIExpression()), !dbg !15369
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15139, metadata !DIExpression()) #26, !dbg !15371
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15373, !srcloc !15154
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15371
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15376
  br i1 %5, label %7, label %6, !dbg !15377

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15378
  unreachable, !dbg !15378

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15371
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15379
  call void @llvm.dbg.value(metadata i32 undef, metadata !15367, metadata !DIExpression()), !dbg !15369
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15380
  %9 = load i32, i32* %8, align 4, !dbg !15380
  %10 = icmp eq i32 %9, 0, !dbg !15382
  br i1 %10, label %17, label %11, !dbg !15383

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15384
  %13 = load i8*, i8** %12, align 4, !dbg !15384
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15386
  %15 = load i32, i32* %14, align 4, !dbg !15386
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !15387
  call void @llvm.dbg.value(metadata i32 0, metadata !15368, metadata !DIExpression()), !dbg !15369
  br label %17, !dbg !15388

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15389
  call void @llvm.dbg.value(metadata i32 %18, metadata !15368, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15217, metadata !DIExpression()) #26, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15222, metadata !DIExpression()) #26, !dbg !15390
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15392
  br i1 %19, label %21, label %20, !dbg !15393

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.306, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 194) #27, !dbg !15394
  unreachable, !dbg !15394

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %22, metadata !15151, metadata !DIExpression()) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i32 %22, metadata !15145, metadata !DIExpression()) #26, !dbg !15371
  call void @llvm.dbg.value(metadata i32 %22, metadata !15367, metadata !DIExpression()), !dbg !15369
  call void @llvm.dbg.value(metadata i32 undef, metadata !15217, metadata !DIExpression()) #26, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !15231, metadata !DIExpression()) #26, !dbg !15395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !15397, !srcloc !15237
  ret i32 %18, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15403, metadata !DIExpression()), !dbg !15406
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15407
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15139, metadata !DIExpression()) #26, !dbg !15408
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15410, !srcloc !15154
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !15152, metadata !DIExpression()) #26, !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15408
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15413
  br i1 %4, label %6, label %5, !dbg !15414

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !15415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.303, i32 0, i32 0), i32 noundef 148) #27, !dbg !15415
  unreachable, !dbg !15415

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15151, metadata !DIExpression()) #26, !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !15145, metadata !DIExpression()) #26, !dbg !15408
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !15404, metadata !DIExpression()), !dbg !15406
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15417
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15405, metadata !DIExpression()), !dbg !15406
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15418
  br i1 %9, label %15, label %10, !dbg !15419

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15178, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata i32 -35, metadata !15183, metadata !DIExpression()), !dbg !15420
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15423
  store i32 -35, i32* %12, align 4, !dbg !15424
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !15425
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15417
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15405, metadata !DIExpression()), !dbg !15406
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15418
  br i1 %14, label %15, label %10, !dbg !15419, !llvm.loop !15426

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15410
  call void @llvm.dbg.value(metadata i32 %16, metadata !15151, metadata !DIExpression()) #26, !dbg !15412
  call void @llvm.dbg.value(metadata i32 %16, metadata !15145, metadata !DIExpression()) #26, !dbg !15408
  call void @llvm.dbg.value(metadata i32 %16, metadata !15404, metadata !DIExpression()), !dbg !15406
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15428
  store i32 0, i32* %17, align 4, !dbg !15429
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15430
  %19 = load i8*, i8** %18, align 4, !dbg !15430
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15431
  store i8* %19, i8** %20, align 4, !dbg !15432
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15433
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !15433
  ret void, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15435 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15450, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i32 %1, metadata !15451, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i32 %2, metadata !15452, metadata !DIExpression()), !dbg !15453
  %4 = icmp eq i32 %2, 0, !dbg !15454
  %5 = icmp ugt i32 %1, %2, !dbg !15454
  %6 = or i1 %4, %5, !dbg !15454
  br i1 %6, label %11, label %7, !dbg !15454

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15456
  store i32 %1, i32* %8, align 4, !dbg !15457
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15458
  store i32 %2, i32* %9, align 4, !dbg !15459
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15460
  tail call fastcc void @z_waitq_init.309(%union.anon* noundef %10) #28, !dbg !15461
  br label %11, !dbg !15462

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15453
  ret i32 %12, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.309(%union.anon* noundef %0) unnamed_addr #12 !dbg !15464 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15469, metadata !DIExpression()), !dbg !15470
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15471
  tail call fastcc void @sys_dlist_init.310(%struct._dnode* noundef %2) #28, !dbg !15472
  ret void, !dbg !15473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.310(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15474 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15479, metadata !DIExpression()), !dbg !15480
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15481
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15482
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15483
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15484
  ret void, !dbg !15485
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15486 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15490, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.311, metadata !15577, metadata !DIExpression()) #26, !dbg !15584
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15586, !srcloc !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #26, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #26, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()) #26, !dbg !15584
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15594
  br i1 %3, label %5, label %4, !dbg !15597

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15598
  unreachable, !dbg !15598

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #26, !dbg !15593
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()) #26, !dbg !15584
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15600
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15576
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15601
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15602
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15496, metadata !DIExpression()), !dbg !15576
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15603
  br i1 %8, label %11, label %9, !dbg !15605

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15606, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.value(metadata i32 0, metadata !15611, metadata !DIExpression()), !dbg !15612
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15615
  store i32 0, i32* %10, align 4, !dbg !15616
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15617
  br label %19, !dbg !15618

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15619
  %13 = load i32, i32* %12, align 4, !dbg !15619
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15621
  %15 = load i32, i32* %14, align 4, !dbg !15621
  %16 = icmp ne i32 %13, %15, !dbg !15622
  %17 = zext i1 %16 to i32, !dbg !15623
  %18 = add i32 %13, %17, !dbg !15624
  store i32 %18, i32* %12, align 4, !dbg !15624
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !15586
  call void @llvm.dbg.value(metadata i32 %20, metadata !15589, metadata !DIExpression()) #26, !dbg !15593
  call void @llvm.dbg.value(metadata i32 %20, metadata !15583, metadata !DIExpression()) #26, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %20, metadata !15491, metadata !DIExpression()), !dbg !15576
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !15625
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.311, [1 x i32] %21) #27, !dbg !15625
  ret void, !dbg !15626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15627 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15636, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15635, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.value(metadata i32 0, metadata !15637, metadata !DIExpression()), !dbg !15640
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15641, !srcloc !15650
  call void @llvm.dbg.value(metadata i32 %4, metadata !15644, metadata !DIExpression()) #26, !dbg !15651
  %5 = icmp eq i32 %4, 0, !dbg !15652
  %6 = icmp eq i64 %3, 0, !dbg !15653
  %7 = select i1 %5, i1 true, i1 %6, !dbg !15653
  br i1 %7, label %9, label %8, !dbg !15653

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 122) #27, !dbg !15654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.320, i32 0, i32 0)) #27, !dbg !15654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.319, i32 0, i32 0), i32 noundef 122) #27, !dbg !15654
  unreachable, !dbg !15654

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.311, metadata !15577, metadata !DIExpression()) #26, !dbg !15656
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15658, !srcloc !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #26, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #26, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()) #26, !dbg !15656
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15661
  br i1 %11, label %13, label %12, !dbg !15662

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15663
  unreachable, !dbg !15663

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !15658
  call void @llvm.dbg.value(metadata i32 %14, metadata !15589, metadata !DIExpression()) #26, !dbg !15660
  call void @llvm.dbg.value(metadata i32 %14, metadata !15583, metadata !DIExpression()) #26, !dbg !15656
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15664
  call void @llvm.dbg.value(metadata i32 %14, metadata !15638, metadata !DIExpression()), !dbg !15640
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15665
  %16 = load i32, i32* %15, align 4, !dbg !15665
  %17 = icmp eq i32 %16, 0, !dbg !15665
  br i1 %17, label %23, label %18, !dbg !15667, !prof !15668

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !15669
  store i32 %19, i32* %15, align 4, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !15671, metadata !DIExpression()) #26, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.311, metadata !15676, metadata !DIExpression()) #26, !dbg !15677
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15679
  br i1 %20, label %22, label %21, !dbg !15682

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 194) #27, !dbg !15683
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.322, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15683
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 194) #27, !dbg !15683
  unreachable, !dbg !15683

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !15671, metadata !DIExpression()) #26, !dbg !15677
  call void @llvm.dbg.value(metadata i32 %14, metadata !15685, metadata !DIExpression()) #26, !dbg !15688
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15690, !srcloc !15691
  call void @llvm.dbg.value(metadata i32 0, metadata !15637, metadata !DIExpression()), !dbg !15640
  br label %32, !dbg !15692

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !15693

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !15671, metadata !DIExpression()) #26, !dbg !15694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.311, metadata !15676, metadata !DIExpression()) #26, !dbg !15694
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15698
  br i1 %25, label %27, label %26, !dbg !15699

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 194) #27, !dbg !15700
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.322, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15700
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 194) #27, !dbg !15700
  unreachable, !dbg !15700

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !15671, metadata !DIExpression()) #26, !dbg !15694
  call void @llvm.dbg.value(metadata i32 %14, metadata !15685, metadata !DIExpression()) #26, !dbg !15701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15703, !srcloc !15691
  call void @llvm.dbg.value(metadata i32 -16, metadata !15637, metadata !DIExpression()), !dbg !15640
  br label %32, !dbg !15704

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15705
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !15706
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.311, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !15706
  call void @llvm.dbg.value(metadata i32 %31, metadata !15637, metadata !DIExpression()), !dbg !15640
  br label %32, !dbg !15707

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !15640
  call void @llvm.dbg.value(metadata i32 %33, metadata !15637, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.label(metadata !15639), !dbg !15708
  ret i32 %33, !dbg !15709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15710 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15712, metadata !DIExpression()), !dbg !15715
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.311, metadata !15577, metadata !DIExpression()) #26, !dbg !15716
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15718, !srcloc !15592
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #26, !dbg !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15590, metadata !DIExpression()) #26, !dbg !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()) #26, !dbg !15716
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15721
  br i1 %3, label %5, label %4, !dbg !15722

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.315, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.314, i32 0, i32 0), i32 noundef 148) #27, !dbg !15723
  unreachable, !dbg !15723

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()) #26, !dbg !15720
  call void @llvm.dbg.value(metadata i32 undef, metadata !15583, metadata !DIExpression()) #26, !dbg !15716
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.311) #27, !dbg !15724
  call void @llvm.dbg.value(metadata i32 undef, metadata !15714, metadata !DIExpression()), !dbg !15715
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15713, metadata !DIExpression()), !dbg !15715
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15727
  br i1 %8, label %14, label %9, !dbg !15729

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !15606, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 -11, metadata !15611, metadata !DIExpression()), !dbg !15730
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !15732
  store i32 -11, i32* %11, align 4, !dbg !15733
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !15734
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15725
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !15713, metadata !DIExpression()), !dbg !15715
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !15727
  br i1 %13, label %14, label %9, !dbg !15729, !llvm.loop !15735

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15718
  call void @llvm.dbg.value(metadata i32 %15, metadata !15589, metadata !DIExpression()) #26, !dbg !15720
  call void @llvm.dbg.value(metadata i32 %15, metadata !15583, metadata !DIExpression()) #26, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %15, metadata !15714, metadata !DIExpression()), !dbg !15715
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15738
  store i32 0, i32* %16, align 4, !dbg !15739
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15740
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.311, [1 x i32] %17) #27, !dbg !15740
  ret void, !dbg !15741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15746, metadata !DIExpression()), !dbg !15750
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15747, metadata !DIExpression()), !dbg !15750
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15751
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15751
  %5 = load i8, i8* %4, align 2, !dbg !15751
  call void @llvm.dbg.value(metadata i8 %5, metadata !15748, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15750
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15752
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15752
  %8 = load i8, i8* %7, align 2, !dbg !15752
  call void @llvm.dbg.value(metadata i8 %8, metadata !15749, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15750
  %9 = icmp eq i8 %8, %5, !dbg !15753
  %10 = sext i8 %5 to i32, !dbg !15755
  %11 = sext i8 %8 to i32, !dbg !15755
  %12 = sub nsw i32 %11, %10, !dbg !15755
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15755
  ret i32 %13, !dbg !15756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15761, metadata !DIExpression()), !dbg !15762
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !15763
  %3 = icmp eq i32 %2, 0, !dbg !15765
  br i1 %3, label %8, label %4, !dbg !15766

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15767
  %6 = add i32 %5, %2, !dbg !15769
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15770
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !15771
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15772
  br label %8, !dbg !15773

8:                                                ; preds = %4, %1
  ret void, !dbg !15774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15779, metadata !DIExpression()), !dbg !15781
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %1, metadata !15780, metadata !DIExpression()), !dbg !15781
  ret i32 %1, !dbg !15783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15788, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 %1, metadata !15789, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !15806
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15808, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !15806
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15816
  br i1 %4, label %6, label %5, !dbg !15819

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !15820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !15820
  unreachable, !dbg !15820

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !15806
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !15796, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15798
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15823
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !15826
  %8 = icmp sgt i32 %0, 0, !dbg !15827
  %9 = icmp sgt i32 %7, 2, !dbg !15829
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15829
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15829
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15830
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15831
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !15839
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15841
  br i1 %12, label %14, label %13, !dbg !15844

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15845
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15845
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15845
  unreachable, !dbg !15845

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15808
  call void @llvm.dbg.value(metadata i32 %15, metadata !15811, metadata !DIExpression()) #26, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %15, metadata !15805, metadata !DIExpression()) #26, !dbg !15806
  call void @llvm.dbg.value(metadata i32 %15, metadata !15796, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !15839
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !15850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15852, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !15790, metadata !DIExpression()), !dbg !15798
  call void @llvm.dbg.value(metadata i32 undef, metadata !15790, metadata !DIExpression()), !dbg !15798
  ret void, !dbg !15854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15857, metadata !DIExpression()), !dbg !15858
  call void @llvm.dbg.value(metadata i32 %0, metadata !15859, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15874
  call void @llvm.dbg.value(metadata i32 1000, metadata !15862, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata i32 10000, metadata !15863, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata i8 1, metadata !15864, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata i1 true, metadata !15865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15874
  call void @llvm.dbg.value(metadata i1 true, metadata !15866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15874
  call void @llvm.dbg.value(metadata i8 0, metadata !15867, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata i1 true, metadata !15868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15874
  call void @llvm.dbg.value(metadata i1 false, metadata !15869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15874
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !15874
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !15874
  %2 = mul i32 %0, 10, !dbg !15876
  ret i32 %2, !dbg !15882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15885, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !15888
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15890, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !15892
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !15892
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !15888
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15893
  br i1 %3, label %5, label %4, !dbg !15894

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !15895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !15895
  unreachable, !dbg !15895

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %6, metadata !15811, metadata !DIExpression()) #26, !dbg !15892
  call void @llvm.dbg.value(metadata i32 %6, metadata !15805, metadata !DIExpression()) #26, !dbg !15888
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15896
  call void @llvm.dbg.value(metadata i32 %6, metadata !15886, metadata !DIExpression()), !dbg !15887
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15897
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15899
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15900
  br i1 %9, label %10, label %14, !dbg !15901

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !15904
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15906
  br i1 %11, label %13, label %12, !dbg !15907

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15908
  unreachable, !dbg !15908

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !15909
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15911, !srcloc !15853
  br label %33, !dbg !15912

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15913
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !15914
  %16 = icmp eq i32 %15, 0, !dbg !15914
  br i1 %16, label %27, label %17, !dbg !15916

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !15917
  br i1 %18, label %19, label %27, !dbg !15918

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15919
  %21 = icmp sgt i32 %20, %0, !dbg !15922
  br i1 %21, label %25, label %22, !dbg !15923

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15924
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !15924
  call void @llvm.dbg.value(metadata i32 %24, metadata !15886, metadata !DIExpression()), !dbg !15887
  br label %28, !dbg !15926

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15927
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15927
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15929
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15887
  call void @llvm.dbg.value(metadata i32 %29, metadata !15886, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !15931
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15933
  br i1 %30, label %32, label %31, !dbg !15934

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !15935
  unreachable, !dbg !15935

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15833, metadata !DIExpression()) #26, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %29, metadata !15847, metadata !DIExpression()) #26, !dbg !15936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !15938, !srcloc !15853
  br label %33, !dbg !15939

33:                                               ; preds = %32, %13
  ret void, !dbg !15939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !15940 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15944, metadata !DIExpression()), !dbg !15946
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !15947
  %3 = icmp eq i32 %2, 0, !dbg !15947
  br i1 %3, label %16, label %4, !dbg !15948

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !15949
  br i1 %5, label %16, label %6, !dbg !15950

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15951
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15951
  %9 = load i8, i8* %8, align 2, !dbg !15951
  %10 = sext i8 %9 to i32, !dbg !15952
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15953
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !15954
  br i1 %12, label %16, label %13, !dbg !15955

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !15956
  %15 = xor i1 %14, true, !dbg !15957
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15946
  call void @llvm.dbg.value(metadata i1 %17, metadata !15945, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15946
  ret i1 %17, !dbg !15958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15959 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15963, metadata !DIExpression()), !dbg !15965
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15966
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15964, metadata !DIExpression()), !dbg !15965
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !15967
  br i1 %3, label %5, label %4, !dbg !15969

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !15970
  br label %5, !dbg !15972

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15963, metadata !DIExpression()), !dbg !15965
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15973
  ret i32 %6, !dbg !15974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15975 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15977, metadata !DIExpression()), !dbg !15979
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15980
  %3 = load i8, i8* %2, align 1, !dbg !15980
  call void @llvm.dbg.value(metadata i8 %3, metadata !15978, metadata !DIExpression()), !dbg !15979
  %4 = and i8 %3, 31, !dbg !15981
  %5 = icmp ne i8 %4, 0, !dbg !15982
  ret i1 %5, !dbg !15983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15986, metadata !DIExpression()), !dbg !15987
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !15988
  br i1 %2, label %3, label %7, !dbg !15990

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15991, metadata !DIExpression()) #26, !dbg !15994
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15997
  %5 = load i8, i8* %4, align 1, !dbg !15998
  %6 = and i8 %5, 127, !dbg !15998
  store i8 %6, i8* %4, align 1, !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()) #26, !dbg !16002
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16006
  br label %7, !dbg !16007

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !16011
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16013
  %9 = load i8, i8* %8, align 1, !dbg !16014
  %10 = or i8 %9, -128, !dbg !16014
  store i8 %10, i8* %8, align 1, !dbg !16014
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16015, metadata !DIExpression()) #26, !dbg !16018
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16022, metadata !DIExpression()) #26, !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16028, metadata !DIExpression()) #26, !dbg !16030
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16032
  br i1 %11, label %12, label %13, !dbg !16035

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16036
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16036
  unreachable, !dbg !16036

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16038
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16029, metadata !DIExpression()) #26, !dbg !16030
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16040
  br i1 %15, label %26, label %16, !dbg !16038

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16029, metadata !DIExpression()) #26, !dbg !16030
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16042
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16029, metadata !DIExpression()) #26, !dbg !16030
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16043
  %20 = icmp sgt i32 %19, 0, !dbg !16046
  br i1 %20, label %21, label %23, !dbg !16047

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16048
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16050
  br label %28, !dbg !16051

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16040
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16029, metadata !DIExpression()) #26, !dbg !16030
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16040
  br i1 %25, label %26, label %16, !dbg !16038, !llvm.loop !16052

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16054
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16055
  br label %28, !dbg !16056

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16057
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16058
  %31 = zext i1 %30 to i32, !dbg !16058
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16059
  ret void, !dbg !16060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16063, metadata !DIExpression()), !dbg !16064
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16065
  ret i1 %2, !dbg !16066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16069, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16070, metadata !DIExpression()), !dbg !16071
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16072
  br i1 %3, label %4, label %5, !dbg !16075

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16076
  unreachable, !dbg !16076

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16078
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16079
  ret void, !dbg !16080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16083, metadata !DIExpression()), !dbg !16084
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16085
  ret i1 %2, !dbg !16086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16087 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16091, metadata !DIExpression()), !dbg !16092
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.334(%struct._dnode* noundef %0) #28, !dbg !16093
  br i1 %2, label %6, label %3, !dbg !16093

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16094
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16094
  br label %6, !dbg !16093

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16093
  ret %struct._dnode* %7, !dbg !16095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16096 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16100, metadata !DIExpression()), !dbg !16104
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16101, metadata !DIExpression()), !dbg !16104
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16105
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16105
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16102, metadata !DIExpression()), !dbg !16104
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16106
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16107
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16108
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16109
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16110
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16111
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16112
  ret void, !dbg !16113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16114 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16118, metadata !DIExpression()), !dbg !16120
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16119, metadata !DIExpression()), !dbg !16120
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16121
  br i1 %3, label %6, label %4, !dbg !16122

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16123
  br label %6, !dbg !16122

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16122
  ret %struct._dnode* %7, !dbg !16124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16125 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16129, metadata !DIExpression()), !dbg !16132
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16130, metadata !DIExpression()), !dbg !16132
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16133
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16133
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16131, metadata !DIExpression()), !dbg !16132
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16134
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16135
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16136
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16137
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16138
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16139
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16140
  ret void, !dbg !16141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16144, metadata !DIExpression()), !dbg !16146
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16154, metadata !DIExpression()) #26, !dbg !16157
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16158
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16155, metadata !DIExpression()) #26, !dbg !16157
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16159
  br i1 %4, label %13, label %5, !dbg !16161

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16162
  br i1 %6, label %10, label %7, !dbg !16163

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16164
  %9 = icmp eq i32 %8, 0, !dbg !16164
  br i1 %9, label %10, label %13, !dbg !16165

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16166
  br i1 %11, label %12, label %13, !dbg !16169

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16170
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16157
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16154, metadata !DIExpression()) #26, !dbg !16157
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16172
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16173
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16173
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16145, metadata !DIExpression()), !dbg !16146
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16174, metadata !DIExpression()) #26, !dbg !16180
  call void @llvm.dbg.value(metadata i32 %0, metadata !16179, metadata !DIExpression()) #26, !dbg !16180
  %18 = icmp eq i32 %0, 0, !dbg !16183
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16185
  br i1 %18, label %20, label %33, !dbg !16186

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16187
  br i1 %21, label %22, label %23, !dbg !16190

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 137) #27, !dbg !16191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !16191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 137) #27, !dbg !16191
  unreachable, !dbg !16191

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16193
  br i1 %24, label %33, label %25, !dbg !16195

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16196
  br i1 %26, label %33, label %27, !dbg !16198

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16199
  %29 = icmp eq i32 %28, 0, !dbg !16199
  br i1 %29, label %30, label %33, !dbg !16201

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16202
  %32 = icmp eq i32 %31, 0, !dbg !16202
  br i1 %32, label %37, label %33, !dbg !16203

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16204
  br i1 %34, label %36, label %35, !dbg !16207

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16208
  br label %36, !dbg !16210

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16211
  br label %37, !dbg !16212

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16185
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16185
  ret void, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16218, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16219, metadata !DIExpression()), !dbg !16221
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef %0) #28, !dbg !16222
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16220, metadata !DIExpression()), !dbg !16221
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16219, metadata !DIExpression()), !dbg !16221
  ret %struct.k_thread* %3, !dbg !16223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16226, metadata !DIExpression()), !dbg !16227
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16228
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16228
  %4 = load i8, i8* %3, align 2, !dbg !16228
  %5 = icmp slt i8 %4, -15, !dbg !16229
  %6 = zext i1 %5 to i32, !dbg !16229
  ret i32 %6, !dbg !16230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16233, metadata !DIExpression()), !dbg !16234
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16235
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16236
  %4 = xor i1 %3, true, !dbg !16237
  ret i1 %4, !dbg !16238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16241, metadata !DIExpression()), !dbg !16242
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16243
  %3 = load i16, i16* %2, align 2, !dbg !16243
  %4 = icmp ult i16 %3, 128, !dbg !16244
  %5 = zext i1 %4 to i32, !dbg !16244
  ret i32 %5, !dbg !16245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16246 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16248, metadata !DIExpression()), !dbg !16249
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16250
  %3 = icmp eq i32 %2, 0, !dbg !16250
  br i1 %3, label %11, label %4, !dbg !16252

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16253
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16254
  %7 = icmp eq i32 %6, 0, !dbg !16254
  br i1 %7, label %8, label %15, !dbg !16255

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16256
  %10 = icmp eq i32 %9, 0, !dbg !16256
  br i1 %10, label %13, label %15, !dbg !16257

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16258
  br i1 %12, label %15, label %13, !dbg !16260

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16261
  br label %15, !dbg !16262

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16263 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16269, metadata !DIExpression()), !dbg !16270
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16271
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16272
  %4 = xor i1 %3, true, !dbg !16273
  ret i1 %4, !dbg !16274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16275 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16281, metadata !DIExpression()), !dbg !16282
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16283
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16283
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16284
  ret i1 %4, !dbg !16285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16286 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16288, metadata !DIExpression()), !dbg !16290
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16289, metadata !DIExpression()), !dbg !16290
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16291
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16291
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16292
  br i1 %5, label %9, label %6, !dbg !16293

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16294
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16294
  br label %9, !dbg !16293

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16293
  ret %struct._dnode* %10, !dbg !16295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.334(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16300, metadata !DIExpression()), !dbg !16301
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16302
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16302
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16303
  ret i1 %4, !dbg !16304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16305 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16309, metadata !DIExpression()), !dbg !16312
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16313
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16313
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16310, metadata !DIExpression()), !dbg !16312
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16314
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16314
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16311, metadata !DIExpression()), !dbg !16312
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16315
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16316
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16317
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16318
  tail call fastcc void @sys_dnode_init.335(%struct._dnode* noundef %0) #28, !dbg !16319
  ret void, !dbg !16320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.335(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16321 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16323, metadata !DIExpression()), !dbg !16324
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16325
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16326
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16327
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16328
  ret void, !dbg !16329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !16330 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16334, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata i32 %1, metadata !16335, metadata !DIExpression()), !dbg !16336
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16337
  %4 = load i8, i8* %3, align 1, !dbg !16337
  %5 = zext i8 %4 to i32, !dbg !16338
  %6 = and i32 %5, %1, !dbg !16339
  %7 = icmp ne i32 %6, 0, !dbg !16340
  ret i1 %7, !dbg !16341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16346, metadata !DIExpression()), !dbg !16348
  call void @llvm.dbg.value(metadata i32 %1, metadata !16347, metadata !DIExpression()), !dbg !16348
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !16349
  ret i1 %3, !dbg !16350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16353, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.value(metadata i32 %1, metadata !16354, metadata !DIExpression()), !dbg !16355
  %3 = icmp slt i32 %0, %1, !dbg !16356
  ret i1 %3, !dbg !16357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16360, metadata !DIExpression()), !dbg !16364
  call void @llvm.dbg.value(metadata i32 0, metadata !16361, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16366
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16368, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16366
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16371
  br i1 %3, label %5, label %4, !dbg !16372

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16373
  unreachable, !dbg !16373

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16366
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16374
  call void @llvm.dbg.value(metadata i32 undef, metadata !16363, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 undef, metadata !16361, metadata !DIExpression()), !dbg !16365
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16380
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16380
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16382
  br i1 %6, label %8, label %7, !dbg !16383

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16384
  unreachable, !dbg !16384

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16368
  call void @llvm.dbg.value(metadata i32 %9, metadata !15811, metadata !DIExpression()) #26, !dbg !16370
  call void @llvm.dbg.value(metadata i32 %9, metadata !15805, metadata !DIExpression()) #26, !dbg !16366
  call void @llvm.dbg.value(metadata i32 %9, metadata !16363, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16380
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !16385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16387, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16361, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 undef, metadata !16361, metadata !DIExpression()), !dbg !16365
  ret void, !dbg !16388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16391, metadata !DIExpression()), !dbg !16392
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16393
  br i1 %2, label %27, label %3, !dbg !16395

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !16396
  br i1 %4, label %5, label %27, !dbg !16397

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !16398
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16401
  %7 = load i8, i8* %6, align 1, !dbg !16402
  %8 = or i8 %7, -128, !dbg !16402
  store i8 %8, i8* %6, align 1, !dbg !16402
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16015, metadata !DIExpression()) #26, !dbg !16403
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16022, metadata !DIExpression()) #26, !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16028, metadata !DIExpression()) #26, !dbg !16405
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16407
  br i1 %9, label %10, label %11, !dbg !16408

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16409
  unreachable, !dbg !16409

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16410
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16029, metadata !DIExpression()) #26, !dbg !16405
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16411
  br i1 %13, label %24, label %14, !dbg !16410

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16029, metadata !DIExpression()) #26, !dbg !16405
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16412
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16029, metadata !DIExpression()) #26, !dbg !16405
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !16413
  %18 = icmp sgt i32 %17, 0, !dbg !16414
  br i1 %18, label %19, label %21, !dbg !16415

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16416
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !16417
  br label %26, !dbg !16418

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !16411
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16029, metadata !DIExpression()) #26, !dbg !16405
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16411
  br i1 %23, label %24, label %14, !dbg !16410, !llvm.loop !16419

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16421
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !16422
  br label %26, !dbg !16423

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !16424
  br label %27, !dbg !16425

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16427 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16429, metadata !DIExpression()), !dbg !16430
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16431
  br i1 %2, label %6, label %3, !dbg !16432

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !16433
  %5 = xor i1 %4, true, !dbg !16432
  br label %6, !dbg !16432

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16437, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i32 0, metadata !16438, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16443
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16445, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16447
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16447
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16443
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16448
  br i1 %3, label %5, label %4, !dbg !16449

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16450
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16450
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16450
  unreachable, !dbg !16450

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16447
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16443
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16451
  call void @llvm.dbg.value(metadata i32 undef, metadata !16440, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16438, metadata !DIExpression()), !dbg !16442
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !16452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16455
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16457
  br i1 %6, label %8, label %7, !dbg !16458

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16459
  unreachable, !dbg !16459

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16445
  call void @llvm.dbg.value(metadata i32 %9, metadata !15811, metadata !DIExpression()) #26, !dbg !16447
  call void @llvm.dbg.value(metadata i32 %9, metadata !15805, metadata !DIExpression()) #26, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %9, metadata !16440, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16455
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !16460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16462, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16438, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16438, metadata !DIExpression()), !dbg !16442
  ret void, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16464 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16466, metadata !DIExpression()), !dbg !16468
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16469
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16471, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16473
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16469
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16474
  br i1 %3, label %5, label %4, !dbg !16475

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16476
  unreachable, !dbg !16476

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16471
  call void @llvm.dbg.value(metadata i32 %6, metadata !15811, metadata !DIExpression()) #26, !dbg !16473
  call void @llvm.dbg.value(metadata i32 %6, metadata !15805, metadata !DIExpression()) #26, !dbg !16469
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16477
  call void @llvm.dbg.value(metadata i32 %6, metadata !16467, metadata !DIExpression()), !dbg !16468
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !16478
  br i1 %7, label %8, label %12, !dbg !16480

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16481
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16484
  br i1 %9, label %11, label %10, !dbg !16485

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16486
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16486
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16486
  unreachable, !dbg !16486

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !16481
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !16487
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16489, !srcloc !15853
  br label %14, !dbg !16490

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.340(%struct.k_thread* noundef %0) #28, !dbg !16491
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16492
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16493
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16493
  br label %14, !dbg !16494

14:                                               ; preds = %12, %11
  ret void, !dbg !16494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16495 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16497, metadata !DIExpression()), !dbg !16498
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16499
  %3 = load i8, i8* %2, align 1, !dbg !16499
  %4 = and i8 %3, 4, !dbg !16500
  %5 = icmp eq i8 %4, 0, !dbg !16501
  ret i1 %5, !dbg !16502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.340(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16503 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16505, metadata !DIExpression()), !dbg !16506
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16507
  %3 = load i8, i8* %2, align 1, !dbg !16508
  %4 = and i8 %3, -5, !dbg !16508
  store i8 %4, i8* %2, align 1, !dbg !16508
  ret void, !dbg !16509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16510 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16513, metadata !DIExpression()), !dbg !16514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16512, metadata !DIExpression()), !dbg !16514
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !16515
  br i1 %4, label %5, label %12, !dbg !16517

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !16518
  br i1 %6, label %7, label %12, !dbg !16519

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16525, metadata !DIExpression()) #26, !dbg !16526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16529, metadata !DIExpression()) #26, !dbg !16534
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16536
  br i1 %8, label %10, label %9, !dbg !16539

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !16540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !16540
  unreachable, !dbg !16540

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16520, metadata !DIExpression()) #26, !dbg !16526
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16542
  br label %16, !dbg !16543

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15838, metadata !DIExpression()) #26, !dbg !16544
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16547
  br i1 %13, label %15, label %14, !dbg !16548

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16549
  unreachable, !dbg !16549

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15833, metadata !DIExpression()) #26, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %3, metadata !15847, metadata !DIExpression()) #26, !dbg !16550
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16552, !srcloc !15853
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16553
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16558, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.value(metadata i32 %0, metadata !16560, metadata !DIExpression()), !dbg !16565
  %2 = icmp eq i32 %0, 0, !dbg !16567
  br i1 %2, label %3, label %6, !dbg !16568

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16569, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %4, metadata !16572, metadata !DIExpression()) #26, !dbg !16577
  %5 = icmp eq i32 %4, 0, !dbg !16578
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16559
  ret i1 %7, !dbg !16579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !16580 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16583
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16582, metadata !DIExpression()), !dbg !16584
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16585
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16586
  ret i1 %3, !dbg !16587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16590, metadata !DIExpression()), !dbg !16592
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16593
  call void @llvm.dbg.value(metadata i32 %2, metadata !16591, metadata !DIExpression()), !dbg !16592
  ret i32 %2, !dbg !16594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16597, metadata !DIExpression()), !dbg !16601
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !16602
  call void @llvm.dbg.value(metadata i32 0, metadata !16598, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16604
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16606, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16604
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16609
  br i1 %4, label %6, label %5, !dbg !16610

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16611
  unreachable, !dbg !16611

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16606
  call void @llvm.dbg.value(metadata i32 %7, metadata !15811, metadata !DIExpression()) #26, !dbg !16608
  call void @llvm.dbg.value(metadata i32 %7, metadata !15805, metadata !DIExpression()) #26, !dbg !16604
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16612
  call void @llvm.dbg.value(metadata i32 %7, metadata !16600, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16598, metadata !DIExpression()), !dbg !16603
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16613
  br i1 %8, label %9, label %13, !dbg !16617

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15991, metadata !DIExpression()) #26, !dbg !16618
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16621
  %11 = load i8, i8* %10, align 1, !dbg !16622
  %12 = and i8 %11, 127, !dbg !16622
  store i8 %12, i8* %10, align 1, !dbg !16622
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()) #26, !dbg !16623
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16625
  br label %13, !dbg !16626

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !16627
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16628
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16629
  %16 = zext i1 %15 to i32, !dbg !16629
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !16630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16631
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16633
  br i1 %17, label %19, label %18, !dbg !16634

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16635
  unreachable, !dbg !16635

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15833, metadata !DIExpression()) #26, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %7, metadata !15847, metadata !DIExpression()) #26, !dbg !16636
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !16638, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16598, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i32 undef, metadata !16598, metadata !DIExpression()), !dbg !16603
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16639
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16641
  br i1 %21, label %22, label %23, !dbg !16642

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !16643
  br label %23, !dbg !16645

23:                                               ; preds = %22, %19
  ret void, !dbg !16646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16647 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16649, metadata !DIExpression()), !dbg !16650
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16651
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16652
  ret i32 %3, !dbg !16653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16654 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16656, metadata !DIExpression()), !dbg !16657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16658
  %3 = load i8, i8* %2, align 1, !dbg !16659
  %4 = or i8 %3, 16, !dbg !16659
  store i8 %4, i8* %2, align 1, !dbg !16659
  ret void, !dbg !16660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16661 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16662, !srcloc !15814
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16662
  call void @llvm.dbg.value(metadata i32 %2, metadata !15811, metadata !DIExpression()) #26, !dbg !16664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16664
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !16665
  ret void, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16669, metadata !DIExpression()), !dbg !16670
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !16671
  br i1 %2, label %3, label %5, !dbg !16673

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16674
  br label %6, !dbg !16676

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15847, metadata !DIExpression()) #26, !dbg !16677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16680, !srcloc !15853
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16684, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16687
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16689, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16687
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16692
  br i1 %3, label %5, label %4, !dbg !16693

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16694
  unreachable, !dbg !16694

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16689
  call void @llvm.dbg.value(metadata i32 %6, metadata !15811, metadata !DIExpression()) #26, !dbg !16691
  call void @llvm.dbg.value(metadata i32 %6, metadata !15805, metadata !DIExpression()) #26, !dbg !16687
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16695
  call void @llvm.dbg.value(metadata i32 %6, metadata !16685, metadata !DIExpression()), !dbg !16686
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !16696
  br i1 %7, label %12, label %8, !dbg !16698

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16699
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16702
  br i1 %9, label %11, label %10, !dbg !16703

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16704
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16704
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16704
  unreachable, !dbg !16704

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !16705
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16707, !srcloc !15853
  br label %14, !dbg !16708

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !16709
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16710
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16711
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16711
  br label %14, !dbg !16712

14:                                               ; preds = %12, %11
  ret void, !dbg !16712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16715, metadata !DIExpression()), !dbg !16716
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16717
  %3 = load i8, i8* %2, align 1, !dbg !16717
  %4 = and i8 %3, 16, !dbg !16718
  %5 = icmp ne i8 %4, 0, !dbg !16719
  ret i1 %5, !dbg !16720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16723, metadata !DIExpression()), !dbg !16724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16725
  %3 = load i8, i8* %2, align 1, !dbg !16726
  %4 = and i8 %3, -17, !dbg !16726
  store i8 %4, i8* %2, align 1, !dbg !16726
  ret void, !dbg !16727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16728 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16738, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16736, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16737, metadata !DIExpression()), !dbg !16742
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16743
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16743
  br i1 %5, label %9, label %6, !dbg !16743

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !16743
  br i1 %7, label %9, label %8, !dbg !16746

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.343, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 773) #27, !dbg !16747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 773) #27, !dbg !16747
  unreachable, !dbg !16747

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16739, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16750
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16752, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16750
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16755
  br i1 %11, label %13, label %12, !dbg !16756

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16757
  unreachable, !dbg !16757

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16750
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16758
  call void @llvm.dbg.value(metadata i32 undef, metadata !16741, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()), !dbg !16749
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16759
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16762
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16764
  br i1 %14, label %16, label %15, !dbg !16765

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16766
  unreachable, !dbg !16766

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16752
  call void @llvm.dbg.value(metadata i32 %17, metadata !15811, metadata !DIExpression()) #26, !dbg !16754
  call void @llvm.dbg.value(metadata i32 %17, metadata !15805, metadata !DIExpression()) #26, !dbg !16750
  call void @llvm.dbg.value(metadata i32 %17, metadata !16741, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16762
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !16767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !16769, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16739, metadata !DIExpression()), !dbg !16749
  call void @llvm.dbg.value(metadata i32 undef, metadata !16739, metadata !DIExpression()), !dbg !16749
  ret void, !dbg !16770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16773, metadata !DIExpression()), !dbg !16774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16775
  %3 = load i8, i8* %2, align 1, !dbg !16775
  %4 = and i8 %3, 1, !dbg !16776
  %5 = icmp ne i8 %4, 0, !dbg !16777
  ret i1 %5, !dbg !16778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16779 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16783, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16781, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16782, metadata !DIExpression()), !dbg !16784
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !16785
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !16786
  ret void, !dbg !16787
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16788 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16792, metadata !DIExpression()), !dbg !16794
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16793, metadata !DIExpression()), !dbg !16794
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !16795
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !16796
  %3 = icmp eq %union.anon* %1, null, !dbg !16797
  br i1 %3, label %24, label %4, !dbg !16799

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16800
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16802
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16803
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16022, metadata !DIExpression()) #26, !dbg !16804
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16028, metadata !DIExpression()) #26, !dbg !16804
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16806
  br i1 %7, label %8, label %9, !dbg !16807

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !16808
  unreachable, !dbg !16808

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef nonnull %6) #27, !dbg !16809
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16029, metadata !DIExpression()) #26, !dbg !16804
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16810
  br i1 %11, label %22, label %12, !dbg !16809

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16029, metadata !DIExpression()) #26, !dbg !16804
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16811
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16029, metadata !DIExpression()) #26, !dbg !16804
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !16812
  %16 = icmp sgt i32 %15, 0, !dbg !16813
  br i1 %16, label %17, label %19, !dbg !16814

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16815
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16816
  br label %24, !dbg !16817

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !16810
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16029, metadata !DIExpression()) #26, !dbg !16804
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16810
  br i1 %21, label %22, label %12, !dbg !16809, !llvm.loop !16818

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16820
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !16821
  br label %24, !dbg !16822

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16824 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16829, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16828, metadata !DIExpression()), !dbg !16830
  %4 = icmp eq i64 %3, -1, !dbg !16831
  br i1 %4, label %6, label %5, !dbg !16833

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.344(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !16834
  br label %6, !dbg !16836

6:                                                ; preds = %5, %2
  ret void, !dbg !16837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.344(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16838 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16841, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16840, metadata !DIExpression()), !dbg !16842
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16843
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16844
  ret void, !dbg !16845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16846 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16848, metadata !DIExpression()), !dbg !16856
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16857
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16857
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16849, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata i32 0, metadata !16850, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16859
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16861, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16859
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16864
  br i1 %5, label %7, label %6, !dbg !16865

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16866
  unreachable, !dbg !16866

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16859
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !16852, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()), !dbg !16858
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16868
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16869
  %10 = load i8, i8* %9, align 1, !dbg !16869
  %11 = and i8 %10, 40, !dbg !16870
  %12 = icmp eq i8 %11, 0, !dbg !16870
  call void @llvm.dbg.value(metadata i1 %12, metadata !16853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16871
  br i1 %12, label %13, label %20, !dbg !16872

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16873
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16873
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16873
  %17 = icmp eq %union.anon* %16, null, !dbg !16877
  br i1 %17, label %19, label %18, !dbg !16878

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !16879
  br label %19, !dbg !16881

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.340(%struct.k_thread* noundef nonnull %3) #28, !dbg !16882
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !16883
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !16884
  br label %20, !dbg !16885

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16886
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16888
  br i1 %21, label %23, label %22, !dbg !16889

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16890
  unreachable, !dbg !16890

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16861
  call void @llvm.dbg.value(metadata i32 %24, metadata !15811, metadata !DIExpression()) #26, !dbg !16863
  call void @llvm.dbg.value(metadata i32 %24, metadata !15805, metadata !DIExpression()) #26, !dbg !16859
  call void @llvm.dbg.value(metadata i32 %24, metadata !16852, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !16891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !16893, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16850, metadata !DIExpression()), !dbg !16858
  call void @llvm.dbg.value(metadata i32 undef, metadata !16850, metadata !DIExpression()), !dbg !16858
  ret void, !dbg !16894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16897, metadata !DIExpression()), !dbg !16898
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !16899
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16900
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !16901
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16902
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16903
  ret void, !dbg !16904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16909, metadata !DIExpression()), !dbg !16910
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16911
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16911
  %4 = icmp eq %union.anon* %3, null, !dbg !16911
  br i1 %4, label %5, label %6, !dbg !16914

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 726) #27, !dbg !16915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 726) #27, !dbg !16915
  unreachable, !dbg !16915

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16920, metadata !DIExpression()), !dbg !16921
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16922
  %3 = load i8, i8* %2, align 1, !dbg !16923
  %4 = and i8 %3, -3, !dbg !16923
  store i8 %4, i8* %2, align 1, !dbg !16923
  ret void, !dbg !16924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16927, metadata !DIExpression()), !dbg !16928
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16929
  br i1 %2, label %3, label %7, !dbg !16931

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15991, metadata !DIExpression()) #26, !dbg !16932
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16935
  %5 = load i8, i8* %4, align 1, !dbg !16936
  %6 = and i8 %5, 127, !dbg !16936
  store i8 %6, i8* %4, align 1, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()) #26, !dbg !16937
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16939
  br label %7, !dbg !16940

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16941
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16942
  %10 = zext i1 %9 to i32, !dbg !16942
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !16943
  ret void, !dbg !16944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16947, metadata !DIExpression()), !dbg !16948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16949
  %3 = load i8, i8* %2, align 1, !dbg !16950
  %4 = or i8 %3, 2, !dbg !16950
  store i8 %4, i8* %2, align 1, !dbg !16950
  ret void, !dbg !16951
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !16952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16954, metadata !DIExpression()), !dbg !16958
  call void @llvm.dbg.value(metadata i32 0, metadata !16955, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16960
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16962, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16960
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16965
  br i1 %3, label %5, label %4, !dbg !16966

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !16967
  unreachable, !dbg !16967

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !16964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16960
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16968
  call void @llvm.dbg.value(metadata i32 undef, metadata !16957, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata i32 undef, metadata !16955, metadata !DIExpression()), !dbg !16959
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16969
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !16972
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16974
  br i1 %6, label %8, label %7, !dbg !16975

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16976
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !16976
  unreachable, !dbg !16976

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16962
  call void @llvm.dbg.value(metadata i32 %9, metadata !15811, metadata !DIExpression()) #26, !dbg !16964
  call void @llvm.dbg.value(metadata i32 %9, metadata !15805, metadata !DIExpression()) #26, !dbg !16960
  call void @llvm.dbg.value(metadata i32 %9, metadata !16957, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !16977
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16979, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16955, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata i32 undef, metadata !16955, metadata !DIExpression()), !dbg !16959
  ret void, !dbg !16980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16981 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16987, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata i32 %0, metadata !16985, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16986, metadata !DIExpression()), !dbg !16992
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16993
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16994
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16995
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16996
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16997
  call void @llvm.dbg.value(metadata i32 %6, metadata !16988, metadata !DIExpression()), !dbg !16992
  call void @llvm.dbg.value(metadata i32 0, metadata !16989, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !16999
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17001, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16999
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17004
  br i1 %8, label %10, label %9, !dbg !17005

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17006
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17006
  unreachable, !dbg !17006

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !16999
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17007
  call void @llvm.dbg.value(metadata i32 undef, metadata !16991, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !16989, metadata !DIExpression()), !dbg !16998
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17008
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17012
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17013
  br i1 %13, label %14, label %15, !dbg !17014

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17015
  br label %15, !dbg !17017

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17018
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17020
  br i1 %16, label %18, label %17, !dbg !17021

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17022
  unreachable, !dbg !17022

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17001
  call void @llvm.dbg.value(metadata i32 %19, metadata !15811, metadata !DIExpression()) #26, !dbg !17003
  call void @llvm.dbg.value(metadata i32 %19, metadata !15805, metadata !DIExpression()) #26, !dbg !16999
  call void @llvm.dbg.value(metadata i32 %19, metadata !16991, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17018
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17023
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17025, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16989, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !16989, metadata !DIExpression()), !dbg !16998
  ret i32 %6, !dbg !17026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17027 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17032, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata i64 undef, metadata !17034, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17031, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17033, metadata !DIExpression()), !dbg !17035
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17036
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17037
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17038
  br i1 %6, label %7, label %8, !dbg !17041

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 846) #27, !dbg !17042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 846) #27, !dbg !17042
  unreachable, !dbg !17042

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17044
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17046, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17044
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17049
  br i1 %10, label %12, label %11, !dbg !17050

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17051
  unreachable, !dbg !17051

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17048
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17044
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17052
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17053
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16529, metadata !DIExpression()) #26, !dbg !17055
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17057
  br i1 %14, label %16, label %15, !dbg !17058

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17059
  unreachable, !dbg !17059

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16525, metadata !DIExpression()) #26, !dbg !17060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16529, metadata !DIExpression()) #26, !dbg !17062
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17064
  br i1 %17, label %19, label %18, !dbg !17065

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17066
  unreachable, !dbg !17066

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16520, metadata !DIExpression()) #26, !dbg !17060
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17067
  ret i32 %21, !dbg !17068
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17069 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17073, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 0, metadata !17075, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17080
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17082, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17080
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17085
  br i1 %3, label %5, label %4, !dbg !17086

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17087
  unreachable, !dbg !17087

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17084
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17080
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17088
  call void @llvm.dbg.value(metadata i32 undef, metadata !17077, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17075, metadata !DIExpression()), !dbg !17079
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17089
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17074, metadata !DIExpression()), !dbg !17078
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17092
  br i1 %8, label %10, label %9, !dbg !17094

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17095
  br label %10, !dbg !17097

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17098
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17100
  br i1 %11, label %13, label %12, !dbg !17101

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17102
  unreachable, !dbg !17102

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17082
  call void @llvm.dbg.value(metadata i32 %14, metadata !15811, metadata !DIExpression()) #26, !dbg !17084
  call void @llvm.dbg.value(metadata i32 %14, metadata !15805, metadata !DIExpression()) #26, !dbg !17080
  call void @llvm.dbg.value(metadata i32 %14, metadata !17077, metadata !DIExpression()), !dbg !17079
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17103
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17105, !srcloc !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17074, metadata !DIExpression()), !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !17075, metadata !DIExpression()), !dbg !17079
  ret %struct.k_thread* %7, !dbg !17106
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17107 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17109, metadata !DIExpression()), !dbg !17114
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17110, metadata !DIExpression()), !dbg !17114
  call void @llvm.dbg.value(metadata i32 0, metadata !17111, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17116
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17118, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17116
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17121
  br i1 %3, label %5, label %4, !dbg !17122

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17123
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17123
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17123
  unreachable, !dbg !17123

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17120
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17116
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17124
  call void @llvm.dbg.value(metadata i32 undef, metadata !17113, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17110, metadata !DIExpression()), !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()), !dbg !17115
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17125
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17110, metadata !DIExpression()), !dbg !17114
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17128
  br i1 %8, label %11, label %9, !dbg !17130

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17131
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17133
  br label %11, !dbg !17134

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17135
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17137
  br i1 %12, label %14, label %13, !dbg !17138

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17139
  unreachable, !dbg !17139

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %15, metadata !15811, metadata !DIExpression()) #26, !dbg !17120
  call void @llvm.dbg.value(metadata i32 %15, metadata !15805, metadata !DIExpression()) #26, !dbg !17116
  call void @llvm.dbg.value(metadata i32 %15, metadata !17113, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17140
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17142, !srcloc !15853
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17110, metadata !DIExpression()), !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17111, metadata !DIExpression()), !dbg !17115
  ret %struct.k_thread* %7, !dbg !17143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17146, metadata !DIExpression()), !dbg !17147
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16954, metadata !DIExpression()) #26, !dbg !17148
  call void @llvm.dbg.value(metadata i32 0, metadata !16955, metadata !DIExpression()) #26, !dbg !17150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17151
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17153, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17151
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17156
  br i1 %3, label %5, label %4, !dbg !17157

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17158
  unreachable, !dbg !17158

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17151
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !16957, metadata !DIExpression()) #26, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16955, metadata !DIExpression()) #26, !dbg !17150
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17161
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17163
  br i1 %6, label %8, label %7, !dbg !17164

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17165
  unreachable, !dbg !17165

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17153
  call void @llvm.dbg.value(metadata i32 %9, metadata !15811, metadata !DIExpression()) #26, !dbg !17155
  call void @llvm.dbg.value(metadata i32 %9, metadata !15805, metadata !DIExpression()) #26, !dbg !17151
  call void @llvm.dbg.value(metadata i32 %9, metadata !16957, metadata !DIExpression()) #26, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17161
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17168, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !16955, metadata !DIExpression()) #26, !dbg !17150
  call void @llvm.dbg.value(metadata i32 undef, metadata !16955, metadata !DIExpression()) #26, !dbg !17150
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17169
  ret void, !dbg !17170
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17171 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17173, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 %1, metadata !17174, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i8 0, metadata !17175, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 0, metadata !17176, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17181
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17183, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17181
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17186
  br i1 %4, label %6, label %5, !dbg !17187

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17188
  unreachable, !dbg !17188

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17181
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17189
  call void @llvm.dbg.value(metadata i32 undef, metadata !17178, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.value(metadata i8 poison, metadata !17175, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17180
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17190
  call void @llvm.dbg.value(metadata i1 %9, metadata !17175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17179
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17193

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15991, metadata !DIExpression()) #26, !dbg !17194
  %14 = load i8, i8* %7, align 1, !dbg !17200
  %15 = and i8 %14, 127, !dbg !17200
  store i8 %15, i8* %7, align 1, !dbg !17200
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()) #26, !dbg !17201
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17203
  store i8 %12, i8* %11, align 2, !dbg !17204
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !17205
  %16 = load i8, i8* %7, align 1, !dbg !17207
  %17 = or i8 %16, -128, !dbg !17207
  store i8 %17, i8* %7, align 1, !dbg !17207
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16015, metadata !DIExpression()) #26, !dbg !17208
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16022, metadata !DIExpression()) #26, !dbg !17210
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16028, metadata !DIExpression()) #26, !dbg !17210
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17212
  br i1 %18, label %19, label %20, !dbg !17213

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !17214
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !17214
  unreachable, !dbg !17214

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17215
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16029, metadata !DIExpression()) #26, !dbg !17210
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17216
  br i1 %22, label %32, label %23, !dbg !17215

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16029, metadata !DIExpression()) #26, !dbg !17210
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16029, metadata !DIExpression()) #26, !dbg !17210
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17218
  %27 = icmp sgt i32 %26, 0, !dbg !17219
  br i1 %27, label %28, label %29, !dbg !17220

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17221
  br label %33, !dbg !17222

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17216
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16029, metadata !DIExpression()) #26, !dbg !17210
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17216
  br i1 %31, label %32, label %23, !dbg !17215, !llvm.loop !17223

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17225
  br label %33, !dbg !17226

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17227
  br label %35, !dbg !17228

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17229
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17231
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17233
  br i1 %36, label %38, label %37, !dbg !17234

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17235
  unreachable, !dbg !17235

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17183
  call void @llvm.dbg.value(metadata i32 %39, metadata !15811, metadata !DIExpression()) #26, !dbg !17185
  call void @llvm.dbg.value(metadata i32 %39, metadata !15805, metadata !DIExpression()) #26, !dbg !17181
  call void @llvm.dbg.value(metadata i32 %39, metadata !17178, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17231
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17236
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17238, !srcloc !15853
  call void @llvm.dbg.value(metadata i8 poison, metadata !17175, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17180
  ret i1 %9, !dbg !17239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17244, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i32 %1, metadata !17245, metadata !DIExpression()), !dbg !17247
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17248
  call void @llvm.dbg.value(metadata i1 %3, metadata !17246, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17247
  br i1 %3, label %4, label %12, !dbg !17249

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17251
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17252
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17252
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17252
  %9 = load i8, i8* %8, align 1, !dbg !17252
  %10 = icmp eq i8 %9, 0, !dbg !17253
  br i1 %10, label %11, label %12, !dbg !17254

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17255
  br label %12, !dbg !17257

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17259 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17261, metadata !DIExpression()), !dbg !17264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17265
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17267, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17265
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17270
  br i1 %2, label %4, label %3, !dbg !17271

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17272
  unreachable, !dbg !17272

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17265
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !17263, metadata !DIExpression()), !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !17261, metadata !DIExpression()), !dbg !17264
  tail call fastcc void @z_sched_lock() #28, !dbg !17274
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17277
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17279
  br i1 %5, label %7, label %6, !dbg !17280

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17281
  unreachable, !dbg !17281

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17267
  call void @llvm.dbg.value(metadata i32 %8, metadata !15811, metadata !DIExpression()) #26, !dbg !17269
  call void @llvm.dbg.value(metadata i32 %8, metadata !15805, metadata !DIExpression()) #26, !dbg !17265
  call void @llvm.dbg.value(metadata i32 %8, metadata !17263, metadata !DIExpression()), !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17282
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17284, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !17261, metadata !DIExpression()), !dbg !17264
  call void @llvm.dbg.value(metadata i32 undef, metadata !17261, metadata !DIExpression()), !dbg !17264
  ret void, !dbg !17285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17286 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17287, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %1, metadata !16572, metadata !DIExpression()) #26, !dbg !17292
  %2 = icmp eq i32 %1, 0, !dbg !17293
  br i1 %2, label %4, label %3, !dbg !17294

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.356, i32 0, i32 0), i32 noundef 253) #27, !dbg !17295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.356, i32 0, i32 0), i32 noundef 253) #27, !dbg !17295
  unreachable, !dbg !17295

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17297
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17297
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17297
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17297
  %9 = load i8, i8* %8, align 1, !dbg !17297
  %10 = icmp eq i8 %9, 1, !dbg !17297
  br i1 %10, label %11, label %12, !dbg !17300

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.356, i32 0, i32 0), i32 noundef 254) #27, !dbg !17301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.356, i32 0, i32 0), i32 noundef 254) #27, !dbg !17301
  unreachable, !dbg !17301

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17303
  store i8 %13, i8* %8, align 1, !dbg !17303
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17304, !srcloc !17306
  ret void, !dbg !17307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17308 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17310, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17314
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17316, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17314
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17319
  br i1 %2, label %4, label %3, !dbg !17320

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17321
  unreachable, !dbg !17321

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17314
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17312, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17313
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17323
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17323
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17323
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17323
  %9 = load i8, i8* %8, align 1, !dbg !17323
  %10 = icmp eq i8 %9, 0, !dbg !17323
  br i1 %10, label %11, label %12, !dbg !17328

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 999) #27, !dbg !17329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 999) #27, !dbg !17329
  unreachable, !dbg !17329

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17331, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %13, metadata !16572, metadata !DIExpression()) #26, !dbg !17336
  %14 = icmp eq i32 %13, 0, !dbg !17337
  br i1 %14, label %16, label %15, !dbg !17338

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17339
  unreachable, !dbg !17339

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17341
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17342
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17342
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17342
  %21 = load i8, i8* %20, align 1, !dbg !17343
  %22 = add i8 %21, 1, !dbg !17343
  store i8 %22, i8* %20, align 1, !dbg !17343
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17344
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17345
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17347
  br i1 %23, label %25, label %24, !dbg !17348

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17349
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17349
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17349
  unreachable, !dbg !17349

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17316
  call void @llvm.dbg.value(metadata i32 %26, metadata !15811, metadata !DIExpression()) #26, !dbg !17318
  call void @llvm.dbg.value(metadata i32 %26, metadata !15805, metadata !DIExpression()) #26, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %26, metadata !17312, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !17350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !17352, !srcloc !15853
  call void @llvm.dbg.value(metadata i32 1, metadata !17310, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17310, metadata !DIExpression()), !dbg !17313
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17353
  ret void, !dbg !17354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !17355 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17356
  ret %struct.k_thread* %1, !dbg !17357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !17358 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17362, metadata !DIExpression()), !dbg !17367
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17363, metadata !DIExpression()), !dbg !17367
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17368
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17364, metadata !DIExpression()), !dbg !17367
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17369
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17365, metadata !DIExpression()), !dbg !17367
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !17370
  call void @llvm.dbg.value(metadata i32 %5, metadata !17366, metadata !DIExpression()), !dbg !17367
  %6 = icmp sgt i32 %5, 0, !dbg !17371
  br i1 %6, label %17, label %7, !dbg !17373

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17374
  br i1 %8, label %17, label %9, !dbg !17376

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17377
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17377
  %12 = load i32, i32* %11, align 8, !dbg !17377
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17379
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17379
  %15 = load i32, i32* %14, align 8, !dbg !17379
  %16 = icmp ult i32 %12, %15, !dbg !17380
  br label %17, !dbg !17381

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17382
  ret i1 %18, !dbg !17383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17384 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17401, metadata !DIExpression()), !dbg !17416
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17402, metadata !DIExpression()), !dbg !17416
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17417
  br i1 %4, label %5, label %6, !dbg !17420

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17421
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17421
  unreachable, !dbg !17421

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17423
  %8 = load i32, i32* %7, align 4, !dbg !17424
  %9 = add nsw i32 %8, 1, !dbg !17424
  store i32 %9, i32* %7, align 4, !dbg !17424
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17425
  store i32 %8, i32* %10, align 8, !dbg !17426
  %11 = load i32, i32* %7, align 4, !dbg !17427
  %12 = icmp eq i32 %11, 0, !dbg !17428
  br i1 %12, label %13, label %35, !dbg !17429

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17430
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17430
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17404, metadata !DIExpression()), !dbg !17430
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17430
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17430
  %17 = load i32, i32* %16, align 4, !dbg !17430
  %18 = shl i32 %17, 2, !dbg !17430
  %19 = alloca i8, i32 %18, align 8, !dbg !17430
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17430
  store i8* %19, i8** %20, align 4, !dbg !17430
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17430
  %22 = alloca i8, i32 %17, align 8, !dbg !17430
  store i8* %22, i8** %21, align 4, !dbg !17430
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17430
  store i32 -1, i32* %23, align 4, !dbg !17430
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17431
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17413, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17403, metadata !DIExpression()), !dbg !17416
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17433
  br i1 %25, label %26, label %27, !dbg !17430

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17433
  br label %35, !dbg !17434

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17403, metadata !DIExpression()), !dbg !17416
  %29 = load i32, i32* %7, align 4, !dbg !17435
  %30 = add nsw i32 %29, 1, !dbg !17435
  store i32 %30, i32* %7, align 4, !dbg !17435
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17437
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17437
  store i32 %29, i32* %32, align 8, !dbg !17438
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17431
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17413, metadata !DIExpression()), !dbg !17432
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17403, metadata !DIExpression()), !dbg !17416
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17433
  br i1 %34, label %26, label %27, !dbg !17430, !llvm.loop !17439

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17441
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17442
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !17443
  ret void, !dbg !17444
}

; Function Attrs: optsize
declare !dbg !17445 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17450 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17453 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17455, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17456, metadata !DIExpression()), !dbg !17457
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17458
  br i1 %3, label %4, label %5, !dbg !17461

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17462
  unreachable, !dbg !17462

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17464
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17465
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !17466
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17467
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17467
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17469
  br i1 %10, label %11, label %13, !dbg !17470

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17471
  store i32 0, i32* %12, align 4, !dbg !17473
  br label %13, !dbg !17474

13:                                               ; preds = %11, %5
  ret void, !dbg !17475
}

; Function Attrs: optsize
declare !dbg !17476 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17477 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17481, metadata !DIExpression()), !dbg !17484
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17482, metadata !DIExpression()), !dbg !17484
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17485
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !17486
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17483, metadata !DIExpression()), !dbg !17484
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17482, metadata !DIExpression()), !dbg !17484
  ret %struct.k_thread* %4, !dbg !17487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17488 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17492, metadata !DIExpression()), !dbg !17493
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17494
  ret %struct.rbnode* %2, !dbg !17495
}

; Function Attrs: optsize
declare !dbg !17496 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17499 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17511, metadata !DIExpression()), !dbg !17515
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17516
  %3 = load i32, i32* %2, align 4, !dbg !17516
  %4 = icmp eq i32 %3, 0, !dbg !17518
  br i1 %4, label %10, label %5, !dbg !17519

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17512, metadata !DIExpression()), !dbg !17515
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17520, !range !5400
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17521
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17513, metadata !DIExpression()), !dbg !17515
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef %7) #28, !dbg !17522
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17514, metadata !DIExpression()), !dbg !17515
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17512, metadata !DIExpression()), !dbg !17515
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17515
  ret %struct.k_thread* %11, !dbg !17523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17524 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17528, metadata !DIExpression()), !dbg !17531
  call void @llvm.dbg.value(metadata i32 0, metadata !17529, metadata !DIExpression()), !dbg !17531
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.361(%union.anon* noundef %0) #28, !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17530, metadata !DIExpression()), !dbg !17531
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17533
  br i1 %3, label %8, label %4, !dbg !17534

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17535
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17537
  call void @llvm.dbg.value(metadata i32 1, metadata !17529, metadata !DIExpression()), !dbg !17531
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.361(%union.anon* noundef %0) #28, !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17530, metadata !DIExpression()), !dbg !17531
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17533
  br i1 %7, label %8, label %4, !dbg !17534, !llvm.loop !17538

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17531
  ret i32 %9, !dbg !17540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.361(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !17541 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17543, metadata !DIExpression()), !dbg !17544
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17545
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef %2) #28, !dbg !17546
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17547
  ret %struct.k_thread* %4, !dbg !17548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !17549 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17558, metadata !DIExpression()), !dbg !17559
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17560
  tail call fastcc void @sys_dlist_init.362(%struct._dnode* noundef nonnull %2) #28, !dbg !17561
  ret void, !dbg !17562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.362(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !17563 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17567, metadata !DIExpression()), !dbg !17568
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17569
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17570
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17571
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17572
  ret void, !dbg !17573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17574 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !17575
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !17576
  ret void, !dbg !17577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !17578 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17583, metadata !DIExpression()), !dbg !17584
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17585
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17585
  %4 = load i8, i8* %3, align 2, !dbg !17585
  %5 = sext i8 %4 to i32, !dbg !17586
  ret i32 %5, !dbg !17587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17592, metadata !DIExpression()), !dbg !17595
  call void @llvm.dbg.value(metadata i32 %1, metadata !17593, metadata !DIExpression()), !dbg !17595
  %3 = add i32 %1, 16, !dbg !17596
  %4 = icmp ult i32 %3, 31, !dbg !17596
  br i1 %4, label %6, label %5, !dbg !17596

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.367, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17600
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.368, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !17600
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17600
  unreachable, !dbg !17600

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17602, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %7, metadata !16572, metadata !DIExpression()) #26, !dbg !17607
  %8 = icmp eq i32 %7, 0, !dbg !17608
  br i1 %8, label %10, label %9, !dbg !17609

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17610
  unreachable, !dbg !17610

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17594, metadata !DIExpression()), !dbg !17595
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17612
  ret void, !dbg !17613
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17614 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !17615
  br i1 %1, label %8, label %2, !dbg !17616

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17617
  br i1 %3, label %8, label %4, !dbg !17618

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17619
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !17620
  %7 = xor i1 %6, true, !dbg !17618
  br label %8, !dbg !17618

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !17622 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17623, !range !8142
  %2 = icmp eq i8 %1, 0, !dbg !17623
  ret i1 %2, !dbg !17624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17625 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17628, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %1, metadata !16572, metadata !DIExpression()) #26, !dbg !17633
  %2 = icmp eq i32 %1, 0, !dbg !17634
  br i1 %2, label %4, label %3, !dbg !17635

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17636
  unreachable, !dbg !17636

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17638
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17640, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17638
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17643
  br i1 %6, label %8, label %7, !dbg !17644

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17645
  unreachable, !dbg !17645

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17638
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17646
  call void @llvm.dbg.value(metadata i32 undef, metadata !17627, metadata !DIExpression()), !dbg !17647
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17648
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15991, metadata !DIExpression()) #26, !dbg !17651
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17653
  %11 = load i8, i8* %10, align 1, !dbg !17654
  %12 = and i8 %11, 127, !dbg !17654
  store i8 %12, i8* %10, align 1, !dbg !17654
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15999, metadata !DIExpression()) #26, !dbg !17655
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !17657
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17658
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16008, metadata !DIExpression()) #26, !dbg !17659
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17661
  %15 = load i8, i8* %14, align 1, !dbg !17662
  %16 = or i8 %15, -128, !dbg !17662
  store i8 %16, i8* %14, align 1, !dbg !17662
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16015, metadata !DIExpression()) #26, !dbg !17663
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16022, metadata !DIExpression()) #26, !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16028, metadata !DIExpression()) #26, !dbg !17665
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !17667
  br i1 %17, label %18, label %19, !dbg !17668

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !17669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 186) #27, !dbg !17669
  unreachable, !dbg !17669

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.331(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17670
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16029, metadata !DIExpression()) #26, !dbg !17665
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17671
  br i1 %21, label %32, label %22, !dbg !17670

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16029, metadata !DIExpression()) #26, !dbg !17665
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17672
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16029, metadata !DIExpression()) #26, !dbg !17665
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !17673
  %26 = icmp sgt i32 %25, 0, !dbg !17674
  br i1 %26, label %27, label %29, !dbg !17675

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17676
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !17677
  br label %34, !dbg !17678

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !17671
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16029, metadata !DIExpression()) #26, !dbg !17665
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17671
  br i1 %31, label %32, label %22, !dbg !17670, !llvm.loop !17679

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17681
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !17682
  br label %34, !dbg !17683

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17684
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16525, metadata !DIExpression()) #26, !dbg !17685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16529, metadata !DIExpression()) #26, !dbg !17687
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17689
  br i1 %35, label %37, label %36, !dbg !17690

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17691
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17691
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17691
  unreachable, !dbg !17691

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17640
  call void @llvm.dbg.value(metadata i32 %38, metadata !15811, metadata !DIExpression()) #26, !dbg !17642
  call void @llvm.dbg.value(metadata i32 %38, metadata !15805, metadata !DIExpression()) #26, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %38, metadata !17627, metadata !DIExpression()), !dbg !17647
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17685
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !17692
  ret void, !dbg !17693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17694 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17698, metadata !DIExpression()), !dbg !17701
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17702, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %3, metadata !16572, metadata !DIExpression()) #26, !dbg !17707
  %4 = icmp eq i32 %3, 0, !dbg !17708
  br i1 %4, label %6, label %5, !dbg !17709

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17710
  unreachable, !dbg !17710

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17712
  br i1 %7, label %8, label %10, !dbg !17714

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17715
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !17717
  br label %15, !dbg !17718

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17699, metadata !DIExpression()), !dbg !17701
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !17719
  %12 = sext i32 %11 to i64, !dbg !17719
  call void @llvm.dbg.value(metadata i64 %12, metadata !17699, metadata !DIExpression()), !dbg !17701
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !17720
  %14 = trunc i64 %13 to i32, !dbg !17720
  call void @llvm.dbg.value(metadata i32 %14, metadata !17700, metadata !DIExpression()), !dbg !17701
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17701
  ret i32 %16, !dbg !17721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17722 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17726, metadata !DIExpression()), !dbg !17727
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17728, !srcloc !17730
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !17731
  ret void, !dbg !17732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17733 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17737, metadata !DIExpression()), !dbg !17741
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17742, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %2, metadata !16572, metadata !DIExpression()) #26, !dbg !17747
  %3 = icmp eq i32 %2, 0, !dbg !17748
  br i1 %3, label %5, label %4, !dbg !17749

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17750
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17750
  unreachable, !dbg !17750

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17752
  br i1 %6, label %7, label %8, !dbg !17754

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !17755
  br label %43, !dbg !17757

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17739, metadata !DIExpression()), !dbg !17741
  %9 = icmp sgt i64 %0, -3, !dbg !17758
  br i1 %9, label %10, label %14, !dbg !17760

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17761
  %12 = trunc i64 %0 to i32, !dbg !17763
  %13 = add i32 %11, %12, !dbg !17763
  call void @llvm.dbg.value(metadata i32 %13, metadata !17738, metadata !DIExpression()), !dbg !17741
  br label %17, !dbg !17764

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17765
  %16 = sub i32 -2, %15, !dbg !17765
  call void @llvm.dbg.value(metadata i32 %16, metadata !17738, metadata !DIExpression()), !dbg !17741
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17767
  call void @llvm.dbg.value(metadata i32 %18, metadata !17738, metadata !DIExpression()), !dbg !17741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17768
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17770, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17768
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17773
  br i1 %20, label %22, label %21, !dbg !17774

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17775
  unreachable, !dbg !17775

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17776
  call void @llvm.dbg.value(metadata i32 undef, metadata !17740, metadata !DIExpression()), !dbg !17741
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17777
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17778
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !17779
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17780
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17781
  tail call fastcc void @z_add_thread_timeout.344(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !17781
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17782
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !17783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16525, metadata !DIExpression()) #26, !dbg !17784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16529, metadata !DIExpression()) #26, !dbg !17786
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17788
  br i1 %27, label %29, label %28, !dbg !17789

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17790
  unreachable, !dbg !17790

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17770
  call void @llvm.dbg.value(metadata i32 %30, metadata !15811, metadata !DIExpression()) #26, !dbg !17772
  call void @llvm.dbg.value(metadata i32 %30, metadata !15805, metadata !DIExpression()) #26, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %30, metadata !17740, metadata !DIExpression()), !dbg !17741
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17784
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !17791
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17792
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !17792
  br i1 %33, label %34, label %35, !dbg !17795

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.371, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.333, i32 0, i32 0)) #27, !dbg !17796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17796
  unreachable, !dbg !17796

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17798
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17799
  %38 = zext i32 %37 to i64, !dbg !17799
  %39 = sub nsw i64 %36, %38, !dbg !17800
  call void @llvm.dbg.value(metadata i64 %39, metadata !17737, metadata !DIExpression()), !dbg !17741
  %40 = icmp sgt i64 %39, 0, !dbg !17801
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17801
  %42 = trunc i64 %41 to i32, !dbg !17801
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17741
  ret i32 %44, !dbg !17802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17803 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17805, metadata !DIExpression()), !dbg !17806
  call void @llvm.dbg.value(metadata i64 %0, metadata !15859, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 10000, metadata !15862, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i32 1000, metadata !15863, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i8 1, metadata !15864, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i1 false, metadata !15865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17807
  call void @llvm.dbg.value(metadata i1 false, metadata !15866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17807
  call void @llvm.dbg.value(metadata i8 0, metadata !15867, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i1 false, metadata !15868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17807
  call void @llvm.dbg.value(metadata i1 true, metadata !15869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17807
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17807
  call void @llvm.dbg.value(metadata i64 %0, metadata !15859, metadata !DIExpression()), !dbg !17807
  %2 = udiv i64 %0, 10, !dbg !17809
  ret i64 %2, !dbg !17813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17814 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17815, !srcloc !17817
  tail call void @z_impl_k_yield() #28, !dbg !17818
  ret void, !dbg !17819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17824, metadata !DIExpression()), !dbg !17826
  %2 = sext i32 %0 to i64, !dbg !17827
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !17828
  call void @llvm.dbg.value(metadata i64 %3, metadata !17825, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17826
  %4 = shl i64 %3, 32, !dbg !17829
  %5 = ashr exact i64 %4, 32, !dbg !17829
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !17830
  call void @llvm.dbg.value(metadata i32 %6, metadata !17825, metadata !DIExpression()), !dbg !17826
  %7 = sext i32 %6 to i64, !dbg !17831
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !17832
  %9 = trunc i64 %8 to i32, !dbg !17832
  ret i32 %9, !dbg !17833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17834 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17836, metadata !DIExpression()), !dbg !17837
  call void @llvm.dbg.value(metadata i64 %0, metadata !15859, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15862, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i32 10000, metadata !15863, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i8 1, metadata !15864, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i1 false, metadata !15865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17838
  call void @llvm.dbg.value(metadata i1 true, metadata !15866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17838
  call void @llvm.dbg.value(metadata i8 0, metadata !15867, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i1 false, metadata !15868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17838
  call void @llvm.dbg.value(metadata i1 true, metadata !15869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17838
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17838
  %2 = add i64 %0, 99, !dbg !17840
  call void @llvm.dbg.value(metadata i64 %2, metadata !15859, metadata !DIExpression()), !dbg !17838
  %3 = udiv i64 %2, 100, !dbg !17841
  ret i64 %3, !dbg !17842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17843 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17845, metadata !DIExpression()), !dbg !17846
  call void @llvm.dbg.value(metadata i64 %0, metadata !15859, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i32 10000, metadata !15862, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15863, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i8 1, metadata !15864, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i1 false, metadata !15865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17847
  call void @llvm.dbg.value(metadata i1 false, metadata !15866, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17847
  call void @llvm.dbg.value(metadata i8 0, metadata !15867, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i1 true, metadata !15868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17847
  call void @llvm.dbg.value(metadata i1 false, metadata !15869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17847
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17847
  call void @llvm.dbg.value(metadata i64 0, metadata !15870, metadata !DIExpression()), !dbg !17847
  %2 = mul i64 %0, 100, !dbg !17849
  ret i64 %2, !dbg !17851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17854, metadata !DIExpression()), !dbg !17855
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !17856
  br i1 %2, label %14, label %3, !dbg !17858

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17859
  %5 = icmp slt i32 %4, 0, !dbg !17861
  br i1 %5, label %6, label %10, !dbg !17862

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17863
  %8 = load i8, i8* %7, align 1, !dbg !17863
  %9 = icmp eq i8 %8, 16, !dbg !17866
  br i1 %9, label %10, label %14, !dbg !17867

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !17868
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17869
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17870, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %11, metadata !16572, metadata !DIExpression()) #26, !dbg !17874
  %12 = icmp eq i32 %11, 0, !dbg !17875
  br i1 %12, label %13, label %14, !dbg !17876

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17877
  br label %14, !dbg !17879

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17883, metadata !DIExpression()), !dbg !17884
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17885
  %3 = load i8, i8* %2, align 1, !dbg !17885
  %4 = and i8 %3, 2, !dbg !17886
  %5 = icmp ne i8 %4, 0, !dbg !17887
  ret i1 %5, !dbg !17888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !17889 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17894
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17893, metadata !DIExpression()), !dbg !17895
  ret %struct.k_thread* %1, !dbg !17896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17897 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17898, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %1, metadata !16572, metadata !DIExpression()) #26, !dbg !17901
  %2 = icmp eq i32 %1, 0, !dbg !17902
  br i1 %2, label %3, label %8, !dbg !17903

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17904
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !17905
  %6 = icmp ne i32 %5, 0, !dbg !17903
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17906
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17907 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17909, metadata !DIExpression()), !dbg !17911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !17912
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17914, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !17916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !17916
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !17912
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17917
  br i1 %3, label %5, label %4, !dbg !17918

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !17919
  unreachable, !dbg !17919

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17914
  call void @llvm.dbg.value(metadata i32 %6, metadata !15811, metadata !DIExpression()) #26, !dbg !17916
  call void @llvm.dbg.value(metadata i32 %6, metadata !15805, metadata !DIExpression()) #26, !dbg !17912
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17920
  call void @llvm.dbg.value(metadata i32 %6, metadata !17910, metadata !DIExpression()), !dbg !17911
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17921
  %8 = load i8, i8* %7, align 4, !dbg !17921
  %9 = and i8 %8, 1, !dbg !17923
  %10 = icmp eq i8 %9, 0, !dbg !17924
  br i1 %10, label %15, label %11, !dbg !17925

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17926
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17926
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17929
  br i1 %12, label %14, label %13, !dbg !17930

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17931
  unreachable, !dbg !17931

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !17926
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !17932
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17934, !srcloc !15853
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.377, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !17935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17935
  unreachable, !dbg !17935

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17939
  %17 = load i8, i8* %16, align 1, !dbg !17939
  %18 = and i8 %17, 8, !dbg !17941
  %19 = icmp eq i8 %18, 0, !dbg !17942
  br i1 %19, label %24, label %20, !dbg !17943

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17944
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17944
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17947
  br i1 %21, label %23, label %22, !dbg !17948

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17949
  unreachable, !dbg !17949

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !17944
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !17950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17952, !srcloc !15853
  br label %39, !dbg !17953

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !17954
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17955
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17957
  br i1 %26, label %27, label %35, !dbg !17958

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17959, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %28, metadata !16572, metadata !DIExpression()) #26, !dbg !17962
  %29 = icmp eq i32 %28, 0, !dbg !17963
  br i1 %29, label %30, label %35, !dbg !17964

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !17965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16525, metadata !DIExpression()) #26, !dbg !17965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16529, metadata !DIExpression()) #26, !dbg !17968
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17970
  br i1 %31, label %33, label %32, !dbg !17971

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17972
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17972
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !17972
  unreachable, !dbg !17972

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16520, metadata !DIExpression()) #26, !dbg !17965
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !17973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.378, i32 0, i32 0)) #27, !dbg !17974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17974
  unreachable, !dbg !17974

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !17978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !17978
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17980
  br i1 %36, label %38, label %37, !dbg !17981

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !17982
  unreachable, !dbg !17982

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15833, metadata !DIExpression()) #26, !dbg !17978
  call void @llvm.dbg.value(metadata i32 %6, metadata !15847, metadata !DIExpression()) #26, !dbg !17983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17985, !srcloc !15853
  br label %39, !dbg !17986

39:                                               ; preds = %38, %23
  ret void, !dbg !17986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17989, metadata !DIExpression()), !dbg !17990
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17991
  %3 = load i8, i8* %2, align 1, !dbg !17991
  %4 = and i8 %3, 8, !dbg !17993
  %5 = icmp eq i8 %4, 0, !dbg !17994
  br i1 %5, label %6, label %20, !dbg !17995

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17996
  %8 = or i8 %7, 8, !dbg !17996
  store i8 %8, i8* %2, align 1, !dbg !17996
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !17998
  br i1 %9, label %10, label %12, !dbg !18000

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15991, metadata !DIExpression()) #26, !dbg !18001
  %11 = and i8 %8, 95, !dbg !18004
  store i8 %11, i8* %2, align 1, !dbg !18004
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15999, metadata !DIExpression()) #26, !dbg !18005
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !18007
  br label %12, !dbg !18008

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18009
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !18009
  %15 = icmp eq %union.anon* %14, null, !dbg !18011
  br i1 %15, label %17, label %16, !dbg !18012

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18013
  br label %17, !dbg !18015

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !18016
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18017
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !18018
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !18019
  br label %20, !dbg !18020

20:                                               ; preds = %17, %1
  ret void, !dbg !18021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18022 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18026, metadata !DIExpression()), !dbg !18028
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.361(%union.anon* noundef %0) #28, !dbg !18029
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18027, metadata !DIExpression()), !dbg !18028
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18030
  br i1 %3, label %10, label %4, !dbg !18031

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18032
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18034
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18035, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i32 0, metadata !18040, metadata !DIExpression()), !dbg !18041
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18043
  store i32 0, i32* %7, align 4, !dbg !18044
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18045
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.361(%union.anon* noundef %0) #28, !dbg !18029
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18027, metadata !DIExpression()), !dbg !18028
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18030
  br i1 %9, label %10, label %4, !dbg !18031, !llvm.loop !18046

10:                                               ; preds = %4, %1
  ret void, !dbg !18048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18049 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18054, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18053, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !18058
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18060, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !18062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !18062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !18058
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18063
  br i1 %4, label %6, label %5, !dbg !18064

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !18065
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18065
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !18065
  unreachable, !dbg !18065

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18060
  call void @llvm.dbg.value(metadata i32 %7, metadata !15811, metadata !DIExpression()) #26, !dbg !18062
  call void @llvm.dbg.value(metadata i32 %7, metadata !15805, metadata !DIExpression()) #26, !dbg !18058
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18066
  call void @llvm.dbg.value(metadata i32 %7, metadata !18055, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata i32 0, metadata !18056, metadata !DIExpression()), !dbg !18057
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18067
  %9 = load i8, i8* %8, align 1, !dbg !18067
  %10 = and i8 %9, 8, !dbg !18069
  %11 = icmp eq i8 %10, 0, !dbg !18070
  br i1 %11, label %12, label %35, !dbg !18071

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18054, metadata !DIExpression()), !dbg !18057
  %14 = icmp eq i64 %13, 0, !dbg !18072
  br i1 %14, label %35, label %15, !dbg !18074

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18075
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18077
  br i1 %17, label %35, label %18, !dbg !18078

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18079
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18079
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18080
  %22 = icmp eq %union.anon* %20, %21, !dbg !18081
  br i1 %22, label %35, label %23, !dbg !18082

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18083, !srcloc !16576
  call void @llvm.dbg.value(metadata i32 %24, metadata !16572, metadata !DIExpression()) #26, !dbg !18089
  %25 = icmp eq i32 %24, 0, !dbg !18090
  br i1 %25, label %27, label %26, !dbg !18091

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.355, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.379, i32 0, i32 0)) #27, !dbg !18092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.330, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18092
  unreachable, !dbg !18092

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18094
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18095
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18096
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18097
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16520, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16525, metadata !DIExpression()) #26, !dbg !18099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16529, metadata !DIExpression()) #26, !dbg !18101
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18103
  br i1 %31, label %33, label %32, !dbg !18104

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !18105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 225) #27, !dbg !18105
  unreachable, !dbg !18105

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16520, metadata !DIExpression()) #26, !dbg !18099
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18106
  call void @llvm.dbg.value(metadata i32 %34, metadata !18056, metadata !DIExpression()), !dbg !18057
  br label %40, !dbg !18107

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18108
  call void @llvm.dbg.value(metadata i32 %36, metadata !18056, metadata !DIExpression()), !dbg !18057
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !18109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !18109
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18111
  br i1 %37, label %39, label %38, !dbg !18112

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !18113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18113
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !18113
  unreachable, !dbg !18113

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15833, metadata !DIExpression()) #26, !dbg !18109
  call void @llvm.dbg.value(metadata i32 %7, metadata !15847, metadata !DIExpression()) #26, !dbg !18114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18116, !srcloc !15853
  br label %40, !dbg !18117

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18057
  ret i32 %41, !dbg !18118
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18119 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18123, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i32 %1, metadata !18124, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i8* %2, metadata !18125, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i8 0, metadata !18127, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i32 0, metadata !18128, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15799, metadata !DIExpression()) #26, !dbg !18133
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18135, !srcloc !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15812, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !18133
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18138
  br i1 %5, label %7, label %6, !dbg !18139

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !18140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.326, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 148) #27, !dbg !18140
  unreachable, !dbg !18140

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15811, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #26, !dbg !18133
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18141
  call void @llvm.dbg.value(metadata i32 undef, metadata !18130, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata i8 poison, metadata !18127, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i32 undef, metadata !18128, metadata !DIExpression()), !dbg !18132
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18142
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18126, metadata !DIExpression()), !dbg !18131
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18145
  br i1 %10, label %15, label %11, !dbg !18147

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18148, metadata !DIExpression()), !dbg !18155
  call void @llvm.dbg.value(metadata i32 %1, metadata !18153, metadata !DIExpression()), !dbg !18155
  call void @llvm.dbg.value(metadata i8* %2, metadata !18154, metadata !DIExpression()), !dbg !18155
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18035, metadata !DIExpression()), !dbg !18158
  call void @llvm.dbg.value(metadata i32 %1, metadata !18040, metadata !DIExpression()), !dbg !18158
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18160
  store i32 %1, i32* %12, align 4, !dbg !18161
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18162
  store i8* %2, i8** %13, align 4, !dbg !18163
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18164
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18165
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18166
  call void @llvm.dbg.value(metadata i8 1, metadata !18127, metadata !DIExpression()), !dbg !18131
  br label %15, !dbg !18167

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18127, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !18168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15838, metadata !DIExpression()) #26, !dbg !18168
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18170
  br i1 %16, label %18, label %17, !dbg !18171

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !18172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.328, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.325, i32 0, i32 0), i32 noundef 194) #27, !dbg !18172
  unreachable, !dbg !18172

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18131
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18135
  call void @llvm.dbg.value(metadata i32 %20, metadata !15811, metadata !DIExpression()) #26, !dbg !18137
  call void @llvm.dbg.value(metadata i32 %20, metadata !15805, metadata !DIExpression()) #26, !dbg !18133
  call void @llvm.dbg.value(metadata i32 %20, metadata !18130, metadata !DIExpression()), !dbg !18132
  call void @llvm.dbg.value(metadata i32 undef, metadata !15833, metadata !DIExpression()) #26, !dbg !18168
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()) #26, !dbg !18173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18175, !srcloc !15853
  call void @llvm.dbg.value(metadata i8 poison, metadata !18127, metadata !DIExpression()), !dbg !18131
  call void @llvm.dbg.value(metadata i32 undef, metadata !18128, metadata !DIExpression()), !dbg !18132
  ret i1 %19, !dbg !18176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18177 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18183, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata i64 undef, metadata !18185, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18182, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18184, metadata !DIExpression()), !dbg !18188
  call void @llvm.dbg.value(metadata i8** %4, metadata !18186, metadata !DIExpression()), !dbg !18188
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18189
  call void @llvm.dbg.value(metadata i32 %6, metadata !18187, metadata !DIExpression()), !dbg !18188
  %7 = icmp eq i8** %4, null, !dbg !18190
  br i1 %7, label %12, label %8, !dbg !18192

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18193
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18195
  %11 = load i8*, i8** %10, align 4, !dbg !18195
  store i8* %11, i8** %4, align 4, !dbg !18196
  br label %12, !dbg !18197

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18198
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18199 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18201
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18202
  ret void, !dbg !18203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18204 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18214, metadata !DIExpression()), !dbg !18231
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18212, metadata !DIExpression()), !dbg !18231
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18213, metadata !DIExpression()), !dbg !18231
  %5 = icmp eq i64 %4, -1, !dbg !18232
  br i1 %5, label %63, label %6, !dbg !18234

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18235
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.384(%struct._dnode* noundef %7) #28, !dbg !18235
  br i1 %8, label %9, label %10, !dbg !18238

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.387, i32 0, i32 0), i32 noundef 99) #27, !dbg !18239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.388, i32 0, i32 0)) #27, !dbg !18239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.387, i32 0, i32 0), i32 noundef 99) #27, !dbg !18239
  unreachable, !dbg !18239

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18241
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18242
  call void @llvm.dbg.value(metadata i32 0, metadata !18215, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18251
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18253, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18260
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18260
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18251
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18261
  br i1 %13, label %15, label %14, !dbg !18264

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18265
  unreachable, !dbg !18265

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18253
  call void @llvm.dbg.value(metadata i32 %16, metadata !18256, metadata !DIExpression()) #26, !dbg !18260
  call void @llvm.dbg.value(metadata i32 %16, metadata !18250, metadata !DIExpression()) #26, !dbg !18251
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18267
  call void @llvm.dbg.value(metadata i32 %16, metadata !18221, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.value(metadata i32 undef, metadata !18215, metadata !DIExpression()), !dbg !18243
  %17 = icmp slt i64 %4, -1, !dbg !18268
  br i1 %17, label %18, label %24, !dbg !18269

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18270
  %20 = add i64 %4, %19, !dbg !18271
  %21 = sub i64 -2, %20, !dbg !18271
  call void @llvm.dbg.value(metadata i64 %21, metadata !18225, metadata !DIExpression()), !dbg !18272
  %22 = icmp sgt i64 %21, 1, !dbg !18273
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18273
  br label %29, !dbg !18274

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18275
  %26 = tail call fastcc i32 @elapsed.392() #28, !dbg !18277
  %27 = sext i32 %26 to i64, !dbg !18277
  %28 = add nsw i64 %25, %27, !dbg !18278
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18279
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18280
  store i64 %30, i64* %31, align 8, !dbg !18281
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18282
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18222, metadata !DIExpression()), !dbg !18284
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18285
  br i1 %33, label %48, label %34, !dbg !18285

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18286
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18222, metadata !DIExpression()), !dbg !18284
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18290
  %38 = load i64, i64* %37, align 8, !dbg !18290
  %39 = icmp slt i64 %35, %38, !dbg !18291
  br i1 %39, label %40, label %44, !dbg !18292

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18290
  %42 = sub nsw i64 %38, %35, !dbg !18293
  store i64 %42, i64* %41, align 8, !dbg !18293
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18295
  tail call fastcc void @sys_dlist_insert.393(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18296
  br label %49, !dbg !18297

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18298
  store i64 %45, i64* %31, align 8, !dbg !18298
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18299
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18222, metadata !DIExpression()), !dbg !18284
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18285
  br i1 %47, label %48, label %34, !dbg !18285, !llvm.loop !18300

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.394(%struct._dnode* noundef nonnull %7) #28, !dbg !18302
  br label %49, !dbg !18305

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18306
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18307
  br i1 %51, label %52, label %59, !dbg !18308

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18309
  call void @llvm.dbg.value(metadata i32 %53, metadata !18228, metadata !DIExpression()), !dbg !18310
  %54 = icmp ne i32 %53, 0, !dbg !18311
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18313
  br i1 %57, label %59, label %58, !dbg !18313

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18314
  br label %59, !dbg !18316

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18323
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18323
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18325
  br i1 %60, label %62, label %61, !dbg !18328

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18329
  unreachable, !dbg !18329

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18317, metadata !DIExpression()) #26, !dbg !18323
  call void @llvm.dbg.value(metadata i32 %16, metadata !18331, metadata !DIExpression()) #26, !dbg !18334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !18336, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18215, metadata !DIExpression()), !dbg !18243
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.384(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18339 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18345, metadata !DIExpression()), !dbg !18346
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18347
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18347
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18348
  ret i1 %4, !dbg !18349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.392() unnamed_addr #1 !dbg !18350 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18353
  %2 = icmp eq i32 %1, 0, !dbg !18354
  br i1 %2, label %3, label %5, !dbg !18353

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18355
  br label %5, !dbg !18353

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18353
  ret i32 %6, !dbg !18356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !18357 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.399() #28, !dbg !18363
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18361, metadata !DIExpression()), !dbg !18364
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18365
  ret %struct._timeout* %2, !dbg !18366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.393(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !18367 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18371, metadata !DIExpression()), !dbg !18375
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18372, metadata !DIExpression()), !dbg !18375
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18376
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18376
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18373, metadata !DIExpression()), !dbg !18375
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18377
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18378
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18379
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18380
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18381
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18382
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18383
  ret void, !dbg !18384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !18385 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18389, metadata !DIExpression()), !dbg !18391
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18392
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.397(%struct._dnode* noundef %2) #28, !dbg !18393
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18390, metadata !DIExpression()), !dbg !18391
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18394
  ret %struct._timeout* %4, !dbg !18395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.394(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !18396 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18401, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18402, metadata !DIExpression()), !dbg !18404
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18405
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18403, metadata !DIExpression()), !dbg !18404
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18406
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18407
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18408
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18409
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18410
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18411
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18412
  ret void, !dbg !18413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18414 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !18419
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18416, metadata !DIExpression()), !dbg !18420
  %2 = tail call fastcc i32 @elapsed.392() #28, !dbg !18421
  call void @llvm.dbg.value(metadata i32 %2, metadata !18417, metadata !DIExpression()), !dbg !18420
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18422
  br i1 %3, label %14, label %4, !dbg !18424

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18425
  %6 = load i64, i64* %5, align 8, !dbg !18425
  %7 = sext i32 %2 to i64, !dbg !18426
  %8 = sub nsw i64 %6, %7, !dbg !18427
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18428
  br i1 %9, label %14, label %10, !dbg !18429

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18430
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18430
  %13 = trunc i64 %12 to i32, !dbg !18430
  call void @llvm.dbg.value(metadata i32 %13, metadata !18418, metadata !DIExpression()), !dbg !18420
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18432
  call void @llvm.dbg.value(metadata i32 %15, metadata !18418, metadata !DIExpression()), !dbg !18420
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !18433
  %17 = icmp ne i32 %16, 0, !dbg !18435
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18436
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18436
  call void @llvm.dbg.value(metadata i32 %20, metadata !18418, metadata !DIExpression()), !dbg !18420
  ret i32 %20, !dbg !18437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.397(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18438 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18442, metadata !DIExpression()), !dbg !18444
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18443, metadata !DIExpression()), !dbg !18444
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18445
  br i1 %2, label %5, label %3, !dbg !18446

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.398(%struct._dnode* noundef nonnull %0) #28, !dbg !18447
  br label %5, !dbg !18446

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18446
  ret %struct._dnode* %6, !dbg !18448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.398(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18449 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18451, metadata !DIExpression()), !dbg !18453
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18452, metadata !DIExpression()), !dbg !18453
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18454
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18455
  br i1 %3, label %7, label %4, !dbg !18456

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18457
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18457
  br label %7, !dbg !18456

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18456
  ret %struct._dnode* %8, !dbg !18458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.399() unnamed_addr #13 !dbg !18459 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18463, metadata !DIExpression()), !dbg !18464
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.400() #28, !dbg !18465
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18465
  ret %struct._dnode* %3, !dbg !18466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.400() unnamed_addr #13 !dbg !18467 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18471, metadata !DIExpression()), !dbg !18472
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18473
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18474
  ret i1 %2, !dbg !18475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18476 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18480, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 -22, metadata !18481, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 0, metadata !18482, metadata !DIExpression()), !dbg !18486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18487
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18489, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18487
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18492
  br i1 %3, label %5, label %4, !dbg !18493

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18494
  unreachable, !dbg !18494

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18491
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18495
  call void @llvm.dbg.value(metadata i32 undef, metadata !18484, metadata !DIExpression()), !dbg !18486
  call void @llvm.dbg.value(metadata i32 -22, metadata !18481, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 undef, metadata !18482, metadata !DIExpression()), !dbg !18486
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18481, metadata !DIExpression()), !dbg !18485
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.384(%struct._dnode* noundef %6) #28, !dbg !18496
  br i1 %7, label %8, label %9, !dbg !18500

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !18501
  call void @llvm.dbg.value(metadata i32 0, metadata !18481, metadata !DIExpression()), !dbg !18485
  br label %9, !dbg !18503

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18485
  call void @llvm.dbg.value(metadata i32 %10, metadata !18481, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18504
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18506
  br i1 %11, label %13, label %12, !dbg !18507

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18508
  unreachable, !dbg !18508

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18489
  call void @llvm.dbg.value(metadata i32 %14, metadata !18256, metadata !DIExpression()) #26, !dbg !18491
  call void @llvm.dbg.value(metadata i32 %14, metadata !18250, metadata !DIExpression()) #26, !dbg !18487
  call void @llvm.dbg.value(metadata i32 %14, metadata !18484, metadata !DIExpression()), !dbg !18486
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18504
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18511, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 %10, metadata !18481, metadata !DIExpression()), !dbg !18485
  call void @llvm.dbg.value(metadata i32 undef, metadata !18482, metadata !DIExpression()), !dbg !18486
  ret i32 %10, !dbg !18512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !18513 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18515, metadata !DIExpression()), !dbg !18516
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !18517
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18519
  br i1 %3, label %10, label %4, !dbg !18520

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18521
  %6 = load i64, i64* %5, align 8, !dbg !18521
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18523
  %8 = load i64, i64* %7, align 8, !dbg !18524
  %9 = add nsw i64 %8, %6, !dbg !18524
  store i64 %9, i64* %7, align 8, !dbg !18524
  br label %10, !dbg !18525

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18526
  tail call fastcc void @sys_dlist_remove.403(%struct._dnode* noundef %11) #28, !dbg !18527
  ret void, !dbg !18528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.403(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !18529 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18533, metadata !DIExpression()), !dbg !18536
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18537
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18537
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18534, metadata !DIExpression()), !dbg !18536
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18538
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18538
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18535, metadata !DIExpression()), !dbg !18536
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18539
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18540
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18541
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18542
  tail call fastcc void @sys_dnode_init.404(%struct._dnode* noundef %0) #28, !dbg !18543
  ret void, !dbg !18544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.404(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !18545 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18547, metadata !DIExpression()), !dbg !18548
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18549
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18550
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18551
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18552
  ret void, !dbg !18553
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18554 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18560, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i64 0, metadata !18561, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i32 0, metadata !18562, metadata !DIExpression()), !dbg !18566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18567
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18569, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18571
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18571
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18567
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18572
  br i1 %3, label %5, label %4, !dbg !18573

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18574
  unreachable, !dbg !18574

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18571
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18567
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18575
  call void @llvm.dbg.value(metadata i32 undef, metadata !18564, metadata !DIExpression()), !dbg !18566
  call void @llvm.dbg.value(metadata i64 0, metadata !18561, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i32 undef, metadata !18562, metadata !DIExpression()), !dbg !18566
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18576
  call void @llvm.dbg.value(metadata i64 %6, metadata !18561, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18579
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18579
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18581
  br i1 %7, label %9, label %8, !dbg !18582

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18583
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18583
  unreachable, !dbg !18583

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18569
  call void @llvm.dbg.value(metadata i32 %10, metadata !18256, metadata !DIExpression()) #26, !dbg !18571
  call void @llvm.dbg.value(metadata i32 %10, metadata !18250, metadata !DIExpression()) #26, !dbg !18567
  call void @llvm.dbg.value(metadata i32 %10, metadata !18564, metadata !DIExpression()), !dbg !18566
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18579
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18584
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18586, !srcloc !18337
  call void @llvm.dbg.value(metadata i64 %6, metadata !18561, metadata !DIExpression()), !dbg !18565
  call void @llvm.dbg.value(metadata i32 undef, metadata !18562, metadata !DIExpression()), !dbg !18566
  ret i64 %6, !dbg !18587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18588 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18590, metadata !DIExpression()), !dbg !18594
  call void @llvm.dbg.value(metadata i64 0, metadata !18591, metadata !DIExpression()), !dbg !18594
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.405(%struct._timeout* noundef %0) #28, !dbg !18595
  br i1 %2, label %21, label %3, !dbg !18597

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !18598
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18592, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata i64 0, metadata !18591, metadata !DIExpression()), !dbg !18594
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18600
  br i1 %5, label %16, label %6, !dbg !18602

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18592, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata i64 %8, metadata !18591, metadata !DIExpression()), !dbg !18594
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18603
  %10 = load i64, i64* %9, align 8, !dbg !18603
  %11 = add nsw i64 %10, %8, !dbg !18605
  call void @llvm.dbg.value(metadata i64 %11, metadata !18591, metadata !DIExpression()), !dbg !18594
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18606
  br i1 %12, label %16, label %13, !dbg !18608

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !18609
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18592, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.value(metadata i64 %11, metadata !18591, metadata !DIExpression()), !dbg !18594
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18600
  br i1 %15, label %16, label %6, !dbg !18602, !llvm.loop !18610

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18594
  call void @llvm.dbg.value(metadata i64 %17, metadata !18591, metadata !DIExpression()), !dbg !18594
  %18 = tail call fastcc i32 @elapsed.392() #28, !dbg !18612
  %19 = sext i32 %18 to i64, !dbg !18612
  %20 = sub nsw i64 %17, %19, !dbg !18613
  br label %21, !dbg !18614

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18594
  ret i64 %22, !dbg !18615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.405(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18616 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18620, metadata !DIExpression()), !dbg !18621
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18622
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.384(%struct._dnode* noundef %2) #28, !dbg !18623
  %4 = xor i1 %3, true, !dbg !18624
  ret i1 %4, !dbg !18625
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18626 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18628, metadata !DIExpression()), !dbg !18633
  call void @llvm.dbg.value(metadata i64 0, metadata !18629, metadata !DIExpression()), !dbg !18633
  call void @llvm.dbg.value(metadata i32 0, metadata !18630, metadata !DIExpression()), !dbg !18634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18635
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18637, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18639
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18639
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18635
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18640
  br i1 %3, label %5, label %4, !dbg !18641

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18642
  unreachable, !dbg !18642

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18639
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18635
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18643
  call void @llvm.dbg.value(metadata i32 undef, metadata !18632, metadata !DIExpression()), !dbg !18634
  call void @llvm.dbg.value(metadata i64 0, metadata !18629, metadata !DIExpression()), !dbg !18633
  call void @llvm.dbg.value(metadata i32 undef, metadata !18630, metadata !DIExpression()), !dbg !18634
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18644
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18647
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18633
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18648
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18650
  br i1 %8, label %10, label %9, !dbg !18651

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18652
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18652
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18652
  unreachable, !dbg !18652

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18637
  call void @llvm.dbg.value(metadata i32 %11, metadata !18256, metadata !DIExpression()) #26, !dbg !18639
  call void @llvm.dbg.value(metadata i32 %11, metadata !18250, metadata !DIExpression()) #26, !dbg !18635
  call void @llvm.dbg.value(metadata i32 %11, metadata !18632, metadata !DIExpression()), !dbg !18634
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18629, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18633
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18648
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18653
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !18655, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18630, metadata !DIExpression()), !dbg !18634
  %12 = add i64 %7, %6, !dbg !18656
  ret i64 %12, !dbg !18657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18658 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18660, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.value(metadata i32 0, metadata !18661, metadata !DIExpression()), !dbg !18665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18666
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18668, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18670
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18670
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18666
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18671
  br i1 %2, label %4, label %3, !dbg !18672

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18673
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18673
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18673
  unreachable, !dbg !18673

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18670
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18666
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18674
  call void @llvm.dbg.value(metadata i32 undef, metadata !18663, metadata !DIExpression()), !dbg !18665
  call void @llvm.dbg.value(metadata i32 -1, metadata !18660, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.value(metadata i32 undef, metadata !18661, metadata !DIExpression()), !dbg !18665
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !18675
  call void @llvm.dbg.value(metadata i32 %5, metadata !18660, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18678
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18680
  br i1 %6, label %8, label %7, !dbg !18681

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18682
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18682
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18682
  unreachable, !dbg !18682

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18668
  call void @llvm.dbg.value(metadata i32 %9, metadata !18256, metadata !DIExpression()) #26, !dbg !18670
  call void @llvm.dbg.value(metadata i32 %9, metadata !18250, metadata !DIExpression()) #26, !dbg !18666
  call void @llvm.dbg.value(metadata i32 %9, metadata !18663, metadata !DIExpression()), !dbg !18665
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18678
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18683
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18685, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 %5, metadata !18660, metadata !DIExpression()), !dbg !18664
  call void @llvm.dbg.value(metadata i32 undef, metadata !18661, metadata !DIExpression()), !dbg !18665
  ret i32 %5, !dbg !18686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18689, metadata !DIExpression()), !dbg !18699
  call void @llvm.dbg.value(metadata i1 %1, metadata !18690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18699
  call void @llvm.dbg.value(metadata i32 0, metadata !18691, metadata !DIExpression()), !dbg !18700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18701
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18703, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18705
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18705
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18701
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18706
  br i1 %4, label %6, label %5, !dbg !18707

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18708
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18708
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18708
  unreachable, !dbg !18708

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18705
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18701
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18709
  call void @llvm.dbg.value(metadata i32 undef, metadata !18693, metadata !DIExpression()), !dbg !18700
  call void @llvm.dbg.value(metadata i32 undef, metadata !18691, metadata !DIExpression()), !dbg !18700
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !18710
  call void @llvm.dbg.value(metadata i32 %7, metadata !18694, metadata !DIExpression()), !dbg !18711
  call void @llvm.dbg.value(metadata i1 undef, metadata !18697, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18711
  %8 = icmp slt i32 %7, 2, !dbg !18712
  call void @llvm.dbg.value(metadata i1 %8, metadata !18698, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18711
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18713
  call void @llvm.dbg.value(metadata i1 %9, metadata !18697, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18711
  br i1 %10, label %14, label %11, !dbg !18713

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18715
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18715
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !18717
  br label %14, !dbg !18718

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18719
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18721
  br i1 %15, label %17, label %16, !dbg !18722

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18723
  unreachable, !dbg !18723

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18703
  call void @llvm.dbg.value(metadata i32 %18, metadata !18256, metadata !DIExpression()) #26, !dbg !18705
  call void @llvm.dbg.value(metadata i32 %18, metadata !18250, metadata !DIExpression()) #26, !dbg !18701
  call void @llvm.dbg.value(metadata i32 %18, metadata !18693, metadata !DIExpression()), !dbg !18700
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18719
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !18726, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 1, metadata !18691, metadata !DIExpression()), !dbg !18700
  call void @llvm.dbg.value(metadata i32 undef, metadata !18691, metadata !DIExpression()), !dbg !18700
  ret void, !dbg !18727
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18732, metadata !DIExpression()), !dbg !18737
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18739
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18741, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18743
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18743
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18739
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18744
  br i1 %3, label %5, label %4, !dbg !18745

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18746
  unreachable, !dbg !18746

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18743
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18739
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18747
  call void @llvm.dbg.value(metadata i32 undef, metadata !18733, metadata !DIExpression()), !dbg !18737
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18737
  call void @llvm.dbg.value(metadata i32 undef, metadata !18733, metadata !DIExpression()), !dbg !18737
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !18748
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18749
  br i1 %7, label %37, label %8, !dbg !18750

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18737
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18751
  %14 = load i64, i64* %13, align 8, !dbg !18751
  %15 = sext i32 %11 to i64, !dbg !18752
  %16 = icmp sgt i64 %14, %15, !dbg !18753
  br i1 %16, label %35, label %17, !dbg !18754

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18734, metadata !DIExpression()), !dbg !18755
  %18 = trunc i64 %14 to i32, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %18, metadata !18736, metadata !DIExpression()), !dbg !18755
  %19 = sext i32 %18 to i64, !dbg !18757
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18758
  %21 = add i64 %20, %19, !dbg !18758
  store i64 %21, i64* @curr_tick, align 8, !dbg !18758
  store i64 0, i64* %13, align 8, !dbg !18759
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !18760
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18761
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18763
  br i1 %22, label %24, label %23, !dbg !18764

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18765
  unreachable, !dbg !18765

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18317, metadata !DIExpression()) #26, !dbg !18761
  call void @llvm.dbg.value(metadata i32 %12, metadata !18331, metadata !DIExpression()) #26, !dbg !18766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18768, !srcloc !18337
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18769
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18769
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !18770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18771
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18773, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18775
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18775
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18771
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18776
  br i1 %28, label %30, label %29, !dbg !18777

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18778
  unreachable, !dbg !18778

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18775
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18771
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18779
  call void @llvm.dbg.value(metadata i32 undef, metadata !18733, metadata !DIExpression()), !dbg !18737
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18780
  %32 = sub nsw i32 %31, %18, !dbg !18780
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18737
  call void @llvm.dbg.value(metadata i32 undef, metadata !18733, metadata !DIExpression()), !dbg !18737
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !18748
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18749
  br i1 %34, label %37, label %8, !dbg !18750, !llvm.loop !18781

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18783
  store i64 %36, i64* %13, align 8, !dbg !18783
  br label %41, !dbg !18786

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18737
  %40 = sext i32 %39 to i64, !dbg !18787
  br label %41, !dbg !18787

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18787
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18788
  %45 = add i64 %44, %42, !dbg !18788
  store i64 %45, i64* @curr_tick, align 8, !dbg !18788
  store i32 0, i32* @announce_remaining, align 4, !dbg !18789
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !18790
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !18791
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18792
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18794
  br i1 %47, label %49, label %48, !dbg !18795

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18796
  unreachable, !dbg !18796

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18737
  call void @llvm.dbg.value(metadata i32 %50, metadata !18317, metadata !DIExpression()) #26, !dbg !18792
  call void @llvm.dbg.value(metadata i32 %50, metadata !18331, metadata !DIExpression()) #26, !dbg !18797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !18799, !srcloc !18337
  ret void, !dbg !18800
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18801 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18805, metadata !DIExpression()), !dbg !18809
  call void @llvm.dbg.value(metadata i32 0, metadata !18806, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18244, metadata !DIExpression()) #26, !dbg !18811
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18813, !srcloc !18259
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18815
  call void @llvm.dbg.value(metadata i32 undef, metadata !18257, metadata !DIExpression()) #26, !dbg !18815
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18811
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18816
  br i1 %2, label %4, label %3, !dbg !18817

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.389, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18818
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.391, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18818
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 148) #27, !dbg !18818
  unreachable, !dbg !18818

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18256, metadata !DIExpression()) #26, !dbg !18815
  call void @llvm.dbg.value(metadata i32 undef, metadata !18250, metadata !DIExpression()) #26, !dbg !18811
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18808, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.value(metadata i64 0, metadata !18805, metadata !DIExpression()), !dbg !18809
  call void @llvm.dbg.value(metadata i32 undef, metadata !18806, metadata !DIExpression()), !dbg !18810
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18820
  %6 = tail call fastcc i32 @elapsed.392() #28, !dbg !18823
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18809
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18824
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18322, metadata !DIExpression()) #26, !dbg !18824
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18826
  br i1 %7, label %9, label %8, !dbg !18827

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.385, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.395, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18828
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.396, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18828
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.390, i32 0, i32 0), i32 noundef 194) #27, !dbg !18828
  unreachable, !dbg !18828

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18813
  call void @llvm.dbg.value(metadata i32 %10, metadata !18256, metadata !DIExpression()) #26, !dbg !18815
  call void @llvm.dbg.value(metadata i32 %10, metadata !18250, metadata !DIExpression()) #26, !dbg !18811
  call void @llvm.dbg.value(metadata i32 %10, metadata !18808, metadata !DIExpression()), !dbg !18810
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18809
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18809
  call void @llvm.dbg.value(metadata i32 undef, metadata !18317, metadata !DIExpression()) #26, !dbg !18824
  call void @llvm.dbg.value(metadata i32 undef, metadata !18331, metadata !DIExpression()) #26, !dbg !18829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18831, !srcloc !18337
  call void @llvm.dbg.value(metadata i32 undef, metadata !18806, metadata !DIExpression()), !dbg !18810
  %11 = sext i32 %6 to i64, !dbg !18823
  %12 = add i64 %5, %11, !dbg !18832
  ret i64 %12, !dbg !18833
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18834 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18835
  %2 = trunc i64 %1 to i32, !dbg !18836
  ret i32 %2, !dbg !18837
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18838 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18839
  ret i64 %1, !dbg !18840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18843, metadata !DIExpression()), !dbg !18850
  %2 = icmp eq i32 %0, 0, !dbg !18851
  br i1 %2, label %10, label %3, !dbg !18853

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.412() #28, !dbg !18854
  call void @llvm.dbg.value(metadata i32 %4, metadata !18844, metadata !DIExpression()), !dbg !18850
  %5 = mul i32 %0, 84, !dbg !18855
  call void @llvm.dbg.value(metadata i32 %5, metadata !18845, metadata !DIExpression()), !dbg !18850
  br label %6, !dbg !18856

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.412() #28, !dbg !18857
  call void @llvm.dbg.value(metadata i32 %7, metadata !18846, metadata !DIExpression()), !dbg !18858
  %8 = sub i32 %7, %4, !dbg !18859
  %9 = icmp ult i32 %8, %5, !dbg !18861
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.412() unnamed_addr #1 !dbg !18863 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.413() #28, !dbg !18864
  ret i32 %1, !dbg !18865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.413() unnamed_addr #1 !dbg !18866 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18867
  ret i32 %1, !dbg !18868
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18869 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18873, metadata !DIExpression()), !dbg !18875
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18876

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !18877
  br label %14, !dbg !18881

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18874, metadata !DIExpression()), !dbg !18875
  %6 = icmp slt i64 %2, -1, !dbg !18882
  br i1 %6, label %7, label %9, !dbg !18885

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18886
  br label %14, !dbg !18887

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !18889
  %11 = icmp ugt i64 %2, 1, !dbg !18890
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18890
  %13 = add nsw i64 %10, %12, !dbg !18891
  br label %14, !dbg !18892

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18893
  ret i64 %15, !dbg !18894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18895 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.416, i32 0, i32 0)) #27, !dbg !18897
  ret void, !dbg !18898
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18901, metadata !DIExpression()), !dbg !18923
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18902, metadata !DIExpression()), !dbg !18924
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !18925

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.419, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 24) #27, !dbg !18929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.421, i32 0, i32 0)) #27, !dbg !18929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 24) #27, !dbg !18929
  unreachable, !dbg !18929

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18902, metadata !DIExpression()), !dbg !18924
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18932
  br i1 %5, label %7, label %6, !dbg !18933

6:                                                ; preds = %3
  ret i32 0, !dbg !18934

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18935
  %9 = load i8*, i8** %8, align 4, !dbg !18935
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18938
  %11 = load i32, i32* %10, align 4, !dbg !18938
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !18939
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18940
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !18902, metadata !DIExpression()), !dbg !18924
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18941
  br i1 %13, label %2, label %3, !dbg !18925, !llvm.loop !18942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18944 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18948, metadata !DIExpression()), !dbg !18951
  call void @llvm.dbg.value(metadata i8* %1, metadata !18949, metadata !DIExpression()), !dbg !18951
  call void @llvm.dbg.value(metadata i32 %2, metadata !18950, metadata !DIExpression()), !dbg !18951
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18952
  tail call fastcc void @z_waitq_init.422(%union.anon* noundef nonnull %4) #28, !dbg !18953
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18954
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18955
  ret void, !dbg !18956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.422(%union.anon* noundef %0) unnamed_addr #12 !dbg !18957 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18962, metadata !DIExpression()), !dbg !18963
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18964
  tail call fastcc void @sys_dlist_init.423(%struct._dnode* noundef %2) #28, !dbg !18965
  ret void, !dbg !18966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.423(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !18967 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18972, metadata !DIExpression()), !dbg !18973
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18974
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18975
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18976
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18977
  ret void, !dbg !18978
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18979 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18990, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18987, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 %1, metadata !18988, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 %2, metadata !18989, metadata !DIExpression()), !dbg !19000
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !19001
  call void @llvm.dbg.value(metadata i64 %6, metadata !18992, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i8* null, metadata !18993, metadata !DIExpression()), !dbg !19000
  %7 = icmp eq i64 %5, -1, !dbg !19002
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19002
  call void @llvm.dbg.value(metadata i64 %8, metadata !18992, metadata !DIExpression()), !dbg !19000
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19004, metadata !DIExpression()) #26, !dbg !19011
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19013, !srcloc !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19016, metadata !DIExpression()) #26, !dbg !19020
  call void @llvm.dbg.value(metadata i32 undef, metadata !19017, metadata !DIExpression()) #26, !dbg !19020
  call void @llvm.dbg.value(metadata i32 undef, metadata !19010, metadata !DIExpression()) #26, !dbg !19011
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19021
  br i1 %11, label %13, label %12, !dbg !19024

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.426, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19025
  unreachable, !dbg !19025

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19016, metadata !DIExpression()) #26, !dbg !19020
  call void @llvm.dbg.value(metadata i32 undef, metadata !19010, metadata !DIExpression()) #26, !dbg !19011
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19027
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()), !dbg !19000
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19028, !srcloc !19037
  call void @llvm.dbg.value(metadata i32 %14, metadata !19031, metadata !DIExpression()) #26, !dbg !19038
  %15 = icmp eq i32 %14, 0, !dbg !19039
  %16 = icmp eq i64 %5, 0, !dbg !19040
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19040
  br i1 %17, label %18, label %25, !dbg !19040

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18993, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i8 0, metadata !18999, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()), !dbg !19000
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19041
  call void @llvm.dbg.value(metadata i8* %20, metadata !18993, metadata !DIExpression()), !dbg !19000
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19043
  call void @llvm.dbg.value(metadata i64 %21, metadata !18991, metadata !DIExpression()), !dbg !19000
  %22 = icmp eq i8* %20, null, !dbg !19044
  br i1 %22, label %23, label %43, !dbg !19046

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()), !dbg !19000
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19046

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.427, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 76) #27, !dbg !19047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.428, i32 0, i32 0)) #27, !dbg !19047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.420, i32 0, i32 0), i32 noundef 76) #27, !dbg !19047
  unreachable, !dbg !19047

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18999, metadata !DIExpression()), !dbg !19000
  %29 = sub nsw i64 %8, %27, !dbg !19049
  %30 = icmp slt i64 %29, 1, !dbg !19050
  br i1 %30, label %43, label %31, !dbg !19051

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19000
  call void @llvm.dbg.value(metadata i8 undef, metadata !18999, metadata !DIExpression()), !dbg !19000
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19052
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19052
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19052
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19004, metadata !DIExpression()) #26, !dbg !19053
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19055, !srcloc !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19016, metadata !DIExpression()) #26, !dbg !19057
  call void @llvm.dbg.value(metadata i32 undef, metadata !19017, metadata !DIExpression()) #26, !dbg !19057
  call void @llvm.dbg.value(metadata i32 undef, metadata !19010, metadata !DIExpression()) #26, !dbg !19053
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19058
  br i1 %37, label %39, label %38, !dbg !19059

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19060
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.426, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19060
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19060
  unreachable, !dbg !19060

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !18999, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !19016, metadata !DIExpression()) #26, !dbg !19057
  call void @llvm.dbg.value(metadata i32 undef, metadata !19010, metadata !DIExpression()) #26, !dbg !19053
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19061
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i8* null, metadata !18993, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !18994, metadata !DIExpression()), !dbg !19000
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19041
  call void @llvm.dbg.value(metadata i8* %40, metadata !18993, metadata !DIExpression()), !dbg !19000
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19043
  call void @llvm.dbg.value(metadata i64 %41, metadata !18991, metadata !DIExpression()), !dbg !19000
  %42 = icmp eq i8* %40, null, !dbg !19044
  br i1 %42, label %26, label %43, !dbg !19046, !llvm.loop !19062

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19041
  call void @llvm.dbg.value(metadata i8* %45, metadata !18993, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !19065, metadata !DIExpression()) #26, !dbg !19071
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19070, metadata !DIExpression()) #26, !dbg !19071
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19073
  br i1 %46, label %48, label %47, !dbg !19076

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 194) #27, !dbg !19077
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 194) #27, !dbg !19077
  unreachable, !dbg !19077

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19000
  call void @llvm.dbg.value(metadata i32 %49, metadata !19065, metadata !DIExpression()) #26, !dbg !19071
  call void @llvm.dbg.value(metadata i32 %49, metadata !19079, metadata !DIExpression()) #26, !dbg !19082
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19084, !srcloc !19085
  ret i8* %45, !dbg !19086
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19087 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19093, metadata !DIExpression()), !dbg !19095
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19091, metadata !DIExpression()), !dbg !19095
  call void @llvm.dbg.value(metadata i32 %1, metadata !19092, metadata !DIExpression()), !dbg !19095
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19096
  call void @llvm.dbg.value(metadata i8* %4, metadata !19094, metadata !DIExpression()), !dbg !19095
  ret i8* %4, !dbg !19097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19098 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19102, metadata !DIExpression()), !dbg !19105
  call void @llvm.dbg.value(metadata i8* %1, metadata !19103, metadata !DIExpression()), !dbg !19105
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19004, metadata !DIExpression()) #26, !dbg !19107
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19109, !srcloc !19019
  call void @llvm.dbg.value(metadata i32 undef, metadata !19016, metadata !DIExpression()) #26, !dbg !19111
  call void @llvm.dbg.value(metadata i32 undef, metadata !19017, metadata !DIExpression()) #26, !dbg !19111
  call void @llvm.dbg.value(metadata i32 undef, metadata !19010, metadata !DIExpression()) #26, !dbg !19107
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19112
  br i1 %5, label %7, label %6, !dbg !19113

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19114
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.426, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 148) #27, !dbg !19114
  unreachable, !dbg !19114

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19109
  call void @llvm.dbg.value(metadata i32 %8, metadata !19016, metadata !DIExpression()) #26, !dbg !19111
  call void @llvm.dbg.value(metadata i32 %8, metadata !19010, metadata !DIExpression()) #26, !dbg !19107
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19115
  call void @llvm.dbg.value(metadata i32 %8, metadata !19104, metadata !DIExpression()), !dbg !19105
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19116
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19117
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19118
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19120
  %12 = icmp eq i32 %11, 0, !dbg !19121
  br i1 %12, label %15, label %13, !dbg !19122

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19123
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19123
  br label %19, !dbg !19125

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19065, metadata !DIExpression()) #26, !dbg !19126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19070, metadata !DIExpression()) #26, !dbg !19126
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19129
  br i1 %16, label %18, label %17, !dbg !19130

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.429, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 194) #27, !dbg !19131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.425, i32 0, i32 0), i32 noundef 194) #27, !dbg !19131
  unreachable, !dbg !19131

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19065, metadata !DIExpression()) #26, !dbg !19126
  call void @llvm.dbg.value(metadata i32 %8, metadata !19079, metadata !DIExpression()) #26, !dbg !19132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19134, !srcloc !19085
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19135
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!935, !2, !2565, !27, !354, !420, !442, !2567, !2569, !2602, !2636, !2638, !452, !503, !2640, !2643, !2654, !2700, !2702, !2730, !2758, !2801, !2872, !2917, !532, !674, !2945, !710, !720, !745, !967, !2950, !1103, !1169, !1477, !1701, !2988, !1814, !1904, !2990, !3075, !3139, !1953, !3142, !1960, !2331, !3160, !3162, !2351, !2376, !3268, !2493, !3271, !2534}
!llvm.ident = !{!3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273, !3273}
!llvm.module.flags = !{!3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !452, file: !469, line: 56, type: !470, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !468, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 379, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 224, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !457, line: 372, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !458, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !458, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!468 = !{!450}
!469 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !500}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !471, file: !472, line: 60, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DISubroutineType(types: !477)
!477 = !{!105, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485, !486, !493, !494}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 380, baseType: !269, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !480, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !480, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !480, file: !481, line: 386, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !488, file: !481, line: 359, baseType: !169, size: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !488, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!492 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !480, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !480, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !481, line: 43, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !499)
!499 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !471, file: !472, line: 65, baseType: !478, size: 32, offset: 32)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !503, file: !506, line: 71, type: !507, isLocal: true, isDefinition: true, align: 32)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !505, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!505 = !{!501}
!506 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !509)
!509 = !{!510, !529}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !508, file: !472, line: 60, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DISubroutineType(types: !513)
!513 = !{!105, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !527, !528}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !481, line: 380, baseType: !269, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !516, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !516, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !516, file: !481, line: 386, baseType: !522, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !523, file: !481, line: 359, baseType: !169, size: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !523, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !516, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !516, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !508, file: !472, line: 65, baseType: !514, size: 32, offset: 32)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !667, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!534 = !{!111, !105, !113, !104}
!535 = !{!530, !536, !663}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !649, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !644)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !544)
!544 = !{!545, !603, !615, !616, !617, !618, !624, !639}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !127, line: 247, baseType: !546, size: 384)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !547)
!547 = !{!548, !572, !579, !580, !581, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 60, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 60, size: 64, elements: !550)
!550 = !{!551, !566}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !549, file: !127, line: 61, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !554)
!554 = !{!555, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 38, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 38, size: 32, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !556, file: !137, line: 39, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !137, line: 40, baseType: !559, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 42, baseType: !562, size: 32, offset: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 42, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !562, file: !137, line: 43, baseType: !559, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !137, line: 44, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !549, file: !127, line: 62, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !567, file: !153, line: 50, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !158)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !546, file: !127, line: 68, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !575, file: !163, line: 232, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !553)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !546, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !546, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 90, baseType: !582, size: 16, offset: 112)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 90, size: 16, elements: !583)
!583 = !{!584, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !127, line: 91, baseType: !585, size: 16)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !127, line: 91, size: 16, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !585, file: !127, line: 96, baseType: !179, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !585, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !582, file: !127, line: 100, baseType: !183, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !546, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !546, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !546, file: !127, line: 131, baseType: !593, size: 192, offset: 192)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !594)
!594 = !{!595, !596, !602}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !593, file: !163, line: 245, baseType: !552, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !593, file: !163, line: 246, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !593, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !127, line: 250, baseType: !604, size: 288, offset: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !604, file: !200, line: 26, baseType: !113, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !604, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !604, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !604, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !604, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !604, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !604, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !604, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !604, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !127, line: 256, baseType: !574, size: 64, offset: 704)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !127, line: 300, baseType: !619, size: 96, offset: 800)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !619, file: !127, line: 153, baseType: !22, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !619, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !619, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !127, line: 325, baseType: !625, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !627)
!627 = !{!628, !634, !635}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !626, file: !122, line: 5074, baseType: !629, size: 96)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !629, file: !226, line: 57, baseType: !229, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !629, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !629, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !626, file: !122, line: 5075, baseType: !574, size: 64, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !626, file: !122, line: 5076, baseType: !636, size: 32, offset: 160)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !636, file: !236, line: 52, baseType: !22, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !127, line: 343, baseType: !640, size: 64, offset: 928)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !640, file: !200, line: 63, baseType: !113, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !640, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!644 = !{!645, !646, !647, !648}
!645 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!646 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !169)
!647 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!648 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !111)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !661)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !652)
!651 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !651, line: 53, baseType: !22, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !650, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !650, file: !651, line: 55, baseType: !656, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !658)
!657 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !658, file: !657, line: 150, baseType: !113, size: 32)
!661 = !{!662}
!662 = !DISubrange(count: 1)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !665, isLocal: true, isDefinition: true)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 96, elements: !661)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !348, line: 17, baseType: !269, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !668, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !674, file: !707, line: 39, type: !169, isLocal: true, isDefinition: true)
!674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !676, globals: !706, splitDebugInlining: false, nameTableKind: None)
!675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!676 = !{!677, !104, !105, !694, !169}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !679, line: 1226, baseType: !680)
!679 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 1213, size: 352, elements: !681)
!681 = !{!682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !680, file: !679, line: 1215, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !680, file: !679, line: 1216, baseType: !461, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !680, file: !679, line: 1217, baseType: !461, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !680, file: !679, line: 1218, baseType: !461, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !680, file: !679, line: 1219, baseType: !461, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !680, file: !679, line: 1220, baseType: !461, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !680, file: !679, line: 1221, baseType: !461, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !680, file: !679, line: 1222, baseType: !461, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !680, file: !679, line: 1223, baseType: !461, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !680, file: !679, line: 1224, baseType: !461, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !680, file: !679, line: 1225, baseType: !461, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !698)
!697 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !697, line: 29, baseType: !113, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !696, file: !697, line: 37, baseType: !702, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !703, file: !657, line: 143, baseType: !113, size: 32)
!706 = !{!672}
!707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !710, file: !717, line: 21, type: !447, isLocal: true, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !716, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!712 = !{!713, !105, !104}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !715, line: 22, baseType: !105)
!715 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !{!708}
!717 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !720, file: !725, line: 13, type: !742, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!722 = !{!723, !718}
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "mpu_config", scope: !720, file: !725, line: 37, type: !726, isLocal: false, isDefinition: true)
!725 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !697, line: 41, size: 64, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !727, file: !697, line: 43, baseType: !113, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !727, file: !697, line: 45, baseType: !731, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !697, line: 29, baseType: !113, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !733, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !733, file: !697, line: 37, baseType: !738, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !739, file: !657, line: 143, baseType: !113, size: 32)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 192, elements: !158)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !745, file: !849, line: 72, type: !930, isLocal: true, isDefinition: true)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !835, globals: !846, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!747 = !{!30, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 65, baseType: !105, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834}
!750 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!751 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!752 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!753 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!754 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!755 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!756 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!757 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!758 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!759 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!760 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!761 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!762 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!763 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!764 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!765 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!766 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!767 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!768 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!769 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!770 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!771 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!772 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!773 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!774 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!775 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!776 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!777 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!778 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!779 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!780 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!781 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!782 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!783 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!784 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!785 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!786 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!787 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!788 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!789 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!790 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!791 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!792 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!793 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!794 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!795 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!796 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!797 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!798 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!799 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!800 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!801 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!802 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!803 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!804 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!805 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!806 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!807 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!808 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!809 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!810 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!811 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!812 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!813 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!814 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!815 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!816 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!817 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!818 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!819 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!820 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!821 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!822 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!823 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!824 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!825 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!826 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!827 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!828 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!829 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!830 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!831 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!832 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!833 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!834 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!835 = !{!111, !105, !104, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 364, baseType: !838)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 356, size: 192, elements: !839)
!839 = !{!840, !841, !842, !843, !844, !845}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !838, file: !457, line: 358, baseType: !461, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !838, file: !457, line: 359, baseType: !461, size: 32, offset: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !838, file: !457, line: 360, baseType: !461, size: 32, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !838, file: !457, line: 361, baseType: !461, size: 32, offset: 96)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !838, file: !457, line: 362, baseType: !461, size: 32, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !838, file: !457, line: 363, baseType: !461, size: 32, offset: 160)
!846 = !{!847, !851, !867, !878, !895, !743, !897, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928}
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !745, file: !849, line: 424, type: !850, isLocal: false, isDefinition: true, align: 16)
!849 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !313)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !745, file: !849, line: 424, type: !853, isLocal: false, isDefinition: true, align: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !855)
!855 = !{!856, !857, !858, !859, !865, !866}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !854, file: !481, line: 380, baseType: !269, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !854, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !854, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !854, file: !481, line: 386, baseType: !860, size: 32, offset: 96)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !861, file: !481, line: 359, baseType: !169, size: 8)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !861, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !854, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !854, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !745, file: !849, line: 424, type: !869, isLocal: true, isDefinition: true, align: 32)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !870)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !871)
!871 = !{!872, !877}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !870, file: !472, line: 60, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DISubroutineType(types: !875)
!875 = !{!105, !876}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !870, file: !472, line: 65, baseType: !876, size: 32, offset: 32)
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "exti_data", scope: !745, file: !849, line: 423, type: !880, isLocal: true, isDefinition: true)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !849, line: 107, size: 1472, elements: !881)
!881 = !{!882}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !880, file: !849, line: 109, baseType: !883, size: 1472)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !884, size: 1472, elements: !893)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !849, line: 101, size: 64, elements: !885)
!885 = !{!886, !892}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !884, file: !849, line: 102, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !888, line: 63, baseType: !889)
!888 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = !DISubroutineType(types: !891)
!891 = !{null, !105, !104}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !884, file: !849, line: 103, baseType: !104, size: 32, offset: 32)
!893 = !{!894}
!894 = !DISubrange(count: 23)
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !745, file: !849, line: 424, type: !861, isLocal: true, isDefinition: true, align: 8)
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !899, file: !849, line: 493, type: !904, isLocal: true, isDefinition: true, align: 32)
!899 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !849, file: !849, line: 460, type: !900, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !902)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !876}
!902 = !{!903}
!903 = !DILocalVariable(name: "dev", arg: 1, scope: !899, file: !849, line: 460, type: !876)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !905)
!905 = !{!906, !907, !908, !909}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !904, file: !10, line: 55, baseType: !116, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !904, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !904, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !904, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !899, file: !849, line: 497, type: !904, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !899, file: !849, line: 507, type: !904, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !899, file: !849, line: 512, type: !904, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !899, file: !849, line: 516, type: !904, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !899, file: !849, line: 523, type: !904, isLocal: true, isDefinition: true, align: 32)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !899, file: !849, line: 527, type: !904, isLocal: true, isDefinition: true, align: 32)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !899, file: !849, line: 581, type: !904, isLocal: true, isDefinition: true, align: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !899, file: !849, line: 586, type: !904, isLocal: true, isDefinition: true, align: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !899, file: !849, line: 591, type: !904, isLocal: true, isDefinition: true, align: 32)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !899, file: !849, line: 595, type: !904, isLocal: true, isDefinition: true, align: 32)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 736, elements: !893)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 154, baseType: !748)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !935, file: !940, line: 22, type: !962, isLocal: false, isDefinition: true, align: 16)
!935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !937, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!937 = !{!938, !933, !944, !946, !948, !950, !952, !954, !956, !958, !960}
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !935, file: !940, line: 17, type: !941, isLocal: false, isDefinition: true, align: 16)
!940 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 192, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 12)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !935, file: !940, line: 29, type: !850, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !935, file: !940, line: 36, type: !850, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !935, file: !940, line: 43, type: !850, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !935, file: !940, line: 50, type: !850, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !935, file: !940, line: 57, type: !850, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !935, file: !940, line: 64, type: !850, isLocal: false, isDefinition: true, align: 16)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !935, file: !940, line: 71, type: !850, isLocal: false, isDefinition: true, align: 16)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !935, file: !940, line: 78, type: !850, isLocal: false, isDefinition: true, align: 16)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !935, file: !940, line: 85, type: !850, isLocal: false, isDefinition: true, align: 16)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 48, elements: !963)
!963 = !{!964}
!964 = !DISubrange(count: 3)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !967, file: !1029, line: 398, type: !1062, isLocal: true, isDefinition: true)
!967 = distinct !DICompileUnit(language: DW_LANG_C99, file: !968, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !969, retainedTypes: !982, globals: !1026, splitDebugInlining: false, nameTableKind: None)
!968 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!969 = !{!970, !30, !975}
!970 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !971, line: 197, baseType: !32, size: 32, elements: !972)
!971 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!972 = !{!973, !974}
!973 = !DIEnumerator(name: "SUCCESS", value: 0)
!974 = !DIEnumerator(name: "ERROR", value: 1)
!975 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !976, line: 44, baseType: !32, size: 32, elements: !977)
!976 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!977 = !{!978, !979, !980, !981}
!978 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!979 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!980 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!981 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!982 = !{!104, !105, !113, !983, !1019, !1025}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 510, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 477, size: 1216, elements: !986)
!986 = !{!987, !988, !989, !990, !991, !992, !993, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !985, file: !457, line: 479, baseType: !461, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !985, file: !457, line: 480, baseType: !461, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !985, file: !457, line: 481, baseType: !461, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !985, file: !457, line: 482, baseType: !461, size: 32, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !985, file: !457, line: 483, baseType: !461, size: 32, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !985, file: !457, line: 484, baseType: !461, size: 32, offset: 160)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !985, file: !457, line: 485, baseType: !994, size: 64, offset: 192)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !158)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !985, file: !457, line: 486, baseType: !461, size: 32, offset: 256)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !985, file: !457, line: 487, baseType: !461, size: 32, offset: 288)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !985, file: !457, line: 488, baseType: !994, size: 64, offset: 320)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !985, file: !457, line: 489, baseType: !461, size: 32, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !985, file: !457, line: 490, baseType: !461, size: 32, offset: 416)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !985, file: !457, line: 491, baseType: !994, size: 64, offset: 448)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !985, file: !457, line: 492, baseType: !461, size: 32, offset: 512)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !985, file: !457, line: 493, baseType: !461, size: 32, offset: 544)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !985, file: !457, line: 494, baseType: !994, size: 64, offset: 576)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !985, file: !457, line: 495, baseType: !461, size: 32, offset: 640)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !985, file: !457, line: 496, baseType: !461, size: 32, offset: 672)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !985, file: !457, line: 497, baseType: !994, size: 64, offset: 704)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !985, file: !457, line: 498, baseType: !461, size: 32, offset: 768)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !985, file: !457, line: 499, baseType: !461, size: 32, offset: 800)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !985, file: !457, line: 500, baseType: !994, size: 64, offset: 832)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !985, file: !457, line: 501, baseType: !461, size: 32, offset: 896)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !985, file: !457, line: 502, baseType: !461, size: 32, offset: 928)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !985, file: !457, line: 503, baseType: !994, size: 64, offset: 960)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !985, file: !457, line: 504, baseType: !461, size: 32, offset: 1024)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !985, file: !457, line: 505, baseType: !461, size: 32, offset: 1056)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !985, file: !457, line: 506, baseType: !113, size: 32, offset: 1088)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !985, file: !457, line: 507, baseType: !461, size: 32, offset: 1120)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !985, file: !457, line: 508, baseType: !461, size: 32, offset: 1152)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !985, file: !457, line: 509, baseType: !461, size: 32, offset: 1184)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1022)
!1021 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1020, file: !1021, line: 344, baseType: !113, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1020, file: !1021, line: 345, baseType: !113, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1026 = !{!1027, !1033, !1049, !1060, !965}
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !967, file: !1029, line: 752, type: !1030, isLocal: false, isDefinition: true, align: 16)
!1029 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 848, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 53)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !967, file: !1029, line: 752, type: !1035, isLocal: false, isDefinition: true, align: 32)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1037)
!1037 = !{!1038, !1039, !1040, !1041, !1047, !1048}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1036, file: !481, line: 380, baseType: !269, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1036, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1036, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1036, file: !481, line: 386, baseType: !1042, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1044)
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1043, file: !481, line: 359, baseType: !169, size: 8)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1043, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1036, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1036, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !967, file: !1029, line: 752, type: !1051, isLocal: true, isDefinition: true, align: 32)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1053)
!1053 = !{!1054, !1059}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1052, file: !472, line: 60, baseType: !1055, size: 32)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!105, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1052, file: !472, line: 65, baseType: !1058, size: 32, offset: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !967, file: !1029, line: 752, type: !1043, isLocal: true, isDefinition: true, align: 8)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !976, line: 100, size: 224, elements: !1063)
!1063 = !{!1064, !1070, !1071, !1080, !1085, !1090, !1096}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1062, file: !976, line: 101, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !976, line: 76, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!105, !1058, !1069}
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !976, line: 56, baseType: !104)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1062, file: !976, line: 102, baseType: !1065, size: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1062, file: !976, line: 103, baseType: !1072, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !976, line: 83, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!105, !1058, !1069, !1076, !104}
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !976, line: 72, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 32)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !1058, !1069, !104}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1062, file: !976, line: 104, baseType: !1081, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !976, line: 79, baseType: !1082)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!105, !1058, !1069, !1025}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1062, file: !976, line: 105, baseType: !1086, size: 32, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !976, line: 88, baseType: !1087)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!975, !1058, !1069}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1062, file: !976, line: 106, baseType: !1091, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !976, line: 92, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!105, !1058, !1069, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !976, line: 64, baseType: !104)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1062, file: !976, line: 107, baseType: !1097, size: 32, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !976, line: 96, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 32)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!105, !1058, !1069, !104}
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1103, file: !1160, line: 603, type: !1162, isLocal: true, isDefinition: true, align: 32)
!1103 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1104, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1105, globals: !1157, splitDebugInlining: false, nameTableKind: None)
!1104 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1105 = !{!104, !105, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1109, line: 336, size: 160, elements: !1110)
!1109 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1110 = !{!1111, !1131, !1135, !1139, !1152}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1108, file: !1109, line: 365, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!105, !1115, !1130}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1128, !1129}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1117, file: !481, line: 380, baseType: !269, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1117, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1117, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1117, file: !481, line: 386, baseType: !1123, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1124, file: !481, line: 359, baseType: !169, size: 8)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1124, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1117, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1117, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1108, file: !1109, line: 366, baseType: !1132, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{null, !1115, !170}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1108, file: !1109, line: 374, baseType: !1136, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!105, !1115}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1108, file: !1109, line: 377, baseType: !1140, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!105, !1115, !1143}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1109, line: 122, size: 64, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1145, file: !1109, line: 123, baseType: !113, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1145, file: !1109, line: 124, baseType: !169, size: 8, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1145, file: !1109, line: 125, baseType: !169, size: 8, offset: 40)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1145, file: !1109, line: 126, baseType: !169, size: 8, offset: 48)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1145, file: !1109, line: 127, baseType: !169, size: 8, offset: 56)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1108, file: !1109, line: 379, baseType: !1153, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!105, !1115, !1156}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1157 = !{!1101, !1158}
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1103, file: !1160, line: 38, type: !1161, isLocal: true, isDefinition: true)
!1160 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1163, file: !472, line: 60, baseType: !1136, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1163, file: !472, line: 65, baseType: !1115, size: 32, offset: 32)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1169, file: !1340, line: 762, type: !1452, isLocal: true, isDefinition: true)
!1169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1170, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1171, retainedTypes: !1189, globals: !1337, splitDebugInlining: false, nameTableKind: None)
!1170 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1171 = !{!30, !1172, !1178, !1183, !975}
!1172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1173, line: 506, baseType: !32, size: 32, elements: !1174)
!1173 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1174 = !{!1175, !1176, !1177}
!1175 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1176 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1177 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1173, line: 512, baseType: !32, size: 32, elements: !1179)
!1179 = !{!1180, !1181, !1182}
!1180 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1181 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1182 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !888, line: 43, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1186 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1187 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1188 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1189 = !{!104, !105, !1190, !1260, !1265, !1225, !1178, !1172, !1270, !1271, !113, !1285, !1240, !102, !1297, !1298}
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1173, line: 523, size: 288, elements: !1193)
!1193 = !{!1194, !1215, !1221, !1226, !1230, !1231, !1232, !1236, !1256}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1192, file: !1173, line: 524, baseType: !1195, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!105, !1198, !1213, !1214}
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205, !1211, !1212}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1200, file: !481, line: 380, baseType: !269, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1200, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1200, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1200, file: !481, line: 386, baseType: !1206, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1208)
!1208 = !{!1209, !1210}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1207, file: !481, line: 359, baseType: !169, size: 8)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1207, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1200, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1200, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1173, line: 237, baseType: !169)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1173, line: 257, baseType: !113)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1192, file: !1173, line: 530, baseType: !1216, size: 32, offset: 32)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!105, !1198, !1219}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1173, line: 229, baseType: !113)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1192, file: !1173, line: 532, baseType: !1222, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!105, !1198, !1225, !1220}
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1173, line: 216, baseType: !113)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1192, file: !1173, line: 535, baseType: !1227, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!105, !1198, !1225}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1192, file: !1173, line: 537, baseType: !1227, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1192, file: !1173, line: 539, baseType: !1227, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1192, file: !1173, line: 541, baseType: !1233, size: 32, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!105, !1198, !1213, !1172, !1178}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1192, file: !1173, line: 544, baseType: !1237, size: 32, offset: 224)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!105, !1198, !1240, !492}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1173, line: 478, size: 96, elements: !1242)
!1242 = !{!1243, !1250, !1255}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1241, file: !1173, line: 482, baseType: !1244, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1245, line: 33, baseType: !1246)
!1245 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1245, line: 29, size: 32, elements: !1247)
!1247 = !{!1248}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !1245, line: 30, baseType: !1249, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1241, file: !1173, line: 485, baseType: !1251, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1173, line: 464, baseType: !1252)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !1198, !1240, !1225}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1241, file: !1173, line: 493, baseType: !1225, size: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1192, file: !1173, line: 547, baseType: !1257, size: 32, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!113, !1198}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1173, line: 428, size: 32, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1262, file: !1173, line: 434, baseType: !1225, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1173, line: 441, size: 32, elements: !1268)
!1268 = !{!1269}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1267, file: !1173, line: 447, baseType: !1225, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 396, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 385, size: 320, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1273, file: !457, line: 387, baseType: !461, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1273, file: !457, line: 388, baseType: !461, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1273, file: !457, line: 389, baseType: !461, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1273, file: !457, line: 390, baseType: !461, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1273, file: !457, line: 391, baseType: !461, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1273, file: !457, line: 392, baseType: !461, size: 32, offset: 160)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1273, file: !457, line: 393, baseType: !461, size: 32, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1273, file: !457, line: 394, baseType: !461, size: 32, offset: 224)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1273, file: !457, line: 395, baseType: !1284, size: 64, offset: 256)
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 411, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 402, size: 320, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1293, !1294, !1295, !1296}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1287, file: !457, line: 404, baseType: !461, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1287, file: !457, line: 405, baseType: !461, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1287, file: !457, line: 406, baseType: !1292, size: 128, offset: 64)
!1292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1287, file: !457, line: 407, baseType: !113, size: 32, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1287, file: !457, line: 408, baseType: !461, size: 32, offset: 224)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1287, file: !457, line: 409, baseType: !461, size: 32, offset: 256)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1287, file: !457, line: 410, baseType: !461, size: 32, offset: 288)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1300)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !976, line: 100, size: 224, elements: !1301)
!1301 = !{!1302, !1307, !1308, !1317, !1322, !1327, !1332}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1300, file: !976, line: 101, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !976, line: 76, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!105, !1198, !1069}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1300, file: !976, line: 102, baseType: !1303, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1300, file: !976, line: 103, baseType: !1309, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !976, line: 83, baseType: !1310)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!105, !1198, !1069, !1313, !104}
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !976, line: 72, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{null, !1198, !1069, !104}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1300, file: !976, line: 104, baseType: !1318, size: 32, offset: 96)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !976, line: 79, baseType: !1319)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!105, !1198, !1069, !1025}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1300, file: !976, line: 105, baseType: !1323, size: 32, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !976, line: 88, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!975, !1198, !1069}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1300, file: !976, line: 106, baseType: !1328, size: 32, offset: 160)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !976, line: 92, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 32)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!105, !1198, !1069, !1095}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1300, file: !976, line: 107, baseType: !1333, size: 32, offset: 192)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !976, line: 96, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!105, !1198, !1069, !104}
!1337 = !{!1338, !1344, !1346, !1356, !1358, !1360, !1362, !1367, !1369, !1371, !1376, !1378, !1380, !1382, !1384, !1386, !1388, !1390, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1434, !1436, !1438, !1440, !1442, !1444, !1446, !1167, !1448, !1450, !1463, !1465, !1467, !1469, !1471, !1473}
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1169, file: !1340, line: 762, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1340 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 112, elements: !1342)
!1342 = !{!1343}
!1343 = !DISubrange(count: 7)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1169, file: !1340, line: 762, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1169, file: !1340, line: 762, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1350)
!1350 = !{!1351, !1355}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1349, file: !472, line: 60, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 32)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!105, !1198}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1349, file: !472, line: 65, baseType: !1198, size: 32, offset: 32)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1169, file: !1340, line: 766, type: !1341, isLocal: false, isDefinition: true, align: 16)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1169, file: !1340, line: 766, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1169, file: !1340, line: 766, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1169, file: !1340, line: 770, type: !1364, isLocal: false, isDefinition: true, align: 16)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 96, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 6)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1169, file: !1340, line: 770, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1169, file: !1340, line: 770, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1169, file: !1340, line: 774, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 80, elements: !1374)
!1374 = !{!1375}
!1375 = !DISubrange(count: 5)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1169, file: !1340, line: 774, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1169, file: !1340, line: 774, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1169, file: !1340, line: 778, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1169, file: !1340, line: 778, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1169, file: !1340, line: 778, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1169, file: !1340, line: 782, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1169, file: !1340, line: 782, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1169, file: !1340, line: 782, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1169, file: !1340, line: 786, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1169, file: !1340, line: 786, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1169, file: !1340, line: 786, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1169, file: !1340, line: 790, type: !1373, isLocal: false, isDefinition: true, align: 16)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1169, file: !1340, line: 790, type: !1199, isLocal: false, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1169, file: !1340, line: 790, type: !1348, isLocal: true, isDefinition: true, align: 32)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1169, file: !1340, line: 762, type: !1406, isLocal: true, isDefinition: true)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1407, line: 237, size: 128, elements: !1408)
!1407 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1408 = !{!1409, !1410, !1411}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1406, file: !1407, line: 239, baseType: !1267, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1406, file: !1407, line: 241, baseType: !1198, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1406, file: !1407, line: 243, baseType: !1412, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1245, line: 40, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1245, line: 35, size: 64, elements: !1414)
!1414 = !{!1415, !1417}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1413, file: !1245, line: 36, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1413, file: !1245, line: 37, baseType: !1416, size: 32, offset: 32)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1169, file: !1340, line: 762, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1169, file: !1340, line: 766, type: !1406, isLocal: true, isDefinition: true)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1169, file: !1340, line: 766, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1169, file: !1340, line: 770, type: !1406, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1169, file: !1340, line: 770, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1169, file: !1340, line: 774, type: !1406, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1169, file: !1340, line: 774, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1169, file: !1340, line: 778, type: !1406, isLocal: true, isDefinition: true)
!1434 = !DIGlobalVariableExpression(var: !1435, expr: !DIExpression())
!1435 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1169, file: !1340, line: 778, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1169, file: !1340, line: 782, type: !1406, isLocal: true, isDefinition: true)
!1438 = !DIGlobalVariableExpression(var: !1439, expr: !DIExpression())
!1439 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1169, file: !1340, line: 782, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1169, file: !1340, line: 786, type: !1406, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1169, file: !1340, line: 786, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1169, file: !1340, line: 790, type: !1406, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1169, file: !1340, line: 790, type: !1207, isLocal: true, isDefinition: true, align: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1169, file: !1340, line: 656, type: !1191, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1169, file: !1340, line: 766, type: !1452, isLocal: true, isDefinition: true)
!1452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1407, line: 224, size: 160, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1453, file: !1407, line: 226, baseType: !1262, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1453, file: !1407, line: 228, baseType: !1025, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1453, file: !1407, line: 230, baseType: !105, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1453, file: !1407, line: 231, baseType: !1459, size: 64, offset: 96)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1460)
!1460 = !{!1461, !1462}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1459, file: !1021, line: 344, baseType: !113, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1459, file: !1021, line: 345, baseType: !113, size: 32, offset: 32)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1169, file: !1340, line: 770, type: !1452, isLocal: true, isDefinition: true)
!1465 = !DIGlobalVariableExpression(var: !1466, expr: !DIExpression())
!1466 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1169, file: !1340, line: 774, type: !1452, isLocal: true, isDefinition: true)
!1467 = !DIGlobalVariableExpression(var: !1468, expr: !DIExpression())
!1468 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1169, file: !1340, line: 778, type: !1452, isLocal: true, isDefinition: true)
!1469 = !DIGlobalVariableExpression(var: !1470, expr: !DIExpression())
!1470 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1169, file: !1340, line: 782, type: !1452, isLocal: true, isDefinition: true)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1169, file: !1340, line: 786, type: !1452, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1169, file: !1340, line: 790, type: !1452, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1477, file: !1616, line: 44, type: !1694, isLocal: false, isDefinition: true)
!1477 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1478, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1479, retainedTypes: !1512, globals: !1613, splitDebugInlining: false, nameTableKind: None)
!1478 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1479 = !{!30, !1480, !1487, !1494, !1501, !1507, !975}
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1109, line: 47, baseType: !32, size: 32, elements: !1481)
!1481 = !{!1482, !1483, !1484, !1485, !1486}
!1482 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1483 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1484 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1485 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1486 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1109, line: 75, baseType: !32, size: 32, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493}
!1489 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1490 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1491 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1492 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1493 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1109, line: 92, baseType: !32, size: 32, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500}
!1496 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1497 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1498 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1499 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1500 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1109, line: 84, baseType: !32, size: 32, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506}
!1503 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1504 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1505 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1506 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1507 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1109, line: 107, baseType: !32, size: 32, elements: !1508)
!1508 = !{!1509, !1510, !1511}
!1509 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1510 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1511 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1512 = !{!104, !105, !1513, !170, !169, !1562, !113, !1069, !1573, !183, !114, !1612}
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1109, line: 336, size: 160, elements: !1516)
!1516 = !{!1517, !1536, !1540, !1544, !1557}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1515, file: !1109, line: 365, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!105, !1521, !1130}
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1524)
!1524 = !{!1525, !1526, !1527, !1528, !1534, !1535}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1523, file: !481, line: 380, baseType: !269, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1523, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1523, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1523, file: !481, line: 386, baseType: !1529, size: 32, offset: 96)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1531)
!1531 = !{!1532, !1533}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1530, file: !481, line: 359, baseType: !169, size: 8)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1530, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1523, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1523, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1515, file: !1109, line: 366, baseType: !1537, size: 32, offset: 32)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{null, !1521, !170}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1515, file: !1109, line: 374, baseType: !1541, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!105, !1521}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1515, file: !1109, line: 377, baseType: !1545, size: 32, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!105, !1521, !1548}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1109, line: 122, size: 64, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1556}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1550, file: !1109, line: 123, baseType: !113, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1550, file: !1109, line: 124, baseType: !169, size: 8, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1550, file: !1109, line: 125, baseType: !169, size: 8, offset: 40)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1550, file: !1109, line: 126, baseType: !169, size: 8, offset: 48)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1550, file: !1109, line: 127, baseType: !169, size: 8, offset: 56)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1515, file: !1109, line: 379, baseType: !1558, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!105, !1521, !1561}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 648, baseType: !1564)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 639, size: 224, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1564, file: !457, line: 641, baseType: !461, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1564, file: !457, line: 642, baseType: !461, size: 32, offset: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1564, file: !457, line: 643, baseType: !461, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1564, file: !457, line: 644, baseType: !461, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1564, file: !457, line: 645, baseType: !461, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1564, file: !457, line: 646, baseType: !461, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1564, file: !457, line: 647, baseType: !461, size: 32, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !976, line: 100, size: 224, elements: !1576)
!1576 = !{!1577, !1582, !1583, !1592, !1597, !1602, !1607}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1575, file: !976, line: 101, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !976, line: 76, baseType: !1579)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 32)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{!105, !1521, !1069}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1575, file: !976, line: 102, baseType: !1578, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1575, file: !976, line: 103, baseType: !1584, size: 32, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !976, line: 83, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!105, !1521, !1069, !1588, !104}
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !976, line: 72, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{null, !1521, !1069, !104}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1575, file: !976, line: 104, baseType: !1593, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !976, line: 79, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!105, !1521, !1069, !1025}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1575, file: !976, line: 105, baseType: !1598, size: 32, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !976, line: 88, baseType: !1599)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!975, !1521, !1069}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1575, file: !976, line: 106, baseType: !1603, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !976, line: 92, baseType: !1604)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!105, !1521, !1069, !1095}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1575, file: !976, line: 107, baseType: !1608, size: 32, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !976, line: 96, baseType: !1609)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!105, !1521, !1069, !104}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!1613 = !{!1475, !1614, !1620, !1622, !1629, !1631, !1675, !1678, !1680, !1683, !1686, !1688}
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1617, isLocal: false, isDefinition: true, align: 16)
!1616 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 128, elements: !1618)
!1618 = !{!1619}
!1619 = !DISubrange(count: 8)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1522, isLocal: false, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1625, file: !472, line: 60, baseType: !1541, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1625, file: !472, line: 65, baseType: !1521, size: 32, offset: 32)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1530, isLocal: true, isDefinition: true, align: 8)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1477, file: !1616, line: 1914, type: !1633, isLocal: true, isDefinition: true)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1635, line: 22, size: 224, elements: !1636)
!1635 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1636 = !{!1637, !1638, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1634, file: !1635, line: 24, baseType: !1562, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1634, file: !1635, line: 26, baseType: !1639, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1021, line: 343, size: 64, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1641, file: !1021, line: 344, baseType: !113, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1641, file: !1021, line: 345, baseType: !113, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1634, file: !1635, line: 28, baseType: !111, size: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1634, file: !1635, line: 30, baseType: !492, size: 8, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1634, file: !1635, line: 32, baseType: !105, size: 32, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1634, file: !1635, line: 34, baseType: !492, size: 8, offset: 160)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1634, file: !1635, line: 36, baseType: !492, size: 8, offset: 168)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1634, file: !1635, line: 38, baseType: !492, size: 8, offset: 176)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1634, file: !1635, line: 40, baseType: !492, size: 8, offset: 184)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1634, file: !1635, line: 41, baseType: !1653, size: 32, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1655)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1656, line: 60, size: 64, elements: !1657)
!1656 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1657 = !{!1658, !1674}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1655, file: !1656, line: 69, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1656, line: 50, size: 64, elements: !1662)
!1662 = !{!1663, !1672, !1673}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1661, file: !1656, line: 52, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1667, line: 37, baseType: !1668)
!1667 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1667, line: 32, size: 64, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1668, file: !1667, line: 34, baseType: !113, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1668, file: !1667, line: 36, baseType: !113, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1661, file: !1656, line: 54, baseType: !169, size: 8, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1661, file: !1656, line: 56, baseType: !169, size: 8, offset: 40)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1655, file: !1656, line: 71, baseType: !169, size: 8, offset: 32)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1477, file: !1616, line: 1914, type: !1677, isLocal: true, isDefinition: true)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1640, size: 64, elements: !661)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1654, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1682, isLocal: true, isDefinition: true)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1660, size: 64, elements: !661)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1477, file: !1616, line: 1914, type: !1685, isLocal: true, isDefinition: true)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1665, size: 128, elements: !158)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1477, file: !1616, line: 1539, type: !1514, isLocal: true, isDefinition: true)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1477, file: !1616, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1635, line: 74, size: 64, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1690, file: !1635, line: 76, baseType: !113, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1690, file: !1635, line: 78, baseType: !1521, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1695)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1696)
!1696 = !{!1697, !1698}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1695, file: !348, line: 17, baseType: !269, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1695, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1701, file: !1777, line: 65, type: !461, isLocal: true, isDefinition: true)
!1701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1703, retainedTypes: !1704, globals: !1774, splitDebugInlining: false, nameTableKind: None)
!1702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1703 = !{!748}
!1704 = !{!107, !1705, !116, !169, !113, !1713, !1744}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1707, file: !679, line: 766, baseType: !461, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1707, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1707, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1707, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !1716)
!1716 = !{!1717, !1719, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1734, !1739, !1743}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1715, file: !679, line: 413, baseType: !1718, size: 256)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1618)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1715, file: !679, line: 414, baseType: !1720, size: 768, offset: 256)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1721)
!1721 = !{!1722}
!1722 = !DISubrange(count: 24)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1715, file: !679, line: 415, baseType: !1718, size: 256, offset: 1024)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1715, file: !679, line: 416, baseType: !1720, size: 768, offset: 1280)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1715, file: !679, line: 417, baseType: !1718, size: 256, offset: 2048)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1715, file: !679, line: 418, baseType: !1720, size: 768, offset: 2304)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1715, file: !679, line: 419, baseType: !1718, size: 256, offset: 3072)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1715, file: !679, line: 420, baseType: !1720, size: 768, offset: 3328)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1715, file: !679, line: 421, baseType: !1718, size: 256, offset: 4096)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1715, file: !679, line: 422, baseType: !1731, size: 1792, offset: 4352)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1732)
!1732 = !{!1733}
!1733 = !DISubrange(count: 56)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1715, file: !679, line: 423, baseType: !1735, size: 1920, offset: 6144)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1736, size: 1920, elements: !1737)
!1736 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1737 = !{!1738}
!1738 = !DISubrange(count: 240)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1715, file: !679, line: 424, baseType: !1740, size: 20608, offset: 8064)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 644)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1715, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1747)
!1747 = !{!1748, !1749, !1750, !1751, !1752, !1753, !1754, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1765, !1766, !1767, !1769, !1771, !1773}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1746, file: !679, line: 447, baseType: !683, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1746, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1746, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1746, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1746, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1746, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1746, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1736, size: 96, elements: !942)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1746, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1746, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1746, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1746, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1746, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1746, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1746, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1746, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !158)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1746, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1746, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1746, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 128, elements: !313)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1746, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !1374)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1746, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1374)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1746, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!1774 = !{!1775, !1801, !1806, !1808, !1810, !1699}
!1775 = !DIGlobalVariableExpression(var: !1776, expr: !DIExpression())
!1776 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1701, file: !1777, line: 285, type: !1778, isLocal: true, isDefinition: true, align: 32)
!1777 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1780)
!1780 = !{!1781, !1800}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1779, file: !472, line: 60, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!105, !1785}
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1788)
!1788 = !{!1789, !1790, !1791, !1792, !1798, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1787, file: !481, line: 380, baseType: !269, size: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1787, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1787, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1787, file: !481, line: 386, baseType: !1793, size: 32, offset: 96)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1794, file: !481, line: 359, baseType: !169, size: 8)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1794, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1787, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1787, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1779, file: !472, line: 65, baseType: !1785, size: 32, offset: 32)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "lock", scope: !1701, file: !1777, line: 34, type: !1803, isLocal: true, isDefinition: true)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1804)
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1803, file: !236, line: 52, baseType: !22, size: 32)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "last_load", scope: !1701, file: !1777, line: 36, type: !113, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1701, file: !1777, line: 48, type: !113, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1701, file: !1777, line: 54, type: !113, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1814, file: !1896, line: 22, type: !1898, isLocal: true, isDefinition: true)
!1814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1816, retainedTypes: !1817, globals: !1893, splitDebugInlining: false, nameTableKind: None)
!1815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1816 = !{!1172, !1178}
!1817 = !{!1818, !1882, !1887, !1225, !1178, !1172, !1892, !104}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1173, line: 523, size: 288, elements: !1821)
!1821 = !{!1822, !1841, !1845, !1849, !1853, !1854, !1855, !1859, !1878}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1820, file: !1173, line: 524, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!105, !1826, !1213, !1214}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1828, file: !481, line: 380, baseType: !269, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1828, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1828, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1828, file: !481, line: 386, baseType: !1834, size: 32, offset: 96)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 32)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1835, file: !481, line: 359, baseType: !169, size: 8)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1835, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1828, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1828, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1820, file: !1173, line: 530, baseType: !1842, size: 32, offset: 32)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!105, !1826, !1219}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1820, file: !1173, line: 532, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!105, !1826, !1225, !1220}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1820, file: !1173, line: 535, baseType: !1850, size: 32, offset: 96)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!105, !1826, !1225}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1820, file: !1173, line: 537, baseType: !1850, size: 32, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1820, file: !1173, line: 539, baseType: !1850, size: 32, offset: 160)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1820, file: !1173, line: 541, baseType: !1856, size: 32, offset: 192)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!105, !1826, !1213, !1172, !1178}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1820, file: !1173, line: 544, baseType: !1860, size: 32, offset: 224)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!105, !1826, !1863, !492}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1173, line: 478, size: 96, elements: !1865)
!1865 = !{!1866, !1872, !1877}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1864, file: !1173, line: 482, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1245, line: 33, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1245, line: 29, size: 32, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1868, file: !1245, line: 30, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1864, file: !1173, line: 485, baseType: !1873, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1173, line: 464, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1826, !1863, !1225}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1864, file: !1173, line: 493, baseType: !1225, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1820, file: !1173, line: 547, baseType: !1879, size: 32, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{!113, !1826}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1173, line: 428, size: 32, elements: !1885)
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1884, file: !1173, line: 434, baseType: !1225, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1173, line: 441, size: 32, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1889, file: !1173, line: 447, baseType: !1225, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1893 = !{!1894, !1812}
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1895 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1814, file: !1896, line: 37, type: !1897, isLocal: true, isDefinition: true)
!1896 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 352, elements: !1900)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1826)
!1900 = !{!1901}
!1901 = !DISubrange(count: 11)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1904, file: !1945, line: 139, type: !1950, isLocal: false, isDefinition: true)
!1904 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1905, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1906, globals: !1942, splitDebugInlining: false, nameTableKind: None)
!1905 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 510, baseType: !1909)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 477, size: 1216, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1909, file: !457, line: 479, baseType: !461, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1909, file: !457, line: 480, baseType: !461, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1909, file: !457, line: 481, baseType: !461, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1909, file: !457, line: 482, baseType: !461, size: 32, offset: 96)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1909, file: !457, line: 483, baseType: !461, size: 32, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1909, file: !457, line: 484, baseType: !461, size: 32, offset: 160)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1909, file: !457, line: 485, baseType: !994, size: 64, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1909, file: !457, line: 486, baseType: !461, size: 32, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1909, file: !457, line: 487, baseType: !461, size: 32, offset: 288)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1909, file: !457, line: 488, baseType: !994, size: 64, offset: 320)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1909, file: !457, line: 489, baseType: !461, size: 32, offset: 384)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1909, file: !457, line: 490, baseType: !461, size: 32, offset: 416)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1909, file: !457, line: 491, baseType: !994, size: 64, offset: 448)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1909, file: !457, line: 492, baseType: !461, size: 32, offset: 512)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1909, file: !457, line: 493, baseType: !461, size: 32, offset: 544)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1909, file: !457, line: 494, baseType: !994, size: 64, offset: 576)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1909, file: !457, line: 495, baseType: !461, size: 32, offset: 640)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1909, file: !457, line: 496, baseType: !461, size: 32, offset: 672)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1909, file: !457, line: 497, baseType: !994, size: 64, offset: 704)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1909, file: !457, line: 498, baseType: !461, size: 32, offset: 768)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1909, file: !457, line: 499, baseType: !461, size: 32, offset: 800)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1909, file: !457, line: 500, baseType: !994, size: 64, offset: 832)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1909, file: !457, line: 501, baseType: !461, size: 32, offset: 896)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1909, file: !457, line: 502, baseType: !461, size: 32, offset: 928)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1909, file: !457, line: 503, baseType: !994, size: 64, offset: 960)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1909, file: !457, line: 504, baseType: !461, size: 32, offset: 1024)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1909, file: !457, line: 505, baseType: !461, size: 32, offset: 1056)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1909, file: !457, line: 506, baseType: !113, size: 32, offset: 1088)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1909, file: !457, line: 507, baseType: !461, size: 32, offset: 1120)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1909, file: !457, line: 508, baseType: !461, size: 32, offset: 1152)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1909, file: !457, line: 509, baseType: !461, size: 32, offset: 1184)
!1942 = !{!1943, !1946, !1902}
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1904, file: !1945, line: 137, type: !113, isLocal: false, isDefinition: true)
!1945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1946 = !DIGlobalVariableExpression(var: !1947, expr: !DIExpression())
!1947 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1904, file: !1945, line: 138, type: !1948, isLocal: false, isDefinition: true)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1949, size: 128, elements: !311)
!1949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1949, size: 64, elements: !1618)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1953, file: !1956, line: 23, type: !1957, isLocal: false, isDefinition: true)
!1953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1954, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1955, splitDebugInlining: false, nameTableKind: None)
!1954 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1955 = !{!1951}
!1956 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1960, file: !1964, line: 37, type: !2217, isLocal: false, isDefinition: true)
!1960 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1962, retainedTypes: !1971, globals: !2044, splitDebugInlining: false, nameTableKind: None)
!1961 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!1962 = !{!1963, !30, !748}
!1963 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1964, line: 63, baseType: !32, size: 32, elements: !1965)
!1964 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1965 = !{!1966, !1967, !1968, !1969, !1970}
!1966 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1967 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1968 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1969 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1970 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1971 = !{!111, !104, !105, !1972, !102, !113, !2002, !116, !169, !2027}
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1975, line: 51, size: 64, elements: !1976)
!1975 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1976 = !{!1977, !1997}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1974, file: !1975, line: 52, baseType: !1978, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1975, line: 38, baseType: !1979)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = !DISubroutineType(types: !1981)
!1981 = !{!105, !1982, !432, !183}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1985)
!1985 = !{!1986, !1987, !1988, !1989, !1995, !1996}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1984, file: !481, line: 380, baseType: !269, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1984, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1984, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1984, file: !481, line: 386, baseType: !1990, size: 32, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1991, file: !481, line: 359, baseType: !169, size: 8)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1991, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1984, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1984, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1974, file: !1975, line: 53, baseType: !1998, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1975, line: 47, baseType: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{!105, !1982, !432, !183, !113}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2004, file: !679, line: 447, baseType: !683, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2004, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2004, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2004, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2004, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2004, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2004, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2004, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2004, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2004, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2004, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2004, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2004, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2004, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2004, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2004, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2004, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2004, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2004, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2004, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2004, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2029)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2029, file: !679, line: 413, baseType: !1718, size: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2029, file: !679, line: 414, baseType: !1720, size: 768, offset: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2029, file: !679, line: 415, baseType: !1718, size: 256, offset: 1024)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2029, file: !679, line: 416, baseType: !1720, size: 768, offset: 1280)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2029, file: !679, line: 417, baseType: !1718, size: 256, offset: 2048)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2029, file: !679, line: 418, baseType: !1720, size: 768, offset: 2304)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2029, file: !679, line: 419, baseType: !1718, size: 256, offset: 3072)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2029, file: !679, line: 420, baseType: !1720, size: 768, offset: 3328)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2029, file: !679, line: 421, baseType: !1718, size: 256, offset: 4096)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2029, file: !679, line: 422, baseType: !1731, size: 1792, offset: 4352)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2029, file: !679, line: 423, baseType: !1735, size: 1920, offset: 6144)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2029, file: !679, line: 424, baseType: !1740, size: 20608, offset: 8064)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2029, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2044 = !{!1958, !2045, !2170, !2178, !2180, !2183, !2187, !2189, !2194}
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "_kernel", scope: !1960, file: !1964, line: 40, type: !2047, isLocal: false, isDefinition: true)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2048)
!2048 = !{!2049, !2165}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2047, file: !163, line: 159, baseType: !2050, size: 224)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2051, size: 224, elements: !661)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2052)
!2052 = !{!2053, !2054, !2055, !2158, !2159, !2160, !2161, !2162}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2051, file: !163, line: 102, baseType: !113, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2051, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2051, file: !163, line: 108, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2058)
!2058 = !{!2059, !2117, !2129, !2130, !2131, !2132, !2138, !2153}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2057, file: !127, line: 247, baseType: !2060, size: 384)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2061)
!2061 = !{!2062, !2086, !2093, !2094, !2095, !2104, !2105, !2106}
!2062 = !DIDerivedType(tag: DW_TAG_member, scope: !2060, file: !127, line: 60, baseType: !2063, size: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2060, file: !127, line: 60, size: 64, elements: !2064)
!2064 = !{!2065, !2080}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2063, file: !127, line: 61, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2068)
!2068 = !{!2069, !2075}
!2069 = !DIDerivedType(tag: DW_TAG_member, scope: !2067, file: !137, line: 38, baseType: !2070, size: 32)
!2070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2067, file: !137, line: 38, size: 32, elements: !2071)
!2071 = !{!2072, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2070, file: !137, line: 39, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2070, file: !137, line: 40, baseType: !2073, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2067, file: !137, line: 42, baseType: !2076, size: 32, offset: 32)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2067, file: !137, line: 42, size: 32, elements: !2077)
!2077 = !{!2078, !2079}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2076, file: !137, line: 43, baseType: !2073, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2076, file: !137, line: 44, baseType: !2073, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2063, file: !127, line: 62, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2082)
!2082 = !{!2083}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2081, file: !153, line: 50, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 64, elements: !158)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2060, file: !127, line: 68, baseType: !2087, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2090)
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2089, file: !163, line: 232, baseType: !2092, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2067)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2060, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2060, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2060, file: !127, line: 90, baseType: !2096, size: 16, offset: 112)
!2096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2060, file: !127, line: 90, size: 16, elements: !2097)
!2097 = !{!2098, !2103}
!2098 = !DIDerivedType(tag: DW_TAG_member, scope: !2096, file: !127, line: 91, baseType: !2099, size: 16)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !127, line: 91, size: 16, elements: !2100)
!2100 = !{!2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2099, file: !127, line: 96, baseType: !179, size: 8)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2099, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2096, file: !127, line: 100, baseType: !183, size: 16)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2060, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2060, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2060, file: !127, line: 131, baseType: !2107, size: 192, offset: 192)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2108)
!2108 = !{!2109, !2110, !2116}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2107, file: !163, line: 245, baseType: !2066, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2107, file: !163, line: 246, baseType: !2111, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2112)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{null, !2115}
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2107, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2057, file: !127, line: 250, baseType: !2118, size: 288, offset: 384)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2119)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2118, file: !200, line: 26, baseType: !113, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2118, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2118, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2118, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2118, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2118, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2118, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2118, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2118, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2057, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2057, file: !127, line: 256, baseType: !2088, size: 64, offset: 704)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2057, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2057, file: !127, line: 300, baseType: !2133, size: 96, offset: 800)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2134)
!2134 = !{!2135, !2136, !2137}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2133, file: !127, line: 153, baseType: !22, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2133, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2133, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2057, file: !127, line: 325, baseType: !2139, size: 32, offset: 896)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2141)
!2141 = !{!2142, !2148, !2149}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2140, file: !122, line: 5074, baseType: !2143, size: 96)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2144)
!2144 = !{!2145, !2146, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2143, file: !226, line: 57, baseType: !229, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2143, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2143, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2140, file: !122, line: 5075, baseType: !2088, size: 64, offset: 96)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2140, file: !122, line: 5076, baseType: !2150, size: 32, offset: 160)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2151)
!2151 = !{!2152}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2150, file: !236, line: 52, baseType: !22, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2057, file: !127, line: 343, baseType: !2154, size: 64, offset: 928)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2154, file: !200, line: 63, baseType: !113, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2154, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2051, file: !163, line: 111, baseType: !2056, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2051, file: !163, line: 119, baseType: !2056, size: 32, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2051, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2051, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2051, file: !163, line: 153, baseType: !2163, offset: 200)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2164, line: 33, elements: !397)
!2164 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2047, file: !163, line: 170, baseType: !2166, size: 96, offset: 224)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2166, file: !163, line: 86, baseType: !2056, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2166, file: !163, line: 90, baseType: !2092, size: 64, offset: 32)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1960, file: !1964, line: 43, type: !2172, isLocal: false, isDefinition: true, align: 512)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2173, size: 8704, elements: !2176)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2174)
!2174 = !{!2175}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2173, file: !249, line: 48, baseType: !103, size: 8)
!2176 = !{!2177}
!2177 = !DISubrange(count: 1088)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1960, file: !1964, line: 44, type: !2057, isLocal: false, isDefinition: true)
!2180 = !DIGlobalVariableExpression(var: !2181, expr: !DIExpression())
!2181 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1960, file: !1964, line: 48, type: !2182, isLocal: false, isDefinition: true)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 1024, elements: !661)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1960, file: !1964, line: 86, type: !2185, isLocal: false, isDefinition: true, align: 512)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2173, size: 16896, elements: !2186)
!2186 = !{!662, !319}
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1960, file: !1964, line: 217, type: !492, isLocal: false, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1960, file: !1964, line: 50, type: !2191, isLocal: true, isDefinition: true, align: 512)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2173, size: 3072, elements: !2192)
!2192 = !{!662, !2193}
!2193 = !DISubrange(count: 384)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "levels", scope: !2196, file: !1964, line: 232, type: !2216, isLocal: true, isDefinition: true)
!2196 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1964, file: !1964, line: 230, type: !2197, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !2199)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{null, !1963}
!2199 = !{!2200, !2201, !2211, !2215}
!2200 = !DILocalVariable(name: "level", arg: 1, scope: !2196, file: !1964, line: 230, type: !1963)
!2201 = !DILocalVariable(name: "entry", scope: !2196, file: !1964, line: 244, type: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2204)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2205)
!2205 = !{!2206, !2210}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2204, file: !472, line: 60, baseType: !2207, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 32)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{!105, !1982}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2204, file: !472, line: 65, baseType: !1982, size: 32, offset: 32)
!2211 = !DILocalVariable(name: "dev", scope: !2212, file: !1964, line: 247, type: !1982)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !1964, line: 246, column: 64)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1964, line: 246, column: 2)
!2214 = distinct !DILexicalBlock(scope: !2196, file: !1964, line: 246, column: 2)
!2215 = !DILocalVariable(name: "rc", scope: !2212, file: !1964, line: 248, type: !105)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 192, elements: !1365)
!2217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2219)
!2219 = !{!2220, !2221}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2218, file: !348, line: 17, baseType: !269, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2218, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "states_str", scope: !2224, file: !2225, line: 276, type: !2348, isLocal: true, isDefinition: true)
!2224 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2225, file: !2225, line: 271, type: !2226, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !2339)
!2225 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2226 = !DISubroutineType(types: !2227)
!2227 = !{!269, !2228, !102, !111}
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2229)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2231)
!2231 = !{!2232, !2290, !2302, !2303, !2304, !2305, !2311, !2326}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2230, file: !127, line: 247, baseType: !2233, size: 384)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2234)
!2234 = !{!2235, !2259, !2266, !2267, !2268, !2277, !2278, !2279}
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !127, line: 60, baseType: !2236, size: 64)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !127, line: 60, size: 64, elements: !2237)
!2237 = !{!2238, !2253}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2236, file: !127, line: 61, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2241)
!2241 = !{!2242, !2248}
!2242 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !137, line: 38, baseType: !2243, size: 32)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !137, line: 38, size: 32, elements: !2244)
!2244 = !{!2245, !2247}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2243, file: !137, line: 39, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2243, file: !137, line: 40, baseType: !2246, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !137, line: 42, baseType: !2249, size: 32, offset: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !137, line: 42, size: 32, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2249, file: !137, line: 43, baseType: !2246, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2249, file: !137, line: 44, baseType: !2246, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2236, file: !127, line: 62, baseType: !2254, size: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2254, file: !153, line: 50, baseType: !2257, size: 64)
!2257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 64, elements: !158)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2233, file: !127, line: 68, baseType: !2260, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2262, file: !163, line: 232, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2240)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2233, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2233, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !127, line: 90, baseType: !2269, size: 16, offset: 112)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !127, line: 90, size: 16, elements: !2270)
!2270 = !{!2271, !2276}
!2271 = !DIDerivedType(tag: DW_TAG_member, scope: !2269, file: !127, line: 91, baseType: !2272, size: 16)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2269, file: !127, line: 91, size: 16, elements: !2273)
!2273 = !{!2274, !2275}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2272, file: !127, line: 96, baseType: !179, size: 8)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2272, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2269, file: !127, line: 100, baseType: !183, size: 16)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2233, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2233, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2233, file: !127, line: 131, baseType: !2280, size: 192, offset: 192)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2281)
!2281 = !{!2282, !2283, !2289}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2280, file: !163, line: 245, baseType: !2239, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2280, file: !163, line: 246, baseType: !2284, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2285)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{null, !2288}
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2280, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2230, file: !127, line: 250, baseType: !2291, size: 288, offset: 384)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2292)
!2292 = !{!2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2291, file: !200, line: 26, baseType: !113, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2291, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2291, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2291, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2291, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2291, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2291, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2291, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2291, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2230, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2230, file: !127, line: 256, baseType: !2261, size: 64, offset: 704)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2230, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2230, file: !127, line: 300, baseType: !2306, size: 96, offset: 800)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2307)
!2307 = !{!2308, !2309, !2310}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2306, file: !127, line: 153, baseType: !22, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2306, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2306, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2230, file: !127, line: 325, baseType: !2312, size: 32, offset: 896)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2314)
!2314 = !{!2315, !2321, !2322}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2313, file: !122, line: 5074, baseType: !2316, size: 96)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2316, file: !226, line: 57, baseType: !229, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2316, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2316, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2313, file: !122, line: 5075, baseType: !2261, size: 64, offset: 96)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2313, file: !122, line: 5076, baseType: !2323, size: 32, offset: 160)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2324)
!2324 = !{!2325}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2323, file: !236, line: 52, baseType: !22, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2230, file: !127, line: 343, baseType: !2327, size: 64, offset: 928)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2327, file: !200, line: 63, baseType: !113, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2327, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2333, globals: !2335, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2333 = !{!104, !269, !107, !169, !22, !105, !2334, !24, !111, !102, !113, !114}
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2335 = !{!2222, !2336}
!2336 = !DIGlobalVariableExpression(var: !2337, expr: !DIExpression())
!2337 = distinct !DIGlobalVariable(name: "states_sz", scope: !2224, file: !2225, line: 279, type: !2338, isLocal: true, isDefinition: true)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 256, elements: !1618)
!2339 = !{!2340, !2341, !2342, !2343, !2344, !2345, !2346}
!2340 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2224, file: !2225, line: 271, type: !2228)
!2341 = !DILocalVariable(name: "buf", arg: 2, scope: !2224, file: !2225, line: 271, type: !102)
!2342 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2224, file: !2225, line: 271, type: !111)
!2343 = !DILocalVariable(name: "off", scope: !2224, file: !2225, line: 273, type: !111)
!2344 = !DILocalVariable(name: "bit", scope: !2224, file: !2225, line: 274, type: !169)
!2345 = !DILocalVariable(name: "thread_state", scope: !2224, file: !2225, line: 275, type: !169)
!2346 = !DILocalVariable(name: "index", scope: !2347, file: !2225, line: 293, type: !169)
!2347 = distinct !DILexicalBlock(scope: !2224, file: !2225, line: 293, column: 2)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1618)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "lock", scope: !2351, file: !2370, line: 39, type: !2371, isLocal: true, isDefinition: true)
!2351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2353, globals: !2369, splitDebugInlining: false, nameTableKind: None)
!2352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2353 = !{!104, !492, !105, !2354}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2357)
!2357 = !{!2358, !2364}
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !137, line: 38, baseType: !2359, size: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !137, line: 38, size: 32, elements: !2360)
!2360 = !{!2361, !2363}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2359, file: !137, line: 39, baseType: !2362, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2359, file: !137, line: 40, baseType: !2362, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !137, line: 42, baseType: !2365, size: 32, offset: 32)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !137, line: 42, size: 32, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2365, file: !137, line: 43, baseType: !2362, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2365, file: !137, line: 44, baseType: !2362, size: 32)
!2369 = !{!2349}
!2370 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2371, file: !236, line: 52, baseType: !22, size: 32)
!2374 = !DIGlobalVariableExpression(var: !2375, expr: !DIExpression())
!2375 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2376, file: !2486, line: 56, type: !2473, isLocal: false, isDefinition: true)
!2376 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2377, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2378, globals: !2483, splitDebugInlining: false, nameTableKind: None)
!2377 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2378 = !{!2379, !102, !104, !2481, !432, !107, !116, !105, !113, !114, !2482}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 32)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2381)
!2381 = !{!2382, !2440, !2452, !2453, !2454, !2455, !2461, !2476}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2380, file: !127, line: 247, baseType: !2383, size: 384)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2384)
!2384 = !{!2385, !2409, !2416, !2417, !2418, !2427, !2428, !2429}
!2385 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !127, line: 60, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !127, line: 60, size: 64, elements: !2387)
!2387 = !{!2388, !2403}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2386, file: !127, line: 61, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2391)
!2391 = !{!2392, !2398}
!2392 = !DIDerivedType(tag: DW_TAG_member, scope: !2390, file: !137, line: 38, baseType: !2393, size: 32)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2390, file: !137, line: 38, size: 32, elements: !2394)
!2394 = !{!2395, !2397}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2393, file: !137, line: 39, baseType: !2396, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2393, file: !137, line: 40, baseType: !2396, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2390, file: !137, line: 42, baseType: !2399, size: 32, offset: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2390, file: !137, line: 42, size: 32, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2399, file: !137, line: 43, baseType: !2396, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2399, file: !137, line: 44, baseType: !2396, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2386, file: !127, line: 62, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2405)
!2405 = !{!2406}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2404, file: !153, line: 50, baseType: !2407, size: 64)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2408, size: 64, elements: !158)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2383, file: !127, line: 68, baseType: !2410, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2412)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2413)
!2413 = !{!2414}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2412, file: !163, line: 232, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2390)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2383, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2383, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2418 = !DIDerivedType(tag: DW_TAG_member, scope: !2383, file: !127, line: 90, baseType: !2419, size: 16, offset: 112)
!2419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2383, file: !127, line: 90, size: 16, elements: !2420)
!2420 = !{!2421, !2426}
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !2419, file: !127, line: 91, baseType: !2422, size: 16)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2419, file: !127, line: 91, size: 16, elements: !2423)
!2423 = !{!2424, !2425}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2422, file: !127, line: 96, baseType: !179, size: 8)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2422, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2419, file: !127, line: 100, baseType: !183, size: 16)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2383, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2383, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2383, file: !127, line: 131, baseType: !2430, size: 192, offset: 192)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2431)
!2431 = !{!2432, !2433, !2439}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2430, file: !163, line: 245, baseType: !2389, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2430, file: !163, line: 246, baseType: !2434, size: 32, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2435)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{null, !2438}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2430, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2380, file: !127, line: 250, baseType: !2441, size: 288, offset: 384)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2441, file: !200, line: 26, baseType: !113, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2441, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2441, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2441, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2441, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2441, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2441, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2441, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2441, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2380, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2380, file: !127, line: 256, baseType: !2411, size: 64, offset: 704)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2380, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2380, file: !127, line: 300, baseType: !2456, size: 96, offset: 800)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2457)
!2457 = !{!2458, !2459, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2456, file: !127, line: 153, baseType: !22, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2456, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2456, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2380, file: !127, line: 325, baseType: !2462, size: 32, offset: 896)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2464)
!2464 = !{!2465, !2471, !2472}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2463, file: !122, line: 5074, baseType: !2466, size: 96)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2467)
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2466, file: !226, line: 57, baseType: !229, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2466, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2466, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2463, file: !122, line: 5075, baseType: !2411, size: 64, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2463, file: !122, line: 5076, baseType: !2473, size: 32, offset: 160)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2474)
!2474 = !{!2475}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2473, file: !236, line: 52, baseType: !22, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2380, file: !127, line: 343, baseType: !2477, size: 64, offset: 928)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2477, file: !200, line: 63, baseType: !113, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2477, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 32)
!2483 = !{!2374, !2484, !2487, !2489}
!2484 = !DIGlobalVariableExpression(var: !2485, expr: !DIExpression())
!2485 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2376, file: !2486, line: 404, type: !105, isLocal: true, isDefinition: true)
!2486 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2487 = !DIGlobalVariableExpression(var: !2488, expr: !DIExpression())
!2488 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2376, file: !2486, line: 405, type: !105, isLocal: true, isDefinition: true)
!2489 = !DIGlobalVariableExpression(var: !2490, expr: !DIExpression())
!2490 = distinct !DIGlobalVariable(name: "pending_current", scope: !2376, file: !2486, line: 425, type: !2379, isLocal: true, isDefinition: true)
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2493, file: !2523, line: 19, type: !2529, isLocal: true, isDefinition: true)
!2493 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2494, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2495, globals: !2520, splitDebugInlining: false, nameTableKind: None)
!2494 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2495 = !{!107, !104, !116, !113, !114, !105, !2496, !102, !109}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2498)
!2498 = !{!2499, !2514, !2519}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2497, file: !163, line: 245, baseType: !2500, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2501)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2502)
!2502 = !{!2503, !2509}
!2503 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !137, line: 38, baseType: !2504, size: 32)
!2504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !137, line: 38, size: 32, elements: !2505)
!2505 = !{!2506, !2508}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2504, file: !137, line: 39, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2504, file: !137, line: 40, baseType: !2507, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !137, line: 42, baseType: !2510, size: 32, offset: 32)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !137, line: 42, size: 32, elements: !2511)
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2510, file: !137, line: 43, baseType: !2507, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2510, file: !137, line: 44, baseType: !2507, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2497, file: !163, line: 246, baseType: !2515, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2516)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !2496}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2497, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2520 = !{!2521, !2491, !2524, !2526}
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2493, file: !2523, line: 15, type: !114, isLocal: true, isDefinition: true)
!2523 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2524 = !DIGlobalVariableExpression(var: !2525, expr: !DIExpression())
!2525 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2493, file: !2523, line: 25, type: !105, isLocal: true, isDefinition: true)
!2526 = !DIGlobalVariableExpression(var: !2527, expr: !DIExpression())
!2527 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2493, file: !2523, line: 17, type: !2528, isLocal: true, isDefinition: true)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2501)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2530)
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2529, file: !236, line: 52, baseType: !22, size: 32)
!2532 = !DIGlobalVariableExpression(var: !2533, expr: !DIExpression())
!2533 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2534, file: !2553, line: 55, type: !2554, isLocal: true, isDefinition: true, align: 32)
!2534 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2535, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2536, globals: !2552, splitDebugInlining: false, nameTableKind: None)
!2535 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2536 = !{!104, !107, !105, !2537}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2539)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2540)
!2540 = !{!2541, !2547}
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2539, file: !137, line: 38, baseType: !2542, size: 32)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2539, file: !137, line: 38, size: 32, elements: !2543)
!2543 = !{!2544, !2546}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2542, file: !137, line: 39, baseType: !2545, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2542, file: !137, line: 40, baseType: !2545, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2539, file: !137, line: 42, baseType: !2548, size: 32, offset: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2539, file: !137, line: 42, size: 32, elements: !2549)
!2549 = !{!2550, !2551}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2548, file: !137, line: 43, baseType: !2545, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2548, file: !137, line: 44, baseType: !2545, size: 32)
!2552 = !{!2532}
!2553 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2555)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2556)
!2556 = !{!2557, !2564}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2555, file: !472, line: 60, baseType: !2558, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!105, !2561}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !472, line: 48, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2555, file: !472, line: 65, baseType: !2561, size: 32, offset: 32)
!2565 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2566, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2566 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2571, retainedTypes: !2579, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2571 = !{!30, !2572}
!2572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2573, line: 54, baseType: !32, size: 32, elements: !2574)
!2573 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !{!2575, !2576, !2577, !2578}
!2575 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2576 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2577 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2578 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2579 = !{!104, !111, !432, !24, !2580, !22, !2586, !105, !1025, !2601}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2573, line: 58, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2573, line: 58, size: 64, elements: !2583)
!2583 = !{!2584}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2582, file: !2573, line: 58, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1618)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2573, line: 68, size: 128, elements: !2588)
!2588 = !{!2589, !2592, !2593, !2594}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2587, file: !2573, line: 69, baseType: !2590, size: 64)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2591, size: 64, elements: !158)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2573, line: 61, baseType: !113)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2587, file: !2573, line: 70, baseType: !2591, size: 32, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2587, file: !2573, line: 71, baseType: !113, size: 32, offset: 96)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2587, file: !2573, line: 77, baseType: !2595, offset: 128)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2596, elements: !2599)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2573, line: 64, size: 32, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2596, file: !2573, line: 65, baseType: !2591, size: 32)
!2599 = !{!2600}
!2600 = !DISubrange(count: 0)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2602 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2603, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2604, retainedTypes: !2624, splitDebugInlining: false, nameTableKind: None)
!2603 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2604 = !{!2605, !2613}
!2605 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2606, line: 69, baseType: !32, size: 32, elements: !2607)
!2606 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2607 = !{!2608, !2609, !2610, !2611, !2612}
!2608 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2609 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2610 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2611 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2612 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2613 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2606, line: 56, baseType: !32, size: 32, elements: !2614)
!2614 = !{!2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623}
!2615 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2616 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2617 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2618 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2619 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2620 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2621 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2622 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2623 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2624 = !{!105, !2605, !2613, !2625, !180, !499, !2627, !2628, !170, !184, !269, !111, !104, !22, !32, !428, !2630, !2631, !106, !429, !110, !430, !2626, !2632, !2633, !2634, !2635}
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2606, line: 31, baseType: !2626)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2606, line: 32, baseType: !2629)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 32)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2641, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2642, splitDebugInlining: false, nameTableKind: None)
!2641 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2642 = !{!269, !170, !105, !32}
!2643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2644, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2645, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2644 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2645 = !{!2646, !30}
!2646 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2647, line: 27, baseType: !32, size: 32, elements: !2648)
!2647 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2648 = !{!2649, !2650, !2651, !2652, !2653}
!2649 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2650 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2651 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2652 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2653 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2656, retainedTypes: !2657, splitDebugInlining: false, nameTableKind: None)
!2655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2656 = !{!748, !2646, !30}
!2657 = !{!932, !2658, !104, !105, !116, !113, !169, !2675}
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2660)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2661)
!2661 = !{!2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2660, file: !679, line: 413, baseType: !1718, size: 256)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2660, file: !679, line: 414, baseType: !1720, size: 768, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2660, file: !679, line: 415, baseType: !1718, size: 256, offset: 1024)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2660, file: !679, line: 416, baseType: !1720, size: 768, offset: 1280)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2660, file: !679, line: 417, baseType: !1718, size: 256, offset: 2048)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2660, file: !679, line: 418, baseType: !1720, size: 768, offset: 2304)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2660, file: !679, line: 419, baseType: !1718, size: 256, offset: 3072)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2660, file: !679, line: 420, baseType: !1720, size: 768, offset: 3328)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2660, file: !679, line: 421, baseType: !1718, size: 256, offset: 4096)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2660, file: !679, line: 422, baseType: !1731, size: 1792, offset: 4352)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2660, file: !679, line: 423, baseType: !1735, size: 1920, offset: 6144)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2660, file: !679, line: 424, baseType: !1740, size: 20608, offset: 8064)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2660, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2677, file: !679, line: 447, baseType: !683, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2677, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2677, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2677, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2677, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2677, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2677, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2677, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2677, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2677, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2677, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2677, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2677, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2677, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2677, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2677, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2677, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2677, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2677, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2677, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2677, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2704, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2704 = !{!104, !105, !22, !2705}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2707)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2707, file: !679, line: 447, baseType: !683, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2707, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2707, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2707, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2707, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2707, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2707, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2707, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2707, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2707, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2707, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2707, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2707, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2707, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2707, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2707, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2707, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2707, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2707, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2707, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2707, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2731, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2732, splitDebugInlining: false, nameTableKind: None)
!2731 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2732 = !{!2733, !104, !105}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2736)
!2736 = !{!2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2735, file: !679, line: 447, baseType: !683, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2735, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2735, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2735, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2735, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2735, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2735, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2735, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2735, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2735, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2735, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2735, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2735, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2735, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2735, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2735, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2735, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2735, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2735, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2735, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2735, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2759, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2760, splitDebugInlining: false, nameTableKind: None)
!2759 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2760 = !{!2761, !113, !104, !105}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 32)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2763, line: 98, size: 256, elements: !2764)
!2763 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2764 = !{!2765, !2770, !2775, !2780, !2785, !2790, !2795, !2800}
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 99, baseType: !2766, size: 32)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 99, size: 32, elements: !2767)
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2766, file: !2763, line: 99, baseType: !113, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2766, file: !2763, line: 99, baseType: !113, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 100, baseType: !2771, size: 32, offset: 32)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 100, size: 32, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2771, file: !2763, line: 100, baseType: !113, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2771, file: !2763, line: 100, baseType: !113, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 101, baseType: !2776, size: 32, offset: 64)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 101, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2776, file: !2763, line: 101, baseType: !113, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2776, file: !2763, line: 101, baseType: !113, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 102, baseType: !2781, size: 32, offset: 96)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 102, size: 32, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2781, file: !2763, line: 102, baseType: !113, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2781, file: !2763, line: 102, baseType: !113, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 103, baseType: !2786, size: 32, offset: 128)
!2786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 103, size: 32, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2786, file: !2763, line: 103, baseType: !113, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2786, file: !2763, line: 103, baseType: !113, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 104, baseType: !2791, size: 32, offset: 160)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 104, size: 32, elements: !2792)
!2792 = !{!2793, !2794}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2791, file: !2763, line: 104, baseType: !113, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2791, file: !2763, line: 104, baseType: !113, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2763, line: 105, baseType: !2796, size: 32, offset: 192)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2762, file: !2763, line: 105, size: 32, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2796, file: !2763, line: 105, baseType: !113, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2796, file: !2763, line: 105, baseType: !113, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2762, file: !2763, line: 106, baseType: !113, size: 32, offset: 224)
!2801 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2802, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2645, retainedTypes: !2803, splitDebugInlining: false, nameTableKind: None)
!2802 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2803 = !{!2804, !104, !105, !2829, !2601, !113}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2807)
!2807 = !{!2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2806, file: !679, line: 447, baseType: !683, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2806, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2806, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2806, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2806, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2806, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2806, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2806, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2806, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2806, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2806, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2806, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2806, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2806, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2806, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2806, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2806, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2806, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2806, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2806, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2806, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2763, line: 141, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2763, line: 97, size: 256, elements: !2832)
!2832 = !{!2833}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2831, file: !2763, line: 107, baseType: !2834, size: 256)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2763, line: 98, size: 256, elements: !2835)
!2835 = !{!2836, !2841, !2846, !2851, !2856, !2861, !2866, !2871}
!2836 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 99, baseType: !2837, size: 32)
!2837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 99, size: 32, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2837, file: !2763, line: 99, baseType: !113, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2837, file: !2763, line: 99, baseType: !113, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 100, baseType: !2842, size: 32, offset: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 100, size: 32, elements: !2843)
!2843 = !{!2844, !2845}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2842, file: !2763, line: 100, baseType: !113, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2842, file: !2763, line: 100, baseType: !113, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 101, baseType: !2847, size: 32, offset: 64)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 101, size: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2847, file: !2763, line: 101, baseType: !113, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2847, file: !2763, line: 101, baseType: !113, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 102, baseType: !2852, size: 32, offset: 96)
!2852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 102, size: 32, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2852, file: !2763, line: 102, baseType: !113, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2852, file: !2763, line: 102, baseType: !113, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 103, baseType: !2857, size: 32, offset: 128)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 103, size: 32, elements: !2858)
!2858 = !{!2859, !2860}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2857, file: !2763, line: 103, baseType: !113, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2857, file: !2763, line: 103, baseType: !113, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 104, baseType: !2862, size: 32, offset: 160)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 104, size: 32, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2862, file: !2763, line: 104, baseType: !113, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2862, file: !2763, line: 104, baseType: !113, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, scope: !2834, file: !2763, line: 105, baseType: !2867, size: 32, offset: 192)
!2867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2834, file: !2763, line: 105, size: 32, elements: !2868)
!2868 = !{!2869, !2870}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2867, file: !2763, line: 105, baseType: !113, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2867, file: !2763, line: 105, baseType: !113, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2834, file: !2763, line: 106, baseType: !113, size: 32, offset: 224)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1703, retainedTypes: !2874, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2874 = !{!932, !116, !169, !113, !2875, !2892}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2877, file: !679, line: 413, baseType: !1718, size: 256)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2877, file: !679, line: 414, baseType: !1720, size: 768, offset: 256)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2877, file: !679, line: 415, baseType: !1718, size: 256, offset: 1024)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2877, file: !679, line: 416, baseType: !1720, size: 768, offset: 1280)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2877, file: !679, line: 417, baseType: !1718, size: 256, offset: 2048)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2877, file: !679, line: 418, baseType: !1720, size: 768, offset: 2304)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2877, file: !679, line: 419, baseType: !1718, size: 256, offset: 3072)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2877, file: !679, line: 420, baseType: !1720, size: 768, offset: 3328)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2877, file: !679, line: 421, baseType: !1718, size: 256, offset: 4096)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2877, file: !679, line: 422, baseType: !1731, size: 1792, offset: 4352)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2877, file: !679, line: 423, baseType: !1735, size: 1920, offset: 6144)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2877, file: !679, line: 424, baseType: !1740, size: 20608, offset: 8064)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2877, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2894)
!2894 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2895)
!2895 = !{!2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2894, file: !679, line: 447, baseType: !683, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2894, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2894, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2894, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2894, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2894, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2894, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2894, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2894, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2894, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2894, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2894, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2894, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2894, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2894, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2894, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2894, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2894, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2894, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2894, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2894, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2917 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2918, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2919, splitDebugInlining: false, nameTableKind: None)
!2918 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2919 = !{!2920, !104, !105}
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2922, file: !679, line: 447, baseType: !683, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2922, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2922, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2922, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2922, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2922, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2922, file: !679, line: 453, baseType: !1755, size: 96, offset: 192)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2922, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2922, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2922, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2922, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2922, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2922, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2922, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2922, file: !679, line: 461, baseType: !1764, size: 64, offset: 512)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2922, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2922, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2922, file: !679, line: 464, baseType: !1768, size: 128, offset: 640)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2922, file: !679, line: 465, baseType: !1770, size: 160, offset: 768)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2922, file: !679, line: 466, baseType: !1772, size: 160, offset: 928)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2922, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2945 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2946, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2947, splitDebugInlining: false, nameTableKind: None)
!2946 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2947 = !{!103, !102, !111, !1130, !2948, !170, !104}
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2952, splitDebugInlining: false, nameTableKind: None)
!2951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2952 = !{!2953}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 510, baseType: !2955)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 477, size: 1216, elements: !2956)
!2956 = !{!2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2955, file: !457, line: 479, baseType: !461, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2955, file: !457, line: 480, baseType: !461, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2955, file: !457, line: 481, baseType: !461, size: 32, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2955, file: !457, line: 482, baseType: !461, size: 32, offset: 96)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2955, file: !457, line: 483, baseType: !461, size: 32, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2955, file: !457, line: 484, baseType: !461, size: 32, offset: 160)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2955, file: !457, line: 485, baseType: !994, size: 64, offset: 192)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2955, file: !457, line: 486, baseType: !461, size: 32, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2955, file: !457, line: 487, baseType: !461, size: 32, offset: 288)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2955, file: !457, line: 488, baseType: !994, size: 64, offset: 320)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2955, file: !457, line: 489, baseType: !461, size: 32, offset: 384)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2955, file: !457, line: 490, baseType: !461, size: 32, offset: 416)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2955, file: !457, line: 491, baseType: !994, size: 64, offset: 448)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2955, file: !457, line: 492, baseType: !461, size: 32, offset: 512)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2955, file: !457, line: 493, baseType: !461, size: 32, offset: 544)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2955, file: !457, line: 494, baseType: !994, size: 64, offset: 576)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2955, file: !457, line: 495, baseType: !461, size: 32, offset: 640)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2955, file: !457, line: 496, baseType: !461, size: 32, offset: 672)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2955, file: !457, line: 497, baseType: !994, size: 64, offset: 704)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2955, file: !457, line: 498, baseType: !461, size: 32, offset: 768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2955, file: !457, line: 499, baseType: !461, size: 32, offset: 800)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2955, file: !457, line: 500, baseType: !994, size: 64, offset: 832)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2955, file: !457, line: 501, baseType: !461, size: 32, offset: 896)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2955, file: !457, line: 502, baseType: !461, size: 32, offset: 928)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2955, file: !457, line: 503, baseType: !994, size: 64, offset: 960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2955, file: !457, line: 504, baseType: !461, size: 32, offset: 1024)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2955, file: !457, line: 505, baseType: !461, size: 32, offset: 1056)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2955, file: !457, line: 506, baseType: !113, size: 32, offset: 1088)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2955, file: !457, line: 507, baseType: !461, size: 32, offset: 1120)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2955, file: !457, line: 508, baseType: !461, size: 32, offset: 1152)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2955, file: !457, line: 509, baseType: !461, size: 32, offset: 1184)
!2988 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2989, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2989 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2992, retainedTypes: !3008, splitDebugInlining: false, nameTableKind: None)
!2991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!2992 = !{!2993, !3000, !3004}
!2993 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2994, line: 38, baseType: !32, size: 32, elements: !2995)
!2994 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2995 = !{!2996, !2997, !2998, !2999}
!2996 = !DIEnumerator(name: "HAL_OK", value: 0)
!2997 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2998 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2999 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3000 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !971, line: 184, baseType: !32, size: 32, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIEnumerator(name: "RESET", value: 0)
!3003 = !DIEnumerator(name: "SET", value: 1)
!3004 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !971, line: 190, baseType: !32, size: 32, elements: !3005)
!3005 = !{!3006, !3007}
!3006 = !DIEnumerator(name: "DISABLE", value: 0)
!3007 = !DIEnumerator(name: "ENABLE", value: 1)
!3008 = !{!104, !3009, !169, !113, !1612, !3044, !3050, !3061, !183, !3062, !114}
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 510, baseType: !3011)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 477, size: 1216, elements: !3012)
!3012 = !{!3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3011, file: !457, line: 479, baseType: !461, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3011, file: !457, line: 480, baseType: !461, size: 32, offset: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3011, file: !457, line: 481, baseType: !461, size: 32, offset: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3011, file: !457, line: 482, baseType: !461, size: 32, offset: 96)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3011, file: !457, line: 483, baseType: !461, size: 32, offset: 128)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3011, file: !457, line: 484, baseType: !461, size: 32, offset: 160)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3011, file: !457, line: 485, baseType: !994, size: 64, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3011, file: !457, line: 486, baseType: !461, size: 32, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3011, file: !457, line: 487, baseType: !461, size: 32, offset: 288)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3011, file: !457, line: 488, baseType: !994, size: 64, offset: 320)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3011, file: !457, line: 489, baseType: !461, size: 32, offset: 384)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3011, file: !457, line: 490, baseType: !461, size: 32, offset: 416)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3011, file: !457, line: 491, baseType: !994, size: 64, offset: 448)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3011, file: !457, line: 492, baseType: !461, size: 32, offset: 512)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3011, file: !457, line: 493, baseType: !461, size: 32, offset: 544)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3011, file: !457, line: 494, baseType: !994, size: 64, offset: 576)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3011, file: !457, line: 495, baseType: !461, size: 32, offset: 640)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3011, file: !457, line: 496, baseType: !461, size: 32, offset: 672)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3011, file: !457, line: 497, baseType: !994, size: 64, offset: 704)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3011, file: !457, line: 498, baseType: !461, size: 32, offset: 768)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3011, file: !457, line: 499, baseType: !461, size: 32, offset: 800)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3011, file: !457, line: 500, baseType: !994, size: 64, offset: 832)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3011, file: !457, line: 501, baseType: !461, size: 32, offset: 896)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3011, file: !457, line: 502, baseType: !461, size: 32, offset: 928)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3011, file: !457, line: 503, baseType: !994, size: 64, offset: 960)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3011, file: !457, line: 504, baseType: !461, size: 32, offset: 1024)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3011, file: !457, line: 505, baseType: !461, size: 32, offset: 1056)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3011, file: !457, line: 506, baseType: !113, size: 32, offset: 1088)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3011, file: !457, line: 507, baseType: !461, size: 32, offset: 1120)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3011, file: !457, line: 508, baseType: !461, size: 32, offset: 1152)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3011, file: !457, line: 509, baseType: !461, size: 32, offset: 1184)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 471, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 467, size: 64, elements: !3047)
!3047 = !{!3048, !3049}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3046, file: !457, line: 469, baseType: !461, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3046, file: !457, line: 470, baseType: !461, size: 32, offset: 32)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 32)
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 379, baseType: !3052)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 224, elements: !3053)
!3053 = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3052, file: !457, line: 372, baseType: !461, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3052, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3052, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3052, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3052, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3052, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3052, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 396, baseType: !3064)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 385, size: 320, elements: !3065)
!3065 = !{!3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3064, file: !457, line: 387, baseType: !461, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3064, file: !457, line: 388, baseType: !461, size: 32, offset: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3064, file: !457, line: 389, baseType: !461, size: 32, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3064, file: !457, line: 390, baseType: !461, size: 32, offset: 96)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3064, file: !457, line: 391, baseType: !461, size: 32, offset: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3064, file: !457, line: 392, baseType: !461, size: 32, offset: 160)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3064, file: !457, line: 393, baseType: !461, size: 32, offset: 192)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3064, file: !457, line: 394, baseType: !461, size: 32, offset: 224)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3064, file: !457, line: 395, baseType: !1284, size: 64, offset: 256)
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3077, retainedTypes: !3078, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3077 = !{!970}
!3078 = !{!3079, !113, !3087, !3093, !3104}
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !3081)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !3082)
!3082 = !{!3083, !3084, !3085, !3086}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3081, file: !679, line: 766, baseType: !461, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3081, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3081, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3081, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 32)
!3088 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 471, baseType: !3089)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 467, size: 64, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3089, file: !457, line: 469, baseType: !461, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3089, file: !457, line: 470, baseType: !461, size: 32, offset: 32)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 379, baseType: !3095)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 370, size: 224, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100, !3101, !3102, !3103}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3095, file: !457, line: 372, baseType: !461, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3095, file: !457, line: 373, baseType: !461, size: 32, offset: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3095, file: !457, line: 374, baseType: !461, size: 32, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3095, file: !457, line: 375, baseType: !461, size: 32, offset: 96)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3095, file: !457, line: 376, baseType: !461, size: 32, offset: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3095, file: !457, line: 377, baseType: !461, size: 32, offset: 160)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3095, file: !457, line: 378, baseType: !461, size: 32, offset: 192)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 32)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 510, baseType: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 477, size: 1216, elements: !3107)
!3107 = !{!3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3106, file: !457, line: 479, baseType: !461, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3106, file: !457, line: 480, baseType: !461, size: 32, offset: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3106, file: !457, line: 481, baseType: !461, size: 32, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3106, file: !457, line: 482, baseType: !461, size: 32, offset: 96)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3106, file: !457, line: 483, baseType: !461, size: 32, offset: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3106, file: !457, line: 484, baseType: !461, size: 32, offset: 160)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3106, file: !457, line: 485, baseType: !994, size: 64, offset: 192)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3106, file: !457, line: 486, baseType: !461, size: 32, offset: 256)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3106, file: !457, line: 487, baseType: !461, size: 32, offset: 288)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3106, file: !457, line: 488, baseType: !994, size: 64, offset: 320)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3106, file: !457, line: 489, baseType: !461, size: 32, offset: 384)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3106, file: !457, line: 490, baseType: !461, size: 32, offset: 416)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3106, file: !457, line: 491, baseType: !994, size: 64, offset: 448)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3106, file: !457, line: 492, baseType: !461, size: 32, offset: 512)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3106, file: !457, line: 493, baseType: !461, size: 32, offset: 544)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3106, file: !457, line: 494, baseType: !994, size: 64, offset: 576)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3106, file: !457, line: 495, baseType: !461, size: 32, offset: 640)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3106, file: !457, line: 496, baseType: !461, size: 32, offset: 672)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3106, file: !457, line: 497, baseType: !994, size: 64, offset: 704)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3106, file: !457, line: 498, baseType: !461, size: 32, offset: 768)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3106, file: !457, line: 499, baseType: !461, size: 32, offset: 800)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3106, file: !457, line: 500, baseType: !994, size: 64, offset: 832)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3106, file: !457, line: 501, baseType: !461, size: 32, offset: 896)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3106, file: !457, line: 502, baseType: !461, size: 32, offset: 928)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3106, file: !457, line: 503, baseType: !994, size: 64, offset: 960)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3106, file: !457, line: 504, baseType: !461, size: 32, offset: 1024)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3106, file: !457, line: 505, baseType: !461, size: 32, offset: 1056)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3106, file: !457, line: 506, baseType: !113, size: 32, offset: 1088)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3106, file: !457, line: 507, baseType: !461, size: 32, offset: 1120)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3106, file: !457, line: 508, baseType: !461, size: 32, offset: 1152)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3106, file: !457, line: 509, baseType: !461, size: 32, offset: 1184)
!3139 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3140, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3141, splitDebugInlining: false, nameTableKind: None)
!3140 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3141 = !{!104, !111}
!3142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3143, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3144, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3143 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3144 = !{!3145, !3152, !2646, !30}
!3145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3146, line: 14, baseType: !32, size: 32, elements: !3147)
!3146 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3147 = !{!3148, !3149, !3150, !3151}
!3148 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3149 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3150 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3151 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3146, line: 42, baseType: !32, size: 32, elements: !3153)
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159}
!3154 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3155 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3156 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3157 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3158 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3159 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3162 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3163, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3164, splitDebugInlining: false, nameTableKind: None)
!3163 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3164 = !{!104, !105, !3165, !3180}
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3167)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3168)
!3168 = !{!3169, !3175}
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3167, file: !137, line: 38, baseType: !3170, size: 32)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3167, file: !137, line: 38, size: 32, elements: !3171)
!3171 = !{!3172, !3174}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3170, file: !137, line: 39, baseType: !3173, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3170, file: !137, line: 40, baseType: !3173, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, scope: !3167, file: !137, line: 42, baseType: !3176, size: 32, offset: 32)
!3176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3167, file: !137, line: 42, size: 32, elements: !3177)
!3177 = !{!3178, !3179}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3176, file: !137, line: 43, baseType: !3173, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3176, file: !137, line: 44, baseType: !3173, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3182)
!3182 = !{!3183, !3227, !3239, !3240, !3241, !3242, !3248, !3263}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3181, file: !127, line: 247, baseType: !3184, size: 384)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3185)
!3185 = !{!3186, !3196, !3203, !3204, !3205, !3214, !3215, !3216}
!3186 = !DIDerivedType(tag: DW_TAG_member, scope: !3184, file: !127, line: 60, baseType: !3187, size: 64)
!3187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3184, file: !127, line: 60, size: 64, elements: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3187, file: !127, line: 61, baseType: !3166, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3187, file: !127, line: 62, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3192)
!3192 = !{!3193}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3191, file: !153, line: 50, baseType: !3194, size: 64)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3195, size: 64, elements: !158)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3184, file: !127, line: 68, baseType: !3197, size: 32, offset: 64)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3200)
!3200 = !{!3201}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3199, file: !163, line: 232, baseType: !3202, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3167)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3184, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3184, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3205 = !DIDerivedType(tag: DW_TAG_member, scope: !3184, file: !127, line: 90, baseType: !3206, size: 16, offset: 112)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3184, file: !127, line: 90, size: 16, elements: !3207)
!3207 = !{!3208, !3213}
!3208 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !127, line: 91, baseType: !3209, size: 16)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3206, file: !127, line: 91, size: 16, elements: !3210)
!3210 = !{!3211, !3212}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3209, file: !127, line: 96, baseType: !179, size: 8)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3209, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3206, file: !127, line: 100, baseType: !183, size: 16)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3184, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3184, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3184, file: !127, line: 131, baseType: !3217, size: 192, offset: 192)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3218)
!3218 = !{!3219, !3220, !3226}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3217, file: !163, line: 245, baseType: !3166, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3217, file: !163, line: 246, baseType: !3221, size: 32, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3222)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{null, !3225}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3217, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3181, file: !127, line: 250, baseType: !3228, size: 288, offset: 384)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3229)
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3228, file: !200, line: 26, baseType: !113, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3228, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3228, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3228, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3228, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3228, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3228, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3228, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3228, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3181, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3181, file: !127, line: 256, baseType: !3198, size: 64, offset: 704)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3181, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3181, file: !127, line: 300, baseType: !3243, size: 96, offset: 800)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3244)
!3244 = !{!3245, !3246, !3247}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3243, file: !127, line: 153, baseType: !22, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3243, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3243, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3181, file: !127, line: 325, baseType: !3249, size: 32, offset: 896)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 32)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3251)
!3251 = !{!3252, !3258, !3259}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3250, file: !122, line: 5074, baseType: !3253, size: 96)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3254)
!3254 = !{!3255, !3256, !3257}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3253, file: !226, line: 57, baseType: !229, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3253, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3253, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3250, file: !122, line: 5075, baseType: !3198, size: 64, offset: 96)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3250, file: !122, line: 5076, baseType: !3260, size: 32, offset: 160)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3261)
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3260, file: !236, line: 52, baseType: !22, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3181, file: !127, line: 343, baseType: !3264, size: 64, offset: 928)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3264, file: !200, line: 63, baseType: !113, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3264, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3270, splitDebugInlining: false, nameTableKind: None)
!3269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3270 = !{!22, !104, !105}
!3271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3273 = !{!"Ubuntu clang version 14.0.6"}
!3274 = !{i32 7, !"Dwarf Version", i32 4}
!3275 = !{i32 2, !"Debug Info Version", i32 3}
!3276 = !{i32 1, !"wchar_size", i32 4}
!3277 = !{i32 1, !"min_enum_size", i32 4}
!3278 = !{i32 1, !"branch-target-enforcement", i32 0}
!3279 = !{i32 1, !"sign-return-address", i32 0}
!3280 = !{i32 1, !"sign-return-address-all", i32 0}
!3281 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3282 = !{i32 7, !"frame-pointer", i32 2}
!3283 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3284, file: !3284, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2565, retainedNodes: !397)
!3284 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3285 = !DILocation(line: 28, column: 1, scope: !3283)
!3286 = !{i64 2155036951, i64 2155036971, i64 2155037034}
!3287 = !DILocation(line: 29, column: 1, scope: !3283)
!3288 = !{i64 2155037366, i64 2155037386, i64 2155037449}
!3289 = !DILocation(line: 30, column: 1, scope: !3283)
!3290 = !{i64 2155037785, i64 2155037805, i64 2155037868}
!3291 = !DILocation(line: 31, column: 1, scope: !3283)
!3292 = !{i64 2155038204, i64 2155038224, i64 2155038287}
!3293 = !DILocation(line: 33, column: 1, scope: !3283)
!3294 = !{i64 2155038496, i64 2155038516, i64 2155038579}
!3295 = !DILocation(line: 35, column: 1, scope: !3283)
!3296 = !{i64 2155038821, i64 2155038841, i64 2155038904}
!3297 = !DILocation(line: 50, column: 1, scope: !3283)
!3298 = !{i64 2155039248, i64 2155039268, i64 2155039331}
!3299 = !DILocation(line: 54, column: 1, scope: !3283)
!3300 = !{i64 2155039687, i64 2155039707, i64 2155039770}
!3301 = !DILocation(line: 61, column: 1, scope: !3283)
!3302 = !{i64 2155040004, i64 2155040024, i64 2155040087}
!3303 = !DILocation(line: 63, column: 1, scope: !3283)
!3304 = !{i64 2155040384, i64 2155040404, i64 2155040467}
!3305 = !DILocation(line: 64, column: 1, scope: !3283)
!3306 = !{i64 2155040906, i64 2155040926, i64 2155040989}
!3307 = !DILocation(line: 65, column: 1, scope: !3283)
!3308 = !{i64 2155045465, i64 2155045485, i64 2155045548}
!3309 = !DILocation(line: 66, column: 1, scope: !3283)
!3310 = !{i64 2155045947, i64 2155045967, i64 2155046030}
!3311 = !DILocation(line: 67, column: 1, scope: !3283)
!3312 = !{i64 2155046454, i64 2155046474, i64 2155046537}
!3313 = !DILocation(line: 68, column: 1, scope: !3283)
!3314 = !{i64 2155046942, i64 2155046962, i64 2155047025}
!3315 = !DILocation(line: 70, column: 1, scope: !3283)
!3316 = !{i64 2155047410, i64 2155047430, i64 2155047493}
!3317 = !DILocation(line: 71, column: 1, scope: !3283)
!3318 = !{i64 2155047852, i64 2155047872, i64 2155047935}
!3319 = !DILocation(line: 72, column: 1, scope: !3283)
!3320 = !{i64 2155048310, i64 2155048330, i64 2155048393}
!3321 = !DILocation(line: 79, column: 1, scope: !3283)
!3322 = !{i64 2155048764, i64 2155048784, i64 2155048847}
!3323 = !DILocation(line: 80, column: 1, scope: !3283)
!3324 = !{i64 2155049275, i64 2155049295, i64 2155049358}
!3325 = !DILocation(line: 82, column: 1, scope: !3283)
!3326 = !{i64 2155049766, i64 2155049786, i64 2155049849}
!3327 = !DILocation(line: 97, column: 1, scope: !3283)
!3328 = !{i64 2155050103, i64 2155050123, i64 2155050186}
!3329 = !DILocation(line: 99, column: 1, scope: !3283)
!3330 = !{i64 2155050321, i64 2155050341, i64 2155050404}
!3331 = !DILocation(line: 102, column: 1, scope: !3283)
!3332 = !{i64 2155050578, i64 2155050598, i64 2155050661}
!3333 = !DILocation(line: 105, column: 1, scope: !3283)
!3334 = !{i64 2155050818, i64 2155050838, i64 2155050901}
!3335 = !DILocation(line: 115, column: 1, scope: !3283)
!3336 = !{i64 2155051157, i64 2155051177, i64 2155051240}
!3337 = !DILocation(line: 118, column: 1, scope: !3283)
!3338 = !{i64 2155051501, i64 2155051521, i64 2155051584}
!3339 = !DILocation(line: 32, column: 1, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3283, file: !3341, discriminator: 0)
!3341 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3342 = !{i64 2155051857, i64 2155051877, i64 2155051940}
!3343 = !DILocation(line: 33, column: 1, scope: !3340)
!3344 = !{i64 2155052369, i64 2155052389, i64 2155052452}
!3345 = !DILocation(line: 53, column: 1, scope: !3340)
!3346 = !{i64 2155052877, i64 2155052897, i64 2155052960}
!3347 = !DILocation(line: 54, column: 1, scope: !3340)
!3348 = !{i64 2155053295, i64 2155053315, i64 2155053378}
!3349 = !DILocation(line: 55, column: 1, scope: !3340)
!3350 = !{i64 2155053713, i64 2155053733, i64 2155053796}
!3351 = !DILocation(line: 56, column: 1, scope: !3340)
!3352 = !{i64 2155054131, i64 2155054151, i64 2155054214}
!3353 = !DILocation(line: 57, column: 1, scope: !3340)
!3354 = !{i64 2155054549, i64 2155054569, i64 2155054632}
!3355 = !DILocation(line: 58, column: 1, scope: !3340)
!3356 = !{i64 2155059028, i64 2155059048, i64 2155059111}
!3357 = !DILocation(line: 59, column: 1, scope: !3340)
!3358 = !{i64 2155059446, i64 2155059466, i64 2155059529}
!3359 = !DILocation(line: 60, column: 1, scope: !3340)
!3360 = !{i64 2155059870, i64 2155059890, i64 2155059953}
!3361 = !DILocation(line: 61, column: 1, scope: !3340)
!3362 = !{i64 2155060187, i64 2155060207, i64 2155060270}
!3363 = !DILocation(line: 70, column: 1, scope: !3340)
!3364 = !{i64 2155060416, i64 2155060436, i64 2155060499}
!3365 = !DILocation(line: 72, column: 1, scope: !3340)
!3366 = !{i64 2155060748, i64 2155060768, i64 2155060831}
!3367 = !DILocation(line: 73, column: 1, scope: !3340)
!3368 = !{i64 2155061198, i64 2155061218, i64 2155061281}
!3369 = !DILocation(line: 74, column: 1, scope: !3340)
!3370 = !{i64 2155061648, i64 2155061668, i64 2155061731}
!3371 = !DILocation(line: 75, column: 1, scope: !3340)
!3372 = !{i64 2155062098, i64 2155062118, i64 2155062181}
!3373 = !DILocation(line: 76, column: 1, scope: !3340)
!3374 = !{i64 2155062548, i64 2155062568, i64 2155062631}
!3375 = !DILocation(line: 77, column: 1, scope: !3340)
!3376 = !{i64 2155062998, i64 2155063018, i64 2155063081}
!3377 = !DILocation(line: 78, column: 1, scope: !3340)
!3378 = !{i64 2155063448, i64 2155063468, i64 2155063531}
!3379 = !DILocation(line: 79, column: 1, scope: !3340)
!3380 = !{i64 2155063898, i64 2155063918, i64 2155063981}
!3381 = !DILocation(line: 80, column: 1, scope: !3340)
!3382 = !{i64 2155064351, i64 2155064371, i64 2155064434}
!3383 = !DILocation(line: 84, column: 1, scope: !3340)
!3384 = !{i64 2155064683, i64 2155064703, i64 2155064766}
!3385 = !DILocation(line: 91, column: 1, scope: !3340)
!3386 = !{i64 2155065080, i64 2155065100, i64 2155065163}
!3387 = !DILocation(line: 93, column: 1, scope: !3340)
!3388 = !{i64 2155065447, i64 2155065467, i64 2155065530}
!3389 = !DILocation(line: 106, column: 1, scope: !3340)
!3390 = !{i64 2155065717, i64 2155065737, i64 2155065800}
!3391 = !DILocation(line: 11, column: 1, scope: !3392)
!3392 = !DILexicalBlockFile(scope: !3283, file: !3393, discriminator: 0)
!3393 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3394 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3395)
!3395 = !{!3396, !3397, !3398, !3399, !3401}
!3396 = !DILocalVariable(name: "p1", arg: 1, scope: !3394, file: !120, line: 48, type: !104)
!3397 = !DILocalVariable(name: "p2", arg: 2, scope: !3394, file: !120, line: 48, type: !104)
!3398 = !DILocalVariable(name: "p3", arg: 3, scope: !3394, file: !120, line: 48, type: !104)
!3399 = !DILocalVariable(name: "m", scope: !3400, file: !120, line: 59, type: !303)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !120, line: 54, column: 15)
!3401 = !DILocalVariable(name: "ret", scope: !3400, file: !120, line: 64, type: !105)
!3402 = !DILocation(line: 0, scope: !3394)
!3403 = !DILocation(line: 54, column: 2, scope: !3394)
!3404 = !DILocation(line: 59, column: 3, scope: !3400)
!3405 = !DILocation(line: 59, column: 14, scope: !3400)
!3406 = !DILocation(line: 61, column: 3, scope: !3400)
!3407 = !DILocation(line: 62, column: 23, scope: !3400)
!3408 = !DILocation(line: 62, column: 44, scope: !3400)
!3409 = !DILocation(line: 62, column: 40, scope: !3400)
!3410 = !DILocation(line: 62, column: 21, scope: !3400)
!3411 = !DILocation(line: 64, column: 35, scope: !3400)
!3412 = !DILocation(line: 64, column: 43, scope: !3400)
!3413 = !DILocation(line: 64, column: 13, scope: !3400)
!3414 = !DILocation(line: 0, scope: !3400)
!3415 = !DILocation(line: 66, column: 7, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3400, file: !120, line: 66, column: 7)
!3417 = !DILocation(line: 66, column: 7, scope: !3400)
!3418 = !DILocation(line: 67, column: 4, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !120, line: 67, column: 4)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !120, line: 67, column: 4)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !120, line: 67, column: 4)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !120, line: 67, column: 4)
!3423 = distinct !DILexicalBlock(scope: !3416, file: !120, line: 66, column: 12)
!3424 = !DILocation(line: 69, column: 3, scope: !3423)
!3425 = !DILocation(line: 70, column: 2, scope: !3394)
!3426 = distinct !{!3426, !3403, !3425}
!3427 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3428 = !DILocation(line: 1677, column: 9, scope: !3427)
!3429 = !DILocation(line: 1677, column: 2, scope: !3427)
!3430 = distinct !DISubprogram(name: "k_msgq_put", scope: !3431, file: !3431, line: 1129, type: !3432, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3439)
!3431 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!105, !3434, !13, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3437)
!3437 = !{!3438}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3436, file: !108, line: 66, baseType: !107, size: 64)
!3439 = !{!3440, !3441, !3442}
!3440 = !DILocalVariable(name: "msgq", arg: 1, scope: !3430, file: !3431, line: 1129, type: !3434)
!3441 = !DILocalVariable(name: "data", arg: 2, scope: !3430, file: !3431, line: 1129, type: !13)
!3442 = !DILocalVariable(name: "timeout", arg: 3, scope: !3430, file: !3431, line: 1129, type: !3435)
!3443 = !DILocation(line: 0, scope: !3430)
!3444 = !DILocation(line: 1139, column: 2, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3430, file: !3431, line: 1139, column: 2)
!3446 = !{i64 2154755295}
!3447 = !DILocation(line: 1140, column: 9, scope: !3430)
!3448 = !DILocation(line: 1140, column: 2, scope: !3430)
!3449 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3450, file: !3450, line: 175, type: !3451, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3453)
!3450 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!103, !105}
!3453 = !{!3454}
!3454 = !DILocalVariable(name: "level", arg: 1, scope: !3449, file: !3450, line: 175, type: !105)
!3455 = !DILocation(line: 0, scope: !3449)
!3456 = !DILocation(line: 177, column: 2, scope: !3449)
!3457 = !DILocation(line: 189, column: 1, scope: !3449)
!3458 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3459, file: !3459, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3459 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3460 = !DILocation(line: 26, column: 9, scope: !3458)
!3461 = !DILocation(line: 26, column: 2, scope: !3458)
!3462 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3463)
!3463 = !{!3464, !3466}
!3464 = !DILocalVariable(name: "i", scope: !3465, file: !120, line: 228, type: !106)
!3465 = distinct !DILexicalBlock(scope: !3462, file: !120, line: 228, column: 2)
!3466 = !DILocalVariable(name: "prio", scope: !3467, file: !120, line: 235, type: !105)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !120, line: 228, column: 41)
!3468 = distinct !DILexicalBlock(scope: !3465, file: !120, line: 228, column: 2)
!3469 = !DILocation(line: 0, scope: !3465)
!3470 = !DILocation(line: 228, column: 2, scope: !3465)
!3471 = !DILocation(line: 246, column: 2, scope: !3462)
!3472 = !DILocation(line: 247, column: 1, scope: !3462)
!3473 = !DILocation(line: 235, column: 31, scope: !3467)
!3474 = !DILocation(line: 0, scope: !3467)
!3475 = !DILocation(line: 237, column: 27, scope: !3467)
!3476 = !DILocation(line: 237, column: 41, scope: !3467)
!3477 = !DILocation(line: 237, column: 33, scope: !3467)
!3478 = !DILocation(line: 237, column: 3, scope: !3467)
!3479 = !DILocation(line: 240, column: 31, scope: !3467)
!3480 = !DILocation(line: 241, column: 5, scope: !3467)
!3481 = !DILocation(line: 242, column: 16, scope: !3467)
!3482 = !DILocation(line: 240, column: 3, scope: !3467)
!3483 = !DILocation(line: 228, column: 37, scope: !3468)
!3484 = !DILocation(line: 228, column: 21, scope: !3468)
!3485 = distinct !{!3485, !3470, !3486}
!3486 = !DILocation(line: 244, column: 2, scope: !3465)
!3487 = distinct !DISubprogram(name: "k_thread_create", scope: !3431, file: !3431, line: 24, type: !3488, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3490)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3435}
!3490 = !{!3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500}
!3491 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3487, file: !3431, line: 24, type: !125)
!3492 = !DILocalVariable(name: "stack", arg: 2, scope: !3487, file: !3431, line: 24, type: !245)
!3493 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3487, file: !3431, line: 24, type: !111)
!3494 = !DILocalVariable(name: "entry", arg: 4, scope: !3487, file: !3431, line: 24, type: !254)
!3495 = !DILocalVariable(name: "p1", arg: 5, scope: !3487, file: !3431, line: 24, type: !104)
!3496 = !DILocalVariable(name: "p2", arg: 6, scope: !3487, file: !3431, line: 24, type: !104)
!3497 = !DILocalVariable(name: "p3", arg: 7, scope: !3487, file: !3431, line: 24, type: !104)
!3498 = !DILocalVariable(name: "prio", arg: 8, scope: !3487, file: !3431, line: 24, type: !105)
!3499 = !DILocalVariable(name: "options", arg: 9, scope: !3487, file: !3431, line: 24, type: !113)
!3500 = !DILocalVariable(name: "delay", arg: 10, scope: !3487, file: !3431, line: 24, type: !3435)
!3501 = !DILocation(line: 0, scope: !3487)
!3502 = !DILocation(line: 49, column: 2, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3487, file: !3431, line: 49, column: 2)
!3504 = !{i64 2154750907}
!3505 = !DILocation(line: 50, column: 9, scope: !3487)
!3506 = !DILocation(line: 50, column: 2, scope: !3487)
!3507 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3516, !3517, !3521}
!3509 = !DILocalVariable(name: "p1", arg: 1, scope: !3507, file: !120, line: 177, type: !104)
!3510 = !DILocalVariable(name: "p2", arg: 2, scope: !3507, file: !120, line: 177, type: !104)
!3511 = !DILocalVariable(name: "p3", arg: 3, scope: !3507, file: !120, line: 177, type: !104)
!3512 = !DILocalVariable(name: "id", scope: !3507, file: !120, line: 181, type: !105)
!3513 = !DILocalVariable(name: "m", scope: !3507, file: !120, line: 182, type: !303)
!3514 = !DILocalVariable(name: "ret", scope: !3515, file: !120, line: 188, type: !105)
!3515 = distinct !DILexicalBlock(scope: !3507, file: !120, line: 187, column: 15)
!3516 = !DILocalVariable(name: "start", scope: !3515, file: !120, line: 189, type: !113)
!3517 = !DILocalVariable(name: "i", scope: !3518, file: !120, line: 202, type: !3520)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !120, line: 202, column: 4)
!3519 = distinct !DILexicalBlock(scope: !3515, file: !120, line: 201, column: 49)
!3520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3521 = !DILocalVariable(name: "dur", scope: !3515, file: !120, line: 206, type: !113)
!3522 = !DILocation(line: 0, scope: !3507)
!3523 = !DILocation(line: 181, column: 11, scope: !3507)
!3524 = !DILocation(line: 182, column: 2, scope: !3507)
!3525 = !DILocation(line: 182, column: 13, scope: !3507)
!3526 = !DILocation(line: 184, column: 2, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !120, line: 184, column: 2)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !120, line: 184, column: 2)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !120, line: 184, column: 2)
!3530 = distinct !DILexicalBlock(scope: !3507, file: !120, line: 184, column: 2)
!3531 = !DILocation(line: 188, column: 13, scope: !3515)
!3532 = !DILocation(line: 0, scope: !3515)
!3533 = !DILocation(line: 189, column: 20, scope: !3515)
!3534 = !DILocation(line: 191, column: 3, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !120, line: 191, column: 3)
!3536 = distinct !DILexicalBlock(scope: !3515, file: !120, line: 191, column: 3)
!3537 = !DILocation(line: 191, column: 3, scope: !3536)
!3538 = !DILocation(line: 201, column: 10, scope: !3515)
!3539 = !DILocation(line: 201, column: 27, scope: !3515)
!3540 = !DILocation(line: 201, column: 39, scope: !3515)
!3541 = !DILocation(line: 201, column: 35, scope: !3515)
!3542 = !DILocation(line: 201, column: 3, scope: !3515)
!3543 = !DILocation(line: 191, column: 3, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3535, file: !120, line: 191, column: 3)
!3545 = !DILocation(line: 202, column: 9, scope: !3518)
!3546 = !DILocation(line: 202, column: 22, scope: !3518)
!3547 = !DILocation(line: 202, column: 29, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3518, file: !120, line: 202, column: 4)
!3549 = !DILocation(line: 202, column: 31, scope: !3548)
!3550 = !DILocation(line: 202, column: 4, scope: !3518)
!3551 = !DILocation(line: 202, column: 4, scope: !3548)
!3552 = distinct !{!3552, !3542, !3553}
!3553 = !DILocation(line: 204, column: 3, scope: !3515)
!3554 = !DILocation(line: 202, column: 39, scope: !3548)
!3555 = distinct !{!3555, !3550, !3556}
!3556 = !DILocation(line: 203, column: 4, scope: !3518)
!3557 = !DILocation(line: 206, column: 18, scope: !3515)
!3558 = !DILocation(line: 206, column: 35, scope: !3515)
!3559 = !DILocation(line: 216, column: 3, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !120, line: 216, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !120, line: 216, column: 3)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !120, line: 216, column: 3)
!3563 = distinct !DILexicalBlock(scope: !3515, file: !120, line: 216, column: 3)
!3564 = !DILocation(line: 222, column: 34, scope: !3515)
!3565 = !DILocation(line: 222, column: 30, scope: !3515)
!3566 = !DILocation(line: 222, column: 3, scope: !3515)
!3567 = distinct !{!3567, !3568, !3569}
!3568 = !DILocation(line: 187, column: 2, scope: !3507)
!3569 = !DILocation(line: 223, column: 2, scope: !3507)
!3570 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3571, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!274}
!3573 = !DILocation(line: 535, column: 9, scope: !3570)
!3574 = !DILocation(line: 535, column: 2, scope: !3570)
!3575 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3431, file: !3431, line: 258, type: !3576, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3578)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!105, !274}
!3578 = !{!3579}
!3579 = !DILocalVariable(name: "thread", arg: 1, scope: !3575, file: !3431, line: 258, type: !274)
!3580 = !DILocation(line: 0, scope: !3575)
!3581 = !DILocation(line: 266, column: 2, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3575, file: !3431, line: 266, column: 2)
!3583 = !{i64 2154751791}
!3584 = !DILocation(line: 267, column: 9, scope: !3575)
!3585 = !DILocation(line: 267, column: 2, scope: !3575)
!3586 = distinct !DISubprogram(name: "k_msgq_get", scope: !3431, file: !3431, line: 1147, type: !3587, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!105, !3434, !104, !3435}
!3589 = !{!3590, !3591, !3592}
!3590 = !DILocalVariable(name: "msgq", arg: 1, scope: !3586, file: !3431, line: 1147, type: !3434)
!3591 = !DILocalVariable(name: "data", arg: 2, scope: !3586, file: !3431, line: 1147, type: !104)
!3592 = !DILocalVariable(name: "timeout", arg: 3, scope: !3586, file: !3431, line: 1147, type: !3435)
!3593 = !DILocation(line: 0, scope: !3586)
!3594 = !DILocation(line: 1157, column: 2, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3586, file: !3431, line: 1157, column: 2)
!3596 = !{i64 2154755363}
!3597 = !DILocation(line: 1158, column: 9, scope: !3586)
!3598 = !DILocation(line: 1158, column: 2, scope: !3586)
!3599 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3600, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3603)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{null, !3602, !113}
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3603 = !{!3604, !3605, !3606, !3607, !3608, !3611, !3612, !3613, !3614, !3615}
!3604 = !DILocalVariable(name: "m", arg: 1, scope: !3599, file: !120, line: 111, type: !3602)
!3605 = !DILocalVariable(name: "latency", arg: 2, scope: !3599, file: !120, line: 111, type: !113)
!3606 = !DILocalVariable(name: "t", scope: !3599, file: !120, line: 129, type: !105)
!3607 = !DILocalVariable(name: "lidx", scope: !3599, file: !120, line: 130, type: !105)
!3608 = !DILocalVariable(name: "hi", scope: !3609, file: !120, line: 145, type: !113)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !120, line: 144, column: 32)
!3610 = distinct !DILexicalBlock(scope: !3599, file: !120, line: 144, column: 6)
!3611 = !DILocalVariable(name: "lo", scope: !3609, file: !120, line: 145, type: !113)
!3612 = !DILocalVariable(name: "mean", scope: !3609, file: !120, line: 145, type: !113)
!3613 = !DILocalVariable(name: "stdev", scope: !3609, file: !120, line: 145, type: !113)
!3614 = !DILocalVariable(name: "ret", scope: !3609, file: !120, line: 145, type: !113)
!3615 = !DILocalVariable(name: "i", scope: !3616, file: !120, line: 159, type: !105)
!3616 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 159, column: 3)
!3617 = !DILocation(line: 0, scope: !3599)
!3618 = !DILocation(line: 125, column: 9, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3599, file: !120, line: 125, column: 6)
!3620 = !DILocation(line: 125, column: 13, scope: !3619)
!3621 = !DILocation(line: 125, column: 6, scope: !3599)
!3622 = !DILocation(line: 129, column: 13, scope: !3599)
!3623 = !DILocation(line: 130, column: 30, scope: !3599)
!3624 = !DILocation(line: 130, column: 34, scope: !3599)
!3625 = !DILocation(line: 132, column: 11, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3599, file: !120, line: 132, column: 6)
!3627 = !DILocation(line: 132, column: 6, scope: !3599)
!3628 = !DILocation(line: 133, column: 3, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3626, file: !120, line: 132, column: 53)
!3630 = !DILocation(line: 133, column: 36, scope: !3629)
!3631 = !DILocation(line: 134, column: 2, scope: !3629)
!3632 = !DILocation(line: 136, column: 57, scope: !3599)
!3633 = !DILocation(line: 136, column: 23, scope: !3599)
!3634 = !DILocation(line: 136, column: 2, scope: !3599)
!3635 = !DILocation(line: 136, column: 52, scope: !3599)
!3636 = !DILocation(line: 144, column: 9, scope: !3610)
!3637 = !DILocation(line: 144, column: 13, scope: !3610)
!3638 = !DILocation(line: 144, column: 6, scope: !3599)
!3639 = !DILocation(line: 145, column: 3, scope: !3609)
!3640 = !DILocation(line: 147, column: 9, scope: !3609)
!3641 = !DILocation(line: 0, scope: !3609)
!3642 = !DILocation(line: 148, column: 3, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !120, line: 148, column: 3)
!3644 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 148, column: 3)
!3645 = !DILocation(line: 148, column: 3, scope: !3644)
!3646 = !DILocation(line: 148, column: 3, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3643, file: !120, line: 148, column: 3)
!3648 = !DILocation(line: 149, column: 3, scope: !3609)
!3649 = !DILocation(line: 151, column: 42, scope: !3609)
!3650 = !DILocation(line: 151, column: 3, scope: !3609)
!3651 = !DILocation(line: 154, column: 3, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !120, line: 154, column: 3)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !120, line: 154, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !120, line: 154, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 154, column: 3)
!3656 = !DILocation(line: 155, column: 3, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !120, line: 155, column: 3)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !120, line: 155, column: 3)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !120, line: 155, column: 3)
!3660 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 155, column: 3)
!3661 = !DILocation(line: 156, column: 3, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !120, line: 156, column: 3)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !120, line: 156, column: 3)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !120, line: 156, column: 3)
!3665 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 156, column: 3)
!3666 = !DILocation(line: 0, scope: !3616)
!3667 = !DILocation(line: 159, column: 3, scope: !3616)
!3668 = !DILocation(line: 173, column: 3, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !120, line: 173, column: 3)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !120, line: 173, column: 3)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !120, line: 173, column: 3)
!3672 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 173, column: 3)
!3673 = !DILocation(line: 174, column: 2, scope: !3610)
!3674 = !DILocation(line: 174, column: 2, scope: !3609)
!3675 = !DILocation(line: 160, column: 25, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !120, line: 160, column: 8)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !120, line: 159, column: 41)
!3678 = distinct !DILexicalBlock(scope: !3616, file: !120, line: 159, column: 3)
!3679 = !DILocation(line: 160, column: 30, scope: !3676)
!3680 = !DILocation(line: 160, column: 8, scope: !3677)
!3681 = !DILocation(line: 161, column: 5, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !120, line: 161, column: 5)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !120, line: 161, column: 5)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !120, line: 161, column: 5)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !120, line: 161, column: 5)
!3686 = distinct !DILexicalBlock(scope: !3676, file: !120, line: 160, column: 36)
!3687 = !DILocation(line: 162, column: 5, scope: !3686)
!3688 = !DILocation(line: 165, column: 15, scope: !3677)
!3689 = !DILocation(line: 165, column: 4, scope: !3677)
!3690 = !DILocation(line: 169, column: 4, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !120, line: 169, column: 4)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !120, line: 169, column: 4)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !120, line: 169, column: 4)
!3694 = distinct !DILexicalBlock(scope: !3677, file: !120, line: 169, column: 4)
!3695 = !DILocation(line: 171, column: 3, scope: !3677)
!3696 = !DILocation(line: 159, column: 37, scope: !3678)
!3697 = !DILocation(line: 159, column: 21, scope: !3678)
!3698 = distinct !{!3698, !3667, !3699}
!3699 = !DILocation(line: 171, column: 3, scope: !3616)
!3700 = !DILocation(line: 175, column: 1, scope: !3599)
!3701 = distinct !DISubprogram(name: "atomic_inc", scope: !3702, file: !3702, line: 123, type: !3703, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3707)
!3702 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!3705, !3706}
!3705 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3707 = !{!3708}
!3708 = !DILocalVariable(name: "target", arg: 1, scope: !3701, file: !3702, line: 123, type: !3706)
!3709 = !DILocation(line: 0, scope: !3701)
!3710 = !DILocation(line: 125, column: 9, scope: !3701)
!3711 = !DILocation(line: 125, column: 2, scope: !3701)
!3712 = distinct !DISubprogram(name: "k_sem_take", scope: !3431, file: !3431, line: 1044, type: !3713, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3716)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!105, !3715, !3435}
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3716 = !{!3717, !3718}
!3717 = !DILocalVariable(name: "sem", arg: 1, scope: !3712, file: !3431, line: 1044, type: !3715)
!3718 = !DILocalVariable(name: "timeout", arg: 2, scope: !3712, file: !3431, line: 1044, type: !3435)
!3719 = !DILocation(line: 0, scope: !3712)
!3720 = !DILocation(line: 1053, column: 2, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3712, file: !3431, line: 1053, column: 2)
!3722 = !{i64 2154754955}
!3723 = !DILocation(line: 1054, column: 9, scope: !3712)
!3724 = !DILocation(line: 1054, column: 2, scope: !3712)
!3725 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3726, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!116, !116}
!3728 = !{!3729}
!3729 = !DILocalVariable(name: "ms", arg: 1, scope: !3725, file: !122, line: 439, type: !116)
!3730 = !DILocation(line: 0, scope: !3725)
!3731 = !DILocation(line: 441, column: 9, scope: !3725)
!3732 = !DILocation(line: 441, column: 2, scope: !3725)
!3733 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3734, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3738)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{null, !3736, !113, !1025, !1025, !1025, !1025}
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3749, !3751}
!3739 = !DILocalVariable(name: "array", arg: 1, scope: !3733, file: !120, line: 87, type: !3736)
!3740 = !DILocalVariable(name: "n", arg: 2, scope: !3733, file: !120, line: 87, type: !113)
!3741 = !DILocalVariable(name: "lo", arg: 3, scope: !3733, file: !120, line: 88, type: !1025)
!3742 = !DILocalVariable(name: "hi", arg: 4, scope: !3733, file: !120, line: 88, type: !1025)
!3743 = !DILocalVariable(name: "mean", arg: 5, scope: !3733, file: !120, line: 88, type: !1025)
!3744 = !DILocalVariable(name: "stdev", arg: 6, scope: !3733, file: !120, line: 88, type: !1025)
!3745 = !DILocalVariable(name: "tot", scope: !3733, file: !120, line: 90, type: !114)
!3746 = !DILocalVariable(name: "totsq", scope: !3733, file: !120, line: 90, type: !114)
!3747 = !DILocalVariable(name: "i", scope: !3748, file: !120, line: 94, type: !105)
!3748 = distinct !DILexicalBlock(scope: !3733, file: !120, line: 94, column: 2)
!3749 = !DILocalVariable(name: "i", scope: !3750, file: !120, line: 102, type: !105)
!3750 = distinct !DILexicalBlock(scope: !3733, file: !120, line: 102, column: 2)
!3751 = !DILocalVariable(name: "d", scope: !3752, file: !120, line: 103, type: !109)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !120, line: 102, column: 30)
!3753 = distinct !DILexicalBlock(scope: !3750, file: !120, line: 102, column: 2)
!3754 = !DILocation(line: 0, scope: !3733)
!3755 = !DILocation(line: 92, column: 6, scope: !3733)
!3756 = !DILocation(line: 93, column: 6, scope: !3733)
!3757 = !DILocation(line: 0, scope: !3748)
!3758 = !DILocation(line: 94, column: 20, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3748, file: !120, line: 94, column: 2)
!3760 = !DILocation(line: 94, column: 2, scope: !3748)
!3761 = !DILocation(line: 100, column: 31, scope: !3733)
!3762 = !DILocation(line: 100, column: 37, scope: !3733)
!3763 = !DILocation(line: 100, column: 10, scope: !3733)
!3764 = !DILocation(line: 100, column: 8, scope: !3733)
!3765 = !DILocation(line: 0, scope: !3750)
!3766 = !DILocation(line: 102, column: 2, scope: !3750)
!3767 = !DILocation(line: 100, column: 28, scope: !3733)
!3768 = !DILocation(line: 100, column: 26, scope: !3733)
!3769 = !DILocation(line: 100, column: 39, scope: !3733)
!3770 = !DILocation(line: 95, column: 9, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3759, file: !120, line: 94, column: 30)
!3772 = !DILocation(line: 95, column: 7, scope: !3771)
!3773 = !DILocation(line: 96, column: 9, scope: !3771)
!3774 = !DILocation(line: 96, column: 7, scope: !3771)
!3775 = !DILocation(line: 97, column: 10, scope: !3771)
!3776 = !DILocation(line: 97, column: 7, scope: !3771)
!3777 = !DILocation(line: 94, column: 26, scope: !3759)
!3778 = distinct !{!3778, !3760, !3779}
!3779 = !DILocation(line: 98, column: 2, scope: !3748)
!3780 = !DILocation(line: 108, column: 24, scope: !3733)
!3781 = !DILocation(line: 108, column: 35, scope: !3733)
!3782 = !DILocation(line: 108, column: 11, scope: !3733)
!3783 = !DILocation(line: 108, column: 9, scope: !3733)
!3784 = !DILocation(line: 109, column: 1, scope: !3733)
!3785 = !DILocation(line: 103, column: 26, scope: !3752)
!3786 = !DILocation(line: 103, column: 35, scope: !3752)
!3787 = !DILocation(line: 103, column: 15, scope: !3752)
!3788 = !DILocation(line: 0, scope: !3752)
!3789 = !DILocation(line: 105, column: 14, scope: !3752)
!3790 = !DILocation(line: 105, column: 9, scope: !3752)
!3791 = !DILocation(line: 102, column: 26, scope: !3753)
!3792 = !DILocation(line: 102, column: 20, scope: !3753)
!3793 = distinct !{!3793, !3766, !3794}
!3794 = !DILocation(line: 106, column: 2, scope: !3750)
!3795 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3796, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3798)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!113, !114}
!3798 = !{!3799, !3800, !3803}
!3799 = !DILocalVariable(name: "n", arg: 1, scope: !3795, file: !120, line: 76, type: !114)
!3800 = !DILocalVariable(name: "lo", scope: !3801, file: !120, line: 79, type: !114)
!3801 = distinct !DILexicalBlock(scope: !3802, file: !120, line: 78, column: 13)
!3802 = distinct !DILexicalBlock(scope: !3795, file: !120, line: 78, column: 6)
!3803 = !DILocalVariable(name: "hi", scope: !3801, file: !120, line: 80, type: !114)
!3804 = !DILocation(line: 0, scope: !3795)
!3805 = !DILocation(line: 78, column: 8, scope: !3802)
!3806 = !DILocation(line: 78, column: 6, scope: !3795)
!3807 = !DILocation(line: 85, column: 1, scope: !3795)
!3808 = !DILocation(line: 79, column: 25, scope: !3801)
!3809 = !DILocation(line: 79, column: 17, scope: !3801)
!3810 = !DILocation(line: 79, column: 31, scope: !3801)
!3811 = !DILocation(line: 0, scope: !3801)
!3812 = !DILocation(line: 80, column: 20, scope: !3801)
!3813 = !DILocation(line: 82, column: 26, scope: !3801)
!3814 = !DILocation(line: 82, column: 32, scope: !3801)
!3815 = !DILocation(line: 82, column: 21, scope: !3801)
!3816 = distinct !DISubprogram(name: "k_sleep", scope: !3431, file: !3431, line: 91, type: !3817, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3819)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!116, !3435}
!3819 = !{!3820}
!3820 = !DILocalVariable(name: "timeout", arg: 1, scope: !3816, file: !3431, line: 91, type: !3435)
!3821 = !DILocation(line: 0, scope: !3816)
!3822 = !DILocation(line: 99, column: 2, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3816, file: !3431, line: 99, column: 2)
!3824 = !{i64 2154751111}
!3825 = !DILocation(line: 100, column: 9, scope: !3816)
!3826 = !DILocation(line: 100, column: 2, scope: !3816)
!3827 = distinct !DISubprogram(name: "atomic_add", scope: !3702, file: !3702, line: 86, type: !3828, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3830)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!3705, !3706, !3705}
!3830 = !{!3831, !3832}
!3831 = !DILocalVariable(name: "target", arg: 1, scope: !3827, file: !3702, line: 86, type: !3706)
!3832 = !DILocalVariable(name: "value", arg: 2, scope: !3827, file: !3702, line: 86, type: !3705)
!3833 = !DILocation(line: 0, scope: !3827)
!3834 = !DILocation(line: 88, column: 9, scope: !3827)
!3835 = !DILocation(line: 88, column: 2, scope: !3827)
!3836 = distinct !DISubprogram(name: "z_current_get", scope: !3431, file: !3431, line: 173, type: !3571, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3837 = !DILocation(line: 180, column: 2, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3836, file: !3431, line: 180, column: 2)
!3839 = !{i64 2154751451}
!3840 = !DILocation(line: 181, column: 9, scope: !3836)
!3841 = !DILocation(line: 181, column: 2, scope: !3836)
!3842 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3843)
!3843 = !{!3844, !3845, !3846}
!3844 = !DILocalVariable(name: "cyc_per_tick", scope: !3842, file: !360, line: 90, type: !114)
!3845 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3842, file: !360, line: 91, type: !114)
!3846 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3842, file: !360, line: 92, type: !114)
!3847 = !DILocation(line: 0, scope: !3842)
!3848 = !DILocation(line: 94, column: 15, scope: !3842)
!3849 = !DILocation(line: 96, column: 2, scope: !3842)
!3850 = !DILocation(line: 97, column: 1, scope: !3842)
!3851 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3852)
!3852 = !{!3853, !3854, !3855, !3863}
!3853 = !DILocalVariable(name: "t", arg: 1, scope: !3851, file: !360, line: 54, type: !383)
!3854 = !DILocalVariable(name: "timestamp", scope: !3851, file: !360, line: 57, type: !113)
!3855 = !DILocalVariable(name: "m", scope: !3851, file: !360, line: 58, type: !3856)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3857)
!3857 = !{!3858, !3859, !3860, !3861, !3862}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3856, file: !304, line: 46, baseType: !113, size: 32)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3856, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3856, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3856, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3856, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3863 = !DILocalVariable(name: "ret", scope: !3851, file: !360, line: 65, type: !105)
!3864 = !DILocation(line: 0, scope: !3851)
!3865 = !DILocation(line: 56, column: 2, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !360, line: 56, column: 2)
!3867 = distinct !DILexicalBlock(scope: !3851, file: !360, line: 56, column: 2)
!3868 = !DILocation(line: 56, column: 2, scope: !3867)
!3869 = !DILocation(line: 56, column: 2, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3866, file: !360, line: 56, column: 2)
!3871 = !DILocation(line: 57, column: 23, scope: !3851)
!3872 = !DILocation(line: 58, column: 2, scope: !3851)
!3873 = !DILocation(line: 58, column: 13, scope: !3851)
!3874 = !DILocation(line: 60, column: 17, scope: !3851)
!3875 = !DILocation(line: 60, column: 4, scope: !3851)
!3876 = !DILocation(line: 60, column: 8, scope: !3851)
!3877 = !DILocation(line: 61, column: 4, scope: !3851)
!3878 = !DILocation(line: 61, column: 14, scope: !3851)
!3879 = !DILocation(line: 62, column: 13, scope: !3851)
!3880 = !DILocation(line: 62, column: 22, scope: !3851)
!3881 = !DILocation(line: 62, column: 4, scope: !3851)
!3882 = !DILocation(line: 62, column: 11, scope: !3851)
!3883 = !DILocation(line: 63, column: 15, scope: !3851)
!3884 = !DILocation(line: 63, column: 26, scope: !3851)
!3885 = !DILocation(line: 63, column: 24, scope: !3851)
!3886 = !DILocation(line: 63, column: 4, scope: !3851)
!3887 = !DILocation(line: 63, column: 13, scope: !3851)
!3888 = !DILocation(line: 65, column: 12, scope: !3851)
!3889 = !DILocation(line: 67, column: 10, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3851, file: !360, line: 67, column: 6)
!3891 = !DILocation(line: 67, column: 6, scope: !3851)
!3892 = !DILocation(line: 68, column: 3, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !360, line: 67, column: 16)
!3894 = !DILocation(line: 69, column: 2, scope: !3893)
!3895 = !DILocation(line: 71, column: 8, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3851, file: !360, line: 71, column: 6)
!3897 = !DILocation(line: 71, column: 12, scope: !3896)
!3898 = !DILocation(line: 71, column: 6, scope: !3851)
!3899 = !DILocation(line: 72, column: 3, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !360, line: 71, column: 26)
!3901 = !DILocation(line: 73, column: 2, scope: !3900)
!3902 = !DILocation(line: 74, column: 1, scope: !3851)
!3903 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3904 = !DILocation(line: 1677, column: 9, scope: !3903)
!3905 = !DILocation(line: 1677, column: 2, scope: !3903)
!3906 = !DILocation(line: 40, column: 7, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3908 = !DILocation(line: 40, column: 6, scope: !394)
!3909 = !DILocation(line: 41, column: 22, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3907, file: !360, line: 40, column: 14)
!3911 = !DILocation(line: 41, column: 12, scope: !3910)
!3912 = !DILocation(line: 41, column: 40, scope: !3910)
!3913 = !DILocation(line: 42, column: 2, scope: !3910)
!3914 = !DILocation(line: 45, column: 10, scope: !394)
!3915 = !DILocation(line: 45, column: 16, scope: !394)
!3916 = !DILocation(line: 45, column: 41, scope: !394)
!3917 = !DILocation(line: 45, column: 8, scope: !394)
!3918 = !DILocation(line: 46, column: 26, scope: !394)
!3919 = !DILocation(line: 46, column: 9, scope: !394)
!3920 = !DILocation(line: 46, column: 2, scope: !394)
!3921 = distinct !DISubprogram(name: "k_msgq_put", scope: !3431, file: !3431, line: 1129, type: !3922, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3929)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!105, !3924, !13, !3925}
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3926)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3927)
!3927 = !{!3928}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3926, file: !108, line: 66, baseType: !107, size: 64)
!3929 = !{!3930, !3931, !3932}
!3930 = !DILocalVariable(name: "msgq", arg: 1, scope: !3921, file: !3431, line: 1129, type: !3924)
!3931 = !DILocalVariable(name: "data", arg: 2, scope: !3921, file: !3431, line: 1129, type: !13)
!3932 = !DILocalVariable(name: "timeout", arg: 3, scope: !3921, file: !3431, line: 1129, type: !3925)
!3933 = !DILocation(line: 0, scope: !3921)
!3934 = !DILocation(line: 1139, column: 2, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3921, file: !3431, line: 1139, column: 2)
!3936 = !{i64 2154753558}
!3937 = !DILocation(line: 1140, column: 9, scope: !3921)
!3938 = !DILocation(line: 1140, column: 2, scope: !3921)
!3939 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3940)
!3940 = !{!3941}
!3941 = !DILocalVariable(name: "ticks", scope: !3939, file: !360, line: 78, type: !113)
!3942 = !DILocation(line: 78, column: 19, scope: !3939)
!3943 = !DILocation(line: 78, column: 28, scope: !3939)
!3944 = !DILocation(line: 0, scope: !3939)
!3945 = !DILocation(line: 80, column: 45, scope: !3939)
!3946 = !DILocation(line: 80, column: 2, scope: !3939)
!3947 = !DILocation(line: 81, column: 1, scope: !3939)
!3948 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3459, file: !3459, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3949 = !DILocation(line: 26, column: 9, scope: !3948)
!3950 = !DILocation(line: 26, column: 2, scope: !3948)
!3951 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3952, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3955)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{null, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 32)
!3955 = !{!3956, !3957}
!3956 = !DILocalVariable(name: "m", arg: 1, scope: !3951, file: !360, line: 99, type: !3954)
!3957 = !DILocalVariable(name: "ret", scope: !3951, file: !360, line: 101, type: !105)
!3958 = !DILocation(line: 0, scope: !3951)
!3959 = !DILocation(line: 101, column: 33, scope: !3951)
!3960 = !DILocation(line: 101, column: 12, scope: !3951)
!3961 = !DILocation(line: 103, column: 2, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !360, line: 103, column: 2)
!3963 = distinct !DILexicalBlock(scope: !3951, file: !360, line: 103, column: 2)
!3964 = !DILocation(line: 103, column: 2, scope: !3963)
!3965 = !DILocation(line: 103, column: 2, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3962, file: !360, line: 103, column: 2)
!3967 = !DILocation(line: 104, column: 1, scope: !3951)
!3968 = distinct !DISubprogram(name: "k_msgq_get", scope: !3431, file: !3431, line: 1147, type: !3969, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3971)
!3969 = !DISubroutineType(types: !3970)
!3970 = !{!105, !3924, !104, !3925}
!3971 = !{!3972, !3973, !3974}
!3972 = !DILocalVariable(name: "msgq", arg: 1, scope: !3968, file: !3431, line: 1147, type: !3924)
!3973 = !DILocalVariable(name: "data", arg: 2, scope: !3968, file: !3431, line: 1147, type: !104)
!3974 = !DILocalVariable(name: "timeout", arg: 3, scope: !3968, file: !3431, line: 1147, type: !3925)
!3975 = !DILocation(line: 0, scope: !3968)
!3976 = !DILocation(line: 1157, column: 2, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3968, file: !3431, line: 1157, column: 2)
!3978 = !{i64 2154753626}
!3979 = !DILocation(line: 1158, column: 9, scope: !3968)
!3980 = !DILocation(line: 1158, column: 2, scope: !3968)
!3981 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !3982, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3991)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!105, !104, !111, !113, !269, !3984}
!3984 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3985, line: 99, baseType: !3986)
!3985 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3985, line: 40, baseType: !3987)
!3987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !3988)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3989)
!3989 = !{!3990}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3988, file: !434, line: 18, baseType: !104, size: 32)
!3991 = !{!3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4027, !4036, !4039, !4040, !4043, !4046, !4049, !4052, !4058}
!3992 = !DILocalVariable(name: "packaged", arg: 1, scope: !3981, file: !434, line: 233, type: !104)
!3993 = !DILocalVariable(name: "len", arg: 2, scope: !3981, file: !434, line: 233, type: !111)
!3994 = !DILocalVariable(name: "flags", arg: 3, scope: !3981, file: !434, line: 233, type: !113)
!3995 = !DILocalVariable(name: "fmt", arg: 4, scope: !3981, file: !434, line: 234, type: !269)
!3996 = !DILocalVariable(name: "ap", arg: 5, scope: !3981, file: !434, line: 234, type: !3984)
!3997 = !DILocalVariable(name: "buf0", scope: !3981, file: !434, line: 247, type: !432)
!3998 = !DILocalVariable(name: "buf", scope: !3981, file: !434, line: 248, type: !432)
!3999 = !DILocalVariable(name: "size", scope: !3981, file: !434, line: 249, type: !32)
!4000 = !DILocalVariable(name: "align", scope: !3981, file: !434, line: 250, type: !32)
!4001 = !DILocalVariable(name: "str_ptr_pos", scope: !3981, file: !434, line: 251, type: !4002)
!4002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!4003 = !DILocalVariable(name: "str_ptr_arg", scope: !3981, file: !434, line: 252, type: !4002)
!4004 = !DILocalVariable(name: "s_idx", scope: !3981, file: !434, line: 253, type: !32)
!4005 = !DILocalVariable(name: "s_rw_cnt", scope: !3981, file: !434, line: 254, type: !32)
!4006 = !DILocalVariable(name: "s_ro_cnt", scope: !3981, file: !434, line: 255, type: !32)
!4007 = !DILocalVariable(name: "arg_idx", scope: !3981, file: !434, line: 256, type: !105)
!4008 = !DILocalVariable(name: "i", scope: !3981, file: !434, line: 257, type: !32)
!4009 = !DILocalVariable(name: "s", scope: !3981, file: !434, line: 258, type: !269)
!4010 = !DILocalVariable(name: "parsing", scope: !3981, file: !434, line: 259, type: !492)
!4011 = !DILocalVariable(name: "rws_pos_en", scope: !3981, file: !434, line: 263, type: !492)
!4012 = !DILocalVariable(name: "fros_cnt", scope: !3981, file: !434, line: 268, type: !105)
!4013 = !DILocalVariable(name: "is_str_arg", scope: !3981, file: !434, line: 269, type: !492)
!4014 = !DILocalVariable(name: "pkg_hdr", scope: !3981, file: !434, line: 270, type: !4015)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 32)
!4016 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4017, line: 78, size: 32, elements: !4018)
!4017 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4018 = !{!4019, !4026}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4016, file: !4017, line: 80, baseType: !4020, size: 32)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4017, line: 45, size: 32, elements: !4021)
!4021 = !{!4022, !4023, !4024, !4025}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4020, file: !4017, line: 47, baseType: !169, size: 8)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4020, file: !4017, line: 50, baseType: !169, size: 8, offset: 8)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4020, file: !4017, line: 53, baseType: !169, size: 8, offset: 16)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4020, file: !4017, line: 56, baseType: !169, size: 8, offset: 24)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4016, file: !4017, line: 82, baseType: !104, size: 32)
!4027 = !DILocalVariable(name: "v", scope: !4028, file: !434, line: 567, type: !4032)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !434, line: 562, column: 14)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !434, line: 481, column: 18)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 466, column: 3)
!4031 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 343, column: 15)
!4032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3981, file: !434, line: 567, size: 64, elements: !4033)
!4033 = !{!4034, !4035}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4032, file: !434, line: 567, baseType: !426, size: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4032, file: !434, line: 567, baseType: !424, size: 64)
!4036 = !DILocalVariable(name: "is_ro", scope: !4037, file: !434, line: 620, type: !492)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 613, column: 19)
!4038 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 613, column: 7)
!4039 = !DILocalVariable(name: "do_ro", scope: !4037, file: !434, line: 621, type: !492)
!4040 = !DILocalVariable(name: "s_ptr_idx", scope: !4041, file: !434, line: 626, type: !113)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !434, line: 625, column: 11)
!4042 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 623, column: 8)
!4043 = !DILocalVariable(name: "v", scope: !4044, file: !434, line: 684, type: !105)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !434, line: 683, column: 35)
!4045 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 683, column: 14)
!4046 = !DILocalVariable(name: "v", scope: !4047, file: !434, line: 691, type: !106)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !434, line: 690, column: 36)
!4048 = distinct !DILexicalBlock(scope: !4045, file: !434, line: 690, column: 14)
!4049 = !DILocalVariable(name: "v", scope: !4050, file: !434, line: 698, type: !110)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !434, line: 697, column: 41)
!4051 = distinct !DILexicalBlock(scope: !4048, file: !434, line: 697, column: 14)
!4052 = !DILocalVariable(name: "pos", scope: !4053, file: !434, line: 762, type: !169)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !434, line: 757, column: 31)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !434, line: 757, column: 3)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !434, line: 757, column: 3)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 756, column: 16)
!4057 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 756, column: 6)
!4058 = !DILabel(scope: !4037, name: "process_string", file: !434, line: 615)
!4059 = !DILocation(line: 0, scope: !3981)
!4060 = !DILocation(line: 251, column: 2, scope: !3981)
!4061 = !DILocation(line: 251, column: 10, scope: !3981)
!4062 = !DILocation(line: 252, column: 2, scope: !3981)
!4063 = !DILocation(line: 252, column: 10, scope: !3981)
!4064 = !DILocation(line: 263, column: 29, scope: !3981)
!4065 = !DILocation(line: 263, column: 21, scope: !3981)
!4066 = !DILocation(line: 268, column: 21, scope: !3981)
!4067 = !DILocation(line: 268, column: 19, scope: !3981)
!4068 = !DILocation(line: 273, column: 6, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 273, column: 6)
!4070 = !DILocation(line: 273, column: 26, scope: !4069)
!4071 = !DILocation(line: 273, column: 6, scope: !3981)
!4072 = !DILocation(line: 297, column: 6, scope: !3981)
!4073 = !DILocation(line: 305, column: 11, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 305, column: 6)
!4075 = !DILocation(line: 305, column: 6, scope: !3981)
!4076 = !DILocation(line: 327, column: 19, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 327, column: 6)
!4078 = !DILocation(line: 327, column: 22, scope: !4077)
!4079 = !DILocation(line: 327, column: 33, scope: !4077)
!4080 = !DILocation(line: 327, column: 50, scope: !4077)
!4081 = !DILocation(line: 327, column: 6, scope: !3981)
!4082 = !DILocation(line: 338, column: 9, scope: !3981)
!4083 = !DILocation(line: 341, column: 2, scope: !3981)
!4084 = !DILocation(line: 472, column: 8, scope: !4030)
!4085 = !DILocation(line: 473, column: 14, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !434, line: 473, column: 9)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !434, line: 472, column: 18)
!4088 = distinct !DILexicalBlock(scope: !4030, file: !434, line: 472, column: 8)
!4089 = !DILocation(line: 473, column: 9, scope: !4087)
!4090 = !DILocation(line: 479, column: 5, scope: !4087)
!4091 = !DILocation(line: 468, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4030, file: !434, line: 468, column: 8)
!4093 = !DILocation(line: 468, column: 8, scope: !4092)
!4094 = !DILocation(line: 468, column: 15, scope: !4092)
!4095 = !DILocation(line: 468, column: 8, scope: !4030)
!4096 = distinct !{!4096, !4097, !4098}
!4097 = !DILocation(line: 343, column: 2, scope: !3981)
!4098 = !DILocation(line: 712, column: 2, scope: !3981)
!4099 = !DILocation(line: 481, column: 4, scope: !4030)
!4100 = !DILocation(line: 484, column: 12, scope: !4029)
!4101 = !DILocation(line: 485, column: 5, scope: !4029)
!4102 = !DILocation(line: 505, column: 5, scope: !4029)
!4103 = !DILocation(line: 518, column: 5, scope: !4029)
!4104 = !DILocation(line: 523, column: 5, scope: !4029)
!4105 = !DILocation(line: 532, column: 9, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4029, file: !434, line: 532, column: 9)
!4107 = !DILocation(line: 532, column: 17, scope: !4106)
!4108 = !DILocation(line: 532, column: 9, scope: !4029)
!4109 = !DILocation(line: 533, column: 10, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !434, line: 533, column: 10)
!4111 = distinct !DILexicalBlock(scope: !4106, file: !434, line: 532, column: 25)
!4112 = !DILocation(line: 533, column: 18, scope: !4110)
!4113 = !DILocation(line: 0, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 569, column: 9)
!4115 = !DILocation(line: 0, scope: !4028)
!4116 = !DILocation(line: 579, column: 20, scope: !4028)
!4117 = !DILocation(line: 579, column: 11, scope: !4028)
!4118 = !DILocation(line: 580, column: 9, scope: !4028)
!4119 = !DILocation(line: 582, column: 21, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4121, file: !434, line: 582, column: 10)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !434, line: 580, column: 23)
!4122 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 580, column: 9)
!4123 = !DILocation(line: 582, column: 28, scope: !4120)
!4124 = !DILocation(line: 582, column: 10, scope: !4121)
!4125 = !DILocation(line: 0, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !434, line: 587, column: 17)
!4127 = distinct !DILexicalBlock(scope: !4121, file: !434, line: 585, column: 10)
!4128 = !DILocation(line: 593, column: 9, scope: !4028)
!4129 = !DILocation(line: 600, column: 5, scope: !4029)
!4130 = !DILocation(line: 605, column: 18, scope: !4031)
!4131 = !DILocation(line: 605, column: 9, scope: !4031)
!4132 = !DILocation(line: 608, column: 20, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 608, column: 7)
!4134 = !DILocation(line: 608, column: 23, scope: !4133)
!4135 = !DILocation(line: 608, column: 34, scope: !4133)
!4136 = !DILocation(line: 608, column: 41, scope: !4133)
!4137 = !DILocation(line: 608, column: 7, scope: !4031)
!4138 = !DILocation(line: 613, column: 7, scope: !4031)
!4139 = !DILocation(line: 614, column: 8, scope: !4037)
!4140 = !DILocation(line: 614, column: 4, scope: !4037)
!4141 = !DILocation(line: 256, column: 6, scope: !3981)
!4142 = !DILocation(line: 254, column: 15, scope: !3981)
!4143 = !DILocation(line: 320, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4074, file: !434, line: 305, column: 20)
!4145 = !DILocation(line: 615, column: 1, scope: !4037)
!4146 = !DILocation(line: 616, column: 8, scope: !4037)
!4147 = !DILocation(line: 617, column: 5, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !434, line: 616, column: 22)
!4149 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 616, column: 8)
!4150 = !DILocation(line: 617, column: 25, scope: !4148)
!4151 = !DILocation(line: 618, column: 4, scope: !4148)
!4152 = !DILocation(line: 620, column: 26, scope: !4037)
!4153 = !DILocation(line: 620, column: 29, scope: !4037)
!4154 = !DILocation(line: 620, column: 17, scope: !4037)
!4155 = !DILocation(line: 620, column: 43, scope: !4037)
!4156 = !DILocation(line: 0, scope: !4037)
!4157 = !DILocation(line: 623, column: 14, scope: !4042)
!4158 = !DILocation(line: 626, column: 26, scope: !4041)
!4159 = !DILocation(line: 626, column: 37, scope: !4041)
!4160 = !DILocation(line: 0, scope: !4041)
!4161 = !DILocation(line: 634, column: 15, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4041, file: !434, line: 634, column: 9)
!4163 = !DILocation(line: 635, column: 6, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !434, line: 635, column: 6)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !434, line: 635, column: 6)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !434, line: 635, column: 6)
!4167 = distinct !DILexicalBlock(scope: !4162, file: !434, line: 634, column: 44)
!4168 = !DILocation(line: 639, column: 15, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4041, file: !434, line: 639, column: 9)
!4170 = !DILocation(line: 639, column: 9, scope: !4041)
!4171 = !DILocation(line: 640, column: 6, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !434, line: 640, column: 6)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !434, line: 640, column: 6)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !434, line: 640, column: 6)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !434, line: 639, column: 43)
!4176 = !DILocation(line: 644, column: 9, scope: !4041)
!4177 = !DILocation(line: 649, column: 27, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !434, line: 644, column: 23)
!4179 = distinct !DILexicalBlock(scope: !4041, file: !434, line: 644, column: 9)
!4180 = !DILocation(line: 649, column: 6, scope: !4178)
!4181 = !DILocation(line: 649, column: 25, scope: !4178)
!4182 = !DILocation(line: 650, column: 27, scope: !4178)
!4183 = !DILocation(line: 650, column: 6, scope: !4178)
!4184 = !DILocation(line: 650, column: 25, scope: !4178)
!4185 = !DILocation(line: 651, column: 10, scope: !4178)
!4186 = !DILocation(line: 653, column: 26, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !434, line: 651, column: 17)
!4188 = distinct !DILexicalBlock(scope: !4178, file: !434, line: 651, column: 10)
!4189 = !DILocation(line: 654, column: 15, scope: !4187)
!4190 = !DILocation(line: 655, column: 6, scope: !4187)
!4191 = !DILocation(line: 656, column: 15, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4188, file: !434, line: 655, column: 13)
!4193 = !DILocation(line: 658, column: 16, scope: !4179)
!4194 = !DILocation(line: 663, column: 10, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !434, line: 658, column: 23)
!4196 = distinct !DILexicalBlock(scope: !4179, file: !434, line: 658, column: 16)
!4197 = !DILocation(line: 664, column: 5, scope: !4195)
!4198 = !DILocation(line: 664, column: 16, scope: !4196)
!4199 = !DILocation(line: 669, column: 10, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !434, line: 664, column: 28)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !434, line: 664, column: 16)
!4202 = !DILocation(line: 670, column: 5, scope: !4200)
!4203 = !DILocation(line: 675, column: 13, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4201, file: !434, line: 670, column: 12)
!4205 = !DILocation(line: 675, column: 27, scope: !4204)
!4206 = !DILocation(line: 675, column: 10, scope: !4204)
!4207 = !DILocation(line: 678, column: 10, scope: !4041)
!4208 = !DILocation(line: 680, column: 8, scope: !4037)
!4209 = !DILocation(line: 683, column: 14, scope: !4038)
!4210 = !DILocation(line: 684, column: 12, scope: !4044)
!4211 = !DILocation(line: 0, scope: !4044)
!4212 = !DILocation(line: 686, column: 8, scope: !4044)
!4213 = !DILocation(line: 687, column: 5, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 686, column: 22)
!4215 = distinct !DILexicalBlock(scope: !4044, file: !434, line: 686, column: 8)
!4216 = !DILocation(line: 687, column: 17, scope: !4214)
!4217 = !DILocation(line: 688, column: 4, scope: !4214)
!4218 = !DILocation(line: 698, column: 18, scope: !4050)
!4219 = !DILocation(line: 0, scope: !4050)
!4220 = !DILocation(line: 700, column: 8, scope: !4050)
!4221 = !DILocation(line: 704, column: 6, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !434, line: 703, column: 12)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !434, line: 701, column: 9)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !434, line: 700, column: 22)
!4225 = distinct !DILexicalBlock(scope: !4050, file: !434, line: 700, column: 8)
!4226 = !DILocation(line: 704, column: 24, scope: !4222)
!4227 = !DILocation(line: 706, column: 4, scope: !4224)
!4228 = !DILocation(line: 709, column: 4, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4230, file: !434, line: 709, column: 4)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !434, line: 709, column: 4)
!4231 = distinct !DILexicalBlock(scope: !4232, file: !434, line: 709, column: 4)
!4232 = distinct !DILexicalBlock(scope: !4051, file: !434, line: 708, column: 10)
!4233 = !DILocation(line: 0, scope: !4045)
!4234 = !DILocation(line: 0, scope: !4031)
!4235 = !DILocation(line: 720, column: 6, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 720, column: 6)
!4237 = !DILocation(line: 720, column: 17, scope: !4236)
!4238 = !DILocation(line: 720, column: 31, scope: !4236)
!4239 = !DILocation(line: 720, column: 6, scope: !3981)
!4240 = !DILocation(line: 721, column: 3, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !434, line: 721, column: 3)
!4242 = distinct !DILexicalBlock(scope: !4243, file: !434, line: 721, column: 3)
!4243 = distinct !DILexicalBlock(scope: !4244, file: !434, line: 721, column: 3)
!4244 = distinct !DILexicalBlock(scope: !4236, file: !434, line: 720, column: 38)
!4245 = !DILocation(line: 729, column: 6, scope: !3981)
!4246 = !DILocation(line: 730, column: 21, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4248, file: !434, line: 729, column: 20)
!4248 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 729, column: 6)
!4249 = !DILocation(line: 730, column: 27, scope: !4247)
!4250 = !DILocation(line: 730, column: 3, scope: !4247)
!4251 = !DILocation(line: 737, column: 22, scope: !3981)
!4252 = !DILocation(line: 737, column: 20, scope: !3981)
!4253 = !DILocation(line: 0, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 739, column: 6)
!4255 = !DILocation(line: 745, column: 17, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4254, file: !434, line: 743, column: 9)
!4257 = !DILocation(line: 745, column: 25, scope: !4256)
!4258 = !DILocation(line: 746, column: 17, scope: !4256)
!4259 = !DILocation(line: 746, column: 28, scope: !4256)
!4260 = !DILocation(line: 749, column: 29, scope: !3981)
!4261 = !DILocation(line: 749, column: 16, scope: !3981)
!4262 = !DILocation(line: 749, column: 27, scope: !3981)
!4263 = !DILocation(line: 756, column: 6, scope: !4057)
!4264 = !DILocation(line: 756, column: 6, scope: !3981)
!4265 = !DILocation(line: 757, column: 3, scope: !4055)
!4266 = !DILocation(line: 758, column: 10, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4053, file: !434, line: 758, column: 8)
!4268 = !DILocation(line: 758, column: 25, scope: !4267)
!4269 = !DILocation(line: 758, column: 8, scope: !4053)
!4270 = !DILocation(line: 0, scope: !4053)
!4271 = !DILocation(line: 765, column: 8, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4053, file: !434, line: 765, column: 8)
!4273 = !DILocation(line: 765, column: 19, scope: !4272)
!4274 = !DILocation(line: 765, column: 23, scope: !4272)
!4275 = !DILocation(line: 765, column: 8, scope: !4053)
!4276 = !DILocation(line: 762, column: 33, scope: !4053)
!4277 = !DILocation(line: 769, column: 8, scope: !4053)
!4278 = !DILocation(line: 769, column: 11, scope: !4053)
!4279 = !DILocation(line: 757, column: 27, scope: !4054)
!4280 = !DILocation(line: 757, column: 17, scope: !4054)
!4281 = distinct !{!4281, !4265, !4282}
!4282 = !DILocation(line: 770, column: 3, scope: !4055)
!4283 = !DILocation(line: 774, column: 16, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !434, line: 774, column: 2)
!4285 = distinct !DILexicalBlock(scope: !3981, file: !434, line: 774, column: 2)
!4286 = !DILocation(line: 774, column: 2, scope: !4285)
!4287 = !DILocation(line: 776, column: 16, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !434, line: 776, column: 7)
!4289 = distinct !DILexicalBlock(scope: !4284, file: !434, line: 774, column: 30)
!4290 = !DILocation(line: 776, column: 19, scope: !4288)
!4291 = !DILocation(line: 776, column: 34, scope: !4288)
!4292 = !DILocation(line: 776, column: 7, scope: !4289)
!4293 = !DILocation(line: 780, column: 7, scope: !4289)
!4294 = !DILocation(line: 782, column: 13, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 780, column: 19)
!4296 = distinct !DILexicalBlock(scope: !4289, file: !434, line: 780, column: 7)
!4297 = !DILocation(line: 782, column: 8, scope: !4295)
!4298 = !DILocation(line: 782, column: 11, scope: !4295)
!4299 = !DILocation(line: 783, column: 3, scope: !4295)
!4300 = !DILocation(line: 785, column: 26, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4296, file: !434, line: 783, column: 10)
!4302 = !DILocation(line: 785, column: 41, scope: !4301)
!4303 = !DILocation(line: 785, column: 24, scope: !4301)
!4304 = !DILocation(line: 785, column: 8, scope: !4301)
!4305 = !DILocation(line: 787, column: 52, scope: !4301)
!4306 = !DILocation(line: 789, column: 11, scope: !4301)
!4307 = !DILocation(line: 789, column: 21, scope: !4301)
!4308 = !DILocation(line: 0, scope: !4296)
!4309 = !DILocation(line: 793, column: 7, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4289, file: !434, line: 793, column: 7)
!4311 = !DILocation(line: 793, column: 18, scope: !4310)
!4312 = !DILocation(line: 793, column: 22, scope: !4310)
!4313 = !DILocation(line: 793, column: 29, scope: !4310)
!4314 = !DILocation(line: 793, column: 7, scope: !4289)
!4315 = !DILocation(line: 797, column: 12, scope: !4289)
!4316 = !DILocation(line: 797, column: 7, scope: !4289)
!4317 = !DILocation(line: 797, column: 10, scope: !4289)
!4318 = !DILocation(line: 799, column: 3, scope: !4289)
!4319 = !DILocation(line: 800, column: 7, scope: !4289)
!4320 = !DILocation(line: 801, column: 2, scope: !4289)
!4321 = !DILocation(line: 338, column: 4, scope: !3981)
!4322 = !DILocation(line: 774, column: 26, scope: !4284)
!4323 = distinct !{!4323, !4286, !4324}
!4324 = !DILocation(line: 801, column: 2, scope: !4285)
!4325 = !DILocation(line: 808, column: 9, scope: !3981)
!4326 = !DILocation(line: 808, column: 2, scope: !3981)
!4327 = !DILocation(line: 813, column: 1, scope: !3981)
!4328 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4329, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4331)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!492, !269}
!4331 = !{!4332}
!4332 = !DILocalVariable(name: "addr", arg: 1, scope: !4328, file: !434, line: 33, type: !269)
!4333 = !DILocation(line: 0, scope: !4328)
!4334 = !DILocation(line: 41, column: 9, scope: !4328)
!4335 = !DILocation(line: 41, column: 2, scope: !4328)
!4336 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4337, file: !4337, line: 24, type: !4338, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4340)
!4337 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!492, !13}
!4340 = !{!4341}
!4341 = !DILocalVariable(name: "addr", arg: 1, scope: !4336, file: !4337, line: 24, type: !13)
!4342 = !DILocation(line: 0, scope: !4336)
!4343 = !DILocation(line: 49, column: 30, scope: !4336)
!4344 = !DILocation(line: 49, column: 57, scope: !4336)
!4345 = !DILocation(line: 49, column: 2, scope: !4336)
!4346 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4347, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!105, !104, !111, !113, !269, null}
!4349 = !{!4350, !4351, !4352, !4353, !4354, !4355}
!4350 = !DILocalVariable(name: "packaged", arg: 1, scope: !4346, file: !434, line: 815, type: !104)
!4351 = !DILocalVariable(name: "len", arg: 2, scope: !4346, file: !434, line: 815, type: !111)
!4352 = !DILocalVariable(name: "flags", arg: 3, scope: !4346, file: !434, line: 815, type: !113)
!4353 = !DILocalVariable(name: "format", arg: 4, scope: !4346, file: !434, line: 816, type: !269)
!4354 = !DILocalVariable(name: "ap", scope: !4346, file: !434, line: 818, type: !3984)
!4355 = !DILocalVariable(name: "ret", scope: !4346, file: !434, line: 819, type: !105)
!4356 = !DILocation(line: 0, scope: !4346)
!4357 = !DILocation(line: 818, column: 2, scope: !4346)
!4358 = !DILocation(line: 818, column: 10, scope: !4346)
!4359 = !DILocation(line: 821, column: 2, scope: !4346)
!4360 = !DILocation(line: 822, column: 8, scope: !4346)
!4361 = !DILocation(line: 823, column: 2, scope: !4346)
!4362 = !DILocation(line: 825, column: 1, scope: !4346)
!4363 = !DILocation(line: 824, column: 2, scope: !4346)
!4364 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4365, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4375)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!105, !4367, !4371, !104, !104}
!4367 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4017, line: 297, baseType: !4368)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 32)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!105, null}
!4371 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4017, line: 328, baseType: !4372)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 32)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!105, !4367, !104, !269, !3984}
!4375 = !{!4376, !4377, !4378, !4379, !4380, !4381, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394}
!4376 = !DILocalVariable(name: "out", arg: 1, scope: !4364, file: !434, line: 827, type: !4367)
!4377 = !DILocalVariable(name: "formatter", arg: 2, scope: !4364, file: !434, line: 828, type: !4371)
!4378 = !DILocalVariable(name: "ctx", arg: 3, scope: !4364, file: !434, line: 829, type: !104)
!4379 = !DILocalVariable(name: "packaged", arg: 4, scope: !4364, file: !434, line: 829, type: !104)
!4380 = !DILocalVariable(name: "buf", scope: !4364, file: !434, line: 831, type: !432)
!4381 = !DILocalVariable(name: "hdr", scope: !4364, file: !434, line: 832, type: !4382)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 32)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4017, line: 96, size: 64, elements: !4384)
!4384 = !{!4385, !4386}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4383, file: !4017, line: 98, baseType: !4016, size: 32)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4383, file: !4017, line: 101, baseType: !102, size: 32, offset: 32)
!4387 = !DILocalVariable(name: "s", scope: !4364, file: !434, line: 833, type: !102)
!4388 = !DILocalVariable(name: "ps", scope: !4364, file: !434, line: 833, type: !431)
!4389 = !DILocalVariable(name: "i", scope: !4364, file: !434, line: 834, type: !32)
!4390 = !DILocalVariable(name: "args_size", scope: !4364, file: !434, line: 834, type: !32)
!4391 = !DILocalVariable(name: "s_nbr", scope: !4364, file: !434, line: 834, type: !32)
!4392 = !DILocalVariable(name: "ros_nbr", scope: !4364, file: !434, line: 834, type: !32)
!4393 = !DILocalVariable(name: "rws_nbr", scope: !4364, file: !434, line: 834, type: !32)
!4394 = !DILocalVariable(name: "s_idx", scope: !4364, file: !434, line: 834, type: !32)
!4395 = !DILocation(line: 0, scope: !4364)
!4396 = !DILocation(line: 836, column: 10, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4364, file: !434, line: 836, column: 6)
!4398 = !DILocation(line: 836, column: 6, scope: !4364)
!4399 = !DILocation(line: 842, column: 28, scope: !4364)
!4400 = !DILocation(line: 842, column: 14, scope: !4364)
!4401 = !DILocation(line: 852, column: 16, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !434, line: 852, column: 2)
!4403 = distinct !DILexicalBlock(scope: !4364, file: !434, line: 852, column: 2)
!4404 = !DILocation(line: 852, column: 2, scope: !4403)
!4405 = !DILocation(line: 841, column: 28, scope: !4364)
!4406 = !DILocation(line: 841, column: 14, scope: !4364)
!4407 = !DILocation(line: 841, column: 32, scope: !4364)
!4408 = !DILocation(line: 847, column: 19, scope: !4364)
!4409 = !DILocation(line: 843, column: 28, scope: !4364)
!4410 = !DILocation(line: 843, column: 14, scope: !4364)
!4411 = !DILocation(line: 847, column: 31, scope: !4364)
!4412 = !DILocation(line: 844, column: 28, scope: !4364)
!4413 = !DILocation(line: 844, column: 14, scope: !4364)
!4414 = !DILocation(line: 847, column: 45, scope: !4364)
!4415 = !DILocation(line: 847, column: 41, scope: !4364)
!4416 = !DILocation(line: 854, column: 24, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4402, file: !434, line: 852, column: 30)
!4418 = !DILocation(line: 854, column: 11, scope: !4417)
!4419 = !DILocation(line: 855, column: 30, scope: !4417)
!4420 = !DILocation(line: 855, column: 22, scope: !4417)
!4421 = !DILocation(line: 855, column: 8, scope: !4417)
!4422 = !DILocation(line: 857, column: 7, scope: !4417)
!4423 = !DILocation(line: 859, column: 8, scope: !4417)
!4424 = !DILocation(line: 859, column: 18, scope: !4417)
!4425 = !DILocation(line: 859, column: 5, scope: !4417)
!4426 = !DILocation(line: 852, column: 26, scope: !4402)
!4427 = distinct !{!4427, !4404, !4428}
!4428 = !DILocation(line: 860, column: 2, scope: !4403)
!4429 = !DILocation(line: 863, column: 6, scope: !4364)
!4430 = !DILocation(line: 866, column: 56, scope: !4364)
!4431 = !DILocation(line: 866, column: 9, scope: !4364)
!4432 = !DILocation(line: 866, column: 2, scope: !4364)
!4433 = !DILocation(line: 867, column: 1, scope: !4364)
!4434 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4435, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4437)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!105, !4367, !4371, !104, !269, !104}
!4437 = !{!4438, !4439, !4440, !4441, !4442, !4443}
!4438 = !DILocalVariable(name: "out", arg: 1, scope: !4434, file: !434, line: 179, type: !4367)
!4439 = !DILocalVariable(name: "formatter", arg: 2, scope: !4434, file: !434, line: 180, type: !4371)
!4440 = !DILocalVariable(name: "ctx", arg: 3, scope: !4434, file: !434, line: 181, type: !104)
!4441 = !DILocalVariable(name: "fmt", arg: 4, scope: !4434, file: !434, line: 182, type: !269)
!4442 = !DILocalVariable(name: "buf", arg: 5, scope: !4434, file: !434, line: 182, type: !104)
!4443 = !DILocalVariable(name: "u", scope: !4434, file: !434, line: 187, type: !4444)
!4444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4434, file: !434, line: 184, size: 32, elements: !4445)
!4445 = !{!4446, !4447}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4444, file: !434, line: 185, baseType: !3984, size: 32)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4444, file: !434, line: 186, baseType: !104, size: 32)
!4448 = !DILocation(line: 0, scope: !4434)
!4449 = !DILocation(line: 191, column: 9, scope: !4434)
!4450 = !DILocation(line: 191, column: 2, scope: !4434)
!4451 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4452, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4454)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!492, !269, !105}
!4454 = !{!4455, !4456, !4457, !4458, !4459}
!4455 = !DILocalVariable(name: "fmt", arg: 1, scope: !4451, file: !434, line: 881, type: !269)
!4456 = !DILocalVariable(name: "n", arg: 2, scope: !4451, file: !434, line: 881, type: !105)
!4457 = !DILocalVariable(name: "c", scope: !4451, file: !434, line: 883, type: !103)
!4458 = !DILocalVariable(name: "mod", scope: !4451, file: !434, line: 884, type: !492)
!4459 = !DILocalVariable(name: "cnt", scope: !4451, file: !434, line: 885, type: !105)
!4460 = !DILocation(line: 0, scope: !4451)
!4461 = !DILocation(line: 887, column: 14, scope: !4451)
!4462 = !DILocation(line: 887, column: 22, scope: !4451)
!4463 = !DILocation(line: 887, column: 2, scope: !4451)
!4464 = !DILocation(line: 887, column: 18, scope: !4451)
!4465 = !DILocation(line: 888, column: 7, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4451, file: !434, line: 887, column: 31)
!4467 = !DILocation(line: 889, column: 12, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !434, line: 889, column: 8)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !434, line: 888, column: 12)
!4470 = distinct !DILexicalBlock(scope: !4466, file: !434, line: 888, column: 7)
!4471 = !DILocation(line: 889, column: 8, scope: !4469)
!4472 = !DILocation(line: 890, column: 11, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !434, line: 890, column: 9)
!4474 = distinct !DILexicalBlock(scope: !4468, file: !434, line: 889, column: 18)
!4475 = !DILocation(line: 890, column: 9, scope: !4474)
!4476 = !DILocation(line: 892, column: 16, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !434, line: 892, column: 16)
!4478 = !DILocation(line: 892, column: 16, scope: !4473)
!4479 = !DILocation(line: 895, column: 15, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4468, file: !434, line: 895, column: 15)
!4481 = !DILocation(line: 895, column: 15, scope: !4468)
!4482 = !DILocation(line: 900, column: 9, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4466, file: !434, line: 900, column: 7)
!4484 = !DILocation(line: 900, column: 7, scope: !4466)
!4485 = distinct !{!4485, !4463, !4486}
!4486 = !DILocation(line: 903, column: 2, scope: !4451)
!4487 = !DILocation(line: 906, column: 1, scope: !4451)
!4488 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4489, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4491)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!492, !103}
!4491 = !{!4492}
!4492 = !DILocalVariable(name: "c", arg: 1, scope: !4488, file: !434, line: 873, type: !103)
!4493 = !DILocation(line: 0, scope: !4488)
!4494 = !DILocation(line: 875, column: 19, scope: !4488)
!4495 = !DILocation(line: 875, column: 2, scope: !4488)
!4496 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4497, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4503)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!105, !104, !111, !4499, !104, !113, !2601, !111}
!4499 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4017, line: 308, baseType: !4500)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 32)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!105, !13, !111, !104}
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4521, !4522, !4523, !4524, !4525, !4531, !4534, !4535, !4536, !4538, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4554, !4557, !4558, !4559, !4560, !4561, !4562, !4564, !4567, !4568, !4569}
!4504 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4496, file: !434, line: 908, type: !104)
!4505 = !DILocalVariable(name: "in_len", arg: 2, scope: !4496, file: !434, line: 909, type: !111)
!4506 = !DILocalVariable(name: "cb", arg: 3, scope: !4496, file: !434, line: 910, type: !4499)
!4507 = !DILocalVariable(name: "ctx", arg: 4, scope: !4496, file: !434, line: 911, type: !104)
!4508 = !DILocalVariable(name: "flags", arg: 5, scope: !4496, file: !434, line: 912, type: !113)
!4509 = !DILocalVariable(name: "strl", arg: 6, scope: !4496, file: !434, line: 913, type: !2601)
!4510 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4496, file: !434, line: 914, type: !111)
!4511 = !DILocalVariable(name: "buf", scope: !4496, file: !434, line: 918, type: !432)
!4512 = !DILocalVariable(name: "buf32", scope: !4496, file: !434, line: 919, type: !1025)
!4513 = !DILocalVariable(name: "args_size", scope: !4496, file: !434, line: 920, type: !32)
!4514 = !DILocalVariable(name: "ros_nbr", scope: !4496, file: !434, line: 920, type: !32)
!4515 = !DILocalVariable(name: "rws_nbr", scope: !4496, file: !434, line: 920, type: !32)
!4516 = !DILocalVariable(name: "fmt_present", scope: !4496, file: !434, line: 921, type: !492)
!4517 = !DILocalVariable(name: "rw_cpy", scope: !4496, file: !434, line: 922, type: !492)
!4518 = !DILocalVariable(name: "ro_cpy", scope: !4496, file: !434, line: 923, type: !492)
!4519 = !DILocalVariable(name: "in_desc", scope: !4496, file: !434, line: 924, type: !4520)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 32)
!4521 = !DILocalVariable(name: "out_len", scope: !4496, file: !434, line: 960, type: !105)
!4522 = !DILocalVariable(name: "fmt", scope: !4496, file: !434, line: 965, type: !269)
!4523 = !DILocalVariable(name: "str_pos", scope: !4496, file: !434, line: 966, type: !432)
!4524 = !DILocalVariable(name: "strl_cnt", scope: !4496, file: !434, line: 967, type: !111)
!4525 = !DILocalVariable(name: "i", scope: !4526, file: !434, line: 973, type: !105)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !434, line: 973, column: 4)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !434, line: 972, column: 15)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !434, line: 972, column: 7)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !434, line: 970, column: 18)
!4530 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 970, column: 6)
!4531 = !DILocalVariable(name: "str", scope: !4532, file: !434, line: 974, type: !269)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !434, line: 973, column: 38)
!4533 = distinct !DILexicalBlock(scope: !4526, file: !434, line: 973, column: 4)
!4534 = !DILocalVariable(name: "len", scope: !4532, file: !434, line: 975, type: !105)
!4535 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4529, file: !434, line: 990, type: !492)
!4536 = !DILocalVariable(name: "i", scope: !4537, file: !434, line: 995, type: !105)
!4537 = distinct !DILexicalBlock(scope: !4529, file: !434, line: 995, column: 3)
!4538 = !DILocalVariable(name: "arg_idx", scope: !4539, file: !434, line: 996, type: !169)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !434, line: 995, column: 37)
!4540 = distinct !DILexicalBlock(scope: !4537, file: !434, line: 995, column: 3)
!4541 = !DILocalVariable(name: "arg_pos", scope: !4539, file: !434, line: 997, type: !169)
!4542 = !DILocalVariable(name: "str", scope: !4539, file: !434, line: 998, type: !269)
!4543 = !DILocalVariable(name: "is_ro", scope: !4539, file: !434, line: 999, type: !492)
!4544 = !DILocalVariable(name: "len", scope: !4539, file: !434, line: 1000, type: !105)
!4545 = !DILocalVariable(name: "out_desc", scope: !4496, file: !434, line: 1038, type: !4020)
!4546 = !DILocalVariable(name: "cpy_str_pos", scope: !4496, file: !434, line: 1040, type: !4002)
!4547 = !DILocalVariable(name: "keep_str_pos", scope: !4496, file: !434, line: 1042, type: !4002)
!4548 = !DILocalVariable(name: "scpy_cnt", scope: !4496, file: !434, line: 1043, type: !169)
!4549 = !DILocalVariable(name: "keep_cnt", scope: !4496, file: !434, line: 1044, type: !169)
!4550 = !DILocalVariable(name: "dst", scope: !4496, file: !434, line: 1045, type: !432)
!4551 = !DILocalVariable(name: "rv", scope: !4496, file: !434, line: 1046, type: !105)
!4552 = !DILocalVariable(name: "i", scope: !4553, file: !434, line: 1074, type: !105)
!4553 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1074, column: 2)
!4554 = !DILocalVariable(name: "arg_idx", scope: !4555, file: !434, line: 1075, type: !169)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !434, line: 1074, column: 36)
!4556 = distinct !DILexicalBlock(scope: !4553, file: !434, line: 1074, column: 2)
!4557 = !DILocalVariable(name: "arg_pos", scope: !4555, file: !434, line: 1076, type: !169)
!4558 = !DILocalVariable(name: "str", scope: !4555, file: !434, line: 1077, type: !269)
!4559 = !DILocalVariable(name: "is_ro", scope: !4555, file: !434, line: 1078, type: !492)
!4560 = !DILocalVariable(name: "in_desc_backup", scope: !4496, file: !434, line: 1114, type: !4020)
!4561 = !DILocalVariable(name: "strs_len", scope: !4496, file: !434, line: 1134, type: !111)
!4562 = !DILocalVariable(name: "i", scope: !4563, file: !434, line: 1143, type: !105)
!4563 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1143, column: 2)
!4564 = !DILocalVariable(name: "loc", scope: !4565, file: !434, line: 1144, type: !169)
!4565 = distinct !DILexicalBlock(scope: !4566, file: !434, line: 1143, column: 37)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !434, line: 1143, column: 2)
!4567 = !DILocalVariable(name: "str", scope: !4565, file: !434, line: 1145, type: !269)
!4568 = !DILocalVariable(name: "str_len", scope: !4565, file: !434, line: 1146, type: !183)
!4569 = !DILabel(scope: !4570, name: "calculate_string_length", file: !434, line: 1021)
!4570 = distinct !DILexicalBlock(scope: !4571, file: !434, line: 1020, column: 56)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !434, line: 1020, column: 15)
!4572 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 1014, column: 8)
!4573 = !DILocation(line: 0, scope: !4496)
!4574 = !DILocation(line: 916, column: 2, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !434, line: 916, column: 2)
!4576 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 916, column: 2)
!4577 = !DILocation(line: 916, column: 2, scope: !4576)
!4578 = !DILocation(line: 916, column: 2, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4575, file: !434, line: 916, column: 2)
!4580 = !DILocation(line: 919, column: 20, scope: !4496)
!4581 = !DILocation(line: 921, column: 27, scope: !4496)
!4582 = !DILocation(line: 921, column: 21, scope: !4496)
!4583 = !DILocation(line: 926, column: 18, scope: !4496)
!4584 = !DILocation(line: 926, column: 11, scope: !4496)
!4585 = !DILocation(line: 926, column: 34, scope: !4496)
!4586 = !DILocation(line: 931, column: 21, scope: !4496)
!4587 = !DILocation(line: 931, column: 12, scope: !4496)
!4588 = !DILocation(line: 932, column: 11, scope: !4496)
!4589 = !DILocation(line: 932, column: 19, scope: !4496)
!4590 = !DILocation(line: 938, column: 21, scope: !4496)
!4591 = !DILocation(line: 938, column: 12, scope: !4496)
!4592 = !DILocation(line: 939, column: 19, scope: !4496)
!4593 = !DILocation(line: 939, column: 23, scope: !4496)
!4594 = !DILocation(line: 946, column: 14, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 946, column: 6)
!4596 = !DILocation(line: 947, column: 7, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !434, line: 947, column: 7)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !434, line: 946, column: 26)
!4599 = !DILocation(line: 947, column: 7, scope: !4598)
!4600 = !DILocation(line: 948, column: 4, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4597, file: !434, line: 947, column: 11)
!4602 = !DILocation(line: 949, column: 3, scope: !4601)
!4603 = !DILocation(line: 958, column: 23, scope: !4496)
!4604 = !DILocation(line: 958, column: 14, scope: !4496)
!4605 = !DILocation(line: 958, column: 27, scope: !4496)
!4606 = !DILocation(line: 965, column: 41, scope: !4496)
!4607 = !DILocation(line: 965, column: 20, scope: !4496)
!4608 = !DILocation(line: 966, column: 22, scope: !4496)
!4609 = !DILocation(line: 970, column: 9, scope: !4530)
!4610 = !DILocation(line: 970, column: 6, scope: !4496)
!4611 = !DILocation(line: 972, column: 7, scope: !4529)
!4612 = !DILocation(line: 0, scope: !4526)
!4613 = !DILocation(line: 973, column: 4, scope: !4526)
!4614 = !DILocation(line: 974, column: 46, scope: !4532)
!4615 = !DILocation(line: 974, column: 40, scope: !4532)
!4616 = !DILocation(line: 974, column: 23, scope: !4532)
!4617 = !DILocation(line: 0, scope: !4532)
!4618 = !DILocation(line: 975, column: 15, scope: !4532)
!4619 = !DILocation(line: 978, column: 14, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4532, file: !434, line: 978, column: 9)
!4621 = !DILocation(line: 979, column: 25, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4620, file: !434, line: 978, column: 38)
!4623 = !DILocation(line: 979, column: 19, scope: !4622)
!4624 = !DILocation(line: 979, column: 6, scope: !4622)
!4625 = !DILocation(line: 979, column: 23, scope: !4622)
!4626 = !DILocation(line: 980, column: 5, scope: !4622)
!4627 = !DILocation(line: 981, column: 13, scope: !4532)
!4628 = !DILocation(line: 982, column: 12, scope: !4532)
!4629 = !DILocation(line: 973, column: 34, scope: !4533)
!4630 = !DILocation(line: 973, column: 22, scope: !4533)
!4631 = distinct !{!4631, !4613, !4632}
!4632 = !DILocation(line: 983, column: 4, scope: !4526)
!4633 = !DILocation(line: 985, column: 16, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !434, line: 985, column: 8)
!4635 = distinct !DILexicalBlock(scope: !4528, file: !434, line: 984, column: 10)
!4636 = !DILocation(line: 967, column: 9, scope: !4496)
!4637 = !DILocation(line: 971, column: 11, scope: !4529)
!4638 = !DILocation(line: 0, scope: !4529)
!4639 = !DILocation(line: 0, scope: !4537)
!4640 = !DILocation(line: 995, column: 21, scope: !4540)
!4641 = !DILocation(line: 995, column: 3, scope: !4537)
!4642 = !DILocation(line: 990, column: 34, scope: !4529)
!4643 = !DILocation(line: 990, column: 26, scope: !4529)
!4644 = !DILocation(line: 996, column: 30, scope: !4539)
!4645 = !DILocation(line: 0, scope: !4539)
!4646 = !DILocation(line: 997, column: 30, scope: !4539)
!4647 = !DILocation(line: 997, column: 22, scope: !4539)
!4648 = !DILocation(line: 998, column: 39, scope: !4539)
!4649 = !DILocation(line: 998, column: 22, scope: !4539)
!4650 = !DILocation(line: 999, column: 17, scope: !4539)
!4651 = !DILocation(line: 1002, column: 20, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 1002, column: 8)
!4653 = !DILocation(line: 996, column: 22, scope: !4539)
!4654 = !DILocation(line: 1002, column: 35, scope: !4652)
!4655 = !DILocation(line: 1002, column: 23, scope: !4652)
!4656 = !DILocation(line: 1002, column: 8, scope: !4539)
!4657 = !DILocation(line: 1003, column: 5, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !434, line: 1003, column: 5)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !434, line: 1003, column: 5)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !434, line: 1003, column: 5)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !434, line: 1003, column: 5)
!4662 = distinct !DILexicalBlock(scope: !4652, file: !434, line: 1002, column: 45)
!4663 = !DILocation(line: 1010, column: 13, scope: !4662)
!4664 = !DILocation(line: 1011, column: 5, scope: !4662)
!4665 = !DILocation(line: 1014, column: 8, scope: !4539)
!4666 = !DILocation(line: 1015, column: 9, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4572, file: !434, line: 1014, column: 15)
!4668 = !DILocation(line: 1018, column: 14, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !434, line: 1017, column: 12)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !434, line: 1015, column: 9)
!4671 = !DILocation(line: 1020, column: 4, scope: !4667)
!4672 = !DILocation(line: 1020, column: 15, scope: !4572)
!4673 = !DILocation(line: 1021, column: 1, scope: !4570)
!4674 = !DILocation(line: 1022, column: 11, scope: !4570)
!4675 = !DILocation(line: 1025, column: 14, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4570, file: !434, line: 1025, column: 9)
!4677 = !DILocation(line: 1026, column: 25, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4676, file: !434, line: 1025, column: 38)
!4679 = !DILocation(line: 1026, column: 19, scope: !4678)
!4680 = !DILocation(line: 1026, column: 6, scope: !4678)
!4681 = !DILocation(line: 1026, column: 23, scope: !4678)
!4682 = !DILocation(line: 1027, column: 5, scope: !4678)
!4683 = !DILocation(line: 1031, column: 21, scope: !4570)
!4684 = !DILocation(line: 1031, column: 13, scope: !4570)
!4685 = !DILocation(line: 1032, column: 4, scope: !4570)
!4686 = !DILocation(line: 995, column: 33, scope: !4540)
!4687 = distinct !{!4687, !4641, !4688}
!4688 = !DILocation(line: 1033, column: 3, scope: !4537)
!4689 = !DILocation(line: 1040, column: 10, scope: !4496)
!4690 = !DILocation(line: 1042, column: 10, scope: !4496)
!4691 = !DILocation(line: 1052, column: 6, scope: !4496)
!4692 = !DILocation(line: 1055, column: 9, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !434, line: 1052, column: 14)
!4694 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1052, column: 6)
!4695 = !DILocation(line: 1056, column: 2, scope: !4693)
!4696 = !DILocation(line: 1056, column: 21, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4694, file: !434, line: 1056, column: 13)
!4698 = !DILocation(line: 1066, column: 3, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !434, line: 1065, column: 11)
!4700 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1065, column: 6)
!4701 = !DILocation(line: 1067, column: 2, scope: !4699)
!4702 = !DILocation(line: 1068, column: 10, scope: !4496)
!4703 = !DILocation(line: 0, scope: !4553)
!4704 = !DILocation(line: 1074, column: 20, scope: !4556)
!4705 = !DILocation(line: 1074, column: 2, scope: !4553)
!4706 = !DILocation(line: 1110, column: 24, scope: !4496)
!4707 = !DILocation(line: 1053, column: 12, scope: !4693)
!4708 = !DILocation(line: 1054, column: 12, scope: !4693)
!4709 = !DILocation(line: 1108, column: 30, scope: !4496)
!4710 = !DILocation(line: 1108, column: 40, scope: !4496)
!4711 = !DILocation(line: 1108, column: 38, scope: !4496)
!4712 = !DILocation(line: 1109, column: 31, scope: !4496)
!4713 = !DILocation(line: 1109, column: 24, scope: !4496)
!4714 = !DILocation(line: 1110, column: 31, scope: !4496)
!4715 = !DILocation(line: 1114, column: 31, scope: !4496)
!4716 = !DILocation(line: 1114, column: 48, scope: !4496)
!4717 = !DILocation(line: 1115, column: 13, scope: !4496)
!4718 = !DILocation(line: 1118, column: 7, scope: !4496)
!4719 = !DILocation(line: 1119, column: 9, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1119, column: 6)
!4721 = !DILocation(line: 1119, column: 6, scope: !4496)
!4722 = !DILocation(line: 1075, column: 29, scope: !4555)
!4723 = !DILocation(line: 1075, column: 21, scope: !4555)
!4724 = !DILocation(line: 0, scope: !4555)
!4725 = !DILocation(line: 1076, column: 29, scope: !4555)
!4726 = !DILocation(line: 1076, column: 21, scope: !4555)
!4727 = !DILocation(line: 1077, column: 38, scope: !4555)
!4728 = !DILocation(line: 1077, column: 21, scope: !4555)
!4729 = !DILocation(line: 1078, column: 16, scope: !4555)
!4730 = !DILocation(line: 1080, column: 19, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 1080, column: 7)
!4732 = !DILocation(line: 1080, column: 34, scope: !4731)
!4733 = !DILocation(line: 1080, column: 22, scope: !4731)
!4734 = !DILocation(line: 1080, column: 7, scope: !4555)
!4735 = !DILocation(line: 1084, column: 7, scope: !4555)
!4736 = !DILocation(line: 1085, column: 8, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !434, line: 1084, column: 14)
!4738 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 1084, column: 7)
!4739 = !DILocation(line: 1086, column: 5, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !434, line: 1086, column: 5)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !434, line: 1086, column: 5)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !434, line: 1085, column: 49)
!4743 = distinct !DILexicalBlock(scope: !4737, file: !434, line: 1085, column: 8)
!4744 = !DILocation(line: 1086, column: 5, scope: !4741)
!4745 = !DILocation(line: 1086, column: 5, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4740, file: !434, line: 1086, column: 5)
!4747 = !DILocation(line: 1087, column: 25, scope: !4742)
!4748 = !DILocation(line: 1087, column: 5, scope: !4742)
!4749 = !DILocation(line: 1088, column: 4, scope: !4742)
!4750 = !DILocation(line: 1088, column: 15, scope: !4743)
!4751 = !DILocation(line: 1089, column: 5, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !434, line: 1089, column: 5)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !434, line: 1089, column: 5)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !434, line: 1088, column: 61)
!4755 = distinct !DILexicalBlock(scope: !4743, file: !434, line: 1088, column: 15)
!4756 = !DILocation(line: 1089, column: 5, scope: !4753)
!4757 = !DILocation(line: 1089, column: 5, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4752, file: !434, line: 1089, column: 5)
!4759 = !DILocation(line: 1090, column: 26, scope: !4754)
!4760 = !DILocation(line: 1090, column: 5, scope: !4754)
!4761 = !DILocation(line: 1091, column: 4, scope: !4754)
!4762 = !DILocation(line: 1095, column: 8, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4738, file: !434, line: 1094, column: 10)
!4764 = !DILocation(line: 1096, column: 5, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !434, line: 1096, column: 5)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !434, line: 1096, column: 5)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !434, line: 1095, column: 49)
!4768 = distinct !DILexicalBlock(scope: !4763, file: !434, line: 1095, column: 8)
!4769 = !DILocation(line: 1096, column: 5, scope: !4766)
!4770 = !DILocation(line: 1096, column: 5, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4765, file: !434, line: 1096, column: 5)
!4772 = !DILocation(line: 1097, column: 25, scope: !4767)
!4773 = !DILocation(line: 1097, column: 5, scope: !4767)
!4774 = !DILocation(line: 1098, column: 4, scope: !4767)
!4775 = !DILocation(line: 1099, column: 5, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !434, line: 1099, column: 5)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !434, line: 1099, column: 5)
!4778 = distinct !DILexicalBlock(scope: !4768, file: !434, line: 1098, column: 11)
!4779 = !DILocation(line: 1099, column: 5, scope: !4777)
!4780 = !DILocation(line: 1099, column: 5, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4776, file: !434, line: 1099, column: 5)
!4782 = !DILocation(line: 1100, column: 26, scope: !4778)
!4783 = !DILocation(line: 1100, column: 5, scope: !4778)
!4784 = !DILocation(line: 1100, column: 30, scope: !4778)
!4785 = !DILocation(line: 1101, column: 26, scope: !4778)
!4786 = !DILocation(line: 1101, column: 5, scope: !4778)
!4787 = !DILocation(line: 0, scope: !4738)
!4788 = !DILocation(line: 1074, column: 32, scope: !4556)
!4789 = distinct !{!4789, !4705, !4790}
!4790 = !DILocation(line: 1104, column: 2, scope: !4553)
!4791 = !DILocation(line: 1124, column: 13, scope: !4496)
!4792 = !DILocation(line: 1127, column: 10, scope: !4496)
!4793 = !DILocation(line: 1127, column: 7, scope: !4496)
!4794 = !DILocation(line: 1128, column: 9, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1128, column: 6)
!4796 = !DILocation(line: 1128, column: 6, scope: !4496)
!4797 = !DILocation(line: 1134, column: 27, scope: !4496)
!4798 = !DILocation(line: 1136, column: 7, scope: !4496)
!4799 = !DILocation(line: 1137, column: 9, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4496, file: !434, line: 1137, column: 6)
!4801 = !DILocation(line: 1137, column: 6, scope: !4496)
!4802 = !DILocation(line: 1131, column: 10, scope: !4496)
!4803 = !DILocation(line: 1140, column: 10, scope: !4496)
!4804 = !DILocation(line: 0, scope: !4563)
!4805 = !DILocation(line: 1143, column: 20, scope: !4566)
!4806 = !DILocation(line: 1143, column: 2, scope: !4563)
!4807 = !DILocation(line: 1144, column: 3, scope: !4565)
!4808 = !DILocation(line: 1144, column: 17, scope: !4565)
!4809 = !DILocation(line: 0, scope: !4565)
!4810 = !DILocation(line: 1144, column: 11, scope: !4565)
!4811 = !DILocation(line: 1145, column: 38, scope: !4565)
!4812 = !DILocation(line: 1145, column: 21, scope: !4565)
!4813 = !DILocation(line: 1146, column: 22, scope: !4565)
!4814 = !DILocation(line: 1146, column: 29, scope: !4565)
!4815 = !DILocation(line: 1148, column: 8, scope: !4565)
!4816 = !DILocation(line: 1149, column: 10, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4565, file: !434, line: 1149, column: 7)
!4818 = !DILocation(line: 1149, column: 7, scope: !4565)
!4819 = !DILocation(line: 1154, column: 8, scope: !4565)
!4820 = !DILocation(line: 1155, column: 10, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4565, file: !434, line: 1155, column: 7)
!4822 = !DILocation(line: 1155, column: 7, scope: !4565)
!4823 = !DILocation(line: 1159, column: 2, scope: !4566)
!4824 = !DILocation(line: 1152, column: 11, scope: !4565)
!4825 = !DILocation(line: 1158, column: 11, scope: !4565)
!4826 = !DILocation(line: 1143, column: 33, scope: !4566)
!4827 = distinct !{!4827, !4806, !4828}
!4828 = !DILocation(line: 1159, column: 2, scope: !4563)
!4829 = !DILocation(line: 1162, column: 8, scope: !4496)
!4830 = !DILocation(line: 1164, column: 2, scope: !4496)
!4831 = !DILocation(line: 1165, column: 1, scope: !4496)
!4832 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4833, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4835)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!111, !104}
!4835 = !{!4836, !4837, !4838, !4839, !4840, !4841, !4842}
!4836 = !DILocalVariable(name: "packaged", arg: 1, scope: !4832, file: !434, line: 196, type: !104)
!4837 = !DILocalVariable(name: "buf", scope: !4832, file: !434, line: 200, type: !432)
!4838 = !DILocalVariable(name: "start", scope: !4832, file: !434, line: 201, type: !432)
!4839 = !DILocalVariable(name: "args_size", scope: !4832, file: !434, line: 202, type: !32)
!4840 = !DILocalVariable(name: "s_nbr", scope: !4832, file: !434, line: 202, type: !32)
!4841 = !DILocalVariable(name: "ros_nbr", scope: !4832, file: !434, line: 202, type: !32)
!4842 = !DILocalVariable(name: "i", scope: !4843, file: !434, line: 215, type: !105)
!4843 = distinct !DILexicalBlock(scope: !4832, file: !434, line: 215, column: 2)
!4844 = !DILocation(line: 0, scope: !4832)
!4845 = !DILocation(line: 198, column: 2, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !434, line: 198, column: 2)
!4847 = distinct !DILexicalBlock(scope: !4832, file: !434, line: 198, column: 2)
!4848 = !DILocation(line: 198, column: 2, scope: !4847)
!4849 = !DILocation(line: 198, column: 2, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4846, file: !434, line: 198, column: 2)
!4851 = !DILocation(line: 204, column: 14, scope: !4832)
!4852 = !DILocation(line: 204, column: 21, scope: !4832)
!4853 = !DILocation(line: 205, column: 14, scope: !4832)
!4854 = !DILocation(line: 206, column: 14, scope: !4832)
!4855 = !DILocation(line: 209, column: 6, scope: !4832)
!4856 = !DILocation(line: 212, column: 6, scope: !4832)
!4857 = !DILocation(line: 0, scope: !4843)
!4858 = !DILocation(line: 215, column: 20, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4843, file: !434, line: 215, column: 2)
!4860 = !DILocation(line: 215, column: 2, scope: !4843)
!4861 = !DILocation(line: 220, column: 33, scope: !4832)
!4862 = !DILocation(line: 220, column: 2, scope: !4832)
!4863 = !DILocation(line: 216, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4859, file: !434, line: 215, column: 34)
!4865 = !DILocation(line: 217, column: 10, scope: !4864)
!4866 = !DILocation(line: 217, column: 36, scope: !4864)
!4867 = !DILocation(line: 217, column: 7, scope: !4864)
!4868 = !DILocation(line: 215, column: 30, scope: !4859)
!4869 = distinct !{!4869, !4860, !4870}
!4870 = !DILocation(line: 218, column: 2, scope: !4843)
!4871 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4872, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4874)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!105, !4499, !104, !269, !183}
!4874 = !{!4875, !4876, !4877, !4878}
!4875 = !DILocalVariable(name: "cb", arg: 1, scope: !4871, file: !434, line: 223, type: !4499)
!4876 = !DILocalVariable(name: "ctx", arg: 2, scope: !4871, file: !434, line: 223, type: !104)
!4877 = !DILocalVariable(name: "str", arg: 3, scope: !4871, file: !434, line: 223, type: !269)
!4878 = !DILocalVariable(name: "strl", arg: 4, scope: !4871, file: !434, line: 223, type: !183)
!4879 = !DILocation(line: 0, scope: !4871)
!4880 = !DILocation(line: 225, column: 9, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4871, file: !434, line: 225, column: 6)
!4882 = !DILocation(line: 225, column: 6, scope: !4871)
!4883 = !DILocation(line: 226, column: 14, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4881, file: !434, line: 225, column: 18)
!4885 = !DILocation(line: 226, column: 12, scope: !4884)
!4886 = !DILocation(line: 226, column: 3, scope: !4884)
!4887 = !DILocation(line: 229, column: 14, scope: !4871)
!4888 = !DILocation(line: 229, column: 9, scope: !4871)
!4889 = !DILocation(line: 229, column: 27, scope: !4871)
!4890 = !DILocation(line: 229, column: 39, scope: !4871)
!4891 = !DILocation(line: 230, column: 17, scope: !4871)
!4892 = !DILocation(line: 230, column: 9, scope: !4871)
!4893 = !DILocation(line: 230, column: 2, scope: !4871)
!4894 = !DILocation(line: 231, column: 1, scope: !4871)
!4895 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4896)
!4896 = !{!4897}
!4897 = !DILocalVariable(name: "c", arg: 1, scope: !4895, file: !446, line: 45, type: !105)
!4898 = !DILocation(line: 0, scope: !4895)
!4899 = !DILocation(line: 50, column: 2, scope: !4895)
!4900 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4901, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4903)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{null, !447}
!4903 = !{!4904}
!4904 = !DILocalVariable(name: "fn", arg: 1, scope: !4900, file: !446, line: 63, type: !447)
!4905 = !DILocation(line: 0, scope: !4900)
!4906 = !DILocation(line: 65, column: 12, scope: !4900)
!4907 = !DILocation(line: 66, column: 1, scope: !4900)
!4908 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4909, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4909 = !DISubroutineType(types: !4910)
!4910 = !{!104}
!4911 = !DILocation(line: 78, column: 9, scope: !4908)
!4912 = !DILocation(line: 78, column: 2, scope: !4908)
!4913 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4914, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4922)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{null, !269, !4916}
!4916 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3985, line: 99, baseType: !4917)
!4917 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3985, line: 40, baseType: !4918)
!4918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4919)
!4919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4920)
!4920 = !{!4921}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4919, file: !446, line: 79, baseType: !104, size: 32)
!4922 = !{!4923, !4924, !4925}
!4923 = !DILocalVariable(name: "fmt", arg: 1, scope: !4913, file: !446, line: 113, type: !269)
!4924 = !DILocalVariable(name: "ap", arg: 2, scope: !4913, file: !446, line: 113, type: !4916)
!4925 = !DILocalVariable(name: "ctx", scope: !4926, file: !446, line: 121, type: !4928)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !446, line: 120, column: 27)
!4927 = distinct !DILexicalBlock(scope: !4913, file: !446, line: 120, column: 6)
!4928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4929)
!4929 = !{!4930, !4931}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4928, file: !446, line: 85, baseType: !32, size: 32)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4928, file: !446, line: 86, baseType: !4932, offset: 32)
!4932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2599)
!4933 = !DILocation(line: 0, scope: !4913)
!4934 = !DILocation(line: 148, column: 3, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4927, file: !446, line: 138, column: 9)
!4936 = !DILocation(line: 155, column: 1, scope: !4913)
!4937 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4938, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4940)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!105, !105, !104}
!4940 = !{!4941, !4942}
!4941 = !DILocalVariable(name: "c", arg: 1, scope: !4937, file: !446, line: 107, type: !105)
!4942 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4937, file: !446, line: 107, type: !104)
!4943 = !DILocation(line: 0, scope: !4937)
!4944 = !DILocation(line: 110, column: 9, scope: !4937)
!4945 = !DILocation(line: 110, column: 2, scope: !4937)
!4946 = distinct !DISubprogram(name: "cbvprintf", scope: !4017, file: !4017, line: 739, type: !4947, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4949)
!4947 = !DISubroutineType(types: !4948)
!4948 = !{!105, !4367, !104, !269, !4916}
!4949 = !{!4950, !4951, !4952, !4953}
!4950 = !DILocalVariable(name: "out", arg: 1, scope: !4946, file: !4017, line: 739, type: !4367)
!4951 = !DILocalVariable(name: "ctx", arg: 2, scope: !4946, file: !4017, line: 739, type: !104)
!4952 = !DILocalVariable(name: "format", arg: 3, scope: !4946, file: !4017, line: 739, type: !269)
!4953 = !DILocalVariable(name: "ap", arg: 4, scope: !4946, file: !4017, line: 739, type: !4916)
!4954 = !DILocation(line: 0, scope: !4946)
!4955 = !DILocation(line: 741, column: 9, scope: !4946)
!4956 = !DILocation(line: 741, column: 2, scope: !4946)
!4957 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4958, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4960)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{null, !102, !111}
!4960 = !{!4961, !4962, !4963}
!4961 = !DILocalVariable(name: "c", arg: 1, scope: !4957, file: !446, line: 157, type: !102)
!4962 = !DILocalVariable(name: "n", arg: 2, scope: !4957, file: !446, line: 157, type: !111)
!4963 = !DILocalVariable(name: "i", scope: !4957, file: !446, line: 159, type: !111)
!4964 = !DILocation(line: 0, scope: !4957)
!4965 = !DILocation(line: 164, column: 16, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !446, line: 164, column: 2)
!4967 = distinct !DILexicalBlock(scope: !4957, file: !446, line: 164, column: 2)
!4968 = !DILocation(line: 164, column: 2, scope: !4967)
!4969 = !DILocation(line: 165, column: 3, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !446, line: 164, column: 26)
!4971 = !DILocation(line: 165, column: 13, scope: !4970)
!4972 = !DILocation(line: 164, column: 22, scope: !4966)
!4973 = distinct !{!4973, !4968, !4974}
!4974 = !DILocation(line: 166, column: 2, scope: !4967)
!4975 = !DILocation(line: 171, column: 1, scope: !4957)
!4976 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !4977, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4979)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{null, !269, null}
!4979 = !{!4980, !4981}
!4980 = !DILocalVariable(name: "fmt", arg: 1, scope: !4976, file: !446, line: 203, type: !269)
!4981 = !DILocalVariable(name: "ap", scope: !4976, file: !446, line: 205, type: !4916)
!4982 = !DILocation(line: 0, scope: !4976)
!4983 = !DILocation(line: 205, column: 2, scope: !4976)
!4984 = !DILocation(line: 205, column: 10, scope: !4976)
!4985 = !DILocation(line: 207, column: 2, scope: !4976)
!4986 = !DILocation(line: 209, column: 2, scope: !4976)
!4987 = !DILocation(line: 211, column: 2, scope: !4976)
!4988 = !DILocation(line: 212, column: 1, scope: !4976)
!4989 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !4990, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!105, !102, !111, !269, null}
!4992 = !{!4993, !4994, !4995, !4996, !4997}
!4993 = !DILocalVariable(name: "str", arg: 1, scope: !4989, file: !446, line: 239, type: !102)
!4994 = !DILocalVariable(name: "size", arg: 2, scope: !4989, file: !446, line: 239, type: !111)
!4995 = !DILocalVariable(name: "fmt", arg: 3, scope: !4989, file: !446, line: 239, type: !269)
!4996 = !DILocalVariable(name: "ap", scope: !4989, file: !446, line: 241, type: !4916)
!4997 = !DILocalVariable(name: "ret", scope: !4989, file: !446, line: 242, type: !105)
!4998 = !DILocation(line: 0, scope: !4989)
!4999 = !DILocation(line: 241, column: 2, scope: !4989)
!5000 = !DILocation(line: 241, column: 10, scope: !4989)
!5001 = !DILocation(line: 244, column: 2, scope: !4989)
!5002 = !DILocation(line: 245, column: 8, scope: !4989)
!5003 = !DILocation(line: 246, column: 2, scope: !4989)
!5004 = !DILocation(line: 249, column: 1, scope: !4989)
!5005 = !DILocation(line: 248, column: 2, scope: !4989)
!5006 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !5007, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!105, !102, !111, !269, !4916}
!5009 = !{!5010, !5011, !5012, !5013, !5014}
!5010 = !DILocalVariable(name: "str", arg: 1, scope: !5006, file: !446, line: 251, type: !102)
!5011 = !DILocalVariable(name: "size", arg: 2, scope: !5006, file: !446, line: 251, type: !111)
!5012 = !DILocalVariable(name: "fmt", arg: 3, scope: !5006, file: !446, line: 251, type: !269)
!5013 = !DILocalVariable(name: "ap", arg: 4, scope: !5006, file: !446, line: 251, type: !4916)
!5014 = !DILocalVariable(name: "ctx", scope: !5006, file: !446, line: 253, type: !5015)
!5015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !5016)
!5016 = !{!5017, !5018, !5019}
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5015, file: !446, line: 218, baseType: !102, size: 32)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5015, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5015, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!5020 = !DILocation(line: 0, scope: !5006)
!5021 = !DILocation(line: 253, column: 2, scope: !5006)
!5022 = !DILocation(line: 253, column: 21, scope: !5006)
!5023 = !DILocation(line: 253, column: 27, scope: !5006)
!5024 = !DILocation(line: 255, column: 2, scope: !5006)
!5025 = !DILocation(line: 257, column: 10, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5006, file: !446, line: 257, column: 6)
!5027 = !DILocation(line: 257, column: 22, scope: !5026)
!5028 = !DILocation(line: 257, column: 16, scope: !5026)
!5029 = !DILocation(line: 257, column: 6, scope: !5006)
!5030 = !DILocation(line: 258, column: 3, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !446, line: 257, column: 27)
!5032 = !DILocation(line: 258, column: 18, scope: !5031)
!5033 = !DILocation(line: 259, column: 2, scope: !5031)
!5034 = !DILocation(line: 262, column: 1, scope: !5006)
!5035 = !DILocation(line: 261, column: 2, scope: !5006)
!5036 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5037, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5040)
!5037 = !DISubroutineType(types: !5038)
!5038 = !{!105, !105, !5039}
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5015, size: 32)
!5040 = !{!5041, !5042}
!5041 = !DILocalVariable(name: "c", arg: 1, scope: !5036, file: !446, line: 223, type: !105)
!5042 = !DILocalVariable(name: "ctx", arg: 2, scope: !5036, file: !446, line: 223, type: !5039)
!5043 = !DILocation(line: 0, scope: !5036)
!5044 = !DILocation(line: 225, column: 11, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5036, file: !446, line: 225, column: 6)
!5046 = !DILocation(line: 225, column: 15, scope: !5045)
!5047 = !DILocation(line: 0, scope: !5045)
!5048 = !DILocation(line: 225, column: 23, scope: !5045)
!5049 = !DILocation(line: 225, column: 45, scope: !5045)
!5050 = !DILocation(line: 225, column: 37, scope: !5045)
!5051 = !DILocation(line: 225, column: 6, scope: !5036)
!5052 = !DILocation(line: 226, column: 8, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5045, file: !446, line: 225, column: 50)
!5054 = !DILocation(line: 226, column: 13, scope: !5053)
!5055 = !DILocation(line: 227, column: 3, scope: !5053)
!5056 = !DILocation(line: 230, column: 29, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5036, file: !446, line: 230, column: 6)
!5058 = !DILocation(line: 230, column: 17, scope: !5057)
!5059 = !DILocation(line: 230, column: 6, scope: !5036)
!5060 = !DILocation(line: 231, column: 22, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5057, file: !446, line: 230, column: 34)
!5062 = !DILocation(line: 231, column: 3, scope: !5061)
!5063 = !DILocation(line: 231, column: 26, scope: !5061)
!5064 = !DILocation(line: 232, column: 2, scope: !5061)
!5065 = !DILocation(line: 233, column: 28, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5057, file: !446, line: 232, column: 9)
!5067 = !DILocation(line: 233, column: 22, scope: !5066)
!5068 = !DILocation(line: 233, column: 3, scope: !5066)
!5069 = !DILocation(line: 233, column: 26, scope: !5066)
!5070 = !DILocation(line: 237, column: 1, scope: !5036)
!5071 = distinct !DISubprogram(name: "z_thread_entry", scope: !5072, file: !5072, line: 30, type: !5073, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !5075)
!5072 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5073 = !DISubroutineType(types: !5074)
!5074 = !{null, !254, !104, !104, !104}
!5075 = !{!5076, !5077, !5078, !5079}
!5076 = !DILocalVariable(name: "entry", arg: 1, scope: !5071, file: !5072, line: 30, type: !254)
!5077 = !DILocalVariable(name: "p1", arg: 2, scope: !5071, file: !5072, line: 31, type: !104)
!5078 = !DILocalVariable(name: "p2", arg: 3, scope: !5071, file: !5072, line: 31, type: !104)
!5079 = !DILocalVariable(name: "p3", arg: 4, scope: !5071, file: !5072, line: 31, type: !104)
!5080 = !DILocation(line: 0, scope: !5071)
!5081 = !DILocation(line: 36, column: 2, scope: !5071)
!5082 = !DILocation(line: 38, column: 17, scope: !5071)
!5083 = !DILocation(line: 38, column: 2, scope: !5071)
!5084 = !DILocation(line: 45, column: 2, scope: !5071)
!5085 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5086, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !397)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{!5088}
!5088 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5089)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 32)
!5090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5091)
!5091 = !{!5092, !5150, !5162, !5163, !5164, !5165, !5171, !5186}
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5090, file: !127, line: 247, baseType: !5093, size: 384)
!5093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5094)
!5094 = !{!5095, !5119, !5126, !5127, !5128, !5137, !5138, !5139}
!5095 = !DIDerivedType(tag: DW_TAG_member, scope: !5093, file: !127, line: 60, baseType: !5096, size: 64)
!5096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5093, file: !127, line: 60, size: 64, elements: !5097)
!5097 = !{!5098, !5113}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5096, file: !127, line: 61, baseType: !5099, size: 64)
!5099 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5100)
!5100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5101)
!5101 = !{!5102, !5108}
!5102 = !DIDerivedType(tag: DW_TAG_member, scope: !5100, file: !137, line: 38, baseType: !5103, size: 32)
!5103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5100, file: !137, line: 38, size: 32, elements: !5104)
!5104 = !{!5105, !5107}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5103, file: !137, line: 39, baseType: !5106, size: 32)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5100, size: 32)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5103, file: !137, line: 40, baseType: !5106, size: 32)
!5108 = !DIDerivedType(tag: DW_TAG_member, scope: !5100, file: !137, line: 42, baseType: !5109, size: 32, offset: 32)
!5109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5100, file: !137, line: 42, size: 32, elements: !5110)
!5110 = !{!5111, !5112}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5109, file: !137, line: 43, baseType: !5106, size: 32)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5109, file: !137, line: 44, baseType: !5106, size: 32)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5096, file: !127, line: 62, baseType: !5114, size: 64)
!5114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5115)
!5115 = !{!5116}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5114, file: !153, line: 50, baseType: !5117, size: 64)
!5117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5118, size: 64, elements: !158)
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 32)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5093, file: !127, line: 68, baseType: !5120, size: 32, offset: 64)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 32)
!5121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5122)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5123)
!5123 = !{!5124}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5122, file: !163, line: 232, baseType: !5125, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5100)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5093, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5093, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5128 = !DIDerivedType(tag: DW_TAG_member, scope: !5093, file: !127, line: 90, baseType: !5129, size: 16, offset: 112)
!5129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5093, file: !127, line: 90, size: 16, elements: !5130)
!5130 = !{!5131, !5136}
!5131 = !DIDerivedType(tag: DW_TAG_member, scope: !5129, file: !127, line: 91, baseType: !5132, size: 16)
!5132 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5129, file: !127, line: 91, size: 16, elements: !5133)
!5133 = !{!5134, !5135}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5132, file: !127, line: 96, baseType: !179, size: 8)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5132, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5129, file: !127, line: 100, baseType: !183, size: 16)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5093, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5093, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5093, file: !127, line: 131, baseType: !5140, size: 192, offset: 192)
!5140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5141)
!5141 = !{!5142, !5143, !5149}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5140, file: !163, line: 245, baseType: !5099, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5140, file: !163, line: 246, baseType: !5144, size: 32, offset: 64)
!5144 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5145)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 32)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{null, !5148}
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 32)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5140, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5090, file: !127, line: 250, baseType: !5151, size: 288, offset: 384)
!5151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5152)
!5152 = !{!5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161}
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5151, file: !200, line: 26, baseType: !113, size: 32)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5151, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5151, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5151, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5151, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5151, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5151, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5151, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5151, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5090, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5090, file: !127, line: 256, baseType: !5121, size: 64, offset: 704)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5090, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5090, file: !127, line: 300, baseType: !5166, size: 96, offset: 800)
!5166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5167)
!5167 = !{!5168, !5169, !5170}
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5166, file: !127, line: 153, baseType: !22, size: 32)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5166, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5166, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5090, file: !127, line: 325, baseType: !5172, size: 32, offset: 896)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 32)
!5173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5174)
!5174 = !{!5175, !5181, !5182}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5173, file: !122, line: 5074, baseType: !5176, size: 96)
!5176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5177)
!5177 = !{!5178, !5179, !5180}
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5176, file: !226, line: 57, baseType: !229, size: 32)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5176, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5176, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5173, file: !122, line: 5075, baseType: !5121, size: 64, offset: 96)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5173, file: !122, line: 5076, baseType: !5183, size: 32, offset: 160)
!5183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5184)
!5184 = !{!5185}
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5183, file: !236, line: 52, baseType: !22, size: 32)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5090, file: !127, line: 343, baseType: !5187, size: 64, offset: 928)
!5187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5188)
!5188 = !{!5189, !5190}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5187, file: !200, line: 63, baseType: !113, size: 32)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5187, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5191 = !DILocation(line: 535, column: 9, scope: !5085)
!5192 = !DILocation(line: 535, column: 2, scope: !5085)
!5193 = distinct !DISubprogram(name: "k_thread_abort", scope: !3431, file: !3431, line: 188, type: !5194, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{null, !5088}
!5196 = !{!5197}
!5197 = !DILocalVariable(name: "thread", arg: 1, scope: !5193, file: !3431, line: 188, type: !5088)
!5198 = !DILocation(line: 0, scope: !5193)
!5199 = !DILocation(line: 197, column: 2, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5193, file: !3431, line: 197, column: 2)
!5201 = !{i64 2154746239}
!5202 = !DILocation(line: 198, column: 2, scope: !5193)
!5203 = !DILocation(line: 199, column: 1, scope: !5193)
!5204 = distinct !DISubprogram(name: "z_current_get", scope: !3431, file: !3431, line: 173, type: !5086, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !397)
!5205 = !DILocation(line: 180, column: 2, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5204, file: !3431, line: 180, column: 2)
!5207 = !{i64 2154746171}
!5208 = !DILocation(line: 181, column: 9, scope: !5204)
!5209 = !DILocation(line: 181, column: 2, scope: !5204)
!5210 = distinct !DISubprogram(name: "sys_heap_free", scope: !5211, file: !5211, line: 163, type: !5212, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5220)
!5211 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5212 = !DISubroutineType(types: !5213)
!5213 = !{null, !5214, !104}
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 32)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5216)
!5216 = !{!5217, !5218, !5219}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5215, file: !226, line: 57, baseType: !2586, size: 32)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5215, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5215, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5220 = !{!5221, !5222, !5223, !5224}
!5221 = !DILocalVariable(name: "heap", arg: 1, scope: !5210, file: !5211, line: 163, type: !5214)
!5222 = !DILocalVariable(name: "mem", arg: 2, scope: !5210, file: !5211, line: 163, type: !104)
!5223 = !DILocalVariable(name: "h", scope: !5210, file: !5211, line: 168, type: !2586)
!5224 = !DILocalVariable(name: "c", scope: !5210, file: !5211, line: 169, type: !2591)
!5225 = !DILocation(line: 0, scope: !5210)
!5226 = !DILocation(line: 165, column: 10, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 165, column: 6)
!5228 = !DILocation(line: 165, column: 6, scope: !5210)
!5229 = !DILocation(line: 168, column: 27, scope: !5210)
!5230 = !DILocation(line: 169, column: 16, scope: !5210)
!5231 = !{i32 0, i32 536870912}
!5232 = !DILocation(line: 175, column: 2, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5234, file: !5211, line: 175, column: 2)
!5234 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 175, column: 2)
!5235 = !DILocation(line: 175, column: 2, scope: !5234)
!5236 = !DILocation(line: 175, column: 2, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5233, file: !5211, line: 175, column: 2)
!5238 = !DILocation(line: 183, column: 2, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !5211, line: 183, column: 2)
!5240 = distinct !DILexicalBlock(scope: !5210, file: !5211, line: 183, column: 2)
!5241 = !DILocation(line: 183, column: 2, scope: !5240)
!5242 = !DILocation(line: 183, column: 2, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5239, file: !5211, line: 183, column: 2)
!5244 = !DILocation(line: 187, column: 2, scope: !5210)
!5245 = !DILocation(line: 197, column: 2, scope: !5210)
!5246 = !DILocation(line: 198, column: 1, scope: !5210)
!5247 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5211, file: !5211, line: 157, type: !5248, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!2591, !2586, !104}
!5250 = !{!5251, !5252, !5253, !5254}
!5251 = !DILocalVariable(name: "h", arg: 1, scope: !5247, file: !5211, line: 157, type: !2586)
!5252 = !DILocalVariable(name: "p", arg: 2, scope: !5247, file: !5211, line: 157, type: !104)
!5253 = !DILocalVariable(name: "mem", scope: !5247, file: !5211, line: 159, type: !432)
!5254 = !DILocalVariable(name: "base", scope: !5247, file: !5211, line: 159, type: !432)
!5255 = !DILocation(line: 0, scope: !5247)
!5256 = !DILocation(line: 159, column: 39, scope: !5247)
!5257 = !DILocation(line: 160, column: 14, scope: !5247)
!5258 = !DILocation(line: 160, column: 38, scope: !5247)
!5259 = !DILocation(line: 160, column: 46, scope: !5247)
!5260 = !DILocation(line: 160, column: 2, scope: !5247)
!5261 = distinct !DISubprogram(name: "chunk_used", scope: !2573, file: !2573, line: 137, type: !5262, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!492, !2586, !2591}
!5264 = !{!5265, !5266}
!5265 = !DILocalVariable(name: "h", arg: 1, scope: !5261, file: !2573, line: 137, type: !2586)
!5266 = !DILocalVariable(name: "c", arg: 2, scope: !5261, file: !2573, line: 137, type: !2591)
!5267 = !DILocation(line: 0, scope: !5261)
!5268 = !DILocation(line: 139, column: 9, scope: !5261)
!5269 = !DILocation(line: 139, column: 42, scope: !5261)
!5270 = !DILocation(line: 139, column: 2, scope: !5261)
!5271 = distinct !DISubprogram(name: "right_chunk", scope: !2573, file: !2573, line: 204, type: !5272, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5274)
!5272 = !DISubroutineType(types: !5273)
!5273 = !{!2591, !2586, !2591}
!5274 = !{!5275, !5276}
!5275 = !DILocalVariable(name: "h", arg: 1, scope: !5271, file: !2573, line: 204, type: !2586)
!5276 = !DILocalVariable(name: "c", arg: 2, scope: !5271, file: !2573, line: 204, type: !2591)
!5277 = !DILocation(line: 0, scope: !5271)
!5278 = !DILocation(line: 206, column: 13, scope: !5271)
!5279 = !DILocation(line: 206, column: 11, scope: !5271)
!5280 = !DILocation(line: 206, column: 2, scope: !5271)
!5281 = distinct !DISubprogram(name: "left_chunk", scope: !2573, file: !2573, line: 199, type: !5272, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5282)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "h", arg: 1, scope: !5281, file: !2573, line: 199, type: !2586)
!5284 = !DILocalVariable(name: "c", arg: 2, scope: !5281, file: !2573, line: 199, type: !2591)
!5285 = !DILocation(line: 0, scope: !5281)
!5286 = !DILocation(line: 201, column: 13, scope: !5281)
!5287 = !DILocation(line: 201, column: 11, scope: !5281)
!5288 = !DILocation(line: 201, column: 2, scope: !5281)
!5289 = distinct !DISubprogram(name: "set_chunk_used", scope: !2573, file: !2573, line: 147, type: !5290, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5292)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{null, !2586, !2591, !492}
!5292 = !{!5293, !5294, !5295, !5296, !5297}
!5293 = !DILocalVariable(name: "h", arg: 1, scope: !5289, file: !2573, line: 147, type: !2586)
!5294 = !DILocalVariable(name: "c", arg: 2, scope: !5289, file: !2573, line: 147, type: !2591)
!5295 = !DILocalVariable(name: "used", arg: 3, scope: !5289, file: !2573, line: 147, type: !492)
!5296 = !DILocalVariable(name: "buf", scope: !5289, file: !2573, line: 149, type: !2580)
!5297 = !DILocalVariable(name: "cmem", scope: !5289, file: !2573, line: 150, type: !104)
!5298 = !DILocation(line: 0, scope: !5289)
!5299 = !DILocation(line: 149, column: 22, scope: !5289)
!5300 = !DILocation(line: 0, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5302, file: !2573, line: 159, column: 7)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !2573, line: 158, column: 9)
!5303 = distinct !DILexicalBlock(scope: !5289, file: !2573, line: 152, column: 6)
!5304 = !DILocation(line: 159, column: 7, scope: !5302)
!5305 = !DILocation(line: 165, column: 1, scope: !5289)
!5306 = distinct !DISubprogram(name: "free_chunk", scope: !5211, file: !5211, line: 133, type: !5307, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5309)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{null, !2586, !2591}
!5309 = !{!5310, !5311}
!5310 = !DILocalVariable(name: "h", arg: 1, scope: !5306, file: !5211, line: 133, type: !2586)
!5311 = !DILocalVariable(name: "c", arg: 2, scope: !5306, file: !5211, line: 133, type: !2591)
!5312 = !DILocation(line: 0, scope: !5306)
!5313 = !DILocation(line: 136, column: 21, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5306, file: !5211, line: 136, column: 6)
!5315 = !DILocation(line: 136, column: 7, scope: !5314)
!5316 = !DILocation(line: 136, column: 6, scope: !5306)
!5317 = !DILocation(line: 137, column: 3, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5314, file: !5211, line: 136, column: 41)
!5319 = !DILocation(line: 138, column: 22, scope: !5318)
!5320 = !DILocation(line: 138, column: 3, scope: !5318)
!5321 = !DILocation(line: 139, column: 2, scope: !5318)
!5322 = !DILocation(line: 142, column: 21, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5306, file: !5211, line: 142, column: 6)
!5324 = !DILocation(line: 142, column: 7, scope: !5323)
!5325 = !DILocation(line: 142, column: 6, scope: !5306)
!5326 = !DILocation(line: 143, column: 3, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !5211, line: 142, column: 40)
!5328 = !DILocation(line: 144, column: 19, scope: !5327)
!5329 = !DILocation(line: 144, column: 3, scope: !5327)
!5330 = !DILocation(line: 145, column: 7, scope: !5327)
!5331 = !DILocation(line: 146, column: 2, scope: !5327)
!5332 = !DILocation(line: 148, column: 2, scope: !5306)
!5333 = !DILocation(line: 149, column: 1, scope: !5306)
!5334 = distinct !DISubprogram(name: "free_list_remove", scope: !5211, file: !5211, line: 60, type: !5307, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5335)
!5335 = !{!5336, !5337, !5338}
!5336 = !DILocalVariable(name: "h", arg: 1, scope: !5334, file: !5211, line: 60, type: !2586)
!5337 = !DILocalVariable(name: "c", arg: 2, scope: !5334, file: !5211, line: 60, type: !2591)
!5338 = !DILocalVariable(name: "bidx", scope: !5339, file: !5211, line: 63, type: !105)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !5211, line: 62, column: 31)
!5340 = distinct !DILexicalBlock(scope: !5334, file: !5211, line: 62, column: 6)
!5341 = !DILocation(line: 0, scope: !5334)
!5342 = !DILocation(line: 63, column: 28, scope: !5339)
!5343 = !{i32 0, i32 32768}
!5344 = !DILocation(line: 63, column: 14, scope: !5339)
!5345 = !DILocation(line: 0, scope: !5339)
!5346 = !DILocation(line: 64, column: 3, scope: !5339)
!5347 = !DILocation(line: 66, column: 1, scope: !5334)
!5348 = distinct !DISubprogram(name: "merge_chunks", scope: !5211, file: !5211, line: 125, type: !5349, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5351)
!5349 = !DISubroutineType(types: !5350)
!5350 = !{null, !2586, !2591, !2591}
!5351 = !{!5352, !5353, !5354, !5355}
!5352 = !DILocalVariable(name: "h", arg: 1, scope: !5348, file: !5211, line: 125, type: !2586)
!5353 = !DILocalVariable(name: "lc", arg: 2, scope: !5348, file: !5211, line: 125, type: !2591)
!5354 = !DILocalVariable(name: "rc", arg: 3, scope: !5348, file: !5211, line: 125, type: !2591)
!5355 = !DILocalVariable(name: "newsz", scope: !5348, file: !5211, line: 127, type: !5356)
!5356 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2573, line: 62, baseType: !113)
!5357 = !DILocation(line: 0, scope: !5348)
!5358 = !DILocation(line: 127, column: 20, scope: !5348)
!5359 = !DILocation(line: 127, column: 40, scope: !5348)
!5360 = !DILocation(line: 127, column: 38, scope: !5348)
!5361 = !DILocation(line: 129, column: 2, scope: !5348)
!5362 = !DILocation(line: 130, column: 25, scope: !5348)
!5363 = !DILocation(line: 130, column: 2, scope: !5348)
!5364 = !DILocation(line: 131, column: 1, scope: !5348)
!5365 = distinct !DISubprogram(name: "free_list_add", scope: !5211, file: !5211, line: 98, type: !5307, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5366)
!5366 = !{!5367, !5368, !5369}
!5367 = !DILocalVariable(name: "h", arg: 1, scope: !5365, file: !5211, line: 98, type: !2586)
!5368 = !DILocalVariable(name: "c", arg: 2, scope: !5365, file: !5211, line: 98, type: !2591)
!5369 = !DILocalVariable(name: "bidx", scope: !5370, file: !5211, line: 101, type: !105)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !5211, line: 100, column: 31)
!5371 = distinct !DILexicalBlock(scope: !5365, file: !5211, line: 100, column: 6)
!5372 = !DILocation(line: 0, scope: !5365)
!5373 = !DILocation(line: 101, column: 28, scope: !5370)
!5374 = !DILocation(line: 101, column: 14, scope: !5370)
!5375 = !DILocation(line: 0, scope: !5370)
!5376 = !DILocation(line: 102, column: 3, scope: !5370)
!5377 = !DILocation(line: 104, column: 1, scope: !5365)
!5378 = distinct !DISubprogram(name: "chunk_size", scope: !2573, file: !2573, line: 142, type: !5379, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5381)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!5356, !2586, !2591}
!5381 = !{!5382, !5383}
!5382 = !DILocalVariable(name: "h", arg: 1, scope: !5378, file: !2573, line: 142, type: !2586)
!5383 = !DILocalVariable(name: "c", arg: 2, scope: !5378, file: !2573, line: 142, type: !2591)
!5384 = !DILocation(line: 0, scope: !5378)
!5385 = !DILocation(line: 144, column: 9, scope: !5378)
!5386 = !DILocation(line: 144, column: 42, scope: !5378)
!5387 = !DILocation(line: 144, column: 2, scope: !5378)
!5388 = distinct !DISubprogram(name: "bucket_idx", scope: !2573, file: !2573, line: 250, type: !5389, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!105, !2586, !5356}
!5391 = !{!5392, !5393, !5394}
!5392 = !DILocalVariable(name: "h", arg: 1, scope: !5388, file: !2573, line: 250, type: !2586)
!5393 = !DILocalVariable(name: "sz", arg: 2, scope: !5388, file: !2573, line: 250, type: !5356)
!5394 = !DILocalVariable(name: "usable_sz", scope: !5388, file: !2573, line: 252, type: !32)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 252, column: 32, scope: !5388)
!5397 = !DILocation(line: 252, column: 30, scope: !5388)
!5398 = !DILocation(line: 252, column: 50, scope: !5388)
!5399 = !DILocation(line: 253, column: 14, scope: !5388)
!5400 = !{i32 0, i32 33}
!5401 = !DILocation(line: 253, column: 12, scope: !5388)
!5402 = !DILocation(line: 253, column: 2, scope: !5388)
!5403 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5211, file: !5211, line: 68, type: !5404, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5406)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{null, !2586, !2591, !105}
!5406 = !{!5407, !5408, !5409, !5410, !5412, !5415}
!5407 = !DILocalVariable(name: "h", arg: 1, scope: !5403, file: !5211, line: 68, type: !2586)
!5408 = !DILocalVariable(name: "c", arg: 2, scope: !5403, file: !5211, line: 68, type: !2591)
!5409 = !DILocalVariable(name: "bidx", arg: 3, scope: !5403, file: !5211, line: 68, type: !105)
!5410 = !DILocalVariable(name: "b", scope: !5403, file: !5211, line: 70, type: !5411)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 32)
!5412 = !DILocalVariable(name: "second", scope: !5413, file: !5211, line: 84, type: !2591)
!5413 = distinct !DILexicalBlock(scope: !5414, file: !5211, line: 80, column: 9)
!5414 = distinct !DILexicalBlock(scope: !5403, file: !5211, line: 72, column: 6)
!5415 = !DILocalVariable(name: "first", scope: !5413, file: !5211, line: 85, type: !2591)
!5416 = !DILocation(line: 0, scope: !5403)
!5417 = !DILocation(line: 72, column: 9, scope: !5414)
!5418 = !DILocation(line: 72, column: 14, scope: !5414)
!5419 = !DILocation(line: 72, column: 6, scope: !5403)
!5420 = !DILocation(line: 76, column: 23, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5414, file: !5211, line: 72, column: 21)
!5422 = !DILocation(line: 76, column: 6, scope: !5421)
!5423 = !DILocation(line: 76, column: 20, scope: !5421)
!5424 = !DILocation(line: 77, column: 11, scope: !5421)
!5425 = !DILocation(line: 78, column: 3, scope: !5421)
!5426 = !DILocation(line: 79, column: 3, scope: !5421)
!5427 = !DILocation(line: 80, column: 2, scope: !5421)
!5428 = !DILocation(line: 0, scope: !5413)
!5429 = !DILocation(line: 85, column: 21, scope: !5413)
!5430 = !{i32 0, i32 65536}
!5431 = !DILocation(line: 87, column: 3, scope: !5413)
!5432 = !DILocation(line: 88, column: 3, scope: !5413)
!5433 = !DILocation(line: 89, column: 3, scope: !5413)
!5434 = !DILocation(line: 90, column: 3, scope: !5413)
!5435 = !DILocation(line: 96, column: 1, scope: !5403)
!5436 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2573, file: !2573, line: 187, type: !5349, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5437)
!5437 = !{!5438, !5439, !5440}
!5438 = !DILocalVariable(name: "h", arg: 1, scope: !5436, file: !2573, line: 187, type: !2586)
!5439 = !DILocalVariable(name: "c", arg: 2, scope: !5436, file: !2573, line: 187, type: !2591)
!5440 = !DILocalVariable(name: "prev", arg: 3, scope: !5436, file: !2573, line: 188, type: !2591)
!5441 = !DILocation(line: 0, scope: !5436)
!5442 = !DILocation(line: 190, column: 2, scope: !5436)
!5443 = !DILocation(line: 191, column: 1, scope: !5436)
!5444 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2573, file: !2573, line: 193, type: !5349, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5445)
!5445 = !{!5446, !5447, !5448}
!5446 = !DILocalVariable(name: "h", arg: 1, scope: !5444, file: !2573, line: 193, type: !2586)
!5447 = !DILocalVariable(name: "c", arg: 2, scope: !5444, file: !2573, line: 193, type: !2591)
!5448 = !DILocalVariable(name: "next", arg: 3, scope: !5444, file: !2573, line: 194, type: !2591)
!5449 = !DILocation(line: 0, scope: !5444)
!5450 = !DILocation(line: 196, column: 2, scope: !5444)
!5451 = !DILocation(line: 197, column: 1, scope: !5444)
!5452 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2573, file: !2573, line: 177, type: !5272, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5453)
!5453 = !{!5454, !5455}
!5454 = !DILocalVariable(name: "h", arg: 1, scope: !5452, file: !2573, line: 177, type: !2586)
!5455 = !DILocalVariable(name: "c", arg: 2, scope: !5452, file: !2573, line: 177, type: !2591)
!5456 = !DILocation(line: 0, scope: !5452)
!5457 = !DILocation(line: 179, column: 9, scope: !5452)
!5458 = !DILocation(line: 179, column: 2, scope: !5452)
!5459 = distinct !DISubprogram(name: "chunk_field", scope: !2573, file: !2573, line: 107, type: !5460, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5462)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!2591, !2586, !2591, !2572}
!5462 = !{!5463, !5464, !5465, !5466, !5467}
!5463 = !DILocalVariable(name: "h", arg: 1, scope: !5459, file: !2573, line: 107, type: !2586)
!5464 = !DILocalVariable(name: "c", arg: 2, scope: !5459, file: !2573, line: 107, type: !2591)
!5465 = !DILocalVariable(name: "f", arg: 3, scope: !5459, file: !2573, line: 108, type: !2572)
!5466 = !DILocalVariable(name: "buf", scope: !5459, file: !2573, line: 110, type: !2580)
!5467 = !DILocalVariable(name: "cmem", scope: !5459, file: !2573, line: 111, type: !104)
!5468 = !DILocation(line: 0, scope: !5459)
!5469 = !DILocation(line: 110, column: 22, scope: !5459)
!5470 = !DILocation(line: 111, column: 15, scope: !5459)
!5471 = !DILocation(line: 116, column: 11, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5473, file: !2573, line: 115, column: 9)
!5473 = distinct !DILexicalBlock(scope: !5459, file: !2573, line: 113, column: 6)
!5474 = !DILocation(line: 116, column: 10, scope: !5472)
!5475 = !DILocation(line: 118, column: 1, scope: !5459)
!5476 = distinct !DISubprogram(name: "chunk_buf", scope: !2573, file: !2573, line: 101, type: !5477, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5479)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!2580, !2586}
!5479 = !{!5480}
!5480 = !DILocalVariable(name: "h", arg: 1, scope: !5476, file: !2573, line: 101, type: !2586)
!5481 = !DILocation(line: 0, scope: !5476)
!5482 = !DILocation(line: 104, column: 9, scope: !5476)
!5483 = !DILocation(line: 104, column: 2, scope: !5476)
!5484 = distinct !DISubprogram(name: "chunk_set", scope: !2573, file: !2573, line: 120, type: !5485, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5487)
!5485 = !DISubroutineType(types: !5486)
!5486 = !{null, !2586, !2591, !2572, !2591}
!5487 = !{!5488, !5489, !5490, !5491, !5492, !5493}
!5488 = !DILocalVariable(name: "h", arg: 1, scope: !5484, file: !2573, line: 120, type: !2586)
!5489 = !DILocalVariable(name: "c", arg: 2, scope: !5484, file: !2573, line: 120, type: !2591)
!5490 = !DILocalVariable(name: "f", arg: 3, scope: !5484, file: !2573, line: 121, type: !2572)
!5491 = !DILocalVariable(name: "val", arg: 4, scope: !5484, file: !2573, line: 121, type: !2591)
!5492 = !DILocalVariable(name: "buf", scope: !5484, file: !2573, line: 125, type: !2580)
!5493 = !DILocalVariable(name: "cmem", scope: !5484, file: !2573, line: 126, type: !104)
!5494 = !DILocation(line: 0, scope: !5484)
!5495 = !DILocation(line: 125, column: 22, scope: !5484)
!5496 = !DILocation(line: 126, column: 15, scope: !5484)
!5497 = !DILocation(line: 133, column: 27, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !2573, line: 131, column: 9)
!5499 = distinct !DILexicalBlock(scope: !5484, file: !2573, line: 128, column: 6)
!5500 = !DILocation(line: 133, column: 4, scope: !5498)
!5501 = !DILocation(line: 133, column: 3, scope: !5498)
!5502 = !DILocation(line: 133, column: 25, scope: !5498)
!5503 = !DILocation(line: 135, column: 1, scope: !5484)
!5504 = distinct !DISubprogram(name: "min_chunk_size", scope: !2573, file: !2573, line: 240, type: !5505, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5507)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{!5356, !2586}
!5507 = !{!5508}
!5508 = !DILocalVariable(name: "h", arg: 1, scope: !5504, file: !2573, line: 240, type: !2586)
!5509 = !DILocation(line: 0, scope: !5504)
!5510 = !DILocation(line: 242, column: 9, scope: !5504)
!5511 = !DILocation(line: 242, column: 2, scope: !5504)
!5512 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2573, file: !2573, line: 235, type: !5513, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5515)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!5356, !2586, !111}
!5515 = !{!5516, !5517}
!5516 = !DILocalVariable(name: "h", arg: 1, scope: !5512, file: !2573, line: 235, type: !2586)
!5517 = !DILocalVariable(name: "bytes", arg: 2, scope: !5512, file: !2573, line: 235, type: !111)
!5518 = !DILocation(line: 0, scope: !5512)
!5519 = !DILocation(line: 237, column: 39, scope: !5512)
!5520 = !DILocation(line: 237, column: 9, scope: !5512)
!5521 = !DILocation(line: 237, column: 2, scope: !5512)
!5522 = distinct !DISubprogram(name: "chunksz", scope: !2573, file: !2573, line: 230, type: !5523, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5525)
!5523 = !DISubroutineType(types: !5524)
!5524 = !{!5356, !111}
!5525 = !{!5526}
!5526 = !DILocalVariable(name: "bytes", arg: 1, scope: !5522, file: !2573, line: 230, type: !111)
!5527 = !DILocation(line: 0, scope: !5522)
!5528 = !DILocation(line: 232, column: 29, scope: !5522)
!5529 = !DILocation(line: 232, column: 35, scope: !5522)
!5530 = !DILocation(line: 232, column: 2, scope: !5522)
!5531 = distinct !DISubprogram(name: "set_chunk_size", scope: !2573, file: !2573, line: 172, type: !5532, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5534)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{null, !2586, !2591, !5356}
!5534 = !{!5535, !5536, !5537}
!5535 = !DILocalVariable(name: "h", arg: 1, scope: !5531, file: !2573, line: 172, type: !2586)
!5536 = !DILocalVariable(name: "c", arg: 2, scope: !5531, file: !2573, line: 172, type: !2591)
!5537 = !DILocalVariable(name: "size", arg: 3, scope: !5531, file: !2573, line: 172, type: !5356)
!5538 = !DILocation(line: 0, scope: !5531)
!5539 = !DILocation(line: 174, column: 38, scope: !5531)
!5540 = !DILocation(line: 174, column: 2, scope: !5531)
!5541 = !DILocation(line: 175, column: 1, scope: !5531)
!5542 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2573, file: !2573, line: 209, type: !5532, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5543)
!5543 = !{!5544, !5545, !5546}
!5544 = !DILocalVariable(name: "h", arg: 1, scope: !5542, file: !2573, line: 209, type: !2586)
!5545 = !DILocalVariable(name: "c", arg: 2, scope: !5542, file: !2573, line: 209, type: !2591)
!5546 = !DILocalVariable(name: "size", arg: 3, scope: !5542, file: !2573, line: 210, type: !5356)
!5547 = !DILocation(line: 0, scope: !5542)
!5548 = !DILocation(line: 212, column: 2, scope: !5542)
!5549 = !DILocation(line: 213, column: 1, scope: !5542)
!5550 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5211, file: !5211, line: 34, type: !5404, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5551)
!5551 = !{!5552, !5553, !5554, !5555, !5556, !5559}
!5552 = !DILocalVariable(name: "h", arg: 1, scope: !5550, file: !5211, line: 34, type: !2586)
!5553 = !DILocalVariable(name: "c", arg: 2, scope: !5550, file: !5211, line: 34, type: !2591)
!5554 = !DILocalVariable(name: "bidx", arg: 3, scope: !5550, file: !5211, line: 34, type: !105)
!5555 = !DILocalVariable(name: "b", scope: !5550, file: !5211, line: 36, type: !5411)
!5556 = !DILocalVariable(name: "first", scope: !5557, file: !5211, line: 47, type: !2591)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !5211, line: 46, column: 9)
!5558 = distinct !DILexicalBlock(scope: !5550, file: !5211, line: 42, column: 6)
!5559 = !DILocalVariable(name: "second", scope: !5557, file: !5211, line: 48, type: !2591)
!5560 = !DILocation(line: 0, scope: !5550)
!5561 = !DILocation(line: 36, column: 29, scope: !5550)
!5562 = !DILocation(line: 42, column: 6, scope: !5558)
!5563 = !DILocation(line: 42, column: 28, scope: !5558)
!5564 = !DILocation(line: 42, column: 6, scope: !5550)
!5565 = !DILocation(line: 44, column: 24, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5558, file: !5211, line: 42, column: 34)
!5567 = !DILocation(line: 44, column: 23, scope: !5566)
!5568 = !DILocation(line: 44, column: 6, scope: !5566)
!5569 = !DILocation(line: 44, column: 20, scope: !5566)
!5570 = !DILocation(line: 45, column: 6, scope: !5566)
!5571 = !DILocation(line: 45, column: 11, scope: !5566)
!5572 = !DILocation(line: 46, column: 2, scope: !5566)
!5573 = !DILocation(line: 47, column: 21, scope: !5557)
!5574 = !DILocation(line: 0, scope: !5557)
!5575 = !DILocation(line: 50, column: 6, scope: !5557)
!5576 = !DILocation(line: 50, column: 11, scope: !5557)
!5577 = !DILocation(line: 51, column: 3, scope: !5557)
!5578 = !DILocation(line: 52, column: 3, scope: !5557)
!5579 = !DILocation(line: 58, column: 1, scope: !5550)
!5580 = distinct !DISubprogram(name: "next_free_chunk", scope: !2573, file: !2573, line: 182, type: !5272, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5581)
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "h", arg: 1, scope: !5580, file: !2573, line: 182, type: !2586)
!5583 = !DILocalVariable(name: "c", arg: 2, scope: !5580, file: !2573, line: 182, type: !2591)
!5584 = !DILocation(line: 0, scope: !5580)
!5585 = !DILocation(line: 184, column: 9, scope: !5580)
!5586 = !DILocation(line: 184, column: 2, scope: !5580)
!5587 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5211, file: !5211, line: 200, type: !5588, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5590)
!5588 = !DISubroutineType(types: !5589)
!5589 = !{!111, !5214, !104}
!5590 = !{!5591, !5592, !5593, !5594, !5595, !5596, !5597}
!5591 = !DILocalVariable(name: "heap", arg: 1, scope: !5587, file: !5211, line: 200, type: !5214)
!5592 = !DILocalVariable(name: "mem", arg: 2, scope: !5587, file: !5211, line: 200, type: !104)
!5593 = !DILocalVariable(name: "h", scope: !5587, file: !5211, line: 202, type: !2586)
!5594 = !DILocalVariable(name: "c", scope: !5587, file: !5211, line: 203, type: !2591)
!5595 = !DILocalVariable(name: "addr", scope: !5587, file: !5211, line: 204, type: !111)
!5596 = !DILocalVariable(name: "chunk_base", scope: !5587, file: !5211, line: 205, type: !111)
!5597 = !DILocalVariable(name: "chunk_sz", scope: !5587, file: !5211, line: 206, type: !111)
!5598 = !DILocation(line: 0, scope: !5587)
!5599 = !DILocation(line: 202, column: 27, scope: !5587)
!5600 = !DILocation(line: 203, column: 16, scope: !5587)
!5601 = !DILocation(line: 204, column: 16, scope: !5587)
!5602 = !DILocation(line: 205, column: 31, scope: !5587)
!5603 = !DILocation(line: 205, column: 22, scope: !5587)
!5604 = !DILocation(line: 206, column: 20, scope: !5587)
!5605 = !DILocation(line: 206, column: 37, scope: !5587)
!5606 = !DILocation(line: 208, column: 26, scope: !5587)
!5607 = !DILocation(line: 208, column: 18, scope: !5587)
!5608 = !DILocation(line: 208, column: 2, scope: !5587)
!5609 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5211, file: !5211, line: 263, type: !5610, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{!104, !5214, !111}
!5612 = !{!5613, !5614, !5615, !5616, !5617, !5618}
!5613 = !DILocalVariable(name: "heap", arg: 1, scope: !5609, file: !5211, line: 263, type: !5214)
!5614 = !DILocalVariable(name: "bytes", arg: 2, scope: !5609, file: !5211, line: 263, type: !111)
!5615 = !DILocalVariable(name: "h", scope: !5609, file: !5211, line: 265, type: !2586)
!5616 = !DILocalVariable(name: "mem", scope: !5609, file: !5211, line: 266, type: !104)
!5617 = !DILocalVariable(name: "chunk_sz", scope: !5609, file: !5211, line: 272, type: !5356)
!5618 = !DILocalVariable(name: "c", scope: !5609, file: !5211, line: 273, type: !2591)
!5619 = !DILocation(line: 0, scope: !5609)
!5620 = !DILocation(line: 265, column: 27, scope: !5609)
!5621 = !DILocation(line: 268, column: 12, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5609, file: !5211, line: 268, column: 6)
!5623 = !DILocation(line: 268, column: 18, scope: !5622)
!5624 = !DILocation(line: 268, column: 21, scope: !5622)
!5625 = !DILocation(line: 268, column: 6, scope: !5609)
!5626 = !DILocation(line: 272, column: 23, scope: !5609)
!5627 = !DILocation(line: 273, column: 16, scope: !5609)
!5628 = !DILocation(line: 274, column: 8, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5609, file: !5211, line: 274, column: 6)
!5630 = !DILocation(line: 274, column: 6, scope: !5609)
!5631 = !DILocation(line: 279, column: 6, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5609, file: !5211, line: 279, column: 6)
!5633 = !DILocation(line: 279, column: 23, scope: !5632)
!5634 = !DILocation(line: 279, column: 6, scope: !5609)
!5635 = !DILocation(line: 280, column: 24, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5632, file: !5211, line: 279, column: 35)
!5637 = !DILocation(line: 280, column: 3, scope: !5636)
!5638 = !DILocation(line: 281, column: 3, scope: !5636)
!5639 = !DILocation(line: 282, column: 2, scope: !5636)
!5640 = !DILocation(line: 284, column: 2, scope: !5609)
!5641 = !DILocation(line: 286, column: 8, scope: !5609)
!5642 = !DILocation(line: 298, column: 2, scope: !5609)
!5643 = !DILocation(line: 299, column: 1, scope: !5609)
!5644 = distinct !DISubprogram(name: "size_too_big", scope: !2573, file: !2573, line: 256, type: !5645, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5647)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!492, !2586, !111}
!5647 = !{!5648, !5649}
!5648 = !DILocalVariable(name: "h", arg: 1, scope: !5644, file: !2573, line: 256, type: !2586)
!5649 = !DILocalVariable(name: "bytes", arg: 2, scope: !5644, file: !2573, line: 256, type: !111)
!5650 = !DILocation(line: 0, scope: !5644)
!5651 = !DILocation(line: 262, column: 16, scope: !5644)
!5652 = !DILocation(line: 262, column: 36, scope: !5644)
!5653 = !DILocation(line: 262, column: 30, scope: !5644)
!5654 = !DILocation(line: 262, column: 2, scope: !5644)
!5655 = distinct !DISubprogram(name: "alloc_chunk", scope: !5211, file: !5211, line: 211, type: !5656, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5658)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!2591, !2586, !5356}
!5658 = !{!5659, !5660, !5661, !5662, !5663, !5666, !5667, !5669, !5670, !5673}
!5659 = !DILocalVariable(name: "h", arg: 1, scope: !5655, file: !5211, line: 211, type: !2586)
!5660 = !DILocalVariable(name: "sz", arg: 2, scope: !5655, file: !5211, line: 211, type: !5356)
!5661 = !DILocalVariable(name: "bi", scope: !5655, file: !5211, line: 213, type: !105)
!5662 = !DILocalVariable(name: "b", scope: !5655, file: !5211, line: 214, type: !5411)
!5663 = !DILocalVariable(name: "first", scope: !5664, file: !5211, line: 233, type: !2591)
!5664 = distinct !DILexicalBlock(scope: !5665, file: !5211, line: 232, column: 15)
!5665 = distinct !DILexicalBlock(scope: !5655, file: !5211, line: 232, column: 6)
!5666 = !DILocalVariable(name: "i", scope: !5664, file: !5211, line: 234, type: !105)
!5667 = !DILocalVariable(name: "c", scope: !5668, file: !5211, line: 236, type: !2591)
!5668 = distinct !DILexicalBlock(scope: !5664, file: !5211, line: 235, column: 6)
!5669 = !DILocalVariable(name: "bmask", scope: !5655, file: !5211, line: 249, type: !113)
!5670 = !DILocalVariable(name: "minbucket", scope: !5671, file: !5211, line: 252, type: !105)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !5211, line: 251, column: 19)
!5672 = distinct !DILexicalBlock(scope: !5655, file: !5211, line: 251, column: 6)
!5673 = !DILocalVariable(name: "c", scope: !5671, file: !5211, line: 253, type: !2591)
!5674 = !DILocation(line: 0, scope: !5655)
!5675 = !DILocation(line: 213, column: 11, scope: !5655)
!5676 = !DILocation(line: 232, column: 9, scope: !5665)
!5677 = !DILocation(line: 232, column: 6, scope: !5665)
!5678 = !DILocation(line: 232, column: 6, scope: !5655)
!5679 = !DILocation(line: 236, column: 21, scope: !5668)
!5680 = !DILocation(line: 0, scope: !5664)
!5681 = !DILocation(line: 0, scope: !5668)
!5682 = !DILocation(line: 237, column: 8, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5668, file: !5211, line: 237, column: 8)
!5684 = !DILocation(line: 237, column: 25, scope: !5683)
!5685 = !DILocation(line: 237, column: 8, scope: !5668)
!5686 = !DILocation(line: 238, column: 5, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5683, file: !5211, line: 237, column: 32)
!5688 = !DILocation(line: 241, column: 14, scope: !5668)
!5689 = !DILocation(line: 241, column: 12, scope: !5668)
!5690 = !DILocation(line: 243, column: 12, scope: !5664)
!5691 = !DILocation(line: 243, column: 16, scope: !5664)
!5692 = distinct !{!5692, !5693, !5694}
!5693 = !DILocation(line: 235, column: 3, scope: !5664)
!5694 = !DILocation(line: 243, column: 35, scope: !5664)
!5695 = !DILocation(line: 249, column: 22, scope: !5655)
!5696 = !DILocation(line: 249, column: 39, scope: !5655)
!5697 = !DILocation(line: 249, column: 36, scope: !5655)
!5698 = !DILocation(line: 251, column: 12, scope: !5672)
!5699 = !DILocation(line: 251, column: 6, scope: !5655)
!5700 = !DILocation(line: 252, column: 19, scope: !5671)
!5701 = !DILocation(line: 0, scope: !5671)
!5702 = !DILocation(line: 253, column: 39, scope: !5671)
!5703 = !DILocation(line: 255, column: 3, scope: !5671)
!5704 = !DILocation(line: 261, column: 1, scope: !5655)
!5705 = distinct !DISubprogram(name: "split_chunks", scope: !5211, file: !5211, line: 109, type: !5349, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5706)
!5706 = !{!5707, !5708, !5709, !5710, !5711, !5712}
!5707 = !DILocalVariable(name: "h", arg: 1, scope: !5705, file: !5211, line: 109, type: !2586)
!5708 = !DILocalVariable(name: "lc", arg: 2, scope: !5705, file: !5211, line: 109, type: !2591)
!5709 = !DILocalVariable(name: "rc", arg: 3, scope: !5705, file: !5211, line: 109, type: !2591)
!5710 = !DILocalVariable(name: "sz0", scope: !5705, file: !5211, line: 114, type: !5356)
!5711 = !DILocalVariable(name: "lsz", scope: !5705, file: !5211, line: 115, type: !5356)
!5712 = !DILocalVariable(name: "rsz", scope: !5705, file: !5211, line: 116, type: !5356)
!5713 = !DILocation(line: 0, scope: !5705)
!5714 = !DILocation(line: 114, column: 18, scope: !5705)
!5715 = !DILocation(line: 115, column: 21, scope: !5705)
!5716 = !DILocation(line: 116, column: 22, scope: !5705)
!5717 = !DILocation(line: 118, column: 2, scope: !5705)
!5718 = !DILocation(line: 119, column: 2, scope: !5705)
!5719 = !DILocation(line: 120, column: 2, scope: !5705)
!5720 = !DILocation(line: 121, column: 25, scope: !5705)
!5721 = !DILocation(line: 121, column: 2, scope: !5705)
!5722 = !DILocation(line: 122, column: 1, scope: !5705)
!5723 = distinct !DISubprogram(name: "chunk_mem", scope: !5211, file: !5211, line: 24, type: !5724, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5726)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!104, !2586, !2591}
!5726 = !{!5727, !5728, !5729, !5730}
!5727 = !DILocalVariable(name: "h", arg: 1, scope: !5723, file: !5211, line: 24, type: !2586)
!5728 = !DILocalVariable(name: "c", arg: 2, scope: !5723, file: !5211, line: 24, type: !2591)
!5729 = !DILocalVariable(name: "buf", scope: !5723, file: !5211, line: 26, type: !2580)
!5730 = !DILocalVariable(name: "ret", scope: !5723, file: !5211, line: 27, type: !432)
!5731 = !DILocation(line: 0, scope: !5723)
!5732 = !DILocation(line: 26, column: 22, scope: !5723)
!5733 = !DILocation(line: 27, column: 38, scope: !5723)
!5734 = !DILocation(line: 31, column: 2, scope: !5723)
!5735 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5211, file: !5211, line: 301, type: !5736, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5738)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{!104, !5214, !111, !111}
!5738 = !{!5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750}
!5739 = !DILocalVariable(name: "heap", arg: 1, scope: !5735, file: !5211, line: 301, type: !5214)
!5740 = !DILocalVariable(name: "align", arg: 2, scope: !5735, file: !5211, line: 301, type: !111)
!5741 = !DILocalVariable(name: "bytes", arg: 3, scope: !5735, file: !5211, line: 301, type: !111)
!5742 = !DILocalVariable(name: "h", scope: !5735, file: !5211, line: 303, type: !2586)
!5743 = !DILocalVariable(name: "gap", scope: !5735, file: !5211, line: 304, type: !111)
!5744 = !DILocalVariable(name: "rew", scope: !5735, file: !5211, line: 304, type: !111)
!5745 = !DILocalVariable(name: "padded_sz", scope: !5735, file: !5211, line: 335, type: !5356)
!5746 = !DILocalVariable(name: "c0", scope: !5735, file: !5211, line: 336, type: !2591)
!5747 = !DILocalVariable(name: "mem", scope: !5735, file: !5211, line: 341, type: !432)
!5748 = !DILocalVariable(name: "end", scope: !5735, file: !5211, line: 345, type: !2580)
!5749 = !DILocalVariable(name: "c", scope: !5735, file: !5211, line: 348, type: !2591)
!5750 = !DILocalVariable(name: "c_end", scope: !5735, file: !5211, line: 349, type: !2591)
!5751 = !DILocation(line: 0, scope: !5735)
!5752 = !DILocation(line: 303, column: 27, scope: !5735)
!5753 = !DILocation(line: 313, column: 16, scope: !5735)
!5754 = !DILocation(line: 313, column: 14, scope: !5735)
!5755 = !DILocation(line: 314, column: 12, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 314, column: 6)
!5757 = !DILocation(line: 314, column: 6, scope: !5735)
!5758 = !DILocation(line: 315, column: 9, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5756, file: !5211, line: 314, column: 20)
!5760 = !DILocation(line: 316, column: 9, scope: !5759)
!5761 = !DILocation(line: 318, column: 13, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !5211, line: 318, column: 7)
!5763 = distinct !DILexicalBlock(scope: !5756, file: !5211, line: 317, column: 9)
!5764 = !DILocation(line: 318, column: 7, scope: !5763)
!5765 = !DILocation(line: 319, column: 11, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5762, file: !5211, line: 318, column: 39)
!5767 = !DILocation(line: 319, column: 4, scope: !5766)
!5768 = !DILocation(line: 0, scope: !5756)
!5769 = !DILocation(line: 324, column: 2, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !5211, line: 324, column: 2)
!5771 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 324, column: 2)
!5772 = !DILocation(line: 324, column: 2, scope: !5771)
!5773 = !DILocation(line: 324, column: 2, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !5211, line: 324, column: 2)
!5775 = !DILocation(line: 326, column: 12, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 326, column: 6)
!5777 = !DILocation(line: 326, column: 17, scope: !5776)
!5778 = !DILocation(line: 326, column: 20, scope: !5776)
!5779 = !DILocation(line: 326, column: 6, scope: !5735)
!5780 = !DILocation(line: 335, column: 50, scope: !5735)
!5781 = !DILocation(line: 335, column: 58, scope: !5735)
!5782 = !DILocation(line: 335, column: 24, scope: !5735)
!5783 = !DILocation(line: 336, column: 17, scope: !5735)
!5784 = !DILocation(line: 338, column: 9, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 338, column: 6)
!5786 = !DILocation(line: 338, column: 6, scope: !5735)
!5787 = !DILocation(line: 341, column: 17, scope: !5735)
!5788 = !DILocation(line: 344, column: 20, scope: !5735)
!5789 = !DILocation(line: 344, column: 8, scope: !5735)
!5790 = !DILocation(line: 344, column: 47, scope: !5735)
!5791 = !DILocation(line: 345, column: 39, scope: !5735)
!5792 = !DILocation(line: 348, column: 16, scope: !5735)
!5793 = !DILocation(line: 349, column: 26, scope: !5735)
!5794 = !DILocation(line: 349, column: 24, scope: !5735)
!5795 = !DILocation(line: 353, column: 8, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 353, column: 6)
!5797 = !DILocation(line: 353, column: 6, scope: !5735)
!5798 = !DILocation(line: 354, column: 3, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5796, file: !5211, line: 353, column: 14)
!5800 = !DILocation(line: 355, column: 3, scope: !5799)
!5801 = !DILocation(line: 356, column: 2, scope: !5799)
!5802 = !DILocation(line: 359, column: 6, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5735, file: !5211, line: 359, column: 6)
!5804 = !DILocation(line: 359, column: 24, scope: !5803)
!5805 = !DILocation(line: 359, column: 6, scope: !5735)
!5806 = !DILocation(line: 360, column: 3, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !5211, line: 359, column: 33)
!5808 = !DILocation(line: 361, column: 3, scope: !5807)
!5809 = !DILocation(line: 362, column: 2, scope: !5807)
!5810 = !DILocation(line: 364, column: 2, scope: !5735)
!5811 = !DILocation(line: 377, column: 1, scope: !5735)
!5812 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5211, file: !5211, line: 379, type: !5813, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5815)
!5813 = !DISubroutineType(types: !5814)
!5814 = !{!104, !5214, !104, !111, !111}
!5815 = !{!5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5831, !5832}
!5816 = !DILocalVariable(name: "heap", arg: 1, scope: !5812, file: !5211, line: 379, type: !5214)
!5817 = !DILocalVariable(name: "ptr", arg: 2, scope: !5812, file: !5211, line: 379, type: !104)
!5818 = !DILocalVariable(name: "align", arg: 3, scope: !5812, file: !5211, line: 380, type: !111)
!5819 = !DILocalVariable(name: "bytes", arg: 4, scope: !5812, file: !5211, line: 380, type: !111)
!5820 = !DILocalVariable(name: "h", scope: !5812, file: !5211, line: 382, type: !2586)
!5821 = !DILocalVariable(name: "c", scope: !5812, file: !5211, line: 399, type: !2591)
!5822 = !DILocalVariable(name: "rc", scope: !5812, file: !5211, line: 400, type: !2591)
!5823 = !DILocalVariable(name: "align_gap", scope: !5812, file: !5211, line: 401, type: !111)
!5824 = !DILocalVariable(name: "chunks_need", scope: !5812, file: !5211, line: 402, type: !5356)
!5825 = !DILocalVariable(name: "split_size", scope: !5826, file: !5211, line: 435, type: !5356)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !5211, line: 433, column: 61)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !5211, line: 432, column: 13)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !5211, line: 409, column: 13)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !5211, line: 406, column: 13)
!5830 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 404, column: 6)
!5831 = !DILocalVariable(name: "ptr2", scope: !5812, file: !5211, line: 474, type: !104)
!5832 = !DILocalVariable(name: "prev_size", scope: !5833, file: !5211, line: 477, type: !111)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !5211, line: 476, column: 20)
!5834 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 476, column: 6)
!5835 = !DILocation(line: 0, scope: !5812)
!5836 = !DILocation(line: 382, column: 27, scope: !5812)
!5837 = !DILocation(line: 385, column: 10, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 385, column: 6)
!5839 = !DILocation(line: 385, column: 6, scope: !5812)
!5840 = !DILocation(line: 386, column: 10, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !5211, line: 385, column: 19)
!5842 = !DILocation(line: 386, column: 3, scope: !5841)
!5843 = !DILocation(line: 388, column: 12, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 388, column: 6)
!5845 = !DILocation(line: 388, column: 6, scope: !5812)
!5846 = !DILocation(line: 389, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5844, file: !5211, line: 388, column: 18)
!5848 = !DILocation(line: 390, column: 3, scope: !5847)
!5849 = !DILocation(line: 393, column: 2, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !5211, line: 393, column: 2)
!5851 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 393, column: 2)
!5852 = !DILocation(line: 393, column: 2, scope: !5851)
!5853 = !DILocation(line: 393, column: 2, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5850, file: !5211, line: 393, column: 2)
!5855 = !DILocation(line: 395, column: 6, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5812, file: !5211, line: 395, column: 6)
!5857 = !DILocation(line: 395, column: 6, scope: !5812)
!5858 = !DILocation(line: 399, column: 16, scope: !5812)
!5859 = !DILocation(line: 400, column: 17, scope: !5812)
!5860 = !DILocation(line: 401, column: 49, scope: !5812)
!5861 = !DILocation(line: 401, column: 36, scope: !5812)
!5862 = !DILocation(line: 402, column: 52, scope: !5812)
!5863 = !DILocation(line: 402, column: 26, scope: !5812)
!5864 = !DILocation(line: 404, column: 6, scope: !5830)
!5865 = !DILocation(line: 404, column: 12, scope: !5830)
!5866 = !DILocation(line: 406, column: 13, scope: !5829)
!5867 = !DILocation(line: 406, column: 30, scope: !5829)
!5868 = !DILocation(line: 406, column: 13, scope: !5830)
!5869 = !DILocation(line: 409, column: 30, scope: !5828)
!5870 = !DILocation(line: 409, column: 13, scope: !5829)
!5871 = !DILocation(line: 420, column: 24, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5828, file: !5211, line: 409, column: 45)
!5873 = !DILocation(line: 420, column: 3, scope: !5872)
!5874 = !DILocation(line: 421, column: 3, scope: !5872)
!5875 = !DILocation(line: 422, column: 3, scope: !5872)
!5876 = !DILocation(line: 431, column: 3, scope: !5872)
!5877 = !DILocation(line: 432, column: 14, scope: !5827)
!5878 = !DILocation(line: 432, column: 32, scope: !5827)
!5879 = !DILocation(line: 433, column: 26, scope: !5827)
!5880 = !DILocation(line: 433, column: 24, scope: !5827)
!5881 = !DILocation(line: 433, column: 44, scope: !5827)
!5882 = !DILocation(line: 432, column: 13, scope: !5828)
!5883 = !DILocation(line: 435, column: 38, scope: !5826)
!5884 = !DILocation(line: 0, scope: !5826)
!5885 = !DILocation(line: 445, column: 3, scope: !5826)
!5886 = !DILocation(line: 447, column: 20, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5826, file: !5211, line: 447, column: 7)
!5888 = !DILocation(line: 447, column: 18, scope: !5887)
!5889 = !DILocation(line: 447, column: 7, scope: !5826)
!5890 = !DILocation(line: 448, column: 27, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5887, file: !5211, line: 447, column: 39)
!5892 = !DILocation(line: 448, column: 4, scope: !5891)
!5893 = !DILocation(line: 449, column: 4, scope: !5891)
!5894 = !DILocation(line: 450, column: 3, scope: !5891)
!5895 = !DILocation(line: 452, column: 3, scope: !5826)
!5896 = !DILocation(line: 453, column: 3, scope: !5826)
!5897 = !DILocation(line: 474, column: 15, scope: !5812)
!5898 = !DILocation(line: 476, column: 11, scope: !5834)
!5899 = !DILocation(line: 476, column: 6, scope: !5812)
!5900 = !DILocation(line: 477, column: 42, scope: !5833)
!5901 = !DILocation(line: 477, column: 22, scope: !5833)
!5902 = !DILocation(line: 477, column: 60, scope: !5833)
!5903 = !DILocation(line: 0, scope: !5833)
!5904 = !DILocation(line: 479, column: 21, scope: !5833)
!5905 = !DILocation(line: 479, column: 3, scope: !5833)
!5906 = !DILocation(line: 480, column: 3, scope: !5833)
!5907 = !DILocation(line: 481, column: 2, scope: !5833)
!5908 = !DILocation(line: 483, column: 1, scope: !5812)
!5909 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2573, file: !2573, line: 245, type: !5910, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5912)
!5910 = !DISubroutineType(types: !5911)
!5911 = !{!111, !2586, !5356}
!5912 = !{!5913, !5914}
!5913 = !DILocalVariable(name: "h", arg: 1, scope: !5909, file: !2573, line: 245, type: !2586)
!5914 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5909, file: !2573, line: 245, type: !5356)
!5915 = !DILocation(line: 0, scope: !5909)
!5916 = !DILocation(line: 247, column: 20, scope: !5909)
!5917 = !DILocation(line: 247, column: 33, scope: !5909)
!5918 = !DILocation(line: 247, column: 2, scope: !5909)
!5919 = distinct !DISubprogram(name: "sys_heap_init", scope: !5211, file: !5211, line: 485, type: !5920, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !5922)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{null, !5214, !104, !111}
!5922 = !{!5923, !5924, !5925, !5926, !5927, !5928, !5929, !5930, !5931, !5932}
!5923 = !DILocalVariable(name: "heap", arg: 1, scope: !5919, file: !5211, line: 485, type: !5214)
!5924 = !DILocalVariable(name: "mem", arg: 2, scope: !5919, file: !5211, line: 485, type: !104)
!5925 = !DILocalVariable(name: "bytes", arg: 3, scope: !5919, file: !5211, line: 485, type: !111)
!5926 = !DILocalVariable(name: "addr", scope: !5919, file: !5211, line: 502, type: !22)
!5927 = !DILocalVariable(name: "end", scope: !5919, file: !5211, line: 503, type: !22)
!5928 = !DILocalVariable(name: "heap_sz", scope: !5919, file: !5211, line: 504, type: !5356)
!5929 = !DILocalVariable(name: "h", scope: !5919, file: !5211, line: 509, type: !2586)
!5930 = !DILocalVariable(name: "nb_buckets", scope: !5919, file: !5211, line: 520, type: !105)
!5931 = !DILocalVariable(name: "chunk0_size", scope: !5919, file: !5211, line: 521, type: !5356)
!5932 = !DILocalVariable(name: "i", scope: !5933, file: !5211, line: 526, type: !105)
!5933 = distinct !DILexicalBlock(scope: !5919, file: !5211, line: 526, column: 2)
!5934 = !DILocation(line: 0, scope: !5919)
!5935 = !DILocation(line: 491, column: 3, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !5211, line: 491, column: 3)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !5211, line: 491, column: 3)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !5211, line: 489, column: 46)
!5939 = distinct !DILexicalBlock(scope: !5919, file: !5211, line: 489, column: 6)
!5940 = !DILocation(line: 491, column: 3, scope: !5937)
!5941 = !DILocation(line: 491, column: 3, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5936, file: !5211, line: 491, column: 3)
!5943 = !DILocation(line: 498, column: 2, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !5211, line: 498, column: 2)
!5945 = distinct !DILexicalBlock(scope: !5919, file: !5211, line: 498, column: 2)
!5946 = !DILocation(line: 498, column: 2, scope: !5945)
!5947 = !DILocation(line: 498, column: 2, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5944, file: !5211, line: 498, column: 2)
!5949 = !DILocation(line: 499, column: 8, scope: !5919)
!5950 = !DILocation(line: 502, column: 19, scope: !5919)
!5951 = !DILocation(line: 503, column: 18, scope: !5919)
!5952 = !DILocation(line: 504, column: 27, scope: !5919)
!5953 = !DILocation(line: 504, column: 35, scope: !5919)
!5954 = !DILocation(line: 507, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !5211, line: 507, column: 2)
!5956 = distinct !DILexicalBlock(scope: !5919, file: !5211, line: 507, column: 2)
!5957 = !DILocation(line: 507, column: 2, scope: !5956)
!5958 = !DILocation(line: 507, column: 2, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5955, file: !5211, line: 507, column: 2)
!5960 = !DILocation(line: 509, column: 21, scope: !5919)
!5961 = !DILocation(line: 510, column: 8, scope: !5919)
!5962 = !DILocation(line: 510, column: 13, scope: !5919)
!5963 = !DILocation(line: 511, column: 5, scope: !5919)
!5964 = !DILocation(line: 511, column: 15, scope: !5919)
!5965 = !DILocation(line: 512, column: 5, scope: !5919)
!5966 = !DILocation(line: 512, column: 19, scope: !5919)
!5967 = !DILocation(line: 520, column: 19, scope: !5919)
!5968 = !DILocation(line: 522, column: 21, scope: !5919)
!5969 = !DILocation(line: 521, column: 56, scope: !5919)
!5970 = !DILocation(line: 521, column: 26, scope: !5919)
!5971 = !DILocation(line: 524, column: 2, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !5211, line: 524, column: 2)
!5973 = distinct !DILexicalBlock(scope: !5919, file: !5211, line: 524, column: 2)
!5974 = !DILocation(line: 524, column: 2, scope: !5973)
!5975 = !DILocation(line: 0, scope: !5933)
!5976 = !DILocation(line: 526, column: 20, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5933, file: !5211, line: 526, column: 2)
!5978 = !DILocation(line: 526, column: 2, scope: !5933)
!5979 = !DILocation(line: 524, column: 2, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5972, file: !5211, line: 524, column: 2)
!5981 = !DILocation(line: 531, column: 2, scope: !5919)
!5982 = !DILocation(line: 532, column: 2, scope: !5919)
!5983 = !DILocation(line: 533, column: 2, scope: !5919)
!5984 = !DILocation(line: 536, column: 41, scope: !5919)
!5985 = !DILocation(line: 536, column: 2, scope: !5919)
!5986 = !DILocation(line: 537, column: 2, scope: !5919)
!5987 = !DILocation(line: 540, column: 2, scope: !5919)
!5988 = !DILocation(line: 541, column: 2, scope: !5919)
!5989 = !DILocation(line: 542, column: 2, scope: !5919)
!5990 = !DILocation(line: 544, column: 2, scope: !5919)
!5991 = !DILocation(line: 545, column: 1, scope: !5919)
!5992 = !DILocation(line: 527, column: 17, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5977, file: !5211, line: 526, column: 39)
!5994 = !DILocation(line: 527, column: 22, scope: !5993)
!5995 = !DILocation(line: 526, column: 35, scope: !5977)
!5996 = distinct !{!5996, !5978, !5997}
!5997 = !DILocation(line: 528, column: 2, scope: !5933)
!5998 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2606, file: !2606, line: 1338, type: !5999, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6007)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{!105, !4367, !104, !269, !6001, !113}
!6001 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3985, line: 99, baseType: !6002)
!6002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3985, line: 40, baseType: !6003)
!6003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2606, baseType: !6004)
!6004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6005)
!6005 = !{!6006}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6004, file: !2606, baseType: !104, size: 32)
!6007 = !{!6008, !6009, !6010, !6011, !6012, !6013, !6017, !6018, !6019, !6021, !6026, !6069, !6072, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6084, !6085, !6086, !6090, !6093, !6095, !6098, !6099, !6100, !6105, !6111, !6114, !6118, !6124, !6128, !6131, !6133, !6136}
!6008 = !DILocalVariable(name: "out", arg: 1, scope: !5998, file: !2606, line: 1338, type: !4367)
!6009 = !DILocalVariable(name: "ctx", arg: 2, scope: !5998, file: !2606, line: 1338, type: !104)
!6010 = !DILocalVariable(name: "fp", arg: 3, scope: !5998, file: !2606, line: 1338, type: !269)
!6011 = !DILocalVariable(name: "ap", arg: 4, scope: !5998, file: !2606, line: 1339, type: !6001)
!6012 = !DILocalVariable(name: "flags", arg: 5, scope: !5998, file: !2606, line: 1339, type: !113)
!6013 = !DILocalVariable(name: "buf", scope: !5998, file: !2606, line: 1341, type: !6014)
!6014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !6015)
!6015 = !{!6016}
!6016 = !DISubrange(count: 22)
!6017 = !DILocalVariable(name: "count", scope: !5998, file: !2606, line: 1342, type: !111)
!6018 = !DILocalVariable(name: "sint", scope: !5998, file: !2606, line: 1343, type: !2625)
!6019 = !DILocalVariable(name: "tagged_ap", scope: !5998, file: !2606, line: 1345, type: !6020)
!6020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!6021 = !DILocalVariable(name: "rc", scope: !6022, file: !2606, line: 1377, type: !105)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !2606, line: 1377, column: 4)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !2606, line: 1376, column: 19)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1376, column: 7)
!6025 = distinct !DILexicalBlock(scope: !5998, file: !2606, line: 1375, column: 19)
!6026 = !DILocalVariable(name: "state", scope: !6025, file: !2606, line: 1395, type: !6027)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5998, file: !2606, line: 1392, size: 192, elements: !6028)
!6028 = !{!6029, !6037}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6027, file: !2606, line: 1393, baseType: !6030, size: 64)
!6030 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2606, line: 166, size: 64, elements: !6031)
!6031 = !{!6032, !6033, !6034, !6035, !6036}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6030, file: !2606, line: 168, baseType: !2625, size: 64)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6030, file: !2606, line: 171, baseType: !2628, size: 64)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6030, file: !2606, line: 174, baseType: !426, size: 64)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6030, file: !2606, line: 177, baseType: !424, size: 64)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6030, file: !2606, line: 180, baseType: !104, size: 32)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6027, file: !2606, line: 1394, baseType: !6038, size: 96, offset: 64)
!6038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2606, line: 189, size: 96, elements: !6039)
!6039 = !{!6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6064}
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6038, file: !2606, line: 191, baseType: !492, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6038, file: !2606, line: 194, baseType: !492, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6038, file: !2606, line: 197, baseType: !492, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6038, file: !2606, line: 200, baseType: !492, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6038, file: !2606, line: 203, baseType: !492, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6038, file: !2606, line: 206, baseType: !492, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6038, file: !2606, line: 209, baseType: !492, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6038, file: !2606, line: 212, baseType: !492, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6038, file: !2606, line: 219, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6038, file: !2606, line: 222, baseType: !492, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6038, file: !2606, line: 229, baseType: !492, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6038, file: !2606, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6038, file: !2606, line: 238, baseType: !492, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6038, file: !2606, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6038, file: !2606, line: 244, baseType: !492, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6038, file: !2606, line: 247, baseType: !492, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6038, file: !2606, line: 252, baseType: !492, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6038, file: !2606, line: 257, baseType: !492, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6038, file: !2606, line: 260, baseType: !170, size: 8, offset: 24)
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6038, file: !2606, line: 262, baseType: !6060, size: 32, offset: 32)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6038, file: !2606, line: 262, size: 32, elements: !6061)
!6061 = !{!6062, !6063}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6060, file: !2606, line: 267, baseType: !105, size: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6060, file: !2606, line: 289, baseType: !105, size: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, scope: !6038, file: !2606, line: 292, baseType: !6065, size: 32, offset: 64)
!6065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6038, file: !2606, line: 292, size: 32, elements: !6066)
!6066 = !{!6067, !6068}
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6065, file: !2606, line: 297, baseType: !105, size: 32)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6065, file: !2606, line: 306, baseType: !105, size: 32)
!6069 = !DILocalVariable(name: "conv", scope: !6025, file: !2606, line: 1400, type: !6070)
!6070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6071)
!6071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6038, size: 32)
!6072 = !DILocalVariable(name: "value", scope: !6025, file: !2606, line: 1401, type: !6073)
!6073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6074)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 32)
!6075 = !DILocalVariable(name: "sp", scope: !6025, file: !2606, line: 1402, type: !269)
!6076 = !DILocalVariable(name: "width", scope: !6025, file: !2606, line: 1403, type: !105)
!6077 = !DILocalVariable(name: "precision", scope: !6025, file: !2606, line: 1404, type: !105)
!6078 = !DILocalVariable(name: "bps", scope: !6025, file: !2606, line: 1405, type: !269)
!6079 = !DILocalVariable(name: "bpe", scope: !6025, file: !2606, line: 1406, type: !269)
!6080 = !DILocalVariable(name: "sign", scope: !6025, file: !2606, line: 1407, type: !103)
!6081 = !DILocalVariable(name: "arg", scope: !6082, file: !2606, line: 1432, type: !105)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !2606, line: 1431, column: 24)
!6083 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1431, column: 7)
!6084 = !DILocalVariable(name: "specifier_cat", scope: !6025, file: !2606, line: 1468, type: !2605)
!6085 = !DILocalVariable(name: "length_mod", scope: !6025, file: !2606, line: 1470, type: !2613)
!6086 = !DILocalVariable(name: "rc", scope: !6087, file: !2606, line: 1575, type: !105)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !2606, line: 1575, column: 4)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !2606, line: 1574, column: 43)
!6089 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1574, column: 7)
!6090 = !DILocalVariable(name: "rc", scope: !6091, file: !2606, line: 1584, type: !105)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1584, column: 4)
!6092 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1582, column: 28)
!6093 = !DILocalVariable(name: "len", scope: !6094, file: !2606, line: 1589, type: !111)
!6094 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1586, column: 13)
!6095 = !DILocalVariable(name: "len", scope: !6096, file: !2606, line: 1641, type: !111)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !2606, line: 1640, column: 24)
!6097 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1640, column: 8)
!6098 = !DILocalVariable(name: "nj_len", scope: !6025, file: !2606, line: 1722, type: !111)
!6099 = !DILocalVariable(name: "pad_len", scope: !6025, file: !2606, line: 1723, type: !105)
!6100 = !DILocalVariable(name: "pad", scope: !6101, file: !2606, line: 1751, type: !103)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !2606, line: 1750, column: 26)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !2606, line: 1750, column: 8)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !2606, line: 1747, column: 18)
!6104 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1747, column: 7)
!6105 = !DILocalVariable(name: "rc", scope: !6106, file: !2606, line: 1758, type: !105)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !2606, line: 1758, column: 7)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !2606, line: 1757, column: 21)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !2606, line: 1757, column: 10)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2606, line: 1756, column: 26)
!6110 = distinct !DILexicalBlock(scope: !6101, file: !2606, line: 1756, column: 9)
!6111 = !DILocalVariable(name: "rc", scope: !6112, file: !2606, line: 1765, type: !105)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !2606, line: 1765, column: 6)
!6113 = distinct !DILexicalBlock(scope: !6101, file: !2606, line: 1764, column: 25)
!6114 = !DILocalVariable(name: "rc", scope: !6115, file: !2606, line: 1774, type: !105)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !2606, line: 1774, column: 4)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !2606, line: 1773, column: 18)
!6117 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1773, column: 7)
!6118 = !DILocalVariable(name: "rc", scope: !6119, file: !2606, line: 1819, type: !105)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !2606, line: 1819, column: 5)
!6120 = distinct !DILexicalBlock(scope: !6121, file: !2606, line: 1818, column: 44)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !2606, line: 1818, column: 8)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !2606, line: 1817, column: 10)
!6123 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1777, column: 7)
!6124 = !DILocalVariable(name: "rc", scope: !6125, file: !2606, line: 1823, type: !105)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !2606, line: 1823, column: 5)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !2606, line: 1822, column: 26)
!6127 = distinct !DILexicalBlock(scope: !6122, file: !2606, line: 1822, column: 8)
!6128 = !DILocalVariable(name: "rc", scope: !6129, file: !2606, line: 1828, type: !105)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !2606, line: 1828, column: 5)
!6130 = distinct !DILexicalBlock(scope: !6122, file: !2606, line: 1827, column: 26)
!6131 = !DILocalVariable(name: "rc", scope: !6132, file: !2606, line: 1831, type: !105)
!6132 = distinct !DILexicalBlock(scope: !6122, file: !2606, line: 1831, column: 4)
!6133 = !DILocalVariable(name: "rc", scope: !6134, file: !2606, line: 1836, type: !105)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !2606, line: 1836, column: 4)
!6135 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1835, column: 21)
!6136 = !DILabel(scope: !6092, name: "prec_int_pad0", file: !2606, line: 1634)
!6137 = !DILocation(line: 0, scope: !5998)
!6138 = !DILocation(line: 1341, column: 2, scope: !5998)
!6139 = !DILocation(line: 1341, column: 7, scope: !5998)
!6140 = !DILocation(line: 1375, column: 2, scope: !5998)
!6141 = !DILocation(line: 1342, column: 9, scope: !5998)
!6142 = !DILocation(line: 1375, column: 9, scope: !5998)
!6143 = !DILocation(line: 1377, column: 4, scope: !6022)
!6144 = !DILocation(line: 0, scope: !6022)
!6145 = !DILocation(line: 1377, column: 4, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6022, file: !2606, line: 1377, column: 4)
!6147 = distinct !{!6147, !6140, !6148}
!6148 = !DILocation(line: 1839, column: 2, scope: !5998)
!6149 = !DILocation(line: 1392, column: 3, scope: !6025)
!6150 = !DILocation(line: 1395, column: 5, scope: !6025)
!6151 = !DILocation(line: 0, scope: !6025)
!6152 = !DILocation(line: 1409, column: 8, scope: !6025)
!6153 = !DILocation(line: 1414, column: 13, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1414, column: 7)
!6155 = !DILocation(line: 1414, column: 7, scope: !6025)
!6156 = !DILocation(line: 1415, column: 12, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6154, file: !2606, line: 1414, column: 25)
!6158 = !DILocation(line: 1417, column: 14, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6157, file: !2606, line: 1417, column: 8)
!6160 = !DILocation(line: 1417, column: 8, scope: !6157)
!6161 = !DILocation(line: 1418, column: 21, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !2606, line: 1417, column: 19)
!6163 = !DILocation(line: 1419, column: 13, scope: !6162)
!6164 = !DILocation(line: 1420, column: 4, scope: !6162)
!6165 = !DILocation(line: 1421, column: 20, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6154, file: !2606, line: 1421, column: 14)
!6167 = !DILocation(line: 1421, column: 14, scope: !6154)
!6168 = !DILocation(line: 1431, column: 13, scope: !6083)
!6169 = !DILocation(line: 1431, column: 7, scope: !6025)
!6170 = !DILocation(line: 1432, column: 14, scope: !6082)
!6171 = !DILocation(line: 0, scope: !6082)
!6172 = !DILocation(line: 1434, column: 12, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6082, file: !2606, line: 1434, column: 8)
!6174 = !DILocation(line: 1434, column: 8, scope: !6082)
!6175 = !DILocation(line: 1435, column: 24, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !2606, line: 1434, column: 17)
!6177 = !DILocation(line: 1436, column: 4, scope: !6176)
!6178 = !DILocation(line: 1439, column: 20, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6083, file: !2606, line: 1439, column: 14)
!6180 = !DILocation(line: 1439, column: 14, scope: !6083)
!6181 = !DILocation(line: 1469, column: 37, scope: !6025)
!6182 = !DILocation(line: 1448, column: 20, scope: !6025)
!6183 = !DILocation(line: 1449, column: 22, scope: !6025)
!6184 = !DILocation(line: 1471, column: 34, scope: !6025)
!6185 = !DILocation(line: 1478, column: 7, scope: !6025)
!6186 = !DILocation(line: 1479, column: 4, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !2606, line: 1478, column: 40)
!6188 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1478, column: 7)
!6189 = !DILocation(line: 1484, column: 19, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !2606, line: 1479, column: 24)
!6191 = !DILocation(line: 1484, column: 17, scope: !6190)
!6192 = !DILocation(line: 1485, column: 5, scope: !6190)
!6193 = !DILocation(line: 1492, column: 20, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !2606, line: 1491, column: 12)
!6195 = distinct !DILexicalBlock(scope: !6190, file: !2606, line: 1487, column: 9)
!6196 = !DILocation(line: 1492, column: 18, scope: !6194)
!6197 = !DILocation(line: 1494, column: 5, scope: !6190)
!6198 = !DILocation(line: 1497, column: 23, scope: !6190)
!6199 = !DILocation(line: 1496, column: 17, scope: !6190)
!6200 = !DILocation(line: 1498, column: 5, scope: !6190)
!6201 = !DILocation(line: 1501, column: 23, scope: !6190)
!6202 = !DILocation(line: 1500, column: 17, scope: !6190)
!6203 = !DILocation(line: 1502, column: 5, scope: !6190)
!6204 = !DILocation(line: 1513, column: 23, scope: !6190)
!6205 = !DILocation(line: 1513, column: 6, scope: !6190)
!6206 = !DILocation(line: 1512, column: 17, scope: !6190)
!6207 = !DILocation(line: 1514, column: 5, scope: !6190)
!6208 = !DILocation(line: 0, scope: !6190)
!6209 = !DILocation(line: 1516, column: 8, scope: !6187)
!6210 = !DILocation(line: 1517, column: 19, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6212, file: !2606, line: 1516, column: 33)
!6212 = distinct !DILexicalBlock(scope: !6187, file: !2606, line: 1516, column: 8)
!6213 = !DILocation(line: 1517, column: 17, scope: !6211)
!6214 = !DILocation(line: 1518, column: 4, scope: !6211)
!6215 = !DILocation(line: 1519, column: 19, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !2606, line: 1518, column: 39)
!6217 = distinct !DILexicalBlock(scope: !6212, file: !2606, line: 1518, column: 15)
!6218 = !DILocation(line: 1519, column: 17, scope: !6216)
!6219 = !DILocation(line: 1520, column: 4, scope: !6216)
!6220 = !DILocation(line: 1522, column: 4, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !2606, line: 1521, column: 47)
!6222 = distinct !DILexicalBlock(scope: !6188, file: !2606, line: 1521, column: 14)
!6223 = !DILocation(line: 1527, column: 19, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6221, file: !2606, line: 1522, column: 24)
!6225 = !DILocation(line: 1527, column: 17, scope: !6224)
!6226 = !DILocation(line: 1528, column: 5, scope: !6224)
!6227 = !DILocation(line: 0, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6224, file: !2606, line: 1530, column: 9)
!6229 = !DILocation(line: 1540, column: 23, scope: !6224)
!6230 = !DILocation(line: 1539, column: 17, scope: !6224)
!6231 = !DILocation(line: 1542, column: 5, scope: !6224)
!6232 = !DILocation(line: 1545, column: 23, scope: !6224)
!6233 = !DILocation(line: 1544, column: 17, scope: !6224)
!6234 = !DILocation(line: 1547, column: 5, scope: !6224)
!6235 = !DILocation(line: 1551, column: 23, scope: !6224)
!6236 = !DILocation(line: 1551, column: 6, scope: !6224)
!6237 = !DILocation(line: 1550, column: 17, scope: !6224)
!6238 = !DILocation(line: 1552, column: 5, scope: !6224)
!6239 = !DILocation(line: 0, scope: !6224)
!6240 = !DILocation(line: 1554, column: 8, scope: !6221)
!6241 = !DILocation(line: 1555, column: 19, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !2606, line: 1554, column: 33)
!6243 = distinct !DILexicalBlock(scope: !6221, file: !2606, line: 1554, column: 8)
!6244 = !DILocation(line: 1555, column: 17, scope: !6242)
!6245 = !DILocation(line: 1556, column: 4, scope: !6242)
!6246 = !DILocation(line: 1557, column: 19, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6248, file: !2606, line: 1556, column: 39)
!6248 = distinct !DILexicalBlock(scope: !6243, file: !2606, line: 1556, column: 15)
!6249 = !DILocation(line: 1557, column: 17, scope: !6247)
!6250 = !DILocation(line: 1558, column: 4, scope: !6247)
!6251 = !DILocation(line: 0, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !2606, line: 1560, column: 8)
!6253 = distinct !DILexicalBlock(scope: !6254, file: !2606, line: 1559, column: 45)
!6254 = distinct !DILexicalBlock(scope: !6222, file: !2606, line: 1559, column: 14)
!6255 = !DILocation(line: 1566, column: 17, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !2606, line: 1565, column: 46)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !2606, line: 1565, column: 14)
!6258 = !DILocation(line: 1566, column: 15, scope: !6256)
!6259 = !DILocation(line: 1567, column: 3, scope: !6256)
!6260 = !DILocation(line: 1574, column: 21, scope: !6089)
!6261 = !DILocation(line: 1575, column: 4, scope: !6087)
!6262 = !DILocation(line: 0, scope: !6087)
!6263 = !DILocation(line: 1575, column: 4, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6087, file: !2606, line: 1575, column: 4)
!6265 = !DILocation(line: 1582, column: 17, scope: !6025)
!6266 = !DILocation(line: 1582, column: 3, scope: !6025)
!6267 = !DILocation(line: 1584, column: 4, scope: !6091)
!6268 = !DILocation(line: 0, scope: !6091)
!6269 = !DILocation(line: 1584, column: 4, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6091, file: !2606, line: 1584, column: 4)
!6271 = !DILocation(line: 1587, column: 31, scope: !6094)
!6272 = !DILocation(line: 1591, column: 18, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6094, file: !2606, line: 1591, column: 8)
!6274 = !DILocation(line: 1591, column: 8, scope: !6094)
!6275 = !DILocation(line: 1592, column: 11, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !2606, line: 1591, column: 24)
!6277 = !DILocation(line: 0, scope: !6094)
!6278 = !DILocation(line: 1593, column: 4, scope: !6276)
!6279 = !DILocation(line: 1594, column: 11, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6273, file: !2606, line: 1593, column: 11)
!6281 = !DILocation(line: 1604, column: 51, scope: !6092)
!6282 = !DILocation(line: 1604, column: 13, scope: !6092)
!6283 = !DILocation(line: 1604, column: 11, scope: !6092)
!6284 = !DILocation(line: 1606, column: 4, scope: !6092)
!6285 = !DILocation(line: 1609, column: 14, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1609, column: 8)
!6287 = !DILocation(line: 1609, column: 8, scope: !6092)
!6288 = !DILocation(line: 1619, column: 18, scope: !6092)
!6289 = !DILocation(line: 1620, column: 13, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1620, column: 8)
!6291 = !DILocation(line: 1620, column: 8, scope: !6092)
!6292 = !DILocation(line: 1622, column: 36, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !2606, line: 1620, column: 18)
!6294 = !DILocation(line: 1622, column: 17, scope: !6293)
!6295 = !DILocation(line: 1623, column: 4, scope: !6293)
!6296 = !DILocation(line: 1632, column: 29, scope: !6092)
!6297 = !DILocation(line: 1632, column: 10, scope: !6092)
!6298 = !DILocation(line: 1632, column: 4, scope: !6092)
!6299 = !DILocation(line: 1407, column: 8, scope: !6025)
!6300 = !DILocation(line: 0, scope: !6092)
!6301 = !DILocation(line: 1634, column: 3, scope: !6092)
!6302 = !DILocation(line: 1640, column: 18, scope: !6097)
!6303 = !DILocation(line: 1640, column: 8, scope: !6092)
!6304 = !DILocation(line: 1729, column: 13, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1729, column: 7)
!6306 = !DILocation(line: 1641, column: 22, scope: !6096)
!6307 = !DILocation(line: 0, scope: !6096)
!6308 = !DILocation(line: 1646, column: 21, scope: !6096)
!6309 = !DILocation(line: 1649, column: 13, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6096, file: !2606, line: 1649, column: 9)
!6311 = !DILocation(line: 1649, column: 9, scope: !6096)
!6312 = !DILocation(line: 1650, column: 35, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6310, file: !2606, line: 1649, column: 34)
!6314 = !DILocation(line: 1650, column: 23, scope: !6313)
!6315 = !DILocation(line: 1651, column: 5, scope: !6313)
!6316 = !DILocation(line: 1660, column: 15, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1660, column: 8)
!6318 = !DILocation(line: 1660, column: 19, scope: !6317)
!6319 = !DILocation(line: 1660, column: 8, scope: !6092)
!6320 = !DILocation(line: 1661, column: 23, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6317, file: !2606, line: 1660, column: 28)
!6322 = !DILocation(line: 1661, column: 11, scope: !6321)
!6323 = !DILocation(line: 1665, column: 22, scope: !6321)
!6324 = !DILocation(line: 1666, column: 21, scope: !6321)
!6325 = !DILocation(line: 1668, column: 5, scope: !6321)
!6326 = !DILocation(line: 1677, column: 30, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !2606, line: 1676, column: 49)
!6328 = distinct !DILexicalBlock(scope: !6092, file: !2606, line: 1676, column: 8)
!6329 = !DILocation(line: 1677, column: 5, scope: !6327)
!6330 = !DILocation(line: 1680, column: 4, scope: !6092)
!6331 = !DILocation(line: 0, scope: !6273)
!6332 = !DILocation(line: 1597, column: 14, scope: !6094)
!6333 = !DILocation(line: 1699, column: 11, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1699, column: 7)
!6335 = !DILocation(line: 1699, column: 7, scope: !6025)
!6336 = !DILocation(line: 1725, column: 7, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1725, column: 7)
!6338 = !DILocation(line: 1725, column: 12, scope: !6337)
!6339 = !DILocation(line: 1747, column: 13, scope: !6104)
!6340 = !DILocation(line: 1747, column: 7, scope: !6025)
!6341 = !DILocation(line: 1722, column: 24, scope: !6025)
!6342 = !DILocation(line: 1725, column: 7, scope: !6025)
!6343 = !DILocation(line: 1729, column: 7, scope: !6025)
!6344 = !DILocation(line: 1736, column: 13, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6025, file: !2606, line: 1736, column: 7)
!6346 = !DILocation(line: 1735, column: 19, scope: !6025)
!6347 = !DILocation(line: 1736, column: 7, scope: !6025)
!6348 = !DILocation(line: 1748, column: 10, scope: !6103)
!6349 = !DILocation(line: 1750, column: 15, scope: !6102)
!6350 = !DILocation(line: 1750, column: 8, scope: !6103)
!6351 = !DILocation(line: 0, scope: !6101)
!6352 = !DILocation(line: 1756, column: 15, scope: !6110)
!6353 = !DILocation(line: 1756, column: 9, scope: !6101)
!6354 = !DILocation(line: 1758, column: 7, scope: !6106)
!6355 = !DILocation(line: 0, scope: !6106)
!6356 = !DILocation(line: 1758, column: 7, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6106, file: !2606, line: 1758, column: 7)
!6358 = !DILocation(line: 1764, column: 5, scope: !6101)
!6359 = !DILocation(line: 0, scope: !6103)
!6360 = !DILocation(line: 1764, column: 20, scope: !6101)
!6361 = !DILocation(line: 1764, column: 17, scope: !6101)
!6362 = !DILocation(line: 1765, column: 6, scope: !6112)
!6363 = !DILocation(line: 0, scope: !6112)
!6364 = !DILocation(line: 1765, column: 6, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6112, file: !2606, line: 1765, column: 6)
!6366 = distinct !{!6366, !6358, !6367}
!6367 = !DILocation(line: 1766, column: 5, scope: !6101)
!6368 = !DILocation(line: 1773, column: 12, scope: !6117)
!6369 = !DILocation(line: 1773, column: 7, scope: !6025)
!6370 = !DILocation(line: 1773, column: 7, scope: !6117)
!6371 = !DILocation(line: 1774, column: 4, scope: !6115)
!6372 = !DILocation(line: 0, scope: !6115)
!6373 = !DILocation(line: 1774, column: 4, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6115, file: !2606, line: 1774, column: 4)
!6375 = !DILocation(line: 1818, column: 8, scope: !6121)
!6376 = !DILocation(line: 1818, column: 27, scope: !6121)
!6377 = !DILocation(line: 1818, column: 25, scope: !6121)
!6378 = !DILocation(line: 1818, column: 8, scope: !6122)
!6379 = !DILocation(line: 1819, column: 5, scope: !6119)
!6380 = !DILocation(line: 0, scope: !6119)
!6381 = !DILocation(line: 1819, column: 5, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6119, file: !2606, line: 1819, column: 5)
!6383 = !DILocation(line: 1822, column: 14, scope: !6127)
!6384 = !DILocation(line: 1822, column: 8, scope: !6122)
!6385 = !DILocation(line: 1823, column: 5, scope: !6125)
!6386 = !DILocation(line: 0, scope: !6125)
!6387 = !DILocation(line: 1823, column: 5, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6125, file: !2606, line: 1823, column: 5)
!6389 = !DILocation(line: 1826, column: 20, scope: !6122)
!6390 = !DILocation(line: 1827, column: 4, scope: !6122)
!6391 = !DILocation(line: 0, scope: !6122)
!6392 = !DILocation(line: 1827, column: 21, scope: !6122)
!6393 = !DILocation(line: 1827, column: 18, scope: !6122)
!6394 = !DILocation(line: 1828, column: 5, scope: !6129)
!6395 = !DILocation(line: 0, scope: !6129)
!6396 = !DILocation(line: 1828, column: 5, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6129, file: !2606, line: 1828, column: 5)
!6398 = distinct !{!6398, !6390, !6399}
!6399 = !DILocation(line: 1829, column: 4, scope: !6122)
!6400 = !DILocation(line: 1831, column: 4, scope: !6132)
!6401 = !DILocation(line: 0, scope: !6132)
!6402 = !DILocation(line: 1831, column: 4, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6132, file: !2606, line: 1831, column: 4)
!6404 = !DILocation(line: 1835, column: 16, scope: !6025)
!6405 = !DILocation(line: 1835, column: 3, scope: !6025)
!6406 = !DILocation(line: 1836, column: 4, scope: !6134)
!6407 = !DILocation(line: 0, scope: !6134)
!6408 = !DILocation(line: 1836, column: 4, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6134, file: !2606, line: 1836, column: 4)
!6410 = !DILocation(line: 1837, column: 4, scope: !6135)
!6411 = distinct !{!6411, !6405, !6412}
!6412 = !DILocation(line: 1838, column: 3, scope: !6025)
!6413 = !DILocation(line: 1844, column: 1, scope: !5998)
!6414 = distinct !DISubprogram(name: "extract_conversion", scope: !2606, file: !2606, line: 642, type: !6415, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6417)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{!269, !6071, !269}
!6417 = !{!6418, !6419}
!6418 = !DILocalVariable(name: "conv", arg: 1, scope: !6414, file: !2606, line: 642, type: !6071)
!6419 = !DILocalVariable(name: "sp", arg: 2, scope: !6414, file: !2606, line: 643, type: !269)
!6420 = !DILocation(line: 0, scope: !6414)
!6421 = !DILocation(line: 645, column: 10, scope: !6414)
!6422 = !DILocation(line: 653, column: 2, scope: !6414)
!6423 = !DILocation(line: 654, column: 6, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6414, file: !2606, line: 654, column: 6)
!6425 = !DILocation(line: 654, column: 10, scope: !6424)
!6426 = !DILocation(line: 654, column: 6, scope: !6414)
!6427 = !DILocation(line: 655, column: 24, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6424, file: !2606, line: 654, column: 18)
!6429 = !DILocation(line: 655, column: 19, scope: !6428)
!6430 = !DILocation(line: 656, column: 3, scope: !6428)
!6431 = !DILocation(line: 659, column: 7, scope: !6414)
!6432 = !DILocation(line: 660, column: 7, scope: !6414)
!6433 = !DILocation(line: 661, column: 7, scope: !6414)
!6434 = !DILocation(line: 662, column: 7, scope: !6414)
!6435 = !DILocation(line: 663, column: 7, scope: !6414)
!6436 = !DILocation(line: 665, column: 2, scope: !6414)
!6437 = !DILocation(line: 666, column: 1, scope: !6414)
!6438 = distinct !DISubprogram(name: "outs", scope: !2606, file: !2606, line: 1319, type: !6439, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6441)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{!105, !4367, !104, !269, !269}
!6441 = !{!6442, !6443, !6444, !6445, !6446, !6447}
!6442 = !DILocalVariable(name: "out", arg: 1, scope: !6438, file: !2606, line: 1319, type: !4367)
!6443 = !DILocalVariable(name: "ctx", arg: 2, scope: !6438, file: !2606, line: 1320, type: !104)
!6444 = !DILocalVariable(name: "sp", arg: 3, scope: !6438, file: !2606, line: 1321, type: !269)
!6445 = !DILocalVariable(name: "ep", arg: 4, scope: !6438, file: !2606, line: 1322, type: !269)
!6446 = !DILocalVariable(name: "count", scope: !6438, file: !2606, line: 1324, type: !111)
!6447 = !DILocalVariable(name: "rc", scope: !6448, file: !2606, line: 1327, type: !105)
!6448 = distinct !DILexicalBlock(scope: !6438, file: !2606, line: 1326, column: 45)
!6449 = !DILocation(line: 0, scope: !6438)
!6450 = !DILocation(line: 1326, column: 2, scope: !6438)
!6451 = !DILocation(line: 1324, column: 9, scope: !6438)
!6452 = !DILocation(line: 1326, column: 13, scope: !6438)
!6453 = !DILocation(line: 1326, column: 19, scope: !6438)
!6454 = !DILocation(line: 1327, column: 21, scope: !6448)
!6455 = !DILocation(line: 1326, column: 36, scope: !6438)
!6456 = !DILocation(line: 1326, column: 39, scope: !6438)
!6457 = !DILocation(line: 1327, column: 24, scope: !6448)
!6458 = !DILocation(line: 1327, column: 16, scope: !6448)
!6459 = !DILocation(line: 1327, column: 12, scope: !6448)
!6460 = !DILocation(line: 0, scope: !6448)
!6461 = !DILocation(line: 1329, column: 10, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6448, file: !2606, line: 1329, column: 7)
!6463 = !DILocation(line: 1329, column: 7, scope: !6448)
!6464 = distinct !{!6464, !6450, !6465}
!6465 = !DILocation(line: 1333, column: 2, scope: !6438)
!6466 = !DILocation(line: 1336, column: 1, scope: !6438)
!6467 = distinct !DISubprogram(name: "encode_uint", scope: !2606, file: !2606, line: 788, type: !6468, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6470)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!102, !2628, !6071, !102, !269}
!6470 = !{!6471, !6472, !6473, !6474, !6475, !6476, !6478, !6479}
!6471 = !DILocalVariable(name: "value", arg: 1, scope: !6467, file: !2606, line: 788, type: !2628)
!6472 = !DILocalVariable(name: "conv", arg: 2, scope: !6467, file: !2606, line: 789, type: !6071)
!6473 = !DILocalVariable(name: "bps", arg: 3, scope: !6467, file: !2606, line: 790, type: !102)
!6474 = !DILocalVariable(name: "bpe", arg: 4, scope: !6467, file: !2606, line: 791, type: !269)
!6475 = !DILocalVariable(name: "upcase", scope: !6467, file: !2606, line: 793, type: !492)
!6476 = !DILocalVariable(name: "radix", scope: !6467, file: !2606, line: 794, type: !6477)
!6477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6478 = !DILocalVariable(name: "bp", scope: !6467, file: !2606, line: 795, type: !102)
!6479 = !DILocalVariable(name: "lsv", scope: !6480, file: !2606, line: 798, type: !32)
!6480 = distinct !DILexicalBlock(scope: !6467, file: !2606, line: 797, column: 5)
!6481 = !DILocation(line: 0, scope: !6467)
!6482 = !DILocation(line: 793, column: 35, scope: !6467)
!6483 = !DILocation(line: 793, column: 24, scope: !6467)
!6484 = !DILocation(line: 793, column: 16, scope: !6467)
!6485 = !DILocation(line: 794, column: 29, scope: !6467)
!6486 = !DILocation(line: 795, column: 24, scope: !6467)
!6487 = !DILocation(line: 795, column: 17, scope: !6467)
!6488 = !DILocation(line: 797, column: 2, scope: !6467)
!6489 = !DILocation(line: 802, column: 9, scope: !6480)
!6490 = !DILocation(line: 798, column: 22, scope: !6480)
!6491 = !DILocation(line: 0, scope: !6480)
!6492 = !DILocation(line: 800, column: 16, scope: !6480)
!6493 = !DILocation(line: 800, column: 11, scope: !6480)
!6494 = !DILocation(line: 800, column: 4, scope: !6480)
!6495 = !DILocation(line: 800, column: 9, scope: !6480)
!6496 = !DILocation(line: 803, column: 18, scope: !6467)
!6497 = !DILocation(line: 803, column: 24, scope: !6467)
!6498 = !DILocation(line: 803, column: 2, scope: !6480)
!6499 = distinct !{!6499, !6488, !6500}
!6500 = !DILocation(line: 803, column: 37, scope: !6467)
!6501 = !DILocation(line: 808, column: 12, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6467, file: !2606, line: 808, column: 6)
!6503 = !DILocation(line: 808, column: 6, scope: !6467)
!6504 = !DILocation(line: 809, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6502, file: !2606, line: 808, column: 23)
!6506 = !DILocation(line: 813, column: 3, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !2606, line: 811, column: 27)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !2606, line: 811, column: 14)
!6509 = distinct !DILexicalBlock(scope: !6505, file: !2606, line: 809, column: 7)
!6510 = !DILocation(line: 0, scope: !6509)
!6511 = !DILocation(line: 818, column: 2, scope: !6467)
!6512 = distinct !DISubprogram(name: "store_count", scope: !2606, file: !2606, line: 1280, type: !6513, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6517)
!6513 = !DISubroutineType(types: !6514)
!6514 = !{null, !6515, !104, !105}
!6515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6516, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6038)
!6517 = !{!6518, !6519, !6520}
!6518 = !DILocalVariable(name: "conv", arg: 1, scope: !6512, file: !2606, line: 1280, type: !6515)
!6519 = !DILocalVariable(name: "dp", arg: 2, scope: !6512, file: !2606, line: 1281, type: !104)
!6520 = !DILocalVariable(name: "count", arg: 3, scope: !6512, file: !2606, line: 1282, type: !105)
!6521 = !DILocation(line: 0, scope: !6512)
!6522 = !DILocation(line: 1284, column: 38, scope: !6512)
!6523 = !DILocation(line: 1284, column: 2, scope: !6512)
!6524 = !DILocation(line: 1286, column: 4, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6512, file: !2606, line: 1284, column: 50)
!6526 = !DILocation(line: 1286, column: 14, scope: !6525)
!6527 = !DILocation(line: 1287, column: 3, scope: !6525)
!6528 = !DILocation(line: 1289, column: 24, scope: !6525)
!6529 = !DILocation(line: 1289, column: 22, scope: !6525)
!6530 = !DILocation(line: 1290, column: 3, scope: !6525)
!6531 = !DILocation(line: 1292, column: 18, scope: !6525)
!6532 = !DILocation(line: 1292, column: 4, scope: !6525)
!6533 = !DILocation(line: 1292, column: 16, scope: !6525)
!6534 = !DILocation(line: 1293, column: 3, scope: !6525)
!6535 = !DILocation(line: 1295, column: 4, scope: !6525)
!6536 = !DILocation(line: 1295, column: 15, scope: !6525)
!6537 = !DILocation(line: 1296, column: 3, scope: !6525)
!6538 = !DILocation(line: 1298, column: 22, scope: !6525)
!6539 = !DILocation(line: 1298, column: 4, scope: !6525)
!6540 = !DILocation(line: 1298, column: 20, scope: !6525)
!6541 = !DILocation(line: 1299, column: 3, scope: !6525)
!6542 = !DILocation(line: 1301, column: 21, scope: !6525)
!6543 = !DILocation(line: 1301, column: 4, scope: !6525)
!6544 = !DILocation(line: 1301, column: 19, scope: !6525)
!6545 = !DILocation(line: 1302, column: 3, scope: !6525)
!6546 = !DILocation(line: 1304, column: 4, scope: !6525)
!6547 = !DILocation(line: 1304, column: 17, scope: !6525)
!6548 = !DILocation(line: 1305, column: 3, scope: !6525)
!6549 = !DILocation(line: 1307, column: 4, scope: !6525)
!6550 = !DILocation(line: 1307, column: 20, scope: !6525)
!6551 = !DILocation(line: 1308, column: 3, scope: !6525)
!6552 = !DILocation(line: 1316, column: 1, scope: !6512)
!6553 = distinct !DISubprogram(name: "isupper", scope: !6554, file: !6554, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6555)
!6554 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6555 = !{!6556}
!6556 = !DILocalVariable(name: "a", arg: 1, scope: !6553, file: !6554, line: 16, type: !105)
!6557 = !DILocation(line: 0, scope: !6553)
!6558 = !DILocation(line: 18, column: 29, scope: !6553)
!6559 = !DILocation(line: 18, column: 45, scope: !6553)
!6560 = !DILocation(line: 18, column: 2, scope: !6553)
!6561 = distinct !DISubprogram(name: "conversion_radix", scope: !2606, file: !2606, line: 761, type: !6562, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6564)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!111, !103}
!6564 = !{!6565}
!6565 = !DILocalVariable(name: "specifier", arg: 1, scope: !6561, file: !2606, line: 761, type: !103)
!6566 = !DILocation(line: 0, scope: !6561)
!6567 = !DILocation(line: 763, column: 2, scope: !6561)
!6568 = !DILocation(line: 770, column: 3, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6561, file: !2606, line: 763, column: 21)
!6570 = !DILocation(line: 774, column: 3, scope: !6569)
!6571 = !DILocation(line: 0, scope: !6569)
!6572 = !DILocation(line: 776, column: 1, scope: !6561)
!6573 = distinct !DISubprogram(name: "extract_flags", scope: !2606, file: !2606, line: 339, type: !6415, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6574)
!6574 = !{!6575, !6576, !6577}
!6575 = !DILocalVariable(name: "conv", arg: 1, scope: !6573, file: !2606, line: 339, type: !6071)
!6576 = !DILocalVariable(name: "sp", arg: 2, scope: !6573, file: !2606, line: 340, type: !269)
!6577 = !DILocalVariable(name: "loop", scope: !6573, file: !2606, line: 342, type: !492)
!6578 = !DILocation(line: 0, scope: !6573)
!6579 = !DILocation(line: 344, column: 2, scope: !6573)
!6580 = !DILocation(line: 345, column: 11, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6573, file: !2606, line: 344, column: 5)
!6582 = !DILocation(line: 345, column: 3, scope: !6581)
!6583 = !DILocation(line: 351, column: 4, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !2606, line: 345, column: 16)
!6585 = !DILocation(line: 354, column: 4, scope: !6584)
!6586 = !DILocation(line: 357, column: 4, scope: !6584)
!6587 = !DILocation(line: 360, column: 4, scope: !6584)
!6588 = !DILocation(line: 0, scope: !6584)
!6589 = !DILocation(line: 370, column: 12, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6573, file: !2606, line: 370, column: 6)
!6591 = !DILocation(line: 370, column: 22, scope: !6590)
!6592 = !DILocation(line: 371, column: 19, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6590, file: !2606, line: 370, column: 42)
!6594 = !DILocation(line: 372, column: 2, scope: !6593)
!6595 = !DILocation(line: 376, column: 2, scope: !6573)
!6596 = distinct !DISubprogram(name: "extract_width", scope: !2606, file: !2606, line: 388, type: !6415, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6597)
!6597 = !{!6598, !6599, !6600, !6601}
!6598 = !DILocalVariable(name: "conv", arg: 1, scope: !6596, file: !2606, line: 388, type: !6071)
!6599 = !DILocalVariable(name: "sp", arg: 2, scope: !6596, file: !2606, line: 389, type: !269)
!6600 = !DILocalVariable(name: "wp", scope: !6596, file: !2606, line: 398, type: !269)
!6601 = !DILocalVariable(name: "width", scope: !6596, file: !2606, line: 399, type: !111)
!6602 = !DILocation(line: 0, scope: !6596)
!6603 = !DILocation(line: 391, column: 8, scope: !6596)
!6604 = !DILocation(line: 391, column: 22, scope: !6596)
!6605 = !DILocation(line: 393, column: 6, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6596, file: !2606, line: 393, column: 6)
!6607 = !DILocation(line: 393, column: 10, scope: !6606)
!6608 = !DILocation(line: 393, column: 6, scope: !6596)
!6609 = !DILocation(line: 394, column: 20, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6606, file: !2606, line: 393, column: 18)
!6611 = !DILocation(line: 395, column: 10, scope: !6610)
!6612 = !DILocation(line: 395, column: 3, scope: !6610)
!6613 = !DILocation(line: 399, column: 17, scope: !6596)
!6614 = !DILocation(line: 401, column: 6, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6596, file: !2606, line: 401, column: 6)
!6616 = !DILocation(line: 401, column: 9, scope: !6615)
!6617 = !DILocation(line: 401, column: 6, scope: !6596)
!6618 = !DILocation(line: 402, column: 23, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6615, file: !2606, line: 401, column: 16)
!6620 = !DILocation(line: 403, column: 9, scope: !6619)
!6621 = !DILocation(line: 403, column: 21, scope: !6619)
!6622 = !DILocation(line: 405, column: 11, scope: !6619)
!6623 = !DILocation(line: 404, column: 21, scope: !6619)
!6624 = !DILocation(line: 406, column: 2, scope: !6619)
!6625 = !DILocation(line: 409, column: 1, scope: !6596)
!6626 = distinct !DISubprogram(name: "extract_prec", scope: !2606, file: !2606, line: 420, type: !6415, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6627)
!6627 = !{!6628, !6629, !6630}
!6628 = !DILocalVariable(name: "conv", arg: 1, scope: !6626, file: !2606, line: 420, type: !6071)
!6629 = !DILocalVariable(name: "sp", arg: 2, scope: !6626, file: !2606, line: 421, type: !269)
!6630 = !DILocalVariable(name: "prec", scope: !6626, file: !2606, line: 435, type: !111)
!6631 = !DILocation(line: 0, scope: !6626)
!6632 = !DILocation(line: 423, column: 24, scope: !6626)
!6633 = !DILocation(line: 423, column: 28, scope: !6626)
!6634 = !DILocation(line: 423, column: 8, scope: !6626)
!6635 = !DILocation(line: 423, column: 21, scope: !6626)
!6636 = !DILocation(line: 425, column: 6, scope: !6626)
!6637 = !DILocation(line: 428, column: 2, scope: !6626)
!6638 = !DILocation(line: 430, column: 6, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6626, file: !2606, line: 430, column: 6)
!6640 = !DILocation(line: 430, column: 10, scope: !6639)
!6641 = !DILocation(line: 430, column: 6, scope: !6626)
!6642 = !DILocation(line: 431, column: 19, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6639, file: !2606, line: 430, column: 18)
!6644 = !DILocation(line: 432, column: 10, scope: !6643)
!6645 = !DILocation(line: 432, column: 3, scope: !6643)
!6646 = !DILocation(line: 435, column: 16, scope: !6626)
!6647 = !DILocation(line: 437, column: 8, scope: !6626)
!6648 = !DILocation(line: 437, column: 19, scope: !6626)
!6649 = !DILocation(line: 439, column: 10, scope: !6626)
!6650 = !DILocation(line: 438, column: 20, scope: !6626)
!6651 = !DILocation(line: 441, column: 9, scope: !6626)
!6652 = !DILocation(line: 442, column: 1, scope: !6626)
!6653 = distinct !DISubprogram(name: "extract_length", scope: !2606, file: !2606, line: 453, type: !6415, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6654)
!6654 = !{!6655, !6656}
!6655 = !DILocalVariable(name: "conv", arg: 1, scope: !6653, file: !2606, line: 453, type: !6071)
!6656 = !DILocalVariable(name: "sp", arg: 2, scope: !6653, file: !2606, line: 454, type: !269)
!6657 = !DILocation(line: 0, scope: !6653)
!6658 = !DILocation(line: 456, column: 10, scope: !6653)
!6659 = !DILocation(line: 456, column: 2, scope: !6653)
!6660 = !DILocation(line: 458, column: 8, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !2606, line: 458, column: 7)
!6662 = distinct !DILexicalBlock(scope: !6653, file: !2606, line: 456, column: 15)
!6663 = !DILocation(line: 458, column: 7, scope: !6661)
!6664 = !DILocation(line: 458, column: 13, scope: !6661)
!6665 = !DILocation(line: 0, scope: !6661)
!6666 = !DILocation(line: 458, column: 7, scope: !6662)
!6667 = !DILocation(line: 459, column: 21, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6661, file: !2606, line: 458, column: 21)
!6669 = !DILocation(line: 460, column: 4, scope: !6668)
!6670 = !DILocation(line: 461, column: 3, scope: !6668)
!6671 = !DILocation(line: 462, column: 21, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6661, file: !2606, line: 461, column: 10)
!6673 = !DILocation(line: 466, column: 8, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6662, file: !2606, line: 466, column: 7)
!6675 = !DILocation(line: 466, column: 7, scope: !6674)
!6676 = !DILocation(line: 466, column: 13, scope: !6674)
!6677 = !DILocation(line: 0, scope: !6674)
!6678 = !DILocation(line: 466, column: 7, scope: !6662)
!6679 = !DILocation(line: 467, column: 21, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6674, file: !2606, line: 466, column: 21)
!6681 = !DILocation(line: 468, column: 4, scope: !6680)
!6682 = !DILocation(line: 469, column: 3, scope: !6680)
!6683 = !DILocation(line: 470, column: 21, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6674, file: !2606, line: 469, column: 10)
!6685 = !DILocation(line: 474, column: 9, scope: !6662)
!6686 = !DILocation(line: 474, column: 20, scope: !6662)
!6687 = !DILocation(line: 475, column: 3, scope: !6662)
!6688 = !DILocation(line: 476, column: 3, scope: !6662)
!6689 = !DILocation(line: 478, column: 9, scope: !6662)
!6690 = !DILocation(line: 478, column: 20, scope: !6662)
!6691 = !DILocation(line: 479, column: 3, scope: !6662)
!6692 = !DILocation(line: 480, column: 3, scope: !6662)
!6693 = !DILocation(line: 482, column: 9, scope: !6662)
!6694 = !DILocation(line: 482, column: 20, scope: !6662)
!6695 = !DILocation(line: 483, column: 3, scope: !6662)
!6696 = !DILocation(line: 484, column: 3, scope: !6662)
!6697 = !DILocation(line: 486, column: 9, scope: !6662)
!6698 = !DILocation(line: 486, column: 20, scope: !6662)
!6699 = !DILocation(line: 487, column: 3, scope: !6662)
!6700 = !DILocation(line: 492, column: 21, scope: !6662)
!6701 = !DILocation(line: 493, column: 3, scope: !6662)
!6702 = !DILocation(line: 495, column: 9, scope: !6662)
!6703 = !DILocation(line: 495, column: 20, scope: !6662)
!6704 = !DILocation(line: 496, column: 3, scope: !6662)
!6705 = !DILocation(line: 498, column: 2, scope: !6653)
!6706 = distinct !DISubprogram(name: "extract_specifier", scope: !2606, file: !2606, line: 513, type: !6415, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6707)
!6707 = !{!6708, !6709, !6710, !6711}
!6708 = !DILocalVariable(name: "conv", arg: 1, scope: !6706, file: !2606, line: 513, type: !6071)
!6709 = !DILocalVariable(name: "sp", arg: 2, scope: !6706, file: !2606, line: 514, type: !269)
!6710 = !DILocalVariable(name: "unsupported", scope: !6706, file: !2606, line: 516, type: !492)
!6711 = !DILabel(scope: !6712, name: "int_conv", file: !2606, line: 526)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !2606, line: 520, column: 27)
!6713 = !DILocation(line: 0, scope: !6706)
!6714 = !DILocation(line: 518, column: 20, scope: !6706)
!6715 = !DILocation(line: 518, column: 8, scope: !6706)
!6716 = !DILocation(line: 518, column: 18, scope: !6706)
!6717 = !DILocation(line: 520, column: 2, scope: !6706)
!6718 = !DILocation(line: 525, column: 3, scope: !6712)
!6719 = !DILocation(line: 0, scope: !6712)
!6720 = !DILocation(line: 526, column: 1, scope: !6712)
!6721 = !DILocation(line: 528, column: 24, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6712, file: !2606, line: 528, column: 7)
!6723 = !DILocation(line: 528, column: 7, scope: !6712)
!6724 = !DILocation(line: 535, column: 23, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6712, file: !2606, line: 535, column: 7)
!6726 = !DILocation(line: 535, column: 7, scope: !6712)
!6727 = !DILocation(line: 536, column: 36, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !2606, line: 535, column: 31)
!6729 = !DILocation(line: 537, column: 3, scope: !6728)
!6730 = !DILocation(line: 570, column: 9, scope: !6712)
!6731 = !DILocation(line: 570, column: 23, scope: !6712)
!6732 = !DILocation(line: 575, column: 4, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !2606, line: 573, column: 48)
!6734 = distinct !DILexicalBlock(scope: !6712, file: !2606, line: 573, column: 7)
!6735 = !DILocation(line: 603, column: 9, scope: !6712)
!6736 = !DILocation(line: 603, column: 23, scope: !6712)
!6737 = !DILocation(line: 605, column: 24, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6712, file: !2606, line: 605, column: 7)
!6739 = !DILocation(line: 605, column: 7, scope: !6712)
!6740 = !DILocation(line: 612, column: 9, scope: !6712)
!6741 = !DILocation(line: 612, column: 23, scope: !6712)
!6742 = !DILocation(line: 619, column: 24, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6712, file: !2606, line: 619, column: 7)
!6744 = !DILocation(line: 619, column: 7, scope: !6712)
!6745 = !DILocation(line: 625, column: 9, scope: !6712)
!6746 = !DILocation(line: 625, column: 17, scope: !6712)
!6747 = !DILocation(line: 626, column: 3, scope: !6712)
!6748 = !DILocation(line: 629, column: 20, scope: !6706)
!6749 = !DILocation(line: 629, column: 8, scope: !6706)
!6750 = !DILocation(line: 518, column: 23, scope: !6706)
!6751 = !DILocation(line: 631, column: 2, scope: !6706)
!6752 = distinct !DISubprogram(name: "extract_decimal", scope: !2606, file: !2606, line: 318, type: !6753, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6755)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{!111, !427}
!6755 = !{!6756, !6757, !6758}
!6756 = !DILocalVariable(name: "str", arg: 1, scope: !6752, file: !2606, line: 318, type: !427)
!6757 = !DILocalVariable(name: "sp", scope: !6752, file: !2606, line: 320, type: !269)
!6758 = !DILocalVariable(name: "val", scope: !6752, file: !2606, line: 321, type: !111)
!6759 = !DILocation(line: 0, scope: !6752)
!6760 = !DILocation(line: 320, column: 19, scope: !6752)
!6761 = !DILocation(line: 323, column: 37, scope: !6752)
!6762 = !DILocation(line: 323, column: 17, scope: !6752)
!6763 = !DILocation(line: 323, column: 9, scope: !6752)
!6764 = !DILocation(line: 323, column: 2, scope: !6752)
!6765 = !DILocation(line: 324, column: 13, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6752, file: !2606, line: 323, column: 43)
!6767 = !DILocation(line: 324, column: 24, scope: !6766)
!6768 = !DILocation(line: 324, column: 19, scope: !6766)
!6769 = !DILocation(line: 324, column: 27, scope: !6766)
!6770 = distinct !{!6770, !6764, !6771}
!6771 = !DILocation(line: 325, column: 2, scope: !6752)
!6772 = !DILocation(line: 326, column: 7, scope: !6752)
!6773 = !DILocation(line: 327, column: 2, scope: !6752)
!6774 = distinct !DISubprogram(name: "isdigit", scope: !6554, file: !6554, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2602, retainedNodes: !6775)
!6775 = !{!6776}
!6776 = !DILocalVariable(name: "a", arg: 1, scope: !6774, file: !6554, line: 43, type: !105)
!6777 = !DILocation(line: 0, scope: !6774)
!6778 = !DILocation(line: 45, column: 29, scope: !6774)
!6779 = !DILocation(line: 45, column: 45, scope: !6774)
!6780 = !DILocation(line: 45, column: 2, scope: !6774)
!6781 = distinct !DISubprogram(name: "assert_post_action", scope: !6782, file: !6782, line: 26, type: !6783, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6785)
!6782 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !269, !32}
!6785 = !{!6786, !6787}
!6786 = !DILocalVariable(name: "file", arg: 1, scope: !6781, file: !6782, line: 26, type: !269)
!6787 = !DILocalVariable(name: "line", arg: 2, scope: !6781, file: !6782, line: 26, type: !32)
!6788 = !DILocation(line: 0, scope: !6781)
!6789 = !DILocation(line: 43, column: 2, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6781, file: !6782, line: 43, column: 2)
!6791 = !{i64 2154751583, i64 2154751599, i64 2154751625, i64 2154751653, i64 2154751673}
!6792 = !DILocation(line: 44, column: 1, scope: !6781)
!6793 = distinct !DISubprogram(name: "assert_print", scope: !6782, file: !6782, line: 46, type: !4977, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !6794)
!6794 = !{!6795, !6796}
!6795 = !DILocalVariable(name: "fmt", arg: 1, scope: !6793, file: !6782, line: 46, type: !269)
!6796 = !DILocalVariable(name: "ap", scope: !6793, file: !6782, line: 48, type: !6797)
!6797 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3985, line: 99, baseType: !6798)
!6798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3985, line: 40, baseType: !6799)
!6799 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6782, baseType: !6800)
!6800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6801)
!6801 = !{!6802}
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6800, file: !6782, line: 48, baseType: !104, size: 32)
!6803 = !DILocation(line: 0, scope: !6793)
!6804 = !DILocation(line: 48, column: 2, scope: !6793)
!6805 = !DILocation(line: 48, column: 10, scope: !6793)
!6806 = !DILocation(line: 50, column: 2, scope: !6793)
!6807 = !DILocation(line: 52, column: 2, scope: !6793)
!6808 = !DILocation(line: 54, column: 2, scope: !6793)
!6809 = !DILocation(line: 55, column: 1, scope: !6793)
!6810 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6811, file: !6811, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !397)
!6811 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!6812 = !DILocation(line: 11, column: 1, scope: !6810)
!6813 = !{i64 2147565362, i64 2147565405, i64 2147565445}
!6814 = !DILocation(line: 12, column: 1, scope: !6810)
!6815 = !{i64 2147569589, i64 2147569632, i64 2147569672}
!6816 = !DILocation(line: 13, column: 1, scope: !6810)
!6817 = !{i64 2147569798, i64 2147569841, i64 2147569881}
!6818 = !DILocation(line: 14, column: 1, scope: !6810)
!6819 = !{i64 2147569967, i64 2147570010, i64 2147570050}
!6820 = !DILocation(line: 15, column: 1, scope: !6810)
!6821 = !{i64 2147570130, i64 2147570173, i64 2147570213}
!6822 = !DILocation(line: 16, column: 1, scope: !6810)
!6823 = !{i64 2147570314, i64 2147570357, i64 2147570397}
!6824 = !DILocation(line: 17, column: 1, scope: !6810)
!6825 = !{i64 2147570493, i64 2147570536, i64 2147570576}
!6826 = !DILocation(line: 18, column: 1, scope: !6810)
!6827 = !{i64 2147570735, i64 2147570778, i64 2147570818}
!6828 = !DILocation(line: 19, column: 1, scope: !6810)
!6829 = !{i64 2147570970, i64 2147571013, i64 2147571053}
!6830 = !DILocation(line: 20, column: 1, scope: !6810)
!6831 = !{i64 2147571157, i64 2147571200, i64 2147571240}
!6832 = !DILocation(line: 21, column: 1, scope: !6810)
!6833 = !{i64 2147571373, i64 2147571416, i64 2147571456}
!6834 = !DILocation(line: 22, column: 1, scope: !6810)
!6835 = !{i64 2147571576, i64 2147571619, i64 2147571659}
!6836 = !DILocation(line: 23, column: 1, scope: !6810)
!6837 = !{i64 2147571779, i64 2147571822, i64 2147571862}
!6838 = !DILocation(line: 24, column: 1, scope: !6810)
!6839 = !{i64 2147571954, i64 2147571997, i64 2147572037}
!6840 = !DILocation(line: 25, column: 1, scope: !6810)
!6841 = !{i64 2147572162, i64 2147572205, i64 2147572245}
!6842 = !DILocation(line: 26, column: 1, scope: !6810)
!6843 = !{i64 2147572366, i64 2147572409, i64 2147572449}
!6844 = !DILocation(line: 27, column: 1, scope: !6810)
!6845 = !{i64 2147572559, i64 2147572602, i64 2147572642}
!6846 = !DILocation(line: 28, column: 1, scope: !6810)
!6847 = !{i64 2147572761, i64 2147572804, i64 2147572844}
!6848 = !DILocation(line: 29, column: 1, scope: !6810)
!6849 = !{i64 2147572960, i64 2147573003, i64 2147573043}
!6850 = !DILocation(line: 30, column: 1, scope: !6810)
!6851 = !{i64 2147573187, i64 2147573230, i64 2147573270}
!6852 = !DILocation(line: 31, column: 1, scope: !6810)
!6853 = !{i64 2147573389, i64 2147573432, i64 2147573472}
!6854 = !DILocation(line: 32, column: 1, scope: !6810)
!6855 = !{i64 2147573604, i64 2147573647, i64 2147573687}
!6856 = !DILocation(line: 33, column: 1, scope: !6810)
!6857 = !{i64 2147573776, i64 2147573819, i64 2147573859}
!6858 = !DILocation(line: 34, column: 1, scope: !6810)
!6859 = !{i64 2147573978, i64 2147574021, i64 2147574061}
!6860 = !DILocation(line: 35, column: 1, scope: !6810)
!6861 = !{i64 2147574204, i64 2147574247, i64 2147574287}
!6862 = !DILocation(line: 36, column: 1, scope: !6810)
!6863 = !{i64 2147574403, i64 2147574446, i64 2147574486}
!6864 = !DILocation(line: 37, column: 1, scope: !6810)
!6865 = !{i64 2147574578, i64 2147574621, i64 2147574661}
!6866 = !DILocation(line: 38, column: 1, scope: !6810)
!6867 = !{i64 2147574831, i64 2147574874, i64 2147574914}
!6868 = !DILocation(line: 39, column: 1, scope: !6810)
!6869 = !{i64 2147575072, i64 2147575115, i64 2147575155}
!6870 = !DILocation(line: 40, column: 1, scope: !6810)
!6871 = !{i64 2147575307, i64 2147575350, i64 2147575390}
!6872 = !DILocation(line: 41, column: 1, scope: !6810)
!6873 = !{i64 2147575539, i64 2147575582, i64 2147575622}
!6874 = !DILocation(line: 42, column: 1, scope: !6810)
!6875 = !{i64 2147575765, i64 2147575808, i64 2147575848}
!6876 = !DILocation(line: 43, column: 1, scope: !6810)
!6877 = !{i64 2147575991, i64 2147576034, i64 2147576074}
!6878 = !DILocation(line: 44, column: 1, scope: !6810)
!6879 = !{i64 2147576217, i64 2147576260, i64 2147576300}
!6880 = !DILocation(line: 45, column: 1, scope: !6810)
!6881 = !{i64 2147576452, i64 2147576495, i64 2147576535}
!6882 = !DILocation(line: 46, column: 1, scope: !6810)
!6883 = !{i64 2147576678, i64 2147576721, i64 2147576761}
!6884 = !DILocation(line: 47, column: 1, scope: !6810)
!6885 = !{i64 2147576925, i64 2147576968, i64 2147577008}
!6886 = !DILocation(line: 48, column: 1, scope: !6810)
!6887 = !{i64 2147577154, i64 2147577197, i64 2147577237}
!6888 = !DILocation(line: 49, column: 1, scope: !6810)
!6889 = !{i64 2147577386, i64 2147577429, i64 2147577469}
!6890 = !DILocation(line: 50, column: 1, scope: !6810)
!6891 = !{i64 2147577630, i64 2147577673, i64 2147577713}
!6892 = !DILocation(line: 51, column: 1, scope: !6810)
!6893 = !{i64 2147577868, i64 2147577911, i64 2147577951}
!6894 = !DILocation(line: 52, column: 1, scope: !6810)
!6895 = !{i64 2147578142, i64 2147578185, i64 2147578225}
!6896 = !DILocation(line: 53, column: 1, scope: !6810)
!6897 = !{i64 2147582441, i64 2147582484, i64 2147582524}
!6898 = !DILocation(line: 54, column: 1, scope: !6810)
!6899 = !{i64 2147582694, i64 2147582737, i64 2147582777}
!6900 = !DILocation(line: 55, column: 1, scope: !6810)
!6901 = !{i64 2147582938, i64 2147582981, i64 2147583021}
!6902 = !DILocation(line: 56, column: 1, scope: !6810)
!6903 = !{i64 2147583173, i64 2147583216, i64 2147583256}
!6904 = !DILocation(line: 57, column: 1, scope: !6810)
!6905 = !{i64 2147583423, i64 2147583466, i64 2147583506}
!6906 = !DILocation(line: 58, column: 1, scope: !6810)
!6907 = !{i64 2147583670, i64 2147583713, i64 2147583753}
!6908 = !DILocation(line: 59, column: 1, scope: !6810)
!6909 = !{i64 2147583905, i64 2147583948, i64 2147583988}
!6910 = !DILocation(line: 60, column: 1, scope: !6810)
!6911 = !{i64 2147584140, i64 2147584183, i64 2147584223}
!6912 = !DILocation(line: 61, column: 1, scope: !6810)
!6913 = !{i64 2147584375, i64 2147584418, i64 2147584458}
!6914 = !DILocation(line: 62, column: 1, scope: !6810)
!6915 = !{i64 2147584613, i64 2147584656, i64 2147584696}
!6916 = !DILocation(line: 63, column: 1, scope: !6810)
!6917 = !{i64 2147584854, i64 2147584897, i64 2147584937}
!6918 = !DILocation(line: 64, column: 1, scope: !6810)
!6919 = !{i64 2147585134, i64 2147585177, i64 2147585217}
!6920 = !DILocation(line: 65, column: 1, scope: !6810)
!6921 = !{i64 2147585393, i64 2147585436, i64 2147585476}
!6922 = !DILocation(line: 66, column: 1, scope: !6810)
!6923 = !{i64 2147585622, i64 2147585665, i64 2147585705}
!6924 = !DILocation(line: 67, column: 1, scope: !6810)
!6925 = !{i64 2147585848, i64 2147585891, i64 2147585931}
!6926 = !DILocation(line: 68, column: 1, scope: !6810)
!6927 = !{i64 2147586086, i64 2147586129, i64 2147586169}
!6928 = !DILocation(line: 69, column: 1, scope: !6810)
!6929 = !{i64 2147586315, i64 2147586358, i64 2147586398}
!6930 = !DILocation(line: 70, column: 1, scope: !6810)
!6931 = !{i64 2147586523, i64 2147586566, i64 2147586606}
!6932 = !DILocation(line: 71, column: 1, scope: !6810)
!6933 = !{i64 2147586734, i64 2147586777, i64 2147586817}
!6934 = !DILocation(line: 72, column: 1, scope: !6810)
!6935 = !{i64 2147586969, i64 2147587012, i64 2147587052}
!6936 = !DILocation(line: 73, column: 1, scope: !6810)
!6937 = !{i64 2147587198, i64 2147587241, i64 2147587281}
!6938 = !DILocation(line: 74, column: 1, scope: !6810)
!6939 = !{i64 2147587415, i64 2147587458, i64 2147587498}
!6940 = !DILocation(line: 75, column: 1, scope: !6810)
!6941 = !{i64 2147587644, i64 2147587687, i64 2147587727}
!6942 = !DILocation(line: 76, column: 1, scope: !6810)
!6943 = !{i64 2147587882, i64 2147587925, i64 2147587965}
!6944 = !DILocation(line: 77, column: 1, scope: !6810)
!6945 = !{i64 2147588114, i64 2147588157, i64 2147588197}
!6946 = !DILocation(line: 78, column: 1, scope: !6810)
!6947 = !{i64 2147588340, i64 2147588383, i64 2147588423}
!6948 = !DILocation(line: 79, column: 1, scope: !6810)
!6949 = !{i64 2147588557, i64 2147588600, i64 2147588640}
!6950 = !DILocation(line: 80, column: 1, scope: !6810)
!6951 = !{i64 2147588789, i64 2147588832, i64 2147588872}
!6952 = !DILocation(line: 81, column: 1, scope: !6810)
!6953 = !{i64 2147589015, i64 2147589058, i64 2147589098}
!6954 = !DILocation(line: 82, column: 1, scope: !6810)
!6955 = !{i64 2147589229, i64 2147589272, i64 2147589312}
!6956 = !DILocation(line: 83, column: 1, scope: !6810)
!6957 = !{i64 2147589449, i64 2147589492, i64 2147589532}
!6958 = !DILocation(line: 84, column: 1, scope: !6810)
!6959 = !{i64 2147589681, i64 2147589724, i64 2147589764}
!6960 = !DILocation(line: 85, column: 1, scope: !6810)
!6961 = !{i64 2147589889, i64 2147589932, i64 2147589972}
!6962 = !DILocation(line: 86, column: 1, scope: !6810)
!6963 = !{i64 2147590094, i64 2147590137, i64 2147590177}
!6964 = !DILocation(line: 87, column: 1, scope: !6810)
!6965 = !{i64 2147590311, i64 2147590354, i64 2147590394}
!6966 = !DILocation(line: 88, column: 1, scope: !6810)
!6967 = !{i64 2147594586, i64 2147594629, i64 2147594669}
!6968 = !DILocation(line: 89, column: 1, scope: !6810)
!6969 = !{i64 2147594812, i64 2147594855, i64 2147594895}
!6970 = !DILocation(line: 90, column: 1, scope: !6810)
!6971 = !{i64 2147595032, i64 2147595075, i64 2147595115}
!6972 = !DILocation(line: 91, column: 1, scope: !6810)
!6973 = !{i64 2147595237, i64 2147595280, i64 2147595320}
!6974 = !DILocation(line: 92, column: 1, scope: !6810)
!6975 = !{i64 2147595469, i64 2147595512, i64 2147595552}
!6976 = !DILocation(line: 93, column: 1, scope: !6810)
!6977 = !{i64 2147595704, i64 2147595747, i64 2147595787}
!6978 = !DILocation(line: 94, column: 1, scope: !6810)
!6979 = !{i64 2147595954, i64 2147595997, i64 2147596037}
!6980 = !DILocation(line: 95, column: 1, scope: !6810)
!6981 = !{i64 2147596204, i64 2147596247, i64 2147596287}
!6982 = !DILocation(line: 96, column: 1, scope: !6810)
!6983 = !{i64 2147596442, i64 2147596485, i64 2147596525}
!6984 = !DILocation(line: 97, column: 1, scope: !6810)
!6985 = !{i64 2147596653, i64 2147596696, i64 2147596736}
!6986 = !DILocation(line: 98, column: 1, scope: !6810)
!6987 = !{i64 2147596870, i64 2147596913, i64 2147596953}
!6988 = !DILocation(line: 99, column: 1, scope: !6810)
!6989 = !{i64 2147597066, i64 2147597109, i64 2147597149}
!6990 = !DILocation(line: 100, column: 1, scope: !6810)
!6991 = !{i64 2147597268, i64 2147597311, i64 2147597351}
!6992 = !DILocation(line: 101, column: 1, scope: !6810)
!6993 = !{i64 2147597461, i64 2147597504, i64 2147597544}
!6994 = !DILocation(line: 102, column: 1, scope: !6810)
!6995 = !{i64 2147597669, i64 2147597712, i64 2147597752}
!6996 = !DILocation(line: 103, column: 1, scope: !6810)
!6997 = !{i64 2147597865, i64 2147597908, i64 2147597948}
!6998 = !DILocation(line: 104, column: 1, scope: !6810)
!6999 = !{i64 2147598073, i64 2147598116, i64 2147598156}
!7000 = !DILocation(line: 105, column: 1, scope: !6810)
!7001 = !{i64 2147598284, i64 2147598327, i64 2147598367}
!7002 = !DILocation(line: 106, column: 1, scope: !6810)
!7003 = !{i64 2147598483, i64 2147598526, i64 2147598566}
!7004 = !DILocation(line: 107, column: 1, scope: !6810)
!7005 = !{i64 2147598658, i64 2147598701, i64 2147598741}
!7006 = !DILocation(line: 108, column: 1, scope: !6810)
!7007 = !{i64 2147598842, i64 2147598885, i64 2147598925}
!7008 = !DILocation(line: 109, column: 1, scope: !6810)
!7009 = !{i64 2147599044, i64 2147599087, i64 2147599127}
!7010 = !DILocation(line: 110, column: 1, scope: !6810)
!7011 = !{i64 2147599243, i64 2147599286, i64 2147599326}
!7012 = !DILocation(line: 111, column: 1, scope: !6810)
!7013 = !{i64 2147599448, i64 2147599491, i64 2147599531}
!7014 = !DILocation(line: 112, column: 1, scope: !6810)
!7015 = !{i64 2147599641, i64 2147599684, i64 2147599724}
!7016 = !DILocation(line: 113, column: 1, scope: !6810)
!7017 = !{i64 2147599807, i64 2147599850, i64 2147599890}
!7018 = !DILocation(line: 114, column: 1, scope: !6810)
!7019 = !{i64 2147599991, i64 2147600034, i64 2147600074}
!7020 = !DILocation(line: 115, column: 1, scope: !6810)
!7021 = !{i64 2147600181, i64 2147600224, i64 2147600264}
!7022 = !DILocation(line: 116, column: 1, scope: !6810)
!7023 = !{i64 2147600365, i64 2147600408, i64 2147600448}
!7024 = !DILocation(line: 117, column: 1, scope: !6810)
!7025 = !{i64 2147600579, i64 2147600622, i64 2147600662}
!7026 = !DILocation(line: 118, column: 1, scope: !6810)
!7027 = !{i64 2147600790, i64 2147600833, i64 2147600873}
!7028 = !DILocation(line: 119, column: 1, scope: !6810)
!7029 = !{i64 2147601013, i64 2147601056, i64 2147601096}
!7030 = !DILocation(line: 120, column: 1, scope: !6810)
!7031 = !{i64 2147601197, i64 2147601240, i64 2147601280}
!7032 = !DILocation(line: 121, column: 1, scope: !6810)
!7033 = !{i64 2147601411, i64 2147601454, i64 2147601494}
!7034 = !DILocation(line: 122, column: 1, scope: !6810)
!7035 = !{i64 2147601577, i64 2147601620, i64 2147601660}
!7036 = !DILocation(line: 123, column: 1, scope: !6810)
!7037 = !{i64 2147601758, i64 2147601801, i64 2147601841}
!7038 = !DILocation(line: 124, column: 1, scope: !6810)
!7039 = !{i64 2147601951, i64 2147601994, i64 2147602034}
!7040 = !DILocation(line: 125, column: 1, scope: !6810)
!7041 = !{i64 2147602177, i64 2147602220, i64 2147602260}
!7042 = !DILocation(line: 126, column: 1, scope: !6810)
!7043 = !{i64 2147602391, i64 2147602434, i64 2147602474}
!7044 = !DILocation(line: 127, column: 1, scope: !6810)
!7045 = !{i64 2147602617, i64 2147602660, i64 2147602700}
!7046 = !DILocation(line: 128, column: 1, scope: !6810)
!7047 = !{i64 2147602834, i64 2147602877, i64 2147602917}
!7048 = !DILocation(line: 129, column: 1, scope: !6810)
!7049 = !{i64 2147603111, i64 2147603154, i64 2147603194}
!7050 = !DILocation(line: 130, column: 1, scope: !6810)
!7051 = !{i64 2147603337, i64 2147603380, i64 2147603420}
!7052 = !DILocation(line: 131, column: 1, scope: !6810)
!7053 = !{i64 2147603545, i64 2147603588, i64 2147603628}
!7054 = !DILocation(line: 132, column: 1, scope: !6810)
!7055 = !{i64 2147607802, i64 2147607845, i64 2147607885}
!7056 = !DILocation(line: 133, column: 1, scope: !6810)
!7057 = !{i64 2147608067, i64 2147608110, i64 2147608150}
!7058 = !DILocation(line: 134, column: 1, scope: !6810)
!7059 = !{i64 2147608281, i64 2147608324, i64 2147608364}
!7060 = !DILocation(line: 135, column: 1, scope: !6810)
!7061 = !{i64 2147608456, i64 2147608499, i64 2147608539}
!7062 = !DILocation(line: 136, column: 1, scope: !6810)
!7063 = !{i64 2147608710, i64 2147608753, i64 2147608793}
!7064 = !DILocation(line: 137, column: 1, scope: !6810)
!7065 = !{i64 2147608909, i64 2147608952, i64 2147608992}
!7066 = !DILocation(line: 138, column: 1, scope: !6810)
!7067 = !{i64 2147609151, i64 2147609194, i64 2147609234}
!7068 = !DILocation(line: 139, column: 1, scope: !6810)
!7069 = !{i64 2147609314, i64 2147609357, i64 2147609397}
!7070 = !DILocation(line: 140, column: 1, scope: !6810)
!7071 = !{i64 2147609501, i64 2147609544, i64 2147609584}
!7072 = !DILocation(line: 141, column: 1, scope: !6810)
!7073 = !{i64 2147609709, i64 2147609752, i64 2147609792}
!7074 = !DILocation(line: 142, column: 1, scope: !6810)
!7075 = !{i64 2147609905, i64 2147609948, i64 2147609988}
!7076 = !DILocation(line: 143, column: 1, scope: !6810)
!7077 = !{i64 2147610098, i64 2147610141, i64 2147610181}
!7078 = !DILocation(line: 144, column: 1, scope: !6810)
!7079 = !{i64 2147610281, i64 2147610324, i64 2147610364}
!7080 = !DILocation(line: 145, column: 1, scope: !6810)
!7081 = !{i64 2147610495, i64 2147610538, i64 2147610578}
!7082 = !DILocation(line: 146, column: 1, scope: !6810)
!7083 = !{i64 2147610706, i64 2147610749, i64 2147610789}
!7084 = !DILocation(line: 147, column: 1, scope: !6810)
!7085 = !{i64 2147610926, i64 2147610969, i64 2147611009}
!7086 = !DILocation(line: 148, column: 1, scope: !6810)
!7087 = !{i64 2147611133, i64 2147611176, i64 2147611216}
!7088 = !DILocation(line: 149, column: 1, scope: !6810)
!7089 = !{i64 2147611406, i64 2147611449, i64 2147611489}
!7090 = !DILocation(line: 150, column: 1, scope: !6810)
!7091 = !{i64 2147611654, i64 2147611697, i64 2147611737}
!7092 = !DILocation(line: 151, column: 1, scope: !6810)
!7093 = !{i64 2147611853, i64 2147611896, i64 2147611936}
!7094 = !DILocation(line: 152, column: 1, scope: !6810)
!7095 = !{i64 2147612088, i64 2147612131, i64 2147612171}
!7096 = !DILocation(line: 153, column: 1, scope: !6810)
!7097 = !{i64 2147612338, i64 2147612381, i64 2147612421}
!7098 = !DILocation(line: 154, column: 1, scope: !6810)
!7099 = !{i64 2147612540, i64 2147612583, i64 2147612623}
!7100 = !DILocation(line: 155, column: 1, scope: !6810)
!7101 = !{i64 2147612763, i64 2147612806, i64 2147612846}
!7102 = !DILocation(line: 156, column: 1, scope: !6810)
!7103 = !{i64 2147612977, i64 2147613020, i64 2147613060}
!7104 = !DILocation(line: 157, column: 1, scope: !6810)
!7105 = !{i64 2147613221, i64 2147613264, i64 2147613304}
!7106 = !DILocation(line: 158, column: 1, scope: !6810)
!7107 = !{i64 2147613450, i64 2147613493, i64 2147613533}
!7108 = !DILocation(line: 159, column: 1, scope: !6810)
!7109 = !{i64 2147613679, i64 2147613722, i64 2147613762}
!7110 = !DILocation(line: 160, column: 1, scope: !6810)
!7111 = !{i64 2147613887, i64 2147613930, i64 2147613970}
!7112 = !DILocation(line: 161, column: 1, scope: !6810)
!7113 = !{i64 2147614125, i64 2147614168, i64 2147614208}
!7114 = !DILocation(line: 162, column: 1, scope: !6810)
!7115 = !{i64 2147614351, i64 2147614394, i64 2147614434}
!7116 = !DILocation(line: 163, column: 1, scope: !6810)
!7117 = !{i64 2147614610, i64 2147614653, i64 2147614693}
!7118 = !DILocation(line: 164, column: 1, scope: !6810)
!7119 = !{i64 2147614830, i64 2147614873, i64 2147614913}
!7120 = !DILocation(line: 165, column: 1, scope: !6810)
!7121 = !{i64 2147615062, i64 2147615105, i64 2147615145}
!7122 = !DILocation(line: 166, column: 1, scope: !6810)
!7123 = !{i64 2147615303, i64 2147615346, i64 2147615386}
!7124 = !DILocation(line: 167, column: 1, scope: !6810)
!7125 = !{i64 2147615544, i64 2147615587, i64 2147615627}
!7126 = !DILocation(line: 168, column: 1, scope: !6810)
!7127 = !{i64 2147615767, i64 2147615810, i64 2147615850}
!7128 = !DILocation(line: 169, column: 1, scope: !6810)
!7129 = !{i64 2147615984, i64 2147616027, i64 2147616067}
!7130 = !DILocation(line: 170, column: 1, scope: !6810)
!7131 = !{i64 2147616225, i64 2147616268, i64 2147616308}
!7132 = !DILocation(line: 171, column: 1, scope: !6810)
!7133 = !{i64 2147620473, i64 2147620516, i64 2147620556}
!7134 = !DILocation(line: 172, column: 1, scope: !6810)
!7135 = !{i64 2147620660, i64 2147620703, i64 2147620743}
!7136 = !DILocation(line: 173, column: 1, scope: !6810)
!7137 = !{i64 2147620823, i64 2147620866, i64 2147620906}
!7138 = !DILocation(line: 174, column: 1, scope: !6810)
!7139 = !{i64 2147621028, i64 2147621071, i64 2147621111}
!7140 = !DILocation(line: 175, column: 1, scope: !6810)
!7141 = !{i64 2147621221, i64 2147621264, i64 2147621304}
!7142 = !DILocation(line: 176, column: 1, scope: !6810)
!7143 = !{i64 2147621480, i64 2147621523, i64 2147621563}
!7144 = !DILocation(line: 177, column: 1, scope: !6810)
!7145 = !{i64 2147621703, i64 2147621746, i64 2147621786}
!7146 = !DILocation(line: 178, column: 1, scope: !6810)
!7147 = !{i64 2147621932, i64 2147621975, i64 2147622015}
!7148 = !DILocation(line: 179, column: 1, scope: !6810)
!7149 = !{i64 2147622146, i64 2147622189, i64 2147622229}
!7150 = !DILocation(line: 180, column: 1, scope: !6810)
!7151 = !{i64 2147622348, i64 2147622391, i64 2147622431}
!7152 = !DILocation(line: 181, column: 1, scope: !6810)
!7153 = !{i64 2147622544, i64 2147622587, i64 2147622627}
!7154 = !DILocation(line: 182, column: 1, scope: !6810)
!7155 = !{i64 2147622756, i64 2147622799, i64 2147622839}
!7156 = !DILocation(line: 183, column: 1, scope: !6810)
!7157 = !{i64 2147622977, i64 2147623020, i64 2147623060}
!7158 = !DILocation(line: 184, column: 1, scope: !6810)
!7159 = !{i64 2147623191, i64 2147623234, i64 2147623274}
!7160 = !DILocation(line: 185, column: 1, scope: !6810)
!7161 = !{i64 2147623381, i64 2147623424, i64 2147623464}
!7162 = !DILocation(line: 186, column: 1, scope: !6810)
!7163 = !{i64 2147623580, i64 2147623623, i64 2147623663}
!7164 = !DILocation(line: 187, column: 1, scope: !6810)
!7165 = !{i64 2147623785, i64 2147623828, i64 2147623868}
!7166 = !DILocation(line: 188, column: 1, scope: !6810)
!7167 = !{i64 2147624005, i64 2147624048, i64 2147624088}
!7168 = !DILocation(line: 189, column: 1, scope: !6810)
!7169 = !{i64 2147624206, i64 2147624249, i64 2147624289}
!7170 = !DILocation(line: 190, column: 1, scope: !6810)
!7171 = !{i64 2147624405, i64 2147624448, i64 2147624488}
!7172 = !DILocation(line: 191, column: 1, scope: !6810)
!7173 = !{i64 2147624610, i64 2147624653, i64 2147624693}
!7174 = !DILocation(line: 192, column: 1, scope: !6810)
!7175 = !{i64 2147624779, i64 2147624822, i64 2147624862}
!7176 = !DILocation(line: 193, column: 1, scope: !6810)
!7177 = !{i64 2147624963, i64 2147625006, i64 2147625046}
!7178 = !DILocation(line: 194, column: 1, scope: !6810)
!7179 = !{i64 2147625147, i64 2147625190, i64 2147625230}
!7180 = !DILocation(line: 195, column: 1, scope: !6810)
!7181 = !{i64 2147625334, i64 2147625377, i64 2147625417}
!7182 = !DILocation(line: 196, column: 1, scope: !6810)
!7183 = !{i64 2147625518, i64 2147625561, i64 2147625601}
!7184 = !DILocation(line: 197, column: 1, scope: !6810)
!7185 = !{i64 2147625756, i64 2147625799, i64 2147625839}
!7186 = !DILocation(line: 198, column: 1, scope: !6810)
!7187 = !{i64 2147625986, i64 2147626029, i64 2147626069}
!7188 = !DILocation(line: 199, column: 1, scope: !6810)
!7189 = !{i64 2147626215, i64 2147626258, i64 2147626298}
!7190 = !DILocation(line: 200, column: 1, scope: !6810)
!7191 = !{i64 2147626402, i64 2147626445, i64 2147626485}
!7192 = !DILocation(line: 201, column: 1, scope: !6810)
!7193 = !{i64 2147626598, i64 2147626641, i64 2147626681}
!7194 = !DILocation(line: 202, column: 1, scope: !6810)
!7195 = !{i64 2147626806, i64 2147626849, i64 2147626889}
!7196 = !DILocation(line: 203, column: 1, scope: !6810)
!7197 = !{i64 2147627018, i64 2147627061, i64 2147627101}
!7198 = !DILocation(line: 204, column: 1, scope: !6810)
!7199 = !{i64 2147627217, i64 2147627260, i64 2147627300}
!7200 = !DILocation(line: 205, column: 1, scope: !6810)
!7201 = !{i64 2147627455, i64 2147627498, i64 2147627538}
!7202 = !DILocation(line: 206, column: 1, scope: !6810)
!7203 = !{i64 2147627651, i64 2147627694, i64 2147627734}
!7204 = !DILocation(line: 207, column: 1, scope: !6810)
!7205 = !{i64 2147627853, i64 2147627896, i64 2147627936}
!7206 = !DILocation(line: 208, column: 1, scope: !6810)
!7207 = !{i64 2147628046, i64 2147628089, i64 2147628129}
!7208 = !DILocation(line: 209, column: 1, scope: !6810)
!7209 = !{i64 2147628280, i64 2147628323, i64 2147628363}
!7210 = !DILocation(line: 210, column: 1, scope: !6810)
!7211 = !{i64 2147628443, i64 2147628486, i64 2147628526}
!7212 = !DILocation(line: 211, column: 1, scope: !6810)
!7213 = !{i64 2147628682, i64 2147628725, i64 2147628765}
!7214 = !DILocation(line: 212, column: 1, scope: !6810)
!7215 = !{i64 2147628921, i64 2147628964, i64 2147629004}
!7216 = !DILocation(line: 213, column: 1, scope: !6810)
!7217 = !{i64 2147629157, i64 2147629200, i64 2147629240}
!7218 = !DILocation(line: 214, column: 1, scope: !6810)
!7219 = !{i64 2147629387, i64 2147629430, i64 2147629470}
!7220 = !DILocation(line: 215, column: 1, scope: !6810)
!7221 = !{i64 2147633662, i64 2147633705, i64 2147633745}
!7222 = !DILocation(line: 216, column: 1, scope: !6810)
!7223 = !{i64 2147633849, i64 2147633892, i64 2147633932}
!7224 = !DILocation(line: 217, column: 1, scope: !6810)
!7225 = !{i64 2147634048, i64 2147634091, i64 2147634131}
!7226 = !DILocation(line: 218, column: 1, scope: !6810)
!7227 = !{i64 2147634319, i64 2147634362, i64 2147634402}
!7228 = !DILocation(line: 219, column: 1, scope: !6810)
!7229 = !{i64 2147634494, i64 2147634537, i64 2147634577}
!7230 = !DILocation(line: 220, column: 1, scope: !6810)
!7231 = !{i64 2147634728, i64 2147634771, i64 2147634811}
!7232 = !DILocation(line: 221, column: 1, scope: !6810)
!7233 = !{i64 2147634936, i64 2147634979, i64 2147635019}
!7234 = !DILocation(line: 222, column: 1, scope: !6810)
!7235 = !{i64 2147635154, i64 2147635197, i64 2147635237}
!7236 = !DILocation(line: 223, column: 1, scope: !6810)
!7237 = !{i64 2147635344, i64 2147635387, i64 2147635427}
!7238 = !DILocation(line: 224, column: 1, scope: !6810)
!7239 = !{i64 2147635576, i64 2147635619, i64 2147635659}
!7240 = !DILocation(line: 225, column: 1, scope: !6810)
!7241 = !{i64 2147635796, i64 2147635839, i64 2147635879}
!7242 = !DILocation(line: 226, column: 1, scope: !6810)
!7243 = !{i64 2147635992, i64 2147636035, i64 2147636075}
!7244 = !DILocation(line: 227, column: 1, scope: !6810)
!7245 = !{i64 2147636198, i64 2147636241, i64 2147636281}
!7246 = !DILocation(line: 228, column: 1, scope: !6810)
!7247 = !{i64 2147636403, i64 2147636446, i64 2147636486}
!7248 = !DILocation(line: 229, column: 1, scope: !6810)
!7249 = !{i64 2147636617, i64 2147636660, i64 2147636700}
!7250 = !DILocation(line: 230, column: 1, scope: !6810)
!7251 = !{i64 2147636843, i64 2147636886, i64 2147636926}
!7252 = !DILocation(line: 231, column: 1, scope: !6810)
!7253 = !{i64 2147637051, i64 2147637094, i64 2147637134}
!7254 = !DILocation(line: 232, column: 1, scope: !6810)
!7255 = !{i64 2147637247, i64 2147637290, i64 2147637330}
!7256 = !DILocation(line: 233, column: 1, scope: !6810)
!7257 = !{i64 2147637479, i64 2147637522, i64 2147637562}
!7258 = !DILocation(line: 234, column: 1, scope: !6810)
!7259 = !{i64 2147637663, i64 2147637706, i64 2147637746}
!7260 = !DILocation(line: 235, column: 1, scope: !6810)
!7261 = !{i64 2147637872, i64 2147637915, i64 2147637955}
!7262 = !DILocation(line: 236, column: 1, scope: !6810)
!7263 = !{i64 2147638080, i64 2147638123, i64 2147638163}
!7264 = !DILocation(line: 237, column: 1, scope: !6810)
!7265 = !{i64 2147638276, i64 2147638319, i64 2147638359}
!7266 = !DILocation(line: 238, column: 1, scope: !6810)
!7267 = !{i64 2147638460, i64 2147638503, i64 2147638543}
!7268 = !DILocation(line: 239, column: 1, scope: !6810)
!7269 = !{i64 2147638686, i64 2147638729, i64 2147638769}
!7270 = !DILocation(line: 240, column: 1, scope: !6810)
!7271 = !{i64 2147638912, i64 2147638955, i64 2147638995}
!7272 = !DILocation(line: 241, column: 1, scope: !6810)
!7273 = !{i64 2147639138, i64 2147639181, i64 2147639221}
!7274 = !DILocation(line: 242, column: 1, scope: !6810)
!7275 = !{i64 2147639364, i64 2147639407, i64 2147639447}
!7276 = !DILocation(line: 243, column: 1, scope: !6810)
!7277 = !{i64 2147639590, i64 2147639633, i64 2147639673}
!7278 = !DILocation(line: 244, column: 1, scope: !6810)
!7279 = !{i64 2147639822, i64 2147639865, i64 2147639905}
!7280 = !DILocation(line: 245, column: 1, scope: !6810)
!7281 = !{i64 2147640060, i64 2147640103, i64 2147640143}
!7282 = !DILocation(line: 246, column: 1, scope: !6810)
!7283 = !{i64 2147640280, i64 2147640323, i64 2147640363}
!7284 = !DILocation(line: 247, column: 1, scope: !6810)
!7285 = !{i64 2147640524, i64 2147640567, i64 2147640607}
!7286 = !DILocation(line: 248, column: 1, scope: !6810)
!7287 = !{i64 2147640765, i64 2147640808, i64 2147640848}
!7288 = !DILocation(line: 249, column: 1, scope: !6810)
!7289 = !{i64 2147641000, i64 2147641043, i64 2147641083}
!7290 = !DILocation(line: 250, column: 1, scope: !6810)
!7291 = !{i64 2147641232, i64 2147641275, i64 2147641315}
!7292 = !DILocation(line: 251, column: 1, scope: !6810)
!7293 = !{i64 2147641434, i64 2147641477, i64 2147641517}
!7294 = !DILocation(line: 252, column: 1, scope: !6810)
!7295 = !{i64 2147641684, i64 2147641727, i64 2147641767}
!7296 = !DILocation(line: 253, column: 1, scope: !6810)
!7297 = !{i64 2147641922, i64 2147641965, i64 2147642005}
!7298 = !DILocation(line: 254, column: 1, scope: !6810)
!7299 = !{i64 2147642130, i64 2147642173, i64 2147642213}
!7300 = !DILocation(line: 255, column: 1, scope: !6810)
!7301 = !{i64 2147642326, i64 2147642369, i64 2147642409}
!7302 = !DILocation(line: 256, column: 1, scope: !6810)
!7303 = !{i64 2147646571, i64 2147646614, i64 2147646654}
!7304 = !DILocation(line: 257, column: 1, scope: !6810)
!7305 = !{i64 2147646788, i64 2147646831, i64 2147646871}
!7306 = !DILocation(line: 258, column: 1, scope: !6810)
!7307 = !{i64 2147646993, i64 2147647036, i64 2147647076}
!7308 = !DILocation(line: 259, column: 1, scope: !6810)
!7309 = !{i64 2147647228, i64 2147647271, i64 2147647311}
!7310 = !DILocation(line: 260, column: 1, scope: !6810)
!7311 = !{i64 2147647451, i64 2147647494, i64 2147647534}
!7312 = !DILocation(line: 261, column: 1, scope: !6810)
!7313 = !{i64 2147647675, i64 2147647718, i64 2147647758}
!7314 = !DILocation(line: 262, column: 1, scope: !6810)
!7315 = !{i64 2147647913, i64 2147647956, i64 2147647996}
!7316 = !DILocation(line: 263, column: 1, scope: !6810)
!7317 = !{i64 2147648151, i64 2147648194, i64 2147648234}
!7318 = !DILocation(line: 264, column: 1, scope: !6810)
!7319 = !{i64 2147648368, i64 2147648411, i64 2147648451}
!7320 = !DILocation(line: 265, column: 1, scope: !6810)
!7321 = !{i64 2147648573, i64 2147648616, i64 2147648656}
!7322 = !DILocation(line: 266, column: 1, scope: !6810)
!7323 = !{i64 2147648766, i64 2147648809, i64 2147648849}
!7324 = !DILocation(line: 267, column: 1, scope: !6810)
!7325 = !{i64 2147649019, i64 2147649062, i64 2147649102}
!7326 = !DILocation(line: 268, column: 1, scope: !6810)
!7327 = !{i64 2147649227, i64 2147649270, i64 2147649310}
!7328 = !DILocation(line: 269, column: 1, scope: !6810)
!7329 = !{i64 2147649423, i64 2147649466, i64 2147649506}
!7330 = !DILocation(line: 270, column: 1, scope: !6810)
!7331 = !{i64 2147649637, i64 2147649680, i64 2147649720}
!7332 = !DILocation(line: 271, column: 1, scope: !6810)
!7333 = !{i64 2147649845, i64 2147649888, i64 2147649928}
!7334 = !DILocation(line: 272, column: 1, scope: !6810)
!7335 = !{i64 2147650035, i64 2147650078, i64 2147650118}
!7336 = !DILocation(line: 273, column: 1, scope: !6810)
!7337 = !{i64 2147650249, i64 2147650292, i64 2147650332}
!7338 = !DILocation(line: 274, column: 1, scope: !6810)
!7339 = !{i64 2147650511, i64 2147650554, i64 2147650594}
!7340 = !DILocation(line: 275, column: 1, scope: !6810)
!7341 = !{i64 2147650722, i64 2147650765, i64 2147650805}
!7342 = !DILocation(line: 276, column: 1, scope: !6810)
!7343 = !{i64 2147650966, i64 2147651009, i64 2147651049}
!7344 = !DILocation(line: 277, column: 1, scope: !6810)
!7345 = !{i64 2147651177, i64 2147651220, i64 2147651260}
!7346 = !DILocation(line: 278, column: 1, scope: !6810)
!7347 = !{i64 2147651406, i64 2147651449, i64 2147651489}
!7348 = !DILocation(line: 279, column: 1, scope: !6810)
!7349 = !{i64 2147651671, i64 2147651714, i64 2147651754}
!7350 = !DILocation(line: 280, column: 1, scope: !6810)
!7351 = !{i64 2147651876, i64 2147651919, i64 2147651959}
!7352 = !DILocation(line: 281, column: 1, scope: !6810)
!7353 = !{i64 2147652072, i64 2147652115, i64 2147652155}
!7354 = !DILocation(line: 282, column: 1, scope: !6810)
!7355 = !{i64 2147652295, i64 2147652338, i64 2147652378}
!7356 = !DILocation(line: 283, column: 1, scope: !6810)
!7357 = !{i64 2147652458, i64 2147652501, i64 2147652541}
!7358 = !DILocation(line: 284, column: 1, scope: !6810)
!7359 = !{i64 2147652663, i64 2147652706, i64 2147652746}
!7360 = !DILocation(line: 285, column: 1, scope: !6810)
!7361 = !{i64 2147652883, i64 2147652926, i64 2147652966}
!7362 = !DILocation(line: 286, column: 1, scope: !6810)
!7363 = !{i64 2147653097, i64 2147653140, i64 2147653180}
!7364 = !DILocation(line: 287, column: 1, scope: !6810)
!7365 = !{i64 2147653341, i64 2147653384, i64 2147653424}
!7366 = !DILocation(line: 288, column: 1, scope: !6810)
!7367 = !{i64 2147653573, i64 2147653616, i64 2147653656}
!7368 = !DILocation(line: 289, column: 1, scope: !6810)
!7369 = !{i64 2147653787, i64 2147653830, i64 2147653870}
!7370 = !DILocation(line: 290, column: 1, scope: !6810)
!7371 = !{i64 2147653998, i64 2147654041, i64 2147654081}
!7372 = !DILocation(line: 291, column: 1, scope: !6810)
!7373 = !{i64 2147654191, i64 2147654234, i64 2147654274}
!7374 = !DILocation(line: 292, column: 1, scope: !6810)
!7375 = !{i64 2147654390, i64 2147654433, i64 2147654473}
!7376 = !DILocation(line: 293, column: 1, scope: !6810)
!7377 = !{i64 2147654562, i64 2147654605, i64 2147654645}
!7378 = !DILocation(line: 294, column: 1, scope: !6810)
!7379 = !{i64 2147654755, i64 2147654798, i64 2147654838}
!7380 = !DILocation(line: 295, column: 1, scope: !6810)
!7381 = !{i64 2147654927, i64 2147654970, i64 2147655010}
!7382 = !DILocation(line: 296, column: 1, scope: !6810)
!7383 = !{i64 2147655117, i64 2147655160, i64 2147655200}
!7384 = !DILocation(line: 297, column: 1, scope: !6810)
!7385 = !{i64 2147655310, i64 2147655353, i64 2147655393}
!7386 = !DILocation(line: 298, column: 1, scope: !6810)
!7387 = !{i64 2147659567, i64 2147659610, i64 2147659650}
!7388 = !DILocation(line: 299, column: 1, scope: !6810)
!7389 = !{i64 2147659730, i64 2147659773, i64 2147659813}
!7390 = !DILocation(line: 300, column: 1, scope: !6810)
!7391 = !{i64 2147659932, i64 2147659975, i64 2147660015}
!7392 = !DILocation(line: 301, column: 1, scope: !6810)
!7393 = !{i64 2147660137, i64 2147660180, i64 2147660220}
!7394 = !DILocation(line: 302, column: 1, scope: !6810)
!7395 = !{i64 2147660345, i64 2147660388, i64 2147660428}
!7396 = !DILocation(line: 303, column: 1, scope: !6810)
!7397 = !{i64 2147660538, i64 2147660581, i64 2147660621}
!7398 = !DILocation(line: 304, column: 1, scope: !6810)
!7399 = !{i64 2147660725, i64 2147660768, i64 2147660808}
!7400 = !DILocation(line: 305, column: 1, scope: !6810)
!7401 = !{i64 2147660942, i64 2147660985, i64 2147661025}
!7402 = !DILocation(line: 306, column: 1, scope: !6810)
!7403 = !{i64 2147661162, i64 2147661205, i64 2147661245}
!7404 = !DILocation(line: 307, column: 1, scope: !6810)
!7405 = !{i64 2147661389, i64 2147661432, i64 2147661472}
!7406 = !DILocation(line: 308, column: 1, scope: !6810)
!7407 = !{i64 2147661606, i64 2147661649, i64 2147661689}
!7408 = !DILocation(line: 309, column: 1, scope: !6810)
!7409 = !{i64 2147661898, i64 2147661941, i64 2147661981}
!7410 = !DILocation(line: 310, column: 1, scope: !6810)
!7411 = !{i64 2147662130, i64 2147662173, i64 2147662213}
!7412 = !DILocation(line: 311, column: 1, scope: !6810)
!7413 = !{i64 2147662347, i64 2147662390, i64 2147662430}
!7414 = !DILocation(line: 312, column: 1, scope: !6810)
!7415 = !{i64 2147662554, i64 2147662597, i64 2147662637}
!7416 = !DILocation(line: 313, column: 1, scope: !6810)
!7417 = !{i64 2147662755, i64 2147662798, i64 2147662838}
!7418 = !DILocation(line: 314, column: 1, scope: !6810)
!7419 = !{i64 2147662987, i64 2147663030, i64 2147663070}
!7420 = !DILocation(line: 315, column: 1, scope: !6810)
!7421 = !{i64 2147663195, i64 2147663238, i64 2147663278}
!7422 = !DILocation(line: 316, column: 1, scope: !6810)
!7423 = !{i64 2147663385, i64 2147663428, i64 2147663468}
!7424 = !DILocation(line: 317, column: 1, scope: !6810)
!7425 = !{i64 2147663611, i64 2147663654, i64 2147663694}
!7426 = !DILocation(line: 318, column: 1, scope: !6810)
!7427 = !{i64 2147663800, i64 2147663843, i64 2147663883}
!7428 = !DILocation(line: 319, column: 1, scope: !6810)
!7429 = !{i64 2147664071, i64 2147664114, i64 2147664154}
!7430 = !DILocation(line: 320, column: 1, scope: !6810)
!7431 = !{i64 2147664291, i64 2147664334, i64 2147664374}
!7432 = !DILocation(line: 321, column: 1, scope: !6810)
!7433 = !{i64 2147664544, i64 2147664587, i64 2147664627}
!7434 = !DILocation(line: 322, column: 1, scope: !6810)
!7435 = !{i64 2147664752, i64 2147664795, i64 2147664835}
!7436 = !DILocation(line: 323, column: 1, scope: !6810)
!7437 = !{i64 2147664984, i64 2147665027, i64 2147665067}
!7438 = !DILocation(line: 324, column: 1, scope: !6810)
!7439 = !{i64 2147665195, i64 2147665238, i64 2147665278}
!7440 = !DILocation(line: 325, column: 1, scope: !6810)
!7441 = !{i64 2147665385, i64 2147665428, i64 2147665468}
!7442 = !DILocation(line: 326, column: 1, scope: !6810)
!7443 = !{i64 2147665599, i64 2147665642, i64 2147665682}
!7444 = !DILocation(line: 327, column: 1, scope: !6810)
!7445 = !{i64 2147665798, i64 2147665841, i64 2147665881}
!7446 = !DILocation(line: 328, column: 1, scope: !6810)
!7447 = !{i64 2147665985, i64 2147666028, i64 2147666068}
!7448 = !DILocation(line: 329, column: 1, scope: !6810)
!7449 = !{i64 2147666193, i64 2147666236, i64 2147666276}
!7450 = !DILocation(line: 330, column: 1, scope: !6810)
!7451 = !{i64 2147666422, i64 2147666465, i64 2147666505}
!7452 = !DILocation(line: 331, column: 1, scope: !6810)
!7453 = !{i64 2147666624, i64 2147666667, i64 2147666707}
!7454 = !DILocation(line: 332, column: 1, scope: !6810)
!7455 = !{i64 2147666823, i64 2147666866, i64 2147666906}
!7456 = !DILocation(line: 333, column: 1, scope: !6810)
!7457 = !{i64 2147667040, i64 2147667083, i64 2147667123}
!7458 = !DILocation(line: 335, column: 1, scope: !6810)
!7459 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !469, file: !469, line: 30, type: !476, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7460)
!7460 = !{!7461, !7462}
!7461 = !DILocalVariable(name: "arg", arg: 1, scope: !7459, file: !469, line: 30, type: !478)
!7462 = !DILocalVariable(name: "key", scope: !7459, file: !469, line: 32, type: !113)
!7463 = !DILocation(line: 0, scope: !7459)
!7464 = !DILocation(line: 37, column: 2, scope: !7459)
!7465 = !DILocation(line: 38, column: 2, scope: !7459)
!7466 = !DILocation(line: 55, column: 2, scope: !7467, inlinedAt: !7474)
!7467 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7471)
!7468 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!32}
!7471 = !{!7472, !7473}
!7472 = !DILocalVariable(name: "key", scope: !7467, file: !7468, line: 44, type: !32)
!7473 = !DILocalVariable(name: "tmp", scope: !7467, file: !7468, line: 53, type: !32)
!7474 = distinct !DILocation(line: 40, column: 8, scope: !7459)
!7475 = !{i64 2135070}
!7476 = !DILocation(line: 0, scope: !7467, inlinedAt: !7474)
!7477 = !DILocalVariable(name: "key", arg: 1, scope: !7478, file: !7468, line: 84, type: !32)
!7478 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7481)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{null, !32}
!7481 = !{!7477}
!7482 = !DILocation(line: 0, scope: !7478, inlinedAt: !7483)
!7483 = distinct !DILocation(line: 47, column: 2, scope: !7459)
!7484 = !DILocation(line: 95, column: 2, scope: !7478, inlinedAt: !7483)
!7485 = !{i64 2135887}
!7486 = !DILocation(line: 51, column: 18, scope: !7459)
!7487 = !DILocation(line: 53, column: 2, scope: !7459)
!7488 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7489, file: !7489, line: 1609, type: !266, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7489 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7490 = !DILocation(line: 1611, column: 3, scope: !7488)
!7491 = !DILocation(line: 1612, column: 1, scope: !7488)
!7492 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7489, file: !7489, line: 1629, type: !266, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7493 = !DILocation(line: 1631, column: 3, scope: !7492)
!7494 = !DILocation(line: 1632, column: 1, scope: !7492)
!7495 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !506, file: !506, line: 26, type: !512, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7496)
!7496 = !{!7497}
!7497 = !DILocalVariable(name: "dev", arg: 1, scope: !7495, file: !506, line: 26, type: !514)
!7498 = !DILocation(line: 0, scope: !7495)
!7499 = !DILocation(line: 68, column: 2, scope: !7495)
!7500 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7501, file: !7501, line: 14, type: !4977, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7502)
!7501 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "fmt", arg: 1, scope: !7500, file: !7501, line: 14, type: !269)
!7504 = !DILocalVariable(name: "ap", scope: !7500, file: !7501, line: 16, type: !7505)
!7505 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3985, line: 99, baseType: !7506)
!7506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3985, line: 40, baseType: !7507)
!7507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7501, baseType: !7508)
!7508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7509)
!7509 = !{!7510}
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7508, file: !7501, line: 16, baseType: !104, size: 32)
!7511 = !DILocation(line: 0, scope: !7500)
!7512 = !DILocation(line: 16, column: 2, scope: !7500)
!7513 = !DILocation(line: 16, column: 10, scope: !7500)
!7514 = !DILocation(line: 18, column: 2, scope: !7500)
!7515 = !DILocation(line: 19, column: 2, scope: !7500)
!7516 = !DILocation(line: 20, column: 2, scope: !7500)
!7517 = !DILocation(line: 21, column: 1, scope: !7500)
!7518 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7501, file: !7501, line: 23, type: !7519, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7521)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{null, !269, !7505}
!7521 = !{!7522, !7523}
!7522 = !DILocalVariable(name: "fmt", arg: 1, scope: !7518, file: !7501, line: 23, type: !269)
!7523 = !DILocalVariable(name: "ap", arg: 2, scope: !7518, file: !7501, line: 23, type: !7505)
!7524 = !DILocation(line: 0, scope: !7518)
!7525 = !DILocation(line: 25, column: 2, scope: !7518)
!7526 = !DILocation(line: 26, column: 1, scope: !7518)
!7527 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7501, file: !7501, line: 52, type: !7528, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{null, !105, !13, !111}
!7530 = !{!7531, !7532, !7533, !7534}
!7531 = !DILocalVariable(name: "level", arg: 1, scope: !7527, file: !7501, line: 52, type: !105)
!7532 = !DILocalVariable(name: "data", arg: 2, scope: !7527, file: !7501, line: 52, type: !13)
!7533 = !DILocalVariable(name: "size", arg: 3, scope: !7527, file: !7501, line: 52, type: !111)
!7534 = !DILocalVariable(name: "data_buffer", scope: !7527, file: !7501, line: 54, type: !269)
!7535 = !DILocation(line: 0, scope: !7527)
!7536 = !DILocation(line: 55, column: 14, scope: !7527)
!7537 = !DILocation(line: 55, column: 2, scope: !7527)
!7538 = !DILocation(line: 56, column: 3, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7527, file: !7501, line: 55, column: 20)
!7540 = !DILocation(line: 57, column: 3, scope: !7539)
!7541 = !DILocation(line: 59, column: 7, scope: !7539)
!7542 = distinct !{!7542, !7537, !7543}
!7543 = !DILocation(line: 65, column: 2, scope: !7527)
!7544 = !DILocation(line: 66, column: 1, scope: !7527)
!7545 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3450, file: !3450, line: 175, type: !3451, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7546)
!7546 = !{!7547}
!7547 = !DILocalVariable(name: "level", arg: 1, scope: !7545, file: !3450, line: 175, type: !105)
!7548 = !DILocation(line: 0, scope: !7545)
!7549 = !DILocation(line: 177, column: 2, scope: !7545)
!7550 = !DILocation(line: 189, column: 1, scope: !7545)
!7551 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7501, file: !7501, line: 28, type: !7552, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{null, !269, !111}
!7554 = !{!7555, !7556, !7557, !7559, !7561}
!7555 = !DILocalVariable(name: "data", arg: 1, scope: !7551, file: !7501, line: 28, type: !269)
!7556 = !DILocalVariable(name: "length", arg: 2, scope: !7551, file: !7501, line: 28, type: !111)
!7557 = !DILocalVariable(name: "i", scope: !7558, file: !7501, line: 30, type: !111)
!7558 = distinct !DILexicalBlock(scope: !7551, file: !7501, line: 30, column: 2)
!7559 = !DILocalVariable(name: "i", scope: !7560, file: !7501, line: 40, type: !111)
!7560 = distinct !DILexicalBlock(scope: !7551, file: !7501, line: 40, column: 2)
!7561 = !DILocalVariable(name: "c", scope: !7562, file: !7501, line: 42, type: !170)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !7501, line: 41, column: 19)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !7501, line: 41, column: 7)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !7501, line: 40, column: 54)
!7565 = distinct !DILexicalBlock(scope: !7560, file: !7501, line: 40, column: 2)
!7566 = !DILocation(line: 0, scope: !7551)
!7567 = !DILocation(line: 0, scope: !7558)
!7568 = !DILocation(line: 30, column: 2, scope: !7558)
!7569 = !DILocation(line: 38, column: 2, scope: !7551)
!7570 = !DILocation(line: 0, scope: !7560)
!7571 = !DILocation(line: 40, column: 2, scope: !7560)
!7572 = !DILocation(line: 31, column: 9, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !7501, line: 31, column: 7)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !7501, line: 30, column: 54)
!7575 = distinct !DILexicalBlock(scope: !7558, file: !7501, line: 30, column: 2)
!7576 = !DILocation(line: 31, column: 7, scope: !7574)
!7577 = !DILocation(line: 32, column: 35, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7573, file: !7501, line: 31, column: 19)
!7579 = !DILocation(line: 32, column: 20, scope: !7578)
!7580 = !DILocation(line: 32, column: 4, scope: !7578)
!7581 = !DILocation(line: 33, column: 3, scope: !7578)
!7582 = !DILocation(line: 34, column: 4, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7573, file: !7501, line: 33, column: 10)
!7584 = !DILocation(line: 30, column: 50, scope: !7575)
!7585 = !DILocation(line: 30, column: 24, scope: !7575)
!7586 = distinct !{!7586, !7568, !7587}
!7587 = !DILocation(line: 36, column: 2, scope: !7558)
!7588 = !DILocation(line: 49, column: 2, scope: !7551)
!7589 = !DILocation(line: 50, column: 1, scope: !7551)
!7590 = !DILocation(line: 41, column: 9, scope: !7563)
!7591 = !DILocation(line: 41, column: 7, scope: !7564)
!7592 = !DILocation(line: 42, column: 22, scope: !7562)
!7593 = !DILocation(line: 0, scope: !7562)
!7594 = !DILocation(line: 44, column: 25, scope: !7562)
!7595 = !DILocation(line: 44, column: 17, scope: !7562)
!7596 = !DILocation(line: 44, column: 33, scope: !7562)
!7597 = !DILocation(line: 44, column: 4, scope: !7562)
!7598 = !DILocation(line: 45, column: 3, scope: !7562)
!7599 = !DILocation(line: 46, column: 4, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7563, file: !7501, line: 45, column: 10)
!7601 = !DILocation(line: 40, column: 50, scope: !7565)
!7602 = !DILocation(line: 40, column: 24, scope: !7565)
!7603 = distinct !{!7603, !7571, !7604}
!7604 = !DILocation(line: 48, column: 2, scope: !7560)
!7605 = distinct !DISubprogram(name: "isprint", scope: !6554, file: !6554, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2640, retainedNodes: !7606)
!7606 = !{!7607}
!7607 = !DILocalVariable(name: "c", arg: 1, scope: !7605, file: !6554, line: 37, type: !105)
!7608 = !DILocation(line: 0, scope: !7605)
!7609 = !DILocation(line: 39, column: 38, scope: !7605)
!7610 = !DILocation(line: 39, column: 2, scope: !7605)
!7611 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7612, file: !7612, line: 57, type: !7613, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7659)
!7612 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7613 = !DISubroutineType(types: !7614)
!7614 = !{null, !32, !7615}
!7615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7616, size: 32)
!7616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7617)
!7617 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2763, line: 141, baseType: !7618)
!7618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2763, line: 97, size: 256, elements: !7619)
!7619 = !{!7620}
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7618, file: !2763, line: 107, baseType: !7621, size: 256)
!7621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2763, line: 98, size: 256, elements: !7622)
!7622 = !{!7623, !7628, !7633, !7638, !7643, !7648, !7653, !7658}
!7623 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 99, baseType: !7624, size: 32)
!7624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 99, size: 32, elements: !7625)
!7625 = !{!7626, !7627}
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7624, file: !2763, line: 99, baseType: !113, size: 32)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7624, file: !2763, line: 99, baseType: !113, size: 32)
!7628 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 100, baseType: !7629, size: 32, offset: 32)
!7629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 100, size: 32, elements: !7630)
!7630 = !{!7631, !7632}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7629, file: !2763, line: 100, baseType: !113, size: 32)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7629, file: !2763, line: 100, baseType: !113, size: 32)
!7633 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 101, baseType: !7634, size: 32, offset: 64)
!7634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 101, size: 32, elements: !7635)
!7635 = !{!7636, !7637}
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7634, file: !2763, line: 101, baseType: !113, size: 32)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7634, file: !2763, line: 101, baseType: !113, size: 32)
!7638 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 102, baseType: !7639, size: 32, offset: 96)
!7639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 102, size: 32, elements: !7640)
!7640 = !{!7641, !7642}
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7639, file: !2763, line: 102, baseType: !113, size: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7639, file: !2763, line: 102, baseType: !113, size: 32)
!7643 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 103, baseType: !7644, size: 32, offset: 128)
!7644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 103, size: 32, elements: !7645)
!7645 = !{!7646, !7647}
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7644, file: !2763, line: 103, baseType: !113, size: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7644, file: !2763, line: 103, baseType: !113, size: 32)
!7648 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 104, baseType: !7649, size: 32, offset: 160)
!7649 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 104, size: 32, elements: !7650)
!7650 = !{!7651, !7652}
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7649, file: !2763, line: 104, baseType: !113, size: 32)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7649, file: !2763, line: 104, baseType: !113, size: 32)
!7653 = !DIDerivedType(tag: DW_TAG_member, scope: !7621, file: !2763, line: 105, baseType: !7654, size: 32, offset: 192)
!7654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7621, file: !2763, line: 105, size: 32, elements: !7655)
!7655 = !{!7656, !7657}
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7654, file: !2763, line: 105, baseType: !113, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7654, file: !2763, line: 105, baseType: !113, size: 32)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7621, file: !2763, line: 106, baseType: !113, size: 32, offset: 224)
!7659 = !{!7660, !7661}
!7660 = !DILocalVariable(name: "reason", arg: 1, scope: !7611, file: !7612, line: 57, type: !32)
!7661 = !DILocalVariable(name: "esf", arg: 2, scope: !7611, file: !7612, line: 57, type: !7615)
!7662 = !DILocation(line: 0, scope: !7611)
!7663 = !DILocation(line: 60, column: 10, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7611, file: !7612, line: 60, column: 6)
!7665 = !DILocation(line: 60, column: 6, scope: !7611)
!7666 = !DILocation(line: 61, column: 3, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7664, file: !7612, line: 60, column: 19)
!7668 = !DILocation(line: 62, column: 2, scope: !7667)
!7669 = !DILocation(line: 63, column: 2, scope: !7611)
!7670 = !DILocation(line: 64, column: 1, scope: !7611)
!7671 = distinct !DISubprogram(name: "esf_dump", scope: !7612, file: !7612, line: 20, type: !7672, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7674)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{null, !7615}
!7674 = !{!7675}
!7675 = !DILocalVariable(name: "esf", arg: 1, scope: !7671, file: !7612, line: 20, type: !7615)
!7676 = !DILocation(line: 0, scope: !7671)
!7677 = !DILocation(line: 22, column: 2, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !7612, line: 22, column: 2)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !7612, line: 22, column: 2)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !7612, line: 22, column: 2)
!7681 = distinct !DILexicalBlock(scope: !7671, file: !7612, line: 22, column: 2)
!7682 = !DILocation(line: 24, column: 2, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !7612, line: 24, column: 2)
!7684 = distinct !DILexicalBlock(scope: !7685, file: !7612, line: 24, column: 2)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !7612, line: 24, column: 2)
!7686 = distinct !DILexicalBlock(scope: !7671, file: !7612, line: 24, column: 2)
!7687 = !DILocation(line: 26, column: 2, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !7612, line: 26, column: 2)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !7612, line: 26, column: 2)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7612, line: 26, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7671, file: !7612, line: 26, column: 2)
!7692 = !DILocation(line: 53, column: 2, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !7612, line: 53, column: 2)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !7612, line: 53, column: 2)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !7612, line: 53, column: 2)
!7696 = distinct !DILexicalBlock(scope: !7671, file: !7612, line: 53, column: 2)
!7697 = !DILocation(line: 55, column: 1, scope: !7671)
!7698 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7612, file: !7612, line: 82, type: !7699, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7714)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{null, !7615, !7701}
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7702, size: 32)
!7702 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7703)
!7703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7704)
!7704 = !{!7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712, !7713}
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7703, file: !200, line: 26, baseType: !113, size: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7703, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7703, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7703, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7703, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7703, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7703, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7703, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7703, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7714 = !{!7715, !7716, !7717}
!7715 = !DILocalVariable(name: "esf", arg: 1, scope: !7698, file: !7612, line: 82, type: !7615)
!7716 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7698, file: !7612, line: 82, type: !7701)
!7717 = !DILocalVariable(name: "reason", scope: !7698, file: !7612, line: 88, type: !32)
!7718 = !DILocation(line: 0, scope: !7698)
!7719 = !DILocation(line: 88, column: 35, scope: !7698)
!7720 = !DILocation(line: 108, column: 2, scope: !7698)
!7721 = !DILocation(line: 131, column: 1, scope: !7698)
!7722 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7612, file: !7612, line: 133, type: !7723, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !7725)
!7723 = !DISubroutineType(types: !7724)
!7724 = !{null, !104}
!7725 = !{!7726, !7727, !7728}
!7726 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7722, file: !7612, line: 133, type: !104)
!7727 = !DILocalVariable(name: "ssf_contents", scope: !7722, file: !7612, line: 135, type: !1025)
!7728 = !DILocalVariable(name: "oops_esf", scope: !7722, file: !7612, line: 136, type: !7617)
!7729 = !DILocation(line: 0, scope: !7722)
!7730 = !DILocation(line: 136, column: 2, scope: !7722)
!7731 = !DILocation(line: 136, column: 15, scope: !7722)
!7732 = !DILocation(line: 139, column: 22, scope: !7722)
!7733 = !DILocation(line: 139, column: 17, scope: !7722)
!7734 = !DILocation(line: 139, column: 20, scope: !7722)
!7735 = !DILocation(line: 141, column: 2, scope: !7722)
!7736 = !DILocation(line: 142, column: 2, scope: !7722)
!7737 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7738, file: !7738, line: 40, type: !7479, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7739)
!7738 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7739 = !{!7740}
!7740 = !DILocalVariable(name: "irq", arg: 1, scope: !7737, file: !7738, line: 40, type: !32)
!7741 = !DILocation(line: 0, scope: !7737)
!7742 = !DILocation(line: 42, column: 2, scope: !7737)
!7743 = !DILocation(line: 43, column: 1, scope: !7737)
!7744 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !679, file: !679, line: 1684, type: !7745, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7747)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{null, !932}
!7747 = !{!7748}
!7748 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7744, file: !679, line: 1684, type: !932)
!7749 = !DILocation(line: 0, scope: !7744)
!7750 = !DILocation(line: 1686, column: 23, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7744, file: !679, line: 1686, column: 7)
!7752 = !DILocation(line: 1686, column: 7, scope: !7744)
!7753 = !DILocation(line: 1688, column: 5, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7751, file: !679, line: 1687, column: 3)
!7755 = !{i64 2151027296}
!7756 = !DILocation(line: 1689, column: 81, scope: !7754)
!7757 = !DILocation(line: 1689, column: 60, scope: !7754)
!7758 = !DILocation(line: 1689, column: 34, scope: !7754)
!7759 = !DILocation(line: 1689, column: 5, scope: !7754)
!7760 = !DILocation(line: 1689, column: 43, scope: !7754)
!7761 = !DILocation(line: 1690, column: 5, scope: !7754)
!7762 = !{i64 2151027410}
!7763 = !DILocation(line: 1691, column: 3, scope: !7754)
!7764 = !DILocation(line: 1692, column: 1, scope: !7744)
!7765 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7738, file: !7738, line: 45, type: !7479, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7766)
!7766 = !{!7767}
!7767 = !DILocalVariable(name: "irq", arg: 1, scope: !7765, file: !7738, line: 45, type: !32)
!7768 = !DILocation(line: 0, scope: !7765)
!7769 = !DILocation(line: 47, column: 2, scope: !7765)
!7770 = !DILocation(line: 48, column: 1, scope: !7765)
!7771 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !679, file: !679, line: 1722, type: !7745, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7772)
!7772 = !{!7773}
!7773 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7771, file: !679, line: 1722, type: !932)
!7774 = !DILocation(line: 0, scope: !7771)
!7775 = !DILocation(line: 1724, column: 23, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7771, file: !679, line: 1724, column: 7)
!7777 = !DILocation(line: 1724, column: 7, scope: !7771)
!7778 = !DILocation(line: 1726, column: 81, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7776, file: !679, line: 1725, column: 3)
!7780 = !DILocation(line: 1726, column: 60, scope: !7779)
!7781 = !DILocation(line: 1726, column: 34, scope: !7779)
!7782 = !DILocation(line: 1726, column: 5, scope: !7779)
!7783 = !DILocation(line: 1726, column: 43, scope: !7779)
!7784 = !DILocation(line: 271, column: 3, scope: !7785, inlinedAt: !7787)
!7785 = distinct !DISubprogram(name: "__DSB", scope: !7786, file: !7786, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !397)
!7786 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7787 = distinct !DILocation(line: 1727, column: 5, scope: !7779)
!7788 = !{i64 3481679}
!7789 = !DILocation(line: 260, column: 3, scope: !7790, inlinedAt: !7791)
!7790 = distinct !DISubprogram(name: "__ISB", scope: !7786, file: !7786, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !397)
!7791 = distinct !DILocation(line: 1728, column: 5, scope: !7779)
!7792 = !{i64 3481396}
!7793 = !DILocation(line: 1729, column: 3, scope: !7779)
!7794 = !DILocation(line: 1730, column: 1, scope: !7771)
!7795 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7738, file: !7738, line: 50, type: !7796, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7798)
!7796 = !DISubroutineType(types: !7797)
!7797 = !{!105, !32}
!7798 = !{!7799}
!7799 = !DILocalVariable(name: "irq", arg: 1, scope: !7795, file: !7738, line: 50, type: !32)
!7800 = !DILocation(line: 0, scope: !7795)
!7801 = !DILocation(line: 52, column: 20, scope: !7795)
!7802 = !DILocation(line: 52, column: 9, scope: !7795)
!7803 = !DILocation(line: 52, column: 41, scope: !7795)
!7804 = !DILocation(line: 52, column: 39, scope: !7795)
!7805 = !DILocation(line: 52, column: 2, scope: !7795)
!7806 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7738, file: !7738, line: 64, type: !7807, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{null, !32, !32, !113}
!7809 = !{!7810, !7811, !7812}
!7810 = !DILocalVariable(name: "irq", arg: 1, scope: !7806, file: !7738, line: 64, type: !32)
!7811 = !DILocalVariable(name: "prio", arg: 2, scope: !7806, file: !7738, line: 64, type: !32)
!7812 = !DILocalVariable(name: "flags", arg: 3, scope: !7806, file: !7738, line: 64, type: !113)
!7813 = !DILocation(line: 0, scope: !7806)
!7814 = !DILocation(line: 83, column: 8, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7738, line: 82, column: 9)
!7816 = distinct !DILexicalBlock(scope: !7806, file: !7738, line: 76, column: 6)
!7817 = !DILocation(line: 91, column: 2, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7819, file: !7738, line: 91, column: 2)
!7819 = distinct !DILexicalBlock(scope: !7806, file: !7738, line: 91, column: 2)
!7820 = !DILocation(line: 91, column: 2, scope: !7819)
!7821 = !DILocation(line: 91, column: 2, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7818, file: !7738, line: 91, column: 2)
!7823 = !DILocation(line: 95, column: 2, scope: !7806)
!7824 = !DILocation(line: 96, column: 1, scope: !7806)
!7825 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7826, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7828)
!7826 = !DISubroutineType(types: !7827)
!7827 = !{null, !932, !113}
!7828 = !{!7829, !7830}
!7829 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7825, file: !679, line: 1814, type: !932)
!7830 = !DILocalVariable(name: "priority", arg: 2, scope: !7825, file: !679, line: 1814, type: !113)
!7831 = !DILocation(line: 0, scope: !7825)
!7832 = !DILocation(line: 0, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7825, file: !679, line: 1816, column: 7)
!7834 = !DILocation(line: 1816, column: 7, scope: !7825)
!7835 = !DILocation(line: 1824, column: 1, scope: !7825)
!7836 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7738, file: !7738, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2654, retainedNodes: !7837)
!7837 = !{!7838}
!7838 = !DILocalVariable(name: "unused", arg: 1, scope: !7836, file: !7738, line: 155, type: !13)
!7839 = !DILocation(line: 0, scope: !7836)
!7840 = !DILocation(line: 159, column: 2, scope: !7836)
!7841 = !DILocation(line: 160, column: 1, scope: !7836)
!7842 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7843, file: !7843, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2700, retainedNodes: !397)
!7843 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7844 = !DILocation(line: 89, column: 2, scope: !7842)
!7845 = !DILocation(line: 90, column: 2, scope: !7842)
!7846 = !DILocation(line: 91, column: 1, scope: !7842)
!7847 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7843, file: !7843, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7848 = !DISubprogram(name: "z_arm_int_exit", scope: !7849, file: !7849, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7849 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7850 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7851, file: !7851, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !397)
!7851 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7852 = !DILocation(line: 258, column: 2, scope: !7850)
!7853 = !DILocation(line: 260, column: 2, scope: !7850)
!7854 = !DILocation(line: 262, column: 2, scope: !7850)
!7855 = !DILocation(line: 263, column: 2, scope: !7850)
!7856 = !DILocation(line: 267, column: 2, scope: !7850)
!7857 = !DILocation(line: 268, column: 2, scope: !7850)
!7858 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7851, file: !7851, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !397)
!7859 = !DILocation(line: 55, column: 12, scope: !7858)
!7860 = !DILocation(line: 271, column: 3, scope: !7861, inlinedAt: !7862)
!7861 = distinct !DISubprogram(name: "__DSB", scope: !7786, file: !7786, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !397)
!7862 = distinct !DILocation(line: 56, column: 2, scope: !7858)
!7863 = !{i64 3480350}
!7864 = !DILocation(line: 260, column: 3, scope: !7865, inlinedAt: !7866)
!7865 = distinct !DISubprogram(name: "__ISB", scope: !7786, file: !7786, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !397)
!7866 = distinct !DILocation(line: 57, column: 2, scope: !7858)
!7867 = !{i64 3480067}
!7868 = !DILocation(line: 58, column: 1, scope: !7858)
!7869 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7851, file: !7851, line: 96, type: !266, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !397)
!7870 = !DILocation(line: 103, column: 13, scope: !7869)
!7871 = !DILocation(line: 975, column: 3, scope: !7872, inlinedAt: !7875)
!7872 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7786, file: !7786, line: 971, type: !395, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7873)
!7873 = !{!7874}
!7874 = !DILocalVariable(name: "result", scope: !7872, file: !7786, line: 973, type: !113)
!7875 = distinct !DILocation(line: 189, column: 16, scope: !7869)
!7876 = !{i64 3501180}
!7877 = !DILocation(line: 0, scope: !7872, inlinedAt: !7875)
!7878 = !DILocation(line: 189, column: 32, scope: !7869)
!7879 = !DILocalVariable(name: "control", arg: 1, scope: !7880, file: !7786, line: 1001, type: !113)
!7880 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7786, file: !7786, line: 1001, type: !7881, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !113}
!7883 = !{!7879}
!7884 = !DILocation(line: 0, scope: !7880, inlinedAt: !7885)
!7885 = distinct !DILocation(line: 189, column: 2, scope: !7869)
!7886 = !DILocation(line: 1003, column: 3, scope: !7880, inlinedAt: !7885)
!7887 = !{i64 3501900}
!7888 = !DILocation(line: 260, column: 3, scope: !7865, inlinedAt: !7889)
!7889 = distinct !DILocation(line: 1004, column: 3, scope: !7880, inlinedAt: !7885)
!7890 = !DILocation(line: 191, column: 1, scope: !7869)
!7891 = distinct !DISubprogram(name: "arch_swap", scope: !7892, file: !7892, line: 33, type: !7796, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !7893)
!7892 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7893 = !{!7894}
!7894 = !DILocalVariable(name: "key", arg: 1, scope: !7891, file: !7892, line: 33, type: !32)
!7895 = !DILocation(line: 0, scope: !7891)
!7896 = !DILocation(line: 36, column: 2, scope: !7891)
!7897 = !DILocation(line: 36, column: 17, scope: !7891)
!7898 = !DILocation(line: 36, column: 25, scope: !7891)
!7899 = !DILocation(line: 37, column: 37, scope: !7891)
!7900 = !DILocation(line: 37, column: 17, scope: !7891)
!7901 = !DILocation(line: 37, column: 35, scope: !7891)
!7902 = !DILocation(line: 41, column: 12, scope: !7891)
!7903 = !DILocalVariable(name: "key", arg: 1, scope: !7904, file: !7468, line: 84, type: !32)
!7904 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !7905)
!7905 = !{!7903}
!7906 = !DILocation(line: 0, scope: !7904, inlinedAt: !7907)
!7907 = distinct !DILocation(line: 44, column: 2, scope: !7891)
!7908 = !DILocation(line: 95, column: 2, scope: !7904, inlinedAt: !7907)
!7909 = !{i64 2242414}
!7910 = !DILocation(line: 53, column: 9, scope: !7891)
!7911 = !DILocation(line: 53, column: 24, scope: !7891)
!7912 = !DILocation(line: 53, column: 2, scope: !7891)
!7913 = distinct !DISubprogram(name: "arch_new_thread", scope: !7914, file: !7914, line: 56, type: !7915, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !8024)
!7914 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7915 = !DISubroutineType(types: !7916)
!7916 = !{null, !7917, !8019, !102, !254, !104, !104, !104}
!7917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7918, size: 32)
!7918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7919)
!7919 = !{!7920, !7978, !7990, !7991, !7992, !7993, !7999, !8014}
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7918, file: !127, line: 247, baseType: !7921, size: 384)
!7921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7922)
!7922 = !{!7923, !7947, !7954, !7955, !7956, !7965, !7966, !7967}
!7923 = !DIDerivedType(tag: DW_TAG_member, scope: !7921, file: !127, line: 60, baseType: !7924, size: 64)
!7924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7921, file: !127, line: 60, size: 64, elements: !7925)
!7925 = !{!7926, !7941}
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7924, file: !127, line: 61, baseType: !7927, size: 64)
!7927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7928)
!7928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7929)
!7929 = !{!7930, !7936}
!7930 = !DIDerivedType(tag: DW_TAG_member, scope: !7928, file: !137, line: 38, baseType: !7931, size: 32)
!7931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7928, file: !137, line: 38, size: 32, elements: !7932)
!7932 = !{!7933, !7935}
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7931, file: !137, line: 39, baseType: !7934, size: 32)
!7934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 32)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7931, file: !137, line: 40, baseType: !7934, size: 32)
!7936 = !DIDerivedType(tag: DW_TAG_member, scope: !7928, file: !137, line: 42, baseType: !7937, size: 32, offset: 32)
!7937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7928, file: !137, line: 42, size: 32, elements: !7938)
!7938 = !{!7939, !7940}
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7937, file: !137, line: 43, baseType: !7934, size: 32)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7937, file: !137, line: 44, baseType: !7934, size: 32)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7924, file: !127, line: 62, baseType: !7942, size: 64)
!7942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7943)
!7943 = !{!7944}
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7942, file: !153, line: 50, baseType: !7945, size: 64)
!7945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7946, size: 64, elements: !158)
!7946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7942, size: 32)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7921, file: !127, line: 68, baseType: !7948, size: 32, offset: 64)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7949, size: 32)
!7949 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7950)
!7950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7951)
!7951 = !{!7952}
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7950, file: !163, line: 232, baseType: !7953, size: 64)
!7953 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7928)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7921, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7921, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7956 = !DIDerivedType(tag: DW_TAG_member, scope: !7921, file: !127, line: 90, baseType: !7957, size: 16, offset: 112)
!7957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7921, file: !127, line: 90, size: 16, elements: !7958)
!7958 = !{!7959, !7964}
!7959 = !DIDerivedType(tag: DW_TAG_member, scope: !7957, file: !127, line: 91, baseType: !7960, size: 16)
!7960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7957, file: !127, line: 91, size: 16, elements: !7961)
!7961 = !{!7962, !7963}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7960, file: !127, line: 96, baseType: !179, size: 8)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7960, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7957, file: !127, line: 100, baseType: !183, size: 16)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7921, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7921, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7921, file: !127, line: 131, baseType: !7968, size: 192, offset: 192)
!7968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7969)
!7969 = !{!7970, !7971, !7977}
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7968, file: !163, line: 245, baseType: !7927, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7968, file: !163, line: 246, baseType: !7972, size: 32, offset: 64)
!7972 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7973)
!7973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7974, size: 32)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{null, !7976}
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 32)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7968, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7918, file: !127, line: 250, baseType: !7979, size: 288, offset: 384)
!7979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7980)
!7980 = !{!7981, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989}
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7979, file: !200, line: 26, baseType: !113, size: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7979, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7979, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7979, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7979, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7979, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7979, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7979, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7979, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7918, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7918, file: !127, line: 256, baseType: !7949, size: 64, offset: 704)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7918, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7918, file: !127, line: 300, baseType: !7994, size: 96, offset: 800)
!7994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !7995)
!7995 = !{!7996, !7997, !7998}
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7994, file: !127, line: 153, baseType: !22, size: 32)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7994, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7994, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7918, file: !127, line: 325, baseType: !8000, size: 32, offset: 896)
!8000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8001, size: 32)
!8001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8002)
!8002 = !{!8003, !8009, !8010}
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8001, file: !122, line: 5074, baseType: !8004, size: 96)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8005)
!8005 = !{!8006, !8007, !8008}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8004, file: !226, line: 57, baseType: !229, size: 32)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8004, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8004, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8001, file: !122, line: 5075, baseType: !7949, size: 64, offset: 96)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8001, file: !122, line: 5076, baseType: !8011, size: 32, offset: 160)
!8011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8012)
!8012 = !{!8013}
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8011, file: !236, line: 52, baseType: !22, size: 32)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7918, file: !127, line: 343, baseType: !8015, size: 64, offset: 928)
!8015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8016)
!8016 = !{!8017, !8018}
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8015, file: !200, line: 63, baseType: !113, size: 32)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8015, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 32)
!8020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !8021)
!8021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !8022)
!8022 = !{!8023}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8021, file: !249, line: 48, baseType: !103, size: 8)
!8024 = !{!8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032}
!8025 = !DILocalVariable(name: "thread", arg: 1, scope: !7913, file: !7914, line: 56, type: !7917)
!8026 = !DILocalVariable(name: "stack", arg: 2, scope: !7913, file: !7914, line: 56, type: !8019)
!8027 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7913, file: !7914, line: 57, type: !102)
!8028 = !DILocalVariable(name: "entry", arg: 4, scope: !7913, file: !7914, line: 57, type: !254)
!8029 = !DILocalVariable(name: "p1", arg: 5, scope: !7913, file: !7914, line: 58, type: !104)
!8030 = !DILocalVariable(name: "p2", arg: 6, scope: !7913, file: !7914, line: 58, type: !104)
!8031 = !DILocalVariable(name: "p3", arg: 7, scope: !7913, file: !7914, line: 58, type: !104)
!8032 = !DILocalVariable(name: "iframe", scope: !7913, file: !7914, line: 60, type: !2761)
!8033 = !DILocation(line: 0, scope: !7913)
!8034 = !DILocation(line: 85, column: 11, scope: !7913)
!8035 = !DILocation(line: 93, column: 10, scope: !7913)
!8036 = !DILocation(line: 98, column: 13, scope: !7913)
!8037 = !DILocation(line: 100, column: 15, scope: !7913)
!8038 = !DILocation(line: 100, column: 10, scope: !7913)
!8039 = !DILocation(line: 100, column: 13, scope: !7913)
!8040 = !DILocation(line: 101, column: 15, scope: !7913)
!8041 = !DILocation(line: 101, column: 10, scope: !7913)
!8042 = !DILocation(line: 101, column: 13, scope: !7913)
!8043 = !DILocation(line: 102, column: 15, scope: !7913)
!8044 = !DILocation(line: 102, column: 10, scope: !7913)
!8045 = !DILocation(line: 102, column: 13, scope: !7913)
!8046 = !DILocation(line: 103, column: 15, scope: !7913)
!8047 = !DILocation(line: 103, column: 10, scope: !7913)
!8048 = !DILocation(line: 103, column: 13, scope: !7913)
!8049 = !DILocation(line: 106, column: 10, scope: !7913)
!8050 = !DILocation(line: 106, column: 15, scope: !7913)
!8051 = !DILocation(line: 122, column: 29, scope: !7913)
!8052 = !DILocation(line: 122, column: 23, scope: !7913)
!8053 = !DILocation(line: 122, column: 27, scope: !7913)
!8054 = !DILocation(line: 123, column: 15, scope: !7913)
!8055 = !DILocation(line: 123, column: 23, scope: !7913)
!8056 = !DILocation(line: 143, column: 1, scope: !7913)
!8057 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7914, file: !7914, line: 385, type: !8058, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !8060)
!8058 = !DISubroutineType(types: !8059)
!8059 = !{!113, !3737, !3737}
!8060 = !{!8061, !8062, !8063, !8066}
!8061 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8057, file: !7914, line: 385, type: !3737)
!8062 = !DILocalVariable(name: "psp", arg: 2, scope: !8057, file: !7914, line: 385, type: !3737)
!8063 = !DILocalVariable(name: "thread", scope: !8057, file: !7914, line: 388, type: !8064)
!8064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8065, size: 32)
!8065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7918)
!8066 = !DILocalVariable(name: "guard_len", scope: !8057, file: !7914, line: 405, type: !113)
!8067 = !DILocation(line: 0, scope: !8057)
!8068 = !DILocation(line: 388, column: 34, scope: !8057)
!8069 = !DILocation(line: 390, column: 13, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8057, file: !7914, line: 390, column: 6)
!8071 = !DILocation(line: 390, column: 6, scope: !8057)
!8072 = !DILocation(line: 438, column: 6, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8057, file: !7914, line: 438, column: 6)
!8074 = !DILocation(line: 438, column: 6, scope: !8057)
!8075 = !DILocation(line: 442, column: 3, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8073, file: !7914, line: 440, column: 22)
!8077 = !DILocation(line: 455, column: 1, scope: !8057)
!8078 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7914, file: !7914, line: 530, type: !8079, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{null, !7917, !102, !254}
!8081 = !{!8082, !8083, !8084}
!8082 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8078, file: !7914, line: 530, type: !7917)
!8083 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8078, file: !7914, line: 530, type: !102)
!8084 = !DILocalVariable(name: "_main", arg: 3, scope: !8078, file: !7914, line: 531, type: !254)
!8085 = !DILocation(line: 0, scope: !8078)
!8086 = !DILocation(line: 535, column: 11, scope: !8078)
!8087 = !DILocation(line: 560, column: 2, scope: !8078)
!8088 = !DILocation(line: 576, column: 2, scope: !8078)
!8089 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8090 = !DILocation(line: 603, column: 2, scope: !8078)
!8091 = distinct !DISubprogram(name: "z_arm_fault", scope: !8092, file: !8092, line: 1036, type: !8093, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8108)
!8092 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8093 = !DISubroutineType(types: !8094)
!8094 = !{null, !113, !113, !113, !8095}
!8095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8096, size: 32)
!8096 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8097)
!8097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8098)
!8098 = !{!8099, !8100, !8101, !8102, !8103, !8104, !8105, !8106, !8107}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8097, file: !200, line: 26, baseType: !113, size: 32)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8097, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8097, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8097, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8097, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8097, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8097, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8097, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8097, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8108 = !{!8109, !8110, !8111, !8112, !8113, !8114, !8115, !8116, !8117, !8118}
!8109 = !DILocalVariable(name: "msp", arg: 1, scope: !8091, file: !8092, line: 1036, type: !113)
!8110 = !DILocalVariable(name: "psp", arg: 2, scope: !8091, file: !8092, line: 1036, type: !113)
!8111 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8091, file: !8092, line: 1036, type: !113)
!8112 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8091, file: !8092, line: 1037, type: !8095)
!8113 = !DILocalVariable(name: "reason", scope: !8091, file: !8092, line: 1039, type: !113)
!8114 = !DILocalVariable(name: "fault", scope: !8091, file: !8092, line: 1040, type: !105)
!8115 = !DILocalVariable(name: "recoverable", scope: !8091, file: !8092, line: 1041, type: !492)
!8116 = !DILocalVariable(name: "nested_exc", scope: !8091, file: !8092, line: 1041, type: !492)
!8117 = !DILocalVariable(name: "esf", scope: !8091, file: !8092, line: 1042, type: !2829)
!8118 = !DILocalVariable(name: "esf_copy", scope: !8091, file: !8092, line: 1047, type: !2830)
!8119 = !DILocation(line: 0, scope: !8091)
!8120 = !DILocation(line: 1040, column: 19, scope: !8091)
!8121 = !DILocation(line: 1041, column: 2, scope: !8091)
!8122 = !DILocation(line: 1047, column: 2, scope: !8091)
!8123 = !DILocation(line: 1047, column: 15, scope: !8091)
!8124 = !DILocalVariable(name: "key", arg: 1, scope: !8125, file: !7468, line: 84, type: !32)
!8125 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8126)
!8126 = !{!8124}
!8127 = !DILocation(line: 0, scope: !8125, inlinedAt: !8128)
!8128 = distinct !DILocation(line: 1050, column: 2, scope: !8091)
!8129 = !DILocation(line: 95, column: 2, scope: !8125, inlinedAt: !8128)
!8130 = !{i64 2275658}
!8131 = !DILocation(line: 1055, column: 9, scope: !8091)
!8132 = !DILocation(line: 1056, column: 2, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !8092, line: 1056, column: 2)
!8134 = distinct !DILexicalBlock(scope: !8091, file: !8092, line: 1056, column: 2)
!8135 = !DILocation(line: 1056, column: 2, scope: !8134)
!8136 = !DILocation(line: 1056, column: 2, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8133, file: !8092, line: 1056, column: 2)
!8138 = !DILocation(line: 1040, column: 24, scope: !8091)
!8139 = !DILocation(line: 1063, column: 11, scope: !8091)
!8140 = !DILocation(line: 1064, column: 6, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8091, file: !8092, line: 1064, column: 6)
!8142 = !{i8 0, i8 2}
!8143 = !DILocation(line: 1064, column: 6, scope: !8091)
!8144 = !DILocation(line: 1070, column: 20, scope: !8091)
!8145 = !DILocation(line: 1070, column: 2, scope: !8091)
!8146 = !DILocation(line: 1089, column: 6, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8091, file: !8092, line: 1089, column: 6)
!8148 = !DILocation(line: 0, scope: !8147)
!8149 = !DILocation(line: 1089, column: 6, scope: !8091)
!8150 = !DILocation(line: 1090, column: 28, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !8092, line: 1090, column: 7)
!8152 = distinct !DILexicalBlock(scope: !8147, file: !8092, line: 1089, column: 18)
!8153 = !DILocation(line: 1090, column: 44, scope: !8151)
!8154 = !DILocation(line: 1090, column: 7, scope: !8152)
!8155 = !DILocation(line: 1091, column: 24, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8151, file: !8092, line: 1090, column: 50)
!8157 = !DILocation(line: 1092, column: 3, scope: !8156)
!8158 = !DILocation(line: 1094, column: 23, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8147, file: !8092, line: 1093, column: 9)
!8160 = !DILocation(line: 1097, column: 2, scope: !8091)
!8161 = !DILocation(line: 1098, column: 1, scope: !8091)
!8162 = distinct !DISubprogram(name: "get_esf", scope: !8092, file: !8092, line: 894, type: !8163, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8166)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{!2829, !113, !113, !113, !8165}
!8165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!8166 = !{!8167, !8168, !8169, !8170, !8171, !8172}
!8167 = !DILocalVariable(name: "msp", arg: 1, scope: !8162, file: !8092, line: 894, type: !113)
!8168 = !DILocalVariable(name: "psp", arg: 2, scope: !8162, file: !8092, line: 894, type: !113)
!8169 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8162, file: !8092, line: 894, type: !113)
!8170 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8162, file: !8092, line: 895, type: !8165)
!8171 = !DILocalVariable(name: "alternative_state_exc", scope: !8162, file: !8092, line: 897, type: !492)
!8172 = !DILocalVariable(name: "ptr_esf", scope: !8162, file: !8092, line: 898, type: !2829)
!8173 = !DILocation(line: 0, scope: !8162)
!8174 = !DILocation(line: 900, column: 14, scope: !8162)
!8175 = !DILocation(line: 902, column: 49, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8162, file: !8092, line: 902, column: 6)
!8177 = !DILocation(line: 902, column: 6, scope: !8162)
!8178 = !DILocation(line: 983, column: 44, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8162, file: !8092, line: 983, column: 6)
!8180 = !DILocation(line: 985, column: 3, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !8092, line: 985, column: 3)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !8092, line: 985, column: 3)
!8183 = distinct !DILexicalBlock(scope: !8184, file: !8092, line: 985, column: 3)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !8092, line: 985, column: 3)
!8185 = distinct !DILexicalBlock(scope: !8179, file: !8092, line: 984, column: 47)
!8186 = !DILocation(line: 986, column: 3, scope: !8185)
!8187 = !DILocation(line: 983, column: 18, scope: !8179)
!8188 = !DILocation(line: 991, column: 7, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !8092, line: 990, column: 30)
!8190 = distinct !DILexicalBlock(scope: !8162, file: !8092, line: 990, column: 6)
!8191 = !DILocation(line: 998, column: 16, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !8092, line: 995, column: 10)
!8193 = distinct !DILexicalBlock(scope: !8189, file: !8092, line: 991, column: 7)
!8194 = !DILocation(line: 1002, column: 2, scope: !8162)
!8195 = !DILocation(line: 1003, column: 1, scope: !8162)
!8196 = distinct !DISubprogram(name: "fault_handle", scope: !8092, file: !8092, line: 786, type: !8197, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8199)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{!113, !2829, !105, !8165}
!8199 = !{!8200, !8201, !8202, !8203}
!8200 = !DILocalVariable(name: "esf", arg: 1, scope: !8196, file: !8092, line: 786, type: !2829)
!8201 = !DILocalVariable(name: "fault", arg: 2, scope: !8196, file: !8092, line: 786, type: !105)
!8202 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8196, file: !8092, line: 786, type: !8165)
!8203 = !DILocalVariable(name: "reason", scope: !8196, file: !8092, line: 788, type: !113)
!8204 = !DILocation(line: 0, scope: !8196)
!8205 = !DILocation(line: 790, column: 15, scope: !8196)
!8206 = !DILocation(line: 792, column: 2, scope: !8196)
!8207 = !DILocation(line: 794, column: 12, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8196, file: !8092, line: 792, column: 17)
!8209 = !DILocation(line: 795, column: 3, scope: !8208)
!8210 = !DILocation(line: 800, column: 12, scope: !8208)
!8211 = !DILocation(line: 801, column: 3, scope: !8208)
!8212 = !DILocation(line: 803, column: 12, scope: !8208)
!8213 = !DILocation(line: 804, column: 3, scope: !8208)
!8214 = !DILocation(line: 806, column: 12, scope: !8208)
!8215 = !DILocation(line: 807, column: 3, scope: !8208)
!8216 = !DILocation(line: 814, column: 3, scope: !8208)
!8217 = !DILocation(line: 815, column: 3, scope: !8208)
!8218 = !DILocation(line: 820, column: 3, scope: !8208)
!8219 = !DILocation(line: 821, column: 3, scope: !8208)
!8220 = !DILocation(line: 829, column: 2, scope: !8196)
!8221 = distinct !DISubprogram(name: "hard_fault", scope: !8092, file: !8092, line: 709, type: !8222, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!113, !2829, !8165}
!8224 = !{!8225, !8226, !8227}
!8225 = !DILocalVariable(name: "esf", arg: 1, scope: !8221, file: !8092, line: 709, type: !2829)
!8226 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8221, file: !8092, line: 709, type: !8165)
!8227 = !DILocalVariable(name: "reason", scope: !8221, file: !8092, line: 711, type: !113)
!8228 = !DILocation(line: 0, scope: !8221)
!8229 = !DILocation(line: 713, column: 2, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !8092, line: 713, column: 2)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !8092, line: 713, column: 2)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !8092, line: 713, column: 2)
!8233 = distinct !DILexicalBlock(scope: !8221, file: !8092, line: 713, column: 2)
!8234 = !DILocation(line: 732, column: 15, scope: !8221)
!8235 = !DILocation(line: 734, column: 12, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8221, file: !8092, line: 734, column: 6)
!8237 = !DILocation(line: 734, column: 17, scope: !8236)
!8238 = !DILocation(line: 734, column: 41, scope: !8236)
!8239 = !DILocation(line: 734, column: 6, scope: !8221)
!8240 = !DILocation(line: 735, column: 3, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !8092, line: 735, column: 3)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !8092, line: 735, column: 3)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !8092, line: 735, column: 3)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !8092, line: 735, column: 3)
!8245 = distinct !DILexicalBlock(scope: !8236, file: !8092, line: 734, column: 47)
!8246 = !DILocation(line: 736, column: 2, scope: !8245)
!8247 = !DILocation(line: 736, column: 19, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8236, file: !8092, line: 736, column: 13)
!8249 = !DILocation(line: 736, column: 49, scope: !8248)
!8250 = !DILocation(line: 736, column: 13, scope: !8236)
!8251 = !DILocation(line: 737, column: 3, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !8092, line: 737, column: 3)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !8092, line: 737, column: 3)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !8092, line: 737, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !8092, line: 737, column: 3)
!8256 = distinct !DILexicalBlock(scope: !8248, file: !8092, line: 736, column: 55)
!8257 = !DILocation(line: 738, column: 2, scope: !8256)
!8258 = !DILocation(line: 738, column: 19, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8248, file: !8092, line: 738, column: 13)
!8260 = !DILocation(line: 738, column: 24, scope: !8259)
!8261 = !DILocation(line: 738, column: 47, scope: !8259)
!8262 = !DILocation(line: 738, column: 13, scope: !8248)
!8263 = !DILocation(line: 739, column: 3, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !8092, line: 739, column: 3)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !8092, line: 739, column: 3)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !8092, line: 739, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !8092, line: 739, column: 3)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !8092, line: 738, column: 53)
!8269 = !DILocation(line: 740, column: 7, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8268, file: !8092, line: 740, column: 7)
!8271 = !DILocation(line: 740, column: 7, scope: !8268)
!8272 = !DILocation(line: 741, column: 4, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !8092, line: 741, column: 4)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !8092, line: 741, column: 4)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !8092, line: 741, column: 4)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !8092, line: 741, column: 4)
!8277 = distinct !DILexicalBlock(scope: !8270, file: !8092, line: 740, column: 38)
!8278 = !DILocation(line: 742, column: 24, scope: !8277)
!8279 = !DILocation(line: 743, column: 3, scope: !8277)
!8280 = !DILocation(line: 743, column: 20, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8270, file: !8092, line: 743, column: 14)
!8282 = !DILocation(line: 743, column: 25, scope: !8281)
!8283 = !DILocation(line: 743, column: 52, scope: !8281)
!8284 = !DILocation(line: 743, column: 14, scope: !8270)
!8285 = !DILocation(line: 744, column: 13, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8281, file: !8092, line: 743, column: 58)
!8287 = !DILocation(line: 745, column: 3, scope: !8286)
!8288 = !DILocation(line: 745, column: 20, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8281, file: !8092, line: 745, column: 14)
!8290 = !DILocation(line: 745, column: 25, scope: !8289)
!8291 = !DILocation(line: 745, column: 52, scope: !8289)
!8292 = !DILocation(line: 745, column: 14, scope: !8281)
!8293 = !DILocation(line: 746, column: 13, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8289, file: !8092, line: 745, column: 58)
!8295 = !DILocation(line: 747, column: 3, scope: !8294)
!8296 = !DILocation(line: 747, column: 20, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8289, file: !8092, line: 747, column: 14)
!8298 = !DILocation(line: 747, column: 52, scope: !8297)
!8299 = !DILocation(line: 747, column: 14, scope: !8289)
!8300 = !DILocation(line: 748, column: 13, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8297, file: !8092, line: 747, column: 58)
!8302 = !DILocation(line: 754, column: 4, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !8092, line: 754, column: 4)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !8092, line: 754, column: 4)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !8092, line: 754, column: 4)
!8306 = distinct !DILexicalBlock(scope: !8297, file: !8092, line: 753, column: 10)
!8307 = !DILocation(line: 758, column: 3, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !8092, line: 758, column: 3)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !8092, line: 758, column: 3)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !8092, line: 758, column: 3)
!8311 = distinct !DILexicalBlock(scope: !8259, file: !8092, line: 757, column: 9)
!8312 = !DILocation(line: 766, column: 2, scope: !8221)
!8313 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8092, file: !8092, line: 229, type: !8197, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8314)
!8314 = !{!8315, !8316, !8317, !8318, !8319, !8320, !8323}
!8315 = !DILocalVariable(name: "esf", arg: 1, scope: !8313, file: !8092, line: 229, type: !2829)
!8316 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8313, file: !8092, line: 229, type: !105)
!8317 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8313, file: !8092, line: 230, type: !8165)
!8318 = !DILocalVariable(name: "reason", scope: !8313, file: !8092, line: 232, type: !113)
!8319 = !DILocalVariable(name: "mmfar", scope: !8313, file: !8092, line: 233, type: !113)
!8320 = !DILocalVariable(name: "temp", scope: !8321, file: !8092, line: 254, type: !113)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !8092, line: 244, column: 48)
!8322 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 244, column: 6)
!8323 = !DILocalVariable(name: "min_stack_ptr", scope: !8324, file: !8092, line: 309, type: !113)
!8324 = distinct !DILexicalBlock(scope: !8325, file: !8092, line: 308, column: 43)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !8092, line: 308, column: 7)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !8092, line: 289, column: 40)
!8327 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 288, column: 6)
!8328 = !DILocation(line: 0, scope: !8313)
!8329 = !DILocation(line: 235, column: 2, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8092, line: 235, column: 2)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8092, line: 235, column: 2)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !8092, line: 235, column: 2)
!8333 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 235, column: 2)
!8334 = !DILocation(line: 237, column: 12, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 237, column: 6)
!8336 = !DILocation(line: 237, column: 17, scope: !8335)
!8337 = !DILocation(line: 237, column: 41, scope: !8335)
!8338 = !DILocation(line: 237, column: 6, scope: !8313)
!8339 = !DILocation(line: 238, column: 3, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8092, line: 238, column: 3)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !8092, line: 238, column: 3)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !8092, line: 238, column: 3)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !8092, line: 238, column: 3)
!8344 = distinct !DILexicalBlock(scope: !8335, file: !8092, line: 237, column: 47)
!8345 = !DILocation(line: 240, column: 2, scope: !8344)
!8346 = !DILocation(line: 241, column: 12, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 241, column: 6)
!8348 = !DILocation(line: 241, column: 17, scope: !8347)
!8349 = !DILocation(line: 241, column: 43, scope: !8347)
!8350 = !DILocation(line: 241, column: 6, scope: !8313)
!8351 = !DILocation(line: 242, column: 3, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !8092, line: 242, column: 3)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !8092, line: 242, column: 3)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !8092, line: 242, column: 3)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !8092, line: 242, column: 3)
!8356 = distinct !DILexicalBlock(scope: !8347, file: !8092, line: 241, column: 49)
!8357 = !DILocation(line: 243, column: 2, scope: !8356)
!8358 = !DILocation(line: 244, column: 12, scope: !8322)
!8359 = !DILocation(line: 244, column: 17, scope: !8322)
!8360 = !DILocation(line: 244, column: 42, scope: !8322)
!8361 = !DILocation(line: 244, column: 6, scope: !8313)
!8362 = !DILocation(line: 245, column: 3, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !8092, line: 245, column: 3)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !8092, line: 245, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !8092, line: 245, column: 3)
!8366 = distinct !DILexicalBlock(scope: !8321, file: !8092, line: 245, column: 3)
!8367 = !DILocation(line: 254, column: 24, scope: !8321)
!8368 = !DILocation(line: 0, scope: !8321)
!8369 = !DILocation(line: 256, column: 13, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8321, file: !8092, line: 256, column: 7)
!8371 = !DILocation(line: 256, column: 18, scope: !8370)
!8372 = !DILocation(line: 256, column: 44, scope: !8370)
!8373 = !DILocation(line: 256, column: 7, scope: !8321)
!8374 = !DILocation(line: 258, column: 4, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !8092, line: 258, column: 4)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !8092, line: 258, column: 4)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !8092, line: 258, column: 4)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !8092, line: 258, column: 4)
!8379 = distinct !DILexicalBlock(scope: !8370, file: !8092, line: 256, column: 50)
!8380 = !DILocation(line: 259, column: 24, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8379, file: !8092, line: 259, column: 8)
!8382 = !DILocation(line: 259, column: 8, scope: !8379)
!8383 = !DILocation(line: 261, column: 15, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8381, file: !8092, line: 259, column: 30)
!8385 = !DILocation(line: 262, column: 4, scope: !8384)
!8386 = !DILocation(line: 265, column: 12, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 265, column: 6)
!8388 = !DILocation(line: 265, column: 17, scope: !8387)
!8389 = !DILocation(line: 265, column: 42, scope: !8387)
!8390 = !DILocation(line: 265, column: 6, scope: !8313)
!8391 = !DILocation(line: 266, column: 3, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !8092, line: 266, column: 3)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !8092, line: 266, column: 3)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !8092, line: 266, column: 3)
!8395 = distinct !DILexicalBlock(scope: !8396, file: !8092, line: 266, column: 3)
!8396 = distinct !DILexicalBlock(scope: !8387, file: !8092, line: 265, column: 48)
!8397 = !DILocation(line: 267, column: 2, scope: !8396)
!8398 = !DILocation(line: 269, column: 12, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 269, column: 6)
!8400 = !DILocation(line: 269, column: 17, scope: !8399)
!8401 = !DILocation(line: 269, column: 41, scope: !8399)
!8402 = !DILocation(line: 269, column: 6, scope: !8313)
!8403 = !DILocation(line: 270, column: 3, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8092, line: 270, column: 3)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !8092, line: 270, column: 3)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !8092, line: 270, column: 3)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !8092, line: 270, column: 3)
!8408 = distinct !DILexicalBlock(scope: !8399, file: !8092, line: 269, column: 47)
!8409 = !DILocation(line: 272, column: 2, scope: !8408)
!8410 = !DILocation(line: 288, column: 12, scope: !8327)
!8411 = !DILocation(line: 288, column: 17, scope: !8327)
!8412 = !DILocation(line: 288, column: 41, scope: !8327)
!8413 = !DILocation(line: 289, column: 9, scope: !8327)
!8414 = !DILocation(line: 289, column: 14, scope: !8327)
!8415 = !DILocation(line: 288, column: 6, scope: !8313)
!8416 = !DILocation(line: 308, column: 12, scope: !8325)
!8417 = !DILocation(line: 308, column: 17, scope: !8325)
!8418 = !DILocation(line: 308, column: 7, scope: !8326)
!8419 = !DILocation(line: 310, column: 6, scope: !8324)
!8420 = !DILocation(line: 309, column: 29, scope: !8324)
!8421 = !DILocation(line: 0, scope: !8324)
!8422 = !DILocation(line: 312, column: 8, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8324, file: !8092, line: 312, column: 8)
!8424 = !DILocation(line: 312, column: 8, scope: !8324)
!8425 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8426, file: !7786, line: 1099, type: !113)
!8426 = distinct !DISubprogram(name: "__set_PSP", scope: !7786, file: !7786, line: 1099, type: !7881, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8427)
!8427 = !{!8425}
!8428 = !DILocation(line: 0, scope: !8426, inlinedAt: !8429)
!8429 = distinct !DILocation(line: 338, column: 5, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8423, file: !8092, line: 312, column: 23)
!8431 = !DILocation(line: 1101, column: 3, scope: !8426, inlinedAt: !8429)
!8432 = !{i64 3531319}
!8433 = !DILocation(line: 341, column: 4, scope: !8430)
!8434 = !DILocation(line: 342, column: 5, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !8092, line: 342, column: 5)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !8092, line: 342, column: 5)
!8437 = distinct !DILexicalBlock(scope: !8423, file: !8092, line: 341, column: 11)
!8438 = !DILocation(line: 342, column: 5, scope: !8436)
!8439 = !DILocation(line: 342, column: 5, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8435, file: !8092, line: 342, column: 5)
!8441 = !DILocation(line: 360, column: 12, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8313, file: !8092, line: 360, column: 6)
!8443 = !DILocation(line: 360, column: 17, scope: !8442)
!8444 = !DILocation(line: 360, column: 41, scope: !8442)
!8445 = !DILocation(line: 360, column: 6, scope: !8313)
!8446 = !DILocation(line: 361, column: 14, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8442, file: !8092, line: 360, column: 47)
!8448 = !DILocation(line: 362, column: 2, scope: !8447)
!8449 = !DILocation(line: 366, column: 12, scope: !8313)
!8450 = !DILocation(line: 369, column: 15, scope: !8313)
!8451 = !DILocation(line: 371, column: 2, scope: !8313)
!8452 = distinct !DISubprogram(name: "bus_fault", scope: !8092, file: !8092, line: 383, type: !8453, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8455)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!105, !2829, !105, !8165}
!8455 = !{!8456, !8457, !8458, !8459, !8460}
!8456 = !DILocalVariable(name: "esf", arg: 1, scope: !8452, file: !8092, line: 383, type: !2829)
!8457 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8452, file: !8092, line: 383, type: !105)
!8458 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8452, file: !8092, line: 383, type: !8165)
!8459 = !DILocalVariable(name: "reason", scope: !8452, file: !8092, line: 385, type: !113)
!8460 = !DILocalVariable(name: "bfar", scope: !8461, file: !8092, line: 405, type: !113)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !8092, line: 395, column: 42)
!8462 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 395, column: 6)
!8463 = !DILocation(line: 0, scope: !8452)
!8464 = !DILocation(line: 387, column: 2, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !8092, line: 387, column: 2)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !8092, line: 387, column: 2)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !8092, line: 387, column: 2)
!8468 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 387, column: 2)
!8469 = !DILocation(line: 389, column: 11, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 389, column: 6)
!8471 = !DILocation(line: 389, column: 16, scope: !8470)
!8472 = !DILocation(line: 389, column: 6, scope: !8452)
!8473 = !DILocation(line: 390, column: 3, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8092, line: 390, column: 3)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8092, line: 390, column: 3)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !8092, line: 390, column: 3)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8092, line: 390, column: 3)
!8478 = distinct !DILexicalBlock(scope: !8470, file: !8092, line: 389, column: 39)
!8479 = !DILocation(line: 391, column: 2, scope: !8478)
!8480 = !DILocation(line: 392, column: 11, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 392, column: 6)
!8482 = !DILocation(line: 392, column: 16, scope: !8481)
!8483 = !DILocation(line: 392, column: 6, scope: !8452)
!8484 = !DILocation(line: 393, column: 3, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !8092, line: 393, column: 3)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !8092, line: 393, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !8092, line: 393, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !8092, line: 393, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8481, file: !8092, line: 392, column: 41)
!8490 = !DILocation(line: 394, column: 2, scope: !8489)
!8491 = !DILocation(line: 395, column: 11, scope: !8462)
!8492 = !DILocation(line: 395, column: 16, scope: !8462)
!8493 = !DILocation(line: 395, column: 6, scope: !8452)
!8494 = !DILocation(line: 396, column: 3, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !8092, line: 396, column: 3)
!8496 = distinct !DILexicalBlock(scope: !8497, file: !8092, line: 396, column: 3)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !8092, line: 396, column: 3)
!8498 = distinct !DILexicalBlock(scope: !8461, file: !8092, line: 396, column: 3)
!8499 = !DILocation(line: 405, column: 3, scope: !8461)
!8500 = !DILocation(line: 0, scope: !8461)
!8501 = !DILocation(line: 407, column: 13, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8461, file: !8092, line: 407, column: 7)
!8503 = !DILocation(line: 407, column: 18, scope: !8502)
!8504 = !DILocation(line: 407, column: 44, scope: !8502)
!8505 = !DILocation(line: 407, column: 7, scope: !8461)
!8506 = !DILocation(line: 408, column: 4, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !8092, line: 408, column: 4)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !8092, line: 408, column: 4)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !8092, line: 408, column: 4)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !8092, line: 408, column: 4)
!8511 = distinct !DILexicalBlock(scope: !8502, file: !8092, line: 407, column: 50)
!8512 = !DILocation(line: 409, column: 24, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8511, file: !8092, line: 409, column: 8)
!8514 = !DILocation(line: 409, column: 8, scope: !8511)
!8515 = !DILocation(line: 411, column: 15, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8513, file: !8092, line: 409, column: 30)
!8517 = !DILocation(line: 412, column: 4, scope: !8516)
!8518 = !DILocation(line: 415, column: 11, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 415, column: 6)
!8520 = !DILocation(line: 415, column: 16, scope: !8519)
!8521 = !DILocation(line: 415, column: 6, scope: !8452)
!8522 = !DILocation(line: 416, column: 3, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !8092, line: 416, column: 3)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !8092, line: 416, column: 3)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8092, line: 416, column: 3)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !8092, line: 416, column: 3)
!8527 = distinct !DILexicalBlock(scope: !8519, file: !8092, line: 415, column: 44)
!8528 = !DILocation(line: 417, column: 2, scope: !8527)
!8529 = !DILocation(line: 418, column: 12, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8452, file: !8092, line: 418, column: 6)
!8531 = !DILocation(line: 418, column: 17, scope: !8530)
!8532 = !DILocation(line: 418, column: 41, scope: !8530)
!8533 = !DILocation(line: 418, column: 6, scope: !8452)
!8534 = !DILocation(line: 423, column: 18, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8530, file: !8092, line: 423, column: 13)
!8536 = !DILocation(line: 423, column: 23, scope: !8535)
!8537 = !DILocation(line: 423, column: 13, scope: !8530)
!8538 = !DILocation(line: 0, scope: !8530)
!8539 = !DILocation(line: 524, column: 12, scope: !8452)
!8540 = !DILocation(line: 526, column: 15, scope: !8452)
!8541 = !DILocation(line: 528, column: 2, scope: !8452)
!8542 = distinct !DISubprogram(name: "usage_fault", scope: !8092, file: !8092, line: 539, type: !8543, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8547)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{!113, !8545}
!8545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8546, size: 32)
!8546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2830)
!8547 = !{!8548, !8549}
!8548 = !DILocalVariable(name: "esf", arg: 1, scope: !8542, file: !8092, line: 539, type: !8545)
!8549 = !DILocalVariable(name: "reason", scope: !8542, file: !8092, line: 541, type: !113)
!8550 = !DILocation(line: 0, scope: !8542)
!8551 = !DILocation(line: 543, column: 2, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8092, line: 543, column: 2)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8092, line: 543, column: 2)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8092, line: 543, column: 2)
!8555 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 543, column: 2)
!8556 = !DILocation(line: 546, column: 12, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 546, column: 6)
!8558 = !DILocation(line: 546, column: 17, scope: !8557)
!8559 = !DILocation(line: 546, column: 43, scope: !8557)
!8560 = !DILocation(line: 546, column: 6, scope: !8542)
!8561 = !DILocation(line: 547, column: 3, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !8092, line: 547, column: 3)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !8092, line: 547, column: 3)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !8092, line: 547, column: 3)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !8092, line: 547, column: 3)
!8566 = distinct !DILexicalBlock(scope: !8557, file: !8092, line: 546, column: 49)
!8567 = !DILocation(line: 548, column: 2, scope: !8566)
!8568 = !DILocation(line: 549, column: 12, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 549, column: 6)
!8570 = !DILocation(line: 549, column: 17, scope: !8569)
!8571 = !DILocation(line: 549, column: 43, scope: !8569)
!8572 = !DILocation(line: 549, column: 6, scope: !8542)
!8573 = !DILocation(line: 550, column: 3, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !8092, line: 550, column: 3)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !8092, line: 550, column: 3)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !8092, line: 550, column: 3)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !8092, line: 550, column: 3)
!8578 = distinct !DILexicalBlock(scope: !8569, file: !8092, line: 549, column: 49)
!8579 = !DILocation(line: 551, column: 2, scope: !8578)
!8580 = !DILocation(line: 567, column: 12, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 567, column: 6)
!8582 = !DILocation(line: 567, column: 17, scope: !8581)
!8583 = !DILocation(line: 567, column: 38, scope: !8581)
!8584 = !DILocation(line: 567, column: 6, scope: !8542)
!8585 = !DILocation(line: 568, column: 3, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8587, file: !8092, line: 568, column: 3)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !8092, line: 568, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !8092, line: 568, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !8092, line: 568, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8581, file: !8092, line: 567, column: 44)
!8591 = !DILocation(line: 569, column: 2, scope: !8590)
!8592 = !DILocation(line: 570, column: 12, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 570, column: 6)
!8594 = !DILocation(line: 570, column: 17, scope: !8593)
!8595 = !DILocation(line: 570, column: 39, scope: !8593)
!8596 = !DILocation(line: 570, column: 6, scope: !8542)
!8597 = !DILocation(line: 571, column: 3, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8599, file: !8092, line: 571, column: 3)
!8599 = distinct !DILexicalBlock(scope: !8600, file: !8092, line: 571, column: 3)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !8092, line: 571, column: 3)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !8092, line: 571, column: 3)
!8602 = distinct !DILexicalBlock(scope: !8593, file: !8092, line: 570, column: 45)
!8603 = !DILocation(line: 572, column: 2, scope: !8602)
!8604 = !DILocation(line: 573, column: 12, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 573, column: 6)
!8606 = !DILocation(line: 573, column: 17, scope: !8605)
!8607 = !DILocation(line: 573, column: 42, scope: !8605)
!8608 = !DILocation(line: 573, column: 6, scope: !8542)
!8609 = !DILocation(line: 574, column: 3, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !8092, line: 574, column: 3)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !8092, line: 574, column: 3)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !8092, line: 574, column: 3)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !8092, line: 574, column: 3)
!8614 = distinct !DILexicalBlock(scope: !8605, file: !8092, line: 573, column: 48)
!8615 = !DILocation(line: 575, column: 2, scope: !8614)
!8616 = !DILocation(line: 576, column: 12, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8542, file: !8092, line: 576, column: 6)
!8618 = !DILocation(line: 576, column: 17, scope: !8617)
!8619 = !DILocation(line: 576, column: 44, scope: !8617)
!8620 = !DILocation(line: 576, column: 6, scope: !8542)
!8621 = !DILocation(line: 577, column: 3, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8092, line: 577, column: 3)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !8092, line: 577, column: 3)
!8624 = distinct !DILexicalBlock(scope: !8625, file: !8092, line: 577, column: 3)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !8092, line: 577, column: 3)
!8626 = distinct !DILexicalBlock(scope: !8617, file: !8092, line: 576, column: 50)
!8627 = !DILocation(line: 578, column: 2, scope: !8626)
!8628 = !DILocation(line: 581, column: 12, scope: !8542)
!8629 = !DILocation(line: 583, column: 2, scope: !8542)
!8630 = distinct !DISubprogram(name: "debug_monitor", scope: !8092, file: !8092, line: 632, type: !8631, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{null, !2829, !8165}
!8633 = !{!8634, !8635}
!8634 = !DILocalVariable(name: "esf", arg: 1, scope: !8630, file: !8092, line: 632, type: !2829)
!8635 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8630, file: !8092, line: 632, type: !8165)
!8636 = !DILocation(line: 0, scope: !8630)
!8637 = !DILocation(line: 634, column: 15, scope: !8630)
!8638 = !DILocation(line: 636, column: 2, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !8092, line: 636, column: 2)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !8092, line: 636, column: 2)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8092, line: 636, column: 2)
!8642 = distinct !DILexicalBlock(scope: !8630, file: !8092, line: 636, column: 2)
!8643 = !DILocation(line: 652, column: 1, scope: !8630)
!8644 = distinct !DISubprogram(name: "reserved_exception", scope: !8092, file: !8092, line: 776, type: !8645, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{null, !8545, !105}
!8647 = !{!8648, !8649}
!8648 = !DILocalVariable(name: "esf", arg: 1, scope: !8644, file: !8092, line: 776, type: !8545)
!8649 = !DILocalVariable(name: "fault", arg: 2, scope: !8644, file: !8092, line: 776, type: !105)
!8650 = !DILocation(line: 0, scope: !8644)
!8651 = !DILocation(line: 780, column: 2, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8653, file: !8092, line: 780, column: 2)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !8092, line: 780, column: 2)
!8654 = distinct !DILexicalBlock(scope: !8655, file: !8092, line: 780, column: 2)
!8655 = distinct !DILexicalBlock(scope: !8644, file: !8092, line: 780, column: 2)
!8656 = !DILocation(line: 783, column: 1, scope: !8644)
!8657 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8092, file: !8092, line: 658, type: !8658, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !8660)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{!492, !2829}
!8660 = !{!8661, !8662, !8663}
!8661 = !DILocalVariable(name: "esf", arg: 1, scope: !8657, file: !8092, line: 658, type: !2829)
!8662 = !DILocalVariable(name: "ret_addr", scope: !8657, file: !8092, line: 660, type: !2601)
!8663 = !DILocalVariable(name: "fault_insn", scope: !8657, file: !8092, line: 686, type: !183)
!8664 = !DILocation(line: 0, scope: !8657)
!8665 = !DILocation(line: 660, column: 46, scope: !8657)
!8666 = !DILocation(line: 660, column: 23, scope: !8657)
!8667 = !DILocation(line: 682, column: 11, scope: !8657)
!8668 = !DILocation(line: 271, column: 3, scope: !8669, inlinedAt: !8670)
!8669 = distinct !DISubprogram(name: "__DSB", scope: !7786, file: !7786, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !397)
!8670 = distinct !DILocation(line: 683, column: 2, scope: !8657)
!8671 = !{i64 3507454}
!8672 = !DILocation(line: 260, column: 3, scope: !8673, inlinedAt: !8674)
!8673 = distinct !DISubprogram(name: "__ISB", scope: !7786, file: !7786, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !397)
!8674 = distinct !DILocation(line: 684, column: 2, scope: !8657)
!8675 = !{i64 3507171}
!8676 = !DILocation(line: 686, column: 35, scope: !8657)
!8677 = !DILocation(line: 686, column: 24, scope: !8657)
!8678 = !DILocation(line: 688, column: 11, scope: !8657)
!8679 = !DILocation(line: 271, column: 3, scope: !8669, inlinedAt: !8680)
!8680 = distinct !DILocation(line: 689, column: 2, scope: !8657)
!8681 = !DILocation(line: 260, column: 3, scope: !8673, inlinedAt: !8682)
!8682 = distinct !DILocation(line: 690, column: 2, scope: !8657)
!8683 = !DILocation(line: 693, column: 45, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8657, file: !8092, line: 693, column: 6)
!8685 = !DILocation(line: 699, column: 1, scope: !8657)
!8686 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8092, file: !8092, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2801, retainedNodes: !397)
!8687 = !DILocation(line: 1111, column: 11, scope: !8686)
!8688 = !DILocation(line: 1136, column: 1, scope: !8686)
!8689 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8690, file: !8690, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8691)
!8690 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8691 = !{!8692}
!8692 = !DILocalVariable(name: "irq", scope: !8689, file: !8690, line: 28, type: !105)
!8693 = !DILocation(line: 0, scope: !8689)
!8694 = !DILocation(line: 30, column: 2, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8689, file: !8690, line: 30, column: 2)
!8696 = !DILocation(line: 31, column: 3, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !8690, line: 30, column: 39)
!8698 = distinct !DILexicalBlock(scope: !8695, file: !8690, line: 30, column: 2)
!8699 = !DILocation(line: 30, column: 35, scope: !8698)
!8700 = !DILocation(line: 30, column: 13, scope: !8698)
!8701 = distinct !{!8701, !8694, !8702}
!8702 = !DILocation(line: 32, column: 2, scope: !8695)
!8703 = !DILocation(line: 33, column: 1, scope: !8689)
!8704 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7826, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8705)
!8705 = !{!8706, !8707}
!8706 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8704, file: !679, line: 1814, type: !932)
!8707 = !DILocalVariable(name: "priority", arg: 2, scope: !8704, file: !679, line: 1814, type: !113)
!8708 = !DILocation(line: 0, scope: !8704)
!8709 = !DILocation(line: 1816, column: 7, scope: !8704)
!8710 = !DILocation(line: 0, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8704, file: !679, line: 1816, column: 7)
!8712 = !DILocation(line: 1824, column: 1, scope: !8704)
!8713 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8714, file: !8714, line: 27, type: !8715, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !8820)
!8714 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !8717}
!8717 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8718)
!8718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8719, size: 32)
!8719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8720)
!8720 = !{!8721, !8779, !8791, !8792, !8793, !8794, !8800, !8815}
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8719, file: !127, line: 247, baseType: !8722, size: 384)
!8722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8723)
!8723 = !{!8724, !8748, !8755, !8756, !8757, !8766, !8767, !8768}
!8724 = !DIDerivedType(tag: DW_TAG_member, scope: !8722, file: !127, line: 60, baseType: !8725, size: 64)
!8725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8722, file: !127, line: 60, size: 64, elements: !8726)
!8726 = !{!8727, !8742}
!8727 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8725, file: !127, line: 61, baseType: !8728, size: 64)
!8728 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8729)
!8729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8730)
!8730 = !{!8731, !8737}
!8731 = !DIDerivedType(tag: DW_TAG_member, scope: !8729, file: !137, line: 38, baseType: !8732, size: 32)
!8732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8729, file: !137, line: 38, size: 32, elements: !8733)
!8733 = !{!8734, !8736}
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8732, file: !137, line: 39, baseType: !8735, size: 32)
!8735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8729, size: 32)
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8732, file: !137, line: 40, baseType: !8735, size: 32)
!8737 = !DIDerivedType(tag: DW_TAG_member, scope: !8729, file: !137, line: 42, baseType: !8738, size: 32, offset: 32)
!8738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8729, file: !137, line: 42, size: 32, elements: !8739)
!8739 = !{!8740, !8741}
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8738, file: !137, line: 43, baseType: !8735, size: 32)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8738, file: !137, line: 44, baseType: !8735, size: 32)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8725, file: !127, line: 62, baseType: !8743, size: 64)
!8743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8744)
!8744 = !{!8745}
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8743, file: !153, line: 50, baseType: !8746, size: 64)
!8746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8747, size: 64, elements: !158)
!8747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8743, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8722, file: !127, line: 68, baseType: !8749, size: 32, offset: 64)
!8749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8750, size: 32)
!8750 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8751)
!8751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8752)
!8752 = !{!8753}
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8751, file: !163, line: 232, baseType: !8754, size: 64)
!8754 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8729)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8722, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8722, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8757 = !DIDerivedType(tag: DW_TAG_member, scope: !8722, file: !127, line: 90, baseType: !8758, size: 16, offset: 112)
!8758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8722, file: !127, line: 90, size: 16, elements: !8759)
!8759 = !{!8760, !8765}
!8760 = !DIDerivedType(tag: DW_TAG_member, scope: !8758, file: !127, line: 91, baseType: !8761, size: 16)
!8761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8758, file: !127, line: 91, size: 16, elements: !8762)
!8762 = !{!8763, !8764}
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8761, file: !127, line: 96, baseType: !179, size: 8)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8761, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8758, file: !127, line: 100, baseType: !183, size: 16)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8722, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8722, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8722, file: !127, line: 131, baseType: !8769, size: 192, offset: 192)
!8769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8770)
!8770 = !{!8771, !8772, !8778}
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8769, file: !163, line: 245, baseType: !8728, size: 64)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8769, file: !163, line: 246, baseType: !8773, size: 32, offset: 64)
!8773 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8774)
!8774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8775, size: 32)
!8775 = !DISubroutineType(types: !8776)
!8776 = !{null, !8777}
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8769, size: 32)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8769, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8719, file: !127, line: 250, baseType: !8780, size: 288, offset: 384)
!8780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8781)
!8781 = !{!8782, !8783, !8784, !8785, !8786, !8787, !8788, !8789, !8790}
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8780, file: !200, line: 26, baseType: !113, size: 32)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8780, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8780, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8780, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8780, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8780, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8780, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8780, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8780, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8719, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8719, file: !127, line: 256, baseType: !8750, size: 64, offset: 704)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8719, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8719, file: !127, line: 300, baseType: !8795, size: 96, offset: 800)
!8795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8796)
!8796 = !{!8797, !8798, !8799}
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8795, file: !127, line: 153, baseType: !22, size: 32)
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8795, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8795, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8719, file: !127, line: 325, baseType: !8801, size: 32, offset: 896)
!8801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8802, size: 32)
!8802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8803)
!8803 = !{!8804, !8810, !8811}
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8802, file: !122, line: 5074, baseType: !8805, size: 96)
!8805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8806)
!8806 = !{!8807, !8808, !8809}
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8805, file: !226, line: 57, baseType: !229, size: 32)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8805, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8805, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8802, file: !122, line: 5075, baseType: !8750, size: 64, offset: 96)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8802, file: !122, line: 5076, baseType: !8812, size: 32, offset: 160)
!8812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8813)
!8813 = !{!8814}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8812, file: !236, line: 52, baseType: !22, size: 32)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8719, file: !127, line: 343, baseType: !8816, size: 64, offset: 928)
!8816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8817)
!8817 = !{!8818, !8819}
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8816, file: !200, line: 63, baseType: !113, size: 32)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8816, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8820 = !{!8821}
!8821 = !DILocalVariable(name: "thread", arg: 1, scope: !8713, file: !8714, line: 27, type: !8717)
!8822 = !DILocation(line: 0, scope: !8713)
!8823 = !DILocation(line: 29, column: 6, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8713, file: !8714, line: 29, column: 6)
!8825 = !DILocation(line: 29, column: 15, scope: !8824)
!8826 = !DILocation(line: 29, column: 6, scope: !8713)
!8827 = !DILocation(line: 1031, column: 3, scope: !8828, inlinedAt: !8831)
!8828 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !8829)
!8829 = !{!8830}
!8830 = !DILocalVariable(name: "result", scope: !8828, file: !7786, line: 1029, type: !113)
!8831 = distinct !DILocation(line: 48, column: 10, scope: !8832, inlinedAt: !8836)
!8832 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !397)
!8833 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8834 = !DISubroutineType(types: !8835)
!8835 = !{!492}
!8836 = distinct !DILocation(line: 30, column: 7, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !8714, line: 30, column: 7)
!8838 = distinct !DILexicalBlock(scope: !8824, file: !8714, line: 29, column: 26)
!8839 = !{i64 3496302}
!8840 = !DILocation(line: 0, scope: !8828, inlinedAt: !8831)
!8841 = !DILocation(line: 48, column: 9, scope: !8832, inlinedAt: !8836)
!8842 = !DILocation(line: 30, column: 7, scope: !8838)
!8843 = !DILocation(line: 42, column: 14, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8837, file: !8714, line: 30, column: 25)
!8845 = !DILocation(line: 48, column: 15, scope: !8844)
!8846 = !DILocation(line: 49, column: 3, scope: !8844)
!8847 = !DILocation(line: 52, column: 2, scope: !8713)
!8848 = !DILocation(line: 53, column: 1, scope: !8713)
!8849 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !397)
!8850 = !DILocation(line: 134, column: 2, scope: !8849)
!8851 = !DILocation(line: 156, column: 1, scope: !8849)
!8852 = !DILocation(line: 0, scope: !538)
!8853 = !DILocation(line: 289, column: 36, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!8855 = !DILocation(line: 289, column: 42, scope: !8854)
!8856 = !DILocation(line: 300, column: 36, scope: !538)
!8857 = !DILocation(line: 301, column: 35, scope: !538)
!8858 = !DILocation(line: 302, column: 37, scope: !538)
!8859 = !DILocation(line: 311, column: 2, scope: !538)
!8860 = !DILocation(line: 316, column: 1, scope: !538)
!8861 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !707, file: !707, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8862 = !DILocation(line: 188, column: 12, scope: !8861)
!8863 = !DILocation(line: 271, column: 3, scope: !8864, inlinedAt: !8865)
!8864 = distinct !DISubprogram(name: "__DSB", scope: !7786, file: !7786, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8865 = distinct !DILocation(line: 192, column: 2, scope: !8861)
!8866 = !{i64 3668118}
!8867 = !DILocation(line: 260, column: 3, scope: !8868, inlinedAt: !8869)
!8868 = distinct !DISubprogram(name: "__ISB", scope: !7786, file: !7786, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8869 = distinct !DILocation(line: 193, column: 2, scope: !8861)
!8870 = !{i64 3667835}
!8871 = !DILocation(line: 194, column: 1, scope: !8861)
!8872 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !707, file: !707, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8873 = !DILocation(line: 282, column: 3, scope: !8874, inlinedAt: !8875)
!8874 = distinct !DISubprogram(name: "__DMB", scope: !7786, file: !7786, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8875 = distinct !DILocation(line: 202, column: 2, scope: !8872)
!8876 = !{i64 3668394}
!8877 = !DILocation(line: 205, column: 12, scope: !8872)
!8878 = !DILocation(line: 206, column: 1, scope: !8872)
!8879 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !707, file: !707, line: 275, type: !8880, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8893)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{null, !8882, !1949, !3737, !3737}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8883, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8884)
!8884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !8885)
!8885 = !{!8886, !8887, !8888}
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8884, file: !651, line: 53, baseType: !22, size: 32)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8884, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8884, file: !651, line: 55, baseType: !8889, size: 32, offset: 64)
!8889 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !8890)
!8890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !8891)
!8891 = !{!8892}
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8890, file: !657, line: 150, baseType: !113, size: 32)
!8893 = !{!8894, !8895, !8896, !8897}
!8894 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8879, file: !707, line: 276, type: !8882)
!8895 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8879, file: !707, line: 276, type: !1949)
!8896 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8879, file: !707, line: 277, type: !3737)
!8897 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8879, file: !707, line: 277, type: !3737)
!8898 = !DILocation(line: 0, scope: !8879)
!8899 = !DILocation(line: 279, column: 6, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8879, file: !707, line: 279, column: 6)
!8901 = !DILocation(line: 280, column: 57, scope: !8900)
!8902 = !DILocation(line: 279, column: 6, scope: !8879)
!8903 = !DILocation(line: 282, column: 3, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !707, line: 282, column: 3)
!8905 = distinct !DILexicalBlock(scope: !8906, file: !707, line: 282, column: 3)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !707, line: 282, column: 3)
!8907 = distinct !DILexicalBlock(scope: !8900, file: !707, line: 280, column: 69)
!8908 = !DILocation(line: 285, column: 1, scope: !8879)
!8909 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8910, file: !8910, line: 220, type: !8911, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8913)
!8910 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!105, !8882, !1949, !3737, !3737}
!8913 = !{!8914, !8915, !8916, !8917, !8918}
!8914 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8909, file: !8910, line: 221, type: !8882)
!8915 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8909, file: !8910, line: 221, type: !1949)
!8916 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8909, file: !8910, line: 222, type: !3737)
!8917 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8909, file: !8910, line: 223, type: !3737)
!8918 = !DILocalVariable(name: "mpu_reg_index", scope: !8909, file: !8910, line: 225, type: !105)
!8919 = !DILocation(line: 0, scope: !8909)
!8920 = !DILocation(line: 225, column: 22, scope: !8909)
!8921 = !DILocation(line: 233, column: 18, scope: !8909)
!8922 = !DILocation(line: 236, column: 23, scope: !8909)
!8923 = !DILocation(line: 236, column: 21, scope: !8909)
!8924 = !DILocation(line: 238, column: 2, scope: !8909)
!8925 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !707, file: !707, line: 105, type: !8926, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8928)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{!105, !8882, !169, !169, !492}
!8928 = !{!8929, !8930, !8931, !8932, !8933, !8934}
!8929 = !DILocalVariable(name: "regions", arg: 1, scope: !8925, file: !707, line: 106, type: !8882)
!8930 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8925, file: !707, line: 106, type: !169)
!8931 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8925, file: !707, line: 106, type: !169)
!8932 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8925, file: !707, line: 107, type: !492)
!8933 = !DILocalVariable(name: "i", scope: !8925, file: !707, line: 109, type: !105)
!8934 = !DILocalVariable(name: "reg_index", scope: !8925, file: !707, line: 110, type: !105)
!8935 = !DILocation(line: 0, scope: !8925)
!8936 = !DILocation(line: 110, column: 18, scope: !8925)
!8937 = !DILocation(line: 112, column: 16, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !707, line: 112, column: 2)
!8939 = distinct !DILexicalBlock(scope: !8925, file: !707, line: 112, column: 2)
!8940 = !DILocation(line: 112, column: 2, scope: !8939)
!8941 = !DILocation(line: 113, column: 7, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !707, line: 113, column: 7)
!8943 = distinct !DILexicalBlock(scope: !8938, file: !707, line: 112, column: 36)
!8944 = !DILocation(line: 113, column: 18, scope: !8942)
!8945 = !DILocation(line: 113, column: 23, scope: !8942)
!8946 = !DILocation(line: 113, column: 7, scope: !8943)
!8947 = !DILocation(line: 118, column: 23, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8943, file: !707, line: 118, column: 7)
!8949 = !DILocation(line: 119, column: 7, scope: !8948)
!8950 = !DILocation(line: 118, column: 7, scope: !8943)
!8951 = !DILocation(line: 120, column: 4, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !707, line: 120, column: 4)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !707, line: 120, column: 4)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !707, line: 120, column: 4)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !707, line: 120, column: 4)
!8956 = distinct !DILexicalBlock(scope: !8948, file: !707, line: 119, column: 45)
!8957 = !DILocation(line: 121, column: 4, scope: !8956)
!8958 = !DILocation(line: 124, column: 36, scope: !8943)
!8959 = !DILocation(line: 124, column: 15, scope: !8943)
!8960 = !DILocation(line: 126, column: 17, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8943, file: !707, line: 126, column: 7)
!8962 = !DILocation(line: 126, column: 7, scope: !8943)
!8963 = !DILocation(line: 131, column: 12, scope: !8943)
!8964 = !DILocation(line: 132, column: 2, scope: !8943)
!8965 = !DILocation(line: 112, column: 32, scope: !8938)
!8966 = distinct !{!8966, !8940, !8967}
!8967 = !DILocation(line: 132, column: 2, scope: !8939)
!8968 = !DILocation(line: 135, column: 1, scope: !8925)
!8969 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8910, file: !8910, line: 63, type: !8970, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!105, !8882}
!8972 = !{!8973, !8974}
!8973 = !DILocalVariable(name: "part", arg: 1, scope: !8969, file: !8910, line: 63, type: !8882)
!8974 = !DILocalVariable(name: "partition_is_valid", scope: !8969, file: !8910, line: 70, type: !105)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 71, column: 11, scope: !8969)
!8977 = !DILocation(line: 71, column: 37, scope: !8969)
!8978 = !DILocation(line: 72, column: 3, scope: !8969)
!8979 = !DILocation(line: 71, column: 30, scope: !8969)
!8980 = !DILocation(line: 75, column: 11, scope: !8969)
!8981 = !DILocation(line: 75, column: 17, scope: !8969)
!8982 = !DILocation(line: 75, column: 38, scope: !8969)
!8983 = !DILocation(line: 77, column: 2, scope: !8969)
!8984 = distinct !DISubprogram(name: "mpu_configure_region", scope: !707, file: !707, line: 79, type: !8985, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8987)
!8985 = !DISubroutineType(types: !8986)
!8986 = !{!105, !1949, !8882}
!8987 = !{!8988, !8989, !8990}
!8988 = !DILocalVariable(name: "index", arg: 1, scope: !8984, file: !707, line: 79, type: !1949)
!8989 = !DILocalVariable(name: "new_region", arg: 2, scope: !8984, file: !707, line: 80, type: !8882)
!8990 = !DILocalVariable(name: "region_conf", scope: !8984, file: !707, line: 82, type: !696)
!8991 = !DILocation(line: 0, scope: !8984)
!8992 = !DILocation(line: 82, column: 2, scope: !8984)
!8993 = !DILocation(line: 82, column: 24, scope: !8984)
!8994 = !DILocation(line: 87, column: 33, scope: !8984)
!8995 = !DILocation(line: 87, column: 14, scope: !8984)
!8996 = !DILocation(line: 87, column: 19, scope: !8984)
!8997 = !DILocation(line: 91, column: 55, scope: !8984)
!8998 = !DILocation(line: 92, column: 16, scope: !8984)
!8999 = !DILocation(line: 92, column: 53, scope: !8984)
!9000 = !DILocation(line: 91, column: 2, scope: !8984)
!9001 = !DILocation(line: 95, column: 9, scope: !8984)
!9002 = !DILocation(line: 97, column: 1, scope: !8984)
!9003 = !DILocation(line: 95, column: 2, scope: !8984)
!9004 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8910, file: !8910, line: 113, type: !9005, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9010)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{null, !9007, !9008, !113, !113}
!9007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!9008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9009, size: 32)
!9009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8889)
!9010 = !{!9011, !9012, !9013, !9014}
!9011 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9004, file: !8910, line: 114, type: !9007)
!9012 = !DILocalVariable(name: "attr", arg: 2, scope: !9004, file: !8910, line: 115, type: !9008)
!9013 = !DILocalVariable(name: "base", arg: 3, scope: !9004, file: !8910, line: 115, type: !113)
!9014 = !DILocalVariable(name: "size", arg: 4, scope: !9004, file: !8910, line: 115, type: !113)
!9015 = !DILocation(line: 0, scope: !9004)
!9016 = !DILocation(line: 127, column: 23, scope: !9004)
!9017 = !DILocation(line: 127, column: 35, scope: !9004)
!9018 = !DILocation(line: 127, column: 33, scope: !9004)
!9019 = !DILocation(line: 127, column: 10, scope: !9004)
!9020 = !DILocation(line: 127, column: 15, scope: !9004)
!9021 = !DILocation(line: 129, column: 1, scope: !9004)
!9022 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !707, file: !707, line: 57, type: !9023, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9025)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!105, !1949, !694}
!9025 = !{!9026, !9027}
!9026 = !DILocalVariable(name: "index", arg: 1, scope: !9022, file: !707, line: 57, type: !1949)
!9027 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9022, file: !707, line: 58, type: !694)
!9028 = !DILocation(line: 0, scope: !9022)
!9029 = !DILocation(line: 61, column: 6, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9022, file: !707, line: 61, column: 6)
!9031 = !DILocation(line: 61, column: 12, scope: !9030)
!9032 = !DILocation(line: 61, column: 6, scope: !9022)
!9033 = !DILocation(line: 64, column: 3, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !707, line: 64, column: 3)
!9035 = distinct !DILexicalBlock(scope: !9036, file: !707, line: 64, column: 3)
!9036 = distinct !DILexicalBlock(scope: !9037, file: !707, line: 64, column: 3)
!9037 = distinct !DILexicalBlock(scope: !9038, file: !707, line: 64, column: 3)
!9038 = distinct !DILexicalBlock(scope: !9030, file: !707, line: 61, column: 40)
!9039 = !DILocation(line: 65, column: 3, scope: !9038)
!9040 = !DILocation(line: 71, column: 2, scope: !9022)
!9041 = !DILocation(line: 73, column: 2, scope: !9022)
!9042 = !DILocation(line: 74, column: 1, scope: !9022)
!9043 = distinct !DISubprogram(name: "region_init", scope: !8910, file: !8910, line: 29, type: !9044, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9046)
!9044 = !DISubroutineType(types: !9045)
!9045 = !{null, !3737, !694}
!9046 = !{!9047, !9048}
!9047 = !DILocalVariable(name: "index", arg: 1, scope: !9043, file: !8910, line: 29, type: !3737)
!9048 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9043, file: !8910, line: 30, type: !694)
!9049 = !DILocation(line: 0, scope: !9043)
!9050 = !DILocation(line: 33, column: 2, scope: !9043)
!9051 = !DILocation(line: 47, column: 28, scope: !9043)
!9052 = !DILocation(line: 47, column: 33, scope: !9043)
!9053 = !DILocation(line: 48, column: 26, scope: !9043)
!9054 = !DILocation(line: 47, column: 12, scope: !9043)
!9055 = !DILocation(line: 49, column: 32, scope: !9043)
!9056 = !DILocation(line: 49, column: 37, scope: !9043)
!9057 = !DILocation(line: 49, column: 12, scope: !9043)
!9058 = !DILocation(line: 53, column: 1, scope: !9043)
!9059 = distinct !DISubprogram(name: "set_region_number", scope: !9060, file: !9060, line: 32, type: !7881, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9061)
!9060 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9061 = !{!9062}
!9062 = !DILocalVariable(name: "index", arg: 1, scope: !9059, file: !9060, line: 32, type: !113)
!9063 = !DILocation(line: 0, scope: !9059)
!9064 = !DILocation(line: 34, column: 11, scope: !9059)
!9065 = !DILocation(line: 35, column: 1, scope: !9059)
!9066 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8910, file: !8910, line: 88, type: !9067, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!113, !113}
!9069 = !{!9070}
!9070 = !DILocalVariable(name: "size", arg: 1, scope: !9066, file: !8910, line: 88, type: !113)
!9071 = !DILocation(line: 0, scope: !9066)
!9072 = !DILocation(line: 91, column: 11, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9066, file: !8910, line: 91, column: 6)
!9074 = !DILocation(line: 91, column: 6, scope: !9066)
!9075 = !DILocation(line: 100, column: 11, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9066, file: !8910, line: 100, column: 6)
!9077 = !DILocation(line: 100, column: 6, scope: !9066)
!9078 = !DILocation(line: 104, column: 35, scope: !9066)
!9079 = !DILocation(line: 104, column: 16, scope: !9066)
!9080 = !DILocation(line: 104, column: 50, scope: !9066)
!9081 = !DILocation(line: 104, column: 72, scope: !9066)
!9082 = !DILocation(line: 104, column: 2, scope: !9066)
!9083 = !DILocation(line: 106, column: 1, scope: !9066)
!9084 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !707, file: !707, line: 307, type: !9085, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{null, !8882, !169}
!9087 = !{!9088, !9089}
!9088 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9084, file: !707, line: 308, type: !8882)
!9089 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9084, file: !707, line: 308, type: !169)
!9090 = !DILocation(line: 0, scope: !9084)
!9091 = !DILocation(line: 310, column: 6, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9084, file: !707, line: 310, column: 6)
!9093 = !DILocation(line: 311, column: 3, scope: !9092)
!9094 = !DILocation(line: 310, column: 6, scope: !9084)
!9095 = !DILocation(line: 313, column: 3, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !707, line: 313, column: 3)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !707, line: 313, column: 3)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !707, line: 313, column: 3)
!9099 = distinct !DILexicalBlock(scope: !9092, file: !707, line: 311, column: 15)
!9100 = !DILocation(line: 316, column: 1, scope: !9084)
!9101 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8910, file: !8910, line: 249, type: !9102, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9104)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{!105, !8882, !169}
!9104 = !{!9105, !9106, !9107, !9108}
!9105 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9101, file: !8910, line: 250, type: !8882)
!9106 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9101, file: !8910, line: 250, type: !169)
!9107 = !DILocalVariable(name: "mpu_reg_index", scope: !9101, file: !8910, line: 252, type: !105)
!9108 = !DILocalVariable(name: "i", scope: !9109, file: !8910, line: 264, type: !105)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !8910, line: 264, column: 3)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !8910, line: 261, column: 32)
!9111 = distinct !DILexicalBlock(scope: !9101, file: !8910, line: 261, column: 6)
!9112 = !DILocation(line: 0, scope: !9101)
!9113 = !DILocation(line: 252, column: 22, scope: !9101)
!9114 = !DILocation(line: 258, column: 18, scope: !9101)
!9115 = !DILocation(line: 261, column: 20, scope: !9111)
!9116 = !DILocation(line: 261, column: 6, scope: !9101)
!9117 = !DILocation(line: 0, scope: !9109)
!9118 = !DILocation(line: 265, column: 4, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !8910, line: 264, column: 59)
!9120 = distinct !DILexicalBlock(scope: !9109, file: !8910, line: 264, column: 3)
!9121 = !DILocation(line: 264, column: 55, scope: !9120)
!9122 = !DILocation(line: 264, column: 33, scope: !9120)
!9123 = !DILocation(line: 264, column: 3, scope: !9109)
!9124 = distinct !{!9124, !9123, !9125}
!9125 = !DILocation(line: 266, column: 3, scope: !9109)
!9126 = !DILocation(line: 269, column: 2, scope: !9101)
!9127 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9128, file: !9128, line: 218, type: !7881, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9129)
!9128 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9129 = !{!9130}
!9130 = !DILocalVariable(name: "rnr", arg: 1, scope: !9127, file: !9128, line: 218, type: !113)
!9131 = !DILocation(line: 0, scope: !9127)
!9132 = !DILocation(line: 220, column: 12, scope: !9127)
!9133 = !DILocation(line: 221, column: 13, scope: !9127)
!9134 = !DILocation(line: 222, column: 1, scope: !9127)
!9135 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !707, file: !707, line: 326, type: !9136, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9138)
!9136 = !DISubroutineType(types: !9137)
!9137 = !{!105}
!9138 = !{!9139}
!9139 = !DILocalVariable(name: "r_index", scope: !9135, file: !707, line: 328, type: !113)
!9140 = !DILocation(line: 330, column: 17, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9135, file: !707, line: 330, column: 6)
!9142 = !DILocation(line: 330, column: 29, scope: !9141)
!9143 = !DILocation(line: 330, column: 6, scope: !9135)
!9144 = !DILocation(line: 337, column: 3, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !707, line: 337, column: 3)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !707, line: 337, column: 3)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !707, line: 337, column: 3)
!9148 = distinct !DILexicalBlock(scope: !9141, file: !707, line: 330, column: 50)
!9149 = !DILocation(line: 347, column: 2, scope: !9135)
!9150 = !DILocation(line: 0, scope: !9135)
!9151 = !DILocation(line: 364, column: 29, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !707, line: 364, column: 2)
!9153 = distinct !DILexicalBlock(scope: !9135, file: !707, line: 364, column: 2)
!9154 = !DILocation(line: 364, column: 2, scope: !9153)
!9155 = !DILocation(line: 365, column: 25, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9152, file: !707, line: 364, column: 66)
!9157 = !DILocation(line: 365, column: 3, scope: !9156)
!9158 = !DILocation(line: 364, column: 62, scope: !9152)
!9159 = distinct !{!9159, !9154, !9160}
!9160 = !DILocation(line: 366, column: 2, scope: !9153)
!9161 = !DILocation(line: 369, column: 23, scope: !9135)
!9162 = !DILocation(line: 369, column: 21, scope: !9135)
!9163 = !DILocation(line: 372, column: 2, scope: !9135)
!9164 = !DILocation(line: 433, column: 2, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9166, file: !707, line: 433, column: 2)
!9166 = distinct !DILexicalBlock(scope: !9135, file: !707, line: 433, column: 2)
!9167 = !DILocation(line: 433, column: 2, scope: !9166)
!9168 = !DILocation(line: 433, column: 2, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !707, line: 433, column: 2)
!9170 = !DILocation(line: 444, column: 1, scope: !9135)
!9171 = distinct !DISubprogram(name: "strcpy", scope: !9172, file: !9172, line: 20, type: !9173, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9177)
!9172 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9173 = !DISubroutineType(types: !9174)
!9174 = !{!102, !9175, !9176}
!9175 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9177 = !{!9178, !9179, !9180}
!9178 = !DILocalVariable(name: "d", arg: 1, scope: !9171, file: !9172, line: 20, type: !9175)
!9179 = !DILocalVariable(name: "s", arg: 2, scope: !9171, file: !9172, line: 20, type: !9176)
!9180 = !DILocalVariable(name: "dest", scope: !9171, file: !9172, line: 22, type: !102)
!9181 = !DILocation(line: 0, scope: !9171)
!9182 = !DILocation(line: 24, column: 9, scope: !9171)
!9183 = !DILocation(line: 24, column: 12, scope: !9171)
!9184 = !DILocation(line: 24, column: 2, scope: !9171)
!9185 = !DILocation(line: 25, column: 6, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9171, file: !9172, line: 24, column: 21)
!9187 = !DILocation(line: 26, column: 4, scope: !9186)
!9188 = !DILocation(line: 27, column: 4, scope: !9186)
!9189 = distinct !{!9189, !9184, !9190}
!9190 = !DILocation(line: 28, column: 2, scope: !9171)
!9191 = !DILocation(line: 30, column: 5, scope: !9171)
!9192 = !DILocation(line: 32, column: 2, scope: !9171)
!9193 = distinct !DISubprogram(name: "strncpy", scope: !9172, file: !9172, line: 42, type: !9194, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9196)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!102, !9175, !9176, !111}
!9196 = !{!9197, !9198, !9199, !9200}
!9197 = !DILocalVariable(name: "d", arg: 1, scope: !9193, file: !9172, line: 42, type: !9175)
!9198 = !DILocalVariable(name: "s", arg: 2, scope: !9193, file: !9172, line: 42, type: !9176)
!9199 = !DILocalVariable(name: "n", arg: 3, scope: !9193, file: !9172, line: 42, type: !111)
!9200 = !DILocalVariable(name: "dest", scope: !9193, file: !9172, line: 44, type: !102)
!9201 = !DILocation(line: 0, scope: !9193)
!9202 = !DILocation(line: 46, column: 12, scope: !9193)
!9203 = !DILocation(line: 46, column: 17, scope: !9193)
!9204 = !DILocation(line: 46, column: 20, scope: !9193)
!9205 = !DILocation(line: 46, column: 23, scope: !9193)
!9206 = !DILocation(line: 46, column: 2, scope: !9193)
!9207 = !DILocation(line: 47, column: 6, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9193, file: !9172, line: 46, column: 32)
!9209 = !DILocation(line: 48, column: 4, scope: !9208)
!9210 = !DILocation(line: 49, column: 4, scope: !9208)
!9211 = !DILocation(line: 50, column: 4, scope: !9208)
!9212 = distinct !{!9212, !9206, !9213}
!9213 = !DILocation(line: 51, column: 2, scope: !9193)
!9214 = !DILocation(line: 54, column: 6, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9193, file: !9172, line: 53, column: 16)
!9216 = !DILocation(line: 55, column: 4, scope: !9215)
!9217 = !DILocation(line: 56, column: 4, scope: !9215)
!9218 = !DILocation(line: 53, column: 11, scope: !9193)
!9219 = !DILocation(line: 53, column: 2, scope: !9193)
!9220 = distinct !{!9220, !9219, !9221}
!9221 = !DILocation(line: 57, column: 2, scope: !9193)
!9222 = !DILocation(line: 59, column: 2, scope: !9193)
!9223 = distinct !DISubprogram(name: "strchr", scope: !9172, file: !9172, line: 69, type: !9224, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9226)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!102, !269, !105}
!9226 = !{!9227, !9228, !9229}
!9227 = !DILocalVariable(name: "s", arg: 1, scope: !9223, file: !9172, line: 69, type: !269)
!9228 = !DILocalVariable(name: "c", arg: 2, scope: !9223, file: !9172, line: 69, type: !105)
!9229 = !DILocalVariable(name: "tmp", scope: !9223, file: !9172, line: 71, type: !103)
!9230 = !DILocation(line: 0, scope: !9223)
!9231 = !DILocation(line: 73, column: 2, scope: !9223)
!9232 = !DILocation(line: 73, column: 10, scope: !9223)
!9233 = !DILocation(line: 73, column: 13, scope: !9223)
!9234 = !DILocation(line: 73, column: 21, scope: !9223)
!9235 = !DILocation(line: 74, column: 4, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9223, file: !9172, line: 73, column: 38)
!9237 = distinct !{!9237, !9231, !9238}
!9238 = !DILocation(line: 75, column: 2, scope: !9223)
!9239 = !DILocation(line: 77, column: 9, scope: !9223)
!9240 = !DILocation(line: 77, column: 2, scope: !9223)
!9241 = distinct !DISubprogram(name: "strrchr", scope: !9172, file: !9172, line: 87, type: !9224, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9242)
!9242 = !{!9243, !9244, !9245}
!9243 = !DILocalVariable(name: "s", arg: 1, scope: !9241, file: !9172, line: 87, type: !269)
!9244 = !DILocalVariable(name: "c", arg: 2, scope: !9241, file: !9172, line: 87, type: !105)
!9245 = !DILocalVariable(name: "match", scope: !9241, file: !9172, line: 89, type: !102)
!9246 = !DILocation(line: 0, scope: !9241)
!9247 = !DILocation(line: 91, column: 2, scope: !9241)
!9248 = !DILocation(line: 92, column: 7, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9250, file: !9172, line: 92, column: 7)
!9250 = distinct !DILexicalBlock(scope: !9241, file: !9172, line: 91, column: 5)
!9251 = !DILocation(line: 92, column: 10, scope: !9249)
!9252 = !DILocation(line: 92, column: 7, scope: !9250)
!9253 = !DILocation(line: 95, column: 13, scope: !9241)
!9254 = !DILocation(line: 95, column: 2, scope: !9250)
!9255 = distinct !{!9255, !9247, !9256}
!9256 = !DILocation(line: 95, column: 15, scope: !9241)
!9257 = !DILocation(line: 97, column: 2, scope: !9241)
!9258 = distinct !DISubprogram(name: "strlen", scope: !9172, file: !9172, line: 107, type: !9259, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9261)
!9259 = !DISubroutineType(types: !9260)
!9260 = !{!111, !269}
!9261 = !{!9262, !9263}
!9262 = !DILocalVariable(name: "s", arg: 1, scope: !9258, file: !9172, line: 107, type: !269)
!9263 = !DILocalVariable(name: "n", scope: !9258, file: !9172, line: 109, type: !111)
!9264 = !DILocation(line: 0, scope: !9258)
!9265 = !DILocation(line: 111, column: 9, scope: !9258)
!9266 = !DILocation(line: 111, column: 12, scope: !9258)
!9267 = !DILocation(line: 111, column: 2, scope: !9258)
!9268 = !DILocation(line: 112, column: 4, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9258, file: !9172, line: 111, column: 21)
!9270 = !DILocation(line: 113, column: 4, scope: !9269)
!9271 = distinct !{!9271, !9267, !9272}
!9272 = !DILocation(line: 114, column: 2, scope: !9258)
!9273 = !DILocation(line: 116, column: 2, scope: !9258)
!9274 = distinct !DISubprogram(name: "strnlen", scope: !9172, file: !9172, line: 126, type: !9275, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{!111, !269, !111}
!9277 = !{!9278, !9279, !9280}
!9278 = !DILocalVariable(name: "s", arg: 1, scope: !9274, file: !9172, line: 126, type: !269)
!9279 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9274, file: !9172, line: 126, type: !111)
!9280 = !DILocalVariable(name: "n", scope: !9274, file: !9172, line: 128, type: !111)
!9281 = !DILocation(line: 0, scope: !9274)
!9282 = !DILocation(line: 130, column: 9, scope: !9274)
!9283 = !DILocation(line: 130, column: 12, scope: !9274)
!9284 = !DILocation(line: 130, column: 20, scope: !9274)
!9285 = !DILocation(line: 130, column: 2, scope: !9274)
!9286 = !DILocation(line: 131, column: 4, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9274, file: !9172, line: 130, column: 35)
!9288 = !DILocation(line: 132, column: 4, scope: !9287)
!9289 = distinct !{!9289, !9285, !9290}
!9290 = !DILocation(line: 133, column: 2, scope: !9274)
!9291 = !DILocation(line: 135, column: 2, scope: !9274)
!9292 = distinct !DISubprogram(name: "strcmp", scope: !9172, file: !9172, line: 145, type: !9293, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9295)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{!105, !269, !269}
!9295 = !{!9296, !9297}
!9296 = !DILocalVariable(name: "s1", arg: 1, scope: !9292, file: !9172, line: 145, type: !269)
!9297 = !DILocalVariable(name: "s2", arg: 2, scope: !9292, file: !9172, line: 145, type: !269)
!9298 = !DILocation(line: 0, scope: !9292)
!9299 = !DILocation(line: 147, column: 10, scope: !9292)
!9300 = !DILocation(line: 147, column: 17, scope: !9292)
!9301 = !DILocation(line: 147, column: 14, scope: !9292)
!9302 = !DILocation(line: 147, column: 22, scope: !9292)
!9303 = !DILocation(line: 148, column: 5, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9292, file: !9172, line: 147, column: 40)
!9305 = !DILocation(line: 149, column: 5, scope: !9304)
!9306 = distinct !{!9306, !9307, !9308}
!9307 = !DILocation(line: 147, column: 2, scope: !9292)
!9308 = !DILocation(line: 150, column: 2, scope: !9292)
!9309 = !DILocation(line: 152, column: 9, scope: !9292)
!9310 = !DILocation(line: 152, column: 15, scope: !9292)
!9311 = !DILocation(line: 152, column: 13, scope: !9292)
!9312 = !DILocation(line: 152, column: 2, scope: !9292)
!9313 = distinct !DISubprogram(name: "strncmp", scope: !9172, file: !9172, line: 162, type: !9314, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9316)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!105, !269, !269, !111}
!9316 = !{!9317, !9318, !9319}
!9317 = !DILocalVariable(name: "s1", arg: 1, scope: !9313, file: !9172, line: 162, type: !269)
!9318 = !DILocalVariable(name: "s2", arg: 2, scope: !9313, file: !9172, line: 162, type: !269)
!9319 = !DILocalVariable(name: "n", arg: 3, scope: !9313, file: !9172, line: 162, type: !111)
!9320 = !DILocation(line: 0, scope: !9313)
!9321 = !DILocation(line: 164, column: 17, scope: !9313)
!9322 = !DILocation(line: 164, column: 21, scope: !9313)
!9323 = !DILocation(line: 164, column: 28, scope: !9313)
!9324 = !DILocation(line: 164, column: 25, scope: !9313)
!9325 = !DILocation(line: 164, column: 33, scope: !9313)
!9326 = !DILocation(line: 165, column: 5, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9313, file: !9172, line: 164, column: 51)
!9328 = !DILocation(line: 166, column: 5, scope: !9327)
!9329 = !DILocation(line: 167, column: 4, scope: !9327)
!9330 = distinct !{!9330, !9331, !9332}
!9331 = !DILocation(line: 164, column: 2, scope: !9313)
!9332 = !DILocation(line: 168, column: 2, scope: !9313)
!9333 = !DILocation(line: 170, column: 25, scope: !9313)
!9334 = !DILocation(line: 170, column: 31, scope: !9313)
!9335 = !DILocation(line: 170, column: 29, scope: !9313)
!9336 = !DILocation(line: 170, column: 9, scope: !9313)
!9337 = !DILocation(line: 170, column: 2, scope: !9313)
!9338 = distinct !DISubprogram(name: "strtok_r", scope: !9172, file: !9172, line: 180, type: !9339, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9341)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!102, !102, !269, !431}
!9341 = !{!9342, !9343, !9344, !9345, !9346}
!9342 = !DILocalVariable(name: "str", arg: 1, scope: !9338, file: !9172, line: 180, type: !102)
!9343 = !DILocalVariable(name: "sep", arg: 2, scope: !9338, file: !9172, line: 180, type: !269)
!9344 = !DILocalVariable(name: "state", arg: 3, scope: !9338, file: !9172, line: 180, type: !431)
!9345 = !DILocalVariable(name: "start", scope: !9338, file: !9172, line: 182, type: !102)
!9346 = !DILocalVariable(name: "end", scope: !9338, file: !9172, line: 182, type: !102)
!9347 = !DILocation(line: 0, scope: !9338)
!9348 = !DILocation(line: 184, column: 10, scope: !9338)
!9349 = !DILocation(line: 184, column: 22, scope: !9338)
!9350 = !DILocation(line: 187, column: 9, scope: !9338)
!9351 = !DILocation(line: 187, column: 16, scope: !9338)
!9352 = !DILocation(line: 187, column: 19, scope: !9338)
!9353 = !DILocation(line: 187, column: 2, scope: !9338)
!9354 = !DILocation(line: 188, column: 8, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9338, file: !9172, line: 187, column: 40)
!9356 = distinct !{!9356, !9353, !9357}
!9357 = !DILocation(line: 189, column: 2, scope: !9338)
!9358 = !DILocation(line: 198, column: 9, scope: !9338)
!9359 = !DILocation(line: 198, column: 18, scope: !9338)
!9360 = !DILocation(line: 198, column: 17, scope: !9338)
!9361 = !DILocation(line: 198, column: 2, scope: !9338)
!9362 = !DILocation(line: 199, column: 6, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9338, file: !9172, line: 198, column: 37)
!9364 = !DILocation(line: 198, column: 14, scope: !9338)
!9365 = distinct !{!9365, !9361, !9366}
!9366 = !DILocation(line: 200, column: 2, scope: !9338)
!9367 = !DILocation(line: 203, column: 8, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !9172, line: 202, column: 20)
!9369 = distinct !DILexicalBlock(scope: !9338, file: !9172, line: 202, column: 6)
!9370 = !DILocation(line: 204, column: 16, scope: !9368)
!9371 = !DILocation(line: 205, column: 2, scope: !9368)
!9372 = !DILocation(line: 210, column: 1, scope: !9338)
!9373 = distinct !DISubprogram(name: "strcat", scope: !9172, file: !9172, line: 212, type: !9173, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9374)
!9374 = !{!9375, !9376}
!9375 = !DILocalVariable(name: "dest", arg: 1, scope: !9373, file: !9172, line: 212, type: !9175)
!9376 = !DILocalVariable(name: "src", arg: 2, scope: !9373, file: !9172, line: 212, type: !9176)
!9377 = !DILocation(line: 0, scope: !9373)
!9378 = !DILocation(line: 214, column: 16, scope: !9373)
!9379 = !DILocation(line: 214, column: 14, scope: !9373)
!9380 = !DILocation(line: 214, column: 2, scope: !9373)
!9381 = !DILocation(line: 215, column: 2, scope: !9373)
!9382 = distinct !DISubprogram(name: "strncat", scope: !9172, file: !9172, line: 218, type: !9194, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9383)
!9383 = !{!9384, !9385, !9386, !9387, !9388}
!9384 = !DILocalVariable(name: "dest", arg: 1, scope: !9382, file: !9172, line: 218, type: !9175)
!9385 = !DILocalVariable(name: "src", arg: 2, scope: !9382, file: !9172, line: 218, type: !9176)
!9386 = !DILocalVariable(name: "n", arg: 3, scope: !9382, file: !9172, line: 219, type: !111)
!9387 = !DILocalVariable(name: "orig_dest", scope: !9382, file: !9172, line: 221, type: !102)
!9388 = !DILocalVariable(name: "len", scope: !9382, file: !9172, line: 222, type: !111)
!9389 = !DILocation(line: 0, scope: !9382)
!9390 = !DILocation(line: 222, column: 15, scope: !9382)
!9391 = !DILocation(line: 224, column: 7, scope: !9382)
!9392 = !DILocation(line: 225, column: 14, scope: !9382)
!9393 = !DILocation(line: 225, column: 19, scope: !9382)
!9394 = !DILocation(line: 225, column: 11, scope: !9382)
!9395 = !DILocation(line: 225, column: 23, scope: !9382)
!9396 = !DILocation(line: 225, column: 28, scope: !9382)
!9397 = !DILocation(line: 225, column: 2, scope: !9382)
!9398 = !DILocation(line: 226, column: 17, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9382, file: !9172, line: 225, column: 38)
!9400 = !DILocation(line: 226, column: 8, scope: !9399)
!9401 = !DILocation(line: 226, column: 11, scope: !9399)
!9402 = distinct !{!9402, !9397, !9403}
!9403 = !DILocation(line: 227, column: 2, scope: !9382)
!9404 = !DILocation(line: 228, column: 8, scope: !9382)
!9405 = !DILocation(line: 230, column: 2, scope: !9382)
!9406 = distinct !DISubprogram(name: "memcmp", scope: !9172, file: !9172, line: 239, type: !9407, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9409)
!9407 = !DISubroutineType(types: !9408)
!9408 = !{!105, !13, !13, !111}
!9409 = !{!9410, !9411, !9412, !9413, !9414}
!9410 = !DILocalVariable(name: "m1", arg: 1, scope: !9406, file: !9172, line: 239, type: !13)
!9411 = !DILocalVariable(name: "m2", arg: 2, scope: !9406, file: !9172, line: 239, type: !13)
!9412 = !DILocalVariable(name: "n", arg: 3, scope: !9406, file: !9172, line: 239, type: !111)
!9413 = !DILocalVariable(name: "c1", scope: !9406, file: !9172, line: 241, type: !269)
!9414 = !DILocalVariable(name: "c2", scope: !9406, file: !9172, line: 242, type: !269)
!9415 = !DILocation(line: 0, scope: !9406)
!9416 = !DILocation(line: 244, column: 7, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9406, file: !9172, line: 244, column: 6)
!9418 = !DILocation(line: 244, column: 6, scope: !9406)
!9419 = !DILocation(line: 248, column: 10, scope: !9406)
!9420 = !DILocation(line: 248, column: 14, scope: !9406)
!9421 = !DILocation(line: 248, column: 19, scope: !9406)
!9422 = !DILocation(line: 248, column: 2, scope: !9406)
!9423 = !DILocation(line: 248, column: 23, scope: !9406)
!9424 = !DILocation(line: 248, column: 30, scope: !9406)
!9425 = !DILocation(line: 248, column: 27, scope: !9406)
!9426 = !DILocation(line: 249, column: 5, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9406, file: !9172, line: 248, column: 36)
!9428 = !DILocation(line: 250, column: 5, scope: !9427)
!9429 = distinct !{!9429, !9422, !9430}
!9430 = !DILocation(line: 251, column: 2, scope: !9406)
!9431 = !DILocation(line: 253, column: 9, scope: !9406)
!9432 = !DILocation(line: 253, column: 15, scope: !9406)
!9433 = !DILocation(line: 253, column: 13, scope: !9406)
!9434 = !DILocation(line: 253, column: 2, scope: !9406)
!9435 = !DILocation(line: 254, column: 1, scope: !9406)
!9436 = distinct !DISubprogram(name: "memmove", scope: !9172, file: !9172, line: 263, type: !9437, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9439)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!104, !104, !13, !111}
!9439 = !{!9440, !9441, !9442, !9443, !9444}
!9440 = !DILocalVariable(name: "d", arg: 1, scope: !9436, file: !9172, line: 263, type: !104)
!9441 = !DILocalVariable(name: "s", arg: 2, scope: !9436, file: !9172, line: 263, type: !13)
!9442 = !DILocalVariable(name: "n", arg: 3, scope: !9436, file: !9172, line: 263, type: !111)
!9443 = !DILocalVariable(name: "dest", scope: !9436, file: !9172, line: 265, type: !102)
!9444 = !DILocalVariable(name: "src", scope: !9436, file: !9172, line: 266, type: !269)
!9445 = !DILocation(line: 0, scope: !9436)
!9446 = !DILocation(line: 268, column: 21, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9436, file: !9172, line: 268, column: 6)
!9448 = !DILocation(line: 268, column: 28, scope: !9447)
!9449 = !DILocation(line: 268, column: 6, scope: !9436)
!9450 = !DILocation(line: 280, column: 12, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9447, file: !9172, line: 278, column: 9)
!9452 = !DILocation(line: 280, column: 3, scope: !9451)
!9453 = !DILocation(line: 275, column: 5, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9455, file: !9172, line: 274, column: 17)
!9455 = distinct !DILexicalBlock(scope: !9447, file: !9172, line: 268, column: 33)
!9456 = !DILocation(line: 276, column: 14, scope: !9454)
!9457 = !DILocation(line: 276, column: 4, scope: !9454)
!9458 = !DILocation(line: 276, column: 12, scope: !9454)
!9459 = !DILocation(line: 274, column: 12, scope: !9455)
!9460 = !DILocation(line: 274, column: 3, scope: !9455)
!9461 = distinct !{!9461, !9460, !9462}
!9462 = !DILocation(line: 277, column: 3, scope: !9455)
!9463 = !DILocation(line: 281, column: 12, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9451, file: !9172, line: 280, column: 17)
!9465 = !DILocation(line: 281, column: 10, scope: !9464)
!9466 = !DILocation(line: 282, column: 8, scope: !9464)
!9467 = !DILocation(line: 283, column: 7, scope: !9464)
!9468 = !DILocation(line: 284, column: 5, scope: !9464)
!9469 = distinct !{!9469, !9452, !9470}
!9470 = !DILocation(line: 285, column: 3, scope: !9451)
!9471 = !DILocation(line: 288, column: 2, scope: !9436)
!9472 = distinct !DISubprogram(name: "memcpy", scope: !9172, file: !9172, line: 298, type: !9473, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9477)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{!104, !9475, !9476, !111}
!9475 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9476 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9477 = !{!9478, !9479, !9480, !9481, !9482}
!9478 = !DILocalVariable(name: "d", arg: 1, scope: !9472, file: !9172, line: 298, type: !9475)
!9479 = !DILocalVariable(name: "s", arg: 2, scope: !9472, file: !9172, line: 298, type: !9476)
!9480 = !DILocalVariable(name: "n", arg: 3, scope: !9472, file: !9172, line: 298, type: !111)
!9481 = !DILocalVariable(name: "d_byte", scope: !9472, file: !9172, line: 302, type: !1130)
!9482 = !DILocalVariable(name: "s_byte", scope: !9472, file: !9172, line: 303, type: !2948)
!9483 = !DILocation(line: 0, scope: !9472)
!9484 = !DILocation(line: 337, column: 11, scope: !9472)
!9485 = !DILocation(line: 337, column: 2, scope: !9472)
!9486 = !DILocation(line: 338, column: 25, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9472, file: !9172, line: 337, column: 16)
!9488 = !DILocation(line: 338, column: 17, scope: !9487)
!9489 = !DILocation(line: 338, column: 11, scope: !9487)
!9490 = !DILocation(line: 338, column: 15, scope: !9487)
!9491 = !DILocation(line: 339, column: 4, scope: !9487)
!9492 = distinct !{!9492, !9485, !9493}
!9493 = !DILocation(line: 340, column: 2, scope: !9472)
!9494 = !DILocation(line: 342, column: 2, scope: !9472)
!9495 = distinct !DISubprogram(name: "memset", scope: !9172, file: !9172, line: 352, type: !9496, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9498)
!9496 = !DISubroutineType(types: !9497)
!9497 = !{!104, !104, !105, !111}
!9498 = !{!9499, !9500, !9501, !9502, !9503}
!9499 = !DILocalVariable(name: "buf", arg: 1, scope: !9495, file: !9172, line: 352, type: !104)
!9500 = !DILocalVariable(name: "c", arg: 2, scope: !9495, file: !9172, line: 352, type: !105)
!9501 = !DILocalVariable(name: "n", arg: 3, scope: !9495, file: !9172, line: 352, type: !111)
!9502 = !DILocalVariable(name: "d_byte", scope: !9495, file: !9172, line: 356, type: !1130)
!9503 = !DILocalVariable(name: "c_byte", scope: !9495, file: !9172, line: 357, type: !170)
!9504 = !DILocation(line: 0, scope: !9495)
!9505 = !DILocation(line: 357, column: 25, scope: !9495)
!9506 = !DILocation(line: 389, column: 11, scope: !9495)
!9507 = !DILocation(line: 389, column: 2, scope: !9495)
!9508 = !DILocation(line: 390, column: 11, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9495, file: !9172, line: 389, column: 16)
!9510 = !DILocation(line: 390, column: 15, scope: !9509)
!9511 = !DILocation(line: 391, column: 4, scope: !9509)
!9512 = distinct !{!9512, !9507, !9513}
!9513 = !DILocation(line: 392, column: 2, scope: !9495)
!9514 = !DILocation(line: 394, column: 2, scope: !9495)
!9515 = distinct !DISubprogram(name: "memchr", scope: !9172, file: !9172, line: 404, type: !9516, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2945, retainedNodes: !9518)
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!104, !13, !105, !111}
!9518 = !{!9519, !9520, !9521, !9522}
!9519 = !DILocalVariable(name: "s", arg: 1, scope: !9515, file: !9172, line: 404, type: !13)
!9520 = !DILocalVariable(name: "c", arg: 2, scope: !9515, file: !9172, line: 404, type: !105)
!9521 = !DILocalVariable(name: "n", arg: 3, scope: !9515, file: !9172, line: 404, type: !111)
!9522 = !DILocalVariable(name: "p", scope: !9523, file: !9172, line: 407, type: !2948)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !9172, line: 406, column: 14)
!9524 = distinct !DILexicalBlock(scope: !9515, file: !9172, line: 406, column: 6)
!9525 = !DILocation(line: 0, scope: !9515)
!9526 = !DILocation(line: 406, column: 8, scope: !9524)
!9527 = !DILocation(line: 406, column: 6, scope: !9515)
!9528 = !DILocation(line: 409, column: 3, scope: !9523)
!9529 = !DILocation(line: 0, scope: !9523)
!9530 = !DILocation(line: 410, column: 8, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9532, file: !9172, line: 410, column: 8)
!9532 = distinct !DILexicalBlock(scope: !9523, file: !9172, line: 409, column: 6)
!9533 = !DILocation(line: 410, column: 13, scope: !9531)
!9534 = !DILocation(line: 410, column: 8, scope: !9532)
!9535 = distinct !{!9535, !9528, !9536}
!9536 = !DILocation(line: 414, column: 20, scope: !9523)
!9537 = !DILocation(line: 417, column: 2, scope: !9515)
!9538 = !DILocation(line: 418, column: 1, scope: !9515)
!9539 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !717, file: !717, line: 23, type: !4901, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9540)
!9540 = !{!9541}
!9541 = !DILocalVariable(name: "hook", arg: 1, scope: !9539, file: !717, line: 23, type: !447)
!9542 = !DILocation(line: 0, scope: !9539)
!9543 = !DILocation(line: 25, column: 15, scope: !9539)
!9544 = !DILocation(line: 26, column: 1, scope: !9539)
!9545 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !717, file: !717, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9546)
!9546 = !{!9547}
!9547 = !DILocalVariable(name: "c", arg: 1, scope: !9545, file: !717, line: 14, type: !105)
!9548 = !DILocation(line: 0, scope: !9545)
!9549 = !DILocation(line: 18, column: 2, scope: !9545)
!9550 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !717, file: !717, line: 28, type: !9551, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9553)
!9551 = !DISubroutineType(types: !9552)
!9552 = !{!105, !105, !713}
!9553 = !{!9554, !9555}
!9554 = !DILocalVariable(name: "c", arg: 1, scope: !9550, file: !717, line: 28, type: !105)
!9555 = !DILocalVariable(name: "stream", arg: 2, scope: !9550, file: !717, line: 28, type: !713)
!9556 = !DILocation(line: 0, scope: !9550)
!9557 = !DILocation(line: 30, column: 27, scope: !9550)
!9558 = !DILocation(line: 30, column: 50, scope: !9550)
!9559 = !DILocation(line: 30, column: 9, scope: !9550)
!9560 = !DILocation(line: 30, column: 2, scope: !9550)
!9561 = distinct !DISubprogram(name: "fputc", scope: !717, file: !717, line: 41, type: !9551, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9562)
!9562 = !{!9563, !9564}
!9563 = !DILocalVariable(name: "c", arg: 1, scope: !9561, file: !717, line: 41, type: !105)
!9564 = !DILocalVariable(name: "stream", arg: 2, scope: !9561, file: !717, line: 41, type: !713)
!9565 = !DILocation(line: 0, scope: !9561)
!9566 = !DILocation(line: 43, column: 9, scope: !9561)
!9567 = !DILocation(line: 43, column: 2, scope: !9561)
!9568 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9569, file: !9569, line: 72, type: !9551, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9570)
!9569 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!9570 = !{!9571, !9572}
!9571 = !DILocalVariable(name: "c", arg: 1, scope: !9568, file: !9569, line: 72, type: !105)
!9572 = !DILocalVariable(name: "stream", arg: 2, scope: !9568, file: !9569, line: 72, type: !713)
!9573 = !DILocation(line: 0, scope: !9568)
!9574 = !DILocation(line: 81, column: 2, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9568, file: !9569, line: 81, column: 2)
!9576 = !{i64 2154811788}
!9577 = !DILocation(line: 82, column: 9, scope: !9568)
!9578 = !DILocation(line: 82, column: 2, scope: !9568)
!9579 = distinct !DISubprogram(name: "fputs", scope: !717, file: !717, line: 46, type: !9580, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9583)
!9580 = !DISubroutineType(types: !9581)
!9581 = !{!105, !9176, !9582}
!9582 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !713)
!9583 = !{!9584, !9585, !9586, !9587}
!9584 = !DILocalVariable(name: "s", arg: 1, scope: !9579, file: !717, line: 46, type: !9176)
!9585 = !DILocalVariable(name: "stream", arg: 2, scope: !9579, file: !717, line: 46, type: !9582)
!9586 = !DILocalVariable(name: "len", scope: !9579, file: !717, line: 48, type: !105)
!9587 = !DILocalVariable(name: "ret", scope: !9579, file: !717, line: 49, type: !105)
!9588 = !DILocation(line: 0, scope: !9579)
!9589 = !DILocation(line: 48, column: 12, scope: !9579)
!9590 = !DILocation(line: 51, column: 8, scope: !9579)
!9591 = !DILocation(line: 53, column: 13, scope: !9579)
!9592 = !DILocation(line: 53, column: 9, scope: !9579)
!9593 = !DILocation(line: 53, column: 2, scope: !9579)
!9594 = distinct !DISubprogram(name: "fwrite", scope: !717, file: !717, line: 99, type: !9595, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9597)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{!111, !9476, !111, !111, !9582}
!9597 = !{!9598, !9599, !9600, !9601}
!9598 = !DILocalVariable(name: "ptr", arg: 1, scope: !9594, file: !717, line: 99, type: !9476)
!9599 = !DILocalVariable(name: "size", arg: 2, scope: !9594, file: !717, line: 99, type: !111)
!9600 = !DILocalVariable(name: "nitems", arg: 3, scope: !9594, file: !717, line: 99, type: !111)
!9601 = !DILocalVariable(name: "stream", arg: 4, scope: !9594, file: !717, line: 100, type: !9582)
!9602 = !DILocation(line: 0, scope: !9594)
!9603 = !DILocation(line: 102, column: 9, scope: !9594)
!9604 = !DILocation(line: 102, column: 2, scope: !9594)
!9605 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9569, file: !9569, line: 96, type: !9595, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9606)
!9606 = !{!9607, !9608, !9609, !9610}
!9607 = !DILocalVariable(name: "ptr", arg: 1, scope: !9605, file: !9569, line: 96, type: !9476)
!9608 = !DILocalVariable(name: "size", arg: 2, scope: !9605, file: !9569, line: 96, type: !111)
!9609 = !DILocalVariable(name: "nitems", arg: 3, scope: !9605, file: !9569, line: 96, type: !111)
!9610 = !DILocalVariable(name: "stream", arg: 4, scope: !9605, file: !9569, line: 96, type: !9582)
!9611 = !DILocation(line: 0, scope: !9605)
!9612 = !DILocation(line: 107, column: 2, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9605, file: !9569, line: 107, column: 2)
!9614 = !{i64 2154811892}
!9615 = !DILocation(line: 108, column: 9, scope: !9605)
!9616 = !DILocation(line: 108, column: 2, scope: !9605)
!9617 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !717, file: !717, line: 56, type: !9595, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9618)
!9618 = !{!9619, !9620, !9621, !9622, !9623, !9624, !9625, !9626}
!9619 = !DILocalVariable(name: "ptr", arg: 1, scope: !9617, file: !717, line: 56, type: !9476)
!9620 = !DILocalVariable(name: "size", arg: 2, scope: !9617, file: !717, line: 56, type: !111)
!9621 = !DILocalVariable(name: "nitems", arg: 3, scope: !9617, file: !717, line: 57, type: !111)
!9622 = !DILocalVariable(name: "stream", arg: 4, scope: !9617, file: !717, line: 57, type: !9582)
!9623 = !DILocalVariable(name: "i", scope: !9617, file: !717, line: 59, type: !111)
!9624 = !DILocalVariable(name: "j", scope: !9617, file: !717, line: 60, type: !111)
!9625 = !DILocalVariable(name: "p", scope: !9617, file: !717, line: 61, type: !2948)
!9626 = !DILabel(scope: !9617, name: "done", file: !717, line: 82)
!9627 = !DILocation(line: 0, scope: !9617)
!9628 = !DILocation(line: 63, column: 14, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9617, file: !717, line: 63, column: 6)
!9630 = !DILocation(line: 63, column: 24, scope: !9629)
!9631 = !DILocation(line: 72, column: 3, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9617, file: !717, line: 70, column: 5)
!9633 = !DILocation(line: 0, scope: !9632)
!9634 = !DILocation(line: 73, column: 8, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !717, line: 73, column: 8)
!9636 = distinct !DILexicalBlock(scope: !9632, file: !717, line: 72, column: 6)
!9637 = !DILocation(line: 73, column: 29, scope: !9635)
!9638 = !DILocation(line: 73, column: 27, scope: !9635)
!9639 = !DILocation(line: 73, column: 21, scope: !9635)
!9640 = !DILocation(line: 73, column: 33, scope: !9635)
!9641 = !DILocation(line: 73, column: 8, scope: !9636)
!9642 = !DILocation(line: 76, column: 5, scope: !9636)
!9643 = !DILocation(line: 77, column: 14, scope: !9632)
!9644 = !DILocation(line: 77, column: 3, scope: !9636)
!9645 = distinct !{!9645, !9631, !9646}
!9646 = !DILocation(line: 77, column: 17, scope: !9632)
!9647 = !DILocation(line: 79, column: 4, scope: !9632)
!9648 = !DILocation(line: 80, column: 13, scope: !9617)
!9649 = !DILocation(line: 80, column: 2, scope: !9632)
!9650 = distinct !{!9650, !9651, !9652}
!9651 = !DILocation(line: 70, column: 2, scope: !9617)
!9652 = !DILocation(line: 80, column: 16, scope: !9617)
!9653 = !DILocation(line: 82, column: 1, scope: !9617)
!9654 = !DILocation(line: 83, column: 17, scope: !9617)
!9655 = !DILocation(line: 83, column: 2, scope: !9617)
!9656 = !DILocation(line: 84, column: 1, scope: !9617)
!9657 = distinct !DISubprogram(name: "puts", scope: !717, file: !717, line: 106, type: !9658, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!105, !269}
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "s", arg: 1, scope: !9657, file: !717, line: 106, type: !269)
!9662 = !DILocation(line: 0, scope: !9657)
!9663 = !DILocation(line: 108, column: 6, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9657, file: !717, line: 108, column: 6)
!9665 = !DILocation(line: 108, column: 23, scope: !9664)
!9666 = !DILocation(line: 108, column: 6, scope: !9657)
!9667 = !DILocation(line: 112, column: 9, scope: !9657)
!9668 = !DILocation(line: 112, column: 29, scope: !9657)
!9669 = !DILocation(line: 112, column: 2, scope: !9657)
!9670 = !DILocation(line: 113, column: 1, scope: !9657)
!9671 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !849, file: !849, line: 368, type: !900, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9672)
!9672 = !{!9673}
!9673 = !DILocalVariable(name: "dev", arg: 1, scope: !9671, file: !849, line: 368, type: !876)
!9674 = !DILocation(line: 0, scope: !9671)
!9675 = !DILocation(line: 370, column: 2, scope: !9671)
!9676 = !DILocation(line: 371, column: 1, scope: !9671)
!9677 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !849, file: !849, line: 243, type: !9678, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9680)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{null, !105, !105, !876}
!9680 = !{!9681, !9682, !9683, !9684, !9686}
!9681 = !DILocalVariable(name: "min", arg: 1, scope: !9677, file: !849, line: 243, type: !105)
!9682 = !DILocalVariable(name: "max", arg: 2, scope: !9677, file: !849, line: 243, type: !105)
!9683 = !DILocalVariable(name: "dev", arg: 3, scope: !9677, file: !849, line: 243, type: !876)
!9684 = !DILocalVariable(name: "data", scope: !9677, file: !849, line: 245, type: !9685)
!9685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!9686 = !DILocalVariable(name: "line", scope: !9677, file: !849, line: 246, type: !105)
!9687 = !DILocation(line: 0, scope: !9677)
!9688 = !DILocation(line: 245, column: 38, scope: !9677)
!9689 = !DILocation(line: 249, column: 24, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9691, file: !849, line: 249, column: 2)
!9691 = distinct !DILexicalBlock(scope: !9677, file: !849, line: 249, column: 2)
!9692 = !DILocation(line: 249, column: 2, scope: !9691)
!9693 = !DILocation(line: 251, column: 7, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !849, line: 251, column: 7)
!9695 = distinct !DILexicalBlock(scope: !9690, file: !849, line: 249, column: 39)
!9696 = !DILocation(line: 251, column: 7, scope: !9695)
!9697 = !DILocation(line: 253, column: 4, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9694, file: !849, line: 251, column: 36)
!9699 = !DILocation(line: 256, column: 24, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9698, file: !849, line: 256, column: 8)
!9701 = !DILocation(line: 256, column: 9, scope: !9700)
!9702 = !DILocation(line: 256, column: 8, scope: !9698)
!9703 = !DILocation(line: 260, column: 43, scope: !9698)
!9704 = !DILocation(line: 260, column: 4, scope: !9698)
!9705 = !DILocation(line: 261, column: 3, scope: !9698)
!9706 = !DILocation(line: 249, column: 35, scope: !9690)
!9707 = distinct !{!9707, !9692, !9708}
!9708 = !DILocation(line: 262, column: 2, scope: !9691)
!9709 = !DILocation(line: 263, column: 1, scope: !9677)
!9710 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !849, file: !849, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9711)
!9711 = !{!9712}
!9712 = !DILocalVariable(name: "line", arg: 1, scope: !9710, file: !849, line: 158, type: !105)
!9713 = !DILocation(line: 0, scope: !9710)
!9714 = !DILocation(line: 170, column: 38, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !849, line: 160, column: 17)
!9716 = distinct !DILexicalBlock(scope: !9710, file: !849, line: 160, column: 6)
!9717 = !DILocation(line: 170, column: 10, scope: !9715)
!9718 = !DILocation(line: 176, column: 1, scope: !9710)
!9719 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !849, file: !849, line: 183, type: !9720, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9722)
!9720 = !DISubroutineType(types: !9721)
!9721 = !{null, !105}
!9722 = !{!9723}
!9723 = !DILocalVariable(name: "line", arg: 1, scope: !9719, file: !849, line: 183, type: !105)
!9724 = !DILocation(line: 0, scope: !9719)
!9725 = !DILocation(line: 195, column: 28, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9727, file: !849, line: 185, column: 17)
!9727 = distinct !DILexicalBlock(scope: !9719, file: !849, line: 185, column: 6)
!9728 = !DILocation(line: 195, column: 3, scope: !9726)
!9729 = !DILocation(line: 200, column: 1, scope: !9719)
!9730 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9731, file: !9731, line: 910, type: !7881, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9732)
!9731 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9732 = !{!9733}
!9733 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9730, file: !9731, line: 910, type: !113)
!9734 = !DILocation(line: 0, scope: !9730)
!9735 = !DILocation(line: 912, column: 3, scope: !9730)
!9736 = !DILocation(line: 913, column: 1, scope: !9730)
!9737 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9731, file: !9731, line: 834, type: !9067, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9738)
!9738 = !{!9739}
!9739 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9737, file: !9731, line: 834, type: !113)
!9740 = !DILocation(line: 0, scope: !9737)
!9741 = !DILocation(line: 836, column: 11, scope: !9737)
!9742 = !DILocation(line: 836, column: 40, scope: !9737)
!9743 = !DILocation(line: 836, column: 3, scope: !9737)
!9744 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !849, file: !849, line: 304, type: !900, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9745)
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "dev", arg: 1, scope: !9744, file: !849, line: 304, type: !876)
!9747 = !DILocation(line: 0, scope: !9744)
!9748 = !DILocation(line: 306, column: 2, scope: !9744)
!9749 = !DILocation(line: 307, column: 1, scope: !9744)
!9750 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !849, file: !849, line: 299, type: !900, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9751)
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "dev", arg: 1, scope: !9750, file: !849, line: 299, type: !876)
!9753 = !DILocation(line: 0, scope: !9750)
!9754 = !DILocation(line: 301, column: 2, scope: !9750)
!9755 = !DILocation(line: 302, column: 1, scope: !9750)
!9756 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !849, file: !849, line: 294, type: !900, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9757)
!9757 = !{!9758}
!9758 = !DILocalVariable(name: "dev", arg: 1, scope: !9756, file: !849, line: 294, type: !876)
!9759 = !DILocation(line: 0, scope: !9756)
!9760 = !DILocation(line: 296, column: 2, scope: !9756)
!9761 = !DILocation(line: 297, column: 1, scope: !9756)
!9762 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !849, file: !849, line: 397, type: !900, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9763)
!9763 = !{!9764}
!9764 = !DILocalVariable(name: "dev", arg: 1, scope: !9762, file: !849, line: 397, type: !876)
!9765 = !DILocation(line: 0, scope: !9762)
!9766 = !DILocation(line: 399, column: 2, scope: !9762)
!9767 = !DILocation(line: 400, column: 1, scope: !9762)
!9768 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !849, file: !849, line: 392, type: !900, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !849, line: 392, type: !876)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 394, column: 2, scope: !9768)
!9773 = !DILocation(line: 395, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !849, file: !849, line: 289, type: !900, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9775)
!9775 = !{!9776}
!9776 = !DILocalVariable(name: "dev", arg: 1, scope: !9774, file: !849, line: 289, type: !876)
!9777 = !DILocation(line: 0, scope: !9774)
!9778 = !DILocation(line: 291, column: 2, scope: !9774)
!9779 = !DILocation(line: 292, column: 1, scope: !9774)
!9780 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !849, file: !849, line: 387, type: !900, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9781)
!9781 = !{!9782}
!9782 = !DILocalVariable(name: "dev", arg: 1, scope: !9780, file: !849, line: 387, type: !876)
!9783 = !DILocation(line: 0, scope: !9780)
!9784 = !DILocation(line: 389, column: 2, scope: !9780)
!9785 = !DILocation(line: 390, column: 1, scope: !9780)
!9786 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !849, file: !849, line: 382, type: !900, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9787)
!9787 = !{!9788}
!9788 = !DILocalVariable(name: "dev", arg: 1, scope: !9786, file: !849, line: 382, type: !876)
!9789 = !DILocation(line: 0, scope: !9786)
!9790 = !DILocation(line: 384, column: 2, scope: !9786)
!9791 = !DILocation(line: 385, column: 1, scope: !9786)
!9792 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !849, file: !849, line: 373, type: !900, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9793)
!9793 = !{!9794}
!9794 = !DILocalVariable(name: "dev", arg: 1, scope: !9792, file: !849, line: 373, type: !876)
!9795 = !DILocation(line: 0, scope: !9792)
!9796 = !DILocation(line: 375, column: 2, scope: !9792)
!9797 = !DILocation(line: 376, column: 1, scope: !9792)
!9798 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !849, file: !849, line: 284, type: !900, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9799)
!9799 = !{!9800}
!9800 = !DILocalVariable(name: "dev", arg: 1, scope: !9798, file: !849, line: 284, type: !876)
!9801 = !DILocation(line: 0, scope: !9798)
!9802 = !DILocation(line: 286, column: 2, scope: !9798)
!9803 = !DILocation(line: 287, column: 1, scope: !9798)
!9804 = distinct !DISubprogram(name: "stm32_exti_init", scope: !849, file: !849, line: 416, type: !874, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9805)
!9805 = !{!9806}
!9806 = !DILocalVariable(name: "dev", arg: 1, scope: !9804, file: !849, line: 416, type: !876)
!9807 = !DILocation(line: 0, scope: !9804)
!9808 = !DILocation(line: 418, column: 2, scope: !9804)
!9809 = !DILocation(line: 420, column: 2, scope: !9804)
!9810 = !DILocation(line: 0, scope: !899)
!9811 = !DILocation(line: 493, column: 2, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !899, file: !849, line: 493, column: 2)
!9813 = !DILocation(line: 497, column: 2, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !899, file: !849, line: 497, column: 2)
!9815 = !DILocation(line: 507, column: 2, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !899, file: !849, line: 507, column: 2)
!9817 = !DILocation(line: 512, column: 2, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !899, file: !849, line: 512, column: 2)
!9819 = !DILocation(line: 516, column: 2, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !899, file: !849, line: 516, column: 2)
!9821 = !DILocation(line: 523, column: 2, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !899, file: !849, line: 523, column: 2)
!9823 = !DILocation(line: 527, column: 2, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !899, file: !849, line: 527, column: 2)
!9825 = !DILocation(line: 581, column: 2, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !899, file: !849, line: 581, column: 2)
!9827 = !DILocation(line: 586, column: 2, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !899, file: !849, line: 586, column: 2)
!9829 = !DILocation(line: 591, column: 2, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !899, file: !849, line: 591, column: 2)
!9831 = !DILocation(line: 595, column: 2, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !899, file: !849, line: 595, column: 2)
!9833 = !DILocation(line: 607, column: 1, scope: !899)
!9834 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !849, file: !849, line: 112, type: !9720, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9835)
!9835 = !{!9836, !9837}
!9836 = !DILocalVariable(name: "line", arg: 1, scope: !9834, file: !849, line: 112, type: !105)
!9837 = !DILocalVariable(name: "irqnum", scope: !9834, file: !849, line: 114, type: !105)
!9838 = !DILocation(line: 0, scope: !9834)
!9839 = !DILocation(line: 122, column: 13, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9834, file: !849, line: 122, column: 6)
!9841 = !DILocation(line: 122, column: 6, scope: !9834)
!9842 = !DILocation(line: 123, column: 3, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !849, line: 123, column: 3)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !849, line: 123, column: 3)
!9845 = distinct !DILexicalBlock(scope: !9846, file: !849, line: 123, column: 3)
!9846 = distinct !DILexicalBlock(scope: !9840, file: !849, line: 122, column: 22)
!9847 = !DILocation(line: 121, column: 11, scope: !9834)
!9848 = !DILocation(line: 130, column: 26, scope: !9834)
!9849 = !DILocation(line: 130, column: 2, scope: !9834)
!9850 = !DILocation(line: 134, column: 2, scope: !9834)
!9851 = !DILocation(line: 135, column: 1, scope: !9834)
!9852 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9731, file: !9731, line: 268, type: !7881, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9853)
!9853 = !{!9854}
!9854 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9852, file: !9731, line: 268, type: !113)
!9855 = !DILocation(line: 0, scope: !9852)
!9856 = !DILocation(line: 270, column: 3, scope: !9852)
!9857 = !DILocation(line: 271, column: 1, scope: !9852)
!9858 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !849, file: !849, line: 137, type: !9720, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9859)
!9859 = !{!9860}
!9860 = !DILocalVariable(name: "line", arg: 1, scope: !9858, file: !849, line: 137, type: !105)
!9861 = !DILocation(line: 0, scope: !9858)
!9862 = !DILocation(line: 141, column: 11, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9858, file: !849, line: 141, column: 6)
!9864 = !DILocation(line: 141, column: 6, scope: !9858)
!9865 = !DILocation(line: 145, column: 28, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9863, file: !849, line: 141, column: 17)
!9867 = !DILocation(line: 145, column: 3, scope: !9866)
!9868 = !DILocation(line: 147, column: 2, scope: !9866)
!9869 = !DILocation(line: 151, column: 1, scope: !9858)
!9870 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9731, file: !9731, line: 309, type: !7881, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9871)
!9871 = !{!9872}
!9872 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9870, file: !9731, line: 309, type: !113)
!9873 = !DILocation(line: 0, scope: !9870)
!9874 = !DILocation(line: 311, column: 3, scope: !9870)
!9875 = !DILocation(line: 312, column: 1, scope: !9870)
!9876 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !849, file: !849, line: 202, type: !9877, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9879)
!9877 = !DISubroutineType(types: !9878)
!9878 = !{null, !105, !105}
!9879 = !{!9880, !9881}
!9880 = !DILocalVariable(name: "line", arg: 1, scope: !9876, file: !849, line: 202, type: !105)
!9881 = !DILocalVariable(name: "trigger", arg: 2, scope: !9876, file: !849, line: 202, type: !105)
!9882 = !DILocation(line: 0, scope: !9876)
!9883 = !DILocation(line: 211, column: 2, scope: !9876)
!9884 = !DILocation(line: 213, column: 36, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9876, file: !849, line: 211, column: 19)
!9886 = !DILocation(line: 213, column: 3, scope: !9885)
!9887 = !DILocation(line: 214, column: 3, scope: !9885)
!9888 = !DILocation(line: 215, column: 3, scope: !9885)
!9889 = !DILocation(line: 217, column: 35, scope: !9885)
!9890 = !DILocation(line: 217, column: 3, scope: !9885)
!9891 = !DILocation(line: 218, column: 3, scope: !9885)
!9892 = !DILocation(line: 219, column: 3, scope: !9885)
!9893 = !DILocation(line: 221, column: 36, scope: !9885)
!9894 = !DILocation(line: 221, column: 3, scope: !9885)
!9895 = !DILocation(line: 222, column: 3, scope: !9885)
!9896 = !DILocation(line: 223, column: 3, scope: !9885)
!9897 = !DILocation(line: 225, column: 35, scope: !9885)
!9898 = !DILocation(line: 225, column: 3, scope: !9885)
!9899 = !DILocation(line: 226, column: 3, scope: !9885)
!9900 = !DILocation(line: 227, column: 3, scope: !9885)
!9901 = !DILocation(line: 232, column: 1, scope: !9876)
!9902 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9731, file: !9731, line: 573, type: !7881, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9903)
!9903 = !{!9904}
!9904 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9902, file: !9731, line: 573, type: !113)
!9905 = !DILocation(line: 0, scope: !9902)
!9906 = !DILocation(line: 575, column: 3, scope: !9902)
!9907 = !DILocation(line: 577, column: 1, scope: !9902)
!9908 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9731, file: !9731, line: 703, type: !7881, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9909)
!9909 = !{!9910}
!9910 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9908, file: !9731, line: 703, type: !113)
!9911 = !DILocation(line: 0, scope: !9908)
!9912 = !DILocation(line: 705, column: 3, scope: !9908)
!9913 = !DILocation(line: 706, column: 1, scope: !9908)
!9914 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9731, file: !9731, line: 529, type: !7881, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9915)
!9915 = !{!9916}
!9916 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9914, file: !9731, line: 529, type: !113)
!9917 = !DILocation(line: 0, scope: !9914)
!9918 = !DILocation(line: 531, column: 3, scope: !9914)
!9919 = !DILocation(line: 533, column: 1, scope: !9914)
!9920 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9731, file: !9731, line: 661, type: !7881, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9921)
!9921 = !{!9922}
!9922 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9920, file: !9731, line: 661, type: !113)
!9923 = !DILocation(line: 0, scope: !9920)
!9924 = !DILocation(line: 663, column: 3, scope: !9920)
!9925 = !DILocation(line: 664, column: 1, scope: !9920)
!9926 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !849, file: !849, line: 433, type: !9927, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9929)
!9927 = !DISubroutineType(types: !9928)
!9928 = !{!105, !105, !887, !104}
!9929 = !{!9930, !9931, !9932, !9933, !9935}
!9930 = !DILocalVariable(name: "line", arg: 1, scope: !9926, file: !849, line: 433, type: !105)
!9931 = !DILocalVariable(name: "cb", arg: 2, scope: !9926, file: !849, line: 433, type: !887)
!9932 = !DILocalVariable(name: "arg", arg: 3, scope: !9926, file: !849, line: 433, type: !104)
!9933 = !DILocalVariable(name: "dev", scope: !9926, file: !849, line: 435, type: !9934)
!9934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!9935 = !DILocalVariable(name: "data", scope: !9926, file: !849, line: 436, type: !9685)
!9936 = !DILocation(line: 0, scope: !9926)
!9937 = !DILocation(line: 438, column: 21, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9926, file: !849, line: 438, column: 6)
!9939 = !DILocation(line: 438, column: 6, scope: !9938)
!9940 = !DILocation(line: 438, column: 6, scope: !9926)
!9941 = !DILocation(line: 442, column: 20, scope: !9926)
!9942 = !DILocation(line: 443, column: 17, scope: !9926)
!9943 = !DILocation(line: 443, column: 22, scope: !9926)
!9944 = !DILocation(line: 445, column: 2, scope: !9926)
!9945 = !DILocation(line: 446, column: 1, scope: !9926)
!9946 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !849, file: !849, line: 448, type: !9720, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9947)
!9947 = !{!9948, !9949, !9950}
!9948 = !DILocalVariable(name: "line", arg: 1, scope: !9946, file: !849, line: 448, type: !105)
!9949 = !DILocalVariable(name: "dev", scope: !9946, file: !849, line: 450, type: !9934)
!9950 = !DILocalVariable(name: "data", scope: !9946, file: !849, line: 451, type: !9685)
!9951 = !DILocation(line: 0, scope: !9946)
!9952 = !DILocation(line: 453, column: 17, scope: !9946)
!9953 = !DILocation(line: 453, column: 20, scope: !9946)
!9954 = !DILocation(line: 454, column: 17, scope: !9946)
!9955 = !DILocation(line: 454, column: 22, scope: !9946)
!9956 = !DILocation(line: 455, column: 1, scope: !9946)
!9957 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1029, file: !1029, line: 183, type: !1067, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !9958)
!9958 = !{!9959, !9960, !9961, !9962, !9963}
!9959 = !DILocalVariable(name: "dev", arg: 1, scope: !9957, file: !1029, line: 183, type: !1058)
!9960 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9957, file: !1029, line: 184, type: !1069)
!9961 = !DILocalVariable(name: "pclken", scope: !9957, file: !1029, line: 186, type: !1019)
!9962 = !DILocalVariable(name: "reg", scope: !9957, file: !1029, line: 187, type: !1612)
!9963 = !DILocalVariable(name: "reg_val", scope: !9957, file: !1029, line: 188, type: !113)
!9964 = !DILocation(line: 0, scope: !9957)
!9965 = !DILocation(line: 192, column: 6, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9957, file: !1029, line: 192, column: 6)
!9967 = !DILocation(line: 192, column: 6, scope: !9957)
!9968 = !DILocation(line: 197, column: 52, scope: !9957)
!9969 = !DILocation(line: 197, column: 8, scope: !9957)
!9970 = !DILocation(line: 198, column: 12, scope: !9957)
!9971 = !DILocation(line: 199, column: 21, scope: !9957)
!9972 = !DILocation(line: 199, column: 10, scope: !9957)
!9973 = !DILocation(line: 200, column: 7, scope: !9957)
!9974 = !DILocation(line: 202, column: 2, scope: !9957)
!9975 = !DILocation(line: 203, column: 1, scope: !9957)
!9976 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1029, file: !1029, line: 205, type: !1067, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9982}
!9978 = !DILocalVariable(name: "dev", arg: 1, scope: !9976, file: !1029, line: 205, type: !1058)
!9979 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9976, file: !1029, line: 206, type: !1069)
!9980 = !DILocalVariable(name: "pclken", scope: !9976, file: !1029, line: 208, type: !1019)
!9981 = !DILocalVariable(name: "reg", scope: !9976, file: !1029, line: 209, type: !1612)
!9982 = !DILocalVariable(name: "reg_val", scope: !9976, file: !1029, line: 210, type: !113)
!9983 = !DILocation(line: 0, scope: !9976)
!9984 = !DILocation(line: 214, column: 6, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9976, file: !1029, line: 214, column: 6)
!9986 = !DILocation(line: 214, column: 6, scope: !9976)
!9987 = !DILocation(line: 219, column: 52, scope: !9976)
!9988 = !DILocation(line: 219, column: 8, scope: !9976)
!9989 = !DILocation(line: 220, column: 12, scope: !9976)
!9990 = !DILocation(line: 221, column: 22, scope: !9976)
!9991 = !DILocation(line: 221, column: 13, scope: !9976)
!9992 = !DILocation(line: 221, column: 10, scope: !9976)
!9993 = !DILocation(line: 222, column: 7, scope: !9976)
!9994 = !DILocation(line: 224, column: 2, scope: !9976)
!9995 = !DILocation(line: 225, column: 1, scope: !9976)
!9996 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1029, file: !1029, line: 262, type: !1083, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !9997)
!9997 = !{!9998, !9999, !10000, !10001, !10002, !10003, !10004, !10005}
!9998 = !DILocalVariable(name: "clock", arg: 1, scope: !9996, file: !1029, line: 262, type: !1058)
!9999 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9996, file: !1029, line: 263, type: !1069)
!10000 = !DILocalVariable(name: "rate", arg: 3, scope: !9996, file: !1029, line: 264, type: !1025)
!10001 = !DILocalVariable(name: "pclken", scope: !9996, file: !1029, line: 266, type: !1019)
!10002 = !DILocalVariable(name: "ahb_clock", scope: !9996, file: !1029, line: 273, type: !113)
!10003 = !DILocalVariable(name: "apb1_clock", scope: !9996, file: !1029, line: 274, type: !113)
!10004 = !DILocalVariable(name: "apb2_clock", scope: !9996, file: !1029, line: 276, type: !113)
!10005 = !DILocalVariable(name: "ahb3_clock", scope: !9996, file: !1029, line: 286, type: !113)
!10006 = !DILocation(line: 0, scope: !9996)
!10007 = !DILocation(line: 273, column: 23, scope: !9996)
!10008 = !DILocation(line: 274, column: 24, scope: !9996)
!10009 = !DILocation(line: 299, column: 18, scope: !9996)
!10010 = !DILocation(line: 299, column: 2, scope: !9996)
!10011 = !DILocation(line: 319, column: 3, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9996, file: !1029, line: 299, column: 23)
!10013 = !DILocation(line: 323, column: 3, scope: !10012)
!10014 = !DILocation(line: 346, column: 33, scope: !10012)
!10015 = !DILocation(line: 346, column: 11, scope: !10012)
!10016 = !DILocation(line: 350, column: 3, scope: !10012)
!10017 = !DILocation(line: 354, column: 33, scope: !10012)
!10018 = !DILocation(line: 354, column: 11, scope: !10012)
!10019 = !DILocation(line: 358, column: 3, scope: !10012)
!10020 = !DILocation(line: 374, column: 3, scope: !10012)
!10021 = !DILocation(line: 379, column: 3, scope: !10012)
!10022 = !DILocation(line: 0, scope: !10012)
!10023 = !DILocation(line: 396, column: 1, scope: !9996)
!10024 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1029, file: !1029, line: 227, type: !1099, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10025)
!10025 = !{!10026, !10027, !10028, !10029, !10030, !10031, !10032, !10033}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1029, line: 227, type: !1058)
!10027 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10024, file: !1029, line: 228, type: !1069)
!10028 = !DILocalVariable(name: "data", arg: 3, scope: !10024, file: !1029, line: 229, type: !104)
!10029 = !DILocalVariable(name: "pclken", scope: !10024, file: !1029, line: 233, type: !1019)
!10030 = !DILocalVariable(name: "reg", scope: !10024, file: !1029, line: 234, type: !1612)
!10031 = !DILocalVariable(name: "reg_val", scope: !10024, file: !1029, line: 235, type: !113)
!10032 = !DILocalVariable(name: "dt_val", scope: !10024, file: !1029, line: 235, type: !113)
!10033 = !DILocalVariable(name: "err", scope: !10024, file: !1029, line: 236, type: !105)
!10034 = !DILocation(line: 0, scope: !10024)
!10035 = !DILocation(line: 241, column: 30, scope: !10024)
!10036 = !DILocation(line: 241, column: 8, scope: !10024)
!10037 = !DILocation(line: 242, column: 10, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10024, file: !1029, line: 242, column: 6)
!10039 = !DILocation(line: 242, column: 6, scope: !10024)
!10040 = !DILocation(line: 247, column: 11, scope: !10024)
!10041 = !DILocation(line: 248, column: 6, scope: !10024)
!10042 = !DILocation(line: 247, column: 44, scope: !10024)
!10043 = !DILocation(line: 250, column: 6, scope: !10024)
!10044 = !DILocation(line: 249, column: 52, scope: !10024)
!10045 = !DILocation(line: 249, column: 8, scope: !10024)
!10046 = !DILocation(line: 251, column: 12, scope: !10024)
!10047 = !DILocation(line: 252, column: 10, scope: !10024)
!10048 = !DILocation(line: 253, column: 7, scope: !10024)
!10049 = !DILocation(line: 255, column: 2, scope: !10024)
!10050 = !DILocation(line: 260, column: 1, scope: !10024)
!10051 = distinct !DISubprogram(name: "enabled_clock", scope: !1029, file: !1029, line: 100, type: !10052, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10054)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{!105, !113}
!10054 = !{!10055, !10056}
!10055 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10051, file: !1029, line: 100, type: !113)
!10056 = !DILocalVariable(name: "r", scope: !10051, file: !1029, line: 102, type: !105)
!10057 = !DILocation(line: 0, scope: !10051)
!10058 = !DILocation(line: 104, column: 2, scope: !10051)
!10059 = !DILocation(line: 180, column: 2, scope: !10051)
!10060 = !DILocation(line: 181, column: 1, scope: !10051)
!10061 = distinct !DISubprogram(name: "get_bus_clock", scope: !1029, file: !1029, line: 79, type: !10062, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10064)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!113, !113, !113}
!10064 = !{!10065, !10066}
!10065 = !DILocalVariable(name: "clock", arg: 1, scope: !10061, file: !1029, line: 79, type: !113)
!10066 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10061, file: !1029, line: 79, type: !113)
!10067 = !DILocation(line: 0, scope: !10061)
!10068 = !DILocation(line: 81, column: 15, scope: !10061)
!10069 = !DILocation(line: 81, column: 2, scope: !10061)
!10070 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1029, file: !1029, line: 68, type: !10071, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!113, !113, !105, !105, !105}
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10070, file: !1029, line: 68, type: !113)
!10075 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10070, file: !1029, line: 69, type: !105)
!10076 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10070, file: !1029, line: 70, type: !105)
!10077 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10070, file: !1029, line: 71, type: !105)
!10078 = !DILocation(line: 0, scope: !10070)
!10079 = !DILocation(line: 75, column: 22, scope: !10070)
!10080 = !DILocation(line: 76, column: 13, scope: !10070)
!10081 = !DILocation(line: 75, column: 34, scope: !10070)
!10082 = !DILocation(line: 75, column: 2, scope: !10070)
!10083 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1029, file: !1029, line: 641, type: !1056, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10084)
!10084 = !{!10085, !10086, !10087}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10083, file: !1029, line: 641, type: !1058)
!10086 = !DILocalVariable(name: "old_flash_freq", scope: !10083, file: !1029, line: 664, type: !113)
!10087 = !DILocalVariable(name: "new_flash_freq", scope: !10083, file: !1029, line: 665, type: !113)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 646, column: 2, scope: !10083)
!10090 = !DILocation(line: 667, column: 19, scope: !10083)
!10091 = !DILocation(line: 674, column: 21, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10083, file: !1029, line: 674, column: 6)
!10093 = !DILocation(line: 674, column: 6, scope: !10083)
!10094 = !DILocation(line: 675, column: 3, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10092, file: !1029, line: 674, column: 59)
!10096 = !DILocation(line: 676, column: 2, scope: !10095)
!10097 = !DILocation(line: 680, column: 2, scope: !10083)
!10098 = !DILocation(line: 683, column: 2, scope: !10083)
!10099 = !DILocation(line: 690, column: 3, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10101, file: !1029, line: 689, column: 9)
!10101 = distinct !DILexicalBlock(scope: !10083, file: !1029, line: 685, column: 6)
!10102 = !DILocation(line: 695, column: 2, scope: !10083)
!10103 = !DILocation(line: 696, column: 2, scope: !10083)
!10104 = !DILocation(line: 696, column: 9, scope: !10083)
!10105 = !DILocation(line: 696, column: 34, scope: !10083)
!10106 = distinct !{!10106, !10103, !10107}
!10107 = !DILocation(line: 697, column: 2, scope: !10083)
!10108 = !DILocation(line: 720, column: 21, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10083, file: !1029, line: 720, column: 6)
!10110 = !DILocation(line: 720, column: 6, scope: !10083)
!10111 = !DILocation(line: 721, column: 3, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !1029, line: 720, column: 60)
!10113 = !DILocation(line: 722, column: 2, scope: !10112)
!10114 = !DILocation(line: 725, column: 18, scope: !10083)
!10115 = !DILocation(line: 728, column: 2, scope: !10083)
!10116 = !DILocation(line: 730, column: 2, scope: !10083)
!10117 = !DILocation(line: 745, column: 2, scope: !10083)
!10118 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10119, file: !10119, line: 3275, type: !395, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10119 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10120 = !DILocation(line: 3277, column: 21, scope: !10118)
!10121 = !DILocation(line: 3277, column: 3, scope: !10118)
!10122 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1029, file: !1029, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10123 = !DILocation(line: 516, column: 4, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !1029, line: 515, column: 10)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !1029, line: 513, column: 7)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !1029, line: 510, column: 37)
!10127 = distinct !DILexicalBlock(scope: !10122, file: !1029, line: 510, column: 6)
!10128 = !DILocation(line: 526, column: 3, scope: !10126)
!10129 = !DILocation(line: 527, column: 3, scope: !10126)
!10130 = !DILocation(line: 527, column: 10, scope: !10126)
!10131 = !DILocation(line: 527, column: 31, scope: !10126)
!10132 = distinct !{!10132, !10129, !10133}
!10133 = !DILocation(line: 529, column: 3, scope: !10126)
!10134 = !DILocation(line: 583, column: 3, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !1029, line: 577, column: 37)
!10136 = distinct !DILexicalBlock(scope: !10122, file: !1029, line: 577, column: 6)
!10137 = !DILocation(line: 584, column: 3, scope: !10135)
!10138 = !DILocation(line: 584, column: 10, scope: !10135)
!10139 = !DILocation(line: 584, column: 31, scope: !10135)
!10140 = distinct !{!10140, !10137, !10141}
!10141 = !DILocation(line: 585, column: 3, scope: !10135)
!10142 = !DILocation(line: 627, column: 1, scope: !10122)
!10143 = distinct !DISubprogram(name: "set_up_plls", scope: !1029, file: !1029, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10144 = !DILocation(line: 460, column: 6, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10143, file: !1029, line: 460, column: 6)
!10146 = !DILocation(line: 460, column: 31, scope: !10145)
!10147 = !DILocation(line: 460, column: 6, scope: !10143)
!10148 = !DILocation(line: 461, column: 3, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !1029, line: 460, column: 67)
!10150 = !DILocation(line: 462, column: 3, scope: !10149)
!10151 = !DILocation(line: 463, column: 2, scope: !10149)
!10152 = !DILocation(line: 464, column: 2, scope: !10143)
!10153 = !DILocation(line: 488, column: 2, scope: !10143)
!10154 = !DILocation(line: 492, column: 2, scope: !10143)
!10155 = !DILocation(line: 496, column: 2, scope: !10143)
!10156 = !DILocation(line: 499, column: 2, scope: !10143)
!10157 = !DILocation(line: 500, column: 2, scope: !10143)
!10158 = !DILocation(line: 500, column: 9, scope: !10143)
!10159 = !DILocation(line: 500, column: 30, scope: !10143)
!10160 = distinct !{!10160, !10157, !10161}
!10161 = !DILocation(line: 502, column: 2, scope: !10143)
!10162 = !DILocation(line: 505, column: 1, scope: !10143)
!10163 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10119, file: !10119, line: 3224, type: !7881, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10164)
!10164 = !{!10165}
!10165 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10163, file: !10119, line: 3224, type: !113)
!10166 = !DILocation(line: 0, scope: !10163)
!10167 = !DILocation(line: 3226, column: 3, scope: !10163)
!10168 = !DILocation(line: 3227, column: 1, scope: !10163)
!10169 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10119, file: !10119, line: 3188, type: !7881, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10170)
!10170 = !{!10171}
!10171 = !DILocalVariable(name: "Source", arg: 1, scope: !10169, file: !10119, line: 3188, type: !113)
!10172 = !DILocation(line: 0, scope: !10169)
!10173 = !DILocation(line: 3190, column: 3, scope: !10169)
!10174 = !DILocation(line: 3191, column: 1, scope: !10169)
!10175 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10119, file: !10119, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10176 = !DILocation(line: 3206, column: 21, scope: !10175)
!10177 = !DILocation(line: 3206, column: 3, scope: !10175)
!10178 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10119, file: !10119, line: 3240, type: !7881, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10179)
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10178, file: !10119, line: 3240, type: !113)
!10181 = !DILocation(line: 0, scope: !10178)
!10182 = !DILocation(line: 3242, column: 3, scope: !10178)
!10183 = !DILocation(line: 3243, column: 1, scope: !10178)
!10184 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10119, file: !10119, line: 3256, type: !7881, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !10185)
!10185 = !{!10186}
!10186 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10184, file: !10119, line: 3256, type: !113)
!10187 = !DILocation(line: 0, scope: !10184)
!10188 = !DILocation(line: 3258, column: 3, scope: !10184)
!10189 = !DILocation(line: 3259, column: 1, scope: !10184)
!10190 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1029, file: !1029, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10191 = !DILocation(line: 412, column: 6, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10190, file: !1029, line: 412, column: 6)
!10193 = !DILocation(line: 412, column: 27, scope: !10192)
!10194 = !DILocation(line: 412, column: 6, scope: !10190)
!10195 = !DILocation(line: 414, column: 3, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10192, file: !1029, line: 412, column: 33)
!10197 = !DILocation(line: 415, column: 3, scope: !10196)
!10198 = !DILocation(line: 415, column: 10, scope: !10196)
!10199 = !DILocation(line: 415, column: 31, scope: !10196)
!10200 = distinct !{!10200, !10197, !10201}
!10201 = !DILocation(line: 417, column: 3, scope: !10196)
!10202 = !DILocation(line: 421, column: 2, scope: !10190)
!10203 = !DILocation(line: 422, column: 2, scope: !10190)
!10204 = !DILocation(line: 422, column: 9, scope: !10190)
!10205 = !DILocation(line: 422, column: 34, scope: !10190)
!10206 = distinct !{!10206, !10203, !10207}
!10207 = !DILocation(line: 423, column: 2, scope: !10190)
!10208 = !DILocation(line: 424, column: 1, scope: !10190)
!10209 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10119, file: !10119, line: 4195, type: !266, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10210 = !DILocation(line: 4197, column: 3, scope: !10209)
!10211 = !DILocation(line: 4198, column: 1, scope: !10209)
!10212 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10119, file: !10119, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10213 = !DILocation(line: 4186, column: 3, scope: !10212)
!10214 = !DILocation(line: 4187, column: 1, scope: !10212)
!10215 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10119, file: !10119, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10216 = !DILocation(line: 4207, column: 11, scope: !10215)
!10217 = !DILocation(line: 4207, column: 44, scope: !10215)
!10218 = !DILocation(line: 4207, column: 3, scope: !10215)
!10219 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10119, file: !10119, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10220 = !DILocation(line: 3009, column: 11, scope: !10219)
!10221 = !DILocation(line: 3009, column: 44, scope: !10219)
!10222 = !DILocation(line: 3009, column: 3, scope: !10219)
!10223 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10119, file: !10119, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10224 = !DILocation(line: 2989, column: 3, scope: !10223)
!10225 = !DILocation(line: 2990, column: 1, scope: !10223)
!10226 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10119, file: !10119, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10227 = !DILocation(line: 2941, column: 3, scope: !10226)
!10228 = !DILocation(line: 2942, column: 1, scope: !10226)
!10229 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10119, file: !10119, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10230 = !DILocation(line: 2951, column: 3, scope: !10229)
!10231 = !DILocation(line: 2952, column: 1, scope: !10229)
!10232 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10119, file: !10119, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10233 = !DILocation(line: 2971, column: 11, scope: !10232)
!10234 = !DILocation(line: 2971, column: 44, scope: !10232)
!10235 = !DILocation(line: 2971, column: 3, scope: !10232)
!10236 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10119, file: !10119, line: 3143, type: !266, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10237 = !DILocation(line: 3145, column: 3, scope: !10236)
!10238 = !DILocation(line: 3146, column: 1, scope: !10236)
!10239 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10119, file: !10119, line: 3163, type: !395, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !967, retainedNodes: !397)
!10240 = !DILocation(line: 3165, column: 11, scope: !10239)
!10241 = !DILocation(line: 3165, column: 46, scope: !10239)
!10242 = !DILocation(line: 3165, column: 3, scope: !10239)
!10243 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10244, file: !10244, line: 40, type: !395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !397)
!10244 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10245 = !DILocation(line: 45, column: 3, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10247, file: !10244, line: 44, column: 44)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !10244, line: 44, column: 13)
!10248 = distinct !DILexicalBlock(scope: !10243, file: !10244, line: 42, column: 6)
!10249 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10244, file: !10244, line: 56, type: !266, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !397)
!10250 = !DILocation(line: 58, column: 2, scope: !10249)
!10251 = !DILocation(line: 62, column: 1, scope: !10249)
!10252 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10119, file: !10119, line: 4304, type: !10253, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !113, !113, !113, !113}
!10255 = !{!10256, !10257, !10258, !10259}
!10256 = !DILocalVariable(name: "Source", arg: 1, scope: !10252, file: !10119, line: 4304, type: !113)
!10257 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10252, file: !10119, line: 4304, type: !113)
!10258 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10252, file: !10119, line: 4304, type: !113)
!10259 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10252, file: !10119, line: 4304, type: !113)
!10260 = !DILocation(line: 0, scope: !10252)
!10261 = !DILocation(line: 4306, column: 3, scope: !10252)
!10262 = !DILocation(line: 4308, column: 3, scope: !10252)
!10263 = !DILocation(line: 4312, column: 1, scope: !10252)
!10264 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10244, file: !10244, line: 69, type: !266, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !397)
!10265 = !DILocation(line: 72, column: 2, scope: !10264)
!10266 = !DILocation(line: 73, column: 1, scope: !10264)
!10267 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10268, file: !10268, line: 1185, type: !7881, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2950, retainedNodes: !10269)
!10268 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10269 = !{!10270, !10271}
!10270 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10267, file: !10268, line: 1185, type: !113)
!10271 = !DILocalVariable(name: "tmpreg", scope: !10267, file: !10268, line: 1187, type: !461)
!10272 = !DILocation(line: 0, scope: !10267)
!10273 = !DILocation(line: 1187, column: 3, scope: !10267)
!10274 = !DILocation(line: 1187, column: 17, scope: !10267)
!10275 = !DILocation(line: 1188, column: 3, scope: !10267)
!10276 = !DILocation(line: 1190, column: 12, scope: !10267)
!10277 = !DILocation(line: 1190, column: 10, scope: !10267)
!10278 = !DILocation(line: 1191, column: 9, scope: !10267)
!10279 = !DILocation(line: 1192, column: 1, scope: !10267)
!10280 = distinct !DISubprogram(name: "uart_console_init", scope: !1160, file: !1160, line: 588, type: !1137, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10281)
!10281 = !{!10282}
!10282 = !DILocalVariable(name: "arg", arg: 1, scope: !10280, file: !1160, line: 588, type: !1115)
!10283 = !DILocation(line: 0, scope: !10280)
!10284 = !DILocation(line: 593, column: 7, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10280, file: !1160, line: 593, column: 6)
!10286 = !DILocation(line: 593, column: 6, scope: !10280)
!10287 = !DILocation(line: 597, column: 2, scope: !10280)
!10288 = !DILocation(line: 599, column: 2, scope: !10280)
!10289 = !DILocation(line: 600, column: 1, scope: !10280)
!10290 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !10292, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10294)
!10291 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!10292 = !DISubroutineType(types: !10293)
!10293 = !{!492, !1115}
!10294 = !{!10295}
!10295 = !DILocalVariable(name: "dev", arg: 1, scope: !10290, file: !10291, line: 47, type: !1115)
!10296 = !DILocation(line: 0, scope: !10290)
!10297 = !DILocation(line: 55, column: 2, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10290, file: !10291, line: 55, column: 2)
!10299 = !{i64 2154962856}
!10300 = !DILocation(line: 56, column: 9, scope: !10290)
!10301 = !DILocation(line: 56, column: 2, scope: !10290)
!10302 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1160, file: !1160, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !397)
!10303 = !DILocation(line: 576, column: 2, scope: !10302)
!10304 = !DILocation(line: 579, column: 2, scope: !10302)
!10305 = !DILocation(line: 581, column: 1, scope: !10302)
!10306 = distinct !DISubprogram(name: "console_out", scope: !1160, file: !1160, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10307)
!10307 = !{!10308}
!10308 = !DILocalVariable(name: "c", arg: 1, scope: !10306, file: !1160, line: 77, type: !105)
!10309 = !DILocation(line: 0, scope: !10306)
!10310 = !DILocation(line: 89, column: 11, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !1160, line: 89, column: 6)
!10312 = !DILocation(line: 89, column: 6, scope: !10306)
!10313 = !DILocation(line: 90, column: 3, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10311, file: !1160, line: 89, column: 17)
!10315 = !DILocation(line: 91, column: 2, scope: !10314)
!10316 = !DILocation(line: 92, column: 34, scope: !10306)
!10317 = !DILocation(line: 92, column: 2, scope: !10306)
!10318 = !DILocation(line: 94, column: 2, scope: !10306)
!10319 = distinct !DISubprogram(name: "uart_poll_out", scope: !10320, file: !10320, line: 95, type: !1133, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10321)
!10320 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!10321 = !{!10322, !10323}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10319, file: !10320, line: 95, type: !1115)
!10323 = !DILocalVariable(name: "out_char", arg: 2, scope: !10319, file: !10320, line: 95, type: !170)
!10324 = !DILocation(line: 0, scope: !10319)
!10325 = !DILocation(line: 105, column: 2, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10319, file: !10320, line: 105, column: 2)
!10327 = !{i64 2155046247}
!10328 = !DILocation(line: 106, column: 2, scope: !10319)
!10329 = !DILocation(line: 107, column: 1, scope: !10319)
!10330 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1109, file: !1109, line: 574, type: !1133, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10331)
!10331 = !{!10332, !10333, !10334}
!10332 = !DILocalVariable(name: "dev", arg: 1, scope: !10330, file: !1109, line: 574, type: !1115)
!10333 = !DILocalVariable(name: "out_char", arg: 2, scope: !10330, file: !1109, line: 575, type: !170)
!10334 = !DILocalVariable(name: "api", scope: !10330, file: !1109, line: 577, type: !1106)
!10335 = !DILocation(line: 0, scope: !10330)
!10336 = !DILocation(line: 578, column: 40, scope: !10330)
!10337 = !DILocation(line: 580, column: 7, scope: !10330)
!10338 = !DILocation(line: 580, column: 2, scope: !10330)
!10339 = !DILocation(line: 581, column: 1, scope: !10330)
!10340 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !10292, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10341)
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "dev", arg: 1, scope: !10340, file: !481, line: 730, type: !1115)
!10343 = !DILocation(line: 0, scope: !10340)
!10344 = !DILocation(line: 732, column: 9, scope: !10340)
!10345 = !DILocation(line: 732, column: 2, scope: !10340)
!10346 = distinct !DISubprogram(name: "uart_register_input", scope: !1160, file: !1160, line: 560, type: !10347, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1103, retainedNodes: !10394)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !10349, !10349, !10391}
!10349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10350, size: 32)
!10350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10351)
!10351 = !{!10352}
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10350, file: !122, line: 2209, baseType: !10353, size: 160)
!10353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10354)
!10354 = !{!10355, !10368, !10372}
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10353, file: !122, line: 1710, baseType: !10356, size: 64)
!10356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10357, line: 46, baseType: !10358)
!10357 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10357, line: 41, size: 64, elements: !10359)
!10359 = !{!10360, !10367}
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10358, file: !10357, line: 42, baseType: !10361, size: 32)
!10361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10362, size: 32)
!10362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10357, line: 39, baseType: !10363)
!10363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10357, line: 35, size: 32, elements: !10364)
!10364 = !{!10365}
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10363, file: !10357, line: 36, baseType: !10366, size: 32)
!10366 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10357, line: 32, baseType: !113)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10358, file: !10357, line: 43, baseType: !10361, size: 32, offset: 32)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10353, file: !122, line: 1711, baseType: !10369, size: 32, offset: 64)
!10369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10370)
!10370 = !{!10371}
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10369, file: !236, line: 52, baseType: !22, size: 32)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10353, file: !122, line: 1712, baseType: !10373, size: 64, offset: 96)
!10373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10374)
!10374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10375)
!10375 = !{!10376}
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10374, file: !163, line: 232, baseType: !10377, size: 64)
!10377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10378)
!10378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10379)
!10379 = !{!10380, !10386}
!10380 = !DIDerivedType(tag: DW_TAG_member, scope: !10378, file: !137, line: 38, baseType: !10381, size: 32)
!10381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10378, file: !137, line: 38, size: 32, elements: !10382)
!10382 = !{!10383, !10385}
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10381, file: !137, line: 39, baseType: !10384, size: 32)
!10384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10378, size: 32)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10381, file: !137, line: 40, baseType: !10384, size: 32)
!10386 = !DIDerivedType(tag: DW_TAG_member, scope: !10378, file: !137, line: 42, baseType: !10387, size: 32, offset: 32)
!10387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10378, file: !137, line: 42, size: 32, elements: !10388)
!10388 = !{!10389, !10390}
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10387, file: !137, line: 43, baseType: !10384, size: 32)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10387, file: !137, line: 44, baseType: !10384, size: 32)
!10391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10392, size: 32)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!169, !102, !169}
!10394 = !{!10395, !10396, !10397}
!10395 = !DILocalVariable(name: "avail", arg: 1, scope: !10346, file: !1160, line: 560, type: !10349)
!10396 = !DILocalVariable(name: "lines", arg: 2, scope: !10346, file: !1160, line: 560, type: !10349)
!10397 = !DILocalVariable(name: "completion", arg: 3, scope: !10346, file: !1160, line: 561, type: !10391)
!10398 = !DILocation(line: 0, scope: !10346)
!10399 = !DILocation(line: 566, column: 1, scope: !10346)
!10400 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1340, file: !1340, line: 523, type: !1196, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10401)
!10401 = !{!10402, !10403, !10404, !10405, !10406}
!10402 = !DILocalVariable(name: "dev", arg: 1, scope: !10400, file: !1340, line: 523, type: !1198)
!10403 = !DILocalVariable(name: "pin", arg: 2, scope: !10400, file: !1340, line: 524, type: !1213)
!10404 = !DILocalVariable(name: "flags", arg: 3, scope: !10400, file: !1340, line: 524, type: !1214)
!10405 = !DILocalVariable(name: "err", scope: !10400, file: !1340, line: 526, type: !105)
!10406 = !DILocalVariable(name: "pincfg", scope: !10400, file: !1340, line: 527, type: !105)
!10407 = !DILocation(line: 0, scope: !10400)
!10408 = !DILocation(line: 527, column: 2, scope: !10400)
!10409 = !DILocation(line: 532, column: 8, scope: !10400)
!10410 = !DILocation(line: 533, column: 10, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10400, file: !1340, line: 533, column: 6)
!10412 = !DILocation(line: 533, column: 6, scope: !10400)
!10413 = !DILocation(line: 543, column: 13, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10400, file: !1340, line: 543, column: 6)
!10415 = !DILocation(line: 543, column: 28, scope: !10414)
!10416 = !DILocation(line: 543, column: 6, scope: !10400)
!10417 = !DILocation(line: 544, column: 14, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !1340, line: 544, column: 7)
!10419 = distinct !DILexicalBlock(scope: !10414, file: !1340, line: 543, column: 34)
!10420 = !DILocation(line: 544, column: 39, scope: !10418)
!10421 = !DILocation(line: 544, column: 7, scope: !10419)
!10422 = !DILocation(line: 545, column: 38, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10418, file: !1340, line: 544, column: 45)
!10424 = !DILocation(line: 545, column: 4, scope: !10423)
!10425 = !DILocation(line: 546, column: 3, scope: !10423)
!10426 = !DILocation(line: 546, column: 21, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10418, file: !1340, line: 546, column: 14)
!10428 = !DILocation(line: 546, column: 45, scope: !10427)
!10429 = !DILocation(line: 546, column: 14, scope: !10418)
!10430 = !DILocation(line: 547, column: 40, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !1340, line: 546, column: 51)
!10432 = !DILocation(line: 547, column: 4, scope: !10431)
!10433 = !DILocation(line: 548, column: 3, scope: !10431)
!10434 = !DILocation(line: 551, column: 32, scope: !10400)
!10435 = !DILocation(line: 551, column: 37, scope: !10400)
!10436 = !DILocation(line: 551, column: 2, scope: !10400)
!10437 = !DILocation(line: 554, column: 6, scope: !10400)
!10438 = !DILocation(line: 562, column: 1, scope: !10400)
!10439 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1340, file: !1340, line: 410, type: !10440, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10442)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{!105, !1198, !1025}
!10442 = !{!10443, !10444, !10445, !10447}
!10443 = !DILocalVariable(name: "dev", arg: 1, scope: !10439, file: !1340, line: 410, type: !1198)
!10444 = !DILocalVariable(name: "value", arg: 2, scope: !10439, file: !1340, line: 410, type: !1025)
!10445 = !DILocalVariable(name: "cfg", scope: !10439, file: !1340, line: 412, type: !10446)
!10446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!10447 = !DILocalVariable(name: "gpio", scope: !10439, file: !1340, line: 413, type: !1271)
!10448 = !DILocation(line: 0, scope: !10439)
!10449 = !DILocation(line: 412, column: 45, scope: !10439)
!10450 = !DILocation(line: 413, column: 44, scope: !10439)
!10451 = !DILocation(line: 415, column: 11, scope: !10439)
!10452 = !DILocation(line: 415, column: 9, scope: !10439)
!10453 = !DILocation(line: 417, column: 2, scope: !10439)
!10454 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1340, file: !1340, line: 420, type: !1223, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10455)
!10455 = !{!10456, !10457, !10458, !10459, !10460, !10461}
!10456 = !DILocalVariable(name: "dev", arg: 1, scope: !10454, file: !1340, line: 420, type: !1198)
!10457 = !DILocalVariable(name: "mask", arg: 2, scope: !10454, file: !1340, line: 421, type: !1225)
!10458 = !DILocalVariable(name: "value", arg: 3, scope: !10454, file: !1340, line: 422, type: !1220)
!10459 = !DILocalVariable(name: "cfg", scope: !10454, file: !1340, line: 424, type: !10446)
!10460 = !DILocalVariable(name: "gpio", scope: !10454, file: !1340, line: 425, type: !1271)
!10461 = !DILocalVariable(name: "port_value", scope: !10454, file: !1340, line: 426, type: !113)
!10462 = !DILocation(line: 0, scope: !10454)
!10463 = !DILocation(line: 424, column: 45, scope: !10454)
!10464 = !DILocation(line: 425, column: 44, scope: !10454)
!10465 = !DILocation(line: 430, column: 15, scope: !10454)
!10466 = !DILocation(line: 431, column: 46, scope: !10454)
!10467 = !DILocation(line: 431, column: 44, scope: !10454)
!10468 = !DILocation(line: 431, column: 61, scope: !10454)
!10469 = !DILocation(line: 431, column: 53, scope: !10454)
!10470 = !DILocation(line: 431, column: 2, scope: !10454)
!10471 = !DILocation(line: 435, column: 2, scope: !10454)
!10472 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1340, file: !1340, line: 438, type: !1228, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1340, line: 438, type: !1198)
!10475 = !DILocalVariable(name: "pins", arg: 2, scope: !10472, file: !1340, line: 439, type: !1225)
!10476 = !DILocalVariable(name: "cfg", scope: !10472, file: !1340, line: 441, type: !10446)
!10477 = !DILocalVariable(name: "gpio", scope: !10472, file: !1340, line: 442, type: !1271)
!10478 = !DILocation(line: 0, scope: !10472)
!10479 = !DILocation(line: 441, column: 45, scope: !10472)
!10480 = !DILocation(line: 442, column: 44, scope: !10472)
!10481 = !DILocation(line: 448, column: 2, scope: !10472)
!10482 = !DILocation(line: 450, column: 2, scope: !10472)
!10483 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1340, file: !1340, line: 453, type: !1228, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10484)
!10484 = !{!10485, !10486, !10487, !10488}
!10485 = !DILocalVariable(name: "dev", arg: 1, scope: !10483, file: !1340, line: 453, type: !1198)
!10486 = !DILocalVariable(name: "pins", arg: 2, scope: !10483, file: !1340, line: 454, type: !1225)
!10487 = !DILocalVariable(name: "cfg", scope: !10483, file: !1340, line: 456, type: !10446)
!10488 = !DILocalVariable(name: "gpio", scope: !10483, file: !1340, line: 457, type: !1271)
!10489 = !DILocation(line: 0, scope: !10483)
!10490 = !DILocation(line: 456, column: 45, scope: !10483)
!10491 = !DILocation(line: 457, column: 44, scope: !10483)
!10492 = !DILocation(line: 467, column: 2, scope: !10483)
!10493 = !DILocation(line: 470, column: 2, scope: !10483)
!10494 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1340, file: !1340, line: 473, type: !1228, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10495)
!10495 = !{!10496, !10497, !10498, !10499}
!10496 = !DILocalVariable(name: "dev", arg: 1, scope: !10494, file: !1340, line: 473, type: !1198)
!10497 = !DILocalVariable(name: "pins", arg: 2, scope: !10494, file: !1340, line: 474, type: !1225)
!10498 = !DILocalVariable(name: "cfg", scope: !10494, file: !1340, line: 476, type: !10446)
!10499 = !DILocalVariable(name: "gpio", scope: !10494, file: !1340, line: 477, type: !1271)
!10500 = !DILocation(line: 0, scope: !10494)
!10501 = !DILocation(line: 476, column: 45, scope: !10494)
!10502 = !DILocation(line: 477, column: 44, scope: !10494)
!10503 = !DILocation(line: 484, column: 2, scope: !10494)
!10504 = !DILocation(line: 487, column: 2, scope: !10494)
!10505 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1340, file: !1340, line: 594, type: !1234, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511, !10512, !10514, !10515, !10516}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !1340, line: 594, type: !1198)
!10508 = !DILocalVariable(name: "pin", arg: 2, scope: !10505, file: !1340, line: 595, type: !1213)
!10509 = !DILocalVariable(name: "mode", arg: 3, scope: !10505, file: !1340, line: 596, type: !1172)
!10510 = !DILocalVariable(name: "trig", arg: 4, scope: !10505, file: !1340, line: 597, type: !1178)
!10511 = !DILocalVariable(name: "cfg", scope: !10505, file: !1340, line: 599, type: !10446)
!10512 = !DILocalVariable(name: "data", scope: !10505, file: !1340, line: 600, type: !10513)
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!10514 = !DILocalVariable(name: "edge", scope: !10505, file: !1340, line: 601, type: !105)
!10515 = !DILocalVariable(name: "err", scope: !10505, file: !1340, line: 602, type: !105)
!10516 = !DILabel(scope: !10505, name: "exit", file: !1340, line: 643)
!10517 = !DILocation(line: 0, scope: !10505)
!10518 = !DILocation(line: 599, column: 45, scope: !10505)
!10519 = !DILocation(line: 604, column: 6, scope: !10505)
!10520 = !DILocation(line: 605, column: 34, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10522, file: !1340, line: 605, column: 7)
!10522 = distinct !DILexicalBlock(scope: !10523, file: !1340, line: 604, column: 38)
!10523 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 604, column: 6)
!10524 = !DILocation(line: 605, column: 7, scope: !10521)
!10525 = !DILocation(line: 605, column: 47, scope: !10521)
!10526 = !DILocation(line: 605, column: 39, scope: !10521)
!10527 = !DILocation(line: 605, column: 7, scope: !10522)
!10528 = !DILocation(line: 606, column: 4, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10521, file: !1340, line: 605, column: 53)
!10530 = !DILocation(line: 607, column: 4, scope: !10529)
!10531 = !DILocation(line: 608, column: 4, scope: !10529)
!10532 = !DILocation(line: 609, column: 3, scope: !10529)
!10533 = !DILocation(line: 600, column: 38, scope: !10505)
!10534 = !DILocation(line: 620, column: 30, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 620, column: 6)
!10536 = !DILocation(line: 620, column: 6, scope: !10535)
!10537 = !DILocation(line: 620, column: 57, scope: !10535)
!10538 = !DILocation(line: 620, column: 6, scope: !10505)
!10539 = !DILocation(line: 625, column: 29, scope: !10505)
!10540 = !DILocation(line: 625, column: 2, scope: !10505)
!10541 = !DILocation(line: 627, column: 2, scope: !10505)
!10542 = !DILocation(line: 630, column: 3, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10505, file: !1340, line: 627, column: 16)
!10544 = !DILocation(line: 633, column: 3, scope: !10543)
!10545 = !DILocation(line: 636, column: 3, scope: !10543)
!10546 = !DILocation(line: 639, column: 2, scope: !10505)
!10547 = !DILocation(line: 641, column: 2, scope: !10505)
!10548 = !DILocation(line: 643, column: 1, scope: !10505)
!10549 = !DILocation(line: 644, column: 2, scope: !10505)
!10550 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1340, file: !1340, line: 647, type: !1238, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10551)
!10551 = !{!10552, !10553, !10554, !10555}
!10552 = !DILocalVariable(name: "dev", arg: 1, scope: !10550, file: !1340, line: 647, type: !1198)
!10553 = !DILocalVariable(name: "callback", arg: 2, scope: !10550, file: !1340, line: 648, type: !1240)
!10554 = !DILocalVariable(name: "set", arg: 3, scope: !10550, file: !1340, line: 649, type: !492)
!10555 = !DILocalVariable(name: "data", scope: !10550, file: !1340, line: 651, type: !10513)
!10556 = !DILocation(line: 0, scope: !10550)
!10557 = !DILocation(line: 651, column: 38, scope: !10550)
!10558 = !DILocation(line: 653, column: 37, scope: !10550)
!10559 = !DILocation(line: 653, column: 9, scope: !10550)
!10560 = !DILocation(line: 653, column: 2, scope: !10550)
!10561 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10562, file: !10562, line: 38, type: !10563, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10566)
!10562 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10563 = !DISubroutineType(types: !10564)
!10564 = !{!105, !10565, !1240, !492}
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!10566 = !{!10567, !10568, !10569}
!10567 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10561, file: !10562, line: 38, type: !10565)
!10568 = !DILocalVariable(name: "callback", arg: 2, scope: !10561, file: !10562, line: 39, type: !1240)
!10569 = !DILocalVariable(name: "set", arg: 3, scope: !10561, file: !10562, line: 40, type: !492)
!10570 = !DILocation(line: 0, scope: !10561)
!10571 = !DILocation(line: 42, column: 2, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !10562, line: 42, column: 2)
!10573 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 42, column: 2)
!10574 = !DILocation(line: 42, column: 2, scope: !10573)
!10575 = !DILocation(line: 42, column: 2, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !10562, line: 42, column: 2)
!10577 = !DILocation(line: 43, column: 2, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !10562, line: 43, column: 2)
!10579 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 43, column: 2)
!10580 = !DILocation(line: 43, column: 2, scope: !10579)
!10581 = !DILocation(line: 43, column: 2, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10578, file: !10562, line: 43, column: 2)
!10583 = !DILocation(line: 45, column: 7, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 45, column: 6)
!10585 = !DILocation(line: 45, column: 6, scope: !10561)
!10586 = !DILocation(line: 46, column: 56, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !10562, line: 46, column: 7)
!10588 = distinct !DILexicalBlock(scope: !10584, file: !10562, line: 45, column: 38)
!10589 = !DILocation(line: 46, column: 8, scope: !10587)
!10590 = !DILocation(line: 46, column: 7, scope: !10588)
!10591 = !DILocation(line: 51, column: 13, scope: !10584)
!10592 = !DILocation(line: 56, column: 43, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !10562, line: 55, column: 11)
!10594 = distinct !DILexicalBlock(scope: !10561, file: !10562, line: 55, column: 6)
!10595 = !DILocation(line: 56, column: 3, scope: !10593)
!10596 = !DILocation(line: 57, column: 2, scope: !10593)
!10597 = !DILocation(line: 60, column: 1, scope: !10561)
!10598 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1245, file: !1245, line: 261, type: !10599, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{!492, !10565}
!10601 = !{!10602}
!10602 = !DILocalVariable(name: "list", arg: 1, scope: !10598, file: !1245, line: 261, type: !10565)
!10603 = !DILocation(line: 0, scope: !10598)
!10604 = !DILocation(line: 261, column: 1, scope: !10598)
!10605 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1245, file: !1245, line: 417, type: !10606, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{!492, !10565, !1416}
!10608 = !{!10609, !10610, !10611, !10612}
!10609 = !DILocalVariable(name: "list", arg: 1, scope: !10605, file: !1245, line: 417, type: !10565)
!10610 = !DILocalVariable(name: "node", arg: 2, scope: !10605, file: !1245, line: 417, type: !1416)
!10611 = !DILocalVariable(name: "prev", scope: !10605, file: !1245, line: 417, type: !1416)
!10612 = !DILocalVariable(name: "test", scope: !10605, file: !1245, line: 417, type: !1416)
!10613 = !DILocation(line: 0, scope: !10605)
!10614 = !DILocation(line: 417, column: 1, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10605, file: !1245, line: 417, column: 1)
!10616 = !DILocation(line: 417, column: 1, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10615, file: !1245, line: 417, column: 1)
!10618 = !DILocation(line: 417, column: 1, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !1245, line: 417, column: 1)
!10620 = distinct !DILexicalBlock(scope: !10617, file: !1245, line: 417, column: 1)
!10621 = !DILocation(line: 417, column: 1, scope: !10620)
!10622 = distinct !{!10622, !10614, !10614}
!10623 = !DILocation(line: 417, column: 1, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10619, file: !1245, line: 417, column: 1)
!10625 = !DILocation(line: 417, column: 1, scope: !10605)
!10626 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1245, file: !1245, line: 298, type: !10627, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10629)
!10627 = !DISubroutineType(types: !10628)
!10628 = !{null, !10565, !1416}
!10629 = !{!10630, !10631}
!10630 = !DILocalVariable(name: "list", arg: 1, scope: !10626, file: !1245, line: 298, type: !10565)
!10631 = !DILocalVariable(name: "node", arg: 2, scope: !10626, file: !1245, line: 298, type: !1416)
!10632 = !DILocation(line: 0, scope: !10626)
!10633 = !DILocation(line: 298, column: 1, scope: !10626)
!10634 = !DILocation(line: 298, column: 1, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10626, file: !1245, line: 298, column: 1)
!10636 = !DILocation(line: 298, column: 1, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10635, file: !1245, line: 298, column: 1)
!10638 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1245, file: !1245, line: 231, type: !10639, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10641)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!1416, !10565}
!10641 = !{!10642}
!10642 = !DILocalVariable(name: "list", arg: 1, scope: !10638, file: !1245, line: 231, type: !10565)
!10643 = !DILocation(line: 0, scope: !10638)
!10644 = !DILocation(line: 233, column: 15, scope: !10638)
!10645 = !DILocation(line: 233, column: 2, scope: !10638)
!10646 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1245, file: !1245, line: 209, type: !10647, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !1416, !1416}
!10649 = !{!10650, !10651}
!10650 = !DILocalVariable(name: "parent", arg: 1, scope: !10646, file: !1245, line: 209, type: !1416)
!10651 = !DILocalVariable(name: "child", arg: 2, scope: !10646, file: !1245, line: 209, type: !1416)
!10652 = !DILocation(line: 0, scope: !10646)
!10653 = !DILocation(line: 211, column: 10, scope: !10646)
!10654 = !DILocation(line: 211, column: 15, scope: !10646)
!10655 = !DILocation(line: 212, column: 1, scope: !10646)
!10656 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1245, file: !1245, line: 214, type: !10627, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10657)
!10657 = !{!10658, !10659}
!10658 = !DILocalVariable(name: "list", arg: 1, scope: !10656, file: !1245, line: 214, type: !10565)
!10659 = !DILocalVariable(name: "node", arg: 2, scope: !10656, file: !1245, line: 214, type: !1416)
!10660 = !DILocation(line: 0, scope: !10656)
!10661 = !DILocation(line: 216, column: 8, scope: !10656)
!10662 = !DILocation(line: 216, column: 13, scope: !10656)
!10663 = !DILocation(line: 217, column: 1, scope: !10656)
!10664 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1245, file: !1245, line: 243, type: !10639, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10665)
!10665 = !{!10666}
!10666 = !DILocalVariable(name: "list", arg: 1, scope: !10664, file: !1245, line: 243, type: !10565)
!10667 = !DILocation(line: 0, scope: !10664)
!10668 = !DILocation(line: 245, column: 15, scope: !10664)
!10669 = !DILocation(line: 245, column: 2, scope: !10664)
!10670 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1245, file: !1245, line: 219, type: !10627, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10671)
!10671 = !{!10672, !10673}
!10672 = !DILocalVariable(name: "list", arg: 1, scope: !10670, file: !1245, line: 219, type: !10565)
!10673 = !DILocalVariable(name: "node", arg: 2, scope: !10670, file: !1245, line: 219, type: !1416)
!10674 = !DILocation(line: 0, scope: !10670)
!10675 = !DILocation(line: 221, column: 8, scope: !10670)
!10676 = !DILocation(line: 221, column: 13, scope: !10670)
!10677 = !DILocation(line: 222, column: 1, scope: !10670)
!10678 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1245, file: !1245, line: 401, type: !10679, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{null, !10565, !1416, !1416}
!10681 = !{!10682, !10683, !10684}
!10682 = !DILocalVariable(name: "list", arg: 1, scope: !10678, file: !1245, line: 401, type: !10565)
!10683 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10678, file: !1245, line: 401, type: !1416)
!10684 = !DILocalVariable(name: "node", arg: 3, scope: !10678, file: !1245, line: 401, type: !1416)
!10685 = !DILocation(line: 0, scope: !10678)
!10686 = !DILocation(line: 401, column: 1, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10678, file: !1245, line: 401, column: 1)
!10688 = !DILocation(line: 0, scope: !10687)
!10689 = !DILocation(line: 401, column: 1, scope: !10678)
!10690 = !DILocation(line: 401, column: 1, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10687, file: !1245, line: 401, column: 1)
!10692 = !DILocation(line: 401, column: 1, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10691, file: !1245, line: 401, column: 1)
!10694 = !DILocation(line: 401, column: 1, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10693, file: !1245, line: 401, column: 1)
!10696 = !DILocation(line: 401, column: 1, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10687, file: !1245, line: 401, column: 1)
!10698 = !DILocation(line: 401, column: 1, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10697, file: !1245, line: 401, column: 1)
!10700 = !DILocation(line: 401, column: 1, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10699, file: !1245, line: 401, column: 1)
!10702 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1245, file: !1245, line: 285, type: !10703, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10705)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!1416, !1416}
!10705 = !{!10706}
!10706 = !DILocalVariable(name: "node", arg: 1, scope: !10702, file: !1245, line: 285, type: !1416)
!10707 = !DILocation(line: 0, scope: !10702)
!10708 = !DILocation(line: 285, column: 1, scope: !10702)
!10709 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1245, file: !1245, line: 274, type: !10703, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10710)
!10710 = !{!10711}
!10711 = !DILocalVariable(name: "node", arg: 1, scope: !10709, file: !1245, line: 274, type: !1416)
!10712 = !DILocation(line: 0, scope: !10709)
!10713 = !DILocation(line: 274, column: 1, scope: !10709)
!10714 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1245, file: !1245, line: 204, type: !10703, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10715)
!10715 = !{!10716}
!10716 = !DILocalVariable(name: "node", arg: 1, scope: !10714, file: !1245, line: 204, type: !1416)
!10717 = !DILocation(line: 0, scope: !10714)
!10718 = !DILocation(line: 206, column: 15, scope: !10714)
!10719 = !DILocation(line: 206, column: 2, scope: !10714)
!10720 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1340, file: !1340, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10721)
!10721 = !{!10722, !10723, !10724}
!10722 = !DILocalVariable(name: "pin", arg: 1, scope: !10720, file: !1340, line: 342, type: !105)
!10723 = !DILocalVariable(name: "line", scope: !10720, file: !1340, line: 344, type: !113)
!10724 = !DILocalVariable(name: "port", scope: !10720, file: !1340, line: 345, type: !105)
!10725 = !DILocation(line: 0, scope: !10720)
!10726 = !DILocation(line: 344, column: 18, scope: !10720)
!10727 = !{i32 983040, i32 0}
!10728 = !DILocation(line: 356, column: 9, scope: !10720)
!10729 = !DILocation(line: 370, column: 2, scope: !10720)
!10730 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1340, file: !1340, line: 37, type: !890, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10731)
!10731 = !{!10732, !10733, !10734}
!10732 = !DILocalVariable(name: "line", arg: 1, scope: !10730, file: !1340, line: 37, type: !105)
!10733 = !DILocalVariable(name: "arg", arg: 2, scope: !10730, file: !1340, line: 37, type: !104)
!10734 = !DILocalVariable(name: "data", scope: !10730, file: !1340, line: 39, type: !10513)
!10735 = !DILocation(line: 0, scope: !10730)
!10736 = !DILocation(line: 41, column: 29, scope: !10730)
!10737 = !DILocation(line: 41, column: 39, scope: !10730)
!10738 = !DILocation(line: 41, column: 44, scope: !10730)
!10739 = !DILocation(line: 41, column: 2, scope: !10730)
!10740 = !DILocation(line: 42, column: 1, scope: !10730)
!10741 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1340, file: !1340, line: 376, type: !10742, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10744)
!10742 = !DISubroutineType(types: !10743)
!10743 = !{!105, !105, !105}
!10744 = !{!10745, !10746, !10747, !10749, !10750}
!10745 = !DILocalVariable(name: "port", arg: 1, scope: !10741, file: !1340, line: 376, type: !105)
!10746 = !DILocalVariable(name: "pin", arg: 2, scope: !10741, file: !1340, line: 376, type: !105)
!10747 = !DILocalVariable(name: "clk", scope: !10741, file: !1340, line: 386, type: !10748)
!10748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!10749 = !DILocalVariable(name: "pclken", scope: !10741, file: !1340, line: 387, type: !1459)
!10750 = !DILocalVariable(name: "ret", scope: !10741, file: !1340, line: 396, type: !105)
!10751 = !DILocation(line: 0, scope: !10741)
!10752 = !DILocation(line: 387, column: 2, scope: !10741)
!10753 = !DILocation(line: 387, column: 22, scope: !10741)
!10754 = !DILocation(line: 399, column: 8, scope: !10741)
!10755 = !DILocation(line: 400, column: 10, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10741, file: !1340, line: 400, column: 6)
!10757 = !DILocation(line: 400, column: 6, scope: !10741)
!10758 = !DILocation(line: 405, column: 2, scope: !10741)
!10759 = !DILocation(line: 407, column: 2, scope: !10741)
!10760 = !DILocation(line: 408, column: 1, scope: !10741)
!10761 = distinct !DISubprogram(name: "clock_control_on", scope: !976, file: !976, line: 123, type: !1305, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10762)
!10762 = !{!10763, !10764, !10765}
!10763 = !DILocalVariable(name: "dev", arg: 1, scope: !10761, file: !976, line: 123, type: !1198)
!10764 = !DILocalVariable(name: "sys", arg: 2, scope: !10761, file: !976, line: 124, type: !1069)
!10765 = !DILocalVariable(name: "api", scope: !10761, file: !976, line: 126, type: !1298)
!10766 = !DILocation(line: 0, scope: !10761)
!10767 = !DILocation(line: 127, column: 49, scope: !10761)
!10768 = !DILocation(line: 129, column: 14, scope: !10761)
!10769 = !DILocation(line: 129, column: 9, scope: !10761)
!10770 = !DILocation(line: 129, column: 2, scope: !10761)
!10771 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1340, file: !1340, line: 311, type: !9877, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10772)
!10772 = !{!10773, !10774, !10775}
!10773 = !DILocalVariable(name: "port", arg: 1, scope: !10771, file: !1340, line: 311, type: !105)
!10774 = !DILocalVariable(name: "pin", arg: 2, scope: !10771, file: !1340, line: 311, type: !105)
!10775 = !DILocalVariable(name: "line", scope: !10771, file: !1340, line: 313, type: !113)
!10776 = !DILocation(line: 0, scope: !10771)
!10777 = !DILocation(line: 313, column: 18, scope: !10771)
!10778 = !DILocation(line: 337, column: 2, scope: !10771)
!10779 = !DILocation(line: 340, column: 1, scope: !10771)
!10780 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1340, file: !1340, line: 295, type: !10781, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{!113, !105}
!10783 = !{!10784}
!10784 = !DILocalVariable(name: "pin", arg: 1, scope: !10780, file: !1340, line: 295, type: !105)
!10785 = !DILocation(line: 0, scope: !10780)
!10786 = !DILocation(line: 307, column: 46, scope: !10780)
!10787 = !DILocation(line: 307, column: 27, scope: !10780)
!10788 = !DILocation(line: 307, column: 32, scope: !10780)
!10789 = !DILocation(line: 307, column: 14, scope: !10780)
!10790 = !DILocation(line: 307, column: 39, scope: !10780)
!10791 = !DILocation(line: 307, column: 2, scope: !10780)
!10792 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7489, file: !7489, line: 671, type: !10793, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10795)
!10793 = !DISubroutineType(types: !10794)
!10794 = !{null, !113, !113}
!10795 = !{!10796, !10797}
!10796 = !DILocalVariable(name: "Port", arg: 1, scope: !10792, file: !7489, line: 671, type: !113)
!10797 = !DILocalVariable(name: "Line", arg: 2, scope: !10792, file: !7489, line: 671, type: !113)
!10798 = !DILocation(line: 0, scope: !10792)
!10799 = !DILocation(line: 673, column: 3, scope: !10792)
!10800 = !DILocalVariable(name: "value", arg: 1, scope: !10801, file: !7786, line: 373, type: !113)
!10801 = distinct !DISubprogram(name: "__RBIT", scope: !7786, file: !7786, line: 373, type: !9067, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10802)
!10802 = !{!10800, !10803}
!10803 = !DILocalVariable(name: "result", scope: !10801, file: !7786, line: 375, type: !113)
!10804 = !DILocation(line: 0, scope: !10801, inlinedAt: !10805)
!10805 = distinct !DILocation(line: 673, column: 3, scope: !10792)
!10806 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !10805)
!10807 = !{i64 3503602}
!10808 = !DILocalVariable(name: "value", arg: 1, scope: !10809, file: !7786, line: 403, type: !113)
!10809 = distinct !DISubprogram(name: "__CLZ", scope: !7786, file: !7786, line: 403, type: !10810, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10812)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{!169, !113}
!10812 = !{!10808}
!10813 = !DILocation(line: 0, scope: !10809, inlinedAt: !10814)
!10814 = distinct !DILocation(line: 673, column: 3, scope: !10792)
!10815 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !10814)
!10816 = !DILocation(line: 674, column: 1, scope: !10792)
!10817 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10562, file: !10562, line: 69, type: !10818, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !10565, !1198, !113}
!10820 = !{!10821, !10822, !10823, !10824, !10825}
!10821 = !DILocalVariable(name: "list", arg: 1, scope: !10817, file: !10562, line: 69, type: !10565)
!10822 = !DILocalVariable(name: "port", arg: 2, scope: !10817, file: !10562, line: 70, type: !1198)
!10823 = !DILocalVariable(name: "pins", arg: 3, scope: !10817, file: !10562, line: 71, type: !113)
!10824 = !DILocalVariable(name: "cb", scope: !10817, file: !10562, line: 73, type: !1240)
!10825 = !DILocalVariable(name: "tmp", scope: !10817, file: !10562, line: 73, type: !1240)
!10826 = !DILocation(line: 0, scope: !10817)
!10827 = !DILocation(line: 75, column: 2, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10817, file: !10562, line: 75, column: 2)
!10829 = !DILocation(line: 0, scope: !10828)
!10830 = !DILocation(line: 76, column: 11, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !10562, line: 76, column: 7)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !10562, line: 75, column: 57)
!10833 = distinct !DILexicalBlock(scope: !10828, file: !10562, line: 75, column: 2)
!10834 = !DILocation(line: 76, column: 20, scope: !10831)
!10835 = !DILocation(line: 76, column: 7, scope: !10832)
!10836 = !DILocation(line: 77, column: 4, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !10562, line: 77, column: 4)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10562, line: 77, column: 4)
!10839 = distinct !DILexicalBlock(scope: !10831, file: !10562, line: 76, column: 28)
!10840 = !DILocation(line: 77, column: 4, scope: !10838)
!10841 = !DILocation(line: 77, column: 4, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10837, file: !10562, line: 77, column: 4)
!10843 = !DILocation(line: 78, column: 4, scope: !10839)
!10844 = !DILocation(line: 79, column: 3, scope: !10839)
!10845 = !DILocation(line: 75, column: 2, scope: !10833)
!10846 = !DILocation(line: 81, column: 1, scope: !10817)
!10847 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7489, file: !7489, line: 710, type: !9067, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10848)
!10848 = !{!10849}
!10849 = !DILocalVariable(name: "Line", arg: 1, scope: !10847, file: !7489, line: 710, type: !113)
!10850 = !DILocation(line: 0, scope: !10847)
!10851 = !DILocation(line: 712, column: 21, scope: !10847)
!10852 = !DILocation(line: 0, scope: !10801, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 712, column: 76, scope: !10847)
!10854 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !10853)
!10855 = !DILocation(line: 0, scope: !10809, inlinedAt: !10856)
!10856 = distinct !DILocation(line: 712, column: 76, scope: !10847)
!10857 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !10856)
!10858 = !DILocation(line: 712, column: 73, scope: !10847)
!10859 = !DILocation(line: 712, column: 3, scope: !10847)
!10860 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10861, file: !10861, line: 910, type: !10862, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10864)
!10861 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10862 = !DISubroutineType(types: !10863)
!10863 = !{null, !1271, !113}
!10864 = !{!10865, !10866}
!10865 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10860, file: !10861, line: 910, type: !1271)
!10866 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10860, file: !10861, line: 910, type: !113)
!10867 = !DILocation(line: 0, scope: !10860)
!10868 = !DILocation(line: 912, column: 3, scope: !10860)
!10869 = !DILocation(line: 913, column: 1, scope: !10860)
!10870 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10861, file: !10861, line: 823, type: !10871, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10873)
!10871 = !DISubroutineType(types: !10872)
!10872 = !{!113, !1271}
!10873 = !{!10874}
!10874 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10870, file: !10861, line: 823, type: !1271)
!10875 = !DILocation(line: 0, scope: !10870)
!10876 = !DILocation(line: 825, column: 21, scope: !10870)
!10877 = !DILocation(line: 825, column: 3, scope: !10870)
!10878 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10861, file: !10861, line: 812, type: !10862, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10879)
!10879 = !{!10880, !10881}
!10880 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10878, file: !10861, line: 812, type: !1271)
!10881 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10878, file: !10861, line: 812, type: !113)
!10882 = !DILocation(line: 0, scope: !10878)
!10883 = !DILocation(line: 814, column: 3, scope: !10878)
!10884 = !DILocation(line: 815, column: 1, scope: !10878)
!10885 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10861, file: !10861, line: 771, type: !10871, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10886)
!10886 = !{!10887}
!10887 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10885, file: !10861, line: 771, type: !1271)
!10888 = !DILocation(line: 0, scope: !10885)
!10889 = !DILocation(line: 773, column: 21, scope: !10885)
!10890 = !DILocation(line: 773, column: 3, scope: !10885)
!10891 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1340, file: !1340, line: 47, type: !10892, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10894)
!10892 = !DISubroutineType(types: !10893)
!10893 = !{!105, !1214, !428}
!10894 = !{!10895, !10896}
!10895 = !DILocalVariable(name: "flags", arg: 1, scope: !10891, file: !1340, line: 47, type: !1214)
!10896 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10891, file: !1340, line: 47, type: !428)
!10897 = !DILocation(line: 0, scope: !10891)
!10898 = !DILocation(line: 50, column: 13, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10891, file: !1340, line: 50, column: 6)
!10900 = !DILocation(line: 50, column: 28, scope: !10899)
!10901 = !DILocation(line: 50, column: 6, scope: !10891)
!10902 = !DILocation(line: 53, column: 11, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10899, file: !1340, line: 50, column: 34)
!10904 = !DILocation(line: 55, column: 14, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10903, file: !1340, line: 55, column: 7)
!10906 = !DILocation(line: 55, column: 35, scope: !10905)
!10907 = !DILocation(line: 55, column: 7, scope: !10903)
!10908 = !DILocation(line: 56, column: 14, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !1340, line: 56, column: 8)
!10910 = distinct !DILexicalBlock(scope: !10905, file: !1340, line: 55, column: 41)
!10911 = !DILocation(line: 56, column: 8, scope: !10910)
!10912 = !DILocation(line: 0, scope: !10905)
!10913 = !DILocation(line: 66, column: 14, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10903, file: !1340, line: 66, column: 7)
!10915 = !DILocation(line: 66, column: 30, scope: !10914)
!10916 = !DILocation(line: 66, column: 7, scope: !10903)
!10917 = !DILocation(line: 67, column: 12, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !1340, line: 66, column: 36)
!10919 = !DILocation(line: 68, column: 3, scope: !10918)
!10920 = !DILocation(line: 68, column: 21, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10914, file: !1340, line: 68, column: 14)
!10922 = !DILocation(line: 68, column: 39, scope: !10921)
!10923 = !DILocation(line: 68, column: 14, scope: !10914)
!10924 = !DILocation(line: 69, column: 12, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !1340, line: 68, column: 45)
!10926 = !DILocation(line: 70, column: 3, scope: !10925)
!10927 = !DILocation(line: 72, column: 21, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10899, file: !1340, line: 72, column: 14)
!10929 = !DILocation(line: 72, column: 35, scope: !10928)
!10930 = !DILocation(line: 72, column: 14, scope: !10899)
!10931 = !DILocation(line: 77, column: 14, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !1340, line: 77, column: 7)
!10933 = distinct !DILexicalBlock(scope: !10928, file: !1340, line: 72, column: 41)
!10934 = !DILocation(line: 77, column: 30, scope: !10932)
!10935 = !DILocation(line: 77, column: 7, scope: !10933)
!10936 = !DILocation(line: 0, scope: !10899)
!10937 = !DILocation(line: 90, column: 1, scope: !10891)
!10938 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1340, file: !1340, line: 157, type: !10939, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{null, !1198, !105, !105, !105}
!10941 = !{!10942, !10943, !10944, !10945, !10946, !10947, !10948, !10949, !10950, !10951, !10952}
!10942 = !DILocalVariable(name: "dev", arg: 1, scope: !10938, file: !1340, line: 157, type: !1198)
!10943 = !DILocalVariable(name: "pin", arg: 2, scope: !10938, file: !1340, line: 157, type: !105)
!10944 = !DILocalVariable(name: "conf", arg: 3, scope: !10938, file: !1340, line: 158, type: !105)
!10945 = !DILocalVariable(name: "func", arg: 4, scope: !10938, file: !1340, line: 158, type: !105)
!10946 = !DILocalVariable(name: "cfg", scope: !10938, file: !1340, line: 160, type: !10446)
!10947 = !DILocalVariable(name: "gpio", scope: !10938, file: !1340, line: 161, type: !1271)
!10948 = !DILocalVariable(name: "pin_ll", scope: !10938, file: !1340, line: 163, type: !105)
!10949 = !DILocalVariable(name: "mode", scope: !10938, file: !1340, line: 227, type: !32)
!10950 = !DILocalVariable(name: "otype", scope: !10938, file: !1340, line: 227, type: !32)
!10951 = !DILocalVariable(name: "ospeed", scope: !10938, file: !1340, line: 227, type: !32)
!10952 = !DILocalVariable(name: "pupd", scope: !10938, file: !1340, line: 227, type: !32)
!10953 = !DILocation(line: 0, scope: !10938)
!10954 = !DILocation(line: 160, column: 45, scope: !10938)
!10955 = !DILocation(line: 161, column: 44, scope: !10938)
!10956 = !DILocation(line: 163, column: 15, scope: !10938)
!10957 = !DILocation(line: 229, column: 14, scope: !10938)
!10958 = !DILocation(line: 246, column: 47, scope: !10938)
!10959 = !DILocation(line: 246, column: 2, scope: !10938)
!10960 = !DILocation(line: 248, column: 43, scope: !10938)
!10961 = !DILocation(line: 248, column: 2, scope: !10938)
!10962 = !DILocation(line: 250, column: 40, scope: !10938)
!10963 = !DILocation(line: 250, column: 2, scope: !10938)
!10964 = !DILocation(line: 252, column: 11, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10938, file: !1340, line: 252, column: 6)
!10966 = !DILocation(line: 252, column: 6, scope: !10938)
!10967 = !DILocation(line: 253, column: 11, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !1340, line: 253, column: 7)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !1340, line: 252, column: 36)
!10970 = !DILocation(line: 253, column: 7, scope: !10969)
!10971 = !DILocation(line: 254, column: 4, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10968, file: !1340, line: 253, column: 16)
!10973 = !DILocation(line: 255, column: 3, scope: !10972)
!10974 = !DILocation(line: 256, column: 4, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10968, file: !1340, line: 255, column: 10)
!10976 = !DILocation(line: 260, column: 40, scope: !10938)
!10977 = !DILocation(line: 260, column: 2, scope: !10938)
!10978 = !DILocation(line: 265, column: 1, scope: !10938)
!10979 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1340, file: !1340, line: 137, type: !10781, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10980)
!10980 = !{!10981, !10982}
!10981 = !DILocalVariable(name: "pin", arg: 1, scope: !10979, file: !1340, line: 137, type: !105)
!10982 = !DILocalVariable(name: "pinval", scope: !10979, file: !1340, line: 139, type: !113)
!10983 = !DILocation(line: 0, scope: !10979)
!10984 = !DILocation(line: 149, column: 13, scope: !10979)
!10985 = !DILocation(line: 151, column: 2, scope: !10979)
!10986 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10861, file: !10861, line: 342, type: !10987, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10989)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{null, !1271, !113, !113}
!10989 = !{!10990, !10991, !10992}
!10990 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10986, file: !10861, line: 342, type: !1271)
!10991 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10986, file: !10861, line: 342, type: !113)
!10992 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10986, file: !10861, line: 342, type: !113)
!10993 = !DILocation(line: 0, scope: !10986)
!10994 = !DILocation(line: 344, column: 3, scope: !10986)
!10995 = !DILocation(line: 345, column: 1, scope: !10986)
!10996 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10861, file: !10861, line: 413, type: !10987, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !10997)
!10997 = !{!10998, !10999, !11000}
!10998 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10996, file: !10861, line: 413, type: !1271)
!10999 = !DILocalVariable(name: "Pin", arg: 2, scope: !10996, file: !10861, line: 413, type: !113)
!11000 = !DILocalVariable(name: "Speed", arg: 3, scope: !10996, file: !10861, line: 413, type: !113)
!11001 = !DILocation(line: 0, scope: !10996)
!11002 = !DILocation(line: 415, column: 3, scope: !10996)
!11003 = !DILocation(line: 0, scope: !10801, inlinedAt: !11004)
!11004 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11005 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11004)
!11006 = !DILocation(line: 0, scope: !10809, inlinedAt: !11007)
!11007 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11008 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11007)
!11009 = !DILocation(line: 0, scope: !10801, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11011 = !DILocation(line: 0, scope: !10809, inlinedAt: !11012)
!11012 = distinct !DILocation(line: 415, column: 3, scope: !10996)
!11013 = !DILocation(line: 417, column: 1, scope: !10996)
!11014 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10861, file: !10861, line: 484, type: !10987, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11015)
!11015 = !{!11016, !11017, !11018}
!11016 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11014, file: !10861, line: 484, type: !1271)
!11017 = !DILocalVariable(name: "Pin", arg: 2, scope: !11014, file: !10861, line: 484, type: !113)
!11018 = !DILocalVariable(name: "Pull", arg: 3, scope: !11014, file: !10861, line: 484, type: !113)
!11019 = !DILocation(line: 0, scope: !11014)
!11020 = !DILocation(line: 486, column: 3, scope: !11014)
!11021 = !DILocation(line: 0, scope: !10801, inlinedAt: !11022)
!11022 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11023 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11022)
!11024 = !DILocation(line: 0, scope: !10809, inlinedAt: !11025)
!11025 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11026 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11025)
!11027 = !DILocation(line: 0, scope: !10801, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11029 = !DILocation(line: 0, scope: !10809, inlinedAt: !11030)
!11030 = distinct !DILocation(line: 486, column: 3, scope: !11014)
!11031 = !DILocation(line: 487, column: 1, scope: !11014)
!11032 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10861, file: !10861, line: 556, type: !10987, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11033)
!11033 = !{!11034, !11035, !11036}
!11034 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11032, file: !10861, line: 556, type: !1271)
!11035 = !DILocalVariable(name: "Pin", arg: 2, scope: !11032, file: !10861, line: 556, type: !113)
!11036 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11032, file: !10861, line: 556, type: !113)
!11037 = !DILocation(line: 0, scope: !11032)
!11038 = !DILocation(line: 558, column: 3, scope: !11032)
!11039 = !DILocation(line: 0, scope: !10801, inlinedAt: !11040)
!11040 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11041 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11040)
!11042 = !DILocation(line: 0, scope: !10809, inlinedAt: !11043)
!11043 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11044 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11043)
!11045 = !DILocation(line: 0, scope: !10801, inlinedAt: !11046)
!11046 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11047 = !DILocation(line: 0, scope: !10809, inlinedAt: !11048)
!11048 = distinct !DILocation(line: 558, column: 3, scope: !11032)
!11049 = !DILocation(line: 560, column: 1, scope: !11032)
!11050 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10861, file: !10861, line: 633, type: !10987, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054}
!11052 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11050, file: !10861, line: 633, type: !1271)
!11053 = !DILocalVariable(name: "Pin", arg: 2, scope: !11050, file: !10861, line: 633, type: !113)
!11054 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11050, file: !10861, line: 633, type: !113)
!11055 = !DILocation(line: 0, scope: !11050)
!11056 = !DILocation(line: 635, column: 3, scope: !11050)
!11057 = !DILocation(line: 0, scope: !10801, inlinedAt: !11058)
!11058 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11059 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11058)
!11060 = !DILocation(line: 0, scope: !10809, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11062 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11061)
!11063 = !DILocation(line: 0, scope: !10801, inlinedAt: !11064)
!11064 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11065 = !DILocation(line: 0, scope: !10809, inlinedAt: !11066)
!11066 = distinct !DILocation(line: 635, column: 3, scope: !11050)
!11067 = !DILocation(line: 637, column: 1, scope: !11050)
!11068 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10861, file: !10861, line: 273, type: !10987, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11069)
!11069 = !{!11070, !11071, !11072}
!11070 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11068, file: !10861, line: 273, type: !1271)
!11071 = !DILocalVariable(name: "Pin", arg: 2, scope: !11068, file: !10861, line: 273, type: !113)
!11072 = !DILocalVariable(name: "Mode", arg: 3, scope: !11068, file: !10861, line: 273, type: !113)
!11073 = !DILocation(line: 0, scope: !11068)
!11074 = !DILocation(line: 275, column: 3, scope: !11068)
!11075 = !DILocation(line: 0, scope: !10801, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11077 = !DILocation(line: 380, column: 4, scope: !10801, inlinedAt: !11076)
!11078 = !DILocation(line: 0, scope: !10809, inlinedAt: !11079)
!11079 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11080 = !DILocation(line: 414, column: 7, scope: !10809, inlinedAt: !11079)
!11081 = !DILocation(line: 0, scope: !10801, inlinedAt: !11082)
!11082 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11083 = !DILocation(line: 0, scope: !10809, inlinedAt: !11084)
!11084 = distinct !DILocation(line: 275, column: 3, scope: !11068)
!11085 = !DILocation(line: 276, column: 1, scope: !11068)
!11086 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1340, file: !1340, line: 698, type: !1353, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11087)
!11087 = !{!11088, !11089, !11090}
!11088 = !DILocalVariable(name: "dev", arg: 1, scope: !11086, file: !1340, line: 698, type: !1198)
!11089 = !DILocalVariable(name: "data", scope: !11086, file: !1340, line: 700, type: !10513)
!11090 = !DILocalVariable(name: "ret", scope: !11086, file: !1340, line: 701, type: !105)
!11091 = !DILocation(line: 0, scope: !11086)
!11092 = !DILocation(line: 700, column: 38, scope: !11086)
!11093 = !DILocation(line: 703, column: 8, scope: !11086)
!11094 = !DILocation(line: 703, column: 12, scope: !11086)
!11095 = !DILocation(line: 705, column: 7, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11086, file: !1340, line: 705, column: 6)
!11097 = !DILocation(line: 705, column: 6, scope: !11086)
!11098 = !DILocation(line: 722, column: 8, scope: !11086)
!11099 = !DILocation(line: 723, column: 10, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11086, file: !1340, line: 723, column: 6)
!11101 = !DILocation(line: 723, column: 6, scope: !11086)
!11102 = !DILocation(line: 731, column: 1, scope: !11086)
!11103 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !11104, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11106)
!11104 = !DISubroutineType(types: !11105)
!11105 = !{!492, !1198}
!11106 = !{!11107}
!11107 = !DILocalVariable(name: "dev", arg: 1, scope: !11103, file: !10291, line: 47, type: !1198)
!11108 = !DILocation(line: 0, scope: !11103)
!11109 = !DILocation(line: 55, column: 2, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11103, file: !10291, line: 55, column: 2)
!11111 = !{i64 2154954063}
!11112 = !DILocation(line: 56, column: 9, scope: !11103)
!11113 = !DILocation(line: 56, column: 2, scope: !11103)
!11114 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1340, file: !1340, line: 270, type: !11115, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11117)
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!105, !1198, !492}
!11117 = !{!11118, !11119, !11120, !11121, !11122}
!11118 = !DILocalVariable(name: "dev", arg: 1, scope: !11114, file: !1340, line: 270, type: !1198)
!11119 = !DILocalVariable(name: "on", arg: 2, scope: !11114, file: !1340, line: 270, type: !492)
!11120 = !DILocalVariable(name: "cfg", scope: !11114, file: !1340, line: 272, type: !10446)
!11121 = !DILocalVariable(name: "ret", scope: !11114, file: !1340, line: 273, type: !105)
!11122 = !DILocalVariable(name: "clk", scope: !11114, file: !1340, line: 278, type: !10748)
!11123 = !DILocation(line: 0, scope: !11114)
!11124 = !DILocation(line: 272, column: 45, scope: !11114)
!11125 = !DILocation(line: 282, column: 38, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !1340, line: 280, column: 10)
!11127 = distinct !DILexicalBlock(scope: !11114, file: !1340, line: 280, column: 6)
!11128 = !DILocation(line: 282, column: 6, scope: !11126)
!11129 = !DILocation(line: 281, column: 9, scope: !11126)
!11130 = !DILocation(line: 293, column: 1, scope: !11114)
!11131 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11104, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11132)
!11132 = !{!11133}
!11133 = !DILocalVariable(name: "dev", arg: 1, scope: !11131, file: !481, line: 730, type: !1198)
!11134 = !DILocation(line: 0, scope: !11131)
!11135 = !DILocation(line: 732, column: 9, scope: !11131)
!11136 = !DILocation(line: 732, column: 2, scope: !11131)
!11137 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1340, file: !1340, line: 496, type: !11138, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1169, retainedNodes: !11140)
!11138 = !DISubroutineType(types: !11139)
!11139 = !{!105, !1198, !105, !105, !105}
!11140 = !{!11141, !11142, !11143, !11144, !11145, !11146}
!11141 = !DILocalVariable(name: "dev", arg: 1, scope: !11137, file: !1340, line: 496, type: !1198)
!11142 = !DILocalVariable(name: "pin", arg: 2, scope: !11137, file: !1340, line: 496, type: !105)
!11143 = !DILocalVariable(name: "conf", arg: 3, scope: !11137, file: !1340, line: 496, type: !105)
!11144 = !DILocalVariable(name: "func", arg: 4, scope: !11137, file: !1340, line: 496, type: !105)
!11145 = !DILocalVariable(name: "ret", scope: !11137, file: !1340, line: 498, type: !105)
!11146 = !DILocalVariable(name: "gpio_out", scope: !11147, file: !1340, line: 508, type: !113)
!11147 = distinct !DILexicalBlock(scope: !11148, file: !1340, line: 507, column: 27)
!11148 = distinct !DILexicalBlock(scope: !11137, file: !1340, line: 507, column: 6)
!11149 = !DILocation(line: 0, scope: !11137)
!11150 = !DILocation(line: 505, column: 2, scope: !11137)
!11151 = !DILocation(line: 507, column: 11, scope: !11148)
!11152 = !DILocation(line: 507, column: 6, scope: !11137)
!11153 = !DILocation(line: 508, column: 28, scope: !11147)
!11154 = !DILocation(line: 0, scope: !11147)
!11155 = !DILocation(line: 510, column: 16, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11147, file: !1340, line: 510, column: 7)
!11157 = !DILocation(line: 0, scope: !11156)
!11158 = !DILocation(line: 510, column: 7, scope: !11147)
!11159 = !DILocation(line: 511, column: 4, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !1340, line: 510, column: 32)
!11161 = !DILocation(line: 512, column: 3, scope: !11160)
!11162 = !DILocation(line: 513, column: 4, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1340, line: 512, column: 39)
!11164 = distinct !DILexicalBlock(scope: !11156, file: !1340, line: 512, column: 14)
!11165 = !DILocation(line: 514, column: 3, scope: !11163)
!11166 = !DILocation(line: 518, column: 1, scope: !11137)
!11167 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1616, file: !1616, line: 526, type: !1519, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11168)
!11168 = !{!11169, !11170, !11171}
!11169 = !DILocalVariable(name: "dev", arg: 1, scope: !11167, file: !1616, line: 526, type: !1521)
!11170 = !DILocalVariable(name: "c", arg: 2, scope: !11167, file: !1616, line: 526, type: !1130)
!11171 = !DILocalVariable(name: "config", scope: !11167, file: !1616, line: 528, type: !11172)
!11172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!11173 = !DILocation(line: 0, scope: !11167)
!11174 = !DILocation(line: 528, column: 48, scope: !11167)
!11175 = !DILocation(line: 531, column: 40, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11167, file: !1616, line: 531, column: 6)
!11177 = !DILocation(line: 531, column: 6, scope: !11176)
!11178 = !DILocation(line: 531, column: 6, scope: !11167)
!11179 = !DILocation(line: 532, column: 34, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11176, file: !1616, line: 531, column: 48)
!11181 = !DILocation(line: 532, column: 3, scope: !11180)
!11182 = !DILocation(line: 533, column: 2, scope: !11180)
!11183 = !DILocation(line: 539, column: 42, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11167, file: !1616, line: 539, column: 6)
!11185 = !DILocation(line: 539, column: 7, scope: !11184)
!11186 = !DILocation(line: 539, column: 6, scope: !11167)
!11187 = !DILocation(line: 543, column: 52, scope: !11167)
!11188 = !DILocation(line: 543, column: 22, scope: !11167)
!11189 = !DILocation(line: 543, column: 5, scope: !11167)
!11190 = !DILocation(line: 545, column: 2, scope: !11167)
!11191 = !DILocation(line: 546, column: 1, scope: !11167)
!11192 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1616, file: !1616, line: 548, type: !1538, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11193)
!11193 = !{!11194, !11195, !11196, !11197}
!11194 = !DILocalVariable(name: "dev", arg: 1, scope: !11192, file: !1616, line: 548, type: !1521)
!11195 = !DILocalVariable(name: "c", arg: 2, scope: !11192, file: !1616, line: 549, type: !170)
!11196 = !DILocalVariable(name: "config", scope: !11192, file: !1616, line: 551, type: !11172)
!11197 = !DILocalVariable(name: "key", scope: !11192, file: !1616, line: 555, type: !32)
!11198 = !DILocation(line: 0, scope: !11192)
!11199 = !DILocation(line: 551, column: 48, scope: !11192)
!11200 = !DILocation(line: 562, column: 2, scope: !11192)
!11201 = !DILocation(line: 563, column: 41, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !1616, line: 563, column: 7)
!11203 = distinct !DILexicalBlock(scope: !11192, file: !1616, line: 562, column: 12)
!11204 = !DILocation(line: 563, column: 7, scope: !11202)
!11205 = !DILocation(line: 563, column: 7, scope: !11203)
!11206 = !DILocation(line: 55, column: 2, scope: !11207, inlinedAt: !11211)
!11207 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11208)
!11208 = !{!11209, !11210}
!11209 = !DILocalVariable(name: "key", scope: !11207, file: !7468, line: 44, type: !32)
!11210 = !DILocalVariable(name: "tmp", scope: !11207, file: !7468, line: 53, type: !32)
!11211 = distinct !DILocation(line: 564, column: 10, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11202, file: !1616, line: 563, column: 49)
!11213 = !{i64 2292015}
!11214 = !DILocation(line: 0, scope: !11207, inlinedAt: !11211)
!11215 = !DILocation(line: 565, column: 42, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11212, file: !1616, line: 565, column: 8)
!11217 = !DILocation(line: 565, column: 8, scope: !11216)
!11218 = !DILocation(line: 565, column: 8, scope: !11212)
!11219 = !DILocalVariable(name: "key", arg: 1, scope: !11220, file: !7468, line: 84, type: !32)
!11220 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11221)
!11221 = !{!11219}
!11222 = !DILocation(line: 0, scope: !11220, inlinedAt: !11223)
!11223 = distinct !DILocation(line: 568, column: 4, scope: !11212)
!11224 = !DILocation(line: 95, column: 2, scope: !11220, inlinedAt: !11223)
!11225 = !{i64 2292832}
!11226 = !DILocation(line: 569, column: 3, scope: !11212)
!11227 = distinct !{!11227, !11200, !11228}
!11228 = !DILocation(line: 570, column: 2, scope: !11192)
!11229 = !DILocation(line: 592, column: 33, scope: !11192)
!11230 = !DILocation(line: 592, column: 2, scope: !11192)
!11231 = !DILocation(line: 0, scope: !11220, inlinedAt: !11232)
!11232 = distinct !DILocation(line: 593, column: 2, scope: !11192)
!11233 = !DILocation(line: 95, column: 2, scope: !11220, inlinedAt: !11232)
!11234 = !DILocation(line: 594, column: 1, scope: !11192)
!11235 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1616, file: !1616, line: 596, type: !1542, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11236)
!11236 = !{!11237, !11238, !11239}
!11237 = !DILocalVariable(name: "dev", arg: 1, scope: !11235, file: !1616, line: 596, type: !1521)
!11238 = !DILocalVariable(name: "config", scope: !11235, file: !1616, line: 598, type: !11172)
!11239 = !DILocalVariable(name: "err", scope: !11235, file: !1616, line: 599, type: !113)
!11240 = !DILocation(line: 0, scope: !11235)
!11241 = !DILocation(line: 598, column: 48, scope: !11235)
!11242 = !DILocation(line: 606, column: 40, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 606, column: 6)
!11244 = !DILocation(line: 606, column: 6, scope: !11243)
!11245 = !DILocation(line: 606, column: 6, scope: !11235)
!11246 = !DILocation(line: 610, column: 39, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 610, column: 6)
!11248 = !DILocation(line: 610, column: 6, scope: !11247)
!11249 = !DILocation(line: 610, column: 6, scope: !11235)
!11250 = !DILocation(line: 614, column: 39, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 614, column: 6)
!11252 = !DILocation(line: 614, column: 6, scope: !11251)
!11253 = !DILocation(line: 614, column: 6, scope: !11235)
!11254 = !DILocation(line: 619, column: 40, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 619, column: 6)
!11256 = !DILocation(line: 619, column: 6, scope: !11255)
!11257 = !DILocation(line: 619, column: 6, scope: !11235)
!11258 = !DILocation(line: 623, column: 10, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 623, column: 6)
!11260 = !DILocation(line: 623, column: 6, scope: !11235)
!11261 = !DILocation(line: 624, column: 34, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11259, file: !1616, line: 623, column: 24)
!11263 = !DILocation(line: 624, column: 3, scope: !11262)
!11264 = !DILocation(line: 625, column: 2, scope: !11262)
!11265 = !DILocation(line: 632, column: 10, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 632, column: 6)
!11267 = !DILocation(line: 632, column: 6, scope: !11235)
!11268 = !DILocation(line: 633, column: 34, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11266, file: !1616, line: 632, column: 32)
!11270 = !DILocation(line: 633, column: 3, scope: !11269)
!11271 = !DILocation(line: 634, column: 2, scope: !11269)
!11272 = !DILocation(line: 636, column: 10, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 636, column: 6)
!11274 = !DILocation(line: 636, column: 6, scope: !11235)
!11275 = !DILocation(line: 637, column: 33, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11273, file: !1616, line: 636, column: 31)
!11277 = !DILocation(line: 637, column: 3, scope: !11276)
!11278 = !DILocation(line: 638, column: 2, scope: !11276)
!11279 = !DILocation(line: 640, column: 10, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11235, file: !1616, line: 640, column: 6)
!11281 = !DILocation(line: 640, column: 6, scope: !11235)
!11282 = !DILocation(line: 641, column: 33, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11280, file: !1616, line: 640, column: 32)
!11284 = !DILocation(line: 641, column: 3, scope: !11283)
!11285 = !DILocation(line: 642, column: 2, scope: !11283)
!11286 = !DILocation(line: 646, column: 32, scope: !11235)
!11287 = !DILocation(line: 646, column: 2, scope: !11235)
!11288 = !DILocation(line: 648, column: 2, scope: !11235)
!11289 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1616, file: !1616, line: 419, type: !1546, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11290)
!11290 = !{!11291, !11292, !11293, !11294, !11296, !11297, !11298, !11299}
!11291 = !DILocalVariable(name: "dev", arg: 1, scope: !11289, file: !1616, line: 419, type: !1521)
!11292 = !DILocalVariable(name: "cfg", arg: 2, scope: !11289, file: !1616, line: 420, type: !1548)
!11293 = !DILocalVariable(name: "config", scope: !11289, file: !1616, line: 422, type: !11172)
!11294 = !DILocalVariable(name: "data", scope: !11289, file: !1616, line: 423, type: !11295)
!11295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 32)
!11296 = !DILocalVariable(name: "parity", scope: !11289, file: !1616, line: 424, type: !3737)
!11297 = !DILocalVariable(name: "stopbits", scope: !11289, file: !1616, line: 425, type: !3737)
!11298 = !DILocalVariable(name: "databits", scope: !11289, file: !1616, line: 426, type: !3737)
!11299 = !DILocalVariable(name: "flowctrl", scope: !11289, file: !1616, line: 428, type: !3737)
!11300 = !DILocation(line: 0, scope: !11289)
!11301 = !DILocation(line: 422, column: 48, scope: !11289)
!11302 = !DILocation(line: 423, column: 38, scope: !11289)
!11303 = !DILocation(line: 424, column: 56, scope: !11289)
!11304 = !DILocation(line: 424, column: 51, scope: !11289)
!11305 = !DILocation(line: 424, column: 26, scope: !11289)
!11306 = !DILocation(line: 425, column: 60, scope: !11289)
!11307 = !DILocation(line: 425, column: 55, scope: !11289)
!11308 = !DILocation(line: 425, column: 28, scope: !11289)
!11309 = !DILocation(line: 426, column: 60, scope: !11289)
!11310 = !DILocation(line: 426, column: 55, scope: !11289)
!11311 = !DILocation(line: 426, column: 28, scope: !11289)
!11312 = !DILocation(line: 428, column: 58, scope: !11289)
!11313 = !DILocation(line: 428, column: 53, scope: !11289)
!11314 = !DILocation(line: 428, column: 28, scope: !11289)
!11315 = !DILocation(line: 431, column: 44, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 431, column: 6)
!11317 = !DILocation(line: 438, column: 22, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 437, column: 6)
!11319 = !DILocation(line: 437, column: 6, scope: !11289)
!11320 = !DILocation(line: 448, column: 6, scope: !11289)
!11321 = !DILocation(line: 465, column: 47, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 465, column: 6)
!11323 = !DILocation(line: 475, column: 21, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 475, column: 6)
!11325 = !DILocation(line: 475, column: 6, scope: !11289)
!11326 = !DILocation(line: 476, column: 8, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !1616, line: 476, column: 7)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !1616, line: 475, column: 49)
!11329 = !DILocation(line: 477, column: 34, scope: !11327)
!11330 = !DILocation(line: 476, column: 7, scope: !11328)
!11331 = !DILocation(line: 482, column: 27, scope: !11289)
!11332 = !DILocation(line: 482, column: 2, scope: !11289)
!11333 = !DILocation(line: 484, column: 16, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 484, column: 6)
!11335 = !DILocation(line: 484, column: 13, scope: !11334)
!11336 = !DILocation(line: 484, column: 6, scope: !11289)
!11337 = !DILocation(line: 485, column: 3, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !1616, line: 484, column: 44)
!11339 = !DILocation(line: 486, column: 2, scope: !11338)
!11340 = !DILocation(line: 488, column: 18, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 488, column: 6)
!11342 = !DILocation(line: 488, column: 15, scope: !11341)
!11343 = !DILocation(line: 488, column: 6, scope: !11289)
!11344 = !DILocation(line: 489, column: 3, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11341, file: !1616, line: 488, column: 48)
!11346 = !DILocation(line: 490, column: 2, scope: !11345)
!11347 = !DILocation(line: 492, column: 18, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 492, column: 6)
!11349 = !DILocation(line: 492, column: 15, scope: !11348)
!11350 = !DILocation(line: 492, column: 6, scope: !11289)
!11351 = !DILocation(line: 493, column: 3, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11348, file: !1616, line: 492, column: 48)
!11353 = !DILocation(line: 494, column: 2, scope: !11352)
!11354 = !DILocation(line: 496, column: 18, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 496, column: 6)
!11356 = !DILocation(line: 496, column: 15, scope: !11355)
!11357 = !DILocation(line: 496, column: 6, scope: !11289)
!11358 = !DILocation(line: 497, column: 3, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11355, file: !1616, line: 496, column: 46)
!11360 = !DILocation(line: 498, column: 2, scope: !11359)
!11361 = !DILocation(line: 500, column: 11, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11289, file: !1616, line: 500, column: 6)
!11363 = !DILocation(line: 500, column: 29, scope: !11362)
!11364 = !DILocation(line: 500, column: 20, scope: !11362)
!11365 = !DILocation(line: 500, column: 6, scope: !11289)
!11366 = !DILocation(line: 501, column: 3, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11362, file: !1616, line: 500, column: 40)
!11368 = !DILocation(line: 502, column: 26, scope: !11367)
!11369 = !DILocation(line: 502, column: 19, scope: !11367)
!11370 = !DILocation(line: 503, column: 2, scope: !11367)
!11371 = !DILocation(line: 505, column: 26, scope: !11289)
!11372 = !DILocation(line: 505, column: 2, scope: !11289)
!11373 = !DILocation(line: 506, column: 2, scope: !11289)
!11374 = !DILocation(line: 507, column: 1, scope: !11289)
!11375 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1616, file: !1616, line: 509, type: !1559, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11376)
!11376 = !{!11377, !11378, !11379}
!11377 = !DILocalVariable(name: "dev", arg: 1, scope: !11375, file: !1616, line: 509, type: !1521)
!11378 = !DILocalVariable(name: "cfg", arg: 2, scope: !11375, file: !1616, line: 510, type: !1561)
!11379 = !DILocalVariable(name: "data", scope: !11375, file: !1616, line: 512, type: !11295)
!11380 = !DILocation(line: 0, scope: !11375)
!11381 = !DILocation(line: 512, column: 38, scope: !11375)
!11382 = !DILocation(line: 514, column: 24, scope: !11375)
!11383 = !DILocation(line: 514, column: 7, scope: !11375)
!11384 = !DILocation(line: 514, column: 16, scope: !11375)
!11385 = !DILocation(line: 515, column: 41, scope: !11375)
!11386 = !{i32 0, i32 1537}
!11387 = !DILocation(line: 515, column: 16, scope: !11375)
!11388 = !DILocation(line: 515, column: 7, scope: !11375)
!11389 = !DILocation(line: 515, column: 14, scope: !11375)
!11390 = !DILocation(line: 517, column: 3, scope: !11375)
!11391 = !{i32 0, i32 12289}
!11392 = !DILocation(line: 516, column: 19, scope: !11375)
!11393 = !DILocation(line: 516, column: 7, scope: !11375)
!11394 = !DILocation(line: 516, column: 17, scope: !11375)
!11395 = !DILocation(line: 519, column: 3, scope: !11375)
!11396 = !DILocation(line: 519, column: 33, scope: !11375)
!11397 = !DILocation(line: 518, column: 19, scope: !11375)
!11398 = !DILocation(line: 518, column: 7, scope: !11375)
!11399 = !DILocation(line: 518, column: 17, scope: !11375)
!11400 = !DILocation(line: 521, column: 3, scope: !11375)
!11401 = !{i32 0, i32 769}
!11402 = !DILocation(line: 520, column: 19, scope: !11375)
!11403 = !DILocation(line: 520, column: 7, scope: !11375)
!11404 = !DILocation(line: 520, column: 17, scope: !11375)
!11405 = !DILocation(line: 522, column: 2, scope: !11375)
!11406 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1616, file: !1616, line: 205, type: !11407, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11409)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!113, !1521}
!11409 = !{!11410, !11411}
!11410 = !DILocalVariable(name: "dev", arg: 1, scope: !11406, file: !1616, line: 205, type: !1521)
!11411 = !DILocalVariable(name: "config", scope: !11406, file: !1616, line: 207, type: !11172)
!11412 = !DILocation(line: 0, scope: !11406)
!11413 = !DILocation(line: 207, column: 48, scope: !11406)
!11414 = !DILocation(line: 209, column: 36, scope: !11406)
!11415 = !DILocation(line: 209, column: 9, scope: !11406)
!11416 = !DILocation(line: 209, column: 2, scope: !11406)
!11417 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1616, file: !1616, line: 270, type: !11418, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11420)
!11418 = !DISubroutineType(types: !11419)
!11419 = !{!1487, !113}
!11420 = !{!11421}
!11421 = !DILocalVariable(name: "parity", arg: 1, scope: !11417, file: !1616, line: 270, type: !113)
!11422 = !DILocation(line: 0, scope: !11417)
!11423 = !DILocation(line: 272, column: 2, scope: !11417)
!11424 = !DILocation(line: 281, column: 1, scope: !11417)
!11425 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1616, file: !1616, line: 220, type: !11407, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11426)
!11426 = !{!11427, !11428}
!11427 = !DILocalVariable(name: "dev", arg: 1, scope: !11425, file: !1616, line: 220, type: !1521)
!11428 = !DILocalVariable(name: "config", scope: !11425, file: !1616, line: 222, type: !11172)
!11429 = !DILocation(line: 0, scope: !11425)
!11430 = !DILocation(line: 222, column: 48, scope: !11425)
!11431 = !DILocation(line: 224, column: 44, scope: !11425)
!11432 = !DILocation(line: 224, column: 9, scope: !11425)
!11433 = !DILocation(line: 224, column: 2, scope: !11425)
!11434 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1616, file: !1616, line: 304, type: !11435, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11437)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!1501, !113}
!11437 = !{!11438}
!11438 = !DILocalVariable(name: "sb", arg: 1, scope: !11434, file: !1616, line: 304, type: !113)
!11439 = !DILocation(line: 0, scope: !11434)
!11440 = !DILocation(line: 306, column: 2, scope: !11434)
!11441 = !DILocation(line: 0, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11434, file: !1616, line: 306, column: 14)
!11443 = !DILocation(line: 323, column: 1, scope: !11434)
!11444 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1616, file: !1616, line: 235, type: !11407, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11445)
!11445 = !{!11446, !11447}
!11446 = !DILocalVariable(name: "dev", arg: 1, scope: !11444, file: !1616, line: 235, type: !1521)
!11447 = !DILocalVariable(name: "config", scope: !11444, file: !1616, line: 237, type: !11172)
!11448 = !DILocation(line: 0, scope: !11444)
!11449 = !DILocation(line: 237, column: 48, scope: !11444)
!11450 = !DILocation(line: 239, column: 39, scope: !11444)
!11451 = !DILocation(line: 239, column: 9, scope: !11444)
!11452 = !DILocation(line: 239, column: 2, scope: !11444)
!11453 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1616, file: !1616, line: 355, type: !11454, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11456)
!11454 = !DISubroutineType(types: !11455)
!11455 = !{!1494, !113, !113}
!11456 = !{!11457, !11458}
!11457 = !DILocalVariable(name: "db", arg: 1, scope: !11453, file: !1616, line: 355, type: !113)
!11458 = !DILocalVariable(name: "p", arg: 2, scope: !11453, file: !1616, line: 356, type: !113)
!11459 = !DILocation(line: 0, scope: !11453)
!11460 = !DILocation(line: 358, column: 2, scope: !11453)
!11461 = !DILocation(line: 384, column: 1, scope: !11453)
!11462 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1616, file: !1616, line: 250, type: !11407, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11463)
!11463 = !{!11464, !11465}
!11464 = !DILocalVariable(name: "dev", arg: 1, scope: !11462, file: !1616, line: 250, type: !1521)
!11465 = !DILocalVariable(name: "config", scope: !11462, file: !1616, line: 252, type: !11172)
!11466 = !DILocation(line: 0, scope: !11462)
!11467 = !DILocation(line: 252, column: 48, scope: !11462)
!11468 = !DILocation(line: 254, column: 40, scope: !11462)
!11469 = !DILocation(line: 254, column: 9, scope: !11462)
!11470 = !DILocation(line: 254, column: 2, scope: !11462)
!11471 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1616, file: !1616, line: 409, type: !11472, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11474)
!11472 = !DISubroutineType(types: !11473)
!11473 = !{!1507, !113}
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "fc", arg: 1, scope: !11471, file: !1616, line: 409, type: !113)
!11476 = !DILocation(line: 0, scope: !11471)
!11477 = !DILocation(line: 411, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11471, file: !1616, line: 411, column: 6)
!11479 = !DILocation(line: 416, column: 1, scope: !11471)
!11480 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11481, file: !11481, line: 967, type: !11482, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11484)
!11481 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11482 = !DISubroutineType(types: !11483)
!11483 = !{!113, !1562}
!11484 = !{!11485}
!11485 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11480, file: !11481, line: 967, type: !1562)
!11486 = !DILocation(line: 0, scope: !11480)
!11487 = !DILocation(line: 969, column: 21, scope: !11480)
!11488 = !DILocation(line: 969, column: 3, scope: !11480)
!11489 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11481, file: !11481, line: 601, type: !11482, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11490)
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11489, file: !11481, line: 601, type: !1562)
!11492 = !DILocation(line: 0, scope: !11489)
!11493 = !DILocation(line: 603, column: 21, scope: !11489)
!11494 = !DILocation(line: 603, column: 3, scope: !11489)
!11495 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11481, file: !11481, line: 820, type: !11482, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11496)
!11496 = !{!11497}
!11497 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !11481, line: 820, type: !1562)
!11498 = !DILocation(line: 0, scope: !11495)
!11499 = !DILocation(line: 822, column: 21, scope: !11495)
!11500 = !DILocation(line: 822, column: 3, scope: !11495)
!11501 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11481, file: !11481, line: 547, type: !11482, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11502)
!11502 = !{!11503}
!11503 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11501, file: !11481, line: 547, type: !1562)
!11504 = !DILocation(line: 0, scope: !11501)
!11505 = !DILocation(line: 549, column: 21, scope: !11501)
!11506 = !DILocation(line: 549, column: 3, scope: !11501)
!11507 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1616, file: !1616, line: 257, type: !11508, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11510)
!11508 = !DISubroutineType(types: !11509)
!11509 = !{!113, !1487}
!11510 = !{!11511}
!11511 = !DILocalVariable(name: "parity", arg: 1, scope: !11507, file: !1616, line: 257, type: !1487)
!11512 = !DILocation(line: 0, scope: !11507)
!11513 = !DILocation(line: 259, column: 2, scope: !11507)
!11514 = !DILocation(line: 268, column: 1, scope: !11507)
!11515 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1616, file: !1616, line: 283, type: !11516, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11518)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!113, !1501}
!11518 = !{!11519}
!11519 = !DILocalVariable(name: "sb", arg: 1, scope: !11515, file: !1616, line: 283, type: !1501)
!11520 = !DILocation(line: 0, scope: !11515)
!11521 = !DILocation(line: 285, column: 2, scope: !11515)
!11522 = !DILocation(line: 0, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11515, file: !1616, line: 285, column: 14)
!11524 = !DILocation(line: 302, column: 1, scope: !11515)
!11525 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1616, file: !1616, line: 325, type: !11526, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11528)
!11526 = !DISubroutineType(types: !11527)
!11527 = !{!113, !1494, !1487}
!11528 = !{!11529, !11530}
!11529 = !DILocalVariable(name: "db", arg: 1, scope: !11525, file: !1616, line: 325, type: !1494)
!11530 = !DILocalVariable(name: "p", arg: 2, scope: !11525, file: !1616, line: 326, type: !1487)
!11531 = !DILocation(line: 0, scope: !11525)
!11532 = !DILocation(line: 328, column: 2, scope: !11525)
!11533 = !DILocation(line: 353, column: 1, scope: !11525)
!11534 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1616, file: !1616, line: 393, type: !11535, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11537)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{!113, !1507}
!11537 = !{!11538}
!11538 = !DILocalVariable(name: "fc", arg: 1, scope: !11534, file: !1616, line: 393, type: !1507)
!11539 = !DILocation(line: 0, scope: !11534)
!11540 = !DILocation(line: 395, column: 9, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11534, file: !1616, line: 395, column: 6)
!11542 = !DILocation(line: 400, column: 1, scope: !11534)
!11543 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11481, file: !11481, line: 424, type: !11544, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11546)
!11544 = !DISubroutineType(types: !11545)
!11545 = !{null, !1562}
!11546 = !{!11547}
!11547 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11543, file: !11481, line: 424, type: !1562)
!11548 = !DILocation(line: 0, scope: !11543)
!11549 = !DILocation(line: 426, column: 3, scope: !11543)
!11550 = !DILocation(line: 427, column: 1, scope: !11543)
!11551 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1616, file: !1616, line: 197, type: !11552, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11554)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{null, !1521, !113}
!11554 = !{!11555, !11556, !11557}
!11555 = !DILocalVariable(name: "dev", arg: 1, scope: !11551, file: !1616, line: 197, type: !1521)
!11556 = !DILocalVariable(name: "parity", arg: 2, scope: !11551, file: !1616, line: 198, type: !113)
!11557 = !DILocalVariable(name: "config", scope: !11551, file: !1616, line: 200, type: !11172)
!11558 = !DILocation(line: 0, scope: !11551)
!11559 = !DILocation(line: 200, column: 48, scope: !11551)
!11560 = !DILocation(line: 202, column: 29, scope: !11551)
!11561 = !DILocation(line: 202, column: 2, scope: !11551)
!11562 = !DILocation(line: 203, column: 1, scope: !11551)
!11563 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1616, file: !1616, line: 212, type: !11552, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11564)
!11564 = !{!11565, !11566, !11567}
!11565 = !DILocalVariable(name: "dev", arg: 1, scope: !11563, file: !1616, line: 212, type: !1521)
!11566 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11563, file: !1616, line: 213, type: !113)
!11567 = !DILocalVariable(name: "config", scope: !11563, file: !1616, line: 215, type: !11172)
!11568 = !DILocation(line: 0, scope: !11563)
!11569 = !DILocation(line: 215, column: 48, scope: !11563)
!11570 = !DILocation(line: 217, column: 37, scope: !11563)
!11571 = !DILocation(line: 217, column: 2, scope: !11563)
!11572 = !DILocation(line: 218, column: 1, scope: !11563)
!11573 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1616, file: !1616, line: 227, type: !11552, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11574)
!11574 = !{!11575, !11576, !11577}
!11575 = !DILocalVariable(name: "dev", arg: 1, scope: !11573, file: !1616, line: 227, type: !1521)
!11576 = !DILocalVariable(name: "databits", arg: 2, scope: !11573, file: !1616, line: 228, type: !113)
!11577 = !DILocalVariable(name: "config", scope: !11573, file: !1616, line: 230, type: !11172)
!11578 = !DILocation(line: 0, scope: !11573)
!11579 = !DILocation(line: 230, column: 48, scope: !11573)
!11580 = !DILocation(line: 232, column: 32, scope: !11573)
!11581 = !DILocation(line: 232, column: 2, scope: !11573)
!11582 = !DILocation(line: 233, column: 1, scope: !11573)
!11583 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1616, file: !1616, line: 242, type: !11552, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11584)
!11584 = !{!11585, !11586, !11587}
!11585 = !DILocalVariable(name: "dev", arg: 1, scope: !11583, file: !1616, line: 242, type: !1521)
!11586 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11583, file: !1616, line: 243, type: !113)
!11587 = !DILocalVariable(name: "config", scope: !11583, file: !1616, line: 245, type: !11172)
!11588 = !DILocation(line: 0, scope: !11583)
!11589 = !DILocation(line: 245, column: 48, scope: !11583)
!11590 = !DILocation(line: 247, column: 33, scope: !11583)
!11591 = !DILocation(line: 247, column: 2, scope: !11583)
!11592 = !DILocation(line: 248, column: 1, scope: !11583)
!11593 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1616, file: !1616, line: 107, type: !11552, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11594)
!11594 = !{!11595, !11596, !11597, !11598, !11599}
!11595 = !DILocalVariable(name: "dev", arg: 1, scope: !11593, file: !1616, line: 107, type: !1521)
!11596 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11593, file: !1616, line: 107, type: !113)
!11597 = !DILocalVariable(name: "config", scope: !11593, file: !1616, line: 109, type: !11172)
!11598 = !DILocalVariable(name: "data", scope: !11593, file: !1616, line: 110, type: !11295)
!11599 = !DILocalVariable(name: "clock_rate", scope: !11593, file: !1616, line: 112, type: !113)
!11600 = !DILocation(line: 0, scope: !11593)
!11601 = !DILocation(line: 109, column: 48, scope: !11593)
!11602 = !DILocation(line: 110, column: 38, scope: !11593)
!11603 = !DILocation(line: 112, column: 2, scope: !11593)
!11604 = !DILocation(line: 123, column: 36, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !1616, line: 123, column: 7)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !1616, line: 122, column: 9)
!11607 = distinct !DILexicalBlock(scope: !11593, file: !1616, line: 115, column: 6)
!11608 = !DILocation(line: 124, column: 42, scope: !11605)
!11609 = !DILocation(line: 123, column: 7, scope: !11605)
!11610 = !DILocation(line: 125, column: 22, scope: !11605)
!11611 = !DILocation(line: 123, column: 7, scope: !11606)
!11612 = !DILocation(line: 126, column: 4, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11614, file: !1616, line: 126, column: 4)
!11614 = distinct !DILexicalBlock(scope: !11615, file: !1616, line: 126, column: 4)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !1616, line: 126, column: 4)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !1616, line: 126, column: 4)
!11617 = distinct !DILexicalBlock(scope: !11605, file: !1616, line: 125, column: 27)
!11618 = !DILocation(line: 127, column: 4, scope: !11617)
!11619 = !DILocation(line: 176, column: 36, scope: !11593)
!11620 = !DILocation(line: 176, column: 3, scope: !11593)
!11621 = !DILocation(line: 179, column: 32, scope: !11593)
!11622 = !DILocation(line: 180, column: 10, scope: !11593)
!11623 = !DILocation(line: 179, column: 3, scope: !11593)
!11624 = !DILocation(line: 189, column: 3, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1616, line: 189, column: 3)
!11626 = distinct !DILexicalBlock(scope: !11593, file: !1616, line: 189, column: 3)
!11627 = !DILocation(line: 189, column: 3, scope: !11626)
!11628 = !DILocation(line: 189, column: 3, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11625, file: !1616, line: 189, column: 3)
!11630 = !DILocation(line: 195, column: 1, scope: !11593)
!11631 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11481, file: !11481, line: 410, type: !11544, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11632)
!11632 = !{!11633}
!11633 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11631, file: !11481, line: 410, type: !1562)
!11634 = !DILocation(line: 0, scope: !11631)
!11635 = !DILocation(line: 412, column: 3, scope: !11631)
!11636 = !DILocation(line: 413, column: 1, scope: !11631)
!11637 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !976, file: !976, line: 216, type: !1595, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11638)
!11638 = !{!11639, !11640, !11641, !11642}
!11639 = !DILocalVariable(name: "dev", arg: 1, scope: !11637, file: !976, line: 216, type: !1521)
!11640 = !DILocalVariable(name: "sys", arg: 2, scope: !11637, file: !976, line: 217, type: !1069)
!11641 = !DILocalVariable(name: "rate", arg: 3, scope: !11637, file: !976, line: 218, type: !1025)
!11642 = !DILocalVariable(name: "api", scope: !11637, file: !976, line: 220, type: !1573)
!11643 = !DILocation(line: 0, scope: !11637)
!11644 = !DILocation(line: 221, column: 49, scope: !11637)
!11645 = !DILocation(line: 223, column: 11, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11637, file: !976, line: 223, column: 6)
!11647 = !DILocation(line: 223, column: 20, scope: !11646)
!11648 = !DILocation(line: 223, column: 6, scope: !11637)
!11649 = !DILocation(line: 227, column: 9, scope: !11637)
!11650 = !DILocation(line: 227, column: 2, scope: !11637)
!11651 = !DILocation(line: 228, column: 1, scope: !11637)
!11652 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3450, file: !3450, line: 175, type: !3451, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11653)
!11653 = !{!11654}
!11654 = !DILocalVariable(name: "level", arg: 1, scope: !11652, file: !3450, line: 175, type: !105)
!11655 = !DILocation(line: 0, scope: !11652)
!11656 = !DILocation(line: 177, column: 2, scope: !11652)
!11657 = !DILocation(line: 189, column: 1, scope: !11652)
!11658 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11481, file: !11481, line: 615, type: !11659, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11661)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{null, !1562, !113}
!11661 = !{!11662, !11663}
!11662 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11658, file: !11481, line: 615, type: !1562)
!11663 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11658, file: !11481, line: 615, type: !113)
!11664 = !DILocation(line: 0, scope: !11658)
!11665 = !DILocation(line: 617, column: 3, scope: !11658)
!11666 = !DILocation(line: 618, column: 1, scope: !11658)
!11667 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11481, file: !11481, line: 1020, type: !11668, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11670)
!11668 = !DISubroutineType(types: !11669)
!11669 = !{null, !1562, !113, !113, !113}
!11670 = !{!11671, !11672, !11673, !11674}
!11671 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11667, file: !11481, line: 1020, type: !1562)
!11672 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11667, file: !11481, line: 1020, type: !113)
!11673 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11667, file: !11481, line: 1020, type: !113)
!11674 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11667, file: !11481, line: 1021, type: !113)
!11675 = !DILocation(line: 0, scope: !11667)
!11676 = !DILocation(line: 1029, column: 30, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !11481, line: 1028, column: 3)
!11678 = distinct !DILexicalBlock(scope: !11667, file: !11481, line: 1023, column: 7)
!11679 = !DILocation(line: 1029, column: 19, scope: !11677)
!11680 = !DILocation(line: 1029, column: 13, scope: !11677)
!11681 = !DILocation(line: 1029, column: 17, scope: !11677)
!11682 = !DILocation(line: 1031, column: 1, scope: !11667)
!11683 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11481, file: !11481, line: 949, type: !11659, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11684)
!11684 = !{!11685, !11686}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11683, file: !11481, line: 949, type: !1562)
!11686 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11683, file: !11481, line: 949, type: !113)
!11687 = !DILocation(line: 0, scope: !11683)
!11688 = !DILocation(line: 951, column: 3, scope: !11683)
!11689 = !DILocation(line: 952, column: 1, scope: !11683)
!11690 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11481, file: !11481, line: 588, type: !11659, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11691)
!11691 = !{!11692, !11693}
!11692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11690, file: !11481, line: 588, type: !1562)
!11693 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11690, file: !11481, line: 588, type: !113)
!11694 = !DILocation(line: 0, scope: !11690)
!11695 = !DILocation(line: 590, column: 3, scope: !11690)
!11696 = !DILocation(line: 591, column: 1, scope: !11690)
!11697 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11481, file: !11481, line: 805, type: !11659, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11698)
!11698 = !{!11699, !11700}
!11699 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11697, file: !11481, line: 805, type: !1562)
!11700 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11697, file: !11481, line: 805, type: !113)
!11701 = !DILocation(line: 0, scope: !11697)
!11702 = !DILocation(line: 807, column: 3, scope: !11697)
!11703 = !DILocation(line: 808, column: 1, scope: !11697)
!11704 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11481, file: !11481, line: 532, type: !11659, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11705)
!11705 = !{!11706, !11707}
!11706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11704, file: !11481, line: 532, type: !1562)
!11707 = !DILocalVariable(name: "Parity", arg: 2, scope: !11704, file: !11481, line: 532, type: !113)
!11708 = !DILocation(line: 0, scope: !11704)
!11709 = !DILocation(line: 534, column: 3, scope: !11704)
!11710 = !DILocation(line: 535, column: 1, scope: !11704)
!11711 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11481, file: !11481, line: 1770, type: !11482, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11712)
!11712 = !{!11713}
!11713 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11711, file: !11481, line: 1770, type: !1562)
!11714 = !DILocation(line: 0, scope: !11711)
!11715 = !DILocation(line: 1772, column: 11, scope: !11711)
!11716 = !DILocation(line: 1772, column: 46, scope: !11711)
!11717 = !DILocation(line: 1772, column: 3, scope: !11711)
!11718 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11481, file: !11481, line: 1737, type: !11482, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11719)
!11719 = !{!11720}
!11720 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11718, file: !11481, line: 1737, type: !1562)
!11721 = !DILocation(line: 0, scope: !11718)
!11722 = !DILocation(line: 1739, column: 11, scope: !11718)
!11723 = !DILocation(line: 1739, column: 3, scope: !11718)
!11724 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11481, file: !11481, line: 1748, type: !11482, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11725)
!11725 = !{!11726}
!11726 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11724, file: !11481, line: 1748, type: !1562)
!11727 = !DILocation(line: 0, scope: !11724)
!11728 = !DILocation(line: 1750, column: 11, scope: !11724)
!11729 = !DILocation(line: 1750, column: 45, scope: !11724)
!11730 = !DILocation(line: 1750, column: 3, scope: !11724)
!11731 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11481, file: !11481, line: 1827, type: !11482, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11732)
!11732 = !{!11733}
!11733 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11731, file: !11481, line: 1827, type: !1562)
!11734 = !DILocation(line: 0, scope: !11731)
!11735 = !DILocation(line: 1829, column: 11, scope: !11731)
!11736 = !DILocation(line: 1829, column: 46, scope: !11731)
!11737 = !DILocation(line: 1829, column: 3, scope: !11731)
!11738 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11481, file: !11481, line: 1992, type: !11544, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11739)
!11739 = !{!11740}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11738, file: !11481, line: 1992, type: !1562)
!11741 = !DILocation(line: 0, scope: !11738)
!11742 = !DILocation(line: 1994, column: 3, scope: !11738)
!11743 = !DILocation(line: 1995, column: 1, scope: !11738)
!11744 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11481, file: !11481, line: 1934, type: !11544, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11745)
!11745 = !{!11746, !11747}
!11746 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11744, file: !11481, line: 1934, type: !1562)
!11747 = !DILocalVariable(name: "tmpreg", scope: !11744, file: !11481, line: 1936, type: !461)
!11748 = !DILocation(line: 0, scope: !11744)
!11749 = !DILocation(line: 1936, column: 3, scope: !11744)
!11750 = !DILocation(line: 1936, column: 17, scope: !11744)
!11751 = !DILocation(line: 1937, column: 20, scope: !11744)
!11752 = !DILocation(line: 1937, column: 10, scope: !11744)
!11753 = !DILocation(line: 1938, column: 10, scope: !11744)
!11754 = !DILocation(line: 1939, column: 20, scope: !11744)
!11755 = !DILocation(line: 1939, column: 10, scope: !11744)
!11756 = !DILocation(line: 1940, column: 10, scope: !11744)
!11757 = !DILocation(line: 1941, column: 1, scope: !11744)
!11758 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11481, file: !11481, line: 1877, type: !11544, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11759)
!11759 = !{!11760, !11761}
!11760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11758, file: !11481, line: 1877, type: !1562)
!11761 = !DILocalVariable(name: "tmpreg", scope: !11758, file: !11481, line: 1879, type: !461)
!11762 = !DILocation(line: 0, scope: !11758)
!11763 = !DILocation(line: 1879, column: 3, scope: !11758)
!11764 = !DILocation(line: 1879, column: 17, scope: !11758)
!11765 = !DILocation(line: 1880, column: 20, scope: !11758)
!11766 = !DILocation(line: 1880, column: 10, scope: !11758)
!11767 = !DILocation(line: 1881, column: 10, scope: !11758)
!11768 = !DILocation(line: 1882, column: 20, scope: !11758)
!11769 = !DILocation(line: 1882, column: 10, scope: !11758)
!11770 = !DILocation(line: 1883, column: 10, scope: !11758)
!11771 = !DILocation(line: 1884, column: 1, scope: !11758)
!11772 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11481, file: !11481, line: 1896, type: !11544, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11773)
!11773 = !{!11774, !11775}
!11774 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11772, file: !11481, line: 1896, type: !1562)
!11775 = !DILocalVariable(name: "tmpreg", scope: !11772, file: !11481, line: 1898, type: !461)
!11776 = !DILocation(line: 0, scope: !11772)
!11777 = !DILocation(line: 1898, column: 3, scope: !11772)
!11778 = !DILocation(line: 1898, column: 17, scope: !11772)
!11779 = !DILocation(line: 1899, column: 20, scope: !11772)
!11780 = !DILocation(line: 1899, column: 10, scope: !11772)
!11781 = !DILocation(line: 1900, column: 10, scope: !11772)
!11782 = !DILocation(line: 1901, column: 20, scope: !11772)
!11783 = !DILocation(line: 1901, column: 10, scope: !11772)
!11784 = !DILocation(line: 1902, column: 10, scope: !11772)
!11785 = !DILocation(line: 1903, column: 1, scope: !11772)
!11786 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11481, file: !11481, line: 1915, type: !11544, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11787)
!11787 = !{!11788, !11789}
!11788 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11786, file: !11481, line: 1915, type: !1562)
!11789 = !DILocalVariable(name: "tmpreg", scope: !11786, file: !11481, line: 1917, type: !461)
!11790 = !DILocation(line: 0, scope: !11786)
!11791 = !DILocation(line: 1917, column: 3, scope: !11786)
!11792 = !DILocation(line: 1917, column: 17, scope: !11786)
!11793 = !DILocation(line: 1918, column: 20, scope: !11786)
!11794 = !DILocation(line: 1918, column: 10, scope: !11786)
!11795 = !DILocation(line: 1919, column: 10, scope: !11786)
!11796 = !DILocation(line: 1920, column: 20, scope: !11786)
!11797 = !DILocation(line: 1920, column: 10, scope: !11786)
!11798 = !DILocation(line: 1921, column: 10, scope: !11786)
!11799 = !DILocation(line: 1922, column: 1, scope: !11786)
!11800 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11481, file: !11481, line: 1814, type: !11482, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11801)
!11801 = !{!11802}
!11802 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11800, file: !11481, line: 1814, type: !1562)
!11803 = !DILocation(line: 0, scope: !11800)
!11804 = !DILocation(line: 1816, column: 11, scope: !11800)
!11805 = !DILocation(line: 1816, column: 46, scope: !11800)
!11806 = !DILocation(line: 1816, column: 3, scope: !11800)
!11807 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11481, file: !11481, line: 2426, type: !11808, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11810)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{null, !1562, !169}
!11810 = !{!11811, !11812}
!11811 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11807, file: !11481, line: 2426, type: !1562)
!11812 = !DILocalVariable(name: "Value", arg: 2, scope: !11807, file: !11481, line: 2426, type: !169)
!11813 = !DILocation(line: 0, scope: !11807)
!11814 = !DILocation(line: 2428, column: 16, scope: !11807)
!11815 = !DILocation(line: 2428, column: 11, scope: !11807)
!11816 = !DILocation(line: 2428, column: 14, scope: !11807)
!11817 = !DILocation(line: 2429, column: 1, scope: !11807)
!11818 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11481, file: !11481, line: 1792, type: !11482, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11819)
!11819 = !{!11820}
!11820 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11818, file: !11481, line: 1792, type: !1562)
!11821 = !DILocation(line: 0, scope: !11818)
!11822 = !DILocation(line: 1794, column: 11, scope: !11818)
!11823 = !DILocation(line: 1794, column: 47, scope: !11818)
!11824 = !DILocation(line: 1794, column: 3, scope: !11818)
!11825 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11481, file: !11481, line: 2403, type: !11826, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{!169, !1562}
!11828 = !{!11829}
!11829 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11825, file: !11481, line: 2403, type: !1562)
!11830 = !DILocation(line: 0, scope: !11825)
!11831 = !DILocation(line: 2405, column: 20, scope: !11825)
!11832 = !DILocation(line: 2405, column: 10, scope: !11825)
!11833 = !DILocation(line: 2405, column: 3, scope: !11825)
!11834 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1616, file: !1616, line: 1583, type: !1542, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11835)
!11835 = !{!11836, !11837, !11838, !11839, !11840, !11841}
!11836 = !DILocalVariable(name: "dev", arg: 1, scope: !11834, file: !1616, line: 1583, type: !1521)
!11837 = !DILocalVariable(name: "config", scope: !11834, file: !1616, line: 1585, type: !11172)
!11838 = !DILocalVariable(name: "data", scope: !11834, file: !1616, line: 1586, type: !11295)
!11839 = !DILocalVariable(name: "ll_parity", scope: !11834, file: !1616, line: 1587, type: !113)
!11840 = !DILocalVariable(name: "ll_datawidth", scope: !11834, file: !1616, line: 1588, type: !113)
!11841 = !DILocalVariable(name: "err", scope: !11834, file: !1616, line: 1589, type: !105)
!11842 = !DILocation(line: 0, scope: !11834)
!11843 = !DILocation(line: 1585, column: 48, scope: !11834)
!11844 = !DILocation(line: 1586, column: 38, scope: !11834)
!11845 = !DILocation(line: 1591, column: 2, scope: !11834)
!11846 = !DILocation(line: 1593, column: 29, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1593, column: 6)
!11848 = !DILocation(line: 1593, column: 7, scope: !11847)
!11849 = !DILocation(line: 1593, column: 6, scope: !11834)
!11850 = !DILocation(line: 1594, column: 3, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !1616, line: 1594, column: 3)
!11852 = distinct !DILexicalBlock(scope: !11853, file: !1616, line: 1594, column: 3)
!11853 = distinct !DILexicalBlock(scope: !11854, file: !1616, line: 1594, column: 3)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !1616, line: 1594, column: 3)
!11855 = distinct !DILexicalBlock(scope: !11847, file: !1616, line: 1593, column: 37)
!11856 = !DILocation(line: 1595, column: 3, scope: !11855)
!11857 = !DILocation(line: 1599, column: 31, scope: !11834)
!11858 = !DILocation(line: 1599, column: 71, scope: !11834)
!11859 = !DILocation(line: 1599, column: 8, scope: !11834)
!11860 = !DILocation(line: 1600, column: 10, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1600, column: 6)
!11862 = !DILocation(line: 1600, column: 6, scope: !11834)
!11863 = !DILocation(line: 1601, column: 3, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !1616, line: 1601, column: 3)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !1616, line: 1601, column: 3)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !1616, line: 1601, column: 3)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !1616, line: 1601, column: 3)
!11868 = distinct !DILexicalBlock(scope: !11861, file: !1616, line: 1600, column: 16)
!11869 = !DILocation(line: 1602, column: 3, scope: !11868)
!11870 = !DILocation(line: 1616, column: 36, scope: !11834)
!11871 = !DILocation(line: 1616, column: 8, scope: !11834)
!11872 = !DILocation(line: 1617, column: 10, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1617, column: 6)
!11874 = !DILocation(line: 1617, column: 6, scope: !11834)
!11875 = !DILocation(line: 1621, column: 27, scope: !11834)
!11876 = !DILocation(line: 1621, column: 2, scope: !11834)
!11877 = !DILocation(line: 1624, column: 40, scope: !11834)
!11878 = !DILocation(line: 1624, column: 2, scope: !11834)
!11879 = !DILocation(line: 1630, column: 14, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1630, column: 6)
!11881 = !DILocation(line: 1630, column: 6, scope: !11834)
!11882 = !DILocation(line: 1640, column: 4, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !1616, line: 1640, column: 4)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1616, line: 1640, column: 4)
!11885 = distinct !DILexicalBlock(scope: !11886, file: !1616, line: 1640, column: 4)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !1616, line: 1640, column: 4)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !1616, line: 1639, column: 28)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !1616, line: 1639, column: 7)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !1616, line: 1638, column: 9)
!11890 = distinct !DILexicalBlock(scope: !11880, file: !1616, line: 1634, column: 13)
!11891 = !DILocation(line: 0, scope: !11880)
!11892 = !DILocation(line: 1649, column: 35, scope: !11834)
!11893 = !DILocation(line: 1649, column: 2, scope: !11834)
!11894 = !DILocation(line: 1654, column: 14, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1654, column: 6)
!11896 = !DILocation(line: 1654, column: 6, scope: !11834)
!11897 = !DILocation(line: 1655, column: 3, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11895, file: !1616, line: 1654, column: 31)
!11899 = !DILocation(line: 1656, column: 2, scope: !11898)
!11900 = !DILocation(line: 1659, column: 37, scope: !11834)
!11901 = !DILocation(line: 1659, column: 2, scope: !11834)
!11902 = !DILocation(line: 1662, column: 14, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11834, file: !1616, line: 1662, column: 6)
!11904 = !DILocation(line: 1662, column: 6, scope: !11834)
!11905 = !DILocation(line: 1663, column: 37, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11903, file: !1616, line: 1662, column: 27)
!11907 = !DILocation(line: 1663, column: 3, scope: !11906)
!11908 = !DILocation(line: 1664, column: 2, scope: !11906)
!11909 = !DILocation(line: 1684, column: 26, scope: !11834)
!11910 = !DILocation(line: 1684, column: 2, scope: !11834)
!11911 = !DILocation(line: 1722, column: 2, scope: !11834)
!11912 = !DILocation(line: 1724, column: 1, scope: !11834)
!11913 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1616, file: !1616, line: 651, type: !11914, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11916)
!11914 = !DISubroutineType(types: !11915)
!11915 = !{null, !1521}
!11916 = !{!11917, !11918, !11919}
!11917 = !DILocalVariable(name: "dev", arg: 1, scope: !11913, file: !1616, line: 651, type: !1521)
!11918 = !DILocalVariable(name: "data", scope: !11913, file: !1616, line: 653, type: !11295)
!11919 = !DILocalVariable(name: "clk", scope: !11913, file: !1616, line: 654, type: !11920)
!11920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!11921 = !DILocation(line: 0, scope: !11913)
!11922 = !DILocation(line: 653, column: 38, scope: !11913)
!11923 = !DILocation(line: 656, column: 8, scope: !11913)
!11924 = !DILocation(line: 656, column: 14, scope: !11913)
!11925 = !DILocation(line: 657, column: 1, scope: !11913)
!11926 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !11927, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!492, !1521}
!11929 = !{!11930}
!11930 = !DILocalVariable(name: "dev", arg: 1, scope: !11926, file: !10291, line: 47, type: !1521)
!11931 = !DILocation(line: 0, scope: !11926)
!11932 = !DILocation(line: 55, column: 2, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11926, file: !10291, line: 55, column: 2)
!11934 = !{i64 2155045226}
!11935 = !DILocation(line: 56, column: 9, scope: !11926)
!11936 = !DILocation(line: 56, column: 2, scope: !11926)
!11937 = distinct !DISubprogram(name: "clock_control_on", scope: !976, file: !976, line: 123, type: !1580, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11938)
!11938 = !{!11939, !11940, !11941}
!11939 = !DILocalVariable(name: "dev", arg: 1, scope: !11937, file: !976, line: 123, type: !1521)
!11940 = !DILocalVariable(name: "sys", arg: 2, scope: !11937, file: !976, line: 124, type: !1069)
!11941 = !DILocalVariable(name: "api", scope: !11937, file: !976, line: 126, type: !1573)
!11942 = !DILocation(line: 0, scope: !11937)
!11943 = !DILocation(line: 127, column: 49, scope: !11937)
!11944 = !DILocation(line: 129, column: 14, scope: !11937)
!11945 = !DILocation(line: 129, column: 9, scope: !11937)
!11946 = !DILocation(line: 129, column: 2, scope: !11937)
!11947 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1656, file: !1656, line: 342, type: !11948, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11950)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!105, !1653, !169}
!11950 = !{!11951, !11952, !11953, !11954}
!11951 = !DILocalVariable(name: "config", arg: 1, scope: !11947, file: !1656, line: 342, type: !1653)
!11952 = !DILocalVariable(name: "id", arg: 2, scope: !11947, file: !1656, line: 343, type: !169)
!11953 = !DILocalVariable(name: "ret", scope: !11947, file: !1656, line: 345, type: !105)
!11954 = !DILocalVariable(name: "state", scope: !11947, file: !1656, line: 346, type: !1659)
!11955 = !DILocation(line: 0, scope: !11947)
!11956 = !DILocation(line: 346, column: 2, scope: !11947)
!11957 = !DILocation(line: 348, column: 8, scope: !11947)
!11958 = !DILocation(line: 349, column: 10, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11947, file: !1656, line: 349, column: 6)
!11960 = !DILocation(line: 349, column: 6, scope: !11947)
!11961 = !DILocation(line: 353, column: 44, scope: !11947)
!11962 = !DILocation(line: 353, column: 9, scope: !11947)
!11963 = !DILocation(line: 353, column: 2, scope: !11947)
!11964 = !DILocation(line: 354, column: 1, scope: !11947)
!11965 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11481, file: !11481, line: 497, type: !11659, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11966)
!11966 = !{!11967, !11968, !11969}
!11967 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11965, file: !11481, line: 497, type: !1562)
!11968 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11965, file: !11481, line: 497, type: !113)
!11969 = !DILocalVariable(name: "val", scope: !11970, file: !11481, line: 499, type: !113)
!11970 = distinct !DILexicalBlock(scope: !11965, file: !11481, line: 499, column: 3)
!11971 = !DILocation(line: 0, scope: !11965)
!11972 = !DILocation(line: 499, column: 3, scope: !11970)
!11973 = !DILocalVariable(name: "addr", arg: 1, scope: !11974, file: !7786, line: 476, type: !1612)
!11974 = distinct !DISubprogram(name: "__LDREXW", scope: !7786, file: !7786, line: 476, type: !11975, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11977)
!11975 = !DISubroutineType(types: !11976)
!11976 = !{!113, !1612}
!11977 = !{!11973, !11978}
!11978 = !DILocalVariable(name: "result", scope: !11974, file: !7786, line: 478, type: !113)
!11979 = !DILocation(line: 0, scope: !11974, inlinedAt: !11980)
!11980 = distinct !DILocation(line: 499, column: 3, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11970, file: !11481, line: 499, column: 3)
!11982 = !DILocation(line: 480, column: 4, scope: !11974, inlinedAt: !11980)
!11983 = !{i64 3531209}
!11984 = !DILocation(line: 499, column: 3, scope: !11981)
!11985 = !DILocation(line: 0, scope: !11970)
!11986 = !DILocalVariable(name: "value", arg: 1, scope: !11987, file: !7786, line: 527, type: !113)
!11987 = distinct !DISubprogram(name: "__STREXW", scope: !7786, file: !7786, line: 527, type: !11988, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11990)
!11988 = !DISubroutineType(types: !11989)
!11989 = !{!113, !113, !1612}
!11990 = !{!11986, !11991, !11992}
!11991 = !DILocalVariable(name: "addr", arg: 2, scope: !11987, file: !7786, line: 527, type: !1612)
!11992 = !DILocalVariable(name: "result", scope: !11987, file: !7786, line: 529, type: !113)
!11993 = !DILocation(line: 0, scope: !11987, inlinedAt: !11994)
!11994 = distinct !DILocation(line: 499, column: 3, scope: !11970)
!11995 = !DILocation(line: 531, column: 4, scope: !11987, inlinedAt: !11994)
!11996 = !{i64 3532645}
!11997 = distinct !{!11997, !11972, !11972}
!11998 = !DILocation(line: 500, column: 1, scope: !11965)
!11999 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11481, file: !11481, line: 850, type: !11668, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !12000)
!12000 = !{!12001, !12002, !12003, !12004}
!12001 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11999, file: !11481, line: 850, type: !1562)
!12002 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11999, file: !11481, line: 850, type: !113)
!12003 = !DILocalVariable(name: "Parity", arg: 3, scope: !11999, file: !11481, line: 850, type: !113)
!12004 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11999, file: !11481, line: 851, type: !113)
!12005 = !DILocation(line: 0, scope: !11999)
!12006 = !DILocation(line: 853, column: 3, scope: !11999)
!12007 = !DILocation(line: 854, column: 3, scope: !11999)
!12008 = !DILocation(line: 855, column: 1, scope: !11999)
!12009 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11481, file: !11481, line: 1337, type: !11544, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !12010)
!12010 = !{!12011}
!12011 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12009, file: !11481, line: 1337, type: !1562)
!12012 = !DILocation(line: 0, scope: !12009)
!12013 = !DILocation(line: 1339, column: 3, scope: !12009)
!12014 = !DILocation(line: 1340, column: 1, scope: !12009)
!12015 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1656, file: !1656, line: 316, type: !12016, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !12018)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!105, !1653, !1659}
!12018 = !{!12019, !12020, !12021}
!12019 = !DILocalVariable(name: "config", arg: 1, scope: !12015, file: !1656, line: 317, type: !1653)
!12020 = !DILocalVariable(name: "state", arg: 2, scope: !12015, file: !1656, line: 318, type: !1659)
!12021 = !DILocalVariable(name: "reg", scope: !12015, file: !1656, line: 320, type: !22)
!12022 = !DILocation(line: 0, scope: !12015)
!12023 = !DILocation(line: 329, column: 39, scope: !12015)
!12024 = !DILocation(line: 329, column: 52, scope: !12015)
!12025 = !DILocation(line: 329, column: 9, scope: !12015)
!12026 = !DILocation(line: 329, column: 2, scope: !12015)
!12027 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11927, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !12028)
!12028 = !{!12029}
!12029 = !DILocalVariable(name: "dev", arg: 1, scope: !12027, file: !481, line: 730, type: !1521)
!12030 = !DILocation(line: 0, scope: !12027)
!12031 = !DILocation(line: 732, column: 9, scope: !12027)
!12032 = !DILocation(line: 732, column: 2, scope: !12027)
!12033 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1777, file: !1777, line: 270, type: !1783, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12034)
!12034 = !{!12035}
!12035 = !DILocalVariable(name: "dev", arg: 1, scope: !12033, file: !1777, line: 270, type: !1785)
!12036 = !DILocation(line: 0, scope: !12033)
!12037 = !DILocation(line: 274, column: 2, scope: !12033)
!12038 = !DILocation(line: 275, column: 12, scope: !12033)
!12039 = !DILocation(line: 276, column: 15, scope: !12033)
!12040 = !DILocation(line: 277, column: 16, scope: !12033)
!12041 = !DILocation(line: 278, column: 15, scope: !12033)
!12042 = !DILocation(line: 279, column: 16, scope: !12033)
!12043 = !DILocation(line: 282, column: 2, scope: !12033)
!12044 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7826, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12045)
!12045 = !{!12046, !12047}
!12046 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12044, file: !679, line: 1814, type: !932)
!12047 = !DILocalVariable(name: "priority", arg: 2, scope: !12044, file: !679, line: 1814, type: !113)
!12048 = !DILocation(line: 0, scope: !12044)
!12049 = !DILocation(line: 1822, column: 46, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12051, file: !679, line: 1821, column: 3)
!12051 = distinct !DILexicalBlock(scope: !12044, file: !679, line: 1816, column: 7)
!12052 = !DILocation(line: 1824, column: 1, scope: !12044)
!12053 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1777, file: !1777, line: 118, type: !7723, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12054)
!12054 = !{!12055, !12056}
!12055 = !DILocalVariable(name: "arg", arg: 1, scope: !12053, file: !1777, line: 118, type: !104)
!12056 = !DILocalVariable(name: "dticks", scope: !12053, file: !1777, line: 121, type: !113)
!12057 = !DILocation(line: 0, scope: !12053)
!12058 = !DILocation(line: 124, column: 2, scope: !12053)
!12059 = !DILocation(line: 129, column: 17, scope: !12053)
!12060 = !DILocation(line: 129, column: 14, scope: !12053)
!12061 = !DILocation(line: 130, column: 15, scope: !12053)
!12062 = !DILocation(line: 145, column: 27, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !1777, line: 132, column: 16)
!12064 = distinct !DILexicalBlock(scope: !12053, file: !1777, line: 132, column: 6)
!12065 = !DILocation(line: 145, column: 25, scope: !12063)
!12066 = !DILocation(line: 145, column: 45, scope: !12063)
!12067 = !DILocation(line: 146, column: 30, scope: !12063)
!12068 = !DILocation(line: 146, column: 20, scope: !12063)
!12069 = !DILocation(line: 147, column: 3, scope: !12063)
!12070 = !DILocation(line: 151, column: 2, scope: !12053)
!12071 = !DILocation(line: 152, column: 1, scope: !12053)
!12072 = distinct !DISubprogram(name: "elapsed", scope: !1777, file: !1777, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12073)
!12073 = !{!12074, !12075, !12076}
!12074 = !DILocalVariable(name: "val1", scope: !12072, file: !1777, line: 87, type: !113)
!12075 = !DILocalVariable(name: "ctrl", scope: !12072, file: !1777, line: 88, type: !113)
!12076 = !DILocalVariable(name: "val2", scope: !12072, file: !1777, line: 89, type: !113)
!12077 = !DILocation(line: 87, column: 27, scope: !12072)
!12078 = !DILocation(line: 0, scope: !12072)
!12079 = !DILocation(line: 88, column: 27, scope: !12072)
!12080 = !DILocation(line: 89, column: 27, scope: !12072)
!12081 = !DILocation(line: 105, column: 12, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12072, file: !1777, line: 105, column: 6)
!12083 = !DILocation(line: 106, column: 6, scope: !12082)
!12084 = !DILocation(line: 107, column: 16, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12082, file: !1777, line: 106, column: 24)
!12086 = !DILocation(line: 111, column: 18, scope: !12085)
!12087 = !DILocation(line: 112, column: 2, scope: !12085)
!12088 = !DILocation(line: 114, column: 20, scope: !12072)
!12089 = !DILocation(line: 114, column: 30, scope: !12072)
!12090 = !DILocation(line: 114, column: 28, scope: !12072)
!12091 = !DILocation(line: 114, column: 2, scope: !12072)
!12092 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1777, file: !1777, line: 154, type: !12093, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12095)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{null, !116, !492}
!12095 = !{!12096, !12097, !12098, !12099, !12100, !12101, !12102, !12107, !12108}
!12096 = !DILocalVariable(name: "ticks", arg: 1, scope: !12092, file: !1777, line: 154, type: !116)
!12097 = !DILocalVariable(name: "idle", arg: 2, scope: !12092, file: !1777, line: 154, type: !492)
!12098 = !DILocalVariable(name: "delay", scope: !12092, file: !1777, line: 169, type: !113)
!12099 = !DILocalVariable(name: "val1", scope: !12092, file: !1777, line: 170, type: !113)
!12100 = !DILocalVariable(name: "val2", scope: !12092, file: !1777, line: 170, type: !113)
!12101 = !DILocalVariable(name: "last_load_", scope: !12092, file: !1777, line: 171, type: !113)
!12102 = !DILocalVariable(name: "key", scope: !12092, file: !1777, line: 176, type: !12103)
!12103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12104)
!12104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12105)
!12105 = !{!12106}
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12104, file: !236, line: 33, baseType: !105, size: 32)
!12107 = !DILocalVariable(name: "pending", scope: !12092, file: !1777, line: 178, type: !113)
!12108 = !DILocalVariable(name: "unannounced", scope: !12092, file: !1777, line: 185, type: !113)
!12109 = !DILocation(line: 0, scope: !12092)
!12110 = !DILocation(line: 162, column: 49, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12092, file: !1777, line: 162, column: 6)
!12112 = !DILocation(line: 163, column: 17, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12111, file: !1777, line: 162, column: 78)
!12114 = !DILocation(line: 164, column: 13, scope: !12113)
!12115 = !DILocation(line: 165, column: 3, scope: !12113)
!12116 = !DILocation(line: 171, column: 24, scope: !12092)
!12117 = !DILocation(line: 173, column: 10, scope: !12092)
!12118 = !DILocation(line: 174, column: 10, scope: !12092)
!12119 = !DILocalVariable(name: "l", arg: 1, scope: !12120, file: !236, line: 136, type: !12123)
!12120 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12121, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12124)
!12121 = !DISubroutineType(types: !12122)
!12122 = !{!12103, !12123}
!12123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!12124 = !{!12119, !12125}
!12125 = !DILocalVariable(name: "k", scope: !12120, file: !236, line: 139, type: !12103)
!12126 = !DILocation(line: 0, scope: !12120, inlinedAt: !12127)
!12127 = distinct !DILocation(line: 176, column: 25, scope: !12092)
!12128 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12133)
!12129 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12130)
!12130 = !{!12131, !12132}
!12131 = !DILocalVariable(name: "key", scope: !12129, file: !7468, line: 44, type: !32)
!12132 = !DILocalVariable(name: "tmp", scope: !12129, file: !7468, line: 53, type: !32)
!12133 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12127)
!12134 = !{i64 2225296}
!12135 = !DILocation(line: 0, scope: !12129, inlinedAt: !12133)
!12136 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12127)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !236, line: 148, column: 2)
!12138 = distinct !DILexicalBlock(scope: !12120, file: !236, line: 148, column: 2)
!12139 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12127)
!12140 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12127)
!12141 = distinct !DILexicalBlock(scope: !12137, file: !236, line: 148, column: 2)
!12142 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12127)
!12143 = !DILocation(line: 178, column: 21, scope: !12092)
!12144 = !DILocation(line: 180, column: 18, scope: !12092)
!12145 = !DILocation(line: 182, column: 14, scope: !12092)
!12146 = !DILocation(line: 183, column: 15, scope: !12092)
!12147 = !DILocation(line: 185, column: 39, scope: !12092)
!12148 = !DILocation(line: 185, column: 37, scope: !12092)
!12149 = !DILocation(line: 187, column: 27, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12092, file: !1777, line: 187, column: 6)
!12151 = !DILocation(line: 187, column: 6, scope: !12092)
!12152 = !DILocation(line: 202, column: 27, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12150, file: !1777, line: 195, column: 9)
!12154 = !DILocation(line: 202, column: 48, scope: !12153)
!12155 = !DILocation(line: 203, column: 9, scope: !12153)
!12156 = !DILocation(line: 204, column: 11, scope: !12153)
!12157 = !DILocation(line: 205, column: 13, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12153, file: !1777, line: 205, column: 7)
!12159 = !DILocation(line: 205, column: 7, scope: !12153)
!12160 = !DILocation(line: 0, scope: !12150)
!12161 = !DILocation(line: 212, column: 18, scope: !12092)
!12162 = !DILocation(line: 214, column: 28, scope: !12092)
!12163 = !DILocation(line: 214, column: 16, scope: !12092)
!12164 = !DILocation(line: 215, column: 15, scope: !12092)
!12165 = !DILocation(line: 227, column: 11, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12092, file: !1777, line: 227, column: 6)
!12167 = !DILocation(line: 227, column: 6, scope: !12092)
!12168 = !DILocation(line: 228, column: 15, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12166, file: !1777, line: 227, column: 19)
!12170 = !DILocation(line: 228, column: 38, scope: !12169)
!12171 = !DILocation(line: 228, column: 24, scope: !12169)
!12172 = !DILocation(line: 229, column: 2, scope: !12169)
!12173 = !DILocation(line: 230, column: 24, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12166, file: !1777, line: 229, column: 9)
!12175 = !DILocation(line: 230, column: 15, scope: !12174)
!12176 = !DILocation(line: 0, scope: !12166)
!12177 = !DILocalVariable(name: "key", arg: 2, scope: !12178, file: !236, line: 190, type: !12103)
!12178 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12179, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12181)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{null, !12123, !12103}
!12181 = !{!12182, !12177}
!12182 = !DILocalVariable(name: "l", arg: 1, scope: !12178, file: !236, line: 189, type: !12123)
!12183 = !DILocation(line: 0, scope: !12178, inlinedAt: !12184)
!12184 = distinct !DILocation(line: 232, column: 2, scope: !12092)
!12185 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12184)
!12186 = distinct !DILexicalBlock(scope: !12187, file: !236, line: 194, column: 2)
!12187 = distinct !DILexicalBlock(scope: !12178, file: !236, line: 194, column: 2)
!12188 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12184)
!12189 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12184)
!12190 = distinct !DILexicalBlock(scope: !12186, file: !236, line: 194, column: 2)
!12191 = !DILocalVariable(name: "key", arg: 1, scope: !12192, file: !7468, line: 84, type: !32)
!12192 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12193)
!12193 = !{!12191}
!12194 = !DILocation(line: 0, scope: !12192, inlinedAt: !12195)
!12195 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12184)
!12196 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12195)
!12197 = !{i64 2226113}
!12198 = !DILocation(line: 234, column: 1, scope: !12092)
!12199 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1777, file: !1777, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12200)
!12200 = !{!12201, !12202}
!12201 = !DILocalVariable(name: "key", scope: !12199, file: !1777, line: 242, type: !12103)
!12202 = !DILocalVariable(name: "cyc", scope: !12199, file: !1777, line: 243, type: !113)
!12203 = !DILocation(line: 0, scope: !12120, inlinedAt: !12204)
!12204 = distinct !DILocation(line: 242, column: 25, scope: !12199)
!12205 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12206)
!12206 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12204)
!12207 = !DILocation(line: 0, scope: !12129, inlinedAt: !12206)
!12208 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12204)
!12209 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12204)
!12210 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12204)
!12211 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12204)
!12212 = !DILocation(line: 0, scope: !12199)
!12213 = !DILocation(line: 243, column: 17, scope: !12199)
!12214 = !DILocation(line: 243, column: 29, scope: !12199)
!12215 = !DILocation(line: 243, column: 43, scope: !12199)
!12216 = !DILocation(line: 0, scope: !12178, inlinedAt: !12217)
!12217 = distinct !DILocation(line: 245, column: 2, scope: !12199)
!12218 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12217)
!12219 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12217)
!12220 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12217)
!12221 = !DILocation(line: 243, column: 27, scope: !12199)
!12222 = !DILocation(line: 243, column: 41, scope: !12199)
!12223 = !DILocation(line: 0, scope: !12192, inlinedAt: !12224)
!12224 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12217)
!12225 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12224)
!12226 = !DILocation(line: 246, column: 13, scope: !12199)
!12227 = !DILocation(line: 246, column: 2, scope: !12199)
!12228 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1777, file: !1777, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !12229)
!12229 = !{!12230, !12231}
!12230 = !DILocalVariable(name: "key", scope: !12228, file: !1777, line: 251, type: !12103)
!12231 = !DILocalVariable(name: "ret", scope: !12228, file: !1777, line: 252, type: !113)
!12232 = !DILocation(line: 0, scope: !12120, inlinedAt: !12233)
!12233 = distinct !DILocation(line: 251, column: 25, scope: !12228)
!12234 = !DILocation(line: 55, column: 2, scope: !12129, inlinedAt: !12235)
!12235 = distinct !DILocation(line: 145, column: 10, scope: !12120, inlinedAt: !12233)
!12236 = !DILocation(line: 0, scope: !12129, inlinedAt: !12235)
!12237 = !DILocation(line: 148, column: 2, scope: !12137, inlinedAt: !12233)
!12238 = !DILocation(line: 148, column: 2, scope: !12138, inlinedAt: !12233)
!12239 = !DILocation(line: 148, column: 2, scope: !12141, inlinedAt: !12233)
!12240 = !DILocation(line: 160, column: 2, scope: !12120, inlinedAt: !12233)
!12241 = !DILocation(line: 0, scope: !12228)
!12242 = !DILocation(line: 252, column: 17, scope: !12228)
!12243 = !DILocation(line: 252, column: 29, scope: !12228)
!12244 = !DILocation(line: 0, scope: !12178, inlinedAt: !12245)
!12245 = distinct !DILocation(line: 254, column: 2, scope: !12228)
!12246 = !DILocation(line: 194, column: 2, scope: !12186, inlinedAt: !12245)
!12247 = !DILocation(line: 194, column: 2, scope: !12187, inlinedAt: !12245)
!12248 = !DILocation(line: 194, column: 2, scope: !12190, inlinedAt: !12245)
!12249 = !DILocation(line: 252, column: 27, scope: !12228)
!12250 = !DILocation(line: 0, scope: !12192, inlinedAt: !12251)
!12251 = distinct !DILocation(line: 215, column: 2, scope: !12178, inlinedAt: !12245)
!12252 = !DILocation(line: 95, column: 2, scope: !12192, inlinedAt: !12251)
!12253 = !DILocation(line: 255, column: 2, scope: !12228)
!12254 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1777, file: !1777, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !397)
!12255 = !DILocation(line: 260, column: 6, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12254, file: !1777, line: 260, column: 6)
!12257 = !DILocation(line: 260, column: 16, scope: !12256)
!12258 = !DILocation(line: 260, column: 6, scope: !12254)
!12259 = !DILocation(line: 261, column: 17, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12256, file: !1777, line: 260, column: 34)
!12261 = !DILocation(line: 262, column: 2, scope: !12260)
!12262 = !DILocation(line: 263, column: 1, scope: !12254)
!12263 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1777, file: !1777, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !397)
!12264 = !DILocation(line: 267, column: 16, scope: !12263)
!12265 = !DILocation(line: 268, column: 1, scope: !12263)
!12266 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12267, file: !12267, line: 9, type: !12268, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2988, retainedNodes: !12291)
!12267 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12268 = !DISubroutineType(types: !12269)
!12269 = !{!105, !12270, !169, !12290}
!12270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12271, size: 32)
!12271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12272)
!12272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1656, line: 60, size: 64, elements: !12273)
!12273 = !{!12274, !12289}
!12274 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12272, file: !1656, line: 69, baseType: !12275, size: 32)
!12275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12276, size: 32)
!12276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12277)
!12277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1656, line: 50, size: 64, elements: !12278)
!12278 = !{!12279, !12287, !12288}
!12279 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12277, file: !1656, line: 52, baseType: !12280, size: 32)
!12280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12281, size: 32)
!12281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12282)
!12282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1667, line: 37, baseType: !12283)
!12283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1667, line: 32, size: 64, elements: !12284)
!12284 = !{!12285, !12286}
!12285 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12283, file: !1667, line: 34, baseType: !113, size: 32)
!12286 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12283, file: !1667, line: 36, baseType: !113, size: 32, offset: 32)
!12287 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12277, file: !1656, line: 54, baseType: !169, size: 8, offset: 32)
!12288 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12277, file: !1656, line: 56, baseType: !169, size: 8, offset: 40)
!12289 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12272, file: !1656, line: 71, baseType: !169, size: 8, offset: 32)
!12290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12275, size: 32)
!12291 = !{!12292, !12293, !12294}
!12292 = !DILocalVariable(name: "config", arg: 1, scope: !12266, file: !12267, line: 9, type: !12270)
!12293 = !DILocalVariable(name: "id", arg: 2, scope: !12266, file: !12267, line: 9, type: !169)
!12294 = !DILocalVariable(name: "state", arg: 3, scope: !12266, file: !12267, line: 10, type: !12290)
!12295 = !DILocation(line: 0, scope: !12266)
!12296 = !DILocation(line: 12, column: 20, scope: !12266)
!12297 = !DILocation(line: 13, column: 27, scope: !12266)
!12298 = !DILocation(line: 13, column: 42, scope: !12266)
!12299 = !DILocation(line: 13, column: 19, scope: !12266)
!12300 = !DILocation(line: 13, column: 16, scope: !12266)
!12301 = !DILocation(line: 13, column: 2, scope: !12266)
!12302 = distinct !{!12302, !12301, !12303}
!12303 = !DILocation(line: 19, column: 2, scope: !12266)
!12304 = !DILocation(line: 14, column: 23, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12306, file: !12267, line: 14, column: 7)
!12306 = distinct !DILexicalBlock(scope: !12266, file: !12267, line: 13, column: 54)
!12307 = !DILocation(line: 14, column: 10, scope: !12305)
!12308 = !DILocation(line: 18, column: 11, scope: !12306)
!12309 = !DILocation(line: 14, column: 7, scope: !12306)
!12310 = !DILocation(line: 22, column: 1, scope: !12266)
!12311 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1896, file: !1896, line: 193, type: !12312, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !12321)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{!105, !12314, !169, !22}
!12314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12315, size: 32)
!12315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12316)
!12316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1667, line: 37, baseType: !12317)
!12317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1667, line: 32, size: 64, elements: !12318)
!12318 = !{!12319, !12320}
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12317, file: !1667, line: 34, baseType: !113, size: 32)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12317, file: !1667, line: 36, baseType: !113, size: 32, offset: 32)
!12321 = !{!12322, !12323, !12324, !12325, !12326, !12327, !12328, !12329, !12331}
!12322 = !DILocalVariable(name: "pins", arg: 1, scope: !12311, file: !1896, line: 193, type: !12314)
!12323 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12311, file: !1896, line: 193, type: !169)
!12324 = !DILocalVariable(name: "reg", arg: 3, scope: !12311, file: !1896, line: 194, type: !22)
!12325 = !DILocalVariable(name: "pin", scope: !12311, file: !1896, line: 196, type: !113)
!12326 = !DILocalVariable(name: "mux", scope: !12311, file: !1896, line: 196, type: !113)
!12327 = !DILocalVariable(name: "pin_cgf", scope: !12311, file: !1896, line: 197, type: !113)
!12328 = !DILocalVariable(name: "ret", scope: !12311, file: !1896, line: 198, type: !105)
!12329 = !DILocalVariable(name: "i", scope: !12330, file: !1896, line: 209, type: !169)
!12330 = distinct !DILexicalBlock(scope: !12311, file: !1896, line: 209, column: 2)
!12331 = !DILocalVariable(name: "gpio_out", scope: !12332, file: !1896, line: 239, type: !113)
!12332 = distinct !DILexicalBlock(scope: !12333, file: !1896, line: 238, column: 55)
!12333 = distinct !DILexicalBlock(scope: !12334, file: !1896, line: 238, column: 14)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !1896, line: 236, column: 14)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !1896, line: 234, column: 7)
!12336 = distinct !DILexicalBlock(scope: !12337, file: !1896, line: 209, column: 41)
!12337 = distinct !DILexicalBlock(scope: !12330, file: !1896, line: 209, column: 2)
!12338 = !DILocation(line: 0, scope: !12311)
!12339 = !DILocation(line: 0, scope: !12330)
!12340 = !DILocation(line: 209, column: 25, scope: !12337)
!12341 = !DILocation(line: 209, column: 2, scope: !12330)
!12342 = distinct !{!12342, !12341, !12343}
!12343 = !DILocation(line: 259, column: 2, scope: !12330)
!12344 = !DILocation(line: 210, column: 17, scope: !12336)
!12345 = !DILocation(line: 234, column: 7, scope: !12335)
!12346 = !DILocation(line: 234, column: 33, scope: !12335)
!12347 = !DILocation(line: 234, column: 7, scope: !12336)
!12348 = !DILocation(line: 235, column: 22, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12335, file: !1896, line: 234, column: 49)
!12350 = !DILocation(line: 235, column: 29, scope: !12349)
!12351 = !DILocation(line: 236, column: 3, scope: !12349)
!12352 = !DILocation(line: 236, column: 14, scope: !12335)
!12353 = !DILocation(line: 239, column: 32, scope: !12332)
!12354 = !DILocation(line: 0, scope: !12332)
!12355 = !DILocation(line: 241, column: 8, scope: !12332)
!12356 = !DILocation(line: 246, column: 3, scope: !12332)
!12357 = !DILocation(line: 252, column: 9, scope: !12336)
!12358 = !DILocation(line: 255, column: 9, scope: !12336)
!12359 = !DILocation(line: 256, column: 11, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12336, file: !1896, line: 256, column: 7)
!12361 = !DILocation(line: 209, column: 37, scope: !12337)
!12362 = !DILocation(line: 256, column: 7, scope: !12336)
!12363 = !DILocation(line: 262, column: 1, scope: !12311)
!12364 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1896, file: !1896, line: 176, type: !12365, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !12367)
!12365 = !DISubroutineType(types: !12366)
!12366 = !{!105, !113, !113, !113}
!12367 = !{!12368, !12369, !12370, !12371}
!12368 = !DILocalVariable(name: "pin", arg: 1, scope: !12364, file: !1896, line: 176, type: !113)
!12369 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12364, file: !1896, line: 176, type: !113)
!12370 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12364, file: !1896, line: 176, type: !113)
!12371 = !DILocalVariable(name: "port_device", scope: !12364, file: !1896, line: 178, type: !1826)
!12372 = !DILocation(line: 0, scope: !12364)
!12373 = !DILocation(line: 180, column: 22, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12364, file: !1896, line: 180, column: 6)
!12375 = !DILocation(line: 180, column: 6, scope: !12364)
!12376 = !DILocation(line: 180, column: 6, scope: !12374)
!12377 = !DILocation(line: 184, column: 16, scope: !12364)
!12378 = !DILocation(line: 186, column: 19, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12364, file: !1896, line: 186, column: 6)
!12380 = !DILocation(line: 186, column: 28, scope: !12379)
!12381 = !DILocation(line: 186, column: 33, scope: !12379)
!12382 = !DILocation(line: 186, column: 6, scope: !12364)
!12383 = !DILocation(line: 190, column: 43, scope: !12364)
!12384 = !DILocation(line: 190, column: 9, scope: !12364)
!12385 = !DILocation(line: 190, column: 2, scope: !12364)
!12386 = !DILocation(line: 191, column: 1, scope: !12364)
!12387 = distinct !DISubprogram(name: "device_is_ready", scope: !10291, file: !10291, line: 47, type: !12388, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !12390)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!492, !1826}
!12390 = !{!12391}
!12391 = !DILocalVariable(name: "dev", arg: 1, scope: !12387, file: !10291, line: 47, type: !1826)
!12392 = !DILocation(line: 0, scope: !12387)
!12393 = !DILocation(line: 55, column: 2, scope: !12394)
!12394 = distinct !DILexicalBlock(scope: !12387, file: !10291, line: 55, column: 2)
!12395 = !{i64 2149463366}
!12396 = !DILocation(line: 56, column: 9, scope: !12387)
!12397 = !DILocation(line: 56, column: 2, scope: !12387)
!12398 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !12388, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !12399)
!12399 = !{!12400}
!12400 = !DILocalVariable(name: "dev", arg: 1, scope: !12398, file: !481, line: 730, type: !1826)
!12401 = !DILocation(line: 0, scope: !12398)
!12402 = !DILocation(line: 732, column: 9, scope: !12398)
!12403 = !DILocation(line: 732, column: 2, scope: !12398)
!12404 = distinct !DISubprogram(name: "SystemInit", scope: !1945, file: !1945, line: 167, type: !266, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !397)
!12405 = !DILocation(line: 182, column: 1, scope: !12404)
!12406 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1945, file: !1945, line: 220, type: !266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1904, retainedNodes: !12407)
!12407 = !{!12408, !12409, !12410, !12411, !12412}
!12408 = !DILocalVariable(name: "tmp", scope: !12406, file: !1945, line: 222, type: !113)
!12409 = !DILocalVariable(name: "pllvco", scope: !12406, file: !1945, line: 222, type: !113)
!12410 = !DILocalVariable(name: "pllp", scope: !12406, file: !1945, line: 222, type: !113)
!12411 = !DILocalVariable(name: "pllsource", scope: !12406, file: !1945, line: 222, type: !113)
!12412 = !DILocalVariable(name: "pllm", scope: !12406, file: !1945, line: 222, type: !113)
!12413 = !DILocation(line: 0, scope: !12406)
!12414 = !DILocation(line: 225, column: 14, scope: !12406)
!12415 = !DILocation(line: 225, column: 19, scope: !12406)
!12416 = !DILocation(line: 227, column: 3, scope: !12406)
!12417 = !DILocation(line: 240, column: 25, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12406, file: !1945, line: 228, column: 3)
!12419 = !DILocation(line: 241, column: 19, scope: !12418)
!12420 = !DILocation(line: 241, column: 27, scope: !12418)
!12421 = !DILocation(line: 0, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12418, file: !1945, line: 243, column: 11)
!12423 = !DILocation(line: 254, column: 22, scope: !12418)
!12424 = !DILocation(line: 254, column: 62, scope: !12418)
!12425 = !DILocation(line: 255, column: 31, scope: !12418)
!12426 = !DILocation(line: 256, column: 7, scope: !12418)
!12427 = !DILocation(line: 0, scope: !12418)
!12428 = !DILocation(line: 263, column: 30, scope: !12406)
!12429 = !DILocation(line: 263, column: 52, scope: !12406)
!12430 = !DILocation(line: 263, column: 9, scope: !12406)
!12431 = !DILocation(line: 265, column: 19, scope: !12406)
!12432 = !DILocation(line: 266, column: 1, scope: !12406)
!12433 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12434, file: !12434, line: 200, type: !12435, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!12434 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12435 = !DISubroutineType(types: !12436)
!12436 = !{!12437}
!12437 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2994, line: 44, baseType: !2993)
!12438 = !DILocation(line: 202, column: 3, scope: !12433)
!12439 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12434, file: !12434, line: 219, type: !12440, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !12465)
!12440 = !DISubroutineType(types: !12441)
!12441 = !{!12437, !12442}
!12442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12443, size: 32)
!12443 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12444, line: 70, baseType: !12445)
!12444 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12444, line: 49, size: 416, elements: !12446)
!12446 = !{!12447, !12448, !12449, !12450, !12451, !12452, !12453}
!12447 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12445, file: !12444, line: 51, baseType: !113, size: 32)
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12445, file: !12444, line: 54, baseType: !113, size: 32, offset: 32)
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12445, file: !12444, line: 57, baseType: !113, size: 32, offset: 64)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12445, file: !12444, line: 60, baseType: !113, size: 32, offset: 96)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12445, file: !12444, line: 63, baseType: !113, size: 32, offset: 128)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12445, file: !12444, line: 66, baseType: !113, size: 32, offset: 160)
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12445, file: !12444, line: 69, baseType: !12454, size: 224, offset: 192)
!12454 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12455, line: 73, baseType: !12456)
!12455 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12455, line: 45, size: 224, elements: !12457)
!12457 = !{!12458, !12459, !12460, !12461, !12462, !12463, !12464}
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12456, file: !12455, line: 47, baseType: !113, size: 32)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12456, file: !12455, line: 50, baseType: !113, size: 32, offset: 32)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12456, file: !12455, line: 53, baseType: !113, size: 32, offset: 64)
!12461 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12456, file: !12455, line: 56, baseType: !113, size: 32, offset: 96)
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12456, file: !12455, line: 60, baseType: !113, size: 32, offset: 128)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12456, file: !12455, line: 63, baseType: !113, size: 32, offset: 160)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !12456, file: !12455, line: 68, baseType: !113, size: 32, offset: 192)
!12465 = !{!12466, !12467, !12468, !12469, !12473}
!12466 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12439, file: !12434, line: 219, type: !12442)
!12467 = !DILocalVariable(name: "tickstart", scope: !12439, file: !12434, line: 221, type: !113)
!12468 = !DILocalVariable(name: "pll_config", scope: !12439, file: !12434, line: 221, type: !113)
!12469 = !DILocalVariable(name: "pwrclkchanged", scope: !12470, file: !12434, line: 391, type: !12472)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !12434, line: 390, column: 3)
!12471 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 389, column: 6)
!12472 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !971, line: 188, baseType: !3000)
!12473 = !DILocalVariable(name: "tmpreg", scope: !12474, file: !12434, line: 400, type: !461)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !12434, line: 400, column: 7)
!12475 = distinct !DILexicalBlock(scope: !12476, file: !12434, line: 399, column: 5)
!12476 = distinct !DILexicalBlock(scope: !12470, file: !12434, line: 398, column: 8)
!12477 = !DILocation(line: 0, scope: !12439)
!12478 = !DILocation(line: 224, column: 24, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 224, column: 6)
!12480 = !DILocation(line: 224, column: 6, scope: !12439)
!12481 = !DILocation(line: 232, column: 27, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 232, column: 6)
!12483 = !DILocation(line: 232, column: 43, scope: !12482)
!12484 = !DILocation(line: 232, column: 69, scope: !12482)
!12485 = !DILocation(line: 232, column: 6, scope: !12439)
!12486 = !DILocation(line: 237, column: 9, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !12434, line: 237, column: 8)
!12488 = distinct !DILexicalBlock(scope: !12482, file: !12434, line: 233, column: 3)
!12489 = !DILocation(line: 237, column: 39, scope: !12487)
!12490 = !DILocation(line: 237, column: 60, scope: !12487)
!12491 = !DILocation(line: 238, column: 9, scope: !12487)
!12492 = !DILocation(line: 238, column: 39, scope: !12487)
!12493 = !DILocation(line: 238, column: 60, scope: !12487)
!12494 = !DILocation(line: 238, column: 70, scope: !12487)
!12495 = !DILocation(line: 238, column: 78, scope: !12487)
!12496 = !DILocation(line: 238, column: 100, scope: !12487)
!12497 = !DILocation(line: 237, column: 8, scope: !12488)
!12498 = !DILocation(line: 240, column: 11, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12500, file: !12434, line: 240, column: 10)
!12500 = distinct !DILexicalBlock(scope: !12487, file: !12434, line: 239, column: 5)
!12501 = !DILocation(line: 240, column: 57, scope: !12499)
!12502 = !DILocation(line: 240, column: 80, scope: !12499)
!12503 = !DILocation(line: 240, column: 89, scope: !12499)
!12504 = !DILocation(line: 240, column: 10, scope: !12500)
!12505 = !DILocation(line: 248, column: 7, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !12434, line: 248, column: 7)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !12434, line: 248, column: 7)
!12508 = distinct !DILexicalBlock(scope: !12487, file: !12434, line: 246, column: 5)
!12509 = !DILocation(line: 248, column: 7, scope: !12507)
!12510 = !DILocation(line: 248, column: 7, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12506, file: !12434, line: 248, column: 7)
!12512 = !DILocation(line: 248, column: 7, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !12434, line: 248, column: 7)
!12514 = distinct !DILexicalBlock(scope: !12506, file: !12434, line: 248, column: 7)
!12515 = !DILocation(line: 248, column: 7, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12514, file: !12434, line: 248, column: 7)
!12517 = !DILocation(line: 0, scope: !12506)
!12518 = !DILocation(line: 251, column: 30, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12508, file: !12434, line: 251, column: 10)
!12520 = !DILocation(line: 251, column: 40, scope: !12519)
!12521 = !DILocation(line: 0, scope: !12519)
!12522 = !DILocation(line: 251, column: 10, scope: !12508)
!12523 = !DILocation(line: 257, column: 15, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12519, file: !12434, line: 252, column: 7)
!12525 = !DILocation(line: 257, column: 51, scope: !12524)
!12526 = !DILocation(line: 257, column: 9, scope: !12524)
!12527 = !DILocation(line: 259, column: 15, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12529, file: !12434, line: 259, column: 14)
!12529 = distinct !DILexicalBlock(scope: !12524, file: !12434, line: 258, column: 9)
!12530 = !DILocation(line: 259, column: 29, scope: !12528)
!12531 = !DILocation(line: 259, column: 43, scope: !12528)
!12532 = !DILocation(line: 259, column: 14, scope: !12529)
!12533 = distinct !{!12533, !12526, !12534}
!12534 = !DILocation(line: 263, column: 9, scope: !12524)
!12535 = !DILocation(line: 271, column: 15, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12519, file: !12434, line: 266, column: 7)
!12537 = !DILocation(line: 271, column: 9, scope: !12536)
!12538 = !DILocation(line: 273, column: 15, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12540, file: !12434, line: 273, column: 14)
!12540 = distinct !DILexicalBlock(scope: !12536, file: !12434, line: 272, column: 9)
!12541 = !DILocation(line: 273, column: 29, scope: !12539)
!12542 = !DILocation(line: 273, column: 43, scope: !12539)
!12543 = !DILocation(line: 273, column: 14, scope: !12540)
!12544 = distinct !{!12544, !12537, !12545}
!12545 = !DILocation(line: 277, column: 9, scope: !12536)
!12546 = !DILocation(line: 282, column: 27, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 282, column: 6)
!12548 = !DILocation(line: 282, column: 43, scope: !12547)
!12549 = !DILocation(line: 282, column: 69, scope: !12547)
!12550 = !DILocation(line: 282, column: 6, scope: !12439)
!12551 = !DILocation(line: 289, column: 9, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12434, line: 289, column: 8)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !12434, line: 283, column: 3)
!12554 = !DILocation(line: 289, column: 39, scope: !12552)
!12555 = !DILocation(line: 289, column: 60, scope: !12552)
!12556 = !DILocation(line: 290, column: 9, scope: !12552)
!12557 = !DILocation(line: 290, column: 39, scope: !12552)
!12558 = !DILocation(line: 290, column: 60, scope: !12552)
!12559 = !DILocation(line: 290, column: 70, scope: !12552)
!12560 = !DILocation(line: 290, column: 78, scope: !12552)
!12561 = !DILocation(line: 290, column: 100, scope: !12552)
!12562 = !DILocation(line: 289, column: 8, scope: !12553)
!12563 = !DILocation(line: 293, column: 11, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !12434, line: 293, column: 10)
!12565 = distinct !DILexicalBlock(scope: !12552, file: !12434, line: 291, column: 5)
!12566 = !DILocation(line: 293, column: 57, scope: !12564)
!12567 = !DILocation(line: 293, column: 80, scope: !12564)
!12568 = !DILocation(line: 293, column: 89, scope: !12564)
!12569 = !DILocation(line: 293, column: 10, scope: !12565)
!12570 = !DILocation(line: 307, column: 30, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12572, file: !12434, line: 307, column: 10)
!12572 = distinct !DILexicalBlock(scope: !12552, file: !12434, line: 305, column: 5)
!12573 = !DILocation(line: 307, column: 39, scope: !12571)
!12574 = !DILocation(line: 307, column: 10, scope: !12572)
!12575 = !DILocation(line: 310, column: 9, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12571, file: !12434, line: 308, column: 7)
!12577 = !DILocation(line: 313, column: 21, scope: !12576)
!12578 = !DILocation(line: 316, column: 9, scope: !12576)
!12579 = !DILocation(line: 316, column: 15, scope: !12576)
!12580 = !DILocation(line: 316, column: 51, scope: !12576)
!12581 = !DILocation(line: 318, column: 15, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12583, file: !12434, line: 318, column: 14)
!12583 = distinct !DILexicalBlock(scope: !12576, file: !12434, line: 317, column: 9)
!12584 = !DILocation(line: 318, column: 29, scope: !12582)
!12585 = !DILocation(line: 318, column: 43, scope: !12582)
!12586 = !DILocation(line: 318, column: 14, scope: !12583)
!12587 = distinct !{!12587, !12578, !12588}
!12588 = !DILocation(line: 322, column: 9, scope: !12576)
!12589 = !DILocation(line: 330, column: 9, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12571, file: !12434, line: 328, column: 7)
!12591 = !DILocation(line: 333, column: 21, scope: !12590)
!12592 = !DILocation(line: 336, column: 9, scope: !12590)
!12593 = !DILocation(line: 336, column: 15, scope: !12590)
!12594 = !DILocation(line: 338, column: 15, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !12434, line: 338, column: 14)
!12596 = distinct !DILexicalBlock(scope: !12590, file: !12434, line: 337, column: 9)
!12597 = !DILocation(line: 338, column: 29, scope: !12595)
!12598 = !DILocation(line: 338, column: 43, scope: !12595)
!12599 = !DILocation(line: 338, column: 14, scope: !12596)
!12600 = distinct !{!12600, !12592, !12601}
!12601 = !DILocation(line: 342, column: 9, scope: !12590)
!12602 = !DILocation(line: 0, scope: !12552)
!12603 = !DILocation(line: 347, column: 27, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 347, column: 6)
!12605 = !DILocation(line: 347, column: 43, scope: !12604)
!12606 = !DILocation(line: 347, column: 69, scope: !12604)
!12607 = !DILocation(line: 347, column: 6, scope: !12439)
!12608 = !DILocation(line: 353, column: 28, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !12434, line: 353, column: 8)
!12610 = distinct !DILexicalBlock(scope: !12604, file: !12434, line: 348, column: 3)
!12611 = !DILocation(line: 353, column: 37, scope: !12609)
!12612 = !DILocation(line: 353, column: 8, scope: !12610)
!12613 = !DILocation(line: 356, column: 7, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12609, file: !12434, line: 354, column: 5)
!12615 = !DILocation(line: 359, column: 19, scope: !12614)
!12616 = !DILocation(line: 362, column: 7, scope: !12614)
!12617 = !DILocation(line: 362, column: 13, scope: !12614)
!12618 = !DILocation(line: 362, column: 49, scope: !12614)
!12619 = !DILocation(line: 364, column: 13, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !12434, line: 364, column: 12)
!12621 = distinct !DILexicalBlock(scope: !12614, file: !12434, line: 363, column: 7)
!12622 = !DILocation(line: 364, column: 27, scope: !12620)
!12623 = !DILocation(line: 364, column: 41, scope: !12620)
!12624 = !DILocation(line: 364, column: 12, scope: !12621)
!12625 = distinct !{!12625, !12616, !12626}
!12626 = !DILocation(line: 368, column: 7, scope: !12614)
!12627 = !DILocation(line: 373, column: 7, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12609, file: !12434, line: 371, column: 5)
!12629 = !DILocation(line: 376, column: 19, scope: !12628)
!12630 = !DILocation(line: 379, column: 7, scope: !12628)
!12631 = !DILocation(line: 379, column: 13, scope: !12628)
!12632 = !DILocation(line: 381, column: 13, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12434, line: 381, column: 12)
!12634 = distinct !DILexicalBlock(scope: !12628, file: !12434, line: 380, column: 7)
!12635 = !DILocation(line: 381, column: 27, scope: !12633)
!12636 = !DILocation(line: 381, column: 41, scope: !12633)
!12637 = !DILocation(line: 381, column: 12, scope: !12634)
!12638 = distinct !{!12638, !12630, !12639}
!12639 = !DILocation(line: 385, column: 7, scope: !12628)
!12640 = !DILocation(line: 389, column: 27, scope: !12471)
!12641 = !DILocation(line: 389, column: 43, scope: !12471)
!12642 = !DILocation(line: 389, column: 69, scope: !12471)
!12643 = !DILocation(line: 389, column: 6, scope: !12439)
!12644 = !DILocation(line: 0, scope: !12470)
!12645 = !DILocation(line: 398, column: 8, scope: !12476)
!12646 = !DILocation(line: 398, column: 8, scope: !12470)
!12647 = !DILocation(line: 400, column: 7, scope: !12474)
!12648 = !DILocation(line: 400, column: 7, scope: !12475)
!12649 = !DILocation(line: 402, column: 5, scope: !12475)
!12650 = !DILocation(line: 404, column: 8, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12470, file: !12434, line: 404, column: 8)
!12652 = !DILocation(line: 404, column: 8, scope: !12470)
!12653 = !DILocation(line: 407, column: 7, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12651, file: !12434, line: 405, column: 5)
!12655 = !DILocation(line: 410, column: 19, scope: !12654)
!12656 = !DILocation(line: 412, column: 7, scope: !12654)
!12657 = !DILocation(line: 412, column: 13, scope: !12654)
!12658 = !DILocation(line: 414, column: 13, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !12434, line: 414, column: 12)
!12660 = distinct !DILexicalBlock(scope: !12654, file: !12434, line: 413, column: 7)
!12661 = !DILocation(line: 414, column: 27, scope: !12659)
!12662 = !DILocation(line: 414, column: 40, scope: !12659)
!12663 = !DILocation(line: 414, column: 12, scope: !12660)
!12664 = distinct !{!12664, !12656, !12665}
!12665 = !DILocation(line: 418, column: 7, scope: !12654)
!12666 = !DILocation(line: 422, column: 5, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !12434, line: 422, column: 5)
!12668 = distinct !DILexicalBlock(scope: !12470, file: !12434, line: 422, column: 5)
!12669 = !DILocation(line: 422, column: 5, scope: !12668)
!12670 = !DILocation(line: 422, column: 5, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12667, file: !12434, line: 422, column: 5)
!12672 = !DILocation(line: 422, column: 5, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12674, file: !12434, line: 422, column: 5)
!12674 = distinct !DILexicalBlock(scope: !12667, file: !12434, line: 422, column: 5)
!12675 = !DILocation(line: 422, column: 5, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12674, file: !12434, line: 422, column: 5)
!12677 = !DILocation(line: 0, scope: !12667)
!12678 = !DILocation(line: 424, column: 28, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12470, file: !12434, line: 424, column: 8)
!12680 = !DILocation(line: 424, column: 38, scope: !12679)
!12681 = !DILocation(line: 0, scope: !12679)
!12682 = !DILocation(line: 424, column: 8, scope: !12470)
!12683 = !DILocation(line: 430, column: 13, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12679, file: !12434, line: 425, column: 5)
!12685 = !DILocation(line: 430, column: 49, scope: !12684)
!12686 = !DILocation(line: 430, column: 7, scope: !12684)
!12687 = !DILocation(line: 432, column: 13, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !12434, line: 432, column: 12)
!12689 = distinct !DILexicalBlock(scope: !12684, file: !12434, line: 431, column: 7)
!12690 = !DILocation(line: 432, column: 27, scope: !12688)
!12691 = !DILocation(line: 432, column: 41, scope: !12688)
!12692 = !DILocation(line: 432, column: 12, scope: !12689)
!12693 = distinct !{!12693, !12686, !12694}
!12694 = !DILocation(line: 436, column: 7, scope: !12684)
!12695 = !DILocation(line: 444, column: 13, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12679, file: !12434, line: 439, column: 5)
!12697 = !DILocation(line: 444, column: 7, scope: !12696)
!12698 = !DILocation(line: 446, column: 13, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !12434, line: 446, column: 12)
!12700 = distinct !DILexicalBlock(scope: !12696, file: !12434, line: 445, column: 7)
!12701 = !DILocation(line: 446, column: 27, scope: !12699)
!12702 = !DILocation(line: 446, column: 41, scope: !12699)
!12703 = !DILocation(line: 446, column: 12, scope: !12700)
!12704 = distinct !{!12704, !12697, !12705}
!12705 = !DILocation(line: 450, column: 7, scope: !12696)
!12706 = !DILocation(line: 454, column: 8, scope: !12470)
!12707 = !DILocation(line: 456, column: 7, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12709, file: !12434, line: 455, column: 5)
!12709 = distinct !DILexicalBlock(scope: !12470, file: !12434, line: 454, column: 8)
!12710 = !DILocation(line: 457, column: 5, scope: !12708)
!12711 = !DILocation(line: 462, column: 31, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12439, file: !12434, line: 462, column: 7)
!12713 = !DILocation(line: 462, column: 41, scope: !12712)
!12714 = !DILocation(line: 462, column: 7, scope: !12439)
!12715 = !DILocation(line: 465, column: 8, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !12434, line: 465, column: 8)
!12717 = distinct !DILexicalBlock(scope: !12712, file: !12434, line: 463, column: 3)
!12718 = !DILocation(line: 465, column: 38, scope: !12716)
!12719 = !DILocation(line: 465, column: 8, scope: !12717)
!12720 = !DILocation(line: 467, column: 44, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !12434, line: 467, column: 10)
!12722 = distinct !DILexicalBlock(scope: !12716, file: !12434, line: 466, column: 5)
!12723 = !DILocation(line: 0, scope: !12721)
!12724 = !DILocation(line: 467, column: 10, scope: !12722)
!12725 = !DILocation(line: 483, column: 15, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !12434, line: 468, column: 7)
!12727 = !DILocation(line: 483, column: 9, scope: !12726)
!12728 = !DILocation(line: 485, column: 15, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !12434, line: 485, column: 14)
!12730 = distinct !DILexicalBlock(scope: !12726, file: !12434, line: 484, column: 9)
!12731 = !DILocation(line: 485, column: 29, scope: !12729)
!12732 = !DILocation(line: 485, column: 43, scope: !12729)
!12733 = !DILocation(line: 485, column: 14, scope: !12730)
!12734 = distinct !{!12734, !12727, !12735}
!12735 = !DILocation(line: 489, column: 9, scope: !12726)
!12736 = !DILocation(line: 492, column: 9, scope: !12726)
!12737 = !DILocation(line: 498, column: 9, scope: !12726)
!12738 = !DILocation(line: 501, column: 21, scope: !12726)
!12739 = !DILocation(line: 504, column: 9, scope: !12726)
!12740 = !DILocation(line: 504, column: 15, scope: !12726)
!12741 = !DILocation(line: 504, column: 51, scope: !12726)
!12742 = !DILocation(line: 506, column: 15, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !12434, line: 506, column: 14)
!12744 = distinct !DILexicalBlock(scope: !12726, file: !12434, line: 505, column: 9)
!12745 = !DILocation(line: 506, column: 29, scope: !12743)
!12746 = !DILocation(line: 506, column: 43, scope: !12743)
!12747 = !DILocation(line: 506, column: 14, scope: !12744)
!12748 = distinct !{!12748, !12739, !12749}
!12749 = !DILocation(line: 510, column: 9, scope: !12726)
!12750 = !DILocation(line: 521, column: 15, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12721, file: !12434, line: 513, column: 7)
!12752 = !DILocation(line: 521, column: 9, scope: !12751)
!12753 = !DILocation(line: 523, column: 15, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !12434, line: 523, column: 14)
!12755 = distinct !DILexicalBlock(scope: !12751, file: !12434, line: 522, column: 9)
!12756 = !DILocation(line: 523, column: 29, scope: !12754)
!12757 = !DILocation(line: 523, column: 43, scope: !12754)
!12758 = !DILocation(line: 523, column: 14, scope: !12755)
!12759 = distinct !{!12759, !12752, !12760}
!12760 = !DILocation(line: 527, column: 9, scope: !12751)
!12761 = !DILocation(line: 533, column: 44, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !12434, line: 533, column: 10)
!12763 = distinct !DILexicalBlock(scope: !12716, file: !12434, line: 531, column: 5)
!12764 = !DILocation(line: 533, column: 10, scope: !12763)
!12765 = !DILocation(line: 540, column: 27, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12762, file: !12434, line: 538, column: 7)
!12767 = !DILocation(line: 543, column: 14, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12766, file: !12434, line: 542, column: 13)
!12769 = !DILocation(line: 543, column: 81, scope: !12768)
!12770 = !DILocation(line: 543, column: 55, scope: !12768)
!12771 = !DILocation(line: 543, column: 92, scope: !12768)
!12772 = !DILocation(line: 544, column: 14, scope: !12768)
!12773 = !DILocation(line: 544, column: 80, scope: !12768)
!12774 = !DILocation(line: 544, column: 53, scope: !12768)
!12775 = !DILocation(line: 544, column: 111, scope: !12768)
!12776 = !DILocation(line: 545, column: 14, scope: !12768)
!12777 = !DILocation(line: 545, column: 80, scope: !12768)
!12778 = !DILocation(line: 545, column: 86, scope: !12768)
!12779 = !DILocation(line: 545, column: 53, scope: !12768)
!12780 = !DILocation(line: 545, column: 111, scope: !12768)
!12781 = !DILocation(line: 546, column: 14, scope: !12768)
!12782 = !DILocation(line: 546, column: 82, scope: !12768)
!12783 = !DILocation(line: 546, column: 101, scope: !12768)
!12784 = !DILocation(line: 546, column: 53, scope: !12768)
!12785 = !DILocation(line: 546, column: 126, scope: !12768)
!12786 = !DILocation(line: 547, column: 14, scope: !12768)
!12787 = !DILocation(line: 547, column: 80, scope: !12768)
!12788 = !DILocation(line: 547, column: 85, scope: !12768)
!12789 = !DILocation(line: 547, column: 53, scope: !12768)
!12790 = !DILocation(line: 547, column: 111, scope: !12768)
!12791 = !DILocation(line: 548, column: 14, scope: !12768)
!12792 = !DILocation(line: 548, column: 80, scope: !12768)
!12793 = !DILocation(line: 548, column: 85, scope: !12768)
!12794 = !DILocation(line: 548, column: 53, scope: !12768)
!12795 = !DILocation(line: 542, column: 13, scope: !12766)
!12796 = !DILocation(line: 563, column: 3, scope: !12439)
!12797 = !DILocation(line: 564, column: 1, scope: !12439)
!12798 = !DISubprogram(name: "HAL_GetTick", scope: !12799, file: !12799, line: 234, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12799 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12800 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12434, file: !12434, line: 591, type: !12801, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !12812)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{!12437, !12803, !113}
!12803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12804, size: 32)
!12804 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12444, line: 92, baseType: !12805)
!12805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12444, line: 75, size: 160, elements: !12806)
!12806 = !{!12807, !12808, !12809, !12810, !12811}
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12805, file: !12444, line: 77, baseType: !113, size: 32)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12805, file: !12444, line: 80, baseType: !113, size: 32, offset: 32)
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12805, file: !12444, line: 83, baseType: !113, size: 32, offset: 64)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12805, file: !12444, line: 86, baseType: !113, size: 32, offset: 96)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12805, file: !12444, line: 89, baseType: !113, size: 32, offset: 128)
!12812 = !{!12813, !12814, !12815}
!12813 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12800, file: !12434, line: 591, type: !12803)
!12814 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12800, file: !12434, line: 591, type: !113)
!12815 = !DILocalVariable(name: "tickstart", scope: !12800, file: !12434, line: 593, type: !113)
!12816 = !DILocation(line: 0, scope: !12800)
!12817 = !DILocation(line: 596, column: 24, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 596, column: 6)
!12819 = !DILocation(line: 596, column: 6, scope: !12800)
!12820 = !DILocation(line: 610, column: 17, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 610, column: 6)
!12822 = !DILocation(line: 610, column: 15, scope: !12821)
!12823 = !DILocation(line: 610, column: 6, scope: !12800)
!12824 = !DILocation(line: 613, column: 5, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12821, file: !12434, line: 611, column: 3)
!12826 = !DILocation(line: 617, column: 8, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12825, file: !12434, line: 617, column: 8)
!12828 = !DILocation(line: 617, column: 34, scope: !12827)
!12829 = !DILocation(line: 617, column: 8, scope: !12825)
!12830 = !DILocation(line: 624, column: 27, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 624, column: 6)
!12832 = !DILocation(line: 624, column: 38, scope: !12831)
!12833 = !DILocation(line: 624, column: 60, scope: !12831)
!12834 = !DILocation(line: 624, column: 6, scope: !12800)
!12835 = !DILocation(line: 628, column: 40, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !12434, line: 628, column: 8)
!12837 = distinct !DILexicalBlock(scope: !12831, file: !12434, line: 625, column: 3)
!12838 = !DILocation(line: 628, column: 63, scope: !12836)
!12839 = !DILocation(line: 628, column: 8, scope: !12837)
!12840 = !DILocation(line: 630, column: 7, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12836, file: !12434, line: 629, column: 5)
!12842 = !DILocation(line: 633, column: 29, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12837, file: !12434, line: 633, column: 8)
!12844 = !DILocation(line: 631, column: 5, scope: !12841)
!12845 = !DILocation(line: 633, column: 40, scope: !12843)
!12846 = !DILocation(line: 633, column: 63, scope: !12843)
!12847 = !DILocation(line: 633, column: 8, scope: !12837)
!12848 = !DILocation(line: 635, column: 7, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12843, file: !12434, line: 634, column: 5)
!12850 = !DILocation(line: 636, column: 5, scope: !12849)
!12851 = !DILocation(line: 639, column: 5, scope: !12837)
!12852 = !DILocation(line: 643, column: 27, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 643, column: 6)
!12854 = !DILocation(line: 640, column: 3, scope: !12837)
!12855 = !DILocation(line: 643, column: 38, scope: !12853)
!12856 = !DILocation(line: 643, column: 62, scope: !12853)
!12857 = !DILocation(line: 643, column: 6, scope: !12800)
!12858 = !DILocation(line: 648, column: 27, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12434, line: 648, column: 8)
!12860 = distinct !DILexicalBlock(scope: !12853, file: !12434, line: 644, column: 3)
!12861 = !DILocation(line: 648, column: 8, scope: !12860)
!12862 = !DILocation(line: 651, column: 10, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !12434, line: 651, column: 10)
!12864 = distinct !DILexicalBlock(scope: !12859, file: !12434, line: 649, column: 5)
!12865 = !DILocation(line: 651, column: 46, scope: !12863)
!12866 = !DILocation(line: 651, column: 10, scope: !12864)
!12867 = !DILocation(line: 661, column: 10, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !12434, line: 661, column: 10)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !12434, line: 659, column: 5)
!12870 = distinct !DILexicalBlock(scope: !12859, file: !12434, line: 657, column: 13)
!12871 = !DILocation(line: 661, column: 46, scope: !12868)
!12872 = !DILocation(line: 661, column: 10, scope: !12869)
!12873 = !DILocation(line: 670, column: 10, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !12434, line: 670, column: 10)
!12875 = distinct !DILexicalBlock(scope: !12870, file: !12434, line: 668, column: 5)
!12876 = !DILocation(line: 670, column: 46, scope: !12874)
!12877 = !DILocation(line: 670, column: 10, scope: !12875)
!12878 = !DILocation(line: 676, column: 5, scope: !12860)
!12879 = !DILocation(line: 679, column: 17, scope: !12860)
!12880 = !DILocation(line: 681, column: 5, scope: !12860)
!12881 = !DILocation(line: 681, column: 12, scope: !12860)
!12882 = !DILocation(line: 681, column: 65, scope: !12860)
!12883 = !DILocation(line: 681, column: 78, scope: !12860)
!12884 = !DILocation(line: 681, column: 42, scope: !12860)
!12885 = !DILocation(line: 683, column: 12, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12887, file: !12434, line: 683, column: 11)
!12887 = distinct !DILexicalBlock(scope: !12860, file: !12434, line: 682, column: 5)
!12888 = !DILocation(line: 683, column: 26, scope: !12886)
!12889 = !DILocation(line: 683, column: 39, scope: !12886)
!12890 = !DILocation(line: 683, column: 11, scope: !12887)
!12891 = distinct !{!12891, !12880, !12892}
!12892 = !DILocation(line: 687, column: 5, scope: !12860)
!12893 = !DILocation(line: 691, column: 17, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 691, column: 6)
!12895 = !DILocation(line: 691, column: 15, scope: !12894)
!12896 = !DILocation(line: 691, column: 6, scope: !12800)
!12897 = !DILocation(line: 694, column: 5, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12894, file: !12434, line: 692, column: 3)
!12899 = !DILocation(line: 698, column: 8, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12898, file: !12434, line: 698, column: 8)
!12901 = !DILocation(line: 698, column: 34, scope: !12900)
!12902 = !DILocation(line: 698, column: 8, scope: !12898)
!12903 = !DILocation(line: 705, column: 27, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 705, column: 6)
!12905 = !DILocation(line: 705, column: 38, scope: !12904)
!12906 = !DILocation(line: 705, column: 61, scope: !12904)
!12907 = !DILocation(line: 705, column: 6, scope: !12800)
!12908 = !DILocation(line: 708, column: 5, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12904, file: !12434, line: 706, column: 3)
!12910 = !DILocation(line: 712, column: 27, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12800, file: !12434, line: 712, column: 6)
!12912 = !DILocation(line: 709, column: 3, scope: !12909)
!12913 = !DILocation(line: 712, column: 38, scope: !12911)
!12914 = !DILocation(line: 712, column: 61, scope: !12911)
!12915 = !DILocation(line: 712, column: 6, scope: !12800)
!12916 = !DILocation(line: 715, column: 5, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12911, file: !12434, line: 713, column: 3)
!12918 = !DILocation(line: 716, column: 3, scope: !12917)
!12919 = !DILocation(line: 719, column: 21, scope: !12800)
!12920 = !DILocation(line: 719, column: 70, scope: !12800)
!12921 = !DILocation(line: 719, column: 91, scope: !12800)
!12922 = !DILocation(line: 719, column: 50, scope: !12800)
!12923 = !DILocation(line: 719, column: 47, scope: !12800)
!12924 = !DILocation(line: 719, column: 19, scope: !12800)
!12925 = !DILocation(line: 722, column: 17, scope: !12800)
!12926 = !DILocation(line: 722, column: 3, scope: !12800)
!12927 = !DILocation(line: 724, column: 3, scope: !12800)
!12928 = !DILocation(line: 725, column: 1, scope: !12800)
!12929 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12434, file: !12434, line: 885, type: !395, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !12930)
!12930 = !{!12931, !12932, !12933, !12934}
!12931 = !DILocalVariable(name: "pllm", scope: !12929, file: !12434, line: 887, type: !113)
!12932 = !DILocalVariable(name: "pllvco", scope: !12929, file: !12434, line: 887, type: !113)
!12933 = !DILocalVariable(name: "pllp", scope: !12929, file: !12434, line: 887, type: !113)
!12934 = !DILocalVariable(name: "sysclockfreq", scope: !12929, file: !12434, line: 888, type: !113)
!12935 = !DILocation(line: 0, scope: !12929)
!12936 = !DILocation(line: 891, column: 16, scope: !12929)
!12937 = !DILocation(line: 891, column: 21, scope: !12929)
!12938 = !DILocation(line: 891, column: 3, scope: !12929)
!12939 = !DILocation(line: 907, column: 19, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12941, file: !12434, line: 904, column: 5)
!12941 = distinct !DILexicalBlock(scope: !12929, file: !12434, line: 892, column: 3)
!12942 = !DILocation(line: 907, column: 27, scope: !12940)
!12943 = !DILocation(line: 908, column: 10, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12940, file: !12434, line: 908, column: 10)
!12945 = !DILocation(line: 0, scope: !12944)
!12946 = !DILocation(line: 918, column: 23, scope: !12940)
!12947 = !DILocation(line: 918, column: 82, scope: !12940)
!12948 = !DILocation(line: 920, column: 28, scope: !12940)
!12949 = !DILocation(line: 921, column: 7, scope: !12940)
!12950 = !DILocation(line: 0, scope: !12941)
!12951 = !DILocation(line: 929, column: 3, scope: !12929)
!12952 = !DISubprogram(name: "HAL_InitTick", scope: !12799, file: !12799, line: 223, type: !12953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12953 = !DISubroutineType(types: !12954)
!12954 = !{!12437, !113}
!12955 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12434, file: !12434, line: 775, type: !12956, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !12958)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{null, !113, !113, !113}
!12958 = !{!12959, !12960, !12961, !12962, !12972}
!12959 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12955, file: !12434, line: 775, type: !113)
!12960 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12955, file: !12434, line: 775, type: !113)
!12961 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12955, file: !12434, line: 775, type: !113)
!12962 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12955, file: !12434, line: 777, type: !12963)
!12963 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12964, line: 62, baseType: !12965)
!12964 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12964, line: 46, size: 160, elements: !12966)
!12966 = !{!12967, !12968, !12969, !12970, !12971}
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12965, file: !12964, line: 48, baseType: !113, size: 32)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12965, file: !12964, line: 51, baseType: !113, size: 32, offset: 32)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12965, file: !12964, line: 54, baseType: !113, size: 32, offset: 64)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12965, file: !12964, line: 57, baseType: !113, size: 32, offset: 96)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12965, file: !12964, line: 60, baseType: !113, size: 32, offset: 128)
!12972 = !DILocalVariable(name: "tmpreg", scope: !12973, file: !12434, line: 787, type: !461)
!12973 = distinct !DILexicalBlock(scope: !12974, file: !12434, line: 787, column: 5)
!12974 = distinct !DILexicalBlock(scope: !12975, file: !12434, line: 783, column: 3)
!12975 = distinct !DILexicalBlock(scope: !12955, file: !12434, line: 782, column: 6)
!12976 = !DILocation(line: 0, scope: !12955)
!12977 = !DILocation(line: 777, column: 3, scope: !12955)
!12978 = !DILocation(line: 777, column: 20, scope: !12955)
!12979 = !DILocation(line: 782, column: 15, scope: !12975)
!12980 = !DILocation(line: 782, column: 6, scope: !12955)
!12981 = !DILocation(line: 787, column: 5, scope: !12973)
!12982 = !DILocation(line: 787, column: 5, scope: !12974)
!12983 = !DILocation(line: 790, column: 21, scope: !12974)
!12984 = !DILocation(line: 790, column: 25, scope: !12974)
!12985 = !DILocation(line: 791, column: 21, scope: !12974)
!12986 = !DILocation(line: 791, column: 26, scope: !12974)
!12987 = !DILocation(line: 792, column: 21, scope: !12974)
!12988 = !DILocation(line: 792, column: 27, scope: !12974)
!12989 = !DILocation(line: 793, column: 21, scope: !12974)
!12990 = !DILocation(line: 793, column: 26, scope: !12974)
!12991 = !DILocation(line: 794, column: 21, scope: !12974)
!12992 = !DILocation(line: 794, column: 31, scope: !12974)
!12993 = !DILocation(line: 795, column: 5, scope: !12974)
!12994 = !DILocation(line: 798, column: 5, scope: !12974)
!12995 = !DILocation(line: 804, column: 3, scope: !12974)
!12996 = !DILocation(line: 830, column: 1, scope: !12955)
!12997 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12964, file: !12964, line: 224, type: !12998, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{null, !3062, !13000}
!13000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12963, size: 32)
!13001 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12434, file: !12434, line: 841, type: !266, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13002 = !DILocation(line: 843, column: 38, scope: !13001)
!13003 = !DILocation(line: 844, column: 1, scope: !13001)
!13004 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12434, file: !12434, line: 850, type: !266, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13005 = !DILocation(line: 852, column: 38, scope: !13004)
!13006 = !DILocation(line: 853, column: 1, scope: !13004)
!13007 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12434, file: !12434, line: 941, type: !395, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13008 = !DILocation(line: 943, column: 10, scope: !13007)
!13009 = !DILocation(line: 943, column: 3, scope: !13007)
!13010 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12434, file: !12434, line: 952, type: !395, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13011 = !DILocation(line: 955, column: 11, scope: !13010)
!13012 = !DILocation(line: 955, column: 56, scope: !13010)
!13013 = !DILocation(line: 955, column: 78, scope: !13010)
!13014 = !DILocation(line: 955, column: 36, scope: !13010)
!13015 = !DILocation(line: 955, column: 33, scope: !13010)
!13016 = !DILocation(line: 955, column: 3, scope: !13010)
!13017 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12434, file: !12434, line: 964, type: !395, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13018 = !DILocation(line: 967, column: 11, scope: !13017)
!13019 = !DILocation(line: 967, column: 55, scope: !13017)
!13020 = !DILocation(line: 967, column: 77, scope: !13017)
!13021 = !DILocation(line: 967, column: 35, scope: !13017)
!13022 = !DILocation(line: 967, column: 32, scope: !13017)
!13023 = !DILocation(line: 967, column: 3, scope: !13017)
!13024 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12434, file: !12434, line: 977, type: !13025, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !13027)
!13025 = !DISubroutineType(types: !13026)
!13026 = !{null, !12442}
!13027 = !{!13028}
!13028 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13024, file: !12434, line: 977, type: !12442)
!13029 = !DILocation(line: 0, scope: !13024)
!13030 = !DILocation(line: 980, column: 22, scope: !13024)
!13031 = !DILocation(line: 980, column: 37, scope: !13024)
!13032 = !DILocation(line: 983, column: 12, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13024, file: !12434, line: 983, column: 6)
!13034 = !DILocation(line: 983, column: 15, scope: !13033)
!13035 = !DILocation(line: 983, column: 31, scope: !13033)
!13036 = !DILocation(line: 983, column: 6, scope: !13024)
!13037 = !DILocation(line: 985, column: 24, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13033, file: !12434, line: 984, column: 3)
!13039 = !DILocation(line: 985, column: 33, scope: !13038)
!13040 = !DILocation(line: 986, column: 3, scope: !13038)
!13041 = !DILocation(line: 987, column: 17, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13033, file: !12434, line: 987, column: 11)
!13043 = !DILocation(line: 987, column: 20, scope: !13042)
!13044 = !DILocation(line: 987, column: 35, scope: !13042)
!13045 = !DILocation(line: 0, scope: !13042)
!13046 = !DILocation(line: 987, column: 11, scope: !13033)
!13047 = !DILocation(line: 989, column: 33, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13042, file: !12434, line: 988, column: 3)
!13049 = !DILocation(line: 990, column: 3, scope: !13048)
!13050 = !DILocation(line: 993, column: 33, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13042, file: !12434, line: 992, column: 3)
!13052 = !DILocation(line: 997, column: 12, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13024, file: !12434, line: 997, column: 6)
!13054 = !DILocation(line: 997, column: 15, scope: !13053)
!13055 = !DILocation(line: 1003, column: 24, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13053, file: !12434, line: 1002, column: 3)
!13057 = !DILocation(line: 1003, column: 33, scope: !13056)
!13058 = !DILocation(line: 1006, column: 61, scope: !13024)
!13059 = !DILocation(line: 1006, column: 81, scope: !13024)
!13060 = !DILocation(line: 1006, column: 22, scope: !13024)
!13061 = !DILocation(line: 1006, column: 42, scope: !13024)
!13062 = !DILocation(line: 1009, column: 12, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13024, file: !12434, line: 1009, column: 6)
!13064 = !DILocation(line: 1009, column: 17, scope: !13063)
!13065 = !DILocation(line: 1009, column: 35, scope: !13063)
!13066 = !DILocation(line: 1009, column: 6, scope: !13024)
!13067 = !DILocation(line: 1011, column: 24, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13063, file: !12434, line: 1010, column: 3)
!13069 = !DILocation(line: 1011, column: 33, scope: !13068)
!13070 = !DILocation(line: 1012, column: 3, scope: !13068)
!13071 = !DILocation(line: 1013, column: 17, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13063, file: !12434, line: 1013, column: 11)
!13073 = !DILocation(line: 1013, column: 22, scope: !13072)
!13074 = !DILocation(line: 1013, column: 39, scope: !13072)
!13075 = !DILocation(line: 0, scope: !13072)
!13076 = !DILocation(line: 1013, column: 11, scope: !13063)
!13077 = !DILocation(line: 1015, column: 33, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13072, file: !12434, line: 1014, column: 3)
!13079 = !DILocation(line: 1016, column: 3, scope: !13078)
!13080 = !DILocation(line: 1019, column: 33, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13072, file: !12434, line: 1018, column: 3)
!13082 = !DILocation(line: 1023, column: 12, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13024, file: !12434, line: 1023, column: 6)
!13084 = !DILocation(line: 1023, column: 16, scope: !13083)
!13085 = !DILocation(line: 1029, column: 24, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13083, file: !12434, line: 1028, column: 3)
!13087 = !DILocation(line: 1029, column: 33, scope: !13086)
!13088 = !DILocation(line: 1033, column: 12, scope: !13089)
!13089 = distinct !DILexicalBlock(scope: !13024, file: !12434, line: 1033, column: 6)
!13090 = !DILocation(line: 1033, column: 15, scope: !13089)
!13091 = !DILocation(line: 1033, column: 30, scope: !13089)
!13092 = !DILocation(line: 1033, column: 6, scope: !13024)
!13093 = !DILocation(line: 1039, column: 28, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13089, file: !12434, line: 1038, column: 3)
!13095 = !DILocation(line: 1039, column: 37, scope: !13094)
!13096 = !DILocation(line: 1041, column: 54, scope: !13024)
!13097 = !DILocation(line: 1041, column: 62, scope: !13024)
!13098 = !DILocation(line: 1041, column: 26, scope: !13024)
!13099 = !DILocation(line: 1041, column: 36, scope: !13024)
!13100 = !DILocation(line: 1042, column: 49, scope: !13024)
!13101 = !DILocation(line: 1042, column: 57, scope: !13024)
!13102 = !DILocation(line: 1042, column: 26, scope: !13024)
!13103 = !DILocation(line: 1042, column: 31, scope: !13024)
!13104 = !DILocation(line: 1043, column: 50, scope: !13024)
!13105 = !DILocation(line: 1043, column: 78, scope: !13024)
!13106 = !DILocation(line: 1043, column: 26, scope: !13024)
!13107 = !DILocation(line: 1043, column: 31, scope: !13024)
!13108 = !DILocation(line: 1044, column: 52, scope: !13024)
!13109 = !DILocation(line: 1044, column: 102, scope: !13024)
!13110 = !DILocation(line: 1044, column: 109, scope: !13024)
!13111 = !DILocation(line: 1044, column: 26, scope: !13024)
!13112 = !DILocation(line: 1044, column: 31, scope: !13024)
!13113 = !DILocation(line: 1045, column: 50, scope: !13024)
!13114 = !DILocation(line: 1045, column: 78, scope: !13024)
!13115 = !DILocation(line: 1045, column: 26, scope: !13024)
!13116 = !DILocation(line: 1045, column: 31, scope: !13024)
!13117 = !DILocation(line: 1046, column: 1, scope: !13024)
!13118 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12434, file: !12434, line: 1056, type: !13119, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !13121)
!13119 = !DISubroutineType(types: !13120)
!13120 = !{null, !12803, !1025}
!13121 = !{!13122, !13123}
!13122 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13118, file: !12434, line: 1056, type: !12803)
!13123 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13118, file: !12434, line: 1056, type: !1025)
!13124 = !DILocation(line: 0, scope: !13118)
!13125 = !DILocation(line: 1059, column: 22, scope: !13118)
!13126 = !DILocation(line: 1059, column: 32, scope: !13118)
!13127 = !DILocation(line: 1062, column: 53, scope: !13118)
!13128 = !DILocation(line: 1062, column: 58, scope: !13118)
!13129 = !DILocation(line: 1062, column: 22, scope: !13118)
!13130 = !DILocation(line: 1062, column: 35, scope: !13118)
!13131 = !DILocation(line: 1065, column: 54, scope: !13118)
!13132 = !DILocation(line: 1065, column: 59, scope: !13118)
!13133 = !DILocation(line: 1065, column: 22, scope: !13118)
!13134 = !DILocation(line: 1065, column: 36, scope: !13118)
!13135 = !DILocation(line: 1068, column: 55, scope: !13118)
!13136 = !DILocation(line: 1068, column: 60, scope: !13118)
!13137 = !DILocation(line: 1068, column: 22, scope: !13118)
!13138 = !DILocation(line: 1068, column: 37, scope: !13118)
!13139 = !DILocation(line: 1071, column: 56, scope: !13118)
!13140 = !DILocation(line: 1071, column: 79, scope: !13118)
!13141 = !DILocation(line: 1071, column: 22, scope: !13118)
!13142 = !DILocation(line: 1071, column: 37, scope: !13118)
!13143 = !DILocation(line: 1074, column: 34, scope: !13118)
!13144 = !DILocation(line: 1074, column: 38, scope: !13118)
!13145 = !DILocation(line: 1074, column: 14, scope: !13118)
!13146 = !DILocation(line: 1075, column: 1, scope: !13118)
!13147 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12434, file: !12434, line: 1082, type: !266, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13148 = !DILocation(line: 1085, column: 6, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13147, file: !12434, line: 1085, column: 6)
!13150 = !DILocation(line: 1085, column: 6, scope: !13147)
!13151 = !DILocation(line: 1088, column: 5, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13149, file: !12434, line: 1086, column: 3)
!13153 = !DILocation(line: 1091, column: 5, scope: !13152)
!13154 = !DILocation(line: 1092, column: 3, scope: !13152)
!13155 = !DILocation(line: 1093, column: 1, scope: !13147)
!13156 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12434, file: !12434, line: 1099, type: !266, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !397)
!13157 = !DILocation(line: 1104, column: 1, scope: !13156)
!13158 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13159, file: !13159, line: 257, type: !7881, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13160)
!13159 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13160 = !{!13161}
!13161 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13158, file: !13159, line: 257, type: !113)
!13162 = !DILocation(line: 0, scope: !13158)
!13163 = !DILocation(line: 260, column: 3, scope: !13158)
!13164 = !DILocation(line: 261, column: 1, scope: !13158)
!13165 = distinct !DISubprogram(name: "LL_InitTick", scope: !13166, file: !13166, line: 260, type: !10793, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13167)
!13166 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13167 = !{!13168, !13169}
!13168 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13165, file: !13166, line: 260, type: !113)
!13169 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13165, file: !13166, line: 260, type: !113)
!13170 = !DILocation(line: 0, scope: !13165)
!13171 = !DILocation(line: 263, column: 46, scope: !13165)
!13172 = !DILocation(line: 263, column: 55, scope: !13165)
!13173 = !DILocation(line: 263, column: 18, scope: !13165)
!13174 = !DILocation(line: 264, column: 18, scope: !13165)
!13175 = !DILocation(line: 265, column: 18, scope: !13165)
!13176 = !DILocation(line: 267, column: 1, scope: !13165)
!13177 = distinct !DISubprogram(name: "LL_mDelay", scope: !13159, file: !13159, line: 273, type: !7881, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13178)
!13178 = !{!13179, !13180}
!13179 = !DILocalVariable(name: "Delay", arg: 1, scope: !13177, file: !13159, line: 273, type: !113)
!13180 = !DILocalVariable(name: "tmp", scope: !13177, file: !13159, line: 275, type: !461)
!13181 = !DILocation(line: 0, scope: !13177)
!13182 = !DILocation(line: 275, column: 3, scope: !13177)
!13183 = !DILocation(line: 275, column: 18, scope: !13177)
!13184 = !DILocation(line: 275, column: 33, scope: !13177)
!13185 = !DILocation(line: 277, column: 10, scope: !13177)
!13186 = !DILocation(line: 280, column: 12, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13177, file: !13159, line: 280, column: 6)
!13188 = !DILocation(line: 285, column: 3, scope: !13177)
!13189 = !DILocation(line: 287, column: 18, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !13159, line: 287, column: 8)
!13191 = distinct !DILexicalBlock(scope: !13177, file: !13159, line: 286, column: 3)
!13192 = !DILocation(line: 292, column: 1, scope: !13177)
!13193 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13159, file: !13159, line: 323, type: !7881, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13194)
!13194 = !{!13195}
!13195 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13193, file: !13159, line: 323, type: !113)
!13196 = !DILocation(line: 0, scope: !13193)
!13197 = !DILocation(line: 326, column: 19, scope: !13193)
!13198 = !DILocation(line: 327, column: 1, scope: !13193)
!13199 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13159, file: !13159, line: 338, type: !13200, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13203)
!13200 = !DISubroutineType(types: !13201)
!13201 = !{!13202, !113}
!13202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !971, line: 201, baseType: !970)
!13203 = !{!13204, !13205, !13206, !13207, !13208}
!13204 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13199, file: !13159, line: 338, type: !113)
!13205 = !DILocalVariable(name: "timeout", scope: !13199, file: !13159, line: 340, type: !113)
!13206 = !DILocalVariable(name: "getlatency", scope: !13199, file: !13159, line: 341, type: !113)
!13207 = !DILocalVariable(name: "latency", scope: !13199, file: !13159, line: 342, type: !113)
!13208 = !DILocalVariable(name: "status", scope: !13199, file: !13159, line: 343, type: !13202)
!13209 = !DILocation(line: 0, scope: !13199)
!13210 = !DILocation(line: 347, column: 21, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13199, file: !13159, line: 347, column: 6)
!13212 = !DILocation(line: 347, column: 6, scope: !13199)
!13213 = !DILocation(line: 353, column: 8, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !13159, line: 353, column: 8)
!13215 = distinct !DILexicalBlock(scope: !13211, file: !13159, line: 352, column: 3)
!13216 = !DILocation(line: 353, column: 40, scope: !13214)
!13217 = !DILocation(line: 353, column: 8, scope: !13215)
!13218 = !DILocation(line: 374, column: 55, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !13159, line: 374, column: 10)
!13220 = distinct !DILexicalBlock(scope: !13214, file: !13159, line: 354, column: 5)
!13221 = !DILocation(line: 368, column: 26, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13220, file: !13159, line: 368, column: 10)
!13223 = !DILocation(line: 368, column: 55, scope: !13222)
!13224 = !DILocation(line: 380, column: 57, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !13159, line: 380, column: 12)
!13226 = distinct !DILexicalBlock(scope: !13219, file: !13159, line: 379, column: 7)
!13227 = !DILocation(line: 387, column: 8, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13215, file: !13159, line: 387, column: 8)
!13229 = !DILocation(line: 387, column: 40, scope: !13228)
!13230 = !DILocation(line: 387, column: 8, scope: !13215)
!13231 = !DILocation(line: 407, column: 26, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13233, file: !13159, line: 407, column: 10)
!13233 = distinct !DILexicalBlock(scope: !13228, file: !13159, line: 388, column: 5)
!13234 = !DILocation(line: 407, column: 55, scope: !13232)
!13235 = !DILocation(line: 413, column: 28, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !13159, line: 413, column: 12)
!13237 = distinct !DILexicalBlock(scope: !13232, file: !13159, line: 412, column: 7)
!13238 = !DILocation(line: 413, column: 57, scope: !13236)
!13239 = !DILocation(line: 0, scope: !13215)
!13240 = !DILocation(line: 420, column: 8, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13215, file: !13159, line: 420, column: 8)
!13242 = !DILocation(line: 420, column: 40, scope: !13241)
!13243 = !DILocation(line: 420, column: 8, scope: !13215)
!13244 = !DILocation(line: 429, column: 26, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !13159, line: 429, column: 10)
!13246 = distinct !DILexicalBlock(scope: !13241, file: !13159, line: 421, column: 5)
!13247 = !DILocation(line: 429, column: 55, scope: !13245)
!13248 = !DILocation(line: 435, column: 28, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13250, file: !13159, line: 435, column: 12)
!13250 = distinct !DILexicalBlock(scope: !13245, file: !13159, line: 434, column: 7)
!13251 = !DILocation(line: 435, column: 57, scope: !13249)
!13252 = !DILocation(line: 444, column: 5, scope: !13215)
!13253 = !DILocation(line: 448, column: 5, scope: !13215)
!13254 = !DILocation(line: 451, column: 18, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13215, file: !13159, line: 449, column: 5)
!13256 = !DILocation(line: 452, column: 12, scope: !13255)
!13257 = !DILocation(line: 453, column: 26, scope: !13215)
!13258 = !DILocation(line: 453, column: 38, scope: !13215)
!13259 = !DILocation(line: 453, column: 5, scope: !13255)
!13260 = distinct !{!13260, !13253, !13261}
!13261 = !DILocation(line: 453, column: 54, scope: !13215)
!13262 = !DILocation(line: 0, scope: !13211)
!13263 = !DILocation(line: 464, column: 3, scope: !13199)
!13264 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13265, file: !13265, line: 519, type: !395, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13265 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13266 = !DILocation(line: 521, column: 21, scope: !13264)
!13267 = !DILocation(line: 521, column: 3, scope: !13264)
!13268 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7489, file: !7489, line: 1543, type: !7881, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13269)
!13269 = !{!13270}
!13270 = !DILocalVariable(name: "Latency", arg: 1, scope: !13268, file: !7489, line: 1543, type: !113)
!13271 = !DILocation(line: 0, scope: !13268)
!13272 = !DILocation(line: 1545, column: 3, scope: !13268)
!13273 = !DILocation(line: 1546, column: 1, scope: !13268)
!13274 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7489, file: !7489, line: 1569, type: !395, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13275 = !DILocation(line: 1571, column: 21, scope: !13274)
!13276 = !DILocation(line: 1571, column: 3, scope: !13274)
!13277 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13159, file: !13159, line: 483, type: !13278, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13294)
!13278 = !DISubroutineType(types: !13279)
!13279 = !{!13202, !13280, !13287}
!13280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13281, size: 32)
!13281 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13166, line: 114, baseType: !13282)
!13282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13166, line: 94, size: 96, elements: !13283)
!13283 = !{!13284, !13285, !13286}
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13282, file: !13166, line: 96, baseType: !113, size: 32)
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13282, file: !13166, line: 102, baseType: !113, size: 32, offset: 32)
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13282, file: !13166, line: 109, baseType: !113, size: 32, offset: 64)
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13288, size: 32)
!13288 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13166, line: 139, baseType: !13289)
!13289 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13166, line: 119, size: 96, elements: !13290)
!13290 = !{!13291, !13292, !13293}
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13289, file: !13166, line: 121, baseType: !113, size: 32)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13289, file: !13166, line: 127, baseType: !113, size: 32, offset: 32)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13289, file: !13166, line: 133, baseType: !113, size: 32, offset: 64)
!13294 = !{!13295, !13296, !13297, !13298}
!13295 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13277, file: !13159, line: 483, type: !13280)
!13296 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13277, file: !13159, line: 484, type: !13287)
!13297 = !DILocalVariable(name: "status", scope: !13277, file: !13159, line: 486, type: !13202)
!13298 = !DILocalVariable(name: "pllfreq", scope: !13277, file: !13159, line: 487, type: !113)
!13299 = !DILocation(line: 0, scope: !13277)
!13300 = !DILocation(line: 490, column: 6, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13277, file: !13159, line: 490, column: 6)
!13302 = !DILocation(line: 490, column: 25, scope: !13301)
!13303 = !DILocation(line: 490, column: 6, scope: !13277)
!13304 = !DILocation(line: 493, column: 15, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13301, file: !13159, line: 491, column: 3)
!13306 = !DILocation(line: 496, column: 8, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13305, file: !13159, line: 496, column: 8)
!13308 = !DILocation(line: 496, column: 29, scope: !13307)
!13309 = !DILocation(line: 496, column: 8, scope: !13305)
!13310 = !DILocation(line: 498, column: 7, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13307, file: !13159, line: 497, column: 5)
!13312 = !DILocation(line: 499, column: 7, scope: !13311)
!13313 = !DILocation(line: 499, column: 14, scope: !13311)
!13314 = !DILocation(line: 499, column: 35, scope: !13311)
!13315 = distinct !{!13315, !13312, !13316}
!13316 = !DILocation(line: 502, column: 7, scope: !13311)
!13317 = !DILocation(line: 506, column: 76, scope: !13305)
!13318 = !DILocation(line: 506, column: 103, scope: !13305)
!13319 = !DILocation(line: 507, column: 54, scope: !13305)
!13320 = !DILocation(line: 506, column: 5, scope: !13305)
!13321 = !DILocation(line: 510, column: 14, scope: !13305)
!13322 = !DILocation(line: 511, column: 3, scope: !13305)
!13323 = !DILocation(line: 0, scope: !13301)
!13324 = !DILocation(line: 518, column: 3, scope: !13277)
!13325 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13159, file: !13159, line: 642, type: !13326, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13328)
!13326 = !DISubroutineType(types: !13327)
!13327 = !{!13202}
!13328 = !{!13329}
!13329 = !DILocalVariable(name: "status", scope: !13325, file: !13159, line: 644, type: !13202)
!13330 = !DILocation(line: 0, scope: !13325)
!13331 = !DILocation(line: 647, column: 6, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13325, file: !13159, line: 647, column: 6)
!13333 = !DILocation(line: 647, column: 27, scope: !13332)
!13334 = !DILocation(line: 663, column: 6, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13325, file: !13159, line: 663, column: 6)
!13336 = !DILocation(line: 663, column: 30, scope: !13335)
!13337 = !DILocation(line: 663, column: 6, scope: !13325)
!13338 = !DILocation(line: 669, column: 3, scope: !13325)
!13339 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13159, file: !13159, line: 611, type: !13340, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13342)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{!113, !113, !13280}
!13342 = !{!13343, !13344, !13345}
!13343 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13339, file: !13159, line: 611, type: !113)
!13344 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13339, file: !13159, line: 611, type: !13280)
!13345 = !DILocalVariable(name: "pllfreq", scope: !13339, file: !13159, line: 613, type: !113)
!13346 = !DILocation(line: 0, scope: !13339)
!13347 = !DILocation(line: 622, column: 56, scope: !13339)
!13348 = !DILocation(line: 622, column: 61, scope: !13339)
!13349 = !DILocation(line: 622, column: 32, scope: !13339)
!13350 = !DILocation(line: 626, column: 45, scope: !13339)
!13351 = !DILocation(line: 626, column: 50, scope: !13339)
!13352 = !DILocation(line: 626, column: 21, scope: !13339)
!13353 = !DILocation(line: 630, column: 47, scope: !13339)
!13354 = !DILocation(line: 630, column: 82, scope: !13339)
!13355 = !DILocation(line: 630, column: 21, scope: !13339)
!13356 = !DILocation(line: 633, column: 3, scope: !13339)
!13357 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10119, file: !10119, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13358 = !DILocation(line: 3009, column: 11, scope: !13357)
!13359 = !DILocation(line: 3009, column: 44, scope: !13357)
!13360 = !DILocation(line: 3009, column: 3, scope: !13357)
!13361 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10119, file: !10119, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13362 = !DILocation(line: 2989, column: 3, scope: !13361)
!13363 = !DILocation(line: 2990, column: 1, scope: !13361)
!13364 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10119, file: !10119, line: 4304, type: !10253, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13365)
!13365 = !{!13366, !13367, !13368, !13369}
!13366 = !DILocalVariable(name: "Source", arg: 1, scope: !13364, file: !10119, line: 4304, type: !113)
!13367 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13364, file: !10119, line: 4304, type: !113)
!13368 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13364, file: !10119, line: 4304, type: !113)
!13369 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13364, file: !10119, line: 4304, type: !113)
!13370 = !DILocation(line: 0, scope: !13364)
!13371 = !DILocation(line: 4306, column: 3, scope: !13364)
!13372 = !DILocation(line: 4308, column: 3, scope: !13364)
!13373 = !DILocation(line: 4312, column: 1, scope: !13364)
!13374 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13159, file: !13159, line: 681, type: !13375, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13377)
!13375 = !DISubroutineType(types: !13376)
!13376 = !{!13202, !113, !13287}
!13377 = !{!13378, !13379, !13380, !13381}
!13378 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13374, file: !13159, line: 681, type: !113)
!13379 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13374, file: !13159, line: 681, type: !13287)
!13380 = !DILocalVariable(name: "status", scope: !13374, file: !13159, line: 683, type: !13202)
!13381 = !DILocalVariable(name: "hclk_frequency", scope: !13374, file: !13159, line: 684, type: !113)
!13382 = !DILocation(line: 0, scope: !13374)
!13383 = !DILocation(line: 691, column: 20, scope: !13374)
!13384 = !DILocation(line: 694, column: 6, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13374, file: !13159, line: 694, column: 6)
!13386 = !DILocation(line: 694, column: 22, scope: !13385)
!13387 = !DILocation(line: 694, column: 6, scope: !13374)
!13388 = !DILocation(line: 697, column: 14, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !13159, line: 695, column: 3)
!13390 = !DILocation(line: 701, column: 13, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13374, file: !13159, line: 701, column: 6)
!13392 = !DILocation(line: 701, column: 6, scope: !13374)
!13393 = !DILocation(line: 704, column: 5, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13391, file: !13159, line: 702, column: 3)
!13395 = !DILocation(line: 705, column: 5, scope: !13394)
!13396 = !DILocation(line: 705, column: 12, scope: !13394)
!13397 = !DILocation(line: 705, column: 33, scope: !13394)
!13398 = distinct !{!13398, !13395, !13399}
!13399 = !DILocation(line: 708, column: 5, scope: !13394)
!13400 = !DILocation(line: 711, column: 49, scope: !13394)
!13401 = !DILocation(line: 711, column: 5, scope: !13394)
!13402 = !DILocation(line: 712, column: 5, scope: !13394)
!13403 = !DILocation(line: 713, column: 5, scope: !13394)
!13404 = !DILocation(line: 713, column: 12, scope: !13394)
!13405 = !DILocation(line: 713, column: 37, scope: !13394)
!13406 = distinct !{!13406, !13403, !13407}
!13407 = !DILocation(line: 716, column: 5, scope: !13394)
!13408 = !DILocation(line: 719, column: 50, scope: !13394)
!13409 = !DILocation(line: 719, column: 5, scope: !13394)
!13410 = !DILocation(line: 720, column: 50, scope: !13394)
!13411 = !DILocation(line: 720, column: 5, scope: !13394)
!13412 = !DILocation(line: 721, column: 3, scope: !13394)
!13413 = !DILocation(line: 724, column: 6, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13374, file: !13159, line: 724, column: 6)
!13415 = !DILocation(line: 724, column: 22, scope: !13414)
!13416 = !DILocation(line: 724, column: 6, scope: !13374)
!13417 = !DILocation(line: 727, column: 14, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13414, file: !13159, line: 725, column: 3)
!13419 = !DILocation(line: 728, column: 3, scope: !13418)
!13420 = !DILocation(line: 731, column: 13, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13374, file: !13159, line: 731, column: 6)
!13422 = !DILocation(line: 731, column: 6, scope: !13374)
!13423 = !DILocation(line: 733, column: 5, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13421, file: !13159, line: 732, column: 3)
!13425 = !DILocation(line: 734, column: 3, scope: !13424)
!13426 = !DILocation(line: 736, column: 3, scope: !13374)
!13427 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10119, file: !10119, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13428 = !DILocation(line: 4186, column: 3, scope: !13427)
!13429 = !DILocation(line: 4187, column: 1, scope: !13427)
!13430 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10119, file: !10119, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13431 = !DILocation(line: 4207, column: 11, scope: !13430)
!13432 = !DILocation(line: 4207, column: 44, scope: !13430)
!13433 = !DILocation(line: 4207, column: 3, scope: !13430)
!13434 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10119, file: !10119, line: 3224, type: !7881, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13435)
!13435 = !{!13436}
!13436 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13434, file: !10119, line: 3224, type: !113)
!13437 = !DILocation(line: 0, scope: !13434)
!13438 = !DILocation(line: 3226, column: 3, scope: !13434)
!13439 = !DILocation(line: 3227, column: 1, scope: !13434)
!13440 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10119, file: !10119, line: 3188, type: !7881, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13441)
!13441 = !{!13442}
!13442 = !DILocalVariable(name: "Source", arg: 1, scope: !13440, file: !10119, line: 3188, type: !113)
!13443 = !DILocation(line: 0, scope: !13440)
!13444 = !DILocation(line: 3190, column: 3, scope: !13440)
!13445 = !DILocation(line: 3191, column: 1, scope: !13440)
!13446 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10119, file: !10119, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13447 = !DILocation(line: 3206, column: 21, scope: !13446)
!13448 = !DILocation(line: 3206, column: 3, scope: !13446)
!13449 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10119, file: !10119, line: 3240, type: !7881, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13450)
!13450 = !{!13451}
!13451 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13449, file: !10119, line: 3240, type: !113)
!13452 = !DILocation(line: 0, scope: !13449)
!13453 = !DILocation(line: 3242, column: 3, scope: !13449)
!13454 = !DILocation(line: 3243, column: 1, scope: !13449)
!13455 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10119, file: !10119, line: 3256, type: !7881, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13456)
!13456 = !{!13457}
!13457 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13455, file: !10119, line: 3256, type: !113)
!13458 = !DILocation(line: 0, scope: !13455)
!13459 = !DILocation(line: 3258, column: 3, scope: !13455)
!13460 = !DILocation(line: 3259, column: 1, scope: !13455)
!13461 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10119, file: !10119, line: 5153, type: !395, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13462 = !DILocation(line: 5155, column: 11, scope: !13461)
!13463 = !DILocation(line: 5155, column: 47, scope: !13461)
!13464 = !DILocation(line: 5155, column: 3, scope: !13461)
!13465 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13159, file: !13159, line: 540, type: !13466, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !13468)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!13202, !113, !113, !13280, !13287}
!13468 = !{!13469, !13470, !13471, !13472, !13473, !13474}
!13469 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13465, file: !13159, line: 540, type: !113)
!13470 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13465, file: !13159, line: 540, type: !113)
!13471 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13465, file: !13159, line: 541, type: !13280)
!13472 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13465, file: !13159, line: 541, type: !13287)
!13473 = !DILocalVariable(name: "status", scope: !13465, file: !13159, line: 543, type: !13202)
!13474 = !DILocalVariable(name: "pllfreq", scope: !13465, file: !13159, line: 544, type: !113)
!13475 = !DILocation(line: 0, scope: !13465)
!13476 = !DILocation(line: 551, column: 6, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13465, file: !13159, line: 551, column: 6)
!13478 = !DILocation(line: 551, column: 25, scope: !13477)
!13479 = !DILocation(line: 551, column: 6, scope: !13465)
!13480 = !DILocation(line: 554, column: 15, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13477, file: !13159, line: 552, column: 3)
!13482 = !DILocation(line: 557, column: 8, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13481, file: !13159, line: 557, column: 8)
!13484 = !DILocation(line: 557, column: 29, scope: !13483)
!13485 = !DILocation(line: 557, column: 8, scope: !13481)
!13486 = !DILocation(line: 560, column: 20, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !13159, line: 560, column: 10)
!13488 = distinct !DILexicalBlock(scope: !13483, file: !13159, line: 558, column: 5)
!13489 = !DILocation(line: 560, column: 10, scope: !13488)
!13490 = !DILocation(line: 562, column: 9, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13487, file: !13159, line: 561, column: 7)
!13492 = !DILocation(line: 563, column: 7, scope: !13491)
!13493 = !DILocation(line: 566, column: 9, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13487, file: !13159, line: 565, column: 7)
!13495 = !DILocation(line: 570, column: 7, scope: !13488)
!13496 = !DILocation(line: 571, column: 7, scope: !13488)
!13497 = !DILocation(line: 571, column: 14, scope: !13488)
!13498 = !DILocation(line: 571, column: 35, scope: !13488)
!13499 = distinct !{!13499, !13496, !13500}
!13500 = !DILocation(line: 574, column: 7, scope: !13488)
!13501 = !DILocation(line: 578, column: 76, scope: !13481)
!13502 = !DILocation(line: 578, column: 103, scope: !13481)
!13503 = !DILocation(line: 579, column: 54, scope: !13481)
!13504 = !DILocation(line: 578, column: 5, scope: !13481)
!13505 = !DILocation(line: 582, column: 14, scope: !13481)
!13506 = !DILocation(line: 583, column: 3, scope: !13481)
!13507 = !DILocation(line: 0, scope: !13477)
!13508 = !DILocation(line: 590, column: 3, scope: !13465)
!13509 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10119, file: !10119, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13510 = !DILocation(line: 2971, column: 11, scope: !13509)
!13511 = !DILocation(line: 2971, column: 44, scope: !13509)
!13512 = !DILocation(line: 2971, column: 3, scope: !13509)
!13513 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10119, file: !10119, line: 2929, type: !266, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13514 = !DILocation(line: 2931, column: 3, scope: !13513)
!13515 = !DILocation(line: 2932, column: 1, scope: !13513)
!13516 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10119, file: !10119, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13517 = !DILocation(line: 2941, column: 3, scope: !13516)
!13518 = !DILocation(line: 2942, column: 1, scope: !13516)
!13519 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10119, file: !10119, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !397)
!13520 = !DILocation(line: 2951, column: 3, scope: !13519)
!13521 = !DILocation(line: 2952, column: 1, scope: !13519)
!13522 = distinct !DISubprogram(name: "z_device_state_init", scope: !13523, file: !13523, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13524)
!13523 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13524 = !{!13525}
!13525 = !DILocalVariable(name: "dev", scope: !13522, file: !13523, line: 25, type: !13526)
!13526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13527, size: 32)
!13527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13528)
!13528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !13529)
!13529 = !{!13530, !13531, !13532, !13533, !13539, !13540}
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13528, file: !481, line: 380, baseType: !269, size: 32)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13528, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13528, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13528, file: !481, line: 386, baseType: !13534, size: 32, offset: 96)
!13534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13535, size: 32)
!13535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !13536)
!13536 = !{!13537, !13538}
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13535, file: !481, line: 359, baseType: !169, size: 8)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13535, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13539 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13528, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13528, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!13541 = !DILocation(line: 0, scope: !13522)
!13542 = !DILocation(line: 31, column: 1, scope: !13522)
!13543 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13523, file: !13523, line: 33, type: !13544, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13546)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{!13526, !269}
!13546 = !{!13547, !13548}
!13547 = !DILocalVariable(name: "name", arg: 1, scope: !13543, file: !13523, line: 33, type: !269)
!13548 = !DILocalVariable(name: "dev", scope: !13543, file: !13523, line: 35, type: !13526)
!13549 = !DILocation(line: 0, scope: !13543)
!13550 = !DILocation(line: 40, column: 12, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13543, file: !13523, line: 40, column: 6)
!13552 = !DILocation(line: 40, column: 21, scope: !13551)
!13553 = !DILocation(line: 40, column: 25, scope: !13551)
!13554 = !DILocation(line: 40, column: 33, scope: !13551)
!13555 = !DILocation(line: 40, column: 6, scope: !13543)
!13556 = !DILocation(line: 55, column: 2, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13543, file: !13523, line: 55, column: 2)
!13558 = !DILocation(line: 50, column: 7, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13560, file: !13523, line: 50, column: 7)
!13560 = distinct !DILexicalBlock(scope: !13561, file: !13523, line: 49, column: 57)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !13523, line: 49, column: 2)
!13562 = distinct !DILexicalBlock(scope: !13543, file: !13523, line: 49, column: 2)
!13563 = !DILocation(line: 50, column: 30, scope: !13559)
!13564 = !DILocation(line: 50, column: 39, scope: !13559)
!13565 = !DILocation(line: 50, column: 44, scope: !13559)
!13566 = !DILocation(line: 50, column: 7, scope: !13560)
!13567 = !DILocation(line: 49, column: 53, scope: !13561)
!13568 = !DILocation(line: 49, column: 33, scope: !13561)
!13569 = !DILocation(line: 49, column: 2, scope: !13562)
!13570 = distinct !{!13570, !13569, !13571}
!13571 = !DILocation(line: 53, column: 2, scope: !13562)
!13572 = !DILocation(line: 56, column: 7, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !13523, line: 56, column: 7)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !13523, line: 55, column: 57)
!13575 = distinct !DILexicalBlock(scope: !13557, file: !13523, line: 55, column: 2)
!13576 = !DILocation(line: 56, column: 30, scope: !13573)
!13577 = !DILocation(line: 56, column: 52, scope: !13573)
!13578 = !DILocation(line: 56, column: 34, scope: !13573)
!13579 = !DILocation(line: 56, column: 58, scope: !13573)
!13580 = !DILocation(line: 56, column: 7, scope: !13574)
!13581 = !DILocation(line: 55, column: 53, scope: !13575)
!13582 = !DILocation(line: 55, column: 33, scope: !13575)
!13583 = distinct !{!13583, !13556, !13584}
!13584 = !DILocation(line: 59, column: 2, scope: !13557)
!13585 = !DILocation(line: 62, column: 1, scope: !13543)
!13586 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13523, file: !13523, line: 93, type: !13587, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{!492, !13526}
!13589 = !{!13590}
!13590 = !DILocalVariable(name: "dev", arg: 1, scope: !13586, file: !13523, line: 93, type: !13526)
!13591 = !DILocation(line: 0, scope: !13586)
!13592 = !DILocation(line: 99, column: 10, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13586, file: !13523, line: 99, column: 6)
!13594 = !DILocation(line: 99, column: 6, scope: !13586)
!13595 = !DILocation(line: 103, column: 14, scope: !13586)
!13596 = !DILocation(line: 103, column: 21, scope: !13586)
!13597 = !DILocation(line: 103, column: 33, scope: !13586)
!13598 = !DILocation(line: 103, column: 49, scope: !13586)
!13599 = !DILocation(line: 103, column: 58, scope: !13586)
!13600 = !DILocation(line: 104, column: 1, scope: !13586)
!13601 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13523, file: !13523, line: 87, type: !13602, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13605)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!111, !13604}
!13604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13526, size: 32)
!13605 = !{!13606}
!13606 = !DILocalVariable(name: "devices", arg: 1, scope: !13601, file: !13523, line: 87, type: !13604)
!13607 = !DILocation(line: 0, scope: !13601)
!13608 = !DILocation(line: 89, column: 11, scope: !13601)
!13609 = !DILocation(line: 90, column: 2, scope: !13601)
!13610 = distinct !DISubprogram(name: "device_required_foreach", scope: !13523, file: !13523, line: 125, type: !13611, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13617)
!13611 = !DISubroutineType(types: !13612)
!13612 = !{!105, !13526, !13613, !104}
!13613 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !481, line: 471, baseType: !13614)
!13614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13615, size: 32)
!13615 = !DISubroutineType(types: !13616)
!13616 = !{!105, !13526, !104}
!13617 = !{!13618, !13619, !13620, !13621, !13622}
!13618 = !DILocalVariable(name: "dev", arg: 1, scope: !13610, file: !13523, line: 125, type: !13526)
!13619 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13610, file: !13523, line: 126, type: !13613)
!13620 = !DILocalVariable(name: "context", arg: 3, scope: !13610, file: !13523, line: 127, type: !104)
!13621 = !DILocalVariable(name: "handle_count", scope: !13610, file: !13523, line: 129, type: !111)
!13622 = !DILocalVariable(name: "handles", scope: !13610, file: !13523, line: 130, type: !495)
!13623 = !DILocation(line: 0, scope: !13610)
!13624 = !DILocation(line: 129, column: 2, scope: !13610)
!13625 = !DILocation(line: 129, column: 9, scope: !13610)
!13626 = !DILocation(line: 130, column: 35, scope: !13610)
!13627 = !DILocation(line: 132, column: 33, scope: !13610)
!13628 = !DILocation(line: 132, column: 9, scope: !13610)
!13629 = !DILocation(line: 133, column: 1, scope: !13610)
!13630 = !DILocation(line: 132, column: 2, scope: !13610)
!13631 = distinct !DISubprogram(name: "device_required_handles_get", scope: !481, file: !481, line: 493, type: !13632, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13634)
!13632 = !DISubroutineType(types: !13633)
!13633 = !{!495, !13526, !2633}
!13634 = !{!13635, !13636, !13637, !13638}
!13635 = !DILocalVariable(name: "dev", arg: 1, scope: !13631, file: !481, line: 493, type: !13526)
!13636 = !DILocalVariable(name: "count", arg: 2, scope: !13631, file: !481, line: 493, type: !2633)
!13637 = !DILocalVariable(name: "rv", scope: !13631, file: !481, line: 495, type: !495)
!13638 = !DILocalVariable(name: "i", scope: !13639, file: !481, line: 498, type: !111)
!13639 = distinct !DILexicalBlock(scope: !13640, file: !481, line: 497, column: 18)
!13640 = distinct !DILexicalBlock(scope: !13631, file: !481, line: 497, column: 6)
!13641 = !DILocation(line: 0, scope: !13631)
!13642 = !DILocation(line: 495, column: 35, scope: !13631)
!13643 = !DILocation(line: 497, column: 9, scope: !13640)
!13644 = !DILocation(line: 497, column: 6, scope: !13631)
!13645 = !DILocation(line: 0, scope: !13639)
!13646 = !DILocation(line: 500, column: 11, scope: !13639)
!13647 = !DILocation(line: 500, column: 40, scope: !13639)
!13648 = !DILocation(line: 502, column: 4, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13639, file: !481, line: 501, column: 40)
!13650 = distinct !{!13650, !13651, !13652}
!13651 = !DILocation(line: 500, column: 3, scope: !13639)
!13652 = !DILocation(line: 503, column: 3, scope: !13639)
!13653 = !DILocation(line: 504, column: 10, scope: !13639)
!13654 = !DILocation(line: 505, column: 2, scope: !13639)
!13655 = !DILocation(line: 507, column: 2, scope: !13631)
!13656 = distinct !DISubprogram(name: "device_visitor", scope: !13523, file: !13523, line: 106, type: !13657, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13659)
!13657 = !DISubroutineType(types: !13658)
!13658 = !{!105, !495, !111, !13613, !104}
!13659 = !{!13660, !13661, !13662, !13663, !13664, !13666, !13669, !13670}
!13660 = !DILocalVariable(name: "handles", arg: 1, scope: !13656, file: !13523, line: 106, type: !495)
!13661 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13656, file: !13523, line: 107, type: !111)
!13662 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13656, file: !13523, line: 108, type: !13613)
!13663 = !DILocalVariable(name: "context", arg: 4, scope: !13656, file: !13523, line: 109, type: !104)
!13664 = !DILocalVariable(name: "i", scope: !13665, file: !13523, line: 112, type: !111)
!13665 = distinct !DILexicalBlock(scope: !13656, file: !13523, line: 112, column: 2)
!13666 = !DILocalVariable(name: "dh", scope: !13667, file: !13523, line: 113, type: !497)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !13523, line: 112, column: 44)
!13668 = distinct !DILexicalBlock(scope: !13665, file: !13523, line: 112, column: 2)
!13669 = !DILocalVariable(name: "rdev", scope: !13667, file: !13523, line: 114, type: !13526)
!13670 = !DILocalVariable(name: "rc", scope: !13667, file: !13523, line: 115, type: !105)
!13671 = !DILocation(line: 0, scope: !13656)
!13672 = !DILocation(line: 0, scope: !13665)
!13673 = !DILocation(line: 112, column: 23, scope: !13668)
!13674 = !DILocation(line: 112, column: 2, scope: !13665)
!13675 = distinct !{!13675, !13674, !13676}
!13676 = !DILocation(line: 120, column: 2, scope: !13665)
!13677 = !DILocation(line: 113, column: 24, scope: !13667)
!13678 = !DILocation(line: 0, scope: !13667)
!13679 = !DILocation(line: 114, column: 31, scope: !13667)
!13680 = !DILocation(line: 115, column: 12, scope: !13667)
!13681 = !DILocation(line: 117, column: 10, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13667, file: !13523, line: 117, column: 7)
!13683 = !DILocation(line: 112, column: 39, scope: !13668)
!13684 = !DILocation(line: 123, column: 1, scope: !13656)
!13685 = distinct !DISubprogram(name: "device_from_handle", scope: !481, file: !481, line: 439, type: !13686, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13688)
!13686 = !DISubroutineType(types: !13687)
!13687 = !{!13526, !497}
!13688 = !{!13689, !13690, !13691}
!13689 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13685, file: !481, line: 439, type: !497)
!13690 = !DILocalVariable(name: "dev", scope: !13685, file: !481, line: 443, type: !13526)
!13691 = !DILocalVariable(name: "numdev", scope: !13685, file: !481, line: 444, type: !111)
!13692 = !DILocation(line: 0, scope: !13685)
!13693 = !DILocation(line: 446, column: 7, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13685, file: !481, line: 446, column: 6)
!13695 = !DILocation(line: 446, column: 18, scope: !13694)
!13696 = !DILocation(line: 446, column: 23, scope: !13694)
!13697 = !DILocation(line: 450, column: 2, scope: !13685)
!13698 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13523, file: !13523, line: 135, type: !13611, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13699)
!13699 = !{!13700, !13701, !13702, !13703, !13704}
!13700 = !DILocalVariable(name: "dev", arg: 1, scope: !13698, file: !13523, line: 135, type: !13526)
!13701 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13698, file: !13523, line: 136, type: !13613)
!13702 = !DILocalVariable(name: "context", arg: 3, scope: !13698, file: !13523, line: 137, type: !104)
!13703 = !DILocalVariable(name: "handle_count", scope: !13698, file: !13523, line: 139, type: !111)
!13704 = !DILocalVariable(name: "handles", scope: !13698, file: !13523, line: 140, type: !495)
!13705 = !DILocation(line: 0, scope: !13698)
!13706 = !DILocation(line: 139, column: 2, scope: !13698)
!13707 = !DILocation(line: 139, column: 9, scope: !13698)
!13708 = !DILocation(line: 140, column: 35, scope: !13698)
!13709 = !DILocation(line: 142, column: 33, scope: !13698)
!13710 = !DILocation(line: 142, column: 9, scope: !13698)
!13711 = !DILocation(line: 143, column: 1, scope: !13698)
!13712 = !DILocation(line: 142, column: 2, scope: !13698)
!13713 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !481, file: !481, line: 573, type: !13632, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3139, retainedNodes: !13714)
!13714 = !{!13715, !13716, !13717, !13718, !13719}
!13715 = !DILocalVariable(name: "dev", arg: 1, scope: !13713, file: !481, line: 573, type: !13526)
!13716 = !DILocalVariable(name: "count", arg: 2, scope: !13713, file: !481, line: 573, type: !2633)
!13717 = !DILocalVariable(name: "rv", scope: !13713, file: !481, line: 575, type: !495)
!13718 = !DILocalVariable(name: "region", scope: !13713, file: !481, line: 576, type: !111)
!13719 = !DILocalVariable(name: "i", scope: !13713, file: !481, line: 577, type: !111)
!13720 = !DILocation(line: 0, scope: !13713)
!13721 = !DILocation(line: 575, column: 35, scope: !13713)
!13722 = !DILocation(line: 579, column: 9, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13713, file: !481, line: 579, column: 6)
!13724 = !DILocation(line: 579, column: 6, scope: !13713)
!13725 = !DILocation(line: 582, column: 8, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13727, file: !481, line: 582, column: 8)
!13727 = distinct !DILexicalBlock(scope: !13728, file: !481, line: 581, column: 23)
!13728 = distinct !DILexicalBlock(scope: !13723, file: !481, line: 579, column: 18)
!13729 = !DILocation(line: 582, column: 12, scope: !13726)
!13730 = !DILocation(line: 585, column: 6, scope: !13727)
!13731 = !DILocation(line: 0, scope: !13728)
!13732 = !DILocation(line: 581, column: 17, scope: !13728)
!13733 = !DILocation(line: 581, column: 3, scope: !13728)
!13734 = !DILocation(line: 588, column: 10, scope: !13728)
!13735 = !DILocation(line: 588, column: 16, scope: !13728)
!13736 = !DILocation(line: 589, column: 4, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13728, file: !481, line: 588, column: 39)
!13738 = !DILocation(line: 588, column: 3, scope: !13728)
!13739 = distinct !{!13739, !13738, !13740}
!13740 = !DILocation(line: 590, column: 3, scope: !13728)
!13741 = !DILocation(line: 591, column: 10, scope: !13728)
!13742 = !DILocation(line: 592, column: 2, scope: !13728)
!13743 = !DILocation(line: 575, column: 25, scope: !13713)
!13744 = !DILocation(line: 594, column: 2, scope: !13713)
!13745 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1956, file: !1956, line: 49, type: !13746, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1953, retainedNodes: !397)
!13746 = !DISubroutineType(types: !13747)
!13747 = !{!428}
!13748 = !DILocation(line: 51, column: 10, scope: !13745)
!13749 = !DILocation(line: 51, column: 20, scope: !13745)
!13750 = !DILocation(line: 51, column: 2, scope: !13745)
!13751 = distinct !DISubprogram(name: "coredump", scope: !3146, file: !3146, line: 209, type: !13752, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13900)
!13752 = !DISubroutineType(types: !13753)
!13753 = !{null, !32, !13754, !13798}
!13754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13755, size: 32)
!13755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13756)
!13756 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2763, line: 141, baseType: !13757)
!13757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2763, line: 97, size: 256, elements: !13758)
!13758 = !{!13759}
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13757, file: !2763, line: 107, baseType: !13760, size: 256)
!13760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2763, line: 98, size: 256, elements: !13761)
!13761 = !{!13762, !13767, !13772, !13777, !13782, !13787, !13792, !13797}
!13762 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 99, baseType: !13763, size: 32)
!13763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 99, size: 32, elements: !13764)
!13764 = !{!13765, !13766}
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13763, file: !2763, line: 99, baseType: !113, size: 32)
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13763, file: !2763, line: 99, baseType: !113, size: 32)
!13767 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 100, baseType: !13768, size: 32, offset: 32)
!13768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 100, size: 32, elements: !13769)
!13769 = !{!13770, !13771}
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13768, file: !2763, line: 100, baseType: !113, size: 32)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13768, file: !2763, line: 100, baseType: !113, size: 32)
!13772 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 101, baseType: !13773, size: 32, offset: 64)
!13773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 101, size: 32, elements: !13774)
!13774 = !{!13775, !13776}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13773, file: !2763, line: 101, baseType: !113, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13773, file: !2763, line: 101, baseType: !113, size: 32)
!13777 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 102, baseType: !13778, size: 32, offset: 96)
!13778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 102, size: 32, elements: !13779)
!13779 = !{!13780, !13781}
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13778, file: !2763, line: 102, baseType: !113, size: 32)
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13778, file: !2763, line: 102, baseType: !113, size: 32)
!13782 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 103, baseType: !13783, size: 32, offset: 128)
!13783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 103, size: 32, elements: !13784)
!13784 = !{!13785, !13786}
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13783, file: !2763, line: 103, baseType: !113, size: 32)
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13783, file: !2763, line: 103, baseType: !113, size: 32)
!13787 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 104, baseType: !13788, size: 32, offset: 160)
!13788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 104, size: 32, elements: !13789)
!13789 = !{!13790, !13791}
!13790 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13788, file: !2763, line: 104, baseType: !113, size: 32)
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13788, file: !2763, line: 104, baseType: !113, size: 32)
!13792 = !DIDerivedType(tag: DW_TAG_member, scope: !13760, file: !2763, line: 105, baseType: !13793, size: 32, offset: 192)
!13793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13760, file: !2763, line: 105, size: 32, elements: !13794)
!13794 = !{!13795, !13796}
!13795 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13793, file: !2763, line: 105, baseType: !113, size: 32)
!13796 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13793, file: !2763, line: 105, baseType: !113, size: 32)
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13760, file: !2763, line: 106, baseType: !113, size: 32, offset: 224)
!13798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13799, size: 32)
!13799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !13800)
!13800 = !{!13801, !13859, !13871, !13872, !13873, !13874, !13880, !13895}
!13801 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13799, file: !127, line: 247, baseType: !13802, size: 384)
!13802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13803)
!13803 = !{!13804, !13828, !13835, !13836, !13837, !13846, !13847, !13848}
!13804 = !DIDerivedType(tag: DW_TAG_member, scope: !13802, file: !127, line: 60, baseType: !13805, size: 64)
!13805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13802, file: !127, line: 60, size: 64, elements: !13806)
!13806 = !{!13807, !13822}
!13807 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13805, file: !127, line: 61, baseType: !13808, size: 64)
!13808 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !13809)
!13809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !13810)
!13810 = !{!13811, !13817}
!13811 = !DIDerivedType(tag: DW_TAG_member, scope: !13809, file: !137, line: 38, baseType: !13812, size: 32)
!13812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13809, file: !137, line: 38, size: 32, elements: !13813)
!13813 = !{!13814, !13816}
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13812, file: !137, line: 39, baseType: !13815, size: 32)
!13815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13809, size: 32)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13812, file: !137, line: 40, baseType: !13815, size: 32)
!13817 = !DIDerivedType(tag: DW_TAG_member, scope: !13809, file: !137, line: 42, baseType: !13818, size: 32, offset: 32)
!13818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13809, file: !137, line: 42, size: 32, elements: !13819)
!13819 = !{!13820, !13821}
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13818, file: !137, line: 43, baseType: !13815, size: 32)
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13818, file: !137, line: 44, baseType: !13815, size: 32)
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13805, file: !127, line: 62, baseType: !13823, size: 64)
!13823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13824)
!13824 = !{!13825}
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13823, file: !153, line: 50, baseType: !13826, size: 64)
!13826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13827, size: 64, elements: !158)
!13827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13823, size: 32)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13802, file: !127, line: 68, baseType: !13829, size: 32, offset: 64)
!13829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13830, size: 32)
!13830 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13831)
!13831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13832)
!13832 = !{!13833}
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13831, file: !163, line: 232, baseType: !13834, size: 64)
!13834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !13809)
!13835 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13802, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13802, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13837 = !DIDerivedType(tag: DW_TAG_member, scope: !13802, file: !127, line: 90, baseType: !13838, size: 16, offset: 112)
!13838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13802, file: !127, line: 90, size: 16, elements: !13839)
!13839 = !{!13840, !13845}
!13840 = !DIDerivedType(tag: DW_TAG_member, scope: !13838, file: !127, line: 91, baseType: !13841, size: 16)
!13841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13838, file: !127, line: 91, size: 16, elements: !13842)
!13842 = !{!13843, !13844}
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13841, file: !127, line: 96, baseType: !179, size: 8)
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13841, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13838, file: !127, line: 100, baseType: !183, size: 16)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13802, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13802, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13802, file: !127, line: 131, baseType: !13849, size: 192, offset: 192)
!13849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !13850)
!13850 = !{!13851, !13852, !13858}
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13849, file: !163, line: 245, baseType: !13808, size: 64)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13849, file: !163, line: 246, baseType: !13853, size: 32, offset: 64)
!13853 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !13854)
!13854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13855, size: 32)
!13855 = !DISubroutineType(types: !13856)
!13856 = !{null, !13857}
!13857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13849, size: 32)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13849, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13799, file: !127, line: 250, baseType: !13860, size: 288, offset: 384)
!13860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !13861)
!13861 = !{!13862, !13863, !13864, !13865, !13866, !13867, !13868, !13869, !13870}
!13862 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13860, file: !200, line: 26, baseType: !113, size: 32)
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13860, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13860, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13860, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13860, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13860, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13860, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13860, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13860, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13799, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13799, file: !127, line: 256, baseType: !13830, size: 64, offset: 704)
!13873 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13799, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13799, file: !127, line: 300, baseType: !13875, size: 96, offset: 800)
!13875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !13876)
!13876 = !{!13877, !13878, !13879}
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13875, file: !127, line: 153, baseType: !22, size: 32)
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13875, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13875, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13799, file: !127, line: 325, baseType: !13881, size: 32, offset: 896)
!13881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13882, size: 32)
!13882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !13883)
!13883 = !{!13884, !13890, !13891}
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13882, file: !122, line: 5074, baseType: !13885, size: 96)
!13885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !13886)
!13886 = !{!13887, !13888, !13889}
!13887 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13885, file: !226, line: 57, baseType: !229, size: 32)
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13885, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13885, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13882, file: !122, line: 5075, baseType: !13830, size: 64, offset: 96)
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13882, file: !122, line: 5076, baseType: !13892, size: 32, offset: 160)
!13892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !13893)
!13893 = !{!13894}
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13892, file: !236, line: 52, baseType: !22, size: 32)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13799, file: !127, line: 343, baseType: !13896, size: 64, offset: 928)
!13896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !13897)
!13897 = !{!13898, !13899}
!13898 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13896, file: !200, line: 63, baseType: !113, size: 32)
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13896, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!13900 = !{!13901, !13902, !13903}
!13901 = !DILocalVariable(name: "reason", arg: 1, scope: !13751, file: !3146, line: 209, type: !32)
!13902 = !DILocalVariable(name: "esf", arg: 2, scope: !13751, file: !3146, line: 209, type: !13754)
!13903 = !DILocalVariable(name: "thread", arg: 3, scope: !13751, file: !3146, line: 210, type: !13798)
!13904 = !DILocation(line: 0, scope: !13751)
!13905 = !DILocation(line: 212, column: 1, scope: !13751)
!13906 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3146, file: !3146, line: 214, type: !13907, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13909)
!13907 = !DISubroutineType(types: !13908)
!13908 = !{null, !22, !22}
!13909 = !{!13910, !13911}
!13910 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13906, file: !3146, line: 214, type: !22)
!13911 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13906, file: !3146, line: 214, type: !22)
!13912 = !DILocation(line: 0, scope: !13906)
!13913 = !DILocation(line: 216, column: 1, scope: !13906)
!13914 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3146, file: !3146, line: 218, type: !13915, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13917)
!13915 = !DISubroutineType(types: !13916)
!13916 = !{null, !432, !111}
!13917 = !{!13918, !13919}
!13918 = !DILocalVariable(name: "buf", arg: 1, scope: !13914, file: !3146, line: 218, type: !432)
!13919 = !DILocalVariable(name: "buflen", arg: 2, scope: !13914, file: !3146, line: 218, type: !111)
!13920 = !DILocation(line: 0, scope: !13914)
!13921 = !DILocation(line: 220, column: 1, scope: !13914)
!13922 = distinct !DISubprogram(name: "coredump_query", scope: !3146, file: !3146, line: 222, type: !13923, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13925)
!13923 = !DISubroutineType(types: !13924)
!13924 = !{!105, !3145, !104}
!13925 = !{!13926, !13927}
!13926 = !DILocalVariable(name: "query_id", arg: 1, scope: !13922, file: !3146, line: 222, type: !3145)
!13927 = !DILocalVariable(name: "arg", arg: 2, scope: !13922, file: !3146, line: 222, type: !104)
!13928 = !DILocation(line: 0, scope: !13922)
!13929 = !DILocation(line: 224, column: 2, scope: !13922)
!13930 = distinct !DISubprogram(name: "coredump_cmd", scope: !3146, file: !3146, line: 227, type: !13931, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13933)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{!105, !3152, !104}
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "query_id", arg: 1, scope: !13930, file: !3146, line: 227, type: !3152)
!13935 = !DILocalVariable(name: "arg", arg: 2, scope: !13930, file: !3146, line: 227, type: !104)
!13936 = !DILocation(line: 0, scope: !13930)
!13937 = !DILocation(line: 229, column: 2, scope: !13930)
!13938 = distinct !DISubprogram(name: "arch_system_halt", scope: !13939, file: !13939, line: 23, type: !7479, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13940)
!13939 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13940 = !{!13941}
!13941 = !DILocalVariable(name: "reason", arg: 1, scope: !13938, file: !13939, line: 23, type: !32)
!13942 = !DILocation(line: 0, scope: !13938)
!13943 = !DILocation(line: 55, column: 2, scope: !13944, inlinedAt: !13948)
!13944 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13945)
!13945 = !{!13946, !13947}
!13946 = !DILocalVariable(name: "key", scope: !13944, file: !7468, line: 44, type: !32)
!13947 = !DILocalVariable(name: "tmp", scope: !13944, file: !7468, line: 53, type: !32)
!13948 = distinct !DILocation(line: 31, column: 8, scope: !13938)
!13949 = !{i64 2244575}
!13950 = !DILocation(line: 0, scope: !13944, inlinedAt: !13948)
!13951 = !DILocation(line: 32, column: 2, scope: !13938)
!13952 = !DILocation(line: 32, column: 2, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !13939, line: 32, column: 2)
!13954 = distinct !DILexicalBlock(scope: !13938, file: !13939, line: 32, column: 2)
!13955 = distinct !{!13955, !13956, !13957}
!13956 = !DILocation(line: 32, column: 2, scope: !13954)
!13957 = !DILocation(line: 34, column: 2, scope: !13954)
!13958 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13939, file: !13939, line: 39, type: !13959, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13961)
!13959 = !DISubroutineType(types: !13960)
!13960 = !{null, !32, !13754}
!13961 = !{!13962, !13963}
!13962 = !DILocalVariable(name: "reason", arg: 1, scope: !13958, file: !13939, line: 39, type: !32)
!13963 = !DILocalVariable(name: "esf", arg: 2, scope: !13958, file: !13939, line: 40, type: !13754)
!13964 = !DILocation(line: 0, scope: !13958)
!13965 = !DILocation(line: 45, column: 2, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !13939, line: 45, column: 2)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !13939, line: 45, column: 2)
!13968 = distinct !DILexicalBlock(scope: !13969, file: !13939, line: 45, column: 2)
!13969 = distinct !DILexicalBlock(scope: !13958, file: !13939, line: 45, column: 2)
!13970 = !DILocation(line: 46, column: 2, scope: !13958)
!13971 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13939, file: !13939, line: 81, type: !7479, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13972)
!13972 = !{!13973}
!13973 = !DILocalVariable(name: "reason", arg: 1, scope: !13971, file: !13939, line: 81, type: !32)
!13974 = !DILocation(line: 0, scope: !13971)
!13975 = !DILocation(line: 83, column: 2, scope: !13971)
!13976 = distinct !DISubprogram(name: "z_fatal_error", scope: !13939, file: !13939, line: 96, type: !13959, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13977)
!13977 = !{!13978, !13979, !13980, !13981}
!13978 = !DILocalVariable(name: "reason", arg: 1, scope: !13976, file: !13939, line: 96, type: !32)
!13979 = !DILocalVariable(name: "esf", arg: 2, scope: !13976, file: !13939, line: 96, type: !13754)
!13980 = !DILocalVariable(name: "key", scope: !13976, file: !13939, line: 102, type: !32)
!13981 = !DILocalVariable(name: "thread", scope: !13976, file: !13939, line: 103, type: !13798)
!13982 = !DILocation(line: 0, scope: !13976)
!13983 = !DILocation(line: 55, column: 2, scope: !13944, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 102, column: 21, scope: !13976)
!13985 = !DILocation(line: 0, scope: !13944, inlinedAt: !13984)
!13986 = !DILocation(line: 104, column: 4, scope: !13976)
!13987 = !DILocation(line: 109, column: 2, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13989, file: !13939, line: 109, column: 2)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !13939, line: 109, column: 2)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !13939, line: 109, column: 2)
!13991 = distinct !DILexicalBlock(scope: !13976, file: !13939, line: 109, column: 2)
!13992 = !DILocation(line: 119, column: 11, scope: !13993)
!13993 = distinct !DILexicalBlock(scope: !13976, file: !13939, line: 119, column: 6)
!13994 = !DILocation(line: 119, column: 20, scope: !13993)
!13995 = !DILocalVariable(name: "esf", arg: 1, scope: !13996, file: !8833, line: 71, type: !13754)
!13996 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8833, file: !8833, line: 71, type: !13997, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !13999)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!492, !13754}
!13999 = !{!13995}
!14000 = !DILocation(line: 0, scope: !13996, inlinedAt: !14001)
!14001 = distinct !DILocation(line: 119, column: 23, scope: !13993)
!14002 = !DILocation(line: 73, column: 21, scope: !13996, inlinedAt: !14001)
!14003 = !DILocation(line: 73, column: 26, scope: !13996, inlinedAt: !14001)
!14004 = !DILocation(line: 73, column: 9, scope: !13996, inlinedAt: !14001)
!14005 = !DILocation(line: 119, column: 6, scope: !13976)
!14006 = !DILocation(line: 120, column: 3, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !13939, line: 120, column: 3)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !13939, line: 120, column: 3)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !13939, line: 120, column: 3)
!14010 = distinct !DILexicalBlock(scope: !14011, file: !13939, line: 120, column: 3)
!14011 = distinct !DILexicalBlock(scope: !13993, file: !13939, line: 119, column: 57)
!14012 = !DILocation(line: 121, column: 2, scope: !14011)
!14013 = !DILocation(line: 124, column: 2, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14015, file: !13939, line: 124, column: 2)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !13939, line: 124, column: 2)
!14016 = distinct !DILexicalBlock(scope: !14017, file: !13939, line: 124, column: 2)
!14017 = distinct !DILexicalBlock(scope: !13976, file: !13939, line: 124, column: 2)
!14018 = !DILocation(line: 131, column: 2, scope: !13976)
!14019 = !DILocation(line: 147, column: 3, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14021, file: !13939, line: 147, column: 3)
!14021 = distinct !DILexicalBlock(scope: !14022, file: !13939, line: 147, column: 3)
!14022 = distinct !DILexicalBlock(scope: !14023, file: !13939, line: 146, column: 32)
!14023 = distinct !DILexicalBlock(scope: !13976, file: !13939, line: 146, column: 6)
!14024 = !DILocation(line: 147, column: 3, scope: !14021)
!14025 = !DILocation(line: 147, column: 3, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !14020, file: !13939, line: 147, column: 3)
!14027 = !DILocalVariable(name: "key", arg: 1, scope: !14028, file: !7468, line: 84, type: !32)
!14028 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14029)
!14029 = !{!14027}
!14030 = !DILocation(line: 0, scope: !14028, inlinedAt: !14031)
!14031 = distinct !DILocation(line: 186, column: 2, scope: !13976)
!14032 = !DILocation(line: 95, column: 2, scope: !14028, inlinedAt: !14031)
!14033 = !{i64 2245392}
!14034 = !DILocation(line: 189, column: 3, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14036, file: !13939, line: 188, column: 41)
!14036 = distinct !DILexicalBlock(scope: !13976, file: !13939, line: 188, column: 6)
!14037 = !DILocation(line: 191, column: 1, scope: !13976)
!14038 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14039, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !397)
!14039 = !DISubroutineType(types: !14040)
!14040 = !{!14041}
!14041 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !13798)
!14042 = !DILocation(line: 535, column: 9, scope: !14038)
!14043 = !DILocation(line: 535, column: 2, scope: !14038)
!14044 = distinct !DISubprogram(name: "reason_to_str", scope: !13939, file: !13939, line: 62, type: !14045, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14047)
!14045 = !DISubroutineType(types: !14046)
!14046 = !{!269, !32}
!14047 = !{!14048}
!14048 = !DILocalVariable(name: "reason", arg: 1, scope: !14044, file: !13939, line: 62, type: !32)
!14049 = !DILocation(line: 0, scope: !14044)
!14050 = !DILocation(line: 64, column: 2, scope: !14044)
!14051 = !DILocation(line: 0, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14044, file: !13939, line: 64, column: 18)
!14053 = !DILocation(line: 78, column: 1, scope: !14044)
!14054 = distinct !DISubprogram(name: "thread_name_get", scope: !13939, file: !13939, line: 51, type: !14055, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14057)
!14055 = !DISubroutineType(types: !14056)
!14056 = !{!269, !13798}
!14057 = !{!14058, !14059}
!14058 = !DILocalVariable(name: "thread", arg: 1, scope: !14054, file: !13939, line: 51, type: !13798)
!14059 = !DILocalVariable(name: "thread_name", scope: !14054, file: !13939, line: 53, type: !269)
!14060 = !DILocation(line: 0, scope: !14054)
!14061 = !DILocation(line: 53, column: 36, scope: !14054)
!14062 = !DILocation(line: 53, column: 28, scope: !14054)
!14063 = !DILocation(line: 53, column: 47, scope: !14054)
!14064 = !DILocation(line: 55, column: 19, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14054, file: !13939, line: 55, column: 6)
!14066 = !DILocation(line: 55, column: 28, scope: !14065)
!14067 = !DILocation(line: 55, column: 32, scope: !14065)
!14068 = !DILocation(line: 55, column: 47, scope: !14065)
!14069 = !DILocation(line: 55, column: 6, scope: !14054)
!14070 = !DILocation(line: 57, column: 2, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14065, file: !13939, line: 55, column: 57)
!14072 = !DILocation(line: 59, column: 2, scope: !14054)
!14073 = distinct !DISubprogram(name: "k_thread_abort", scope: !3431, file: !3431, line: 188, type: !14074, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !14076)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{null, !14041}
!14076 = !{!14077}
!14077 = !DILocalVariable(name: "thread", arg: 1, scope: !14073, file: !3431, line: 188, type: !14041)
!14078 = !DILocation(line: 0, scope: !14073)
!14079 = !DILocation(line: 197, column: 2, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14073, file: !3431, line: 197, column: 2)
!14081 = !{i64 2154749944}
!14082 = !DILocation(line: 198, column: 2, scope: !14073)
!14083 = !DILocation(line: 199, column: 1, scope: !14073)
!14084 = distinct !DISubprogram(name: "z_current_get", scope: !3431, file: !3431, line: 173, type: !14039, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3142, retainedNodes: !397)
!14085 = !DILocation(line: 180, column: 2, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14084, file: !3431, line: 180, column: 2)
!14087 = !{i64 2154749876}
!14088 = !DILocation(line: 181, column: 9, scope: !14084)
!14089 = !DILocation(line: 181, column: 2, scope: !14084)
!14090 = distinct !DISubprogram(name: "z_early_memset", scope: !1964, file: !1964, line: 108, type: !14091, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{null, !104, !105, !111}
!14093 = !{!14094, !14095, !14096}
!14094 = !DILocalVariable(name: "dst", arg: 1, scope: !14090, file: !1964, line: 108, type: !104)
!14095 = !DILocalVariable(name: "c", arg: 2, scope: !14090, file: !1964, line: 108, type: !105)
!14096 = !DILocalVariable(name: "n", arg: 3, scope: !14090, file: !1964, line: 108, type: !111)
!14097 = !DILocation(line: 0, scope: !14090)
!14098 = !DILocation(line: 110, column: 9, scope: !14090)
!14099 = !DILocation(line: 111, column: 1, scope: !14090)
!14100 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1964, file: !1964, line: 121, type: !14101, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14103)
!14101 = !DISubroutineType(types: !14102)
!14102 = !{null, !104, !13, !111}
!14103 = !{!14104, !14105, !14106}
!14104 = !DILocalVariable(name: "dst", arg: 1, scope: !14100, file: !1964, line: 121, type: !104)
!14105 = !DILocalVariable(name: "src", arg: 2, scope: !14100, file: !1964, line: 121, type: !13)
!14106 = !DILocalVariable(name: "n", arg: 3, scope: !14100, file: !1964, line: 121, type: !111)
!14107 = !DILocation(line: 0, scope: !14100)
!14108 = !DILocation(line: 123, column: 9, scope: !14100)
!14109 = !DILocation(line: 124, column: 1, scope: !14100)
!14110 = distinct !DISubprogram(name: "z_bss_zero", scope: !1964, file: !1964, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !397)
!14111 = !DILocation(line: 143, column: 2, scope: !14110)
!14112 = !DILocation(line: 168, column: 1, scope: !14110)
!14113 = distinct !DISubprogram(name: "z_init_cpu", scope: !1964, file: !1964, line: 372, type: !9720, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14114)
!14114 = !{!14115}
!14115 = !DILocalVariable(name: "id", arg: 1, scope: !14113, file: !1964, line: 372, type: !105)
!14116 = !DILocation(line: 0, scope: !14113)
!14117 = !DILocation(line: 374, column: 2, scope: !14113)
!14118 = !DILocation(line: 375, column: 34, scope: !14113)
!14119 = !DILocation(line: 375, column: 19, scope: !14113)
!14120 = !DILocation(line: 375, column: 31, scope: !14113)
!14121 = !DILocation(line: 376, column: 24, scope: !14113)
!14122 = !DILocation(line: 376, column: 19, scope: !14113)
!14123 = !DILocation(line: 376, column: 22, scope: !14113)
!14124 = !DILocation(line: 378, column: 26, scope: !14113)
!14125 = !DILocation(line: 378, column: 4, scope: !14113)
!14126 = !DILocation(line: 378, column: 50, scope: !14113)
!14127 = !DILocation(line: 377, column: 19, scope: !14113)
!14128 = !DILocation(line: 377, column: 29, scope: !14113)
!14129 = !DILocation(line: 384, column: 1, scope: !14113)
!14130 = distinct !DISubprogram(name: "init_idle_thread", scope: !1964, file: !1964, line: 343, type: !9720, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14131)
!14131 = !{!14132, !14133, !14134, !14137}
!14132 = !DILocalVariable(name: "i", arg: 1, scope: !14130, file: !1964, line: 343, type: !105)
!14133 = !DILocalVariable(name: "thread", scope: !14130, file: !1964, line: 345, type: !2056)
!14134 = !DILocalVariable(name: "stack", scope: !14130, file: !1964, line: 346, type: !14135)
!14135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14136, size: 32)
!14136 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2173)
!14137 = !DILocalVariable(name: "tname", scope: !14130, file: !1964, line: 358, type: !102)
!14138 = !DILocation(line: 0, scope: !14130)
!14139 = !DILocation(line: 345, column: 29, scope: !14130)
!14140 = !DILocation(line: 346, column: 28, scope: !14130)
!14141 = !DILocation(line: 362, column: 37, scope: !14130)
!14142 = !DILocation(line: 362, column: 36, scope: !14130)
!14143 = !DILocation(line: 361, column: 2, scope: !14130)
!14144 = !DILocation(line: 365, column: 2, scope: !14130)
!14145 = !DILocation(line: 370, column: 1, scope: !14130)
!14146 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14147, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14149)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{!102, !14135}
!14149 = !{!14150}
!14150 = !DILocalVariable(name: "sym", arg: 1, scope: !14146, file: !249, line: 331, type: !14135)
!14151 = !DILocation(line: 0, scope: !14146)
!14152 = !DILocation(line: 333, column: 21, scope: !14146)
!14153 = !DILocation(line: 333, column: 2, scope: !14146)
!14154 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14155, file: !14155, line: 155, type: !14156, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14158)
!14155 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14156 = !DISubroutineType(types: !14157)
!14157 = !{null, !2056}
!14158 = !{!14159}
!14159 = !DILocalVariable(name: "thread", arg: 1, scope: !14154, file: !14155, line: 155, type: !2056)
!14160 = !DILocation(line: 0, scope: !14154)
!14161 = !DILocation(line: 157, column: 15, scope: !14154)
!14162 = !DILocation(line: 157, column: 28, scope: !14154)
!14163 = !DILocation(line: 158, column: 1, scope: !14154)
!14164 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1964, file: !1964, line: 451, type: !13915, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14165)
!14165 = !{!14166, !14167}
!14166 = !DILocalVariable(name: "buf", arg: 1, scope: !14164, file: !1964, line: 451, type: !432)
!14167 = !DILocalVariable(name: "length", arg: 2, scope: !14164, file: !1964, line: 451, type: !111)
!14168 = !DILocation(line: 0, scope: !14164)
!14169 = !DILocation(line: 485, column: 2, scope: !14164)
!14170 = !DILocation(line: 486, column: 1, scope: !14164)
!14171 = distinct !DISubprogram(name: "sys_rand_get", scope: !14172, file: !14172, line: 46, type: !14173, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14175)
!14172 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/metairq_dispatch")
!14173 = !DISubroutineType(types: !14174)
!14174 = !{null, !104, !111}
!14175 = !{!14176, !14177}
!14176 = !DILocalVariable(name: "dst", arg: 1, scope: !14171, file: !14172, line: 46, type: !104)
!14177 = !DILocalVariable(name: "len", arg: 2, scope: !14171, file: !14172, line: 46, type: !111)
!14178 = !DILocation(line: 0, scope: !14171)
!14179 = !DILocation(line: 56, column: 2, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14171, file: !14172, line: 56, column: 2)
!14181 = !{i64 2154967673}
!14182 = !DILocation(line: 57, column: 2, scope: !14171)
!14183 = !DILocation(line: 58, column: 1, scope: !14171)
!14184 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14172, file: !14172, line: 43, type: !14173, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14185 = distinct !DISubprogram(name: "z_cstart", scope: !1964, file: !1964, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14186)
!14186 = !{!14187}
!14187 = !DILocalVariable(name: "dummy_thread", scope: !14185, file: !1964, line: 518, type: !2057)
!14188 = !DILocation(line: 507, column: 2, scope: !14185)
!14189 = !DILocation(line: 43, column: 14, scope: !14190, inlinedAt: !14194)
!14190 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14191, file: !14191, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14192)
!14191 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14192 = !{!14193}
!14193 = !DILocalVariable(name: "msp", scope: !14190, file: !14191, line: 42, type: !113)
!14194 = distinct !DILocation(line: 44, column: 2, scope: !14195, inlinedAt: !14197)
!14195 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14196, file: !14196, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !397)
!14196 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14197 = distinct !DILocation(line: 510, column: 2, scope: !14185)
!14198 = !DILocation(line: 43, column: 3, scope: !14190, inlinedAt: !14194)
!14199 = !DILocation(line: 43, column: 60, scope: !14190, inlinedAt: !14194)
!14200 = !DILocation(line: 0, scope: !14190, inlinedAt: !14194)
!14201 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14202, file: !7786, line: 1153, type: !113)
!14202 = distinct !DISubprogram(name: "__set_MSP", scope: !7786, file: !7786, line: 1153, type: !7881, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14203)
!14203 = !{!14201}
!14204 = !DILocation(line: 0, scope: !14202, inlinedAt: !14205)
!14205 = distinct !DILocation(line: 46, column: 2, scope: !14190, inlinedAt: !14194)
!14206 = !DILocation(line: 1155, column: 3, scope: !14202, inlinedAt: !14205)
!14207 = !{i64 3518951}
!14208 = !DILocation(line: 62, column: 11, scope: !14190, inlinedAt: !14194)
!14209 = !DILocation(line: 102, column: 2, scope: !14210, inlinedAt: !14211)
!14210 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8833, file: !8833, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !397)
!14211 = distinct !DILocation(line: 45, column: 2, scope: !14195, inlinedAt: !14197)
!14212 = !DILocation(line: 108, column: 2, scope: !14210, inlinedAt: !14211)
!14213 = !DILocation(line: 112, column: 2, scope: !14210, inlinedAt: !14211)
!14214 = !DILocation(line: 113, column: 2, scope: !14210, inlinedAt: !14211)
!14215 = !DILocation(line: 114, column: 2, scope: !14210, inlinedAt: !14211)
!14216 = !DILocation(line: 116, column: 2, scope: !14210, inlinedAt: !14211)
!14217 = !DILocation(line: 123, column: 13, scope: !14210, inlinedAt: !14211)
!14218 = !DILocation(line: 46, column: 2, scope: !14195, inlinedAt: !14197)
!14219 = !DILocation(line: 47, column: 2, scope: !14195, inlinedAt: !14197)
!14220 = !DILocation(line: 174, column: 12, scope: !14221, inlinedAt: !14222)
!14221 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8833, file: !8833, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !397)
!14222 = distinct !DILocation(line: 48, column: 2, scope: !14195, inlinedAt: !14197)
!14223 = !DILocation(line: 179, column: 12, scope: !14221, inlinedAt: !14222)
!14224 = !DILocation(line: 50, column: 2, scope: !14195, inlinedAt: !14197)
!14225 = !DILocation(line: 57, column: 2, scope: !14195, inlinedAt: !14197)
!14226 = !DILocation(line: 518, column: 2, scope: !14185)
!14227 = !DILocation(line: 518, column: 18, scope: !14185)
!14228 = !DILocation(line: 520, column: 2, scope: !14185)
!14229 = !DILocation(line: 523, column: 2, scope: !14185)
!14230 = !DILocation(line: 526, column: 2, scope: !14185)
!14231 = !DILocation(line: 527, column: 2, scope: !14185)
!14232 = !DILocation(line: 543, column: 24, scope: !14185)
!14233 = !DILocation(line: 543, column: 2, scope: !14185)
!14234 = !DILocation(line: 0, scope: !2196)
!14235 = !DILocation(line: 246, column: 15, scope: !2214)
!14236 = !DILocation(line: 246, column: 36, scope: !2213)
!14237 = !DILocation(line: 246, column: 2, scope: !2214)
!14238 = !DILocation(line: 247, column: 37, scope: !2212)
!14239 = !DILocation(line: 0, scope: !2212)
!14240 = !DILocation(line: 248, column: 19, scope: !2212)
!14241 = !DILocation(line: 248, column: 12, scope: !2212)
!14242 = !DILocation(line: 250, column: 11, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !2212, file: !1964, line: 250, column: 7)
!14244 = !DILocation(line: 250, column: 7, scope: !2212)
!14245 = !DILocation(line: 254, column: 11, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !1964, line: 254, column: 8)
!14247 = distinct !DILexicalBlock(scope: !14243, file: !1964, line: 250, column: 20)
!14248 = !DILocation(line: 254, column: 8, scope: !14247)
!14249 = !DILocation(line: 255, column: 9, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14246, file: !1964, line: 254, column: 17)
!14251 = !DILocation(line: 258, column: 9, scope: !14250)
!14252 = !DILocation(line: 261, column: 28, scope: !14250)
!14253 = !DILocation(line: 261, column: 10, scope: !14250)
!14254 = !DILocation(line: 261, column: 17, scope: !14250)
!14255 = !DILocation(line: 261, column: 26, scope: !14250)
!14256 = !DILocation(line: 262, column: 4, scope: !14250)
!14257 = !DILocation(line: 263, column: 9, scope: !14247)
!14258 = !DILocation(line: 263, column: 16, scope: !14247)
!14259 = !DILocation(line: 263, column: 28, scope: !14247)
!14260 = !DILocation(line: 264, column: 3, scope: !14247)
!14261 = !DILocation(line: 246, column: 60, scope: !2213)
!14262 = distinct !{!14262, !14237, !14263}
!14263 = !DILocation(line: 265, column: 2, scope: !2214)
!14264 = !DILocation(line: 266, column: 1, scope: !2196)
!14265 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7826, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14266)
!14266 = !{!14267, !14268}
!14267 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14265, file: !679, line: 1814, type: !932)
!14268 = !DILocalVariable(name: "priority", arg: 2, scope: !14265, file: !679, line: 1814, type: !113)
!14269 = !DILocation(line: 0, scope: !14265)
!14270 = !DILocation(line: 1822, column: 48, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !679, line: 1821, column: 3)
!14272 = distinct !DILexicalBlock(scope: !14265, file: !679, line: 1816, column: 7)
!14273 = !DILocation(line: 1822, column: 32, scope: !14271)
!14274 = !DILocation(line: 1822, column: 40, scope: !14271)
!14275 = !DILocation(line: 1822, column: 5, scope: !14271)
!14276 = !DILocation(line: 1822, column: 46, scope: !14271)
!14277 = !DILocation(line: 1824, column: 1, scope: !14265)
!14278 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14196, file: !14196, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14279 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14280, file: !14280, line: 215, type: !14156, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14281)
!14280 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14279, file: !14280, line: 215, type: !2056)
!14283 = !DILocation(line: 0, scope: !14279)
!14284 = !DILocation(line: 217, column: 21, scope: !14279)
!14285 = !DILocation(line: 217, column: 34, scope: !14279)
!14286 = !DILocation(line: 221, column: 21, scope: !14279)
!14287 = !DILocation(line: 221, column: 34, scope: !14279)
!14288 = !DILocation(line: 223, column: 27, scope: !14279)
!14289 = !DILocation(line: 223, column: 33, scope: !14279)
!14290 = !DILocation(line: 224, column: 27, scope: !14279)
!14291 = !DILocation(line: 224, column: 32, scope: !14279)
!14292 = !DILocation(line: 232, column: 16, scope: !14279)
!14293 = !DILocation(line: 232, column: 30, scope: !14279)
!14294 = !DILocation(line: 239, column: 24, scope: !14279)
!14295 = !DILocation(line: 240, column: 1, scope: !14279)
!14296 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1964, file: !1964, line: 399, type: !14297, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{!102}
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "stack_ptr", scope: !14296, file: !1964, line: 401, type: !102)
!14301 = !DILocation(line: 404, column: 2, scope: !14296)
!14302 = !DILocation(line: 416, column: 24, scope: !14296)
!14303 = !DILocation(line: 418, column: 14, scope: !14296)
!14304 = !DILocation(line: 0, scope: !14296)
!14305 = !DILocation(line: 423, column: 2, scope: !14296)
!14306 = !DILocation(line: 424, column: 2, scope: !14296)
!14307 = !DILocation(line: 426, column: 2, scope: !14296)
!14308 = !DILocation(line: 428, column: 2, scope: !14296)
!14309 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1964, file: !1964, line: 432, type: !14310, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14312)
!14310 = !DISubroutineType(types: !14311)
!14311 = !{null, !102}
!14312 = !{!14313}
!14313 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14309, file: !1964, line: 432, type: !102)
!14314 = !DILocation(line: 0, scope: !14309)
!14315 = !DILocation(line: 435, column: 2, scope: !14309)
!14316 = !DILocation(line: 445, column: 2, scope: !14309)
!14317 = distinct !DISubprogram(name: "bg_thread_main", scope: !1964, file: !1964, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1960, retainedNodes: !14318)
!14318 = !{!14319, !14320, !14321}
!14319 = !DILocalVariable(name: "unused1", arg: 1, scope: !14317, file: !1964, line: 277, type: !104)
!14320 = !DILocalVariable(name: "unused2", arg: 2, scope: !14317, file: !1964, line: 277, type: !104)
!14321 = !DILocalVariable(name: "unused3", arg: 3, scope: !14317, file: !1964, line: 277, type: !104)
!14322 = !DILocation(line: 0, scope: !14317)
!14323 = !DILocation(line: 291, column: 20, scope: !14317)
!14324 = !DILocation(line: 293, column: 2, scope: !14317)
!14325 = !DILocation(line: 297, column: 2, scope: !14317)
!14326 = !DILocation(line: 305, column: 2, scope: !14317)
!14327 = !DILocation(line: 307, column: 2, scope: !14317)
!14328 = !DILocation(line: 330, column: 8, scope: !14317)
!14329 = !DILocation(line: 333, column: 34, scope: !14317)
!14330 = !DILocation(line: 339, column: 1, scope: !14317)
!14331 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2225, file: !2225, line: 45, type: !14332, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14340)
!14332 = !DISubroutineType(types: !14333)
!14333 = !{null, !14334, !104}
!14334 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !14335)
!14335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14336, size: 32)
!14336 = !DISubroutineType(types: !14337)
!14337 = !{null, !14338, !104}
!14338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14339, size: 32)
!14339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2230)
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14331, file: !2225, line: 45, type: !14334)
!14342 = !DILocalVariable(name: "user_data", arg: 2, scope: !14331, file: !2225, line: 45, type: !104)
!14343 = !DILocation(line: 0, scope: !14331)
!14344 = !DILocation(line: 71, column: 1, scope: !14331)
!14345 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2225, file: !2225, line: 73, type: !14332, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14346)
!14346 = !{!14347, !14348}
!14347 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14345, file: !2225, line: 73, type: !14334)
!14348 = !DILocalVariable(name: "user_data", arg: 2, scope: !14345, file: !2225, line: 73, type: !104)
!14349 = !DILocation(line: 0, scope: !14345)
!14350 = !DILocation(line: 95, column: 1, scope: !14345)
!14351 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2225, file: !2225, line: 97, type: !8834, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!14352 = !DILocation(line: 1031, column: 3, scope: !14353, inlinedAt: !14356)
!14353 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14354)
!14354 = !{!14355}
!14355 = !DILocalVariable(name: "result", scope: !14353, file: !7786, line: 1029, type: !113)
!14356 = distinct !DILocation(line: 48, column: 10, scope: !14357, inlinedAt: !14358)
!14357 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!14358 = distinct !DILocation(line: 99, column: 9, scope: !14351)
!14359 = !{i64 3524602}
!14360 = !DILocation(line: 0, scope: !14353, inlinedAt: !14356)
!14361 = !DILocation(line: 48, column: 9, scope: !14357, inlinedAt: !14358)
!14362 = !DILocation(line: 99, column: 2, scope: !14351)
!14363 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2225, file: !2225, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!14364 = !DILocation(line: 108, column: 2, scope: !14363)
!14365 = !DILocation(line: 108, column: 17, scope: !14363)
!14366 = !DILocation(line: 108, column: 30, scope: !14363)
!14367 = !DILocation(line: 109, column: 1, scope: !14363)
!14368 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2225, file: !2225, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!14369 = !DILocation(line: 118, column: 2, scope: !14368)
!14370 = !DILocation(line: 118, column: 17, scope: !14368)
!14371 = !DILocation(line: 118, column: 30, scope: !14368)
!14372 = !DILocation(line: 119, column: 1, scope: !14368)
!14373 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2225, file: !2225, line: 126, type: !8834, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!14374 = !DILocation(line: 128, column: 10, scope: !14373)
!14375 = !DILocation(line: 128, column: 25, scope: !14373)
!14376 = !DILocation(line: 128, column: 38, scope: !14373)
!14377 = !DILocation(line: 128, column: 53, scope: !14373)
!14378 = !DILocation(line: 128, column: 2, scope: !14373)
!14379 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2225, file: !2225, line: 187, type: !14380, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!105, !2229, !269}
!14382 = !{!14383, !14384}
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14379, file: !2225, line: 187, type: !2229)
!14384 = !DILocalVariable(name: "value", arg: 2, scope: !14379, file: !2225, line: 187, type: !269)
!14385 = !DILocation(line: 0, scope: !14379)
!14386 = !DILocation(line: 206, column: 2, scope: !14379)
!14387 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2225, file: !2225, line: 238, type: !14388, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14390)
!14388 = !DISubroutineType(types: !14389)
!14389 = !{!269, !2229}
!14390 = !{!14391}
!14391 = !DILocalVariable(name: "thread", arg: 1, scope: !14387, file: !2225, line: 238, type: !2229)
!14392 = !DILocation(line: 0, scope: !14387)
!14393 = !DILocation(line: 244, column: 2, scope: !14387)
!14394 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2225, file: !2225, line: 248, type: !14395, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{!105, !2228, !102, !111}
!14397 = !{!14398, !14399, !14400}
!14398 = !DILocalVariable(name: "thread", arg: 1, scope: !14394, file: !2225, line: 248, type: !2228)
!14399 = !DILocalVariable(name: "buf", arg: 2, scope: !14394, file: !2225, line: 248, type: !102)
!14400 = !DILocalVariable(name: "size", arg: 3, scope: !14394, file: !2225, line: 248, type: !111)
!14401 = !DILocation(line: 0, scope: !14394)
!14402 = !DILocation(line: 257, column: 2, scope: !14394)
!14403 = !DILocation(line: 0, scope: !2224)
!14404 = !DILocation(line: 281, column: 11, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !2224, file: !2225, line: 281, column: 6)
!14406 = !DILocation(line: 281, column: 20, scope: !14405)
!14407 = !DILocation(line: 275, column: 45, scope: !2224)
!14408 = !DILocation(line: 285, column: 10, scope: !2224)
!14409 = !DILocation(line: 0, scope: !2347)
!14410 = !DILocation(line: 293, column: 39, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !2347, file: !2225, line: 293, column: 2)
!14412 = !DILocation(line: 293, column: 2, scope: !2347)
!14413 = !DILocation(line: 273, column: 14, scope: !2224)
!14414 = !DILocation(line: 309, column: 2, scope: !2224)
!14415 = !DILocation(line: 309, column: 11, scope: !2224)
!14416 = !DILocation(line: 311, column: 2, scope: !2224)
!14417 = !DILocation(line: 293, column: 26, scope: !14411)
!14418 = !DILocation(line: 294, column: 9, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14411, file: !2225, line: 293, column: 54)
!14420 = !DILocation(line: 295, column: 21, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14419, file: !2225, line: 295, column: 7)
!14422 = !DILocation(line: 295, column: 28, scope: !14421)
!14423 = !DILocation(line: 295, column: 7, scope: !14419)
!14424 = !DILocation(line: 299, column: 25, scope: !14419)
!14425 = !DILocation(line: 299, column: 41, scope: !14419)
!14426 = !DILocation(line: 300, column: 7, scope: !14419)
!14427 = !DILocation(line: 300, column: 26, scope: !14419)
!14428 = !DILocation(line: 299, column: 10, scope: !14419)
!14429 = !DILocation(line: 299, column: 7, scope: !14419)
!14430 = !DILocation(line: 302, column: 16, scope: !14419)
!14431 = !DILocation(line: 304, column: 20, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14419, file: !2225, line: 304, column: 7)
!14433 = !DILocation(line: 304, column: 7, scope: !14419)
!14434 = !DILocation(line: 305, column: 26, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14432, file: !2225, line: 304, column: 26)
!14436 = !DILocation(line: 305, column: 42, scope: !14435)
!14437 = !DILocation(line: 305, column: 11, scope: !14435)
!14438 = !DILocation(line: 305, column: 8, scope: !14435)
!14439 = !DILocation(line: 306, column: 3, scope: !14435)
!14440 = !DILocation(line: 293, column: 50, scope: !14411)
!14441 = !DILocation(line: 312, column: 1, scope: !2224)
!14442 = distinct !DISubprogram(name: "copy_bytes", scope: !2225, file: !2225, line: 261, type: !14443, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14445)
!14443 = !DISubroutineType(types: !14444)
!14444 = !{!111, !102, !111, !269, !111}
!14445 = !{!14446, !14447, !14448, !14449, !14450}
!14446 = !DILocalVariable(name: "dest", arg: 1, scope: !14442, file: !2225, line: 261, type: !102)
!14447 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14442, file: !2225, line: 261, type: !111)
!14448 = !DILocalVariable(name: "src", arg: 3, scope: !14442, file: !2225, line: 261, type: !269)
!14449 = !DILocalVariable(name: "src_size", arg: 4, scope: !14442, file: !2225, line: 261, type: !111)
!14450 = !DILocalVariable(name: "bytes_to_copy", scope: !14442, file: !2225, line: 263, type: !111)
!14451 = !DILocation(line: 0, scope: !14442)
!14452 = !DILocation(line: 265, column: 18, scope: !14442)
!14453 = !DILocation(line: 266, column: 2, scope: !14442)
!14454 = !DILocation(line: 268, column: 2, scope: !14442)
!14455 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2225, file: !2225, line: 383, type: !14456, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14458)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{null, !2229}
!14458 = !{!14459}
!14459 = !DILocalVariable(name: "thread", arg: 1, scope: !14455, file: !2225, line: 383, type: !2229)
!14460 = !DILocation(line: 0, scope: !14455)
!14461 = !DILocation(line: 387, column: 2, scope: !14455)
!14462 = !DILocation(line: 388, column: 1, scope: !14455)
!14463 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2225, file: !2225, line: 528, type: !14464, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14471)
!14464 = !DISubroutineType(types: !14465)
!14465 = !{!102, !2229, !14466, !111, !254, !104, !104, !104, !105, !113, !269}
!14466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14467, size: 32)
!14467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !14468)
!14468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !14469)
!14469 = !{!14470}
!14470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14468, file: !249, line: 48, baseType: !103, size: 8)
!14471 = !{!14472, !14473, !14474, !14475, !14476, !14477, !14478, !14479, !14480, !14481, !14482}
!14472 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14463, file: !2225, line: 528, type: !2229)
!14473 = !DILocalVariable(name: "stack", arg: 2, scope: !14463, file: !2225, line: 529, type: !14466)
!14474 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14463, file: !2225, line: 529, type: !111)
!14475 = !DILocalVariable(name: "entry", arg: 4, scope: !14463, file: !2225, line: 530, type: !254)
!14476 = !DILocalVariable(name: "p1", arg: 5, scope: !14463, file: !2225, line: 531, type: !104)
!14477 = !DILocalVariable(name: "p2", arg: 6, scope: !14463, file: !2225, line: 531, type: !104)
!14478 = !DILocalVariable(name: "p3", arg: 7, scope: !14463, file: !2225, line: 531, type: !104)
!14479 = !DILocalVariable(name: "prio", arg: 8, scope: !14463, file: !2225, line: 532, type: !105)
!14480 = !DILocalVariable(name: "options", arg: 9, scope: !14463, file: !2225, line: 532, type: !113)
!14481 = !DILocalVariable(name: "name", arg: 10, scope: !14463, file: !2225, line: 532, type: !269)
!14482 = !DILocalVariable(name: "stack_ptr", scope: !14463, file: !2225, line: 534, type: !102)
!14483 = !DILocation(line: 0, scope: !14463)
!14484 = !DILocation(line: 536, column: 2, scope: !14485)
!14485 = distinct !DILexicalBlock(scope: !14486, file: !2225, line: 536, column: 2)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !2225, line: 536, column: 2)
!14487 = distinct !DILexicalBlock(scope: !14463, file: !2225, line: 536, column: 2)
!14488 = !DILocation(line: 536, column: 2, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14485, file: !2225, line: 536, column: 2)
!14490 = !DILocation(line: 550, column: 28, scope: !14463)
!14491 = !DILocation(line: 550, column: 2, scope: !14463)
!14492 = !DILocation(line: 553, column: 34, scope: !14463)
!14493 = !DILocation(line: 553, column: 2, scope: !14463)
!14494 = !DILocation(line: 554, column: 14, scope: !14463)
!14495 = !DILocation(line: 564, column: 2, scope: !14463)
!14496 = !DILocation(line: 567, column: 14, scope: !14463)
!14497 = !DILocation(line: 567, column: 24, scope: !14463)
!14498 = !DILocation(line: 612, column: 7, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14463, file: !2225, line: 612, column: 6)
!14500 = !DILocation(line: 612, column: 6, scope: !14463)
!14501 = !DILocation(line: 627, column: 40, scope: !14463)
!14502 = !DILocation(line: 637, column: 2, scope: !14463)
!14503 = !DILocation(line: 613, column: 15, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14499, file: !2225, line: 612, column: 17)
!14505 = !DILocation(line: 613, column: 29, scope: !14504)
!14506 = !DILocation(line: 638, column: 1, scope: !14463)
!14507 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14155, file: !14155, line: 78, type: !14508, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14510)
!14508 = !DISubroutineType(types: !14509)
!14509 = !{!492, !104}
!14510 = !{!14511}
!14511 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14507, file: !14155, line: 78, type: !104)
!14512 = !DILocation(line: 0, scope: !14507)
!14513 = !DILocation(line: 80, column: 21, scope: !14507)
!14514 = !DILocation(line: 80, column: 2, scope: !14507)
!14515 = distinct !DISubprogram(name: "z_waitq_init", scope: !14516, file: !14516, line: 47, type: !14517, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14519)
!14516 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14517 = !DISubroutineType(types: !14518)
!14518 = !{null, !2260}
!14519 = !{!14520}
!14520 = !DILocalVariable(name: "w", arg: 1, scope: !14515, file: !14516, line: 47, type: !2260)
!14521 = !DILocation(line: 0, scope: !14515)
!14522 = !DILocation(line: 49, column: 21, scope: !14515)
!14523 = !DILocation(line: 49, column: 2, scope: !14515)
!14524 = !DILocation(line: 50, column: 1, scope: !14515)
!14525 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2225, file: !2225, line: 791, type: !14526, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14529)
!14526 = !DISubroutineType(types: !14527)
!14527 = !{null, !14528, !105, !113, !32}
!14528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!14529 = !{!14530, !14531, !14532, !14533}
!14530 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14525, file: !2225, line: 791, type: !14528)
!14531 = !DILocalVariable(name: "priority", arg: 2, scope: !14525, file: !2225, line: 791, type: !105)
!14532 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14525, file: !2225, line: 792, type: !113)
!14533 = !DILocalVariable(name: "options", arg: 4, scope: !14525, file: !2225, line: 792, type: !32)
!14534 = !DILocation(line: 0, scope: !14525)
!14535 = !DILocation(line: 795, column: 15, scope: !14525)
!14536 = !DILocation(line: 795, column: 25, scope: !14525)
!14537 = !DILocation(line: 796, column: 30, scope: !14525)
!14538 = !DILocation(line: 796, column: 15, scope: !14525)
!14539 = !DILocation(line: 796, column: 28, scope: !14525)
!14540 = !DILocation(line: 797, column: 30, scope: !14525)
!14541 = !DILocation(line: 797, column: 15, scope: !14525)
!14542 = !DILocation(line: 797, column: 28, scope: !14525)
!14543 = !DILocation(line: 799, column: 22, scope: !14525)
!14544 = !DILocation(line: 799, column: 15, scope: !14525)
!14545 = !DILocation(line: 799, column: 20, scope: !14525)
!14546 = !DILocation(line: 801, column: 15, scope: !14525)
!14547 = !DILocation(line: 801, column: 28, scope: !14525)
!14548 = !DILocation(line: 814, column: 2, scope: !14525)
!14549 = !DILocation(line: 815, column: 1, scope: !14525)
!14550 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2225, file: !2225, line: 449, type: !14551, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14553)
!14551 = !DISubroutineType(types: !14552)
!14552 = !{!102, !2229, !14466, !111}
!14553 = !{!14554, !14555, !14556, !14557, !14558, !14559, !14560, !14561}
!14554 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14550, file: !2225, line: 449, type: !2229)
!14555 = !DILocalVariable(name: "stack", arg: 2, scope: !14550, file: !2225, line: 450, type: !14466)
!14556 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14550, file: !2225, line: 450, type: !111)
!14557 = !DILocalVariable(name: "stack_obj_size", scope: !14550, file: !2225, line: 452, type: !111)
!14558 = !DILocalVariable(name: "stack_buf_size", scope: !14550, file: !2225, line: 452, type: !111)
!14559 = !DILocalVariable(name: "stack_ptr", scope: !14550, file: !2225, line: 453, type: !102)
!14560 = !DILocalVariable(name: "stack_buf_start", scope: !14550, file: !2225, line: 453, type: !102)
!14561 = !DILocalVariable(name: "delta", scope: !14550, file: !2225, line: 454, type: !111)
!14562 = !DILocation(line: 0, scope: !14550)
!14563 = !DILocation(line: 465, column: 20, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14550, file: !2225, line: 463, column: 2)
!14565 = !DILocation(line: 466, column: 21, scope: !14564)
!14566 = !DILocation(line: 473, column: 28, scope: !14550)
!14567 = !DILocation(line: 514, column: 33, scope: !14550)
!14568 = !DILocation(line: 514, column: 25, scope: !14550)
!14569 = !DILocation(line: 514, column: 31, scope: !14550)
!14570 = !DILocation(line: 515, column: 25, scope: !14550)
!14571 = !DILocation(line: 515, column: 30, scope: !14550)
!14572 = !DILocation(line: 516, column: 25, scope: !14550)
!14573 = !DILocation(line: 516, column: 31, scope: !14550)
!14574 = !DILocation(line: 520, column: 2, scope: !14550)
!14575 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14576, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14578)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{!102, !14466}
!14578 = !{!14579}
!14579 = !DILocalVariable(name: "sym", arg: 1, scope: !14575, file: !249, line: 331, type: !14466)
!14580 = !DILocation(line: 0, scope: !14575)
!14581 = !DILocation(line: 333, column: 21, scope: !14575)
!14582 = !DILocation(line: 333, column: 2, scope: !14575)
!14583 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14584, file: !14584, line: 40, type: !14585, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14587)
!14584 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14585 = !DISubroutineType(types: !14586)
!14586 = !{null, !14528}
!14587 = !{!14588}
!14588 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14583, file: !14584, line: 40, type: !14528)
!14589 = !DILocation(line: 0, scope: !14583)
!14590 = !DILocation(line: 42, column: 31, scope: !14583)
!14591 = !DILocation(line: 42, column: 2, scope: !14583)
!14592 = !DILocation(line: 43, column: 1, scope: !14583)
!14593 = distinct !DISubprogram(name: "z_init_timeout", scope: !14584, file: !14584, line: 25, type: !2286, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14594)
!14594 = !{!14595}
!14595 = !DILocalVariable(name: "to", arg: 1, scope: !14593, file: !14584, line: 25, type: !2288)
!14596 = !DILocation(line: 0, scope: !14593)
!14597 = !DILocation(line: 27, column: 22, scope: !14593)
!14598 = !DILocation(line: 27, column: 2, scope: !14593)
!14599 = !DILocation(line: 28, column: 1, scope: !14593)
!14600 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14601, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14603)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{null, !2334}
!14603 = !{!14604}
!14604 = !DILocalVariable(name: "node", arg: 1, scope: !14600, file: !137, line: 211, type: !2334)
!14605 = !DILocation(line: 0, scope: !14600)
!14606 = !DILocation(line: 213, column: 8, scope: !14600)
!14607 = !DILocation(line: 213, column: 13, scope: !14600)
!14608 = !DILocation(line: 214, column: 8, scope: !14600)
!14609 = !DILocation(line: 214, column: 13, scope: !14600)
!14610 = !DILocation(line: 215, column: 1, scope: !14600)
!14611 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14612, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14615)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{null, !14614}
!14614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 32)
!14615 = !{!14616}
!14616 = !DILocalVariable(name: "list", arg: 1, scope: !14611, file: !137, line: 197, type: !14614)
!14617 = !DILocation(line: 0, scope: !14611)
!14618 = !DILocation(line: 199, column: 8, scope: !14611)
!14619 = !DILocation(line: 199, column: 13, scope: !14611)
!14620 = !DILocation(line: 200, column: 8, scope: !14611)
!14621 = !DILocation(line: 200, column: 13, scope: !14611)
!14622 = !DILocation(line: 201, column: 1, scope: !14611)
!14623 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2225, file: !2225, line: 641, type: !14624, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14630)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{!2228, !2229, !14466, !111, !254, !104, !104, !104, !105, !113, !14626}
!14626 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14627)
!14627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14628)
!14628 = !{!14629}
!14629 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14627, file: !108, line: 66, baseType: !107, size: 64)
!14630 = !{!14631, !14632, !14633, !14634, !14635, !14636, !14637, !14638, !14639, !14640}
!14631 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14623, file: !2225, line: 641, type: !2229)
!14632 = !DILocalVariable(name: "stack", arg: 2, scope: !14623, file: !2225, line: 642, type: !14466)
!14633 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14623, file: !2225, line: 643, type: !111)
!14634 = !DILocalVariable(name: "entry", arg: 4, scope: !14623, file: !2225, line: 643, type: !254)
!14635 = !DILocalVariable(name: "p1", arg: 5, scope: !14623, file: !2225, line: 644, type: !104)
!14636 = !DILocalVariable(name: "p2", arg: 6, scope: !14623, file: !2225, line: 644, type: !104)
!14637 = !DILocalVariable(name: "p3", arg: 7, scope: !14623, file: !2225, line: 644, type: !104)
!14638 = !DILocalVariable(name: "prio", arg: 8, scope: !14623, file: !2225, line: 645, type: !105)
!14639 = !DILocalVariable(name: "options", arg: 9, scope: !14623, file: !2225, line: 645, type: !113)
!14640 = !DILocalVariable(name: "delay", arg: 10, scope: !14623, file: !2225, line: 645, type: !14626)
!14641 = !DILocation(line: 0, scope: !14623)
!14642 = !DILocation(line: 1031, column: 3, scope: !14353, inlinedAt: !14643)
!14643 = distinct !DILocation(line: 48, column: 10, scope: !14357, inlinedAt: !14644)
!14644 = distinct !DILocation(line: 647, column: 2, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !14646, file: !2225, line: 647, column: 2)
!14646 = distinct !DILexicalBlock(scope: !14623, file: !2225, line: 647, column: 2)
!14647 = !DILocation(line: 0, scope: !14353, inlinedAt: !14643)
!14648 = !DILocation(line: 48, column: 9, scope: !14357, inlinedAt: !14644)
!14649 = !DILocation(line: 647, column: 2, scope: !14646)
!14650 = !DILocation(line: 647, column: 2, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14645, file: !2225, line: 647, column: 2)
!14652 = !DILocation(line: 649, column: 2, scope: !14623)
!14653 = !DILocation(line: 652, column: 7, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14623, file: !2225, line: 652, column: 6)
!14655 = !DILocation(line: 652, column: 6, scope: !14623)
!14656 = !DILocation(line: 653, column: 3, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14654, file: !2225, line: 652, column: 39)
!14658 = !DILocation(line: 654, column: 2, scope: !14657)
!14659 = !DILocation(line: 656, column: 2, scope: !14623)
!14660 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2225, file: !2225, line: 401, type: !14661, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14663)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{null, !2229, !14626}
!14663 = !{!14664, !14665}
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14660, file: !2225, line: 401, type: !2229)
!14665 = !DILocalVariable(name: "delay", arg: 2, scope: !14660, file: !2225, line: 401, type: !14626)
!14666 = !DILocation(line: 0, scope: !14660)
!14667 = !DILocation(line: 404, column: 6, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14660, file: !2225, line: 404, column: 6)
!14669 = !DILocation(line: 404, column: 6, scope: !14660)
!14670 = !DILocation(line: 405, column: 3, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14668, file: !2225, line: 404, column: 38)
!14672 = !DILocation(line: 406, column: 2, scope: !14671)
!14673 = !DILocation(line: 407, column: 3, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14668, file: !2225, line: 406, column: 9)
!14675 = !DILocation(line: 413, column: 1, scope: !14660)
!14676 = distinct !DISubprogram(name: "k_thread_start", scope: !3431, file: !3431, line: 205, type: !14677, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14679)
!14677 = !DISubroutineType(types: !14678)
!14678 = !{null, !2228}
!14679 = !{!14680}
!14680 = !DILocalVariable(name: "thread", arg: 1, scope: !14676, file: !3431, line: 205, type: !2228)
!14681 = !DILocation(line: 0, scope: !14676)
!14682 = !DILocation(line: 214, column: 2, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14676, file: !3431, line: 214, column: 2)
!14684 = !{i64 2154775168}
!14685 = !DILocation(line: 215, column: 2, scope: !14676)
!14686 = !DILocation(line: 216, column: 1, scope: !14676)
!14687 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14584, file: !14584, line: 47, type: !14661, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14688)
!14688 = !{!14689, !14690}
!14689 = !DILocalVariable(name: "thread", arg: 1, scope: !14687, file: !14584, line: 47, type: !2229)
!14690 = !DILocalVariable(name: "ticks", arg: 2, scope: !14687, file: !14584, line: 47, type: !14626)
!14691 = !DILocation(line: 0, scope: !14687)
!14692 = !DILocation(line: 49, column: 30, scope: !14687)
!14693 = !DILocation(line: 49, column: 2, scope: !14687)
!14694 = !DILocation(line: 50, column: 1, scope: !14687)
!14695 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2225, file: !2225, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14696)
!14696 = !{!14697, !14714}
!14697 = !DILocalVariable(name: "thread_data", scope: !14698, file: !2225, line: 750, type: !14699)
!14698 = distinct !DILexicalBlock(scope: !14695, file: !2225, line: 750, column: 2)
!14699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14700, size: 32)
!14700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !14701)
!14701 = !{!14702, !14703, !14704, !14705, !14706, !14707, !14708, !14709, !14710, !14711, !14712, !14713}
!14702 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14700, file: !122, line: 621, baseType: !2229, size: 32)
!14703 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14700, file: !122, line: 622, baseType: !14466, size: 32, offset: 32)
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14700, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!14705 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14700, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!14706 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14700, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!14707 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14700, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!14708 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14700, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!14709 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14700, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!14710 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14700, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!14711 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14700, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!14712 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14700, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14700, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!14714 = !DILocalVariable(name: "thread_data", scope: !14715, file: !2225, line: 781, type: !14699)
!14715 = distinct !DILexicalBlock(scope: !14695, file: !2225, line: 781, column: 2)
!14716 = !DILocation(line: 0, scope: !14698)
!14717 = !DILocation(line: 750, column: 2, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !2225, line: 750, column: 2)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !2225, line: 750, column: 2)
!14720 = distinct !DILexicalBlock(scope: !14698, file: !2225, line: 750, column: 2)
!14721 = !DILocation(line: 750, column: 2, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !2225, line: 750, column: 2)
!14723 = distinct !DILexicalBlock(scope: !14718, file: !2225, line: 750, column: 2)
!14724 = !DILocation(line: 750, column: 2, scope: !14719)
!14725 = !DILocation(line: 750, column: 2, scope: !14698)
!14726 = !DILocation(line: 780, column: 2, scope: !14695)
!14727 = !DILocation(line: 0, scope: !14715)
!14728 = !DILocation(line: 781, column: 2, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !2225, line: 781, column: 2)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !2225, line: 781, column: 2)
!14731 = distinct !DILexicalBlock(scope: !14715, file: !2225, line: 781, column: 2)
!14732 = !DILocation(line: 752, column: 17, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14720, file: !2225, line: 750, column: 38)
!14734 = !DILocation(line: 753, column: 17, scope: !14733)
!14735 = !DILocation(line: 754, column: 17, scope: !14733)
!14736 = !DILocation(line: 755, column: 17, scope: !14733)
!14737 = !DILocation(line: 756, column: 17, scope: !14733)
!14738 = !DILocation(line: 757, column: 17, scope: !14733)
!14739 = !DILocation(line: 758, column: 17, scope: !14733)
!14740 = !DILocation(line: 759, column: 17, scope: !14733)
!14741 = !DILocation(line: 760, column: 17, scope: !14733)
!14742 = !DILocation(line: 751, column: 3, scope: !14733)
!14743 = !DILocation(line: 763, column: 16, scope: !14733)
!14744 = !DILocation(line: 763, column: 29, scope: !14733)
!14745 = !DILocation(line: 763, column: 39, scope: !14733)
!14746 = !DILocation(line: 750, column: 2, scope: !14720)
!14747 = !DILocation(line: 750, column: 2, scope: !14723)
!14748 = distinct !{!14748, !14725, !14749}
!14749 = !DILocation(line: 764, column: 2, scope: !14698)
!14750 = !DILocation(line: 781, column: 2, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2225, line: 781, column: 2)
!14752 = distinct !DILexicalBlock(scope: !14729, file: !2225, line: 781, column: 2)
!14753 = !DILocation(line: 781, column: 2, scope: !14730)
!14754 = !DILocation(line: 781, column: 2, scope: !14715)
!14755 = !DILocation(line: 787, column: 2, scope: !14695)
!14756 = !DILocation(line: 788, column: 1, scope: !14695)
!14757 = !DILocation(line: 782, column: 20, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14759, file: !2225, line: 782, column: 7)
!14759 = distinct !DILexicalBlock(scope: !14731, file: !2225, line: 781, column: 38)
!14760 = !DILocation(line: 782, column: 31, scope: !14758)
!14761 = !DILocation(line: 782, column: 7, scope: !14759)
!14762 = !DILocation(line: 783, column: 37, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14758, file: !2225, line: 782, column: 51)
!14764 = !DILocation(line: 784, column: 10, scope: !14763)
!14765 = !DILocation(line: 783, column: 4, scope: !14763)
!14766 = !DILocation(line: 785, column: 3, scope: !14763)
!14767 = !DILocation(line: 781, column: 2, scope: !14731)
!14768 = !DILocation(line: 781, column: 2, scope: !14752)
!14769 = distinct !{!14769, !14754, !14770}
!14770 = !DILocation(line: 786, column: 2, scope: !14715)
!14771 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14772, file: !14772, line: 403, type: !14773, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14775)
!14772 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14773 = !DISubroutineType(types: !14774)
!14774 = !{!114, !114}
!14775 = !{!14776}
!14776 = !DILocalVariable(name: "t", arg: 1, scope: !14771, file: !14772, line: 403, type: !114)
!14777 = !DILocation(line: 0, scope: !14771)
!14778 = !DILocalVariable(name: "t", arg: 1, scope: !14779, file: !14772, line: 102, type: !114)
!14779 = distinct !DISubprogram(name: "z_tmcvt", scope: !14772, file: !14772, line: 102, type: !14780, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14782)
!14780 = !DISubroutineType(types: !14781)
!14781 = !{!114, !114, !113, !113, !492, !492, !492, !492}
!14782 = !{!14778, !14783, !14784, !14785, !14786, !14787, !14788, !14789, !14790, !14791, !14792}
!14783 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14779, file: !14772, line: 102, type: !113)
!14784 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14779, file: !14772, line: 103, type: !113)
!14785 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14779, file: !14772, line: 103, type: !492)
!14786 = !DILocalVariable(name: "result32", arg: 5, scope: !14779, file: !14772, line: 104, type: !492)
!14787 = !DILocalVariable(name: "round_up", arg: 6, scope: !14779, file: !14772, line: 104, type: !492)
!14788 = !DILocalVariable(name: "round_off", arg: 7, scope: !14779, file: !14772, line: 105, type: !492)
!14789 = !DILocalVariable(name: "mul_ratio", scope: !14779, file: !14772, line: 107, type: !492)
!14790 = !DILocalVariable(name: "div_ratio", scope: !14779, file: !14772, line: 109, type: !492)
!14791 = !DILocalVariable(name: "off", scope: !14779, file: !14772, line: 116, type: !114)
!14792 = !DILocalVariable(name: "rdivisor", scope: !14793, file: !14772, line: 119, type: !113)
!14793 = distinct !DILexicalBlock(scope: !14794, file: !14772, line: 118, column: 18)
!14794 = distinct !DILexicalBlock(scope: !14779, file: !14772, line: 118, column: 6)
!14795 = !DILocation(line: 0, scope: !14779, inlinedAt: !14796)
!14796 = distinct !DILocation(line: 406, column: 9, scope: !14771)
!14797 = !DILocation(line: 145, column: 13, scope: !14798, inlinedAt: !14796)
!14798 = distinct !DILexicalBlock(scope: !14799, file: !14772, line: 144, column: 10)
!14799 = distinct !DILexicalBlock(scope: !14800, file: !14772, line: 142, column: 7)
!14800 = distinct !DILexicalBlock(scope: !14801, file: !14772, line: 141, column: 24)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !14772, line: 141, column: 13)
!14802 = distinct !DILexicalBlock(scope: !14779, file: !14772, line: 134, column: 6)
!14803 = !DILocation(line: 406, column: 2, scope: !14771)
!14804 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2225, file: !2225, line: 817, type: !5073, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14805)
!14805 = !{!14806, !14807, !14808, !14809}
!14806 = !DILocalVariable(name: "entry", arg: 1, scope: !14804, file: !2225, line: 817, type: !254)
!14807 = !DILocalVariable(name: "p1", arg: 2, scope: !14804, file: !2225, line: 818, type: !104)
!14808 = !DILocalVariable(name: "p2", arg: 3, scope: !14804, file: !2225, line: 818, type: !104)
!14809 = !DILocalVariable(name: "p3", arg: 4, scope: !14804, file: !2225, line: 818, type: !104)
!14810 = !DILocation(line: 0, scope: !14804)
!14811 = !DILocation(line: 822, column: 2, scope: !14804)
!14812 = !DILocation(line: 822, column: 17, scope: !14804)
!14813 = !DILocation(line: 822, column: 30, scope: !14804)
!14814 = !DILocation(line: 823, column: 2, scope: !14804)
!14815 = !DILocation(line: 845, column: 2, scope: !14804)
!14816 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2225, file: !2225, line: 853, type: !14817, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14820)
!14817 = !DISubroutineType(types: !14818)
!14818 = !{!492, !14819}
!14819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!14820 = !{!14821, !14822}
!14821 = !DILocalVariable(name: "l", arg: 1, scope: !14816, file: !2225, line: 853, type: !14819)
!14822 = !DILocalVariable(name: "thread_cpu", scope: !14816, file: !2225, line: 855, type: !22)
!14823 = !DILocation(line: 0, scope: !14816)
!14824 = !DILocation(line: 855, column: 28, scope: !14816)
!14825 = !DILocation(line: 857, column: 17, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14816, file: !2225, line: 857, column: 6)
!14827 = !DILocation(line: 857, column: 6, scope: !14816)
!14828 = !DILocation(line: 858, column: 19, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14830, file: !2225, line: 858, column: 7)
!14830 = distinct !DILexicalBlock(scope: !14826, file: !2225, line: 857, column: 24)
!14831 = !DILocation(line: 858, column: 42, scope: !14829)
!14832 = !DILocation(line: 858, column: 28, scope: !14829)
!14833 = !DILocation(line: 858, column: 25, scope: !14829)
!14834 = !DILocation(line: 858, column: 7, scope: !14830)
!14835 = !DILocation(line: 862, column: 2, scope: !14816)
!14836 = !DILocation(line: 863, column: 1, scope: !14816)
!14837 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2225, file: !2225, line: 865, type: !14817, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14838)
!14838 = !{!14839}
!14839 = !DILocalVariable(name: "l", arg: 1, scope: !14837, file: !2225, line: 865, type: !14819)
!14840 = !DILocation(line: 0, scope: !14837)
!14841 = !DILocation(line: 867, column: 9, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14837, file: !2225, line: 867, column: 6)
!14843 = !DILocation(line: 867, column: 38, scope: !14842)
!14844 = !DILocation(line: 867, column: 24, scope: !14842)
!14845 = !DILocation(line: 867, column: 54, scope: !14842)
!14846 = !DILocation(line: 867, column: 43, scope: !14842)
!14847 = !DILocation(line: 867, column: 41, scope: !14842)
!14848 = !DILocation(line: 867, column: 20, scope: !14842)
!14849 = !DILocation(line: 867, column: 6, scope: !14837)
!14850 = !DILocation(line: 870, column: 16, scope: !14837)
!14851 = !DILocation(line: 871, column: 2, scope: !14837)
!14852 = !DILocation(line: 872, column: 1, scope: !14837)
!14853 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2225, file: !2225, line: 874, type: !14854, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14856)
!14854 = !DISubroutineType(types: !14855)
!14855 = !{null, !14819}
!14856 = !{!14857}
!14857 = !DILocalVariable(name: "l", arg: 1, scope: !14853, file: !2225, line: 874, type: !14819)
!14858 = !DILocation(line: 0, scope: !14853)
!14859 = !DILocation(line: 876, column: 32, scope: !14853)
!14860 = !DILocation(line: 876, column: 18, scope: !14853)
!14861 = !DILocation(line: 876, column: 48, scope: !14853)
!14862 = !DILocation(line: 876, column: 37, scope: !14853)
!14863 = !DILocation(line: 876, column: 35, scope: !14853)
!14864 = !DILocation(line: 876, column: 5, scope: !14853)
!14865 = !DILocation(line: 876, column: 16, scope: !14853)
!14866 = !DILocation(line: 877, column: 1, scope: !14853)
!14867 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2225, file: !2225, line: 888, type: !14868, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14870)
!14868 = !DISubroutineType(types: !14869)
!14869 = !{!105, !2229}
!14870 = !{!14871}
!14871 = !DILocalVariable(name: "thread", arg: 1, scope: !14867, file: !2225, line: 888, type: !2229)
!14872 = !DILocation(line: 0, scope: !14867)
!14873 = !DILocation(line: 893, column: 2, scope: !14867)
!14874 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2225, file: !2225, line: 897, type: !14875, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14877)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!105, !2229, !32}
!14877 = !{!14878, !14879}
!14878 = !DILocalVariable(name: "thread", arg: 1, scope: !14874, file: !2225, line: 897, type: !2229)
!14879 = !DILocalVariable(name: "options", arg: 2, scope: !14874, file: !2225, line: 897, type: !32)
!14880 = !DILocation(line: 0, scope: !14874)
!14881 = !DILocation(line: 902, column: 2, scope: !14874)
!14882 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2225, file: !2225, line: 1072, type: !14883, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14888)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{!105, !2228, !14885}
!14885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14886, size: 32)
!14886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !14887)
!14887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!14888 = !{!14889, !14890}
!14889 = !DILocalVariable(name: "thread", arg: 1, scope: !14882, file: !2225, line: 1072, type: !2228)
!14890 = !DILocalVariable(name: "stats", arg: 2, scope: !14882, file: !2225, line: 1073, type: !14885)
!14891 = !DILocation(line: 0, scope: !14882)
!14892 = !DILocation(line: 1075, column: 14, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14882, file: !2225, line: 1075, column: 6)
!14894 = !DILocation(line: 1075, column: 23, scope: !14893)
!14895 = !DILocation(line: 1086, column: 1, scope: !14882)
!14896 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2225, file: !2225, line: 1088, type: !14897, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !14899)
!14897 = !DISubroutineType(types: !14898)
!14898 = !{!105, !14885}
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "stats", arg: 1, scope: !14896, file: !2225, line: 1088, type: !14885)
!14901 = !DILocation(line: 0, scope: !14896)
!14902 = !DILocation(line: 1094, column: 12, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14896, file: !2225, line: 1094, column: 6)
!14904 = !DILocation(line: 1120, column: 1, scope: !14896)
!14905 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14906, file: !14906, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3160, retainedNodes: !397)
!14906 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14907 = !DILocation(line: 30, column: 2, scope: !14905)
!14908 = !DILocation(line: 31, column: 1, scope: !14905)
!14909 = distinct !DISubprogram(name: "idle", scope: !14906, file: !14906, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3160, retainedNodes: !14910)
!14910 = !{!14911, !14912, !14913}
!14911 = !DILocalVariable(name: "unused1", arg: 1, scope: !14909, file: !14906, line: 33, type: !104)
!14912 = !DILocalVariable(name: "unused2", arg: 2, scope: !14909, file: !14906, line: 33, type: !104)
!14913 = !DILocalVariable(name: "unused3", arg: 3, scope: !14909, file: !14906, line: 33, type: !104)
!14914 = !DILocation(line: 0, scope: !14909)
!14915 = !DILocation(line: 39, column: 2, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14917, file: !14906, line: 39, column: 2)
!14917 = distinct !DILexicalBlock(scope: !14909, file: !14906, line: 39, column: 2)
!14918 = !DILocation(line: 39, column: 2, scope: !14917)
!14919 = !DILocation(line: 39, column: 2, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14916, file: !14906, line: 39, column: 2)
!14921 = !DILocation(line: 55, column: 2, scope: !14922, inlinedAt: !14926)
!14922 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3160, retainedNodes: !14923)
!14923 = !{!14924, !14925}
!14924 = !DILocalVariable(name: "key", scope: !14922, file: !7468, line: 44, type: !32)
!14925 = !DILocalVariable(name: "tmp", scope: !14922, file: !7468, line: 53, type: !32)
!14926 = distinct !DILocation(line: 62, column: 10, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14909, file: !14906, line: 41, column: 15)
!14928 = !{i64 2242917}
!14929 = !DILocation(line: 0, scope: !14922, inlinedAt: !14926)
!14930 = !DILocation(line: 86, column: 3, scope: !14927)
!14931 = !DILocation(line: 41, column: 2, scope: !14909)
!14932 = distinct !{!14932, !14931, !14933}
!14933 = !DILocation(line: 105, column: 2, scope: !14909)
!14934 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3160, retainedNodes: !397)
!14935 = !DILocation(line: 5629, column: 2, scope: !14934)
!14936 = !DILocation(line: 5630, column: 1, scope: !14934)
!14937 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14938 = distinct !DISubprogram(name: "k_msgq_init", scope: !14939, file: !14939, line: 35, type: !14940, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !14955)
!14939 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14940 = !DISubroutineType(types: !14941)
!14941 = !{null, !14942, !102, !111, !113}
!14942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14943, size: 32)
!14943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !14944)
!14944 = !{!14945, !14946, !14947, !14948, !14949, !14950, !14951, !14952, !14953, !14954}
!14945 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14943, file: !122, line: 4206, baseType: !3198, size: 64)
!14946 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14943, file: !122, line: 4208, baseType: !3260, size: 32, offset: 64)
!14947 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14943, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!14948 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14943, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!14949 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14943, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!14950 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14943, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!14951 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14943, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!14952 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14943, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!14953 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14943, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!14954 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14943, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!14955 = !{!14956, !14957, !14958, !14959}
!14956 = !DILocalVariable(name: "msgq", arg: 1, scope: !14938, file: !14939, line: 35, type: !14942)
!14957 = !DILocalVariable(name: "buffer", arg: 2, scope: !14938, file: !14939, line: 35, type: !102)
!14958 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14938, file: !14939, line: 35, type: !111)
!14959 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14938, file: !14939, line: 36, type: !113)
!14960 = !DILocation(line: 0, scope: !14938)
!14961 = !DILocation(line: 38, column: 8, scope: !14938)
!14962 = !DILocation(line: 38, column: 17, scope: !14938)
!14963 = !DILocation(line: 39, column: 8, scope: !14938)
!14964 = !DILocation(line: 39, column: 17, scope: !14938)
!14965 = !DILocation(line: 40, column: 8, scope: !14938)
!14966 = !DILocation(line: 40, column: 21, scope: !14938)
!14967 = !DILocation(line: 41, column: 40, scope: !14938)
!14968 = !DILocation(line: 41, column: 28, scope: !14938)
!14969 = !DILocation(line: 41, column: 8, scope: !14938)
!14970 = !DILocation(line: 41, column: 19, scope: !14938)
!14971 = !DILocation(line: 42, column: 8, scope: !14938)
!14972 = !DILocation(line: 42, column: 17, scope: !14938)
!14973 = !DILocation(line: 43, column: 8, scope: !14938)
!14974 = !DILocation(line: 43, column: 18, scope: !14938)
!14975 = !DILocation(line: 44, column: 8, scope: !14938)
!14976 = !DILocation(line: 44, column: 18, scope: !14938)
!14977 = !DILocation(line: 45, column: 8, scope: !14938)
!14978 = !DILocation(line: 45, column: 14, scope: !14938)
!14979 = !DILocation(line: 46, column: 22, scope: !14938)
!14980 = !DILocation(line: 46, column: 2, scope: !14938)
!14981 = !DILocation(line: 47, column: 15, scope: !14938)
!14982 = !DILocation(line: 55, column: 1, scope: !14938)
!14983 = distinct !DISubprogram(name: "z_waitq_init", scope: !14516, file: !14516, line: 47, type: !14984, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{null, !3197}
!14986 = !{!14987}
!14987 = !DILocalVariable(name: "w", arg: 1, scope: !14983, file: !14516, line: 47, type: !3197)
!14988 = !DILocation(line: 0, scope: !14983)
!14989 = !DILocation(line: 49, column: 21, scope: !14983)
!14990 = !DILocation(line: 49, column: 2, scope: !14983)
!14991 = !DILocation(line: 50, column: 1, scope: !14983)
!14992 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14993, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !14996)
!14993 = !DISubroutineType(types: !14994)
!14994 = !{null, !14995}
!14995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 32)
!14996 = !{!14997}
!14997 = !DILocalVariable(name: "list", arg: 1, scope: !14992, file: !137, line: 197, type: !14995)
!14998 = !DILocation(line: 0, scope: !14992)
!14999 = !DILocation(line: 199, column: 8, scope: !14992)
!15000 = !DILocation(line: 199, column: 13, scope: !14992)
!15001 = !DILocation(line: 200, column: 8, scope: !14992)
!15002 = !DILocation(line: 200, column: 13, scope: !14992)
!15003 = !DILocation(line: 201, column: 1, scope: !14992)
!15004 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14939, file: !14939, line: 57, type: !15005, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15007)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{!105, !14942, !111, !113}
!15007 = !{!15008, !15009, !15010, !15011, !15012, !15013}
!15008 = !DILocalVariable(name: "msgq", arg: 1, scope: !15004, file: !14939, line: 57, type: !14942)
!15009 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15004, file: !14939, line: 57, type: !111)
!15010 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15004, file: !14939, line: 58, type: !113)
!15011 = !DILocalVariable(name: "buffer", scope: !15004, file: !14939, line: 60, type: !104)
!15012 = !DILocalVariable(name: "ret", scope: !15004, file: !14939, line: 61, type: !105)
!15013 = !DILocalVariable(name: "total_size", scope: !15004, file: !14939, line: 62, type: !111)
!15014 = !DILocation(line: 0, scope: !15004)
!15015 = !DILocation(line: 62, column: 2, scope: !15004)
!15016 = !DILocation(line: 66, column: 6, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !15004, file: !14939, line: 66, column: 6)
!15018 = !DILocation(line: 66, column: 6, scope: !15004)
!15019 = !DILocation(line: 69, column: 28, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15017, file: !14939, line: 68, column: 9)
!15021 = !DILocation(line: 69, column: 12, scope: !15020)
!15022 = !DILocation(line: 70, column: 14, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15020, file: !14939, line: 70, column: 7)
!15024 = !DILocation(line: 70, column: 7, scope: !15020)
!15025 = !DILocation(line: 71, column: 4, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15023, file: !14939, line: 70, column: 23)
!15027 = !DILocation(line: 72, column: 10, scope: !15026)
!15028 = !DILocation(line: 72, column: 16, scope: !15026)
!15029 = !DILocation(line: 74, column: 3, scope: !15026)
!15030 = !DILocation(line: 0, scope: !15017)
!15031 = !DILocation(line: 82, column: 1, scope: !15004)
!15032 = !DILocation(line: 81, column: 2, scope: !15004)
!15033 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15034, file: !15034, line: 105, type: !15035, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15037)
!15034 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15035 = !DISubroutineType(types: !15036)
!15036 = !{!492, !111, !111, !2633}
!15037 = !{!15038, !15039, !15040}
!15038 = !DILocalVariable(name: "a", arg: 1, scope: !15033, file: !15034, line: 105, type: !111)
!15039 = !DILocalVariable(name: "b", arg: 2, scope: !15033, file: !15034, line: 105, type: !111)
!15040 = !DILocalVariable(name: "result", arg: 3, scope: !15033, file: !15034, line: 105, type: !2633)
!15041 = !DILocation(line: 0, scope: !15033)
!15042 = !DILocation(line: 107, column: 9, scope: !15033)
!15043 = !DILocation(line: 107, column: 2, scope: !15033)
!15044 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15045, file: !15045, line: 102, type: !15046, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15047)
!15045 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15046 = !DISubroutineType(types: !3141)
!15047 = !{!15048}
!15048 = !DILocalVariable(name: "size", arg: 1, scope: !15044, file: !15045, line: 102, type: !111)
!15049 = !DILocation(line: 0, scope: !15044)
!15050 = !DILocation(line: 104, column: 9, scope: !15044)
!15051 = !DILocation(line: 104, column: 2, scope: !15044)
!15052 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15045, file: !15045, line: 87, type: !15053, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15053 = !DISubroutineType(types: !15054)
!15054 = !{!104, !111, !111}
!15055 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14939, file: !14939, line: 95, type: !15056, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!105, !14942}
!15058 = !{!15059}
!15059 = !DILocalVariable(name: "msgq", arg: 1, scope: !15055, file: !14939, line: 95, type: !14942)
!15060 = !DILocation(line: 0, scope: !15055)
!15061 = !DILocation(line: 99, column: 2, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15055, file: !14939, line: 99, column: 2)
!15063 = !DILocation(line: 99, column: 2, scope: !15055)
!15064 = !DILocation(line: 105, column: 13, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15055, file: !14939, line: 105, column: 6)
!15066 = !DILocation(line: 105, column: 19, scope: !15065)
!15067 = !DILocation(line: 105, column: 40, scope: !15065)
!15068 = !DILocation(line: 105, column: 6, scope: !15055)
!15069 = !DILocation(line: 106, column: 16, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15065, file: !14939, line: 105, column: 47)
!15071 = !DILocation(line: 106, column: 3, scope: !15070)
!15072 = !DILocation(line: 107, column: 15, scope: !15070)
!15073 = !DILocation(line: 108, column: 2, scope: !15070)
!15074 = !DILocation(line: 113, column: 1, scope: !15055)
!15075 = distinct !DISubprogram(name: "z_waitq_head", scope: !14516, file: !14516, line: 52, type: !15076, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15078)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!3180, !3197}
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "w", arg: 1, scope: !15075, file: !14516, line: 52, type: !3197)
!15080 = !DILocation(line: 0, scope: !15075)
!15081 = !DILocation(line: 54, column: 52, scope: !15075)
!15082 = !DILocation(line: 54, column: 28, scope: !15075)
!15083 = !DILocation(line: 54, column: 9, scope: !15075)
!15084 = !DILocation(line: 54, column: 2, scope: !15075)
!15085 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7723, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15086 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15087, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15089)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{!3165, !14995}
!15089 = !{!15090}
!15090 = !DILocalVariable(name: "list", arg: 1, scope: !15086, file: !137, line: 294, type: !14995)
!15091 = !DILocation(line: 0, scope: !15086)
!15092 = !DILocation(line: 296, column: 9, scope: !15086)
!15093 = !DILocation(line: 296, column: 49, scope: !15086)
!15094 = !DILocation(line: 296, column: 2, scope: !15086)
!15095 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15096, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15098)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{!492, !14995}
!15098 = !{!15099}
!15099 = !DILocalVariable(name: "list", arg: 1, scope: !15095, file: !137, line: 266, type: !14995)
!15100 = !DILocation(line: 0, scope: !15095)
!15101 = !DILocation(line: 268, column: 15, scope: !15095)
!15102 = !DILocation(line: 268, column: 20, scope: !15095)
!15103 = !DILocation(line: 268, column: 2, scope: !15095)
!15104 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14939, file: !14939, line: 116, type: !15105, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15111)
!15105 = !DISubroutineType(types: !15106)
!15106 = !{!105, !14942, !13, !15107}
!15107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15108)
!15108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15109)
!15109 = !{!15110}
!15110 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15108, file: !108, line: 66, baseType: !107, size: 64)
!15111 = !{!15112, !15113, !15114, !15115, !15116, !15121}
!15112 = !DILocalVariable(name: "msgq", arg: 1, scope: !15104, file: !14939, line: 116, type: !14942)
!15113 = !DILocalVariable(name: "data", arg: 2, scope: !15104, file: !14939, line: 116, type: !13)
!15114 = !DILocalVariable(name: "timeout", arg: 3, scope: !15104, file: !14939, line: 116, type: !15107)
!15115 = !DILocalVariable(name: "pending_thread", scope: !15104, file: !14939, line: 120, type: !3180)
!15116 = !DILocalVariable(name: "key", scope: !15104, file: !14939, line: 121, type: !15117)
!15117 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15118)
!15118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15119)
!15119 = !{!15120}
!15120 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15118, file: !236, line: 33, baseType: !105, size: 32)
!15121 = !DILocalVariable(name: "result", scope: !15104, file: !14939, line: 122, type: !105)
!15122 = !DILocation(line: 0, scope: !15104)
!15123 = !DILocation(line: 1031, column: 3, scope: !15124, inlinedAt: !15127)
!15124 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15125)
!15125 = !{!15126}
!15126 = !DILocalVariable(name: "result", scope: !15124, file: !7786, line: 1029, type: !113)
!15127 = distinct !DILocation(line: 48, column: 10, scope: !15128, inlinedAt: !15129)
!15128 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !397)
!15129 = distinct !DILocation(line: 118, column: 2, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15131, file: !14939, line: 118, column: 2)
!15131 = distinct !DILexicalBlock(scope: !15104, file: !14939, line: 118, column: 2)
!15132 = !{i64 3503925}
!15133 = !DILocation(line: 0, scope: !15124, inlinedAt: !15127)
!15134 = !DILocation(line: 48, column: 9, scope: !15128, inlinedAt: !15129)
!15135 = !DILocation(line: 118, column: 2, scope: !15130)
!15136 = !DILocation(line: 118, column: 2, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15130, file: !14939, line: 118, column: 2)
!15138 = !DILocation(line: 124, column: 27, scope: !15104)
!15139 = !DILocalVariable(name: "l", arg: 1, scope: !15140, file: !236, line: 136, type: !15143)
!15140 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15141, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15144)
!15141 = !DISubroutineType(types: !15142)
!15142 = !{!15117, !15143}
!15143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!15144 = !{!15139, !15145}
!15145 = !DILocalVariable(name: "k", scope: !15140, file: !236, line: 139, type: !15117)
!15146 = !DILocation(line: 0, scope: !15140, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 124, column: 8, scope: !15104)
!15148 = !DILocation(line: 55, column: 2, scope: !15149, inlinedAt: !15153)
!15149 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15150)
!15150 = !{!15151, !15152}
!15151 = !DILocalVariable(name: "key", scope: !15149, file: !7468, line: 44, type: !32)
!15152 = !DILocalVariable(name: "tmp", scope: !15149, file: !7468, line: 53, type: !32)
!15153 = distinct !DILocation(line: 145, column: 10, scope: !15140, inlinedAt: !15147)
!15154 = !{i64 2249054}
!15155 = !DILocation(line: 0, scope: !15149, inlinedAt: !15153)
!15156 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15147)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !236, line: 148, column: 2)
!15158 = distinct !DILexicalBlock(scope: !15140, file: !236, line: 148, column: 2)
!15159 = !DILocation(line: 148, column: 2, scope: !15158, inlinedAt: !15147)
!15160 = !DILocation(line: 148, column: 2, scope: !15161, inlinedAt: !15147)
!15161 = distinct !DILexicalBlock(scope: !15157, file: !236, line: 148, column: 2)
!15162 = !DILocation(line: 160, column: 2, scope: !15140, inlinedAt: !15147)
!15163 = !DILocation(line: 128, column: 12, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15104, file: !14939, line: 128, column: 6)
!15165 = !DILocation(line: 128, column: 30, scope: !15164)
!15166 = !DILocation(line: 128, column: 22, scope: !15164)
!15167 = !DILocation(line: 128, column: 6, scope: !15104)
!15168 = !DILocation(line: 130, column: 49, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !14939, line: 128, column: 40)
!15170 = !DILocation(line: 130, column: 20, scope: !15169)
!15171 = !DILocation(line: 131, column: 22, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15169, file: !14939, line: 131, column: 7)
!15173 = !DILocation(line: 131, column: 7, scope: !15169)
!15174 = !DILocation(line: 135, column: 38, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15172, file: !14939, line: 131, column: 31)
!15176 = !DILocation(line: 136, column: 17, scope: !15175)
!15177 = !DILocation(line: 135, column: 10, scope: !15175)
!15178 = !DILocalVariable(name: "thread", arg: 1, scope: !15179, file: !14196, line: 65, type: !3180)
!15179 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14196, file: !14196, line: 65, type: !15180, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15182)
!15180 = !DISubroutineType(types: !15181)
!15181 = !{null, !3180, !32}
!15182 = !{!15178, !15183}
!15183 = !DILocalVariable(name: "value", arg: 2, scope: !15179, file: !14196, line: 65, type: !32)
!15184 = !DILocation(line: 0, scope: !15179, inlinedAt: !15185)
!15185 = distinct !DILocation(line: 138, column: 4, scope: !15175)
!15186 = !DILocation(line: 67, column: 15, scope: !15179, inlinedAt: !15185)
!15187 = !DILocation(line: 67, column: 33, scope: !15179, inlinedAt: !15185)
!15188 = !DILocation(line: 139, column: 4, scope: !15175)
!15189 = !DILocation(line: 140, column: 4, scope: !15175)
!15190 = !DILocation(line: 141, column: 4, scope: !15175)
!15191 = !DILocation(line: 144, column: 23, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15172, file: !14939, line: 142, column: 10)
!15193 = !DILocation(line: 144, column: 46, scope: !15192)
!15194 = !DILocation(line: 144, column: 10, scope: !15192)
!15195 = !DILocation(line: 145, column: 29, scope: !15192)
!15196 = !DILocation(line: 145, column: 20, scope: !15192)
!15197 = !DILocation(line: 146, column: 33, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15192, file: !14939, line: 146, column: 8)
!15199 = !DILocation(line: 146, column: 24, scope: !15198)
!15200 = !DILocation(line: 146, column: 8, scope: !15192)
!15201 = !DILocation(line: 147, column: 29, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15198, file: !14939, line: 146, column: 45)
!15203 = !DILocation(line: 147, column: 21, scope: !15202)
!15204 = !DILocation(line: 148, column: 4, scope: !15202)
!15205 = !DILocation(line: 149, column: 19, scope: !15192)
!15206 = !DILocation(line: 155, column: 2, scope: !15169)
!15207 = !DILocation(line: 155, column: 13, scope: !15164)
!15208 = !DILocation(line: 162, column: 3, scope: !15209)
!15209 = distinct !DILexicalBlock(scope: !15210, file: !14939, line: 158, column: 9)
!15210 = distinct !DILexicalBlock(scope: !15164, file: !14939, line: 155, column: 13)
!15211 = !DILocation(line: 162, column: 18, scope: !15209)
!15212 = !DILocation(line: 162, column: 28, scope: !15209)
!15213 = !DILocation(line: 164, column: 49, scope: !15209)
!15214 = !DILocation(line: 164, column: 12, scope: !15209)
!15215 = !DILocation(line: 166, column: 3, scope: !15209)
!15216 = !DILocation(line: 0, scope: !15164)
!15217 = !DILocalVariable(name: "key", arg: 2, scope: !15218, file: !236, line: 190, type: !15117)
!15218 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15219, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15221)
!15219 = !DISubroutineType(types: !15220)
!15220 = !{null, !15143, !15117}
!15221 = !{!15222, !15217}
!15222 = !DILocalVariable(name: "l", arg: 1, scope: !15218, file: !236, line: 189, type: !15143)
!15223 = !DILocation(line: 0, scope: !15218, inlinedAt: !15224)
!15224 = distinct !DILocation(line: 171, column: 2, scope: !15104)
!15225 = !DILocation(line: 194, column: 2, scope: !15226, inlinedAt: !15224)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !236, line: 194, column: 2)
!15227 = distinct !DILexicalBlock(scope: !15218, file: !236, line: 194, column: 2)
!15228 = !DILocation(line: 194, column: 2, scope: !15227, inlinedAt: !15224)
!15229 = !DILocation(line: 194, column: 2, scope: !15230, inlinedAt: !15224)
!15230 = distinct !DILexicalBlock(scope: !15226, file: !236, line: 194, column: 2)
!15231 = !DILocalVariable(name: "key", arg: 1, scope: !15232, file: !7468, line: 84, type: !32)
!15232 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15233)
!15233 = !{!15231}
!15234 = !DILocation(line: 0, scope: !15232, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 215, column: 2, scope: !15218, inlinedAt: !15224)
!15236 = !DILocation(line: 95, column: 2, scope: !15232, inlinedAt: !15235)
!15237 = !{i64 2249871}
!15238 = !DILocation(line: 173, column: 2, scope: !15104)
!15239 = !DILocation(line: 174, column: 1, scope: !15104)
!15240 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14939, file: !14939, line: 188, type: !15241, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15249)
!15241 = !DISubroutineType(types: !15242)
!15242 = !{null, !14942, !15243}
!15243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15244, size: 32)
!15244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15245)
!15245 = !{!15246, !15247, !15248}
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15244, file: !122, line: 4261, baseType: !111, size: 32)
!15247 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15244, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15248 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15244, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15249 = !{!15250, !15251}
!15250 = !DILocalVariable(name: "msgq", arg: 1, scope: !15240, file: !14939, line: 188, type: !14942)
!15251 = !DILocalVariable(name: "attrs", arg: 2, scope: !15240, file: !14939, line: 188, type: !15243)
!15252 = !DILocation(line: 0, scope: !15240)
!15253 = !DILocation(line: 190, column: 26, scope: !15240)
!15254 = !DILocation(line: 190, column: 9, scope: !15240)
!15255 = !DILocation(line: 190, column: 18, scope: !15240)
!15256 = !DILocation(line: 191, column: 26, scope: !15240)
!15257 = !DILocation(line: 191, column: 9, scope: !15240)
!15258 = !DILocation(line: 191, column: 18, scope: !15240)
!15259 = !DILocation(line: 192, column: 27, scope: !15240)
!15260 = !DILocation(line: 192, column: 9, scope: !15240)
!15261 = !DILocation(line: 192, column: 19, scope: !15240)
!15262 = !DILocation(line: 193, column: 1, scope: !15240)
!15263 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14939, file: !14939, line: 206, type: !15264, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15266)
!15264 = !DISubroutineType(types: !15265)
!15265 = !{!105, !14942, !104, !15107}
!15266 = !{!15267, !15268, !15269, !15270, !15271, !15272}
!15267 = !DILocalVariable(name: "msgq", arg: 1, scope: !15263, file: !14939, line: 206, type: !14942)
!15268 = !DILocalVariable(name: "data", arg: 2, scope: !15263, file: !14939, line: 206, type: !104)
!15269 = !DILocalVariable(name: "timeout", arg: 3, scope: !15263, file: !14939, line: 206, type: !15107)
!15270 = !DILocalVariable(name: "key", scope: !15263, file: !14939, line: 210, type: !15117)
!15271 = !DILocalVariable(name: "pending_thread", scope: !15263, file: !14939, line: 211, type: !3180)
!15272 = !DILocalVariable(name: "result", scope: !15263, file: !14939, line: 212, type: !105)
!15273 = !DILocation(line: 0, scope: !15263)
!15274 = !DILocation(line: 1031, column: 3, scope: !15124, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 48, column: 10, scope: !15128, inlinedAt: !15276)
!15276 = distinct !DILocation(line: 208, column: 2, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15278, file: !14939, line: 208, column: 2)
!15278 = distinct !DILexicalBlock(scope: !15263, file: !14939, line: 208, column: 2)
!15279 = !DILocation(line: 0, scope: !15124, inlinedAt: !15275)
!15280 = !DILocation(line: 48, column: 9, scope: !15128, inlinedAt: !15276)
!15281 = !DILocation(line: 208, column: 2, scope: !15277)
!15282 = !DILocation(line: 208, column: 2, scope: !15283)
!15283 = distinct !DILexicalBlock(scope: !15277, file: !14939, line: 208, column: 2)
!15284 = !DILocation(line: 214, column: 27, scope: !15263)
!15285 = !DILocation(line: 0, scope: !15140, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 214, column: 8, scope: !15263)
!15287 = !DILocation(line: 55, column: 2, scope: !15149, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 145, column: 10, scope: !15140, inlinedAt: !15286)
!15289 = !DILocation(line: 0, scope: !15149, inlinedAt: !15288)
!15290 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15286)
!15291 = !DILocation(line: 148, column: 2, scope: !15158, inlinedAt: !15286)
!15292 = !DILocation(line: 148, column: 2, scope: !15161, inlinedAt: !15286)
!15293 = !DILocation(line: 160, column: 2, scope: !15140, inlinedAt: !15286)
!15294 = !DILocation(line: 218, column: 12, scope: !15295)
!15295 = distinct !DILexicalBlock(scope: !15263, file: !14939, line: 218, column: 6)
!15296 = !DILocation(line: 218, column: 22, scope: !15295)
!15297 = !DILocation(line: 218, column: 6, scope: !15263)
!15298 = !DILocation(line: 220, column: 28, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15295, file: !14939, line: 218, column: 28)
!15300 = !DILocation(line: 220, column: 44, scope: !15299)
!15301 = !DILocation(line: 220, column: 9, scope: !15299)
!15302 = !DILocation(line: 221, column: 27, scope: !15299)
!15303 = !DILocation(line: 221, column: 18, scope: !15299)
!15304 = !DILocation(line: 222, column: 31, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15299, file: !14939, line: 222, column: 7)
!15306 = !DILocation(line: 222, column: 22, scope: !15305)
!15307 = !DILocation(line: 222, column: 7, scope: !15299)
!15308 = !DILocation(line: 223, column: 27, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15305, file: !14939, line: 222, column: 43)
!15310 = !DILocation(line: 223, column: 19, scope: !15309)
!15311 = !DILocation(line: 224, column: 3, scope: !15309)
!15312 = !DILocation(line: 225, column: 18, scope: !15299)
!15313 = !DILocation(line: 228, column: 49, scope: !15299)
!15314 = !DILocation(line: 228, column: 20, scope: !15299)
!15315 = !DILocation(line: 229, column: 22, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15299, file: !14939, line: 229, column: 7)
!15317 = !DILocation(line: 229, column: 7, scope: !15299)
!15318 = !DILocation(line: 233, column: 23, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15316, file: !14939, line: 229, column: 31)
!15320 = !DILocation(line: 233, column: 55, scope: !15319)
!15321 = !DILocation(line: 234, column: 17, scope: !15319)
!15322 = !DILocation(line: 233, column: 10, scope: !15319)
!15323 = !DILocation(line: 235, column: 29, scope: !15319)
!15324 = !DILocation(line: 235, column: 20, scope: !15319)
!15325 = !DILocation(line: 236, column: 33, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15319, file: !14939, line: 236, column: 8)
!15327 = !DILocation(line: 236, column: 24, scope: !15326)
!15328 = !DILocation(line: 236, column: 8, scope: !15319)
!15329 = !DILocation(line: 237, column: 29, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15326, file: !14939, line: 236, column: 45)
!15331 = !DILocation(line: 237, column: 21, scope: !15330)
!15332 = !DILocation(line: 238, column: 4, scope: !15330)
!15333 = !DILocation(line: 239, column: 19, scope: !15319)
!15334 = !DILocation(line: 0, scope: !15179, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 242, column: 4, scope: !15319)
!15336 = !DILocation(line: 67, column: 15, scope: !15179, inlinedAt: !15335)
!15337 = !DILocation(line: 67, column: 33, scope: !15179, inlinedAt: !15335)
!15338 = !DILocation(line: 243, column: 4, scope: !15319)
!15339 = !DILocation(line: 244, column: 4, scope: !15319)
!15340 = !DILocation(line: 248, column: 4, scope: !15319)
!15341 = !DILocation(line: 251, column: 13, scope: !15295)
!15342 = !DILocation(line: 258, column: 3, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15344, file: !14939, line: 254, column: 9)
!15344 = distinct !DILexicalBlock(scope: !15295, file: !14939, line: 251, column: 13)
!15345 = !DILocation(line: 258, column: 18, scope: !15343)
!15346 = !DILocation(line: 258, column: 28, scope: !15343)
!15347 = !DILocation(line: 260, column: 49, scope: !15343)
!15348 = !DILocation(line: 260, column: 12, scope: !15343)
!15349 = !DILocation(line: 262, column: 3, scope: !15343)
!15350 = !DILocation(line: 0, scope: !15295)
!15351 = !DILocation(line: 0, scope: !15218, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 267, column: 2, scope: !15263)
!15353 = !DILocation(line: 194, column: 2, scope: !15226, inlinedAt: !15352)
!15354 = !DILocation(line: 194, column: 2, scope: !15227, inlinedAt: !15352)
!15355 = !DILocation(line: 194, column: 2, scope: !15230, inlinedAt: !15352)
!15356 = !DILocation(line: 0, scope: !15232, inlinedAt: !15357)
!15357 = distinct !DILocation(line: 215, column: 2, scope: !15218, inlinedAt: !15352)
!15358 = !DILocation(line: 95, column: 2, scope: !15232, inlinedAt: !15357)
!15359 = !DILocation(line: 269, column: 2, scope: !15263)
!15360 = !DILocation(line: 270, column: 1, scope: !15263)
!15361 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14939, file: !14939, line: 284, type: !15362, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15364)
!15362 = !DISubroutineType(types: !15363)
!15363 = !{!105, !14942, !104}
!15364 = !{!15365, !15366, !15367, !15368}
!15365 = !DILocalVariable(name: "msgq", arg: 1, scope: !15361, file: !14939, line: 284, type: !14942)
!15366 = !DILocalVariable(name: "data", arg: 2, scope: !15361, file: !14939, line: 284, type: !104)
!15367 = !DILocalVariable(name: "key", scope: !15361, file: !14939, line: 286, type: !15117)
!15368 = !DILocalVariable(name: "result", scope: !15361, file: !14939, line: 287, type: !105)
!15369 = !DILocation(line: 0, scope: !15361)
!15370 = !DILocation(line: 289, column: 27, scope: !15361)
!15371 = !DILocation(line: 0, scope: !15140, inlinedAt: !15372)
!15372 = distinct !DILocation(line: 289, column: 8, scope: !15361)
!15373 = !DILocation(line: 55, column: 2, scope: !15149, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 145, column: 10, scope: !15140, inlinedAt: !15372)
!15375 = !DILocation(line: 0, scope: !15149, inlinedAt: !15374)
!15376 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15372)
!15377 = !DILocation(line: 148, column: 2, scope: !15158, inlinedAt: !15372)
!15378 = !DILocation(line: 148, column: 2, scope: !15161, inlinedAt: !15372)
!15379 = !DILocation(line: 160, column: 2, scope: !15140, inlinedAt: !15372)
!15380 = !DILocation(line: 291, column: 12, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15361, file: !14939, line: 291, column: 6)
!15382 = !DILocation(line: 291, column: 22, scope: !15381)
!15383 = !DILocation(line: 291, column: 6, scope: !15361)
!15384 = !DILocation(line: 293, column: 28, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15381, file: !14939, line: 291, column: 28)
!15386 = !DILocation(line: 293, column: 44, scope: !15385)
!15387 = !DILocation(line: 293, column: 9, scope: !15385)
!15388 = !DILocation(line: 295, column: 2, scope: !15385)
!15389 = !DILocation(line: 0, scope: !15381)
!15390 = !DILocation(line: 0, scope: !15218, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 302, column: 2, scope: !15361)
!15392 = !DILocation(line: 194, column: 2, scope: !15226, inlinedAt: !15391)
!15393 = !DILocation(line: 194, column: 2, scope: !15227, inlinedAt: !15391)
!15394 = !DILocation(line: 194, column: 2, scope: !15230, inlinedAt: !15391)
!15395 = !DILocation(line: 0, scope: !15232, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 215, column: 2, scope: !15218, inlinedAt: !15391)
!15397 = !DILocation(line: 95, column: 2, scope: !15232, inlinedAt: !15396)
!15398 = !DILocation(line: 304, column: 2, scope: !15361)
!15399 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14939, file: !14939, line: 318, type: !15400, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3162, retainedNodes: !15402)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{null, !14942}
!15402 = !{!15403, !15404, !15405}
!15403 = !DILocalVariable(name: "msgq", arg: 1, scope: !15399, file: !14939, line: 318, type: !14942)
!15404 = !DILocalVariable(name: "key", scope: !15399, file: !14939, line: 320, type: !15117)
!15405 = !DILocalVariable(name: "pending_thread", scope: !15399, file: !14939, line: 321, type: !3180)
!15406 = !DILocation(line: 0, scope: !15399)
!15407 = !DILocation(line: 323, column: 27, scope: !15399)
!15408 = !DILocation(line: 0, scope: !15140, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 323, column: 8, scope: !15399)
!15410 = !DILocation(line: 55, column: 2, scope: !15149, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 145, column: 10, scope: !15140, inlinedAt: !15409)
!15412 = !DILocation(line: 0, scope: !15149, inlinedAt: !15411)
!15413 = !DILocation(line: 148, column: 2, scope: !15157, inlinedAt: !15409)
!15414 = !DILocation(line: 148, column: 2, scope: !15158, inlinedAt: !15409)
!15415 = !DILocation(line: 148, column: 2, scope: !15161, inlinedAt: !15409)
!15416 = !DILocation(line: 160, column: 2, scope: !15140, inlinedAt: !15409)
!15417 = !DILocation(line: 328, column: 27, scope: !15399)
!15418 = !DILocation(line: 328, column: 65, scope: !15399)
!15419 = !DILocation(line: 328, column: 2, scope: !15399)
!15420 = !DILocation(line: 0, scope: !15179, inlinedAt: !15421)
!15421 = distinct !DILocation(line: 329, column: 3, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15399, file: !14939, line: 328, column: 74)
!15423 = !DILocation(line: 67, column: 15, scope: !15179, inlinedAt: !15421)
!15424 = !DILocation(line: 67, column: 33, scope: !15179, inlinedAt: !15421)
!15425 = !DILocation(line: 330, column: 3, scope: !15422)
!15426 = distinct !{!15426, !15419, !15427}
!15427 = !DILocation(line: 331, column: 2, scope: !15399)
!15428 = !DILocation(line: 333, column: 8, scope: !15399)
!15429 = !DILocation(line: 333, column: 18, scope: !15399)
!15430 = !DILocation(line: 334, column: 25, scope: !15399)
!15431 = !DILocation(line: 334, column: 8, scope: !15399)
!15432 = !DILocation(line: 334, column: 17, scope: !15399)
!15433 = !DILocation(line: 336, column: 2, scope: !15399)
!15434 = !DILocation(line: 337, column: 1, scope: !15399)
!15435 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2370, file: !2370, line: 41, type: !15436, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15449)
!15436 = !DISubroutineType(types: !15437)
!15437 = !{!105, !15438, !32, !32}
!15438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15439, size: 32)
!15439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !15440)
!15440 = !{!15441, !15447, !15448}
!15441 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15439, file: !122, line: 2910, baseType: !15442, size: 64)
!15442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15443)
!15443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15444)
!15444 = !{!15445}
!15445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15443, file: !163, line: 232, baseType: !15446, size: 64)
!15446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2356)
!15447 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15439, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!15448 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15439, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!15449 = !{!15450, !15451, !15452}
!15450 = !DILocalVariable(name: "sem", arg: 1, scope: !15435, file: !2370, line: 41, type: !15438)
!15451 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15435, file: !2370, line: 41, type: !32)
!15452 = !DILocalVariable(name: "limit", arg: 3, scope: !15435, file: !2370, line: 42, type: !32)
!15453 = !DILocation(line: 0, scope: !15435)
!15454 = !DILocation(line: 47, column: 2, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15435, file: !2370, line: 47, column: 2)
!15456 = !DILocation(line: 53, column: 7, scope: !15435)
!15457 = !DILocation(line: 53, column: 13, scope: !15435)
!15458 = !DILocation(line: 54, column: 7, scope: !15435)
!15459 = !DILocation(line: 54, column: 13, scope: !15435)
!15460 = !DILocation(line: 58, column: 21, scope: !15435)
!15461 = !DILocation(line: 58, column: 2, scope: !15435)
!15462 = !DILocation(line: 64, column: 2, scope: !15435)
!15463 = !DILocation(line: 65, column: 1, scope: !15435)
!15464 = distinct !DISubprogram(name: "z_waitq_init", scope: !14516, file: !14516, line: 47, type: !15465, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15468)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{null, !15467}
!15467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15442, size: 32)
!15468 = !{!15469}
!15469 = !DILocalVariable(name: "w", arg: 1, scope: !15464, file: !14516, line: 47, type: !15467)
!15470 = !DILocation(line: 0, scope: !15464)
!15471 = !DILocation(line: 49, column: 21, scope: !15464)
!15472 = !DILocation(line: 49, column: 2, scope: !15464)
!15473 = !DILocation(line: 50, column: 1, scope: !15464)
!15474 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15475, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15478)
!15475 = !DISubroutineType(types: !15476)
!15476 = !{null, !15477}
!15477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15446, size: 32)
!15478 = !{!15479}
!15479 = !DILocalVariable(name: "list", arg: 1, scope: !15474, file: !137, line: 197, type: !15477)
!15480 = !DILocation(line: 0, scope: !15474)
!15481 = !DILocation(line: 199, column: 8, scope: !15474)
!15482 = !DILocation(line: 199, column: 13, scope: !15474)
!15483 = !DILocation(line: 200, column: 8, scope: !15474)
!15484 = !DILocation(line: 200, column: 13, scope: !15474)
!15485 = !DILocation(line: 201, column: 1, scope: !15474)
!15486 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2370, file: !2370, line: 86, type: !15487, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15489)
!15487 = !DISubroutineType(types: !15488)
!15488 = !{null, !15438}
!15489 = !{!15490, !15491, !15496}
!15490 = !DILocalVariable(name: "sem", arg: 1, scope: !15486, file: !2370, line: 86, type: !15438)
!15491 = !DILocalVariable(name: "key", scope: !15486, file: !2370, line: 88, type: !15492)
!15492 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15493)
!15493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15494)
!15494 = !{!15495}
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15493, file: !236, line: 33, baseType: !105, size: 32)
!15496 = !DILocalVariable(name: "thread", scope: !15486, file: !2370, line: 89, type: !15497)
!15497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15498, size: 32)
!15498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !15499)
!15499 = !{!15500, !15538, !15550, !15551, !15552, !15553, !15559, !15571}
!15500 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15498, file: !127, line: 247, baseType: !15501, size: 384)
!15501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !15502)
!15502 = !{!15503, !15513, !15514, !15515, !15516, !15525, !15526, !15527}
!15503 = !DIDerivedType(tag: DW_TAG_member, scope: !15501, file: !127, line: 60, baseType: !15504, size: 64)
!15504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15501, file: !127, line: 60, size: 64, elements: !15505)
!15505 = !{!15506, !15507}
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15504, file: !127, line: 61, baseType: !2355, size: 64)
!15507 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15504, file: !127, line: 62, baseType: !15508, size: 64)
!15508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !15509)
!15509 = !{!15510}
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15508, file: !153, line: 50, baseType: !15511, size: 64)
!15511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15512, size: 64, elements: !158)
!15512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15508, size: 32)
!15513 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15501, file: !127, line: 68, baseType: !15467, size: 32, offset: 64)
!15514 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15501, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!15515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15501, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!15516 = !DIDerivedType(tag: DW_TAG_member, scope: !15501, file: !127, line: 90, baseType: !15517, size: 16, offset: 112)
!15517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15501, file: !127, line: 90, size: 16, elements: !15518)
!15518 = !{!15519, !15524}
!15519 = !DIDerivedType(tag: DW_TAG_member, scope: !15517, file: !127, line: 91, baseType: !15520, size: 16)
!15520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15517, file: !127, line: 91, size: 16, elements: !15521)
!15521 = !{!15522, !15523}
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15520, file: !127, line: 96, baseType: !179, size: 8)
!15523 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15520, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!15524 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15517, file: !127, line: 100, baseType: !183, size: 16)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15501, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15501, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!15527 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15501, file: !127, line: 131, baseType: !15528, size: 192, offset: 192)
!15528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !15529)
!15529 = !{!15530, !15531, !15537}
!15530 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15528, file: !163, line: 245, baseType: !2355, size: 64)
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15528, file: !163, line: 246, baseType: !15532, size: 32, offset: 64)
!15532 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !15533)
!15533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15534, size: 32)
!15534 = !DISubroutineType(types: !15535)
!15535 = !{null, !15536}
!15536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15528, size: 32)
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15528, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!15538 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15498, file: !127, line: 250, baseType: !15539, size: 288, offset: 384)
!15539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !15540)
!15540 = !{!15541, !15542, !15543, !15544, !15545, !15546, !15547, !15548, !15549}
!15541 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15539, file: !200, line: 26, baseType: !113, size: 32)
!15542 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15539, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15539, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!15544 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15539, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!15545 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15539, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!15546 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15539, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15539, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15539, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15539, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15498, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15498, file: !127, line: 256, baseType: !15442, size: 64, offset: 704)
!15552 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15498, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!15553 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15498, file: !127, line: 300, baseType: !15554, size: 96, offset: 800)
!15554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !15555)
!15555 = !{!15556, !15557, !15558}
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15554, file: !127, line: 153, baseType: !22, size: 32)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15554, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!15558 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15554, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!15559 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15498, file: !127, line: 325, baseType: !15560, size: 32, offset: 896)
!15560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15561, size: 32)
!15561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15562)
!15562 = !{!15563, !15569, !15570}
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15561, file: !122, line: 5074, baseType: !15564, size: 96)
!15564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15565)
!15565 = !{!15566, !15567, !15568}
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15564, file: !226, line: 57, baseType: !229, size: 32)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15564, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15564, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15561, file: !122, line: 5075, baseType: !15442, size: 64, offset: 96)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15561, file: !122, line: 5076, baseType: !2371, size: 32, offset: 160)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15498, file: !127, line: 343, baseType: !15572, size: 64, offset: 928)
!15572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !15573)
!15573 = !{!15574, !15575}
!15574 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15572, file: !200, line: 63, baseType: !113, size: 32)
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15572, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!15576 = !DILocation(line: 0, scope: !15486)
!15577 = !DILocalVariable(name: "l", arg: 1, scope: !15578, file: !236, line: 136, type: !15581)
!15578 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15579, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15582)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{!15492, !15581}
!15581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 32)
!15582 = !{!15577, !15583}
!15583 = !DILocalVariable(name: "k", scope: !15578, file: !236, line: 139, type: !15492)
!15584 = !DILocation(line: 0, scope: !15578, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 88, column: 25, scope: !15486)
!15586 = !DILocation(line: 55, column: 2, scope: !15587, inlinedAt: !15591)
!15587 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15588)
!15588 = !{!15589, !15590}
!15589 = !DILocalVariable(name: "key", scope: !15587, file: !7468, line: 44, type: !32)
!15590 = !DILocalVariable(name: "tmp", scope: !15587, file: !7468, line: 53, type: !32)
!15591 = distinct !DILocation(line: 145, column: 10, scope: !15578, inlinedAt: !15585)
!15592 = !{i64 2244479}
!15593 = !DILocation(line: 0, scope: !15587, inlinedAt: !15591)
!15594 = !DILocation(line: 148, column: 2, scope: !15595, inlinedAt: !15585)
!15595 = distinct !DILexicalBlock(scope: !15596, file: !236, line: 148, column: 2)
!15596 = distinct !DILexicalBlock(scope: !15578, file: !236, line: 148, column: 2)
!15597 = !DILocation(line: 148, column: 2, scope: !15596, inlinedAt: !15585)
!15598 = !DILocation(line: 148, column: 2, scope: !15599, inlinedAt: !15585)
!15599 = distinct !DILexicalBlock(scope: !15595, file: !236, line: 148, column: 2)
!15600 = !DILocation(line: 160, column: 2, scope: !15578, inlinedAt: !15585)
!15601 = !DILocation(line: 93, column: 39, scope: !15486)
!15602 = !DILocation(line: 93, column: 11, scope: !15486)
!15603 = !DILocation(line: 95, column: 13, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15486, file: !2370, line: 95, column: 6)
!15605 = !DILocation(line: 95, column: 6, scope: !15486)
!15606 = !DILocalVariable(name: "thread", arg: 1, scope: !15607, file: !14196, line: 65, type: !15497)
!15607 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14196, file: !14196, line: 65, type: !15608, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15610)
!15608 = !DISubroutineType(types: !15609)
!15609 = !{null, !15497, !32}
!15610 = !{!15606, !15611}
!15611 = !DILocalVariable(name: "value", arg: 2, scope: !15607, file: !14196, line: 65, type: !32)
!15612 = !DILocation(line: 0, scope: !15607, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 96, column: 3, scope: !15614)
!15614 = distinct !DILexicalBlock(scope: !15604, file: !2370, line: 95, column: 22)
!15615 = !DILocation(line: 67, column: 15, scope: !15607, inlinedAt: !15613)
!15616 = !DILocation(line: 67, column: 33, scope: !15607, inlinedAt: !15613)
!15617 = !DILocation(line: 97, column: 3, scope: !15614)
!15618 = !DILocation(line: 98, column: 2, scope: !15614)
!15619 = !DILocation(line: 99, column: 23, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15604, file: !2370, line: 98, column: 9)
!15621 = !DILocation(line: 99, column: 37, scope: !15620)
!15622 = !DILocation(line: 99, column: 29, scope: !15620)
!15623 = !DILocation(line: 99, column: 17, scope: !15620)
!15624 = !DILocation(line: 99, column: 14, scope: !15620)
!15625 = !DILocation(line: 103, column: 2, scope: !15486)
!15626 = !DILocation(line: 106, column: 1, scope: !15486)
!15627 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2370, file: !2370, line: 117, type: !15628, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15634)
!15628 = !DISubroutineType(types: !15629)
!15629 = !{!105, !15438, !15630}
!15630 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15631)
!15631 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15632)
!15632 = !{!15633}
!15633 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15631, file: !108, line: 66, baseType: !107, size: 64)
!15634 = !{!15635, !15636, !15637, !15638, !15639}
!15635 = !DILocalVariable(name: "sem", arg: 1, scope: !15627, file: !2370, line: 117, type: !15438)
!15636 = !DILocalVariable(name: "timeout", arg: 2, scope: !15627, file: !2370, line: 117, type: !15630)
!15637 = !DILocalVariable(name: "ret", scope: !15627, file: !2370, line: 119, type: !105)
!15638 = !DILocalVariable(name: "key", scope: !15627, file: !2370, line: 124, type: !15492)
!15639 = !DILabel(scope: !15627, name: "out", file: !2370, line: 145)
!15640 = !DILocation(line: 0, scope: !15627)
!15641 = !DILocation(line: 1031, column: 3, scope: !15642, inlinedAt: !15645)
!15642 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15643)
!15643 = !{!15644}
!15644 = !DILocalVariable(name: "result", scope: !15642, file: !7786, line: 1029, type: !113)
!15645 = distinct !DILocation(line: 48, column: 10, scope: !15646, inlinedAt: !15647)
!15646 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !397)
!15647 = distinct !DILocation(line: 121, column: 2, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15649, file: !2370, line: 121, column: 2)
!15649 = distinct !DILexicalBlock(scope: !15627, file: !2370, line: 121, column: 2)
!15650 = !{i64 3499350}
!15651 = !DILocation(line: 0, scope: !15642, inlinedAt: !15645)
!15652 = !DILocation(line: 48, column: 9, scope: !15646, inlinedAt: !15647)
!15653 = !DILocation(line: 121, column: 2, scope: !15648)
!15654 = !DILocation(line: 121, column: 2, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15648, file: !2370, line: 121, column: 2)
!15656 = !DILocation(line: 0, scope: !15578, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 124, column: 25, scope: !15627)
!15658 = !DILocation(line: 55, column: 2, scope: !15587, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 145, column: 10, scope: !15578, inlinedAt: !15657)
!15660 = !DILocation(line: 0, scope: !15587, inlinedAt: !15659)
!15661 = !DILocation(line: 148, column: 2, scope: !15595, inlinedAt: !15657)
!15662 = !DILocation(line: 148, column: 2, scope: !15596, inlinedAt: !15657)
!15663 = !DILocation(line: 148, column: 2, scope: !15599, inlinedAt: !15657)
!15664 = !DILocation(line: 160, column: 2, scope: !15578, inlinedAt: !15657)
!15665 = !DILocation(line: 128, column: 6, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15627, file: !2370, line: 128, column: 6)
!15667 = !DILocation(line: 128, column: 6, scope: !15627)
!15668 = !{!"branch_weights", i32 1, i32 2000}
!15669 = !DILocation(line: 129, column: 13, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15666, file: !2370, line: 128, column: 31)
!15671 = !DILocalVariable(name: "key", arg: 2, scope: !15672, file: !236, line: 190, type: !15492)
!15672 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15673, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15675)
!15673 = !DISubroutineType(types: !15674)
!15674 = !{null, !15581, !15492}
!15675 = !{!15676, !15671}
!15676 = !DILocalVariable(name: "l", arg: 1, scope: !15672, file: !236, line: 189, type: !15581)
!15677 = !DILocation(line: 0, scope: !15672, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 130, column: 3, scope: !15670)
!15679 = !DILocation(line: 194, column: 2, scope: !15680, inlinedAt: !15678)
!15680 = distinct !DILexicalBlock(scope: !15681, file: !236, line: 194, column: 2)
!15681 = distinct !DILexicalBlock(scope: !15672, file: !236, line: 194, column: 2)
!15682 = !DILocation(line: 194, column: 2, scope: !15681, inlinedAt: !15678)
!15683 = !DILocation(line: 194, column: 2, scope: !15684, inlinedAt: !15678)
!15684 = distinct !DILexicalBlock(scope: !15680, file: !236, line: 194, column: 2)
!15685 = !DILocalVariable(name: "key", arg: 1, scope: !15686, file: !7468, line: 84, type: !32)
!15686 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15687)
!15687 = !{!15685}
!15688 = !DILocation(line: 0, scope: !15686, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 215, column: 2, scope: !15672, inlinedAt: !15678)
!15690 = !DILocation(line: 95, column: 2, scope: !15686, inlinedAt: !15689)
!15691 = !{i64 2245296}
!15692 = !DILocation(line: 132, column: 3, scope: !15670)
!15693 = !DILocation(line: 135, column: 6, scope: !15627)
!15694 = !DILocation(line: 0, scope: !15672, inlinedAt: !15695)
!15695 = distinct !DILocation(line: 136, column: 3, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15697, file: !2370, line: 135, column: 40)
!15697 = distinct !DILexicalBlock(scope: !15627, file: !2370, line: 135, column: 6)
!15698 = !DILocation(line: 194, column: 2, scope: !15680, inlinedAt: !15695)
!15699 = !DILocation(line: 194, column: 2, scope: !15681, inlinedAt: !15695)
!15700 = !DILocation(line: 194, column: 2, scope: !15684, inlinedAt: !15695)
!15701 = !DILocation(line: 0, scope: !15686, inlinedAt: !15702)
!15702 = distinct !DILocation(line: 215, column: 2, scope: !15672, inlinedAt: !15695)
!15703 = !DILocation(line: 95, column: 2, scope: !15686, inlinedAt: !15702)
!15704 = !DILocation(line: 138, column: 3, scope: !15696)
!15705 = !DILocation(line: 143, column: 38, scope: !15627)
!15706 = !DILocation(line: 143, column: 8, scope: !15627)
!15707 = !DILocation(line: 143, column: 2, scope: !15627)
!15708 = !DILocation(line: 145, column: 1, scope: !15627)
!15709 = !DILocation(line: 148, column: 2, scope: !15627)
!15710 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2370, file: !2370, line: 151, type: !15487, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2351, retainedNodes: !15711)
!15711 = !{!15712, !15713, !15714}
!15712 = !DILocalVariable(name: "sem", arg: 1, scope: !15710, file: !2370, line: 151, type: !15438)
!15713 = !DILocalVariable(name: "thread", scope: !15710, file: !2370, line: 153, type: !15497)
!15714 = !DILocalVariable(name: "key", scope: !15710, file: !2370, line: 154, type: !15492)
!15715 = !DILocation(line: 0, scope: !15710)
!15716 = !DILocation(line: 0, scope: !15578, inlinedAt: !15717)
!15717 = distinct !DILocation(line: 154, column: 25, scope: !15710)
!15718 = !DILocation(line: 55, column: 2, scope: !15587, inlinedAt: !15719)
!15719 = distinct !DILocation(line: 145, column: 10, scope: !15578, inlinedAt: !15717)
!15720 = !DILocation(line: 0, scope: !15587, inlinedAt: !15719)
!15721 = !DILocation(line: 148, column: 2, scope: !15595, inlinedAt: !15717)
!15722 = !DILocation(line: 148, column: 2, scope: !15596, inlinedAt: !15717)
!15723 = !DILocation(line: 148, column: 2, scope: !15599, inlinedAt: !15717)
!15724 = !DILocation(line: 160, column: 2, scope: !15578, inlinedAt: !15717)
!15725 = !DILocation(line: 157, column: 12, scope: !15726)
!15726 = distinct !DILexicalBlock(scope: !15710, file: !2370, line: 156, column: 15)
!15727 = !DILocation(line: 158, column: 14, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15726, file: !2370, line: 158, column: 7)
!15729 = !DILocation(line: 158, column: 7, scope: !15726)
!15730 = !DILocation(line: 0, scope: !15607, inlinedAt: !15731)
!15731 = distinct !DILocation(line: 161, column: 3, scope: !15726)
!15732 = !DILocation(line: 67, column: 15, scope: !15607, inlinedAt: !15731)
!15733 = !DILocation(line: 67, column: 33, scope: !15607, inlinedAt: !15731)
!15734 = !DILocation(line: 162, column: 3, scope: !15726)
!15735 = distinct !{!15735, !15736, !15737}
!15736 = !DILocation(line: 156, column: 2, scope: !15710)
!15737 = !DILocation(line: 163, column: 2, scope: !15710)
!15738 = !DILocation(line: 164, column: 7, scope: !15710)
!15739 = !DILocation(line: 164, column: 13, scope: !15710)
!15740 = !DILocation(line: 170, column: 2, scope: !15710)
!15741 = !DILocation(line: 171, column: 1, scope: !15710)
!15742 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2486, file: !2486, line: 93, type: !15743, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15745)
!15743 = !DISubroutineType(types: !15744)
!15744 = !{!116, !2379, !2379}
!15745 = !{!15746, !15747, !15748, !15749}
!15746 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15742, file: !2486, line: 93, type: !2379)
!15747 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15742, file: !2486, line: 94, type: !2379)
!15748 = !DILocalVariable(name: "b1", scope: !15742, file: !2486, line: 97, type: !116)
!15749 = !DILocalVariable(name: "b2", scope: !15742, file: !2486, line: 98, type: !116)
!15750 = !DILocation(line: 0, scope: !15742)
!15751 = !DILocation(line: 97, column: 30, scope: !15742)
!15752 = !DILocation(line: 98, column: 30, scope: !15742)
!15753 = !DILocation(line: 100, column: 9, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15742, file: !2486, line: 100, column: 6)
!15755 = !DILocation(line: 100, column: 6, scope: !15742)
!15756 = !DILocation(line: 125, column: 1, scope: !15742)
!15757 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2486, file: !2486, line: 428, type: !15758, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15760)
!15758 = !DISubroutineType(types: !15759)
!15759 = !{null, !2379}
!15760 = !{!15761}
!15761 = !DILocalVariable(name: "curr", arg: 1, scope: !15757, file: !2486, line: 428, type: !2379)
!15762 = !DILocation(line: 0, scope: !15757)
!15763 = !DILocation(line: 434, column: 6, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15757, file: !2486, line: 434, column: 6)
!15765 = !DILocation(line: 434, column: 23, scope: !15764)
!15766 = !DILocation(line: 434, column: 6, scope: !15757)
!15767 = !DILocation(line: 435, column: 50, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15764, file: !2486, line: 434, column: 29)
!15769 = !DILocation(line: 435, column: 48, scope: !15768)
!15770 = !DILocation(line: 435, column: 29, scope: !15768)
!15771 = !DILocation(line: 436, column: 24, scope: !15768)
!15772 = !DILocation(line: 436, column: 3, scope: !15768)
!15773 = !DILocation(line: 437, column: 2, scope: !15768)
!15774 = !DILocation(line: 438, column: 1, scope: !15757)
!15775 = distinct !DISubprogram(name: "slice_time", scope: !2486, file: !2486, line: 407, type: !15776, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15778)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!105, !2379}
!15778 = !{!15779, !15780}
!15779 = !DILocalVariable(name: "curr", arg: 1, scope: !15775, file: !2486, line: 407, type: !2379)
!15780 = !DILocalVariable(name: "ret", scope: !15775, file: !2486, line: 409, type: !105)
!15781 = !DILocation(line: 0, scope: !15775)
!15782 = !DILocation(line: 409, column: 12, scope: !15775)
!15783 = !DILocation(line: 416, column: 2, scope: !15775)
!15784 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2486, file: !2486, line: 440, type: !15785, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15787)
!15785 = !DISubroutineType(types: !15786)
!15786 = !{null, !116, !105}
!15787 = !{!15788, !15789, !15790, !15796}
!15788 = !DILocalVariable(name: "slice", arg: 1, scope: !15784, file: !2486, line: 440, type: !116)
!15789 = !DILocalVariable(name: "prio", arg: 2, scope: !15784, file: !2486, line: 440, type: !105)
!15790 = !DILocalVariable(name: "__i", scope: !15791, file: !2486, line: 442, type: !15792)
!15791 = distinct !DILexicalBlock(scope: !15784, file: !2486, line: 442, column: 2)
!15792 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15793)
!15793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15794)
!15794 = !{!15795}
!15795 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15793, file: !236, line: 33, baseType: !105, size: 32)
!15796 = !DILocalVariable(name: "__key", scope: !15791, file: !2486, line: 442, type: !15792)
!15797 = !DILocation(line: 0, scope: !15784)
!15798 = !DILocation(line: 0, scope: !15791)
!15799 = !DILocalVariable(name: "l", arg: 1, scope: !15800, file: !236, line: 136, type: !15803)
!15800 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15801, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15804)
!15801 = !DISubroutineType(types: !15802)
!15802 = !{!15792, !15803}
!15803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!15804 = !{!15799, !15805}
!15805 = !DILocalVariable(name: "k", scope: !15800, file: !236, line: 139, type: !15792)
!15806 = !DILocation(line: 0, scope: !15800, inlinedAt: !15807)
!15807 = distinct !DILocation(line: 442, column: 2, scope: !15791)
!15808 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !15813)
!15809 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15810)
!15810 = !{!15811, !15812}
!15811 = !DILocalVariable(name: "key", scope: !15809, file: !7468, line: 44, type: !32)
!15812 = !DILocalVariable(name: "tmp", scope: !15809, file: !7468, line: 53, type: !32)
!15813 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !15807)
!15814 = !{i64 2286888}
!15815 = !DILocation(line: 0, scope: !15809, inlinedAt: !15813)
!15816 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !15807)
!15817 = distinct !DILexicalBlock(scope: !15818, file: !236, line: 148, column: 2)
!15818 = distinct !DILexicalBlock(scope: !15800, file: !236, line: 148, column: 2)
!15819 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !15807)
!15820 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !15807)
!15821 = distinct !DILexicalBlock(scope: !15817, file: !236, line: 148, column: 2)
!15822 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !15807)
!15823 = !DILocation(line: 443, column: 29, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15825, file: !2486, line: 442, column: 26)
!15825 = distinct !DILexicalBlock(scope: !15791, file: !2486, line: 442, column: 2)
!15826 = !DILocation(line: 444, column: 17, scope: !15824)
!15827 = !DILocation(line: 445, column: 51, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15824, file: !2486, line: 445, column: 7)
!15829 = !DILocation(line: 445, column: 7, scope: !15824)
!15830 = !DILocation(line: 0, scope: !15824)
!15831 = !DILocation(line: 451, column: 18, scope: !15824)
!15832 = !DILocation(line: 452, column: 3, scope: !15824)
!15833 = !DILocalVariable(name: "key", arg: 2, scope: !15834, file: !236, line: 190, type: !15792)
!15834 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15835, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15837)
!15835 = !DISubroutineType(types: !15836)
!15836 = !{null, !15803, !15792}
!15837 = !{!15838, !15833}
!15838 = !DILocalVariable(name: "l", arg: 1, scope: !15834, file: !236, line: 189, type: !15803)
!15839 = !DILocation(line: 0, scope: !15834, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 442, column: 2, scope: !15825)
!15841 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !15840)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !236, line: 194, column: 2)
!15843 = distinct !DILexicalBlock(scope: !15834, file: !236, line: 194, column: 2)
!15844 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !15840)
!15845 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !15840)
!15846 = distinct !DILexicalBlock(scope: !15842, file: !236, line: 194, column: 2)
!15847 = !DILocalVariable(name: "key", arg: 1, scope: !15848, file: !7468, line: 84, type: !32)
!15848 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15849)
!15849 = !{!15847}
!15850 = !DILocation(line: 0, scope: !15848, inlinedAt: !15851)
!15851 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !15840)
!15852 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !15851)
!15853 = !{i64 2287705}
!15854 = !DILocation(line: 454, column: 1, scope: !15784)
!15855 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14772, file: !14772, line: 389, type: !9067, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15856)
!15856 = !{!15857}
!15857 = !DILocalVariable(name: "t", arg: 1, scope: !15855, file: !14772, line: 389, type: !113)
!15858 = !DILocation(line: 0, scope: !15855)
!15859 = !DILocalVariable(name: "t", arg: 1, scope: !15860, file: !14772, line: 102, type: !114)
!15860 = distinct !DISubprogram(name: "z_tmcvt", scope: !14772, file: !14772, line: 102, type: !14780, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15861)
!15861 = !{!15859, !15862, !15863, !15864, !15865, !15866, !15867, !15868, !15869, !15870, !15871}
!15862 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15860, file: !14772, line: 102, type: !113)
!15863 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15860, file: !14772, line: 103, type: !113)
!15864 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15860, file: !14772, line: 103, type: !492)
!15865 = !DILocalVariable(name: "result32", arg: 5, scope: !15860, file: !14772, line: 104, type: !492)
!15866 = !DILocalVariable(name: "round_up", arg: 6, scope: !15860, file: !14772, line: 104, type: !492)
!15867 = !DILocalVariable(name: "round_off", arg: 7, scope: !15860, file: !14772, line: 105, type: !492)
!15868 = !DILocalVariable(name: "mul_ratio", scope: !15860, file: !14772, line: 107, type: !492)
!15869 = !DILocalVariable(name: "div_ratio", scope: !15860, file: !14772, line: 109, type: !492)
!15870 = !DILocalVariable(name: "off", scope: !15860, file: !14772, line: 116, type: !114)
!15871 = !DILocalVariable(name: "rdivisor", scope: !15872, file: !14772, line: 119, type: !113)
!15872 = distinct !DILexicalBlock(scope: !15873, file: !14772, line: 118, column: 18)
!15873 = distinct !DILexicalBlock(scope: !15860, file: !14772, line: 118, column: 6)
!15874 = !DILocation(line: 0, scope: !15860, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 392, column: 9, scope: !15855)
!15876 = !DILocation(line: 143, column: 25, scope: !15877, inlinedAt: !15875)
!15877 = distinct !DILexicalBlock(scope: !15878, file: !14772, line: 142, column: 17)
!15878 = distinct !DILexicalBlock(scope: !15879, file: !14772, line: 142, column: 7)
!15879 = distinct !DILexicalBlock(scope: !15880, file: !14772, line: 141, column: 24)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !14772, line: 141, column: 13)
!15881 = distinct !DILexicalBlock(scope: !15860, file: !14772, line: 134, column: 6)
!15882 = !DILocation(line: 392, column: 2, scope: !15855)
!15883 = distinct !DISubprogram(name: "z_time_slice", scope: !2486, file: !2486, line: 502, type: !9720, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15884)
!15884 = !{!15885, !15886}
!15885 = !DILocalVariable(name: "ticks", arg: 1, scope: !15883, file: !2486, line: 502, type: !105)
!15886 = !DILocalVariable(name: "key", scope: !15883, file: !2486, line: 511, type: !15792)
!15887 = !DILocation(line: 0, scope: !15883)
!15888 = !DILocation(line: 0, scope: !15800, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 511, column: 25, scope: !15883)
!15890 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !15889)
!15892 = !DILocation(line: 0, scope: !15809, inlinedAt: !15891)
!15893 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !15889)
!15894 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !15889)
!15895 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !15889)
!15896 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !15889)
!15897 = !DILocation(line: 514, column: 6, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15883, file: !2486, line: 514, column: 6)
!15899 = !DILocation(line: 514, column: 25, scope: !15898)
!15900 = !DILocation(line: 514, column: 22, scope: !15898)
!15901 = !DILocation(line: 514, column: 6, scope: !15883)
!15902 = !DILocation(line: 515, column: 3, scope: !15903)
!15903 = distinct !DILexicalBlock(scope: !15898, file: !2486, line: 514, column: 35)
!15904 = !DILocation(line: 0, scope: !15834, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 516, column: 3, scope: !15903)
!15906 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !15905)
!15907 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !15905)
!15908 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !15905)
!15909 = !DILocation(line: 0, scope: !15848, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !15905)
!15911 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !15910)
!15912 = !DILocation(line: 517, column: 3, scope: !15903)
!15913 = !DILocation(line: 519, column: 18, scope: !15883)
!15914 = !DILocation(line: 522, column: 6, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15883, file: !2486, line: 522, column: 6)
!15916 = !DILocation(line: 522, column: 27, scope: !15915)
!15917 = !DILocation(line: 522, column: 30, scope: !15915)
!15918 = !DILocation(line: 522, column: 6, scope: !15883)
!15919 = !DILocation(line: 523, column: 30, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15921, file: !2486, line: 523, column: 7)
!15921 = distinct !DILexicalBlock(scope: !15915, file: !2486, line: 522, column: 51)
!15922 = !DILocation(line: 523, column: 13, scope: !15920)
!15923 = !DILocation(line: 523, column: 7, scope: !15921)
!15924 = !DILocation(line: 530, column: 10, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15920, file: !2486, line: 523, column: 43)
!15926 = !DILocation(line: 531, column: 3, scope: !15925)
!15927 = !DILocation(line: 532, column: 30, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15920, file: !2486, line: 531, column: 10)
!15929 = !DILocation(line: 535, column: 29, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15915, file: !2486, line: 534, column: 9)
!15931 = !DILocation(line: 0, scope: !15834, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 537, column: 2, scope: !15883)
!15933 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !15932)
!15934 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !15932)
!15935 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !15932)
!15936 = !DILocation(line: 0, scope: !15848, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !15932)
!15938 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !15937)
!15939 = !DILocation(line: 538, column: 1, scope: !15883)
!15940 = distinct !DISubprogram(name: "sliceable", scope: !2486, file: !2486, line: 468, type: !15941, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15943)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{!492, !2379}
!15943 = !{!15944, !15945}
!15944 = !DILocalVariable(name: "thread", arg: 1, scope: !15940, file: !2486, line: 468, type: !2379)
!15945 = !DILocalVariable(name: "ret", scope: !15940, file: !2486, line: 470, type: !492)
!15946 = !DILocation(line: 0, scope: !15940)
!15947 = !DILocation(line: 470, column: 13, scope: !15940)
!15948 = !DILocation(line: 471, column: 3, scope: !15940)
!15949 = !DILocation(line: 471, column: 7, scope: !15940)
!15950 = !DILocation(line: 472, column: 3, scope: !15940)
!15951 = !DILocation(line: 472, column: 37, scope: !15940)
!15952 = !DILocation(line: 472, column: 24, scope: !15940)
!15953 = !DILocation(line: 472, column: 43, scope: !15940)
!15954 = !DILocation(line: 472, column: 7, scope: !15940)
!15955 = !DILocation(line: 473, column: 3, scope: !15940)
!15956 = !DILocation(line: 473, column: 7, scope: !15940)
!15957 = !DILocation(line: 473, column: 6, scope: !15940)
!15958 = !DILocation(line: 479, column: 2, scope: !15940)
!15959 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2486, file: !2486, line: 482, type: !15960, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15962)
!15960 = !DISubroutineType(types: !15961)
!15961 = !{!15792, !15792}
!15962 = !{!15963, !15964}
!15963 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15959, file: !2486, line: 482, type: !15792)
!15964 = !DILocalVariable(name: "curr", scope: !15959, file: !2486, line: 484, type: !2379)
!15965 = !DILocation(line: 0, scope: !15959)
!15966 = !DILocation(line: 484, column: 26, scope: !15959)
!15967 = !DILocation(line: 493, column: 7, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15959, file: !2486, line: 493, column: 6)
!15969 = !DILocation(line: 493, column: 6, scope: !15959)
!15970 = !DILocation(line: 494, column: 3, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15968, file: !2486, line: 493, column: 49)
!15972 = !DILocation(line: 495, column: 2, scope: !15971)
!15973 = !DILocation(line: 496, column: 2, scope: !15959)
!15974 = !DILocation(line: 499, column: 1, scope: !15959)
!15975 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14155, file: !14155, line: 106, type: !15941, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15976)
!15976 = !{!15977, !15978}
!15977 = !DILocalVariable(name: "thread", arg: 1, scope: !15975, file: !14155, line: 106, type: !2379)
!15978 = !DILocalVariable(name: "state", scope: !15975, file: !14155, line: 108, type: !169)
!15979 = !DILocation(line: 0, scope: !15975)
!15980 = !DILocation(line: 108, column: 31, scope: !15975)
!15981 = !DILocation(line: 110, column: 16, scope: !15975)
!15982 = !DILocation(line: 111, column: 41, scope: !15975)
!15983 = !DILocation(line: 110, column: 2, scope: !15975)
!15984 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2486, file: !2486, line: 393, type: !15758, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15985)
!15985 = !{!15986}
!15986 = !DILocalVariable(name: "thread", arg: 1, scope: !15984, file: !2486, line: 393, type: !2379)
!15987 = !DILocation(line: 0, scope: !15984)
!15988 = !DILocation(line: 395, column: 6, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15984, file: !2486, line: 395, column: 6)
!15990 = !DILocation(line: 395, column: 6, scope: !15984)
!15991 = !DILocalVariable(name: "thread", arg: 1, scope: !15992, file: !2486, line: 264, type: !2379)
!15992 = distinct !DISubprogram(name: "dequeue_thread", scope: !2486, file: !2486, line: 264, type: !15758, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !15993)
!15993 = !{!15991}
!15994 = !DILocation(line: 0, scope: !15992, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 396, column: 3, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15989, file: !2486, line: 395, column: 34)
!15997 = !DILocation(line: 266, column: 15, scope: !15992, inlinedAt: !15995)
!15998 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !15995)
!15999 = !DILocalVariable(name: "thread", arg: 1, scope: !16000, file: !2486, line: 232, type: !2379)
!16000 = distinct !DISubprogram(name: "runq_remove", scope: !2486, file: !2486, line: 232, type: !15758, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16001)
!16001 = !{!15999}
!16002 = !DILocation(line: 0, scope: !16000, inlinedAt: !16003)
!16003 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !15995)
!16004 = distinct !DILexicalBlock(scope: !16005, file: !2486, line: 267, column: 35)
!16005 = distinct !DILexicalBlock(scope: !15992, file: !2486, line: 267, column: 6)
!16006 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !16003)
!16007 = !DILocation(line: 397, column: 2, scope: !15996)
!16008 = !DILocalVariable(name: "thread", arg: 1, scope: !16009, file: !2486, line: 250, type: !2379)
!16009 = distinct !DISubprogram(name: "queue_thread", scope: !2486, file: !2486, line: 250, type: !15758, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16010)
!16010 = !{!16008}
!16011 = !DILocation(line: 0, scope: !16009, inlinedAt: !16012)
!16012 = distinct !DILocation(line: 398, column: 2, scope: !15984)
!16013 = !DILocation(line: 252, column: 15, scope: !16009, inlinedAt: !16012)
!16014 = !DILocation(line: 252, column: 28, scope: !16009, inlinedAt: !16012)
!16015 = !DILocalVariable(name: "thread", arg: 1, scope: !16016, file: !2486, line: 227, type: !2379)
!16016 = distinct !DISubprogram(name: "runq_add", scope: !2486, file: !2486, line: 227, type: !15758, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16017)
!16017 = !{!16015}
!16018 = !DILocation(line: 0, scope: !16016, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 254, column: 3, scope: !16020, inlinedAt: !16012)
!16020 = distinct !DILexicalBlock(scope: !16021, file: !2486, line: 253, column: 35)
!16021 = distinct !DILexicalBlock(scope: !16009, file: !2486, line: 253, column: 6)
!16022 = !DILocalVariable(name: "pq", arg: 1, scope: !16023, file: !2486, line: 181, type: !16026)
!16023 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2486, file: !2486, line: 181, type: !16024, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16027)
!16024 = !DISubroutineType(types: !16025)
!16025 = !{null, !16026, !2379}
!16026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!16027 = !{!16022, !16028, !16029}
!16028 = !DILocalVariable(name: "thread", arg: 2, scope: !16023, file: !2486, line: 182, type: !2379)
!16029 = !DILocalVariable(name: "t", scope: !16023, file: !2486, line: 184, type: !2379)
!16030 = !DILocation(line: 0, scope: !16023, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 229, column: 2, scope: !16016, inlinedAt: !16019)
!16032 = !DILocation(line: 186, column: 2, scope: !16033, inlinedAt: !16031)
!16033 = distinct !DILexicalBlock(scope: !16034, file: !2486, line: 186, column: 2)
!16034 = distinct !DILexicalBlock(scope: !16023, file: !2486, line: 186, column: 2)
!16035 = !DILocation(line: 186, column: 2, scope: !16034, inlinedAt: !16031)
!16036 = !DILocation(line: 186, column: 2, scope: !16037, inlinedAt: !16031)
!16037 = distinct !DILexicalBlock(scope: !16033, file: !2486, line: 186, column: 2)
!16038 = !DILocation(line: 188, column: 2, scope: !16039, inlinedAt: !16031)
!16039 = distinct !DILexicalBlock(scope: !16023, file: !2486, line: 188, column: 2)
!16040 = !DILocation(line: 188, column: 2, scope: !16041, inlinedAt: !16031)
!16041 = distinct !DILexicalBlock(scope: !16039, file: !2486, line: 188, column: 2)
!16042 = !DILocation(line: 0, scope: !16039, inlinedAt: !16031)
!16043 = !DILocation(line: 189, column: 7, scope: !16044, inlinedAt: !16031)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2486, line: 189, column: 7)
!16045 = distinct !DILexicalBlock(scope: !16041, file: !2486, line: 188, column: 56)
!16046 = !DILocation(line: 189, column: 35, scope: !16044, inlinedAt: !16031)
!16047 = !DILocation(line: 189, column: 7, scope: !16045, inlinedAt: !16031)
!16048 = !DILocation(line: 191, column: 21, scope: !16049, inlinedAt: !16031)
!16049 = distinct !DILexicalBlock(scope: !16044, file: !2486, line: 189, column: 40)
!16050 = !DILocation(line: 190, column: 4, scope: !16049, inlinedAt: !16031)
!16051 = !DILocation(line: 192, column: 4, scope: !16049, inlinedAt: !16031)
!16052 = distinct !{!16052, !16038, !16053}
!16053 = !DILocation(line: 194, column: 2, scope: !16039, inlinedAt: !16031)
!16054 = !DILocation(line: 196, column: 37, scope: !16023, inlinedAt: !16031)
!16055 = !DILocation(line: 196, column: 2, scope: !16023, inlinedAt: !16031)
!16056 = !DILocation(line: 197, column: 1, scope: !16023, inlinedAt: !16031)
!16057 = !DILocation(line: 399, column: 25, scope: !15984)
!16058 = !DILocation(line: 399, column: 22, scope: !15984)
!16059 = !DILocation(line: 399, column: 2, scope: !15984)
!16060 = !DILocation(line: 400, column: 1, scope: !15984)
!16061 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14155, file: !14155, line: 136, type: !15941, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16062)
!16062 = !{!16063}
!16063 = !DILocalVariable(name: "thread", arg: 1, scope: !16061, file: !14155, line: 136, type: !2379)
!16064 = !DILocation(line: 0, scope: !16061)
!16065 = !DILocation(line: 138, column: 9, scope: !16061)
!16066 = !DILocation(line: 138, column: 2, scope: !16061)
!16067 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2486, file: !2486, line: 1137, type: !16024, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16068)
!16068 = !{!16069, !16070}
!16069 = !DILocalVariable(name: "pq", arg: 1, scope: !16067, file: !2486, line: 1137, type: !16026)
!16070 = !DILocalVariable(name: "thread", arg: 2, scope: !16067, file: !2486, line: 1137, type: !2379)
!16071 = !DILocation(line: 0, scope: !16067)
!16072 = !DILocation(line: 1139, column: 2, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !2486, line: 1139, column: 2)
!16074 = distinct !DILexicalBlock(scope: !16067, file: !2486, line: 1139, column: 2)
!16075 = !DILocation(line: 1139, column: 2, scope: !16074)
!16076 = !DILocation(line: 1139, column: 2, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16073, file: !2486, line: 1139, column: 2)
!16078 = !DILocation(line: 1141, column: 33, scope: !16067)
!16079 = !DILocation(line: 1141, column: 2, scope: !16067)
!16080 = !DILocation(line: 1142, column: 1, scope: !16067)
!16081 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14155, file: !14155, line: 83, type: !15941, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16082)
!16082 = !{!16083}
!16083 = !DILocalVariable(name: "thread", arg: 1, scope: !16081, file: !14155, line: 83, type: !2379)
!16084 = !DILocation(line: 0, scope: !16081)
!16085 = !DILocation(line: 89, column: 16, scope: !16081)
!16086 = !DILocation(line: 89, column: 2, scope: !16081)
!16087 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16088, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16090)
!16088 = !DISubroutineType(types: !16089)
!16089 = !{!2482, !16026}
!16090 = !{!16091}
!16091 = !DILocalVariable(name: "list", arg: 1, scope: !16087, file: !137, line: 294, type: !16026)
!16092 = !DILocation(line: 0, scope: !16087)
!16093 = !DILocation(line: 296, column: 9, scope: !16087)
!16094 = !DILocation(line: 296, column: 49, scope: !16087)
!16095 = !DILocation(line: 296, column: 2, scope: !16087)
!16096 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16097, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16099)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{null, !2482, !2482}
!16099 = !{!16100, !16101, !16102}
!16100 = !DILocalVariable(name: "successor", arg: 1, scope: !16096, file: !137, line: 443, type: !2482)
!16101 = !DILocalVariable(name: "node", arg: 2, scope: !16096, file: !137, line: 443, type: !2482)
!16102 = !DILocalVariable(name: "prev", scope: !16096, file: !137, line: 445, type: !16103)
!16103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!16104 = !DILocation(line: 0, scope: !16096)
!16105 = !DILocation(line: 445, column: 39, scope: !16096)
!16106 = !DILocation(line: 447, column: 8, scope: !16096)
!16107 = !DILocation(line: 447, column: 13, scope: !16096)
!16108 = !DILocation(line: 448, column: 8, scope: !16096)
!16109 = !DILocation(line: 448, column: 13, scope: !16096)
!16110 = !DILocation(line: 449, column: 8, scope: !16096)
!16111 = !DILocation(line: 449, column: 13, scope: !16096)
!16112 = !DILocation(line: 450, column: 18, scope: !16096)
!16113 = !DILocation(line: 451, column: 1, scope: !16096)
!16114 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16115, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16117)
!16115 = !DISubroutineType(types: !16116)
!16116 = !{!2482, !16026, !2482}
!16117 = !{!16118, !16119}
!16118 = !DILocalVariable(name: "list", arg: 1, scope: !16114, file: !137, line: 341, type: !16026)
!16119 = !DILocalVariable(name: "node", arg: 2, scope: !16114, file: !137, line: 342, type: !2482)
!16120 = !DILocation(line: 0, scope: !16114)
!16121 = !DILocation(line: 344, column: 15, scope: !16114)
!16122 = !DILocation(line: 344, column: 9, scope: !16114)
!16123 = !DILocation(line: 344, column: 26, scope: !16114)
!16124 = !DILocation(line: 344, column: 2, scope: !16114)
!16125 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16126, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16128)
!16126 = !DISubroutineType(types: !16127)
!16127 = !{null, !16026, !2482}
!16128 = !{!16129, !16130, !16131}
!16129 = !DILocalVariable(name: "list", arg: 1, scope: !16125, file: !137, line: 404, type: !16026)
!16130 = !DILocalVariable(name: "node", arg: 2, scope: !16125, file: !137, line: 404, type: !2482)
!16131 = !DILocalVariable(name: "tail", scope: !16125, file: !137, line: 406, type: !16103)
!16132 = !DILocation(line: 0, scope: !16125)
!16133 = !DILocation(line: 406, column: 34, scope: !16125)
!16134 = !DILocation(line: 408, column: 8, scope: !16125)
!16135 = !DILocation(line: 408, column: 13, scope: !16125)
!16136 = !DILocation(line: 409, column: 8, scope: !16125)
!16137 = !DILocation(line: 409, column: 13, scope: !16125)
!16138 = !DILocation(line: 411, column: 8, scope: !16125)
!16139 = !DILocation(line: 411, column: 13, scope: !16125)
!16140 = !DILocation(line: 412, column: 13, scope: !16125)
!16141 = !DILocation(line: 413, column: 1, scope: !16125)
!16142 = distinct !DISubprogram(name: "update_cache", scope: !2486, file: !2486, line: 559, type: !9720, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16143)
!16143 = !{!16144, !16145}
!16144 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16142, file: !2486, line: 559, type: !105)
!16145 = !DILocalVariable(name: "thread", scope: !16142, file: !2486, line: 562, type: !2379)
!16146 = !DILocation(line: 0, scope: !16142)
!16147 = !DILocation(line: 239, column: 9, scope: !16148, inlinedAt: !16151)
!16148 = distinct !DISubprogram(name: "runq_best", scope: !2486, file: !2486, line: 237, type: !16149, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!16149 = !DISubroutineType(types: !16150)
!16150 = !{!2379}
!16151 = distinct !DILocation(line: 314, column: 28, scope: !16152, inlinedAt: !16156)
!16152 = distinct !DISubprogram(name: "next_up", scope: !2486, file: !2486, line: 312, type: !16149, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16153)
!16153 = !{!16154, !16155}
!16154 = !DILocalVariable(name: "thread", scope: !16152, file: !2486, line: 314, type: !2379)
!16155 = !DILocalVariable(name: "mirqp", scope: !16152, file: !2486, line: 322, type: !2379)
!16156 = distinct !DILocation(line: 562, column: 28, scope: !16142)
!16157 = !DILocation(line: 0, scope: !16152, inlinedAt: !16156)
!16158 = !DILocation(line: 322, column: 41, scope: !16152, inlinedAt: !16156)
!16159 = !DILocation(line: 324, column: 12, scope: !16160, inlinedAt: !16156)
!16160 = distinct !DILexicalBlock(scope: !16152, file: !2486, line: 324, column: 6)
!16161 = !DILocation(line: 324, column: 20, scope: !16160, inlinedAt: !16156)
!16162 = !DILocation(line: 324, column: 31, scope: !16160, inlinedAt: !16156)
!16163 = !DILocation(line: 324, column: 39, scope: !16160, inlinedAt: !16156)
!16164 = !DILocation(line: 324, column: 43, scope: !16160, inlinedAt: !16156)
!16165 = !DILocation(line: 324, column: 6, scope: !16152, inlinedAt: !16156)
!16166 = !DILocation(line: 325, column: 8, scope: !16167, inlinedAt: !16156)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !2486, line: 325, column: 7)
!16168 = distinct !DILexicalBlock(scope: !16160, file: !2486, line: 324, column: 64)
!16169 = !DILocation(line: 325, column: 7, scope: !16168, inlinedAt: !16156)
!16170 = !DILocation(line: 328, column: 36, scope: !16171, inlinedAt: !16156)
!16171 = distinct !DILexicalBlock(scope: !16167, file: !2486, line: 327, column: 10)
!16172 = !DILocation(line: 340, column: 17, scope: !16152, inlinedAt: !16156)
!16173 = !DILocation(line: 340, column: 9, scope: !16152, inlinedAt: !16156)
!16174 = !DILocalVariable(name: "thread", arg: 1, scope: !16175, file: !2486, line: 127, type: !2379)
!16175 = distinct !DISubprogram(name: "should_preempt", scope: !2486, file: !2486, line: 127, type: !16176, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{!492, !2379, !105}
!16178 = !{!16174, !16179}
!16179 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16175, file: !2486, line: 128, type: !105)
!16180 = !DILocation(line: 0, scope: !16175, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 564, column: 6, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16142, file: !2486, line: 564, column: 6)
!16183 = !DILocation(line: 133, column: 17, scope: !16184, inlinedAt: !16181)
!16184 = distinct !DILexicalBlock(scope: !16175, file: !2486, line: 133, column: 6)
!16185 = !DILocation(line: 0, scope: !16182)
!16186 = !DILocation(line: 133, column: 6, scope: !16175, inlinedAt: !16181)
!16187 = !DILocation(line: 137, column: 2, scope: !16188, inlinedAt: !16181)
!16188 = distinct !DILexicalBlock(scope: !16189, file: !2486, line: 137, column: 2)
!16189 = distinct !DILexicalBlock(scope: !16175, file: !2486, line: 137, column: 2)
!16190 = !DILocation(line: 137, column: 2, scope: !16189, inlinedAt: !16181)
!16191 = !DILocation(line: 137, column: 2, scope: !16192, inlinedAt: !16181)
!16192 = distinct !DILexicalBlock(scope: !16188, file: !2486, line: 137, column: 2)
!16193 = !DILocation(line: 140, column: 6, scope: !16194, inlinedAt: !16181)
!16194 = distinct !DILexicalBlock(scope: !16175, file: !2486, line: 140, column: 6)
!16195 = !DILocation(line: 140, column: 6, scope: !16175, inlinedAt: !16181)
!16196 = !DILocation(line: 150, column: 9, scope: !16197, inlinedAt: !16181)
!16197 = distinct !DILexicalBlock(scope: !16175, file: !2486, line: 149, column: 6)
!16198 = !DILocation(line: 149, column: 6, scope: !16175, inlinedAt: !16181)
!16199 = !DILocation(line: 157, column: 6, scope: !16200, inlinedAt: !16181)
!16200 = distinct !DILexicalBlock(scope: !16175, file: !2486, line: 157, column: 6)
!16201 = !DILocation(line: 157, column: 27, scope: !16200, inlinedAt: !16181)
!16202 = !DILocation(line: 157, column: 30, scope: !16200, inlinedAt: !16181)
!16203 = !DILocation(line: 564, column: 6, scope: !16142)
!16204 = !DILocation(line: 566, column: 14, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16206, file: !2486, line: 566, column: 7)
!16206 = distinct !DILexicalBlock(scope: !16182, file: !2486, line: 564, column: 42)
!16207 = !DILocation(line: 566, column: 7, scope: !16206)
!16208 = !DILocation(line: 567, column: 4, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16205, file: !2486, line: 566, column: 27)
!16210 = !DILocation(line: 568, column: 3, scope: !16209)
!16211 = !DILocation(line: 570, column: 3, scope: !16206)
!16212 = !DILocation(line: 572, column: 2, scope: !16206)
!16213 = !DILocation(line: 585, column: 1, scope: !16142)
!16214 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2486, file: !2486, line: 1144, type: !16215, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16217)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{!2379, !16026}
!16217 = !{!16218, !16219, !16220}
!16218 = !DILocalVariable(name: "pq", arg: 1, scope: !16214, file: !2486, line: 1144, type: !16026)
!16219 = !DILocalVariable(name: "thread", scope: !16214, file: !2486, line: 1146, type: !2379)
!16220 = !DILocalVariable(name: "n", scope: !16214, file: !2486, line: 1147, type: !2482)
!16221 = !DILocation(line: 0, scope: !16214)
!16222 = !DILocation(line: 1147, column: 19, scope: !16214)
!16223 = !DILocation(line: 1152, column: 2, scope: !16214)
!16224 = distinct !DISubprogram(name: "is_metairq", scope: !2486, file: !2486, line: 68, type: !15776, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16225)
!16225 = !{!16226}
!16226 = !DILocalVariable(name: "thread", arg: 1, scope: !16224, file: !2486, line: 68, type: !2379)
!16227 = !DILocation(line: 0, scope: !16224)
!16228 = !DILocation(line: 71, column: 23, scope: !16224)
!16229 = !DILocation(line: 72, column: 3, scope: !16224)
!16230 = !DILocation(line: 71, column: 2, scope: !16224)
!16231 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14155, file: !14155, line: 115, type: !15941, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16232)
!16232 = !{!16233}
!16233 = !DILocalVariable(name: "thread", arg: 1, scope: !16231, file: !14155, line: 115, type: !2379)
!16234 = !DILocation(line: 0, scope: !16231)
!16235 = !DILocation(line: 117, column: 46, scope: !16231)
!16236 = !DILocation(line: 117, column: 10, scope: !16231)
!16237 = !DILocation(line: 117, column: 9, scope: !16231)
!16238 = !DILocation(line: 117, column: 2, scope: !16231)
!16239 = distinct !DISubprogram(name: "is_preempt", scope: !2486, file: !2486, line: 62, type: !15776, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16240)
!16240 = !{!16241}
!16241 = !DILocalVariable(name: "thread", arg: 1, scope: !16239, file: !2486, line: 62, type: !2379)
!16242 = !DILocation(line: 0, scope: !16239)
!16243 = !DILocation(line: 65, column: 22, scope: !16239)
!16244 = !DILocation(line: 65, column: 30, scope: !16239)
!16245 = !DILocation(line: 65, column: 2, scope: !16239)
!16246 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2486, file: !2486, line: 545, type: !15758, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16247)
!16247 = !{!16248}
!16248 = !DILocalVariable(name: "thread", arg: 1, scope: !16246, file: !2486, line: 545, type: !2379)
!16249 = !DILocation(line: 0, scope: !16246)
!16250 = !DILocation(line: 548, column: 6, scope: !16251)
!16251 = distinct !DILexicalBlock(scope: !16246, file: !2486, line: 548, column: 6)
!16252 = !DILocation(line: 548, column: 25, scope: !16251)
!16253 = !DILocation(line: 548, column: 40, scope: !16251)
!16254 = !DILocation(line: 548, column: 29, scope: !16251)
!16255 = !DILocation(line: 548, column: 50, scope: !16251)
!16256 = !DILocation(line: 549, column: 7, scope: !16251)
!16257 = !DILocation(line: 548, column: 6, scope: !16246)
!16258 = !DILocation(line: 552, column: 37, scope: !16259)
!16259 = distinct !DILexicalBlock(scope: !16251, file: !2486, line: 552, column: 13)
!16260 = !DILocation(line: 552, column: 13, scope: !16251)
!16261 = !DILocation(line: 0, scope: !16251)
!16262 = !DILocation(line: 557, column: 1, scope: !16246)
!16263 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14584, file: !14584, line: 35, type: !16264, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16268)
!16264 = !DISubroutineType(types: !16265)
!16265 = !{!492, !16266}
!16266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16267, size: 32)
!16267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2430)
!16268 = !{!16269}
!16269 = !DILocalVariable(name: "to", arg: 1, scope: !16263, file: !14584, line: 35, type: !16266)
!16270 = !DILocation(line: 0, scope: !16263)
!16271 = !DILocation(line: 37, column: 35, scope: !16263)
!16272 = !DILocation(line: 37, column: 10, scope: !16263)
!16273 = !DILocation(line: 37, column: 9, scope: !16263)
!16274 = !DILocation(line: 37, column: 2, scope: !16263)
!16275 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16276, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16280)
!16276 = !DISubroutineType(types: !16277)
!16277 = !{!492, !16278}
!16278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16279, size: 32)
!16279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2389)
!16280 = !{!16281}
!16281 = !DILocalVariable(name: "node", arg: 1, scope: !16275, file: !137, line: 225, type: !16278)
!16282 = !DILocation(line: 0, scope: !16275)
!16283 = !DILocation(line: 227, column: 15, scope: !16275)
!16284 = !DILocation(line: 227, column: 20, scope: !16275)
!16285 = !DILocation(line: 227, column: 2, scope: !16275)
!16286 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16115, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16287)
!16287 = !{!16288, !16289}
!16288 = !DILocalVariable(name: "list", arg: 1, scope: !16286, file: !137, line: 325, type: !16026)
!16289 = !DILocalVariable(name: "node", arg: 2, scope: !16286, file: !137, line: 326, type: !2482)
!16290 = !DILocation(line: 0, scope: !16286)
!16291 = !DILocation(line: 328, column: 24, scope: !16286)
!16292 = !DILocation(line: 328, column: 15, scope: !16286)
!16293 = !DILocation(line: 328, column: 9, scope: !16286)
!16294 = !DILocation(line: 328, column: 45, scope: !16286)
!16295 = !DILocation(line: 328, column: 2, scope: !16286)
!16296 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16297, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16299)
!16297 = !DISubroutineType(types: !16298)
!16298 = !{!492, !16026}
!16299 = !{!16300}
!16300 = !DILocalVariable(name: "list", arg: 1, scope: !16296, file: !137, line: 266, type: !16026)
!16301 = !DILocation(line: 0, scope: !16296)
!16302 = !DILocation(line: 268, column: 15, scope: !16296)
!16303 = !DILocation(line: 268, column: 20, scope: !16296)
!16304 = !DILocation(line: 268, column: 2, scope: !16296)
!16305 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16306, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16308)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{null, !2482}
!16308 = !{!16309, !16310, !16311}
!16309 = !DILocalVariable(name: "node", arg: 1, scope: !16305, file: !137, line: 496, type: !2482)
!16310 = !DILocalVariable(name: "prev", scope: !16305, file: !137, line: 498, type: !16103)
!16311 = !DILocalVariable(name: "next", scope: !16305, file: !137, line: 499, type: !16103)
!16312 = !DILocation(line: 0, scope: !16305)
!16313 = !DILocation(line: 498, column: 34, scope: !16305)
!16314 = !DILocation(line: 499, column: 34, scope: !16305)
!16315 = !DILocation(line: 501, column: 8, scope: !16305)
!16316 = !DILocation(line: 501, column: 13, scope: !16305)
!16317 = !DILocation(line: 502, column: 8, scope: !16305)
!16318 = !DILocation(line: 502, column: 13, scope: !16305)
!16319 = !DILocation(line: 503, column: 2, scope: !16305)
!16320 = !DILocation(line: 504, column: 1, scope: !16305)
!16321 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16306, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16322)
!16322 = !{!16323}
!16323 = !DILocalVariable(name: "node", arg: 1, scope: !16321, file: !137, line: 211, type: !2482)
!16324 = !DILocation(line: 0, scope: !16321)
!16325 = !DILocation(line: 213, column: 8, scope: !16321)
!16326 = !DILocation(line: 213, column: 13, scope: !16321)
!16327 = !DILocation(line: 214, column: 8, scope: !16321)
!16328 = !DILocation(line: 214, column: 13, scope: !16321)
!16329 = !DILocation(line: 215, column: 1, scope: !16321)
!16330 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14155, file: !14155, line: 131, type: !16331, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!492, !2379, !113}
!16333 = !{!16334, !16335}
!16334 = !DILocalVariable(name: "thread", arg: 1, scope: !16330, file: !14155, line: 131, type: !2379)
!16335 = !DILocalVariable(name: "state", arg: 2, scope: !16330, file: !14155, line: 131, type: !113)
!16336 = !DILocation(line: 0, scope: !16330)
!16337 = !DILocation(line: 133, column: 23, scope: !16330)
!16338 = !DILocation(line: 133, column: 10, scope: !16330)
!16339 = !DILocation(line: 133, column: 36, scope: !16330)
!16340 = !DILocation(line: 133, column: 45, scope: !16330)
!16341 = !DILocation(line: 133, column: 2, scope: !16330)
!16342 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14155, file: !14155, line: 211, type: !16343, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16345)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{!492, !105, !105}
!16345 = !{!16346, !16347}
!16346 = !DILocalVariable(name: "prio", arg: 1, scope: !16342, file: !14155, line: 211, type: !105)
!16347 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16342, file: !14155, line: 211, type: !105)
!16348 = !DILocation(line: 0, scope: !16342)
!16349 = !DILocation(line: 213, column: 9, scope: !16342)
!16350 = !DILocation(line: 213, column: 2, scope: !16342)
!16351 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14155, file: !14155, line: 206, type: !16343, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16352)
!16352 = !{!16353, !16354}
!16353 = !DILocalVariable(name: "prio1", arg: 1, scope: !16351, file: !14155, line: 206, type: !105)
!16354 = !DILocalVariable(name: "prio2", arg: 2, scope: !16351, file: !14155, line: 206, type: !105)
!16355 = !DILocation(line: 0, scope: !16351)
!16356 = !DILocation(line: 208, column: 15, scope: !16351)
!16357 = !DILocation(line: 208, column: 2, scope: !16351)
!16358 = distinct !DISubprogram(name: "z_ready_thread", scope: !2486, file: !2486, line: 635, type: !15758, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16359)
!16359 = !{!16360, !16361, !16363}
!16360 = !DILocalVariable(name: "thread", arg: 1, scope: !16358, file: !2486, line: 635, type: !2379)
!16361 = !DILocalVariable(name: "__i", scope: !16362, file: !2486, line: 637, type: !15792)
!16362 = distinct !DILexicalBlock(scope: !16358, file: !2486, line: 637, column: 2)
!16363 = !DILocalVariable(name: "__key", scope: !16362, file: !2486, line: 637, type: !15792)
!16364 = !DILocation(line: 0, scope: !16358)
!16365 = !DILocation(line: 0, scope: !16362)
!16366 = !DILocation(line: 0, scope: !15800, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 637, column: 2, scope: !16362)
!16368 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16369)
!16369 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16367)
!16370 = !DILocation(line: 0, scope: !15809, inlinedAt: !16369)
!16371 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16367)
!16372 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16367)
!16373 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16367)
!16374 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16367)
!16375 = !DILocation(line: 639, column: 4, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !2486, line: 638, column: 41)
!16377 = distinct !DILexicalBlock(scope: !16378, file: !2486, line: 638, column: 7)
!16378 = distinct !DILexicalBlock(scope: !16379, file: !2486, line: 637, column: 26)
!16379 = distinct !DILexicalBlock(scope: !16362, file: !2486, line: 637, column: 2)
!16380 = !DILocation(line: 0, scope: !15834, inlinedAt: !16381)
!16381 = distinct !DILocation(line: 637, column: 2, scope: !16379)
!16382 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16381)
!16383 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16381)
!16384 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16381)
!16385 = !DILocation(line: 0, scope: !15848, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16381)
!16387 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16386)
!16388 = !DILocation(line: 642, column: 1, scope: !16358)
!16389 = distinct !DISubprogram(name: "ready_thread", scope: !2486, file: !2486, line: 617, type: !15758, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16390)
!16390 = !{!16391}
!16391 = !DILocalVariable(name: "thread", arg: 1, scope: !16389, file: !2486, line: 617, type: !2379)
!16392 = !DILocation(line: 0, scope: !16389)
!16393 = !DILocation(line: 626, column: 7, scope: !16394)
!16394 = distinct !DILexicalBlock(scope: !16389, file: !2486, line: 626, column: 6)
!16395 = !DILocation(line: 626, column: 34, scope: !16394)
!16396 = !DILocation(line: 626, column: 37, scope: !16394)
!16397 = !DILocation(line: 626, column: 6, scope: !16389)
!16398 = !DILocation(line: 0, scope: !16009, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 629, column: 3, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16394, file: !2486, line: 626, column: 64)
!16401 = !DILocation(line: 252, column: 15, scope: !16009, inlinedAt: !16399)
!16402 = !DILocation(line: 252, column: 28, scope: !16009, inlinedAt: !16399)
!16403 = !DILocation(line: 0, scope: !16016, inlinedAt: !16404)
!16404 = distinct !DILocation(line: 254, column: 3, scope: !16020, inlinedAt: !16399)
!16405 = !DILocation(line: 0, scope: !16023, inlinedAt: !16406)
!16406 = distinct !DILocation(line: 229, column: 2, scope: !16016, inlinedAt: !16404)
!16407 = !DILocation(line: 186, column: 2, scope: !16033, inlinedAt: !16406)
!16408 = !DILocation(line: 186, column: 2, scope: !16034, inlinedAt: !16406)
!16409 = !DILocation(line: 186, column: 2, scope: !16037, inlinedAt: !16406)
!16410 = !DILocation(line: 188, column: 2, scope: !16039, inlinedAt: !16406)
!16411 = !DILocation(line: 188, column: 2, scope: !16041, inlinedAt: !16406)
!16412 = !DILocation(line: 0, scope: !16039, inlinedAt: !16406)
!16413 = !DILocation(line: 189, column: 7, scope: !16044, inlinedAt: !16406)
!16414 = !DILocation(line: 189, column: 35, scope: !16044, inlinedAt: !16406)
!16415 = !DILocation(line: 189, column: 7, scope: !16045, inlinedAt: !16406)
!16416 = !DILocation(line: 191, column: 21, scope: !16049, inlinedAt: !16406)
!16417 = !DILocation(line: 190, column: 4, scope: !16049, inlinedAt: !16406)
!16418 = !DILocation(line: 192, column: 4, scope: !16049, inlinedAt: !16406)
!16419 = distinct !{!16419, !16410, !16420}
!16420 = !DILocation(line: 194, column: 2, scope: !16039, inlinedAt: !16406)
!16421 = !DILocation(line: 196, column: 37, scope: !16023, inlinedAt: !16406)
!16422 = !DILocation(line: 196, column: 2, scope: !16023, inlinedAt: !16406)
!16423 = !DILocation(line: 197, column: 1, scope: !16023, inlinedAt: !16406)
!16424 = !DILocation(line: 630, column: 3, scope: !16400)
!16425 = !DILocation(line: 632, column: 2, scope: !16400)
!16426 = !DILocation(line: 633, column: 1, scope: !16389)
!16427 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14155, file: !14155, line: 120, type: !15941, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16428)
!16428 = !{!16429}
!16429 = !DILocalVariable(name: "thread", arg: 1, scope: !16427, file: !14155, line: 120, type: !2379)
!16430 = !DILocation(line: 0, scope: !16427)
!16431 = !DILocation(line: 122, column: 12, scope: !16427)
!16432 = !DILocation(line: 122, column: 62, scope: !16427)
!16433 = !DILocation(line: 123, column: 4, scope: !16427)
!16434 = !DILocation(line: 122, column: 2, scope: !16427)
!16435 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2486, file: !2486, line: 644, type: !15758, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16436)
!16436 = !{!16437, !16438, !16440}
!16437 = !DILocalVariable(name: "thread", arg: 1, scope: !16435, file: !2486, line: 644, type: !2379)
!16438 = !DILocalVariable(name: "__i", scope: !16439, file: !2486, line: 646, type: !15792)
!16439 = distinct !DILexicalBlock(scope: !16435, file: !2486, line: 646, column: 2)
!16440 = !DILocalVariable(name: "__key", scope: !16439, file: !2486, line: 646, type: !15792)
!16441 = !DILocation(line: 0, scope: !16435)
!16442 = !DILocation(line: 0, scope: !16439)
!16443 = !DILocation(line: 0, scope: !15800, inlinedAt: !16444)
!16444 = distinct !DILocation(line: 646, column: 2, scope: !16439)
!16445 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16446)
!16446 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16444)
!16447 = !DILocation(line: 0, scope: !15809, inlinedAt: !16446)
!16448 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16444)
!16449 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16444)
!16450 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16444)
!16451 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16444)
!16452 = !DILocation(line: 647, column: 3, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16454, file: !2486, line: 646, column: 26)
!16454 = distinct !DILexicalBlock(scope: !16439, file: !2486, line: 646, column: 2)
!16455 = !DILocation(line: 0, scope: !15834, inlinedAt: !16456)
!16456 = distinct !DILocation(line: 646, column: 2, scope: !16454)
!16457 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16456)
!16458 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16456)
!16459 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16456)
!16460 = !DILocation(line: 0, scope: !15848, inlinedAt: !16461)
!16461 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16456)
!16462 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16461)
!16463 = !DILocation(line: 649, column: 1, scope: !16435)
!16464 = distinct !DISubprogram(name: "z_sched_start", scope: !2486, file: !2486, line: 651, type: !15758, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16465)
!16465 = !{!16466, !16467}
!16466 = !DILocalVariable(name: "thread", arg: 1, scope: !16464, file: !2486, line: 651, type: !2379)
!16467 = !DILocalVariable(name: "key", scope: !16464, file: !2486, line: 653, type: !15792)
!16468 = !DILocation(line: 0, scope: !16464)
!16469 = !DILocation(line: 0, scope: !15800, inlinedAt: !16470)
!16470 = distinct !DILocation(line: 653, column: 25, scope: !16464)
!16471 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16472)
!16472 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16470)
!16473 = !DILocation(line: 0, scope: !15809, inlinedAt: !16472)
!16474 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16470)
!16475 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16470)
!16476 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16470)
!16477 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16470)
!16478 = !DILocation(line: 655, column: 6, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16464, file: !2486, line: 655, column: 6)
!16480 = !DILocation(line: 655, column: 6, scope: !16464)
!16481 = !DILocation(line: 0, scope: !15834, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 656, column: 3, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16479, file: !2486, line: 655, column: 36)
!16484 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16482)
!16485 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16482)
!16486 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16482)
!16487 = !DILocation(line: 0, scope: !15848, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16482)
!16489 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16488)
!16490 = !DILocation(line: 657, column: 3, scope: !16483)
!16491 = !DILocation(line: 660, column: 2, scope: !16464)
!16492 = !DILocation(line: 661, column: 2, scope: !16464)
!16493 = !DILocation(line: 662, column: 2, scope: !16464)
!16494 = !DILocation(line: 663, column: 1, scope: !16464)
!16495 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14155, file: !14155, line: 126, type: !15941, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16496)
!16496 = !{!16497}
!16497 = !DILocalVariable(name: "thread", arg: 1, scope: !16495, file: !14155, line: 126, type: !2379)
!16498 = !DILocation(line: 0, scope: !16495)
!16499 = !DILocation(line: 128, column: 23, scope: !16495)
!16500 = !DILocation(line: 128, column: 36, scope: !16495)
!16501 = !DILocation(line: 128, column: 56, scope: !16495)
!16502 = !DILocation(line: 128, column: 2, scope: !16495)
!16503 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14155, file: !14155, line: 155, type: !15758, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16504)
!16504 = !{!16505}
!16505 = !DILocalVariable(name: "thread", arg: 1, scope: !16503, file: !14155, line: 155, type: !2379)
!16506 = !DILocation(line: 0, scope: !16503)
!16507 = !DILocation(line: 157, column: 15, scope: !16503)
!16508 = !DILocation(line: 157, column: 28, scope: !16503)
!16509 = !DILocation(line: 158, column: 1, scope: !16503)
!16510 = distinct !DISubprogram(name: "z_reschedule", scope: !2486, file: !2486, line: 967, type: !15835, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16511)
!16511 = !{!16512, !16513}
!16512 = !DILocalVariable(name: "lock", arg: 1, scope: !16510, file: !2486, line: 967, type: !15803)
!16513 = !DILocalVariable(name: "key", arg: 2, scope: !16510, file: !2486, line: 967, type: !15792)
!16514 = !DILocation(line: 0, scope: !16510)
!16515 = !DILocation(line: 969, column: 6, scope: !16516)
!16516 = distinct !DILexicalBlock(scope: !16510, file: !2486, line: 969, column: 6)
!16517 = !DILocation(line: 969, column: 23, scope: !16516)
!16518 = !DILocation(line: 969, column: 26, scope: !16516)
!16519 = !DILocation(line: 969, column: 6, scope: !16510)
!16520 = !DILocalVariable(name: "key", arg: 2, scope: !16521, file: !14280, line: 193, type: !15792)
!16521 = distinct !DISubprogram(name: "z_swap", scope: !14280, file: !14280, line: 193, type: !16522, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16524)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{!105, !15803, !15792}
!16524 = !{!16525, !16520}
!16525 = !DILocalVariable(name: "lock", arg: 1, scope: !16521, file: !14280, line: 193, type: !15803)
!16526 = !DILocation(line: 0, scope: !16521, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 970, column: 3, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16516, file: !2486, line: 969, column: 39)
!16529 = !DILocalVariable(name: "l", arg: 1, scope: !16530, file: !236, line: 221, type: !15803)
!16530 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !16531, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16533)
!16531 = !DISubroutineType(types: !16532)
!16532 = !{null, !15803}
!16533 = !{!16529}
!16534 = !DILocation(line: 0, scope: !16530, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !16527)
!16536 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !16535)
!16537 = distinct !DILexicalBlock(scope: !16538, file: !236, line: 225, column: 2)
!16538 = distinct !DILexicalBlock(scope: !16530, file: !236, line: 225, column: 2)
!16539 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !16535)
!16540 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !16535)
!16541 = distinct !DILexicalBlock(scope: !16537, file: !236, line: 225, column: 2)
!16542 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !16527)
!16543 = !DILocation(line: 971, column: 2, scope: !16528)
!16544 = !DILocation(line: 0, scope: !15834, inlinedAt: !16545)
!16545 = distinct !DILocation(line: 972, column: 3, scope: !16546)
!16546 = distinct !DILexicalBlock(scope: !16516, file: !2486, line: 971, column: 9)
!16547 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16545)
!16548 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16545)
!16549 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16545)
!16550 = !DILocation(line: 0, scope: !15848, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16545)
!16552 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16551)
!16553 = !DILocation(line: 975, column: 1, scope: !16510)
!16554 = distinct !DISubprogram(name: "resched", scope: !2486, file: !2486, line: 940, type: !16555, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16557)
!16555 = !DISubroutineType(types: !16556)
!16556 = !{!492, !113}
!16557 = !{!16558}
!16558 = !DILocalVariable(name: "key", arg: 1, scope: !16554, file: !2486, line: 940, type: !113)
!16559 = !DILocation(line: 0, scope: !16554)
!16560 = !DILocalVariable(name: "key", arg: 1, scope: !16561, file: !7468, line: 112, type: !32)
!16561 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7468, file: !7468, line: 112, type: !16562, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16564)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{!492, !32}
!16564 = !{!16560}
!16565 = !DILocation(line: 0, scope: !16561, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 946, column: 9, scope: !16554)
!16567 = !DILocation(line: 115, column: 13, scope: !16561, inlinedAt: !16566)
!16568 = !DILocation(line: 946, column: 32, scope: !16554)
!16569 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !16573)
!16570 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16571)
!16571 = !{!16572}
!16572 = !DILocalVariable(name: "result", scope: !16570, file: !7786, line: 1029, type: !113)
!16573 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !16575)
!16574 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!16575 = distinct !DILocation(line: 946, column: 36, scope: !16554)
!16576 = !{i64 3541759}
!16577 = !DILocation(line: 0, scope: !16570, inlinedAt: !16573)
!16578 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !16575)
!16579 = !DILocation(line: 946, column: 2, scope: !16554)
!16580 = distinct !DISubprogram(name: "need_swap", scope: !2486, file: !2486, line: 953, type: !8834, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16581)
!16581 = !{!16582}
!16582 = !DILocalVariable(name: "new_thread", scope: !16580, file: !2486, line: 959, type: !2379)
!16583 = !DILocation(line: 962, column: 31, scope: !16580)
!16584 = !DILocation(line: 0, scope: !16580)
!16585 = !DILocation(line: 963, column: 23, scope: !16580)
!16586 = !DILocation(line: 963, column: 20, scope: !16580)
!16587 = !DILocation(line: 963, column: 2, scope: !16580)
!16588 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14280, file: !14280, line: 181, type: !7796, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16589)
!16589 = !{!16590, !16591}
!16590 = !DILocalVariable(name: "key", arg: 1, scope: !16588, file: !14280, line: 181, type: !32)
!16591 = !DILocalVariable(name: "ret", scope: !16588, file: !14280, line: 183, type: !105)
!16592 = !DILocation(line: 0, scope: !16588)
!16593 = !DILocation(line: 185, column: 8, scope: !16588)
!16594 = !DILocation(line: 186, column: 2, scope: !16588)
!16595 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2486, file: !2486, line: 665, type: !15758, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16596)
!16596 = !{!16597, !16598, !16600}
!16597 = !DILocalVariable(name: "thread", arg: 1, scope: !16595, file: !2486, line: 665, type: !2379)
!16598 = !DILocalVariable(name: "__i", scope: !16599, file: !2486, line: 671, type: !15792)
!16599 = distinct !DILexicalBlock(scope: !16595, file: !2486, line: 671, column: 2)
!16600 = !DILocalVariable(name: "__key", scope: !16599, file: !2486, line: 671, type: !15792)
!16601 = !DILocation(line: 0, scope: !16595)
!16602 = !DILocation(line: 669, column: 8, scope: !16595)
!16603 = !DILocation(line: 0, scope: !16599)
!16604 = !DILocation(line: 0, scope: !15800, inlinedAt: !16605)
!16605 = distinct !DILocation(line: 671, column: 2, scope: !16599)
!16606 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16607)
!16607 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16605)
!16608 = !DILocation(line: 0, scope: !15809, inlinedAt: !16607)
!16609 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16605)
!16610 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16605)
!16611 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16605)
!16612 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16605)
!16613 = !DILocation(line: 672, column: 7, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16615, file: !2486, line: 672, column: 7)
!16615 = distinct !DILexicalBlock(scope: !16616, file: !2486, line: 671, column: 26)
!16616 = distinct !DILexicalBlock(scope: !16599, file: !2486, line: 671, column: 2)
!16617 = !DILocation(line: 672, column: 7, scope: !16615)
!16618 = !DILocation(line: 0, scope: !15992, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 673, column: 4, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16614, file: !2486, line: 672, column: 35)
!16621 = !DILocation(line: 266, column: 15, scope: !15992, inlinedAt: !16619)
!16622 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !16619)
!16623 = !DILocation(line: 0, scope: !16000, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !16619)
!16625 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !16624)
!16626 = !DILocation(line: 674, column: 3, scope: !16620)
!16627 = !DILocation(line: 675, column: 3, scope: !16615)
!16628 = !DILocation(line: 676, column: 26, scope: !16615)
!16629 = !DILocation(line: 676, column: 23, scope: !16615)
!16630 = !DILocation(line: 676, column: 3, scope: !16615)
!16631 = !DILocation(line: 0, scope: !15834, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 671, column: 2, scope: !16616)
!16633 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16632)
!16634 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16632)
!16635 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16632)
!16636 = !DILocation(line: 0, scope: !15848, inlinedAt: !16637)
!16637 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16632)
!16638 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16637)
!16639 = !DILocation(line: 679, column: 16, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16595, file: !2486, line: 679, column: 6)
!16641 = !DILocation(line: 679, column: 13, scope: !16640)
!16642 = !DILocation(line: 679, column: 6, scope: !16595)
!16643 = !DILocation(line: 680, column: 3, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16640, file: !2486, line: 679, column: 26)
!16645 = !DILocation(line: 681, column: 2, scope: !16644)
!16646 = !DILocation(line: 684, column: 1, scope: !16595)
!16647 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14584, file: !14584, line: 52, type: !15776, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16648)
!16648 = !{!16649}
!16649 = !DILocalVariable(name: "thread", arg: 1, scope: !16647, file: !14584, line: 52, type: !2379)
!16650 = !DILocation(line: 0, scope: !16647)
!16651 = !DILocation(line: 54, column: 39, scope: !16647)
!16652 = !DILocation(line: 54, column: 9, scope: !16647)
!16653 = !DILocation(line: 54, column: 2, scope: !16647)
!16654 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14155, file: !14155, line: 141, type: !15758, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16655)
!16655 = !{!16656}
!16656 = !DILocalVariable(name: "thread", arg: 1, scope: !16654, file: !14155, line: 141, type: !2379)
!16657 = !DILocation(line: 0, scope: !16654)
!16658 = !DILocation(line: 143, column: 15, scope: !16654)
!16659 = !DILocation(line: 143, column: 28, scope: !16654)
!16660 = !DILocation(line: 146, column: 1, scope: !16654)
!16661 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14155, file: !14155, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!16662 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16663)
!16663 = distinct !DILocation(line: 75, column: 30, scope: !16661)
!16664 = !DILocation(line: 0, scope: !15809, inlinedAt: !16663)
!16665 = !DILocation(line: 75, column: 9, scope: !16661)
!16666 = !DILocation(line: 76, column: 1, scope: !16661)
!16667 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2486, file: !2486, line: 977, type: !7881, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16668)
!16668 = !{!16669}
!16669 = !DILocalVariable(name: "key", arg: 1, scope: !16667, file: !2486, line: 977, type: !113)
!16670 = !DILocation(line: 0, scope: !16667)
!16671 = !DILocation(line: 979, column: 6, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16667, file: !2486, line: 979, column: 6)
!16673 = !DILocation(line: 979, column: 6, scope: !16667)
!16674 = !DILocation(line: 980, column: 3, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16672, file: !2486, line: 979, column: 20)
!16676 = !DILocation(line: 981, column: 2, scope: !16675)
!16677 = !DILocation(line: 0, scope: !15848, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 982, column: 3, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16672, file: !2486, line: 981, column: 9)
!16680 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16678)
!16681 = !DILocation(line: 985, column: 1, scope: !16667)
!16682 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2486, file: !2486, line: 695, type: !15758, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16683)
!16683 = !{!16684, !16685}
!16684 = !DILocalVariable(name: "thread", arg: 1, scope: !16682, file: !2486, line: 695, type: !2379)
!16685 = !DILocalVariable(name: "key", scope: !16682, file: !2486, line: 699, type: !15792)
!16686 = !DILocation(line: 0, scope: !16682)
!16687 = !DILocation(line: 0, scope: !15800, inlinedAt: !16688)
!16688 = distinct !DILocation(line: 699, column: 25, scope: !16682)
!16689 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16690)
!16690 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16688)
!16691 = !DILocation(line: 0, scope: !15809, inlinedAt: !16690)
!16692 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16688)
!16693 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16688)
!16694 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16688)
!16695 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16688)
!16696 = !DILocation(line: 702, column: 7, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16682, file: !2486, line: 702, column: 6)
!16698 = !DILocation(line: 702, column: 6, scope: !16682)
!16699 = !DILocation(line: 0, scope: !15834, inlinedAt: !16700)
!16700 = distinct !DILocation(line: 703, column: 3, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16697, file: !2486, line: 702, column: 38)
!16702 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16700)
!16703 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16700)
!16704 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16700)
!16705 = !DILocation(line: 0, scope: !15848, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16700)
!16707 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16706)
!16708 = !DILocation(line: 704, column: 3, scope: !16701)
!16709 = !DILocation(line: 707, column: 2, scope: !16682)
!16710 = !DILocation(line: 708, column: 2, scope: !16682)
!16711 = !DILocation(line: 710, column: 2, scope: !16682)
!16712 = !DILocation(line: 713, column: 1, scope: !16682)
!16713 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14155, file: !14155, line: 96, type: !15941, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16714)
!16714 = !{!16715}
!16715 = !DILocalVariable(name: "thread", arg: 1, scope: !16713, file: !14155, line: 96, type: !2379)
!16716 = !DILocation(line: 0, scope: !16713)
!16717 = !DILocation(line: 98, column: 23, scope: !16713)
!16718 = !DILocation(line: 98, column: 36, scope: !16713)
!16719 = !DILocation(line: 98, column: 57, scope: !16713)
!16720 = !DILocation(line: 98, column: 2, scope: !16713)
!16721 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14155, file: !14155, line: 148, type: !15758, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16722)
!16722 = !{!16723}
!16723 = !DILocalVariable(name: "thread", arg: 1, scope: !16721, file: !14155, line: 148, type: !2379)
!16724 = !DILocation(line: 0, scope: !16721)
!16725 = !DILocation(line: 150, column: 15, scope: !16721)
!16726 = !DILocation(line: 150, column: 28, scope: !16721)
!16727 = !DILocation(line: 153, column: 1, scope: !16721)
!16728 = distinct !DISubprogram(name: "z_pend_thread", scope: !2486, file: !2486, line: 770, type: !16729, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16735)
!16729 = !DISubroutineType(types: !16730)
!16730 = !{null, !2379, !2410, !16731}
!16731 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16732)
!16732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16733)
!16733 = !{!16734}
!16734 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16732, file: !108, line: 66, baseType: !107, size: 64)
!16735 = !{!16736, !16737, !16738, !16739, !16741}
!16736 = !DILocalVariable(name: "thread", arg: 1, scope: !16728, file: !2486, line: 770, type: !2379)
!16737 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16728, file: !2486, line: 770, type: !2410)
!16738 = !DILocalVariable(name: "timeout", arg: 3, scope: !16728, file: !2486, line: 771, type: !16731)
!16739 = !DILocalVariable(name: "__i", scope: !16740, file: !2486, line: 774, type: !15792)
!16740 = distinct !DILexicalBlock(scope: !16728, file: !2486, line: 774, column: 2)
!16741 = !DILocalVariable(name: "__key", scope: !16740, file: !2486, line: 774, type: !15792)
!16742 = !DILocation(line: 0, scope: !16728)
!16743 = !DILocation(line: 773, column: 2, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2486, line: 773, column: 2)
!16745 = distinct !DILexicalBlock(scope: !16728, file: !2486, line: 773, column: 2)
!16746 = !DILocation(line: 773, column: 2, scope: !16745)
!16747 = !DILocation(line: 773, column: 2, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16744, file: !2486, line: 773, column: 2)
!16749 = !DILocation(line: 0, scope: !16740)
!16750 = !DILocation(line: 0, scope: !15800, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 774, column: 2, scope: !16740)
!16752 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16751)
!16754 = !DILocation(line: 0, scope: !15809, inlinedAt: !16753)
!16755 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16751)
!16756 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16751)
!16757 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16751)
!16758 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16751)
!16759 = !DILocation(line: 775, column: 3, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16761, file: !2486, line: 774, column: 26)
!16761 = distinct !DILexicalBlock(scope: !16740, file: !2486, line: 774, column: 2)
!16762 = !DILocation(line: 0, scope: !15834, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 774, column: 2, scope: !16761)
!16764 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16763)
!16765 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16763)
!16766 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16763)
!16767 = !DILocation(line: 0, scope: !15848, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16763)
!16769 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16768)
!16770 = !DILocation(line: 777, column: 1, scope: !16728)
!16771 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2486, file: !2486, line: 79, type: !15941, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16772)
!16772 = !{!16773}
!16773 = !DILocalVariable(name: "thread", arg: 1, scope: !16771, file: !2486, line: 79, type: !2379)
!16774 = !DILocation(line: 0, scope: !16771)
!16775 = !DILocation(line: 81, column: 23, scope: !16771)
!16776 = !DILocation(line: 81, column: 36, scope: !16771)
!16777 = !DILocation(line: 81, column: 53, scope: !16771)
!16778 = !DILocation(line: 81, column: 2, scope: !16771)
!16779 = distinct !DISubprogram(name: "pend_locked", scope: !2486, file: !2486, line: 760, type: !16729, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16780)
!16780 = !{!16781, !16782, !16783}
!16781 = !DILocalVariable(name: "thread", arg: 1, scope: !16779, file: !2486, line: 760, type: !2379)
!16782 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16779, file: !2486, line: 760, type: !2410)
!16783 = !DILocalVariable(name: "timeout", arg: 3, scope: !16779, file: !2486, line: 761, type: !16731)
!16784 = !DILocation(line: 0, scope: !16779)
!16785 = !DILocation(line: 766, column: 2, scope: !16779)
!16786 = !DILocation(line: 767, column: 2, scope: !16779)
!16787 = !DILocation(line: 768, column: 1, scope: !16779)
!16788 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2486, file: !2486, line: 740, type: !16789, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16791)
!16789 = !DISubroutineType(types: !16790)
!16790 = !{null, !2379, !2410}
!16791 = !{!16792, !16793}
!16792 = !DILocalVariable(name: "thread", arg: 1, scope: !16788, file: !2486, line: 740, type: !2379)
!16793 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16788, file: !2486, line: 740, type: !2410)
!16794 = !DILocation(line: 0, scope: !16788)
!16795 = !DILocation(line: 742, column: 2, scope: !16788)
!16796 = !DILocation(line: 743, column: 2, scope: !16788)
!16797 = !DILocation(line: 747, column: 13, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16788, file: !2486, line: 747, column: 6)
!16799 = !DILocation(line: 747, column: 6, scope: !16788)
!16800 = !DILocation(line: 748, column: 16, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16798, file: !2486, line: 747, column: 22)
!16802 = !DILocation(line: 748, column: 26, scope: !16801)
!16803 = !DILocation(line: 749, column: 28, scope: !16801)
!16804 = !DILocation(line: 0, scope: !16023, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 749, column: 3, scope: !16801)
!16806 = !DILocation(line: 186, column: 2, scope: !16033, inlinedAt: !16805)
!16807 = !DILocation(line: 186, column: 2, scope: !16034, inlinedAt: !16805)
!16808 = !DILocation(line: 186, column: 2, scope: !16037, inlinedAt: !16805)
!16809 = !DILocation(line: 188, column: 2, scope: !16039, inlinedAt: !16805)
!16810 = !DILocation(line: 188, column: 2, scope: !16041, inlinedAt: !16805)
!16811 = !DILocation(line: 0, scope: !16039, inlinedAt: !16805)
!16812 = !DILocation(line: 189, column: 7, scope: !16044, inlinedAt: !16805)
!16813 = !DILocation(line: 189, column: 35, scope: !16044, inlinedAt: !16805)
!16814 = !DILocation(line: 189, column: 7, scope: !16045, inlinedAt: !16805)
!16815 = !DILocation(line: 191, column: 21, scope: !16049, inlinedAt: !16805)
!16816 = !DILocation(line: 190, column: 4, scope: !16049, inlinedAt: !16805)
!16817 = !DILocation(line: 192, column: 4, scope: !16049, inlinedAt: !16805)
!16818 = distinct !{!16818, !16809, !16819}
!16819 = !DILocation(line: 194, column: 2, scope: !16039, inlinedAt: !16805)
!16820 = !DILocation(line: 196, column: 37, scope: !16023, inlinedAt: !16805)
!16821 = !DILocation(line: 196, column: 2, scope: !16023, inlinedAt: !16805)
!16822 = !DILocation(line: 197, column: 1, scope: !16023, inlinedAt: !16805)
!16823 = !DILocation(line: 751, column: 1, scope: !16788)
!16824 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2486, file: !2486, line: 753, type: !16825, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16827)
!16825 = !DISubroutineType(types: !16826)
!16826 = !{null, !2379, !16731}
!16827 = !{!16828, !16829}
!16828 = !DILocalVariable(name: "thread", arg: 1, scope: !16824, file: !2486, line: 753, type: !2379)
!16829 = !DILocalVariable(name: "timeout", arg: 2, scope: !16824, file: !2486, line: 753, type: !16731)
!16830 = !DILocation(line: 0, scope: !16824)
!16831 = !DILocation(line: 755, column: 7, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16824, file: !2486, line: 755, column: 6)
!16833 = !DILocation(line: 755, column: 6, scope: !16824)
!16834 = !DILocation(line: 756, column: 3, scope: !16835)
!16835 = distinct !DILexicalBlock(scope: !16832, file: !2486, line: 755, column: 41)
!16836 = !DILocation(line: 757, column: 2, scope: !16835)
!16837 = !DILocation(line: 758, column: 1, scope: !16824)
!16838 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14584, file: !14584, line: 47, type: !16825, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16839)
!16839 = !{!16840, !16841}
!16840 = !DILocalVariable(name: "thread", arg: 1, scope: !16838, file: !14584, line: 47, type: !2379)
!16841 = !DILocalVariable(name: "ticks", arg: 2, scope: !16838, file: !14584, line: 47, type: !16731)
!16842 = !DILocation(line: 0, scope: !16838)
!16843 = !DILocation(line: 49, column: 30, scope: !16838)
!16844 = !DILocation(line: 49, column: 2, scope: !16838)
!16845 = !DILocation(line: 50, column: 1, scope: !16838)
!16846 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2486, file: !2486, line: 795, type: !2436, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16847)
!16847 = !{!16848, !16849, !16850, !16852, !16853}
!16848 = !DILocalVariable(name: "timeout", arg: 1, scope: !16846, file: !2486, line: 795, type: !2438)
!16849 = !DILocalVariable(name: "thread", scope: !16846, file: !2486, line: 797, type: !2379)
!16850 = !DILocalVariable(name: "__i", scope: !16851, file: !2486, line: 800, type: !15792)
!16851 = distinct !DILexicalBlock(scope: !16846, file: !2486, line: 800, column: 2)
!16852 = !DILocalVariable(name: "__key", scope: !16851, file: !2486, line: 800, type: !15792)
!16853 = !DILocalVariable(name: "killed", scope: !16854, file: !2486, line: 801, type: !492)
!16854 = distinct !DILexicalBlock(scope: !16855, file: !2486, line: 800, column: 26)
!16855 = distinct !DILexicalBlock(scope: !16851, file: !2486, line: 800, column: 2)
!16856 = !DILocation(line: 0, scope: !16846)
!16857 = !DILocation(line: 797, column: 28, scope: !16846)
!16858 = !DILocation(line: 0, scope: !16851)
!16859 = !DILocation(line: 0, scope: !15800, inlinedAt: !16860)
!16860 = distinct !DILocation(line: 800, column: 2, scope: !16851)
!16861 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16862)
!16862 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16860)
!16863 = !DILocation(line: 0, scope: !15809, inlinedAt: !16862)
!16864 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16860)
!16865 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16860)
!16866 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16860)
!16867 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16860)
!16868 = !DILocation(line: 801, column: 27, scope: !16854)
!16869 = !DILocation(line: 801, column: 32, scope: !16854)
!16870 = !DILocation(line: 801, column: 61, scope: !16854)
!16871 = !DILocation(line: 0, scope: !16854)
!16872 = !DILocation(line: 804, column: 7, scope: !16854)
!16873 = !DILocation(line: 805, column: 21, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16875, file: !2486, line: 805, column: 8)
!16875 = distinct !DILexicalBlock(scope: !16876, file: !2486, line: 804, column: 16)
!16876 = distinct !DILexicalBlock(scope: !16854, file: !2486, line: 804, column: 7)
!16877 = !DILocation(line: 805, column: 31, scope: !16874)
!16878 = !DILocation(line: 805, column: 8, scope: !16875)
!16879 = !DILocation(line: 806, column: 5, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16874, file: !2486, line: 805, column: 40)
!16881 = !DILocation(line: 807, column: 4, scope: !16880)
!16882 = !DILocation(line: 808, column: 4, scope: !16875)
!16883 = !DILocation(line: 809, column: 4, scope: !16875)
!16884 = !DILocation(line: 810, column: 4, scope: !16875)
!16885 = !DILocation(line: 811, column: 3, scope: !16875)
!16886 = !DILocation(line: 0, scope: !15834, inlinedAt: !16887)
!16887 = distinct !DILocation(line: 800, column: 2, scope: !16855)
!16888 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16887)
!16889 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16887)
!16890 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16887)
!16891 = !DILocation(line: 0, scope: !15848, inlinedAt: !16892)
!16892 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16887)
!16893 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16892)
!16894 = !DILocation(line: 813, column: 1, scope: !16846)
!16895 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2486, file: !2486, line: 779, type: !15758, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16896)
!16896 = !{!16897}
!16897 = !DILocalVariable(name: "thread", arg: 1, scope: !16895, file: !2486, line: 779, type: !2379)
!16898 = !DILocation(line: 0, scope: !16895)
!16899 = !DILocation(line: 781, column: 21, scope: !16895)
!16900 = !DILocation(line: 781, column: 2, scope: !16895)
!16901 = !DILocation(line: 782, column: 2, scope: !16895)
!16902 = !DILocation(line: 783, column: 15, scope: !16895)
!16903 = !DILocation(line: 783, column: 25, scope: !16895)
!16904 = !DILocation(line: 784, column: 1, scope: !16895)
!16905 = distinct !DISubprogram(name: "pended_on_thread", scope: !2486, file: !2486, line: 724, type: !16906, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16908)
!16906 = !DISubroutineType(types: !16907)
!16907 = !{!2410, !2379}
!16908 = !{!16909}
!16909 = !DILocalVariable(name: "thread", arg: 1, scope: !16905, file: !2486, line: 724, type: !2379)
!16910 = !DILocation(line: 0, scope: !16905)
!16911 = !DILocation(line: 726, column: 2, scope: !16912)
!16912 = distinct !DILexicalBlock(scope: !16913, file: !2486, line: 726, column: 2)
!16913 = distinct !DILexicalBlock(scope: !16905, file: !2486, line: 726, column: 2)
!16914 = !DILocation(line: 726, column: 2, scope: !16913)
!16915 = !DILocation(line: 726, column: 2, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16912, file: !2486, line: 726, column: 2)
!16917 = !DILocation(line: 728, column: 2, scope: !16905)
!16918 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14155, file: !14155, line: 165, type: !15758, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16919)
!16919 = !{!16920}
!16920 = !DILocalVariable(name: "thread", arg: 1, scope: !16918, file: !14155, line: 165, type: !2379)
!16921 = !DILocation(line: 0, scope: !16918)
!16922 = !DILocation(line: 167, column: 15, scope: !16918)
!16923 = !DILocation(line: 167, column: 28, scope: !16918)
!16924 = !DILocation(line: 168, column: 1, scope: !16918)
!16925 = distinct !DISubprogram(name: "unready_thread", scope: !2486, file: !2486, line: 731, type: !15758, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16926)
!16926 = !{!16927}
!16927 = !DILocalVariable(name: "thread", arg: 1, scope: !16925, file: !2486, line: 731, type: !2379)
!16928 = !DILocation(line: 0, scope: !16925)
!16929 = !DILocation(line: 733, column: 6, scope: !16930)
!16930 = distinct !DILexicalBlock(scope: !16925, file: !2486, line: 733, column: 6)
!16931 = !DILocation(line: 733, column: 6, scope: !16925)
!16932 = !DILocation(line: 0, scope: !15992, inlinedAt: !16933)
!16933 = distinct !DILocation(line: 734, column: 3, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16930, file: !2486, line: 733, column: 34)
!16935 = !DILocation(line: 266, column: 15, scope: !15992, inlinedAt: !16933)
!16936 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !16933)
!16937 = !DILocation(line: 0, scope: !16000, inlinedAt: !16938)
!16938 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !16933)
!16939 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !16938)
!16940 = !DILocation(line: 735, column: 2, scope: !16934)
!16941 = !DILocation(line: 736, column: 25, scope: !16925)
!16942 = !DILocation(line: 736, column: 22, scope: !16925)
!16943 = !DILocation(line: 736, column: 2, scope: !16925)
!16944 = !DILocation(line: 737, column: 1, scope: !16925)
!16945 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14155, file: !14155, line: 160, type: !15758, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16946)
!16946 = !{!16947}
!16947 = !DILocalVariable(name: "thread", arg: 1, scope: !16945, file: !14155, line: 160, type: !2379)
!16948 = !DILocation(line: 0, scope: !16945)
!16949 = !DILocation(line: 162, column: 15, scope: !16945)
!16950 = !DILocation(line: 162, column: 28, scope: !16945)
!16951 = !DILocation(line: 163, column: 1, scope: !16945)
!16952 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2486, file: !2486, line: 786, type: !15758, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16953)
!16953 = !{!16954, !16955, !16957}
!16954 = !DILocalVariable(name: "thread", arg: 1, scope: !16952, file: !2486, line: 786, type: !2379)
!16955 = !DILocalVariable(name: "__i", scope: !16956, file: !2486, line: 788, type: !15792)
!16956 = distinct !DILexicalBlock(scope: !16952, file: !2486, line: 788, column: 2)
!16957 = !DILocalVariable(name: "__key", scope: !16956, file: !2486, line: 788, type: !15792)
!16958 = !DILocation(line: 0, scope: !16952)
!16959 = !DILocation(line: 0, scope: !16956)
!16960 = !DILocation(line: 0, scope: !15800, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 788, column: 2, scope: !16956)
!16962 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !16961)
!16964 = !DILocation(line: 0, scope: !15809, inlinedAt: !16963)
!16965 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !16961)
!16966 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !16961)
!16967 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !16961)
!16968 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !16961)
!16969 = !DILocation(line: 789, column: 3, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16971, file: !2486, line: 788, column: 26)
!16971 = distinct !DILexicalBlock(scope: !16956, file: !2486, line: 788, column: 2)
!16972 = !DILocation(line: 0, scope: !15834, inlinedAt: !16973)
!16973 = distinct !DILocation(line: 788, column: 2, scope: !16971)
!16974 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !16973)
!16975 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !16973)
!16976 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !16973)
!16977 = !DILocation(line: 0, scope: !15848, inlinedAt: !16978)
!16978 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !16973)
!16979 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !16978)
!16980 = !DILocation(line: 791, column: 1, scope: !16952)
!16981 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2486, file: !2486, line: 816, type: !16982, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !16984)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{!105, !113, !2410, !16731}
!16984 = !{!16985, !16986, !16987, !16988, !16989, !16991}
!16985 = !DILocalVariable(name: "key", arg: 1, scope: !16981, file: !2486, line: 816, type: !113)
!16986 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16981, file: !2486, line: 816, type: !2410)
!16987 = !DILocalVariable(name: "timeout", arg: 3, scope: !16981, file: !2486, line: 816, type: !16731)
!16988 = !DILocalVariable(name: "ret", scope: !16981, file: !2486, line: 828, type: !105)
!16989 = !DILocalVariable(name: "__i", scope: !16990, file: !2486, line: 829, type: !15792)
!16990 = distinct !DILexicalBlock(scope: !16981, file: !2486, line: 829, column: 2)
!16991 = !DILocalVariable(name: "__key", scope: !16990, file: !2486, line: 829, type: !15792)
!16992 = !DILocation(line: 0, scope: !16981)
!16993 = !DILocation(line: 823, column: 14, scope: !16981)
!16994 = !DILocation(line: 823, column: 2, scope: !16981)
!16995 = !DILocation(line: 826, column: 20, scope: !16981)
!16996 = !DILocation(line: 826, column: 18, scope: !16981)
!16997 = !DILocation(line: 828, column: 12, scope: !16981)
!16998 = !DILocation(line: 0, scope: !16990)
!16999 = !DILocation(line: 0, scope: !15800, inlinedAt: !17000)
!17000 = distinct !DILocation(line: 829, column: 2, scope: !16990)
!17001 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17002)
!17002 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17000)
!17003 = !DILocation(line: 0, scope: !15809, inlinedAt: !17002)
!17004 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17000)
!17005 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17000)
!17006 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17000)
!17007 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17000)
!17008 = !DILocation(line: 830, column: 7, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !17010, file: !2486, line: 830, column: 7)
!17010 = distinct !DILexicalBlock(scope: !17011, file: !2486, line: 829, column: 26)
!17011 = distinct !DILexicalBlock(scope: !16990, file: !2486, line: 829, column: 2)
!17012 = !DILocation(line: 830, column: 26, scope: !17009)
!17013 = !DILocation(line: 830, column: 23, scope: !17009)
!17014 = !DILocation(line: 830, column: 7, scope: !17010)
!17015 = !DILocation(line: 831, column: 20, scope: !17016)
!17016 = distinct !DILexicalBlock(scope: !17009, file: !2486, line: 830, column: 36)
!17017 = !DILocation(line: 832, column: 3, scope: !17016)
!17018 = !DILocation(line: 0, scope: !15834, inlinedAt: !17019)
!17019 = distinct !DILocation(line: 829, column: 2, scope: !17011)
!17020 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17019)
!17021 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17019)
!17022 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17019)
!17023 = !DILocation(line: 0, scope: !15848, inlinedAt: !17024)
!17024 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17019)
!17025 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17024)
!17026 = !DILocation(line: 834, column: 2, scope: !16981)
!17027 = distinct !DISubprogram(name: "z_pend_curr", scope: !2486, file: !2486, line: 840, type: !17028, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17030)
!17028 = !DISubroutineType(types: !17029)
!17029 = !{!105, !15803, !15792, !2410, !16731}
!17030 = !{!17031, !17032, !17033, !17034}
!17031 = !DILocalVariable(name: "lock", arg: 1, scope: !17027, file: !2486, line: 840, type: !15803)
!17032 = !DILocalVariable(name: "key", arg: 2, scope: !17027, file: !2486, line: 840, type: !15792)
!17033 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17027, file: !2486, line: 841, type: !2410)
!17034 = !DILocalVariable(name: "timeout", arg: 4, scope: !17027, file: !2486, line: 841, type: !16731)
!17035 = !DILocation(line: 0, scope: !17027)
!17036 = !DILocation(line: 844, column: 20, scope: !17027)
!17037 = !DILocation(line: 844, column: 18, scope: !17027)
!17038 = !DILocation(line: 846, column: 2, scope: !17039)
!17039 = distinct !DILexicalBlock(scope: !17040, file: !2486, line: 846, column: 2)
!17040 = distinct !DILexicalBlock(scope: !17027, file: !2486, line: 846, column: 2)
!17041 = !DILocation(line: 846, column: 2, scope: !17040)
!17042 = !DILocation(line: 846, column: 2, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17039, file: !2486, line: 846, column: 2)
!17044 = !DILocation(line: 0, scope: !15800, inlinedAt: !17045)
!17045 = distinct !DILocation(line: 856, column: 9, scope: !17027)
!17046 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17047)
!17047 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17045)
!17048 = !DILocation(line: 0, scope: !15809, inlinedAt: !17047)
!17049 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17045)
!17050 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17045)
!17051 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17045)
!17052 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17045)
!17053 = !DILocation(line: 857, column: 14, scope: !17027)
!17054 = !DILocation(line: 857, column: 2, scope: !17027)
!17055 = !DILocation(line: 0, scope: !16530, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 858, column: 2, scope: !17027)
!17057 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !17056)
!17058 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !17056)
!17059 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !17056)
!17060 = !DILocation(line: 0, scope: !16521, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 859, column: 9, scope: !17027)
!17062 = !DILocation(line: 0, scope: !16530, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !17061)
!17064 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !17063)
!17065 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !17063)
!17066 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !17063)
!17067 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !17061)
!17068 = !DILocation(line: 859, column: 2, scope: !17027)
!17069 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2486, file: !2486, line: 862, type: !17070, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17072)
!17070 = !DISubroutineType(types: !17071)
!17071 = !{!2379, !2410}
!17072 = !{!17073, !17074, !17075, !17077}
!17073 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17069, file: !2486, line: 862, type: !2410)
!17074 = !DILocalVariable(name: "thread", scope: !17069, file: !2486, line: 864, type: !2379)
!17075 = !DILocalVariable(name: "__i", scope: !17076, file: !2486, line: 866, type: !15792)
!17076 = distinct !DILexicalBlock(scope: !17069, file: !2486, line: 866, column: 2)
!17077 = !DILocalVariable(name: "__key", scope: !17076, file: !2486, line: 866, type: !15792)
!17078 = !DILocation(line: 0, scope: !17069)
!17079 = !DILocation(line: 0, scope: !17076)
!17080 = !DILocation(line: 0, scope: !15800, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 866, column: 2, scope: !17076)
!17082 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17083)
!17083 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17081)
!17084 = !DILocation(line: 0, scope: !15809, inlinedAt: !17083)
!17085 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17081)
!17086 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17081)
!17087 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17081)
!17088 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17081)
!17089 = !DILocation(line: 867, column: 12, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17091, file: !2486, line: 866, column: 26)
!17091 = distinct !DILexicalBlock(scope: !17076, file: !2486, line: 866, column: 2)
!17092 = !DILocation(line: 869, column: 14, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17090, file: !2486, line: 869, column: 7)
!17094 = !DILocation(line: 869, column: 7, scope: !17090)
!17095 = !DILocation(line: 870, column: 4, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17093, file: !2486, line: 869, column: 23)
!17097 = !DILocation(line: 871, column: 3, scope: !17096)
!17098 = !DILocation(line: 0, scope: !15834, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 866, column: 2, scope: !17091)
!17100 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17099)
!17101 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17099)
!17102 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17099)
!17103 = !DILocation(line: 0, scope: !15848, inlinedAt: !17104)
!17104 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17099)
!17105 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17104)
!17106 = !DILocation(line: 874, column: 2, scope: !17069)
!17107 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2486, file: !2486, line: 877, type: !17070, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17108)
!17108 = !{!17109, !17110, !17111, !17113}
!17109 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17107, file: !2486, line: 877, type: !2410)
!17110 = !DILocalVariable(name: "thread", scope: !17107, file: !2486, line: 879, type: !2379)
!17111 = !DILocalVariable(name: "__i", scope: !17112, file: !2486, line: 881, type: !15792)
!17112 = distinct !DILexicalBlock(scope: !17107, file: !2486, line: 881, column: 2)
!17113 = !DILocalVariable(name: "__key", scope: !17112, file: !2486, line: 881, type: !15792)
!17114 = !DILocation(line: 0, scope: !17107)
!17115 = !DILocation(line: 0, scope: !17112)
!17116 = !DILocation(line: 0, scope: !15800, inlinedAt: !17117)
!17117 = distinct !DILocation(line: 881, column: 2, scope: !17112)
!17118 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17119)
!17119 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17117)
!17120 = !DILocation(line: 0, scope: !15809, inlinedAt: !17119)
!17121 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17117)
!17122 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17117)
!17123 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17117)
!17124 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17117)
!17125 = !DILocation(line: 882, column: 12, scope: !17126)
!17126 = distinct !DILexicalBlock(scope: !17127, file: !2486, line: 881, column: 26)
!17127 = distinct !DILexicalBlock(scope: !17112, file: !2486, line: 881, column: 2)
!17128 = !DILocation(line: 884, column: 14, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17126, file: !2486, line: 884, column: 7)
!17130 = !DILocation(line: 884, column: 7, scope: !17126)
!17131 = !DILocation(line: 885, column: 4, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17129, file: !2486, line: 884, column: 23)
!17133 = !DILocation(line: 886, column: 10, scope: !17132)
!17134 = !DILocation(line: 887, column: 3, scope: !17132)
!17135 = !DILocation(line: 0, scope: !15834, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 881, column: 2, scope: !17127)
!17137 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17136)
!17138 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17136)
!17139 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17136)
!17140 = !DILocation(line: 0, scope: !15848, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17136)
!17142 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17141)
!17143 = !DILocation(line: 890, column: 2, scope: !17107)
!17144 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2486, file: !2486, line: 893, type: !15758, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17145)
!17145 = !{!17146}
!17146 = !DILocalVariable(name: "thread", arg: 1, scope: !17144, file: !2486, line: 893, type: !2379)
!17147 = !DILocation(line: 0, scope: !17144)
!17148 = !DILocation(line: 0, scope: !16952, inlinedAt: !17149)
!17149 = distinct !DILocation(line: 895, column: 2, scope: !17144)
!17150 = !DILocation(line: 0, scope: !16956, inlinedAt: !17149)
!17151 = !DILocation(line: 0, scope: !15800, inlinedAt: !17152)
!17152 = distinct !DILocation(line: 788, column: 2, scope: !16956, inlinedAt: !17149)
!17153 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17154)
!17154 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17152)
!17155 = !DILocation(line: 0, scope: !15809, inlinedAt: !17154)
!17156 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17152)
!17157 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17152)
!17158 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17152)
!17159 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17152)
!17160 = !DILocation(line: 789, column: 3, scope: !16970, inlinedAt: !17149)
!17161 = !DILocation(line: 0, scope: !15834, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 788, column: 2, scope: !16971, inlinedAt: !17149)
!17163 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17162)
!17164 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17162)
!17165 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17162)
!17166 = !DILocation(line: 0, scope: !15848, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17162)
!17168 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17167)
!17169 = !DILocation(line: 896, column: 8, scope: !17144)
!17170 = !DILocation(line: 897, column: 1, scope: !17144)
!17171 = distinct !DISubprogram(name: "z_set_prio", scope: !2486, file: !2486, line: 902, type: !16176, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17172)
!17172 = !{!17173, !17174, !17175, !17176, !17178}
!17173 = !DILocalVariable(name: "thread", arg: 1, scope: !17171, file: !2486, line: 902, type: !2379)
!17174 = !DILocalVariable(name: "prio", arg: 2, scope: !17171, file: !2486, line: 902, type: !105)
!17175 = !DILocalVariable(name: "need_sched", scope: !17171, file: !2486, line: 904, type: !492)
!17176 = !DILocalVariable(name: "__i", scope: !17177, file: !2486, line: 906, type: !15792)
!17177 = distinct !DILexicalBlock(scope: !17171, file: !2486, line: 906, column: 2)
!17178 = !DILocalVariable(name: "__key", scope: !17177, file: !2486, line: 906, type: !15792)
!17179 = !DILocation(line: 0, scope: !17171)
!17180 = !DILocation(line: 0, scope: !17177)
!17181 = !DILocation(line: 0, scope: !15800, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 906, column: 2, scope: !17177)
!17183 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17184)
!17184 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17182)
!17185 = !DILocation(line: 0, scope: !15809, inlinedAt: !17184)
!17186 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17182)
!17187 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17182)
!17188 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17182)
!17189 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17182)
!17190 = !DILocation(line: 907, column: 16, scope: !17191)
!17191 = distinct !DILexicalBlock(scope: !17192, file: !2486, line: 906, column: 26)
!17192 = distinct !DILexicalBlock(scope: !17177, file: !2486, line: 906, column: 2)
!17193 = !DILocation(line: 909, column: 7, scope: !17191)
!17194 = !DILocation(line: 0, scope: !15992, inlinedAt: !17195)
!17195 = distinct !DILocation(line: 912, column: 5, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17197, file: !2486, line: 911, column: 63)
!17197 = distinct !DILexicalBlock(scope: !17198, file: !2486, line: 911, column: 8)
!17198 = distinct !DILexicalBlock(scope: !17199, file: !2486, line: 909, column: 19)
!17199 = distinct !DILexicalBlock(scope: !17191, file: !2486, line: 909, column: 7)
!17200 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !17195)
!17201 = !DILocation(line: 0, scope: !16000, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !17195)
!17203 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !17202)
!17204 = !DILocation(line: 913, column: 23, scope: !17196)
!17205 = !DILocation(line: 0, scope: !16009, inlinedAt: !17206)
!17206 = distinct !DILocation(line: 914, column: 5, scope: !17196)
!17207 = !DILocation(line: 252, column: 28, scope: !16009, inlinedAt: !17206)
!17208 = !DILocation(line: 0, scope: !16016, inlinedAt: !17209)
!17209 = distinct !DILocation(line: 254, column: 3, scope: !16020, inlinedAt: !17206)
!17210 = !DILocation(line: 0, scope: !16023, inlinedAt: !17211)
!17211 = distinct !DILocation(line: 229, column: 2, scope: !16016, inlinedAt: !17209)
!17212 = !DILocation(line: 186, column: 2, scope: !16033, inlinedAt: !17211)
!17213 = !DILocation(line: 186, column: 2, scope: !16034, inlinedAt: !17211)
!17214 = !DILocation(line: 186, column: 2, scope: !16037, inlinedAt: !17211)
!17215 = !DILocation(line: 188, column: 2, scope: !16039, inlinedAt: !17211)
!17216 = !DILocation(line: 188, column: 2, scope: !16041, inlinedAt: !17211)
!17217 = !DILocation(line: 0, scope: !16039, inlinedAt: !17211)
!17218 = !DILocation(line: 189, column: 7, scope: !16044, inlinedAt: !17211)
!17219 = !DILocation(line: 189, column: 35, scope: !16044, inlinedAt: !17211)
!17220 = !DILocation(line: 189, column: 7, scope: !16045, inlinedAt: !17211)
!17221 = !DILocation(line: 190, column: 4, scope: !16049, inlinedAt: !17211)
!17222 = !DILocation(line: 192, column: 4, scope: !16049, inlinedAt: !17211)
!17223 = distinct !{!17223, !17215, !17224}
!17224 = !DILocation(line: 194, column: 2, scope: !16039, inlinedAt: !17211)
!17225 = !DILocation(line: 196, column: 2, scope: !16023, inlinedAt: !17211)
!17226 = !DILocation(line: 197, column: 1, scope: !16023, inlinedAt: !17211)
!17227 = !DILocation(line: 918, column: 4, scope: !17198)
!17228 = !DILocation(line: 919, column: 3, scope: !17198)
!17229 = !DILocation(line: 920, column: 22, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17199, file: !2486, line: 919, column: 10)
!17231 = !DILocation(line: 0, scope: !15834, inlinedAt: !17232)
!17232 = distinct !DILocation(line: 906, column: 2, scope: !17192)
!17233 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17232)
!17234 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17232)
!17235 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17232)
!17236 = !DILocation(line: 0, scope: !15848, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17232)
!17238 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17237)
!17239 = !DILocation(line: 926, column: 2, scope: !17171)
!17240 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2486, file: !2486, line: 929, type: !17241, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17243)
!17241 = !DISubroutineType(types: !17242)
!17242 = !{null, !2379, !105}
!17243 = !{!17244, !17245, !17246}
!17244 = !DILocalVariable(name: "thread", arg: 1, scope: !17240, file: !2486, line: 929, type: !2379)
!17245 = !DILocalVariable(name: "prio", arg: 2, scope: !17240, file: !2486, line: 929, type: !105)
!17246 = !DILocalVariable(name: "need_sched", scope: !17240, file: !2486, line: 931, type: !492)
!17247 = !DILocation(line: 0, scope: !17240)
!17248 = !DILocation(line: 931, column: 20, scope: !17240)
!17249 = !DILocation(line: 935, column: 17, scope: !17250)
!17250 = distinct !DILexicalBlock(scope: !17240, file: !2486, line: 935, column: 6)
!17251 = !DILocation(line: 935, column: 20, scope: !17250)
!17252 = !DILocation(line: 935, column: 35, scope: !17250)
!17253 = !DILocation(line: 935, column: 48, scope: !17250)
!17254 = !DILocation(line: 935, column: 6, scope: !17240)
!17255 = !DILocation(line: 936, column: 3, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17250, file: !2486, line: 935, column: 55)
!17257 = !DILocation(line: 937, column: 2, scope: !17256)
!17258 = !DILocation(line: 938, column: 1, scope: !17240)
!17259 = distinct !DISubprogram(name: "k_sched_lock", scope: !2486, file: !2486, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17260)
!17260 = !{!17261, !17263}
!17261 = !DILocalVariable(name: "__i", scope: !17262, file: !2486, line: 989, type: !15792)
!17262 = distinct !DILexicalBlock(scope: !17259, file: !2486, line: 989, column: 2)
!17263 = !DILocalVariable(name: "__key", scope: !17262, file: !2486, line: 989, type: !15792)
!17264 = !DILocation(line: 0, scope: !17262)
!17265 = !DILocation(line: 0, scope: !15800, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 989, column: 2, scope: !17262)
!17267 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17266)
!17269 = !DILocation(line: 0, scope: !15809, inlinedAt: !17268)
!17270 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17266)
!17271 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17266)
!17272 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17266)
!17273 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17266)
!17274 = !DILocation(line: 992, column: 3, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17276, file: !2486, line: 989, column: 26)
!17276 = distinct !DILexicalBlock(scope: !17262, file: !2486, line: 989, column: 2)
!17277 = !DILocation(line: 0, scope: !15834, inlinedAt: !17278)
!17278 = distinct !DILocation(line: 989, column: 2, scope: !17276)
!17279 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17278)
!17280 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17278)
!17281 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17278)
!17282 = !DILocation(line: 0, scope: !15848, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17278)
!17284 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17283)
!17285 = !DILocation(line: 994, column: 1, scope: !17259)
!17286 = distinct !DISubprogram(name: "z_sched_lock", scope: !14155, file: !14155, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17287 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 253, column: 2, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17291, file: !14155, line: 253, column: 2)
!17291 = distinct !DILexicalBlock(scope: !17286, file: !14155, line: 253, column: 2)
!17292 = !DILocation(line: 0, scope: !16570, inlinedAt: !17288)
!17293 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17289)
!17294 = !DILocation(line: 253, column: 2, scope: !17291)
!17295 = !DILocation(line: 253, column: 2, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17290, file: !14155, line: 253, column: 2)
!17297 = !DILocation(line: 254, column: 2, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17299, file: !14155, line: 254, column: 2)
!17299 = distinct !DILexicalBlock(scope: !17286, file: !14155, line: 254, column: 2)
!17300 = !DILocation(line: 254, column: 2, scope: !17299)
!17301 = !DILocation(line: 254, column: 2, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17298, file: !14155, line: 254, column: 2)
!17303 = !DILocation(line: 256, column: 2, scope: !17286)
!17304 = !DILocation(line: 258, column: 2, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17286, file: !14155, line: 258, column: 2)
!17306 = !{i64 2154876577}
!17307 = !DILocation(line: 259, column: 1, scope: !17286)
!17308 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2486, file: !2486, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17309)
!17309 = !{!17310, !17312}
!17310 = !DILocalVariable(name: "__i", scope: !17311, file: !2486, line: 998, type: !15792)
!17311 = distinct !DILexicalBlock(scope: !17308, file: !2486, line: 998, column: 2)
!17312 = !DILocalVariable(name: "__key", scope: !17311, file: !2486, line: 998, type: !15792)
!17313 = !DILocation(line: 0, scope: !17311)
!17314 = !DILocation(line: 0, scope: !15800, inlinedAt: !17315)
!17315 = distinct !DILocation(line: 998, column: 2, scope: !17311)
!17316 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17315)
!17318 = !DILocation(line: 0, scope: !15809, inlinedAt: !17317)
!17319 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17315)
!17320 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17315)
!17321 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17315)
!17322 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17315)
!17323 = !DILocation(line: 999, column: 3, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17325, file: !2486, line: 999, column: 3)
!17325 = distinct !DILexicalBlock(scope: !17326, file: !2486, line: 999, column: 3)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !2486, line: 998, column: 26)
!17327 = distinct !DILexicalBlock(scope: !17311, file: !2486, line: 998, column: 2)
!17328 = !DILocation(line: 999, column: 3, scope: !17325)
!17329 = !DILocation(line: 999, column: 3, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17324, file: !2486, line: 999, column: 3)
!17331 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17332)
!17332 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 1000, column: 3, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17335, file: !2486, line: 1000, column: 3)
!17335 = distinct !DILexicalBlock(scope: !17326, file: !2486, line: 1000, column: 3)
!17336 = !DILocation(line: 0, scope: !16570, inlinedAt: !17332)
!17337 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17333)
!17338 = !DILocation(line: 1000, column: 3, scope: !17335)
!17339 = !DILocation(line: 1000, column: 3, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17334, file: !2486, line: 1000, column: 3)
!17341 = !DILocation(line: 1002, column: 5, scope: !17326)
!17342 = !DILocation(line: 1002, column: 20, scope: !17326)
!17343 = !DILocation(line: 1002, column: 3, scope: !17326)
!17344 = !DILocation(line: 1003, column: 3, scope: !17326)
!17345 = !DILocation(line: 0, scope: !15834, inlinedAt: !17346)
!17346 = distinct !DILocation(line: 998, column: 2, scope: !17327)
!17347 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17346)
!17348 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17346)
!17349 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17346)
!17350 = !DILocation(line: 0, scope: !15848, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17346)
!17352 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17351)
!17353 = !DILocation(line: 1011, column: 2, scope: !17308)
!17354 = !DILocation(line: 1012, column: 1, scope: !17308)
!17355 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2486, file: !2486, line: 1014, type: !16149, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17356 = !DILocation(line: 1028, column: 25, scope: !17355)
!17357 = !DILocation(line: 1028, column: 2, scope: !17355)
!17358 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2486, file: !2486, line: 1155, type: !17359, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17361)
!17359 = !DISubroutineType(types: !17360)
!17360 = !{!492, !2408, !2408}
!17361 = !{!17362, !17363, !17364, !17365, !17366}
!17362 = !DILocalVariable(name: "a", arg: 1, scope: !17358, file: !2486, line: 1155, type: !2408)
!17363 = !DILocalVariable(name: "b", arg: 2, scope: !17358, file: !2486, line: 1155, type: !2408)
!17364 = !DILocalVariable(name: "thread_a", scope: !17358, file: !2486, line: 1157, type: !2379)
!17365 = !DILocalVariable(name: "thread_b", scope: !17358, file: !2486, line: 1157, type: !2379)
!17366 = !DILocalVariable(name: "cmp", scope: !17358, file: !2486, line: 1158, type: !116)
!17367 = !DILocation(line: 0, scope: !17358)
!17368 = !DILocation(line: 1160, column: 13, scope: !17358)
!17369 = !DILocation(line: 1161, column: 13, scope: !17358)
!17370 = !DILocation(line: 1163, column: 8, scope: !17358)
!17371 = !DILocation(line: 1165, column: 10, scope: !17372)
!17372 = distinct !DILexicalBlock(scope: !17358, file: !2486, line: 1165, column: 6)
!17373 = !DILocation(line: 1165, column: 6, scope: !17358)
!17374 = !DILocation(line: 1167, column: 17, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17372, file: !2486, line: 1167, column: 13)
!17376 = !DILocation(line: 1167, column: 13, scope: !17372)
!17377 = !DILocation(line: 1170, column: 25, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17375, file: !2486, line: 1169, column: 9)
!17379 = !DILocation(line: 1170, column: 52, scope: !17378)
!17380 = !DILocation(line: 1170, column: 35, scope: !17378)
!17381 = !DILocation(line: 1170, column: 3, scope: !17378)
!17382 = !DILocation(line: 0, scope: !17372)
!17383 = !DILocation(line: 1173, column: 1, scope: !17358)
!17384 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2486, file: !2486, line: 1175, type: !17385, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17400)
!17385 = !DISubroutineType(types: !17386)
!17386 = !{null, !17387, !2379}
!17387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17388, size: 32)
!17388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17389, line: 37, size: 128, elements: !17390)
!17389 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17390 = !{!17391, !17399}
!17391 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17388, file: !17389, line: 38, baseType: !17392, size: 96)
!17392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !17393)
!17393 = !{!17394, !17395, !17398}
!17394 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17392, file: !153, line: 84, baseType: !2408, size: 32)
!17395 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17392, file: !153, line: 85, baseType: !17396, size: 32, offset: 32)
!17396 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !17397)
!17397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17359, size: 32)
!17398 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17392, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!17399 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17388, file: !17389, line: 39, baseType: !105, size: 32, offset: 96)
!17400 = !{!17401, !17402, !17403, !17404, !17413}
!17401 = !DILocalVariable(name: "pq", arg: 1, scope: !17384, file: !2486, line: 1175, type: !17387)
!17402 = !DILocalVariable(name: "thread", arg: 2, scope: !17384, file: !2486, line: 1175, type: !2379)
!17403 = !DILocalVariable(name: "t", scope: !17384, file: !2486, line: 1177, type: !2379)
!17404 = !DILocalVariable(name: "__f", scope: !17405, file: !2486, line: 1190, type: !17408)
!17405 = distinct !DILexicalBlock(scope: !17406, file: !2486, line: 1190, column: 3)
!17406 = distinct !DILexicalBlock(scope: !17407, file: !2486, line: 1189, column: 27)
!17407 = distinct !DILexicalBlock(scope: !17384, file: !2486, line: 1189, column: 6)
!17408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !17409)
!17409 = !{!17410, !17411, !17412}
!17410 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17408, file: !153, line: 156, baseType: !2481, size: 32)
!17411 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17408, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!17412 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17408, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!17413 = !DILocalVariable(name: "n", scope: !17414, file: !2486, line: 1190, type: !2408)
!17414 = distinct !DILexicalBlock(scope: !17415, file: !2486, line: 1190, column: 3)
!17415 = distinct !DILexicalBlock(scope: !17405, file: !2486, line: 1190, column: 3)
!17416 = !DILocation(line: 0, scope: !17384)
!17417 = !DILocation(line: 1179, column: 2, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17419, file: !2486, line: 1179, column: 2)
!17419 = distinct !DILexicalBlock(scope: !17384, file: !2486, line: 1179, column: 2)
!17420 = !DILocation(line: 1179, column: 2, scope: !17419)
!17421 = !DILocation(line: 1179, column: 2, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17418, file: !2486, line: 1179, column: 2)
!17423 = !DILocation(line: 1181, column: 31, scope: !17384)
!17424 = !DILocation(line: 1181, column: 45, scope: !17384)
!17425 = !DILocation(line: 1181, column: 15, scope: !17384)
!17426 = !DILocation(line: 1181, column: 25, scope: !17384)
!17427 = !DILocation(line: 1189, column: 11, scope: !17407)
!17428 = !DILocation(line: 1189, column: 7, scope: !17407)
!17429 = !DILocation(line: 1189, column: 6, scope: !17384)
!17430 = !DILocation(line: 1190, column: 3, scope: !17405)
!17431 = !DILocation(line: 1190, column: 3, scope: !17414)
!17432 = !DILocation(line: 0, scope: !17414)
!17433 = !DILocation(line: 1190, column: 3, scope: !17415)
!17434 = !DILocation(line: 1193, column: 2, scope: !17406)
!17435 = !DILocation(line: 1191, column: 42, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17415, file: !2486, line: 1190, column: 54)
!17437 = !DILocation(line: 1191, column: 12, scope: !17436)
!17438 = !DILocation(line: 1191, column: 22, scope: !17436)
!17439 = distinct !{!17439, !17430, !17440}
!17440 = !DILocation(line: 1192, column: 3, scope: !17405)
!17441 = !DILocation(line: 1195, column: 17, scope: !17384)
!17442 = !DILocation(line: 1195, column: 37, scope: !17384)
!17443 = !DILocation(line: 1195, column: 2, scope: !17384)
!17444 = !DILocation(line: 1196, column: 1, scope: !17384)
!17445 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !17446, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17446 = !DISubroutineType(types: !17447)
!17447 = !{!2408, !17448, !17449}
!17448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17392, size: 32)
!17449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17408, size: 32)
!17450 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !17451, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17451 = !DISubroutineType(types: !17452)
!17452 = !{null, !17448, !2408}
!17453 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2486, file: !2486, line: 1198, type: !17385, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17454)
!17454 = !{!17455, !17456}
!17455 = !DILocalVariable(name: "pq", arg: 1, scope: !17453, file: !2486, line: 1198, type: !17387)
!17456 = !DILocalVariable(name: "thread", arg: 2, scope: !17453, file: !2486, line: 1198, type: !2379)
!17457 = !DILocation(line: 0, scope: !17453)
!17458 = !DILocation(line: 1200, column: 2, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17460, file: !2486, line: 1200, column: 2)
!17460 = distinct !DILexicalBlock(scope: !17453, file: !2486, line: 1200, column: 2)
!17461 = !DILocation(line: 1200, column: 2, scope: !17460)
!17462 = !DILocation(line: 1200, column: 2, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17459, file: !2486, line: 1200, column: 2)
!17464 = !DILocation(line: 1202, column: 17, scope: !17453)
!17465 = !DILocation(line: 1202, column: 37, scope: !17453)
!17466 = !DILocation(line: 1202, column: 2, scope: !17453)
!17467 = !DILocation(line: 1204, column: 16, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17453, file: !2486, line: 1204, column: 6)
!17469 = !DILocation(line: 1204, column: 7, scope: !17468)
!17470 = !DILocation(line: 1204, column: 6, scope: !17453)
!17471 = !DILocation(line: 1205, column: 7, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17468, file: !2486, line: 1204, column: 22)
!17473 = !DILocation(line: 1205, column: 22, scope: !17472)
!17474 = !DILocation(line: 1206, column: 2, scope: !17472)
!17475 = !DILocation(line: 1207, column: 1, scope: !17453)
!17476 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !17451, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17477 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2486, file: !2486, line: 1209, type: !17478, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17480)
!17478 = !DISubroutineType(types: !17479)
!17479 = !{!2379, !17387}
!17480 = !{!17481, !17482, !17483}
!17481 = !DILocalVariable(name: "pq", arg: 1, scope: !17477, file: !2486, line: 1209, type: !17387)
!17482 = !DILocalVariable(name: "thread", scope: !17477, file: !2486, line: 1211, type: !2379)
!17483 = !DILocalVariable(name: "n", scope: !17477, file: !2486, line: 1212, type: !2408)
!17484 = !DILocation(line: 0, scope: !17477)
!17485 = !DILocation(line: 1212, column: 37, scope: !17477)
!17486 = !DILocation(line: 1212, column: 21, scope: !17477)
!17487 = !DILocation(line: 1217, column: 2, scope: !17477)
!17488 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !17489, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17491)
!17489 = !DISubroutineType(types: !17490)
!17490 = !{!2408, !17448}
!17491 = !{!17492}
!17492 = !DILocalVariable(name: "tree", arg: 1, scope: !17488, file: !153, line: 115, type: !17448)
!17493 = !DILocation(line: 0, scope: !17488)
!17494 = !DILocation(line: 117, column: 9, scope: !17488)
!17495 = !DILocation(line: 117, column: 2, scope: !17488)
!17496 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !17497, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17497 = !DISubroutineType(types: !17498)
!17498 = !{!2408, !17448, !169}
!17499 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2486, file: !2486, line: 1246, type: !17500, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17510)
!17500 = !DISubroutineType(types: !17501)
!17501 = !{!2379, !17502}
!17502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17503, size: 32)
!17503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17389, line: 53, size: 2080, elements: !17504)
!17504 = !{!17505, !17509}
!17505 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17503, file: !17389, line: 54, baseType: !17506, size: 2048)
!17506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2415, size: 2048, elements: !17507)
!17507 = !{!17508}
!17508 = !DISubrange(count: 32)
!17509 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17503, file: !17389, line: 55, baseType: !32, size: 32, offset: 2048)
!17510 = !{!17511, !17512, !17513, !17514}
!17511 = !DILocalVariable(name: "pq", arg: 1, scope: !17499, file: !2486, line: 1246, type: !17502)
!17512 = !DILocalVariable(name: "thread", scope: !17499, file: !2486, line: 1252, type: !2379)
!17513 = !DILocalVariable(name: "l", scope: !17499, file: !2486, line: 1253, type: !16026)
!17514 = !DILocalVariable(name: "n", scope: !17499, file: !2486, line: 1254, type: !2482)
!17515 = !DILocation(line: 0, scope: !17499)
!17516 = !DILocation(line: 1248, column: 11, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17499, file: !2486, line: 1248, column: 6)
!17518 = !DILocation(line: 1248, column: 7, scope: !17517)
!17519 = !DILocation(line: 1248, column: 6, scope: !17499)
!17520 = !DILocation(line: 1253, column: 31, scope: !17499)
!17521 = !DILocation(line: 1253, column: 20, scope: !17499)
!17522 = !DILocation(line: 1254, column: 19, scope: !17499)
!17523 = !DILocation(line: 1260, column: 1, scope: !17499)
!17524 = distinct !DISubprogram(name: "z_unpend_all", scope: !2486, file: !2486, line: 1262, type: !17525, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17527)
!17525 = !DISubroutineType(types: !17526)
!17526 = !{!105, !2410}
!17527 = !{!17528, !17529, !17530}
!17528 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17524, file: !2486, line: 1262, type: !2410)
!17529 = !DILocalVariable(name: "need_sched", scope: !17524, file: !2486, line: 1264, type: !105)
!17530 = !DILocalVariable(name: "thread", scope: !17524, file: !2486, line: 1265, type: !2379)
!17531 = !DILocation(line: 0, scope: !17524)
!17532 = !DILocation(line: 1267, column: 19, scope: !17524)
!17533 = !DILocation(line: 1267, column: 41, scope: !17524)
!17534 = !DILocation(line: 1267, column: 2, scope: !17524)
!17535 = !DILocation(line: 1268, column: 3, scope: !17536)
!17536 = distinct !DILexicalBlock(scope: !17524, file: !2486, line: 1267, column: 50)
!17537 = !DILocation(line: 1269, column: 3, scope: !17536)
!17538 = distinct !{!17538, !17534, !17539}
!17539 = !DILocation(line: 1271, column: 2, scope: !17524)
!17540 = !DILocation(line: 1273, column: 2, scope: !17524)
!17541 = distinct !DISubprogram(name: "z_waitq_head", scope: !14516, file: !14516, line: 52, type: !17070, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17542)
!17542 = !{!17543}
!17543 = !DILocalVariable(name: "w", arg: 1, scope: !17541, file: !14516, line: 52, type: !2410)
!17544 = !DILocation(line: 0, scope: !17541)
!17545 = !DILocation(line: 54, column: 52, scope: !17541)
!17546 = !DILocation(line: 54, column: 28, scope: !17541)
!17547 = !DILocation(line: 54, column: 9, scope: !17541)
!17548 = !DILocation(line: 54, column: 2, scope: !17541)
!17549 = distinct !DISubprogram(name: "init_ready_q", scope: !2486, file: !2486, line: 1276, type: !17550, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17557)
!17550 = !DISubroutineType(types: !17551)
!17551 = !{null, !17552}
!17552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17553, size: 32)
!17553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !17554)
!17554 = !{!17555, !17556}
!17555 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17553, file: !163, line: 86, baseType: !2379, size: 32)
!17556 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17553, file: !163, line: 90, baseType: !2415, size: 64, offset: 32)
!17557 = !{!17558}
!17558 = !DILocalVariable(name: "rq", arg: 1, scope: !17549, file: !2486, line: 1276, type: !17552)
!17559 = !DILocation(line: 0, scope: !17549)
!17560 = !DILocation(line: 1289, column: 22, scope: !17549)
!17561 = !DILocation(line: 1289, column: 2, scope: !17549)
!17562 = !DILocation(line: 1291, column: 1, scope: !17549)
!17563 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !17564, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17566)
!17564 = !DISubroutineType(types: !17565)
!17565 = !{null, !16026}
!17566 = !{!17567}
!17567 = !DILocalVariable(name: "list", arg: 1, scope: !17563, file: !137, line: 197, type: !16026)
!17568 = !DILocation(line: 0, scope: !17563)
!17569 = !DILocation(line: 199, column: 8, scope: !17563)
!17570 = !DILocation(line: 199, column: 13, scope: !17563)
!17571 = !DILocation(line: 200, column: 8, scope: !17563)
!17572 = !DILocation(line: 200, column: 13, scope: !17563)
!17573 = !DILocation(line: 201, column: 1, scope: !17563)
!17574 = distinct !DISubprogram(name: "z_sched_init", scope: !2486, file: !2486, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17575 = !DILocation(line: 1302, column: 2, scope: !17574)
!17576 = !DILocation(line: 1306, column: 2, scope: !17574)
!17577 = !DILocation(line: 1309, column: 1, scope: !17574)
!17578 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2486, file: !2486, line: 1311, type: !17579, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17582)
!17579 = !DISubroutineType(types: !17580)
!17580 = !{!105, !17581}
!17581 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2379)
!17582 = !{!17583}
!17583 = !DILocalVariable(name: "thread", arg: 1, scope: !17578, file: !2486, line: 1311, type: !17581)
!17584 = !DILocation(line: 0, scope: !17578)
!17585 = !DILocation(line: 1313, column: 22, scope: !17578)
!17586 = !DILocation(line: 1313, column: 9, scope: !17578)
!17587 = !DILocation(line: 1313, column: 2, scope: !17578)
!17588 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2486, file: !2486, line: 1325, type: !17589, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17591)
!17589 = !DISubroutineType(types: !17590)
!17590 = !{null, !17581, !105}
!17591 = !{!17592, !17593, !17594}
!17592 = !DILocalVariable(name: "thread", arg: 1, scope: !17588, file: !2486, line: 1325, type: !17581)
!17593 = !DILocalVariable(name: "prio", arg: 2, scope: !17588, file: !2486, line: 1325, type: !105)
!17594 = !DILocalVariable(name: "th", scope: !17588, file: !2486, line: 1334, type: !2379)
!17595 = !DILocation(line: 0, scope: !17588)
!17596 = !DILocation(line: 1331, column: 2, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17598, file: !2486, line: 1331, column: 2)
!17598 = distinct !DILexicalBlock(scope: !17599, file: !2486, line: 1331, column: 2)
!17599 = distinct !DILexicalBlock(scope: !17588, file: !2486, line: 1331, column: 2)
!17600 = !DILocation(line: 1331, column: 2, scope: !17601)
!17601 = distinct !DILexicalBlock(scope: !17597, file: !2486, line: 1331, column: 2)
!17602 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17603)
!17603 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17604)
!17604 = distinct !DILocation(line: 1332, column: 2, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17606, file: !2486, line: 1332, column: 2)
!17606 = distinct !DILexicalBlock(scope: !17588, file: !2486, line: 1332, column: 2)
!17607 = !DILocation(line: 0, scope: !16570, inlinedAt: !17603)
!17608 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17604)
!17609 = !DILocation(line: 1332, column: 2, scope: !17606)
!17610 = !DILocation(line: 1332, column: 2, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17605, file: !2486, line: 1332, column: 2)
!17612 = !DILocation(line: 1336, column: 2, scope: !17588)
!17613 = !DILocation(line: 1337, column: 1, scope: !17588)
!17614 = distinct !DISubprogram(name: "k_can_yield", scope: !2486, file: !2486, line: 1384, type: !8834, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17615 = !DILocation(line: 1386, column: 11, scope: !17614)
!17616 = !DILocation(line: 1386, column: 29, scope: !17614)
!17617 = !DILocation(line: 1386, column: 32, scope: !17614)
!17618 = !DILocation(line: 1386, column: 46, scope: !17614)
!17619 = !DILocation(line: 1387, column: 28, scope: !17614)
!17620 = !DILocation(line: 1387, column: 4, scope: !17614)
!17621 = !DILocation(line: 1386, column: 2, scope: !17614)
!17622 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8834, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17623 = !DILocation(line: 993, column: 10, scope: !17622)
!17624 = !DILocation(line: 993, column: 2, scope: !17622)
!17625 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2486, file: !2486, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17626)
!17626 = !{!17627}
!17627 = !DILocalVariable(name: "key", scope: !17625, file: !2486, line: 1396, type: !15792)
!17628 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17629)
!17629 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17630)
!17630 = distinct !DILocation(line: 1392, column: 2, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17632, file: !2486, line: 1392, column: 2)
!17632 = distinct !DILexicalBlock(scope: !17625, file: !2486, line: 1392, column: 2)
!17633 = !DILocation(line: 0, scope: !16570, inlinedAt: !17629)
!17634 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17630)
!17635 = !DILocation(line: 1392, column: 2, scope: !17632)
!17636 = !DILocation(line: 1392, column: 2, scope: !17637)
!17637 = distinct !DILexicalBlock(scope: !17631, file: !2486, line: 1392, column: 2)
!17638 = !DILocation(line: 0, scope: !15800, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 1396, column: 25, scope: !17625)
!17640 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17641)
!17641 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17639)
!17642 = !DILocation(line: 0, scope: !15809, inlinedAt: !17641)
!17643 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17639)
!17644 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17639)
!17645 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17639)
!17646 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17639)
!17647 = !DILocation(line: 0, scope: !17625)
!17648 = !DILocation(line: 1400, column: 18, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !2486, line: 1399, column: 36)
!17650 = distinct !DILexicalBlock(scope: !17625, file: !2486, line: 1398, column: 6)
!17651 = !DILocation(line: 0, scope: !15992, inlinedAt: !17652)
!17652 = distinct !DILocation(line: 1400, column: 3, scope: !17649)
!17653 = !DILocation(line: 266, column: 15, scope: !15992, inlinedAt: !17652)
!17654 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !17652)
!17655 = !DILocation(line: 0, scope: !16000, inlinedAt: !17656)
!17656 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !17652)
!17657 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !17656)
!17658 = !DILocation(line: 1402, column: 15, scope: !17625)
!17659 = !DILocation(line: 0, scope: !16009, inlinedAt: !17660)
!17660 = distinct !DILocation(line: 1402, column: 2, scope: !17625)
!17661 = !DILocation(line: 252, column: 15, scope: !16009, inlinedAt: !17660)
!17662 = !DILocation(line: 252, column: 28, scope: !16009, inlinedAt: !17660)
!17663 = !DILocation(line: 0, scope: !16016, inlinedAt: !17664)
!17664 = distinct !DILocation(line: 254, column: 3, scope: !16020, inlinedAt: !17660)
!17665 = !DILocation(line: 0, scope: !16023, inlinedAt: !17666)
!17666 = distinct !DILocation(line: 229, column: 2, scope: !16016, inlinedAt: !17664)
!17667 = !DILocation(line: 186, column: 2, scope: !16033, inlinedAt: !17666)
!17668 = !DILocation(line: 186, column: 2, scope: !16034, inlinedAt: !17666)
!17669 = !DILocation(line: 186, column: 2, scope: !16037, inlinedAt: !17666)
!17670 = !DILocation(line: 188, column: 2, scope: !16039, inlinedAt: !17666)
!17671 = !DILocation(line: 188, column: 2, scope: !16041, inlinedAt: !17666)
!17672 = !DILocation(line: 0, scope: !16039, inlinedAt: !17666)
!17673 = !DILocation(line: 189, column: 7, scope: !16044, inlinedAt: !17666)
!17674 = !DILocation(line: 189, column: 35, scope: !16044, inlinedAt: !17666)
!17675 = !DILocation(line: 189, column: 7, scope: !16045, inlinedAt: !17666)
!17676 = !DILocation(line: 191, column: 21, scope: !16049, inlinedAt: !17666)
!17677 = !DILocation(line: 190, column: 4, scope: !16049, inlinedAt: !17666)
!17678 = !DILocation(line: 192, column: 4, scope: !16049, inlinedAt: !17666)
!17679 = distinct !{!17679, !17670, !17680}
!17680 = !DILocation(line: 194, column: 2, scope: !16039, inlinedAt: !17666)
!17681 = !DILocation(line: 196, column: 37, scope: !16023, inlinedAt: !17666)
!17682 = !DILocation(line: 196, column: 2, scope: !16023, inlinedAt: !17666)
!17683 = !DILocation(line: 197, column: 1, scope: !16023, inlinedAt: !17666)
!17684 = !DILocation(line: 1403, column: 2, scope: !17625)
!17685 = !DILocation(line: 0, scope: !16521, inlinedAt: !17686)
!17686 = distinct !DILocation(line: 1404, column: 2, scope: !17625)
!17687 = !DILocation(line: 0, scope: !16530, inlinedAt: !17688)
!17688 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !17686)
!17689 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !17688)
!17690 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !17688)
!17691 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !17688)
!17692 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !17686)
!17693 = !DILocation(line: 1405, column: 1, scope: !17625)
!17694 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2486, file: !2486, line: 1459, type: !17695, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17697)
!17695 = !DISubroutineType(types: !17696)
!17696 = !{!116, !16731}
!17697 = !{!17698, !17699, !17700}
!17698 = !DILocalVariable(name: "timeout", arg: 1, scope: !17694, file: !2486, line: 1459, type: !16731)
!17699 = !DILocalVariable(name: "ticks", scope: !17694, file: !2486, line: 1461, type: !107)
!17700 = !DILocalVariable(name: "ret", scope: !17694, file: !2486, line: 1480, type: !116)
!17701 = !DILocation(line: 0, scope: !17694)
!17702 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17703)
!17703 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17704)
!17704 = distinct !DILocation(line: 1463, column: 2, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17706, file: !2486, line: 1463, column: 2)
!17706 = distinct !DILexicalBlock(scope: !17694, file: !2486, line: 1463, column: 2)
!17707 = !DILocation(line: 0, scope: !16570, inlinedAt: !17703)
!17708 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17704)
!17709 = !DILocation(line: 1463, column: 2, scope: !17706)
!17710 = !DILocation(line: 1463, column: 2, scope: !17711)
!17711 = distinct !DILexicalBlock(scope: !17705, file: !2486, line: 1463, column: 2)
!17712 = !DILocation(line: 1468, column: 6, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17694, file: !2486, line: 1468, column: 6)
!17714 = !DILocation(line: 1468, column: 6, scope: !17694)
!17715 = !DILocation(line: 1469, column: 20, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17713, file: !2486, line: 1468, column: 40)
!17717 = !DILocation(line: 1469, column: 3, scope: !17716)
!17718 = !DILocation(line: 1473, column: 3, scope: !17716)
!17719 = !DILocation(line: 1478, column: 10, scope: !17694)
!17720 = !DILocation(line: 1480, column: 16, scope: !17694)
!17721 = !DILocation(line: 1485, column: 1, scope: !17694)
!17722 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3431, file: !3431, line: 310, type: !17723, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17725)
!17723 = !DISubroutineType(types: !17724)
!17724 = !{null, !17581}
!17725 = !{!17726}
!17726 = !DILocalVariable(name: "thread", arg: 1, scope: !17722, file: !3431, line: 310, type: !17581)
!17727 = !DILocation(line: 0, scope: !17722)
!17728 = !DILocation(line: 319, column: 2, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17722, file: !3431, line: 319, column: 2)
!17730 = !{i64 2154792733}
!17731 = !DILocation(line: 320, column: 2, scope: !17722)
!17732 = !DILocation(line: 321, column: 1, scope: !17722)
!17733 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2486, file: !2486, line: 1415, type: !17734, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17736)
!17734 = !DISubroutineType(types: !17735)
!17735 = !{!116, !107}
!17736 = !{!17737, !17738, !17739, !17740}
!17737 = !DILocalVariable(name: "ticks", arg: 1, scope: !17733, file: !2486, line: 1415, type: !107)
!17738 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17733, file: !2486, line: 1418, type: !113)
!17739 = !DILocalVariable(name: "timeout", scope: !17733, file: !2486, line: 1430, type: !16731)
!17740 = !DILocalVariable(name: "key", scope: !17733, file: !2486, line: 1437, type: !15792)
!17741 = !DILocation(line: 0, scope: !17733)
!17742 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17743)
!17743 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17744)
!17744 = distinct !DILocation(line: 1420, column: 2, scope: !17745)
!17745 = distinct !DILexicalBlock(scope: !17746, file: !2486, line: 1420, column: 2)
!17746 = distinct !DILexicalBlock(scope: !17733, file: !2486, line: 1420, column: 2)
!17747 = !DILocation(line: 0, scope: !16570, inlinedAt: !17743)
!17748 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17744)
!17749 = !DILocation(line: 1420, column: 2, scope: !17746)
!17750 = !DILocation(line: 1420, column: 2, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17745, file: !2486, line: 1420, column: 2)
!17752 = !DILocation(line: 1425, column: 12, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17733, file: !2486, line: 1425, column: 6)
!17754 = !DILocation(line: 1425, column: 6, scope: !17733)
!17755 = !DILocation(line: 1426, column: 3, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17753, file: !2486, line: 1425, column: 18)
!17757 = !DILocation(line: 1427, column: 3, scope: !17756)
!17758 = !DILocation(line: 1431, column: 24, scope: !17759)
!17759 = distinct !DILexicalBlock(scope: !17733, file: !2486, line: 1431, column: 6)
!17760 = !DILocation(line: 1431, column: 6, scope: !17733)
!17761 = !DILocation(line: 1432, column: 35, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17759, file: !2486, line: 1431, column: 30)
!17763 = !DILocation(line: 1432, column: 27, scope: !17762)
!17764 = !DILocation(line: 1433, column: 2, scope: !17762)
!17765 = !DILocation(line: 1434, column: 27, scope: !17766)
!17766 = distinct !DILexicalBlock(scope: !17759, file: !2486, line: 1433, column: 9)
!17767 = !DILocation(line: 0, scope: !17759)
!17768 = !DILocation(line: 0, scope: !15800, inlinedAt: !17769)
!17769 = distinct !DILocation(line: 1437, column: 25, scope: !17733)
!17770 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17771)
!17771 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17769)
!17772 = !DILocation(line: 0, scope: !15809, inlinedAt: !17771)
!17773 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17769)
!17774 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17769)
!17775 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17769)
!17776 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17769)
!17777 = !DILocation(line: 1440, column: 20, scope: !17733)
!17778 = !DILocation(line: 1440, column: 18, scope: !17733)
!17779 = !DILocation(line: 1442, column: 2, scope: !17733)
!17780 = !DILocation(line: 1443, column: 23, scope: !17733)
!17781 = !DILocation(line: 1443, column: 2, scope: !17733)
!17782 = !DILocation(line: 1444, column: 29, scope: !17733)
!17783 = !DILocation(line: 1444, column: 2, scope: !17733)
!17784 = !DILocation(line: 0, scope: !16521, inlinedAt: !17785)
!17785 = distinct !DILocation(line: 1446, column: 8, scope: !17733)
!17786 = !DILocation(line: 0, scope: !16530, inlinedAt: !17787)
!17787 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !17785)
!17788 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !17787)
!17789 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !17787)
!17790 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !17787)
!17791 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !17785)
!17792 = !DILocation(line: 1448, column: 2, scope: !17793)
!17793 = distinct !DILexicalBlock(scope: !17794, file: !2486, line: 1448, column: 2)
!17794 = distinct !DILexicalBlock(scope: !17733, file: !2486, line: 1448, column: 2)
!17795 = !DILocation(line: 1448, column: 2, scope: !17794)
!17796 = !DILocation(line: 1448, column: 2, scope: !17797)
!17797 = distinct !DILexicalBlock(scope: !17793, file: !2486, line: 1448, column: 2)
!17798 = !DILocation(line: 1450, column: 10, scope: !17733)
!17799 = !DILocation(line: 1450, column: 45, scope: !17733)
!17800 = !DILocation(line: 1450, column: 43, scope: !17733)
!17801 = !DILocation(line: 1451, column: 6, scope: !17733)
!17802 = !DILocation(line: 1457, column: 1, scope: !17733)
!17803 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14772, file: !14772, line: 1103, type: !14773, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17804)
!17804 = !{!17805}
!17805 = !DILocalVariable(name: "t", arg: 1, scope: !17803, file: !14772, line: 1103, type: !114)
!17806 = !DILocation(line: 0, scope: !17803)
!17807 = !DILocation(line: 0, scope: !15860, inlinedAt: !17808)
!17808 = distinct !DILocation(line: 1106, column: 9, scope: !17803)
!17809 = !DILocation(line: 139, column: 13, scope: !17810, inlinedAt: !17808)
!17810 = distinct !DILexicalBlock(scope: !17811, file: !14772, line: 138, column: 10)
!17811 = distinct !DILexicalBlock(scope: !17812, file: !14772, line: 136, column: 7)
!17812 = distinct !DILexicalBlock(scope: !15881, file: !14772, line: 134, column: 17)
!17813 = !DILocation(line: 1106, column: 2, scope: !17803)
!17814 = distinct !DISubprogram(name: "k_yield", scope: !3431, file: !3431, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17815 = !DILocation(line: 148, column: 2, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17814, file: !3431, line: 148, column: 2)
!17817 = !{i64 2154792053}
!17818 = !DILocation(line: 149, column: 2, scope: !17814)
!17819 = !DILocation(line: 150, column: 1, scope: !17814)
!17820 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2486, file: !2486, line: 1495, type: !17821, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17823)
!17821 = !DISubroutineType(types: !17822)
!17822 = !{!116, !105}
!17823 = !{!17824, !17825}
!17824 = !DILocalVariable(name: "us", arg: 1, scope: !17820, file: !2486, line: 1495, type: !105)
!17825 = !DILocalVariable(name: "ticks", scope: !17820, file: !2486, line: 1497, type: !116)
!17826 = !DILocation(line: 0, scope: !17820)
!17827 = !DILocation(line: 1501, column: 31, scope: !17820)
!17828 = !DILocation(line: 1501, column: 10, scope: !17820)
!17829 = !DILocation(line: 1502, column: 23, scope: !17820)
!17830 = !DILocation(line: 1502, column: 10, scope: !17820)
!17831 = !DILocation(line: 1506, column: 31, scope: !17820)
!17832 = !DILocation(line: 1506, column: 9, scope: !17820)
!17833 = !DILocation(line: 1506, column: 2, scope: !17820)
!17834 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14772, file: !14772, line: 571, type: !14773, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17835)
!17835 = !{!17836}
!17836 = !DILocalVariable(name: "t", arg: 1, scope: !17834, file: !14772, line: 571, type: !114)
!17837 = !DILocation(line: 0, scope: !17834)
!17838 = !DILocation(line: 0, scope: !15860, inlinedAt: !17839)
!17839 = distinct !DILocation(line: 574, column: 9, scope: !17834)
!17840 = !DILocation(line: 135, column: 5, scope: !17812, inlinedAt: !17839)
!17841 = !DILocation(line: 139, column: 13, scope: !17810, inlinedAt: !17839)
!17842 = !DILocation(line: 574, column: 2, scope: !17834)
!17843 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14772, file: !14772, line: 1187, type: !14773, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17844)
!17844 = !{!17845}
!17845 = !DILocalVariable(name: "t", arg: 1, scope: !17843, file: !14772, line: 1187, type: !114)
!17846 = !DILocation(line: 0, scope: !17843)
!17847 = !DILocation(line: 0, scope: !15860, inlinedAt: !17848)
!17848 = distinct !DILocation(line: 1190, column: 9, scope: !17843)
!17849 = !DILocation(line: 145, column: 13, scope: !17850, inlinedAt: !17848)
!17850 = distinct !DILexicalBlock(scope: !15878, file: !14772, line: 144, column: 10)
!17851 = !DILocation(line: 1190, column: 2, scope: !17843)
!17852 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2486, file: !2486, line: 1517, type: !17723, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17853)
!17853 = !{!17854}
!17854 = !DILocalVariable(name: "thread", arg: 1, scope: !17852, file: !2486, line: 1517, type: !17581)
!17855 = !DILocation(line: 0, scope: !17852)
!17856 = !DILocation(line: 1521, column: 6, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17852, file: !2486, line: 1521, column: 6)
!17858 = !DILocation(line: 1521, column: 6, scope: !17852)
!17859 = !DILocation(line: 1525, column: 6, scope: !17860)
!17860 = distinct !DILexicalBlock(scope: !17852, file: !2486, line: 1525, column: 6)
!17861 = !DILocation(line: 1525, column: 37, scope: !17860)
!17862 = !DILocation(line: 1525, column: 6, scope: !17852)
!17863 = !DILocation(line: 1527, column: 20, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !17865, file: !2486, line: 1527, column: 7)
!17865 = distinct !DILexicalBlock(scope: !17860, file: !2486, line: 1525, column: 42)
!17866 = !DILocation(line: 1527, column: 33, scope: !17864)
!17867 = !DILocation(line: 1527, column: 7, scope: !17865)
!17868 = !DILocation(line: 1532, column: 2, scope: !17852)
!17869 = !DILocation(line: 1533, column: 2, scope: !17852)
!17870 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17871)
!17871 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17872)
!17872 = distinct !DILocation(line: 1537, column: 7, scope: !17873)
!17873 = distinct !DILexicalBlock(scope: !17852, file: !2486, line: 1537, column: 6)
!17874 = !DILocation(line: 0, scope: !16570, inlinedAt: !17871)
!17875 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17872)
!17876 = !DILocation(line: 1537, column: 6, scope: !17852)
!17877 = !DILocation(line: 1538, column: 3, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17873, file: !2486, line: 1537, column: 25)
!17879 = !DILocation(line: 1539, column: 2, scope: !17878)
!17880 = !DILocation(line: 1540, column: 1, scope: !17852)
!17881 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14155, file: !14155, line: 101, type: !15941, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17882)
!17882 = !{!17883}
!17883 = !DILocalVariable(name: "thread", arg: 1, scope: !17881, file: !14155, line: 101, type: !2379)
!17884 = !DILocation(line: 0, scope: !17881)
!17885 = !DILocation(line: 103, column: 23, scope: !17881)
!17886 = !DILocation(line: 103, column: 36, scope: !17881)
!17887 = !DILocation(line: 103, column: 55, scope: !17881)
!17888 = !DILocation(line: 103, column: 2, scope: !17881)
!17889 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2486, file: !2486, line: 1567, type: !17890, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17892)
!17890 = !DISubroutineType(types: !17891)
!17891 = !{!17581}
!17892 = !{!17893}
!17893 = !DILocalVariable(name: "ret", scope: !17889, file: !2486, line: 1577, type: !17581)
!17894 = !DILocation(line: 1577, column: 30, scope: !17889)
!17895 = !DILocation(line: 0, scope: !17889)
!17896 = !DILocation(line: 1582, column: 2, scope: !17889)
!17897 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2486, file: !2486, line: 1593, type: !9136, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !397)
!17898 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17899)
!17899 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17900)
!17900 = distinct !DILocation(line: 1595, column: 10, scope: !17897)
!17901 = !DILocation(line: 0, scope: !16570, inlinedAt: !17899)
!17902 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17900)
!17903 = !DILocation(line: 1595, column: 27, scope: !17897)
!17904 = !DILocation(line: 1595, column: 41, scope: !17897)
!17905 = !DILocation(line: 1595, column: 30, scope: !17897)
!17906 = !DILocation(line: 1595, column: 2, scope: !17897)
!17907 = distinct !DISubprogram(name: "z_thread_abort", scope: !2486, file: !2486, line: 1725, type: !15758, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17908)
!17908 = !{!17909, !17910}
!17909 = !DILocalVariable(name: "thread", arg: 1, scope: !17907, file: !2486, line: 1725, type: !2379)
!17910 = !DILocalVariable(name: "key", scope: !17907, file: !2486, line: 1727, type: !15792)
!17911 = !DILocation(line: 0, scope: !17907)
!17912 = !DILocation(line: 0, scope: !15800, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 1727, column: 25, scope: !17907)
!17914 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !17915)
!17915 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !17913)
!17916 = !DILocation(line: 0, scope: !15809, inlinedAt: !17915)
!17917 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !17913)
!17918 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !17913)
!17919 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !17913)
!17920 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !17913)
!17921 = !DILocation(line: 1729, column: 20, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17907, file: !2486, line: 1729, column: 6)
!17923 = !DILocation(line: 1729, column: 33, scope: !17922)
!17924 = !DILocation(line: 1729, column: 48, scope: !17922)
!17925 = !DILocation(line: 1729, column: 6, scope: !17907)
!17926 = !DILocation(line: 0, scope: !15834, inlinedAt: !17927)
!17927 = distinct !DILocation(line: 1730, column: 3, scope: !17928)
!17928 = distinct !DILexicalBlock(scope: !17922, file: !2486, line: 1729, column: 54)
!17929 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17927)
!17930 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17927)
!17931 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17927)
!17932 = !DILocation(line: 0, scope: !15848, inlinedAt: !17933)
!17933 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17927)
!17934 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17933)
!17935 = !DILocation(line: 1731, column: 3, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17937, file: !2486, line: 1731, column: 3)
!17937 = distinct !DILexicalBlock(scope: !17938, file: !2486, line: 1731, column: 3)
!17938 = distinct !DILexicalBlock(scope: !17928, file: !2486, line: 1731, column: 3)
!17939 = !DILocation(line: 1736, column: 20, scope: !17940)
!17940 = distinct !DILexicalBlock(scope: !17907, file: !2486, line: 1736, column: 6)
!17941 = !DILocation(line: 1736, column: 33, scope: !17940)
!17942 = !DILocation(line: 1736, column: 49, scope: !17940)
!17943 = !DILocation(line: 1736, column: 6, scope: !17907)
!17944 = !DILocation(line: 0, scope: !15834, inlinedAt: !17945)
!17945 = distinct !DILocation(line: 1737, column: 3, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17940, file: !2486, line: 1736, column: 56)
!17947 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17945)
!17948 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17945)
!17949 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17945)
!17950 = !DILocation(line: 0, scope: !15848, inlinedAt: !17951)
!17951 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17945)
!17952 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17951)
!17953 = !DILocation(line: 1738, column: 3, scope: !17946)
!17954 = !DILocation(line: 1775, column: 2, scope: !17907)
!17955 = !DILocation(line: 1776, column: 16, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17907, file: !2486, line: 1776, column: 6)
!17957 = !DILocation(line: 1776, column: 13, scope: !17956)
!17958 = !DILocation(line: 1776, column: 25, scope: !17956)
!17959 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !17960)
!17960 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !17961)
!17961 = distinct !DILocation(line: 1776, column: 29, scope: !17956)
!17962 = !DILocation(line: 0, scope: !16570, inlinedAt: !17960)
!17963 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !17961)
!17964 = !DILocation(line: 1776, column: 6, scope: !17907)
!17965 = !DILocation(line: 0, scope: !16521, inlinedAt: !17966)
!17966 = distinct !DILocation(line: 1777, column: 3, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17956, file: !2486, line: 1776, column: 47)
!17968 = !DILocation(line: 0, scope: !16530, inlinedAt: !17969)
!17969 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !17966)
!17970 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !17969)
!17971 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !17969)
!17972 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !17969)
!17973 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !17966)
!17974 = !DILocation(line: 1778, column: 3, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17976, file: !2486, line: 1778, column: 3)
!17976 = distinct !DILexicalBlock(scope: !17977, file: !2486, line: 1778, column: 3)
!17977 = distinct !DILexicalBlock(scope: !17967, file: !2486, line: 1778, column: 3)
!17978 = !DILocation(line: 0, scope: !15834, inlinedAt: !17979)
!17979 = distinct !DILocation(line: 1780, column: 2, scope: !17907)
!17980 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !17979)
!17981 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !17979)
!17982 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !17979)
!17983 = !DILocation(line: 0, scope: !15848, inlinedAt: !17984)
!17984 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !17979)
!17985 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !17984)
!17986 = !DILocation(line: 1781, column: 1, scope: !17907)
!17987 = distinct !DISubprogram(name: "end_thread", scope: !2486, file: !2486, line: 1690, type: !15758, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !17988)
!17988 = !{!17989}
!17989 = !DILocalVariable(name: "thread", arg: 1, scope: !17987, file: !2486, line: 1690, type: !2379)
!17990 = !DILocation(line: 0, scope: !17987)
!17991 = !DILocation(line: 1695, column: 20, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17987, file: !2486, line: 1695, column: 6)
!17993 = !DILocation(line: 1695, column: 33, scope: !17992)
!17994 = !DILocation(line: 1695, column: 49, scope: !17992)
!17995 = !DILocation(line: 1695, column: 6, scope: !17987)
!17996 = !DILocation(line: 1697, column: 29, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17992, file: !2486, line: 1695, column: 56)
!17998 = !DILocation(line: 1698, column: 7, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17997, file: !2486, line: 1698, column: 7)
!18000 = !DILocation(line: 1698, column: 7, scope: !17997)
!18001 = !DILocation(line: 0, scope: !15992, inlinedAt: !18002)
!18002 = distinct !DILocation(line: 1699, column: 4, scope: !18003)
!18003 = distinct !DILexicalBlock(scope: !17999, file: !2486, line: 1698, column: 35)
!18004 = !DILocation(line: 266, column: 28, scope: !15992, inlinedAt: !18002)
!18005 = !DILocation(line: 0, scope: !16000, inlinedAt: !18006)
!18006 = distinct !DILocation(line: 268, column: 3, scope: !16004, inlinedAt: !18002)
!18007 = !DILocation(line: 234, column: 2, scope: !16000, inlinedAt: !18006)
!18008 = !DILocation(line: 1700, column: 3, scope: !18003)
!18009 = !DILocation(line: 1701, column: 20, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !17997, file: !2486, line: 1701, column: 7)
!18011 = !DILocation(line: 1701, column: 30, scope: !18010)
!18012 = !DILocation(line: 1701, column: 7, scope: !17997)
!18013 = !DILocation(line: 1702, column: 4, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18010, file: !2486, line: 1701, column: 39)
!18015 = !DILocation(line: 1703, column: 3, scope: !18014)
!18016 = !DILocation(line: 1704, column: 9, scope: !17997)
!18017 = !DILocation(line: 1705, column: 23, scope: !17997)
!18018 = !DILocation(line: 1705, column: 3, scope: !17997)
!18019 = !DILocation(line: 1706, column: 3, scope: !17997)
!18020 = !DILocation(line: 1722, column: 2, scope: !17997)
!18021 = !DILocation(line: 1723, column: 1, scope: !17987)
!18022 = distinct !DISubprogram(name: "unpend_all", scope: !2486, file: !2486, line: 1674, type: !18023, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18025)
!18023 = !DISubroutineType(types: !18024)
!18024 = !{null, !2410}
!18025 = !{!18026, !18027}
!18026 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18022, file: !2486, line: 1674, type: !2410)
!18027 = !DILocalVariable(name: "thread", scope: !18022, file: !2486, line: 1676, type: !2379)
!18028 = !DILocation(line: 0, scope: !18022)
!18029 = !DILocation(line: 1678, column: 19, scope: !18022)
!18030 = !DILocation(line: 1678, column: 41, scope: !18022)
!18031 = !DILocation(line: 1678, column: 2, scope: !18022)
!18032 = !DILocation(line: 1679, column: 3, scope: !18033)
!18033 = distinct !DILexicalBlock(scope: !18022, file: !2486, line: 1678, column: 50)
!18034 = !DILocation(line: 1680, column: 9, scope: !18033)
!18035 = !DILocalVariable(name: "thread", arg: 1, scope: !18036, file: !14196, line: 65, type: !2379)
!18036 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14196, file: !14196, line: 65, type: !18037, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18039)
!18037 = !DISubroutineType(types: !18038)
!18038 = !{null, !2379, !32}
!18039 = !{!18035, !18040}
!18040 = !DILocalVariable(name: "value", arg: 2, scope: !18036, file: !14196, line: 65, type: !32)
!18041 = !DILocation(line: 0, scope: !18036, inlinedAt: !18042)
!18042 = distinct !DILocation(line: 1681, column: 3, scope: !18033)
!18043 = !DILocation(line: 67, column: 15, scope: !18036, inlinedAt: !18042)
!18044 = !DILocation(line: 67, column: 33, scope: !18036, inlinedAt: !18042)
!18045 = !DILocation(line: 1682, column: 3, scope: !18033)
!18046 = distinct !{!18046, !18031, !18047}
!18047 = !DILocation(line: 1683, column: 2, scope: !18022)
!18048 = !DILocation(line: 1684, column: 1, scope: !18022)
!18049 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2486, file: !2486, line: 1794, type: !18050, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18052)
!18050 = !DISubroutineType(types: !18051)
!18051 = !{!105, !2379, !16731}
!18052 = !{!18053, !18054, !18055, !18056}
!18053 = !DILocalVariable(name: "thread", arg: 1, scope: !18049, file: !2486, line: 1794, type: !2379)
!18054 = !DILocalVariable(name: "timeout", arg: 2, scope: !18049, file: !2486, line: 1794, type: !16731)
!18055 = !DILocalVariable(name: "key", scope: !18049, file: !2486, line: 1796, type: !15792)
!18056 = !DILocalVariable(name: "ret", scope: !18049, file: !2486, line: 1797, type: !105)
!18057 = !DILocation(line: 0, scope: !18049)
!18058 = !DILocation(line: 0, scope: !15800, inlinedAt: !18059)
!18059 = distinct !DILocation(line: 1796, column: 25, scope: !18049)
!18060 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !18061)
!18061 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !18059)
!18062 = !DILocation(line: 0, scope: !15809, inlinedAt: !18061)
!18063 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !18059)
!18064 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !18059)
!18065 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !18059)
!18066 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !18059)
!18067 = !DILocation(line: 1801, column: 20, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18049, file: !2486, line: 1801, column: 6)
!18069 = !DILocation(line: 1801, column: 33, scope: !18068)
!18070 = !DILocation(line: 1801, column: 49, scope: !18068)
!18071 = !DILocation(line: 1801, column: 6, scope: !18049)
!18072 = !DILocation(line: 1803, column: 13, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18068, file: !2486, line: 1803, column: 13)
!18074 = !DILocation(line: 1803, column: 13, scope: !18068)
!18075 = !DILocation(line: 1805, column: 24, scope: !18076)
!18076 = distinct !DILexicalBlock(scope: !18073, file: !2486, line: 1805, column: 13)
!18077 = !DILocation(line: 1805, column: 21, scope: !18076)
!18078 = !DILocation(line: 1805, column: 34, scope: !18076)
!18079 = !DILocation(line: 1806, column: 20, scope: !18076)
!18080 = !DILocation(line: 1806, column: 44, scope: !18076)
!18081 = !DILocation(line: 1806, column: 30, scope: !18076)
!18082 = !DILocation(line: 1805, column: 13, scope: !18073)
!18083 = !DILocation(line: 1031, column: 3, scope: !16570, inlinedAt: !18084)
!18084 = distinct !DILocation(line: 48, column: 10, scope: !16574, inlinedAt: !18085)
!18085 = distinct !DILocation(line: 1809, column: 3, scope: !18086)
!18086 = distinct !DILexicalBlock(scope: !18087, file: !2486, line: 1809, column: 3)
!18087 = distinct !DILexicalBlock(scope: !18088, file: !2486, line: 1809, column: 3)
!18088 = distinct !DILexicalBlock(scope: !18076, file: !2486, line: 1808, column: 9)
!18089 = !DILocation(line: 0, scope: !16570, inlinedAt: !18084)
!18090 = !DILocation(line: 48, column: 9, scope: !16574, inlinedAt: !18085)
!18091 = !DILocation(line: 1809, column: 3, scope: !18087)
!18092 = !DILocation(line: 1809, column: 3, scope: !18093)
!18093 = distinct !DILexicalBlock(scope: !18086, file: !2486, line: 1809, column: 3)
!18094 = !DILocation(line: 1810, column: 23, scope: !18088)
!18095 = !DILocation(line: 1810, column: 42, scope: !18088)
!18096 = !DILocation(line: 1810, column: 3, scope: !18088)
!18097 = !DILocation(line: 1811, column: 22, scope: !18088)
!18098 = !DILocation(line: 1811, column: 3, scope: !18088)
!18099 = !DILocation(line: 0, scope: !16521, inlinedAt: !18100)
!18100 = distinct !DILocation(line: 1814, column: 9, scope: !18088)
!18101 = !DILocation(line: 0, scope: !16530, inlinedAt: !18102)
!18102 = distinct !DILocation(line: 195, column: 2, scope: !16521, inlinedAt: !18100)
!18103 = !DILocation(line: 225, column: 2, scope: !16537, inlinedAt: !18102)
!18104 = !DILocation(line: 225, column: 2, scope: !16538, inlinedAt: !18102)
!18105 = !DILocation(line: 225, column: 2, scope: !16541, inlinedAt: !18102)
!18106 = !DILocation(line: 196, column: 9, scope: !16521, inlinedAt: !18100)
!18107 = !DILocation(line: 1817, column: 3, scope: !18088)
!18108 = !DILocation(line: 0, scope: !18068)
!18109 = !DILocation(line: 0, scope: !15834, inlinedAt: !18110)
!18110 = distinct !DILocation(line: 1822, column: 2, scope: !18049)
!18111 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !18110)
!18112 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !18110)
!18113 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !18110)
!18114 = !DILocation(line: 0, scope: !15848, inlinedAt: !18115)
!18115 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !18110)
!18116 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !18115)
!18117 = !DILocation(line: 1823, column: 2, scope: !18049)
!18118 = !DILocation(line: 1824, column: 1, scope: !18049)
!18119 = distinct !DISubprogram(name: "z_sched_wake", scope: !2486, file: !2486, line: 1882, type: !18120, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18122)
!18120 = !DISubroutineType(types: !18121)
!18121 = !{!492, !2410, !105, !104}
!18122 = !{!18123, !18124, !18125, !18126, !18127, !18128, !18130}
!18123 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18119, file: !2486, line: 1882, type: !2410)
!18124 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18119, file: !2486, line: 1882, type: !105)
!18125 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18119, file: !2486, line: 1882, type: !104)
!18126 = !DILocalVariable(name: "thread", scope: !18119, file: !2486, line: 1884, type: !2379)
!18127 = !DILocalVariable(name: "ret", scope: !18119, file: !2486, line: 1885, type: !492)
!18128 = !DILocalVariable(name: "__i", scope: !18129, file: !2486, line: 1887, type: !15792)
!18129 = distinct !DILexicalBlock(scope: !18119, file: !2486, line: 1887, column: 2)
!18130 = !DILocalVariable(name: "__key", scope: !18129, file: !2486, line: 1887, type: !15792)
!18131 = !DILocation(line: 0, scope: !18119)
!18132 = !DILocation(line: 0, scope: !18129)
!18133 = !DILocation(line: 0, scope: !15800, inlinedAt: !18134)
!18134 = distinct !DILocation(line: 1887, column: 2, scope: !18129)
!18135 = !DILocation(line: 55, column: 2, scope: !15809, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 145, column: 10, scope: !15800, inlinedAt: !18134)
!18137 = !DILocation(line: 0, scope: !15809, inlinedAt: !18136)
!18138 = !DILocation(line: 148, column: 2, scope: !15817, inlinedAt: !18134)
!18139 = !DILocation(line: 148, column: 2, scope: !15818, inlinedAt: !18134)
!18140 = !DILocation(line: 148, column: 2, scope: !15821, inlinedAt: !18134)
!18141 = !DILocation(line: 160, column: 2, scope: !15800, inlinedAt: !18134)
!18142 = !DILocation(line: 1888, column: 12, scope: !18143)
!18143 = distinct !DILexicalBlock(scope: !18144, file: !2486, line: 1887, column: 26)
!18144 = distinct !DILexicalBlock(scope: !18129, file: !2486, line: 1887, column: 2)
!18145 = !DILocation(line: 1890, column: 14, scope: !18146)
!18146 = distinct !DILexicalBlock(scope: !18143, file: !2486, line: 1890, column: 7)
!18147 = !DILocation(line: 1890, column: 7, scope: !18143)
!18148 = !DILocalVariable(name: "thread", arg: 1, scope: !18149, file: !15045, line: 134, type: !2379)
!18149 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15045, file: !15045, line: 134, type: !18150, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18152)
!18150 = !DISubroutineType(types: !18151)
!18151 = !{null, !2379, !32, !104}
!18152 = !{!18148, !18153, !18154}
!18153 = !DILocalVariable(name: "value", arg: 2, scope: !18149, file: !15045, line: 135, type: !32)
!18154 = !DILocalVariable(name: "data", arg: 3, scope: !18149, file: !15045, line: 136, type: !104)
!18155 = !DILocation(line: 0, scope: !18149, inlinedAt: !18156)
!18156 = distinct !DILocation(line: 1891, column: 4, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18146, file: !2486, line: 1890, column: 23)
!18158 = !DILocation(line: 0, scope: !18036, inlinedAt: !18159)
!18159 = distinct !DILocation(line: 138, column: 2, scope: !18149, inlinedAt: !18156)
!18160 = !DILocation(line: 67, column: 15, scope: !18036, inlinedAt: !18159)
!18161 = !DILocation(line: 67, column: 33, scope: !18036, inlinedAt: !18159)
!18162 = !DILocation(line: 139, column: 15, scope: !18149, inlinedAt: !18156)
!18163 = !DILocation(line: 139, column: 25, scope: !18149, inlinedAt: !18156)
!18164 = !DILocation(line: 1894, column: 4, scope: !18157)
!18165 = !DILocation(line: 1895, column: 10, scope: !18157)
!18166 = !DILocation(line: 1896, column: 4, scope: !18157)
!18167 = !DILocation(line: 1898, column: 3, scope: !18157)
!18168 = !DILocation(line: 0, scope: !15834, inlinedAt: !18169)
!18169 = distinct !DILocation(line: 1887, column: 2, scope: !18144)
!18170 = !DILocation(line: 194, column: 2, scope: !15842, inlinedAt: !18169)
!18171 = !DILocation(line: 194, column: 2, scope: !15843, inlinedAt: !18169)
!18172 = !DILocation(line: 194, column: 2, scope: !15846, inlinedAt: !18169)
!18173 = !DILocation(line: 0, scope: !15848, inlinedAt: !18174)
!18174 = distinct !DILocation(line: 215, column: 2, scope: !15834, inlinedAt: !18169)
!18175 = !DILocation(line: 95, column: 2, scope: !15848, inlinedAt: !18174)
!18176 = !DILocation(line: 1901, column: 2, scope: !18119)
!18177 = distinct !DISubprogram(name: "z_sched_wait", scope: !2486, file: !2486, line: 1904, type: !18178, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2376, retainedNodes: !18181)
!18178 = !DISubroutineType(types: !18179)
!18179 = !{!105, !15803, !15792, !2410, !16731, !18180}
!18180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18181 = !{!18182, !18183, !18184, !18185, !18186, !18187}
!18182 = !DILocalVariable(name: "lock", arg: 1, scope: !18177, file: !2486, line: 1904, type: !15803)
!18183 = !DILocalVariable(name: "key", arg: 2, scope: !18177, file: !2486, line: 1904, type: !15792)
!18184 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18177, file: !2486, line: 1905, type: !2410)
!18185 = !DILocalVariable(name: "timeout", arg: 4, scope: !18177, file: !2486, line: 1905, type: !16731)
!18186 = !DILocalVariable(name: "data", arg: 5, scope: !18177, file: !2486, line: 1905, type: !18180)
!18187 = !DILocalVariable(name: "ret", scope: !18177, file: !2486, line: 1907, type: !105)
!18188 = !DILocation(line: 0, scope: !18177)
!18189 = !DILocation(line: 1907, column: 12, scope: !18177)
!18190 = !DILocation(line: 1909, column: 11, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18177, file: !2486, line: 1909, column: 6)
!18192 = !DILocation(line: 1909, column: 6, scope: !18177)
!18193 = !DILocation(line: 1910, column: 11, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18191, file: !2486, line: 1909, column: 20)
!18195 = !DILocation(line: 1910, column: 26, scope: !18194)
!18196 = !DILocation(line: 1910, column: 9, scope: !18194)
!18197 = !DILocation(line: 1911, column: 2, scope: !18194)
!18198 = !DILocation(line: 1912, column: 2, scope: !18177)
!18199 = distinct !DISubprogram(name: "z_data_copy", scope: !18200, file: !18200, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3268, retainedNodes: !397)
!18200 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18201 = !DILocation(line: 24, column: 2, scope: !18199)
!18202 = !DILocation(line: 27, column: 2, scope: !18199)
!18203 = !DILocation(line: 71, column: 1, scope: !18199)
!18204 = distinct !DISubprogram(name: "z_add_timeout", scope: !2523, file: !2523, line: 88, type: !18205, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18211)
!18205 = !DISubroutineType(types: !18206)
!18206 = !{null, !2496, !2515, !18207}
!18207 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18208)
!18208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18209)
!18209 = !{!18210}
!18210 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18208, file: !108, line: 66, baseType: !107, size: 64)
!18211 = !{!18212, !18213, !18214, !18215, !18221, !18222, !18225, !18228}
!18212 = !DILocalVariable(name: "to", arg: 1, scope: !18204, file: !2523, line: 88, type: !2496)
!18213 = !DILocalVariable(name: "fn", arg: 2, scope: !18204, file: !2523, line: 88, type: !2515)
!18214 = !DILocalVariable(name: "timeout", arg: 3, scope: !18204, file: !2523, line: 89, type: !18207)
!18215 = !DILocalVariable(name: "__i", scope: !18216, file: !2523, line: 102, type: !18217)
!18216 = distinct !DILexicalBlock(scope: !18204, file: !2523, line: 102, column: 2)
!18217 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18218)
!18218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18219)
!18219 = !{!18220}
!18220 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18218, file: !236, line: 33, baseType: !105, size: 32)
!18221 = !DILocalVariable(name: "__key", scope: !18216, file: !2523, line: 102, type: !18217)
!18222 = !DILocalVariable(name: "t", scope: !18223, file: !2523, line: 103, type: !2496)
!18223 = distinct !DILexicalBlock(scope: !18224, file: !2523, line: 102, column: 24)
!18224 = distinct !DILexicalBlock(scope: !18216, file: !2523, line: 102, column: 2)
!18225 = !DILocalVariable(name: "ticks", scope: !18226, file: !2523, line: 107, type: !107)
!18226 = distinct !DILexicalBlock(scope: !18227, file: !2523, line: 106, column: 39)
!18227 = distinct !DILexicalBlock(scope: !18223, file: !2523, line: 105, column: 7)
!18228 = !DILocalVariable(name: "next_time", scope: !18229, file: !2523, line: 137, type: !116)
!18229 = distinct !DILexicalBlock(scope: !18230, file: !2523, line: 127, column: 22)
!18230 = distinct !DILexicalBlock(scope: !18223, file: !2523, line: 127, column: 7)
!18231 = !DILocation(line: 0, scope: !18204)
!18232 = !DILocation(line: 91, column: 6, scope: !18233)
!18233 = distinct !DILexicalBlock(scope: !18204, file: !2523, line: 91, column: 6)
!18234 = !DILocation(line: 91, column: 6, scope: !18204)
!18235 = !DILocation(line: 99, column: 2, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18237, file: !2523, line: 99, column: 2)
!18237 = distinct !DILexicalBlock(scope: !18204, file: !2523, line: 99, column: 2)
!18238 = !DILocation(line: 99, column: 2, scope: !18237)
!18239 = !DILocation(line: 99, column: 2, scope: !18240)
!18240 = distinct !DILexicalBlock(scope: !18236, file: !2523, line: 99, column: 2)
!18241 = !DILocation(line: 100, column: 6, scope: !18204)
!18242 = !DILocation(line: 100, column: 9, scope: !18204)
!18243 = !DILocation(line: 0, scope: !18216)
!18244 = !DILocalVariable(name: "l", arg: 1, scope: !18245, file: !236, line: 136, type: !18248)
!18245 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18246, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18249)
!18246 = !DISubroutineType(types: !18247)
!18247 = !{!18217, !18248}
!18248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!18249 = !{!18244, !18250}
!18250 = !DILocalVariable(name: "k", scope: !18245, file: !236, line: 139, type: !18217)
!18251 = !DILocation(line: 0, scope: !18245, inlinedAt: !18252)
!18252 = distinct !DILocation(line: 102, column: 2, scope: !18216)
!18253 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18258)
!18254 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18255)
!18255 = !{!18256, !18257}
!18256 = !DILocalVariable(name: "key", scope: !18254, file: !7468, line: 44, type: !32)
!18257 = !DILocalVariable(name: "tmp", scope: !18254, file: !7468, line: 53, type: !32)
!18258 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18252)
!18259 = !{i64 2248430}
!18260 = !DILocation(line: 0, scope: !18254, inlinedAt: !18258)
!18261 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18252)
!18262 = distinct !DILexicalBlock(scope: !18263, file: !236, line: 148, column: 2)
!18263 = distinct !DILexicalBlock(scope: !18245, file: !236, line: 148, column: 2)
!18264 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18252)
!18265 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18252)
!18266 = distinct !DILexicalBlock(scope: !18262, file: !236, line: 148, column: 2)
!18267 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18252)
!18268 = !DILocation(line: 106, column: 33, scope: !18227)
!18269 = !DILocation(line: 105, column: 7, scope: !18223)
!18270 = !DILocation(line: 107, column: 50, scope: !18226)
!18271 = !DILocation(line: 107, column: 48, scope: !18226)
!18272 = !DILocation(line: 0, scope: !18226)
!18273 = !DILocation(line: 109, column: 17, scope: !18226)
!18274 = !DILocation(line: 110, column: 3, scope: !18226)
!18275 = !DILocation(line: 111, column: 31, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18227, file: !2523, line: 110, column: 10)
!18277 = !DILocation(line: 111, column: 37, scope: !18276)
!18278 = !DILocation(line: 111, column: 35, scope: !18276)
!18279 = !DILocation(line: 0, scope: !18227)
!18280 = !DILocation(line: 109, column: 8, scope: !18226)
!18281 = !DILocation(line: 109, column: 15, scope: !18226)
!18282 = !DILocation(line: 114, column: 12, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18223, file: !2523, line: 114, column: 3)
!18284 = !DILocation(line: 0, scope: !18223)
!18285 = !DILocation(line: 114, column: 3, scope: !18283)
!18286 = !DILocation(line: 115, column: 24, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18288, file: !2523, line: 115, column: 8)
!18288 = distinct !DILexicalBlock(scope: !18289, file: !2523, line: 114, column: 45)
!18289 = distinct !DILexicalBlock(scope: !18283, file: !2523, line: 114, column: 3)
!18290 = !DILocation(line: 115, column: 11, scope: !18287)
!18291 = !DILocation(line: 115, column: 18, scope: !18287)
!18292 = !DILocation(line: 115, column: 8, scope: !18288)
!18293 = !DILocation(line: 116, column: 15, scope: !18294)
!18294 = distinct !DILexicalBlock(scope: !18287, file: !2523, line: 115, column: 32)
!18295 = !DILocation(line: 117, column: 26, scope: !18294)
!18296 = !DILocation(line: 117, column: 5, scope: !18294)
!18297 = !DILocation(line: 123, column: 7, scope: !18223)
!18298 = !DILocation(line: 120, column: 15, scope: !18288)
!18299 = !DILocation(line: 114, column: 36, scope: !18289)
!18300 = distinct !{!18300, !18285, !18301}
!18301 = !DILocation(line: 121, column: 3, scope: !18283)
!18302 = !DILocation(line: 124, column: 4, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18304, file: !2523, line: 123, column: 18)
!18304 = distinct !DILexicalBlock(scope: !18223, file: !2523, line: 123, column: 7)
!18305 = !DILocation(line: 125, column: 3, scope: !18303)
!18306 = !DILocation(line: 127, column: 13, scope: !18230)
!18307 = !DILocation(line: 127, column: 10, scope: !18230)
!18308 = !DILocation(line: 127, column: 7, scope: !18223)
!18309 = !DILocation(line: 137, column: 24, scope: !18229)
!18310 = !DILocation(line: 0, scope: !18229)
!18311 = !DILocation(line: 139, column: 18, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18229, file: !2523, line: 139, column: 8)
!18313 = !DILocation(line: 139, column: 23, scope: !18312)
!18314 = !DILocation(line: 141, column: 5, scope: !18315)
!18315 = distinct !DILexicalBlock(scope: !18312, file: !2523, line: 140, column: 48)
!18316 = !DILocation(line: 142, column: 4, scope: !18315)
!18317 = !DILocalVariable(name: "key", arg: 2, scope: !18318, file: !236, line: 190, type: !18217)
!18318 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18319, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18321)
!18319 = !DISubroutineType(types: !18320)
!18320 = !{null, !18248, !18217}
!18321 = !{!18322, !18317}
!18322 = !DILocalVariable(name: "l", arg: 1, scope: !18318, file: !236, line: 189, type: !18248)
!18323 = !DILocation(line: 0, scope: !18318, inlinedAt: !18324)
!18324 = distinct !DILocation(line: 102, column: 2, scope: !18224)
!18325 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18324)
!18326 = distinct !DILexicalBlock(scope: !18327, file: !236, line: 194, column: 2)
!18327 = distinct !DILexicalBlock(scope: !18318, file: !236, line: 194, column: 2)
!18328 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18324)
!18329 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18324)
!18330 = distinct !DILexicalBlock(scope: !18326, file: !236, line: 194, column: 2)
!18331 = !DILocalVariable(name: "key", arg: 1, scope: !18332, file: !7468, line: 84, type: !32)
!18332 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18333)
!18333 = !{!18331}
!18334 = !DILocation(line: 0, scope: !18332, inlinedAt: !18335)
!18335 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18324)
!18336 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18335)
!18337 = !{i64 2249247}
!18338 = !DILocation(line: 148, column: 1, scope: !18204)
!18339 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !18340, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18344)
!18340 = !DISubroutineType(types: !18341)
!18341 = !{!492, !18342}
!18342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18343, size: 32)
!18343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!18344 = !{!18345}
!18345 = !DILocalVariable(name: "node", arg: 1, scope: !18339, file: !137, line: 225, type: !18342)
!18346 = !DILocation(line: 0, scope: !18339)
!18347 = !DILocation(line: 227, column: 15, scope: !18339)
!18348 = !DILocation(line: 227, column: 20, scope: !18339)
!18349 = !DILocation(line: 227, column: 2, scope: !18339)
!18350 = distinct !DISubprogram(name: "elapsed", scope: !2523, file: !2523, line: 62, type: !18351, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !397)
!18351 = !DISubroutineType(types: !18352)
!18352 = !{!116}
!18353 = !DILocation(line: 64, column: 9, scope: !18350)
!18354 = !DILocation(line: 64, column: 28, scope: !18350)
!18355 = !DILocation(line: 64, column: 35, scope: !18350)
!18356 = !DILocation(line: 64, column: 2, scope: !18350)
!18357 = distinct !DISubprogram(name: "first", scope: !2523, file: !2523, line: 39, type: !18358, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18360)
!18358 = !DISubroutineType(types: !18359)
!18359 = !{!2496}
!18360 = !{!18361}
!18361 = !DILocalVariable(name: "t", scope: !18357, file: !2523, line: 41, type: !18362)
!18362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!18363 = !DILocation(line: 41, column: 19, scope: !18357)
!18364 = !DILocation(line: 0, scope: !18357)
!18365 = !DILocation(line: 43, column: 9, scope: !18357)
!18366 = !DILocation(line: 43, column: 2, scope: !18357)
!18367 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !18368, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18370)
!18368 = !DISubroutineType(types: !18369)
!18369 = !{null, !18362, !18362}
!18370 = !{!18371, !18372, !18373}
!18371 = !DILocalVariable(name: "successor", arg: 1, scope: !18367, file: !137, line: 443, type: !18362)
!18372 = !DILocalVariable(name: "node", arg: 2, scope: !18367, file: !137, line: 443, type: !18362)
!18373 = !DILocalVariable(name: "prev", scope: !18367, file: !137, line: 445, type: !18374)
!18374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18362)
!18375 = !DILocation(line: 0, scope: !18367)
!18376 = !DILocation(line: 445, column: 39, scope: !18367)
!18377 = !DILocation(line: 447, column: 8, scope: !18367)
!18378 = !DILocation(line: 447, column: 13, scope: !18367)
!18379 = !DILocation(line: 448, column: 8, scope: !18367)
!18380 = !DILocation(line: 448, column: 13, scope: !18367)
!18381 = !DILocation(line: 449, column: 8, scope: !18367)
!18382 = !DILocation(line: 449, column: 13, scope: !18367)
!18383 = !DILocation(line: 450, column: 18, scope: !18367)
!18384 = !DILocation(line: 451, column: 1, scope: !18367)
!18385 = distinct !DISubprogram(name: "next", scope: !2523, file: !2523, line: 46, type: !18386, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18388)
!18386 = !DISubroutineType(types: !18387)
!18387 = !{!2496, !2496}
!18388 = !{!18389, !18390}
!18389 = !DILocalVariable(name: "t", arg: 1, scope: !18385, file: !2523, line: 46, type: !2496)
!18390 = !DILocalVariable(name: "n", scope: !18385, file: !2523, line: 48, type: !18362)
!18391 = !DILocation(line: 0, scope: !18385)
!18392 = !DILocation(line: 48, column: 58, scope: !18385)
!18393 = !DILocation(line: 48, column: 19, scope: !18385)
!18394 = !DILocation(line: 50, column: 9, scope: !18385)
!18395 = !DILocation(line: 50, column: 2, scope: !18385)
!18396 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !18397, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18400)
!18397 = !DISubroutineType(types: !18398)
!18398 = !{null, !18399, !18362}
!18399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!18400 = !{!18401, !18402, !18403}
!18401 = !DILocalVariable(name: "list", arg: 1, scope: !18396, file: !137, line: 404, type: !18399)
!18402 = !DILocalVariable(name: "node", arg: 2, scope: !18396, file: !137, line: 404, type: !18362)
!18403 = !DILocalVariable(name: "tail", scope: !18396, file: !137, line: 406, type: !18374)
!18404 = !DILocation(line: 0, scope: !18396)
!18405 = !DILocation(line: 406, column: 34, scope: !18396)
!18406 = !DILocation(line: 408, column: 8, scope: !18396)
!18407 = !DILocation(line: 408, column: 13, scope: !18396)
!18408 = !DILocation(line: 409, column: 8, scope: !18396)
!18409 = !DILocation(line: 409, column: 13, scope: !18396)
!18410 = !DILocation(line: 411, column: 8, scope: !18396)
!18411 = !DILocation(line: 411, column: 13, scope: !18396)
!18412 = !DILocation(line: 412, column: 13, scope: !18396)
!18413 = !DILocation(line: 413, column: 1, scope: !18396)
!18414 = distinct !DISubprogram(name: "next_timeout", scope: !2523, file: !2523, line: 67, type: !18351, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18415)
!18415 = !{!18416, !18417, !18418}
!18416 = !DILocalVariable(name: "to", scope: !18414, file: !2523, line: 69, type: !2496)
!18417 = !DILocalVariable(name: "ticks_elapsed", scope: !18414, file: !2523, line: 70, type: !116)
!18418 = !DILocalVariable(name: "ret", scope: !18414, file: !2523, line: 71, type: !116)
!18419 = !DILocation(line: 69, column: 24, scope: !18414)
!18420 = !DILocation(line: 0, scope: !18414)
!18421 = !DILocation(line: 70, column: 26, scope: !18414)
!18422 = !DILocation(line: 73, column: 10, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18414, file: !2523, line: 73, column: 6)
!18424 = !DILocation(line: 73, column: 19, scope: !18423)
!18425 = !DILocation(line: 74, column: 21, scope: !18423)
!18426 = !DILocation(line: 74, column: 30, scope: !18423)
!18427 = !DILocation(line: 74, column: 28, scope: !18423)
!18428 = !DILocation(line: 74, column: 45, scope: !18423)
!18429 = !DILocation(line: 73, column: 6, scope: !18414)
!18430 = !DILocation(line: 77, column: 9, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18423, file: !2523, line: 76, column: 9)
!18432 = !DILocation(line: 0, scope: !18423)
!18433 = !DILocation(line: 81, column: 20, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !18414, file: !2523, line: 81, column: 6)
!18435 = !DILocation(line: 81, column: 6, scope: !18434)
!18436 = !DILocation(line: 81, column: 32, scope: !18434)
!18437 = !DILocation(line: 85, column: 2, scope: !18414)
!18438 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !18439, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18441)
!18439 = !DISubroutineType(types: !18440)
!18440 = !{!18362, !18399, !18362}
!18441 = !{!18442, !18443}
!18442 = !DILocalVariable(name: "list", arg: 1, scope: !18438, file: !137, line: 341, type: !18399)
!18443 = !DILocalVariable(name: "node", arg: 2, scope: !18438, file: !137, line: 342, type: !18362)
!18444 = !DILocation(line: 0, scope: !18438)
!18445 = !DILocation(line: 344, column: 15, scope: !18438)
!18446 = !DILocation(line: 344, column: 9, scope: !18438)
!18447 = !DILocation(line: 344, column: 26, scope: !18438)
!18448 = !DILocation(line: 344, column: 2, scope: !18438)
!18449 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !18439, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18450)
!18450 = !{!18451, !18452}
!18451 = !DILocalVariable(name: "list", arg: 1, scope: !18449, file: !137, line: 325, type: !18399)
!18452 = !DILocalVariable(name: "node", arg: 2, scope: !18449, file: !137, line: 326, type: !18362)
!18453 = !DILocation(line: 0, scope: !18449)
!18454 = !DILocation(line: 328, column: 24, scope: !18449)
!18455 = !DILocation(line: 328, column: 15, scope: !18449)
!18456 = !DILocation(line: 328, column: 9, scope: !18449)
!18457 = !DILocation(line: 328, column: 45, scope: !18449)
!18458 = !DILocation(line: 328, column: 2, scope: !18449)
!18459 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !18460, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18462)
!18460 = !DISubroutineType(types: !18461)
!18461 = !{!18362, !18399}
!18462 = !{!18463}
!18463 = !DILocalVariable(name: "list", arg: 1, scope: !18459, file: !137, line: 294, type: !18399)
!18464 = !DILocation(line: 0, scope: !18459)
!18465 = !DILocation(line: 296, column: 9, scope: !18459)
!18466 = !DILocation(line: 296, column: 2, scope: !18459)
!18467 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !18468, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18470)
!18468 = !DISubroutineType(types: !18469)
!18469 = !{!492, !18399}
!18470 = !{!18471}
!18471 = !DILocalVariable(name: "list", arg: 1, scope: !18467, file: !137, line: 266, type: !18399)
!18472 = !DILocation(line: 0, scope: !18467)
!18473 = !DILocation(line: 268, column: 15, scope: !18467)
!18474 = !DILocation(line: 268, column: 20, scope: !18467)
!18475 = !DILocation(line: 268, column: 2, scope: !18467)
!18476 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2523, file: !2523, line: 150, type: !18477, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18479)
!18477 = !DISubroutineType(types: !18478)
!18478 = !{!105, !2496}
!18479 = !{!18480, !18481, !18482, !18484}
!18480 = !DILocalVariable(name: "to", arg: 1, scope: !18476, file: !2523, line: 150, type: !2496)
!18481 = !DILocalVariable(name: "ret", scope: !18476, file: !2523, line: 152, type: !105)
!18482 = !DILocalVariable(name: "__i", scope: !18483, file: !2523, line: 154, type: !18217)
!18483 = distinct !DILexicalBlock(scope: !18476, file: !2523, line: 154, column: 2)
!18484 = !DILocalVariable(name: "__key", scope: !18483, file: !2523, line: 154, type: !18217)
!18485 = !DILocation(line: 0, scope: !18476)
!18486 = !DILocation(line: 0, scope: !18483)
!18487 = !DILocation(line: 0, scope: !18245, inlinedAt: !18488)
!18488 = distinct !DILocation(line: 154, column: 2, scope: !18483)
!18489 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18490)
!18490 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18488)
!18491 = !DILocation(line: 0, scope: !18254, inlinedAt: !18490)
!18492 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18488)
!18493 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18488)
!18494 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18488)
!18495 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18488)
!18496 = !DILocation(line: 155, column: 7, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18498, file: !2523, line: 155, column: 7)
!18498 = distinct !DILexicalBlock(scope: !18499, file: !2523, line: 154, column: 24)
!18499 = distinct !DILexicalBlock(scope: !18483, file: !2523, line: 154, column: 2)
!18500 = !DILocation(line: 155, column: 7, scope: !18498)
!18501 = !DILocation(line: 156, column: 4, scope: !18502)
!18502 = distinct !DILexicalBlock(scope: !18497, file: !2523, line: 155, column: 39)
!18503 = !DILocation(line: 158, column: 3, scope: !18502)
!18504 = !DILocation(line: 0, scope: !18318, inlinedAt: !18505)
!18505 = distinct !DILocation(line: 154, column: 2, scope: !18499)
!18506 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18505)
!18507 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18505)
!18508 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18505)
!18509 = !DILocation(line: 0, scope: !18332, inlinedAt: !18510)
!18510 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18505)
!18511 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18510)
!18512 = !DILocation(line: 161, column: 2, scope: !18476)
!18513 = distinct !DISubprogram(name: "remove_timeout", scope: !2523, file: !2523, line: 53, type: !2517, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18514)
!18514 = !{!18515}
!18515 = !DILocalVariable(name: "t", arg: 1, scope: !18513, file: !2523, line: 53, type: !2496)
!18516 = !DILocation(line: 0, scope: !18513)
!18517 = !DILocation(line: 55, column: 6, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18513, file: !2523, line: 55, column: 6)
!18519 = !DILocation(line: 55, column: 14, scope: !18518)
!18520 = !DILocation(line: 55, column: 6, scope: !18513)
!18521 = !DILocation(line: 56, column: 25, scope: !18522)
!18522 = distinct !DILexicalBlock(scope: !18518, file: !2523, line: 55, column: 23)
!18523 = !DILocation(line: 56, column: 12, scope: !18522)
!18524 = !DILocation(line: 56, column: 19, scope: !18522)
!18525 = !DILocation(line: 57, column: 2, scope: !18522)
!18526 = !DILocation(line: 59, column: 23, scope: !18513)
!18527 = !DILocation(line: 59, column: 2, scope: !18513)
!18528 = !DILocation(line: 60, column: 1, scope: !18513)
!18529 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !18530, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18532)
!18530 = !DISubroutineType(types: !18531)
!18531 = !{null, !18362}
!18532 = !{!18533, !18534, !18535}
!18533 = !DILocalVariable(name: "node", arg: 1, scope: !18529, file: !137, line: 496, type: !18362)
!18534 = !DILocalVariable(name: "prev", scope: !18529, file: !137, line: 498, type: !18374)
!18535 = !DILocalVariable(name: "next", scope: !18529, file: !137, line: 499, type: !18374)
!18536 = !DILocation(line: 0, scope: !18529)
!18537 = !DILocation(line: 498, column: 34, scope: !18529)
!18538 = !DILocation(line: 499, column: 34, scope: !18529)
!18539 = !DILocation(line: 501, column: 8, scope: !18529)
!18540 = !DILocation(line: 501, column: 13, scope: !18529)
!18541 = !DILocation(line: 502, column: 8, scope: !18529)
!18542 = !DILocation(line: 502, column: 13, scope: !18529)
!18543 = !DILocation(line: 503, column: 2, scope: !18529)
!18544 = !DILocation(line: 504, column: 1, scope: !18529)
!18545 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !18530, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18546)
!18546 = !{!18547}
!18547 = !DILocalVariable(name: "node", arg: 1, scope: !18545, file: !137, line: 211, type: !18362)
!18548 = !DILocation(line: 0, scope: !18545)
!18549 = !DILocation(line: 213, column: 8, scope: !18545)
!18550 = !DILocation(line: 213, column: 13, scope: !18545)
!18551 = !DILocation(line: 214, column: 8, scope: !18545)
!18552 = !DILocation(line: 214, column: 13, scope: !18545)
!18553 = !DILocation(line: 215, column: 1, scope: !18545)
!18554 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2523, file: !2523, line: 183, type: !18555, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18559)
!18555 = !DISubroutineType(types: !18556)
!18556 = !{!107, !18557}
!18557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18558, size: 32)
!18558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2497)
!18559 = !{!18560, !18561, !18562, !18564}
!18560 = !DILocalVariable(name: "timeout", arg: 1, scope: !18554, file: !2523, line: 183, type: !18557)
!18561 = !DILocalVariable(name: "ticks", scope: !18554, file: !2523, line: 185, type: !107)
!18562 = !DILocalVariable(name: "__i", scope: !18563, file: !2523, line: 187, type: !18217)
!18563 = distinct !DILexicalBlock(scope: !18554, file: !2523, line: 187, column: 2)
!18564 = !DILocalVariable(name: "__key", scope: !18563, file: !2523, line: 187, type: !18217)
!18565 = !DILocation(line: 0, scope: !18554)
!18566 = !DILocation(line: 0, scope: !18563)
!18567 = !DILocation(line: 0, scope: !18245, inlinedAt: !18568)
!18568 = distinct !DILocation(line: 187, column: 2, scope: !18563)
!18569 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18570)
!18570 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18568)
!18571 = !DILocation(line: 0, scope: !18254, inlinedAt: !18570)
!18572 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18568)
!18573 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18568)
!18574 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18568)
!18575 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18568)
!18576 = !DILocation(line: 188, column: 11, scope: !18577)
!18577 = distinct !DILexicalBlock(scope: !18578, file: !2523, line: 187, column: 24)
!18578 = distinct !DILexicalBlock(scope: !18563, file: !2523, line: 187, column: 2)
!18579 = !DILocation(line: 0, scope: !18318, inlinedAt: !18580)
!18580 = distinct !DILocation(line: 187, column: 2, scope: !18578)
!18581 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18580)
!18582 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18580)
!18583 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18580)
!18584 = !DILocation(line: 0, scope: !18332, inlinedAt: !18585)
!18585 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18580)
!18586 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18585)
!18587 = !DILocation(line: 191, column: 2, scope: !18554)
!18588 = distinct !DISubprogram(name: "timeout_rem", scope: !2523, file: !2523, line: 165, type: !18555, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18589)
!18589 = !{!18590, !18591, !18592}
!18590 = !DILocalVariable(name: "timeout", arg: 1, scope: !18588, file: !2523, line: 165, type: !18557)
!18591 = !DILocalVariable(name: "ticks", scope: !18588, file: !2523, line: 167, type: !107)
!18592 = !DILocalVariable(name: "t", scope: !18593, file: !2523, line: 173, type: !2496)
!18593 = distinct !DILexicalBlock(scope: !18588, file: !2523, line: 173, column: 2)
!18594 = !DILocation(line: 0, scope: !18588)
!18595 = !DILocation(line: 169, column: 6, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18588, file: !2523, line: 169, column: 6)
!18597 = !DILocation(line: 169, column: 6, scope: !18588)
!18598 = !DILocation(line: 173, column: 28, scope: !18593)
!18599 = !DILocation(line: 0, scope: !18593)
!18600 = !DILocation(line: 173, column: 39, scope: !18601)
!18601 = distinct !DILexicalBlock(scope: !18593, file: !2523, line: 173, column: 2)
!18602 = !DILocation(line: 173, column: 2, scope: !18593)
!18603 = !DILocation(line: 174, column: 15, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !18601, file: !2523, line: 173, column: 61)
!18605 = !DILocation(line: 174, column: 9, scope: !18604)
!18606 = !DILocation(line: 175, column: 15, scope: !18607)
!18607 = distinct !DILexicalBlock(scope: !18604, file: !2523, line: 175, column: 7)
!18608 = !DILocation(line: 175, column: 7, scope: !18604)
!18609 = !DILocation(line: 173, column: 52, scope: !18601)
!18610 = distinct !{!18610, !18602, !18611}
!18611 = !DILocation(line: 178, column: 2, scope: !18593)
!18612 = !DILocation(line: 180, column: 17, scope: !18588)
!18613 = !DILocation(line: 180, column: 15, scope: !18588)
!18614 = !DILocation(line: 180, column: 2, scope: !18588)
!18615 = !DILocation(line: 181, column: 1, scope: !18588)
!18616 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14584, file: !14584, line: 35, type: !18617, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18619)
!18617 = !DISubroutineType(types: !18618)
!18618 = !{!492, !18557}
!18619 = !{!18620}
!18620 = !DILocalVariable(name: "to", arg: 1, scope: !18616, file: !14584, line: 35, type: !18557)
!18621 = !DILocation(line: 0, scope: !18616)
!18622 = !DILocation(line: 37, column: 35, scope: !18616)
!18623 = !DILocation(line: 37, column: 10, scope: !18616)
!18624 = !DILocation(line: 37, column: 9, scope: !18616)
!18625 = !DILocation(line: 37, column: 2, scope: !18616)
!18626 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2523, file: !2523, line: 194, type: !18555, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18627)
!18627 = !{!18628, !18629, !18630, !18632}
!18628 = !DILocalVariable(name: "timeout", arg: 1, scope: !18626, file: !2523, line: 194, type: !18557)
!18629 = !DILocalVariable(name: "ticks", scope: !18626, file: !2523, line: 196, type: !107)
!18630 = !DILocalVariable(name: "__i", scope: !18631, file: !2523, line: 198, type: !18217)
!18631 = distinct !DILexicalBlock(scope: !18626, file: !2523, line: 198, column: 2)
!18632 = !DILocalVariable(name: "__key", scope: !18631, file: !2523, line: 198, type: !18217)
!18633 = !DILocation(line: 0, scope: !18626)
!18634 = !DILocation(line: 0, scope: !18631)
!18635 = !DILocation(line: 0, scope: !18245, inlinedAt: !18636)
!18636 = distinct !DILocation(line: 198, column: 2, scope: !18631)
!18637 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18638)
!18638 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18636)
!18639 = !DILocation(line: 0, scope: !18254, inlinedAt: !18638)
!18640 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18636)
!18641 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18636)
!18642 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18636)
!18643 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18636)
!18644 = !DILocation(line: 199, column: 11, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !18646, file: !2523, line: 198, column: 24)
!18646 = distinct !DILexicalBlock(scope: !18631, file: !2523, line: 198, column: 2)
!18647 = !DILocation(line: 199, column: 23, scope: !18645)
!18648 = !DILocation(line: 0, scope: !18318, inlinedAt: !18649)
!18649 = distinct !DILocation(line: 198, column: 2, scope: !18646)
!18650 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18649)
!18651 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18649)
!18652 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18649)
!18653 = !DILocation(line: 0, scope: !18332, inlinedAt: !18654)
!18654 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18649)
!18655 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18654)
!18656 = !DILocation(line: 199, column: 21, scope: !18645)
!18657 = !DILocation(line: 202, column: 2, scope: !18626)
!18658 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2523, file: !2523, line: 205, type: !18351, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18659)
!18659 = !{!18660, !18661, !18663}
!18660 = !DILocalVariable(name: "ret", scope: !18658, file: !2523, line: 207, type: !116)
!18661 = !DILocalVariable(name: "__i", scope: !18662, file: !2523, line: 209, type: !18217)
!18662 = distinct !DILexicalBlock(scope: !18658, file: !2523, line: 209, column: 2)
!18663 = !DILocalVariable(name: "__key", scope: !18662, file: !2523, line: 209, type: !18217)
!18664 = !DILocation(line: 0, scope: !18658)
!18665 = !DILocation(line: 0, scope: !18662)
!18666 = !DILocation(line: 0, scope: !18245, inlinedAt: !18667)
!18667 = distinct !DILocation(line: 209, column: 2, scope: !18662)
!18668 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18669)
!18669 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18667)
!18670 = !DILocation(line: 0, scope: !18254, inlinedAt: !18669)
!18671 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18667)
!18672 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18667)
!18673 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18667)
!18674 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18667)
!18675 = !DILocation(line: 210, column: 9, scope: !18676)
!18676 = distinct !DILexicalBlock(scope: !18677, file: !2523, line: 209, column: 24)
!18677 = distinct !DILexicalBlock(scope: !18662, file: !2523, line: 209, column: 2)
!18678 = !DILocation(line: 0, scope: !18318, inlinedAt: !18679)
!18679 = distinct !DILocation(line: 209, column: 2, scope: !18677)
!18680 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18679)
!18681 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18679)
!18682 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18679)
!18683 = !DILocation(line: 0, scope: !18332, inlinedAt: !18684)
!18684 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18679)
!18685 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18684)
!18686 = !DILocation(line: 212, column: 2, scope: !18658)
!18687 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2523, file: !2523, line: 215, type: !12093, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18688)
!18688 = !{!18689, !18690, !18691, !18693, !18694, !18697, !18698}
!18689 = !DILocalVariable(name: "ticks", arg: 1, scope: !18687, file: !2523, line: 215, type: !116)
!18690 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18687, file: !2523, line: 215, type: !492)
!18691 = !DILocalVariable(name: "__i", scope: !18692, file: !2523, line: 217, type: !18217)
!18692 = distinct !DILexicalBlock(scope: !18687, file: !2523, line: 217, column: 2)
!18693 = !DILocalVariable(name: "__key", scope: !18692, file: !2523, line: 217, type: !18217)
!18694 = !DILocalVariable(name: "next_to", scope: !18695, file: !2523, line: 218, type: !105)
!18695 = distinct !DILexicalBlock(scope: !18696, file: !2523, line: 217, column: 24)
!18696 = distinct !DILexicalBlock(scope: !18692, file: !2523, line: 217, column: 2)
!18697 = !DILocalVariable(name: "sooner", scope: !18695, file: !2523, line: 219, type: !492)
!18698 = !DILocalVariable(name: "imminent", scope: !18695, file: !2523, line: 221, type: !492)
!18699 = !DILocation(line: 0, scope: !18687)
!18700 = !DILocation(line: 0, scope: !18692)
!18701 = !DILocation(line: 0, scope: !18245, inlinedAt: !18702)
!18702 = distinct !DILocation(line: 217, column: 2, scope: !18692)
!18703 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18704)
!18704 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18702)
!18705 = !DILocation(line: 0, scope: !18254, inlinedAt: !18704)
!18706 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18702)
!18707 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18702)
!18708 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18702)
!18709 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18702)
!18710 = !DILocation(line: 218, column: 17, scope: !18695)
!18711 = !DILocation(line: 0, scope: !18695)
!18712 = !DILocation(line: 221, column: 27, scope: !18695)
!18713 = !DILocation(line: 233, column: 17, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18695, file: !2523, line: 233, column: 7)
!18715 = !DILocation(line: 234, column: 26, scope: !18716)
!18716 = distinct !DILexicalBlock(scope: !18714, file: !2523, line: 233, column: 56)
!18717 = !DILocation(line: 234, column: 4, scope: !18716)
!18718 = !DILocation(line: 235, column: 3, scope: !18716)
!18719 = !DILocation(line: 0, scope: !18318, inlinedAt: !18720)
!18720 = distinct !DILocation(line: 217, column: 2, scope: !18696)
!18721 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18720)
!18722 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18720)
!18723 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18720)
!18724 = !DILocation(line: 0, scope: !18332, inlinedAt: !18725)
!18725 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18720)
!18726 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18725)
!18727 = !DILocation(line: 237, column: 1, scope: !18687)
!18728 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2523, file: !2523, line: 239, type: !18729, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18731)
!18729 = !DISubroutineType(types: !18730)
!18730 = !{null, !116}
!18731 = !{!18732, !18733, !18734, !18736}
!18732 = !DILocalVariable(name: "ticks", arg: 1, scope: !18728, file: !2523, line: 239, type: !116)
!18733 = !DILocalVariable(name: "key", scope: !18728, file: !2523, line: 245, type: !18217)
!18734 = !DILocalVariable(name: "t", scope: !18735, file: !2523, line: 262, type: !2496)
!18735 = distinct !DILexicalBlock(scope: !18728, file: !2523, line: 261, column: 67)
!18736 = !DILocalVariable(name: "dt", scope: !18735, file: !2523, line: 263, type: !105)
!18737 = !DILocation(line: 0, scope: !18728)
!18738 = !DILocation(line: 242, column: 2, scope: !18728)
!18739 = !DILocation(line: 0, scope: !18245, inlinedAt: !18740)
!18740 = distinct !DILocation(line: 245, column: 25, scope: !18728)
!18741 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18742)
!18742 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18740)
!18743 = !DILocation(line: 0, scope: !18254, inlinedAt: !18742)
!18744 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18740)
!18745 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18740)
!18746 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18740)
!18747 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18740)
!18748 = !DILocation(line: 261, column: 9, scope: !18728)
!18749 = !DILocation(line: 261, column: 17, scope: !18728)
!18750 = !DILocation(line: 261, column: 25, scope: !18728)
!18751 = !DILocation(line: 261, column: 37, scope: !18728)
!18752 = !DILocation(line: 261, column: 47, scope: !18728)
!18753 = !DILocation(line: 261, column: 44, scope: !18728)
!18754 = !DILocation(line: 261, column: 2, scope: !18728)
!18755 = !DILocation(line: 0, scope: !18735)
!18756 = !DILocation(line: 263, column: 12, scope: !18735)
!18757 = !DILocation(line: 265, column: 16, scope: !18735)
!18758 = !DILocation(line: 265, column: 13, scope: !18735)
!18759 = !DILocation(line: 266, column: 13, scope: !18735)
!18760 = !DILocation(line: 267, column: 3, scope: !18735)
!18761 = !DILocation(line: 0, scope: !18318, inlinedAt: !18762)
!18762 = distinct !DILocation(line: 269, column: 3, scope: !18735)
!18763 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18762)
!18764 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18762)
!18765 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18762)
!18766 = !DILocation(line: 0, scope: !18332, inlinedAt: !18767)
!18767 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18762)
!18768 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18767)
!18769 = !DILocation(line: 270, column: 6, scope: !18735)
!18770 = !DILocation(line: 270, column: 3, scope: !18735)
!18771 = !DILocation(line: 0, scope: !18245, inlinedAt: !18772)
!18772 = distinct !DILocation(line: 271, column: 9, scope: !18735)
!18773 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18774)
!18774 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18772)
!18775 = !DILocation(line: 0, scope: !18254, inlinedAt: !18774)
!18776 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18772)
!18777 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18772)
!18778 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18772)
!18779 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18772)
!18780 = !DILocation(line: 272, column: 22, scope: !18735)
!18781 = distinct !{!18781, !18754, !18782}
!18782 = !DILocation(line: 273, column: 2, scope: !18728)
!18783 = !DILocation(line: 276, column: 19, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18785, file: !2523, line: 275, column: 23)
!18785 = distinct !DILexicalBlock(scope: !18728, file: !2523, line: 275, column: 6)
!18786 = !DILocation(line: 277, column: 2, scope: !18784)
!18787 = !DILocation(line: 279, column: 15, scope: !18728)
!18788 = !DILocation(line: 279, column: 12, scope: !18728)
!18789 = !DILocation(line: 280, column: 21, scope: !18728)
!18790 = !DILocation(line: 282, column: 24, scope: !18728)
!18791 = !DILocation(line: 282, column: 2, scope: !18728)
!18792 = !DILocation(line: 0, scope: !18318, inlinedAt: !18793)
!18793 = distinct !DILocation(line: 284, column: 2, scope: !18728)
!18794 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18793)
!18795 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18793)
!18796 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18793)
!18797 = !DILocation(line: 0, scope: !18332, inlinedAt: !18798)
!18798 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18793)
!18799 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18798)
!18800 = !DILocation(line: 285, column: 1, scope: !18728)
!18801 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2523, file: !2523, line: 287, type: !18802, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18804)
!18802 = !DISubroutineType(types: !18803)
!18803 = !{!109}
!18804 = !{!18805, !18806, !18808}
!18805 = !DILocalVariable(name: "t", scope: !18801, file: !2523, line: 289, type: !114)
!18806 = !DILocalVariable(name: "__i", scope: !18807, file: !2523, line: 291, type: !18217)
!18807 = distinct !DILexicalBlock(scope: !18801, file: !2523, line: 291, column: 2)
!18808 = !DILocalVariable(name: "__key", scope: !18807, file: !2523, line: 291, type: !18217)
!18809 = !DILocation(line: 0, scope: !18801)
!18810 = !DILocation(line: 0, scope: !18807)
!18811 = !DILocation(line: 0, scope: !18245, inlinedAt: !18812)
!18812 = distinct !DILocation(line: 291, column: 2, scope: !18807)
!18813 = !DILocation(line: 55, column: 2, scope: !18254, inlinedAt: !18814)
!18814 = distinct !DILocation(line: 145, column: 10, scope: !18245, inlinedAt: !18812)
!18815 = !DILocation(line: 0, scope: !18254, inlinedAt: !18814)
!18816 = !DILocation(line: 148, column: 2, scope: !18262, inlinedAt: !18812)
!18817 = !DILocation(line: 148, column: 2, scope: !18263, inlinedAt: !18812)
!18818 = !DILocation(line: 148, column: 2, scope: !18266, inlinedAt: !18812)
!18819 = !DILocation(line: 160, column: 2, scope: !18245, inlinedAt: !18812)
!18820 = !DILocation(line: 292, column: 7, scope: !18821)
!18821 = distinct !DILexicalBlock(scope: !18822, file: !2523, line: 291, column: 24)
!18822 = distinct !DILexicalBlock(scope: !18807, file: !2523, line: 291, column: 2)
!18823 = !DILocation(line: 292, column: 19, scope: !18821)
!18824 = !DILocation(line: 0, scope: !18318, inlinedAt: !18825)
!18825 = distinct !DILocation(line: 291, column: 2, scope: !18822)
!18826 = !DILocation(line: 194, column: 2, scope: !18326, inlinedAt: !18825)
!18827 = !DILocation(line: 194, column: 2, scope: !18327, inlinedAt: !18825)
!18828 = !DILocation(line: 194, column: 2, scope: !18330, inlinedAt: !18825)
!18829 = !DILocation(line: 0, scope: !18332, inlinedAt: !18830)
!18830 = distinct !DILocation(line: 215, column: 2, scope: !18318, inlinedAt: !18825)
!18831 = !DILocation(line: 95, column: 2, scope: !18332, inlinedAt: !18830)
!18832 = !DILocation(line: 292, column: 17, scope: !18821)
!18833 = !DILocation(line: 294, column: 2, scope: !18801)
!18834 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2523, file: !2523, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !397)
!18835 = !DILocation(line: 300, column: 19, scope: !18834)
!18836 = !DILocation(line: 300, column: 9, scope: !18834)
!18837 = !DILocation(line: 300, column: 2, scope: !18834)
!18838 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2523, file: !2523, line: 306, type: !18802, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !397)
!18839 = !DILocation(line: 308, column: 9, scope: !18838)
!18840 = !DILocation(line: 308, column: 2, scope: !18838)
!18841 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2523, file: !2523, line: 319, type: !7881, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18842)
!18842 = !{!18843, !18844, !18845, !18846}
!18843 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18841, file: !2523, line: 319, type: !113)
!18844 = !DILocalVariable(name: "start_cycles", scope: !18841, file: !2523, line: 328, type: !113)
!18845 = !DILocalVariable(name: "cycles_to_wait", scope: !18841, file: !2523, line: 331, type: !113)
!18846 = !DILocalVariable(name: "current_cycles", scope: !18847, file: !2523, line: 338, type: !113)
!18847 = distinct !DILexicalBlock(scope: !18848, file: !2523, line: 337, column: 11)
!18848 = distinct !DILexicalBlock(scope: !18849, file: !2523, line: 337, column: 2)
!18849 = distinct !DILexicalBlock(scope: !18841, file: !2523, line: 337, column: 2)
!18850 = !DILocation(line: 0, scope: !18841)
!18851 = !DILocation(line: 322, column: 19, scope: !18852)
!18852 = distinct !DILexicalBlock(scope: !18841, file: !2523, line: 322, column: 6)
!18853 = !DILocation(line: 322, column: 6, scope: !18841)
!18854 = !DILocation(line: 328, column: 26, scope: !18841)
!18855 = !DILocation(line: 333, column: 43, scope: !18841)
!18856 = !DILocation(line: 337, column: 2, scope: !18841)
!18857 = !DILocation(line: 338, column: 29, scope: !18847)
!18858 = !DILocation(line: 0, scope: !18847)
!18859 = !DILocation(line: 341, column: 23, scope: !18860)
!18860 = distinct !DILexicalBlock(scope: !18847, file: !2523, line: 341, column: 7)
!18861 = !DILocation(line: 341, column: 39, scope: !18860)
!18862 = !DILocation(line: 349, column: 1, scope: !18841)
!18863 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !397)
!18864 = !DILocation(line: 1677, column: 9, scope: !18863)
!18865 = !DILocation(line: 1677, column: 2, scope: !18863)
!18866 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3459, file: !3459, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !397)
!18867 = !DILocation(line: 26, column: 9, scope: !18866)
!18868 = !DILocation(line: 26, column: 2, scope: !18866)
!18869 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2523, file: !2523, line: 364, type: !18870, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2493, retainedNodes: !18872)
!18870 = !DISubroutineType(types: !18871)
!18871 = !{!114, !18207}
!18872 = !{!18873, !18874}
!18873 = !DILocalVariable(name: "timeout", arg: 1, scope: !18869, file: !2523, line: 364, type: !18207)
!18874 = !DILocalVariable(name: "dt", scope: !18869, file: !2523, line: 366, type: !107)
!18875 = !DILocation(line: 0, scope: !18869)
!18876 = !DILocation(line: 368, column: 6, scope: !18869)
!18877 = !DILocation(line: 371, column: 10, scope: !18878)
!18878 = distinct !DILexicalBlock(scope: !18879, file: !2523, line: 370, column: 47)
!18879 = distinct !DILexicalBlock(scope: !18880, file: !2523, line: 370, column: 13)
!18880 = distinct !DILexicalBlock(scope: !18869, file: !2523, line: 368, column: 6)
!18881 = !DILocation(line: 371, column: 3, scope: !18878)
!18882 = !DILocation(line: 376, column: 58, scope: !18883)
!18883 = distinct !DILexicalBlock(scope: !18884, file: !2523, line: 376, column: 7)
!18884 = distinct !DILexicalBlock(scope: !18879, file: !2523, line: 372, column: 9)
!18885 = !DILocation(line: 376, column: 7, scope: !18884)
!18886 = !DILocation(line: 376, column: 43, scope: !18883)
!18887 = !DILocation(line: 377, column: 4, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18883, file: !2523, line: 376, column: 64)
!18889 = !DILocation(line: 379, column: 10, scope: !18884)
!18890 = !DILocation(line: 379, column: 33, scope: !18884)
!18891 = !DILocation(line: 379, column: 31, scope: !18884)
!18892 = !DILocation(line: 379, column: 3, scope: !18884)
!18893 = !DILocation(line: 0, scope: !18880)
!18894 = !DILocation(line: 381, column: 1, scope: !18869)
!18895 = distinct !DISubprogram(name: "boot_banner", scope: !18896, file: !18896, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3271, retainedNodes: !397)
!18896 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18897 = !DILocation(line: 34, column: 2, scope: !18895)
!18898 = !DILocation(line: 36, column: 1, scope: !18895)
!18899 = distinct !DISubprogram(name: "statics_init", scope: !2553, file: !2553, line: 21, type: !2559, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !18900)
!18900 = !{!18901, !18902}
!18901 = !DILocalVariable(name: "unused", arg: 1, scope: !18899, file: !2553, line: 21, type: !2561)
!18902 = !DILocalVariable(name: "h", scope: !18903, file: !2553, line: 24, type: !18904)
!18903 = distinct !DILexicalBlock(scope: !18899, file: !2553, line: 24, column: 2)
!18904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18905, size: 32)
!18905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !18906)
!18906 = !{!18907, !18913, !18919}
!18907 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18905, file: !122, line: 5074, baseType: !18908, size: 96)
!18908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !18909)
!18909 = !{!18910, !18911, !18912}
!18910 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18908, file: !226, line: 57, baseType: !229, size: 32)
!18911 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18908, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!18912 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18908, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!18913 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18905, file: !122, line: 5075, baseType: !18914, size: 64, offset: 96)
!18914 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !18915)
!18915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !18916)
!18916 = !{!18917}
!18917 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18915, file: !163, line: 232, baseType: !18918, size: 64)
!18918 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2539)
!18919 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18905, file: !122, line: 5076, baseType: !18920, size: 32, offset: 160)
!18920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !18921)
!18921 = !{!18922}
!18922 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !18920, file: !236, line: 52, baseType: !22, size: 32)
!18923 = !DILocation(line: 0, scope: !18899)
!18924 = !DILocation(line: 0, scope: !18903)
!18925 = !DILocation(line: 24, column: 2, scope: !18926)
!18926 = distinct !DILexicalBlock(scope: !18927, file: !2553, line: 24, column: 2)
!18927 = distinct !DILexicalBlock(scope: !18928, file: !2553, line: 24, column: 2)
!18928 = distinct !DILexicalBlock(scope: !18903, file: !2553, line: 24, column: 2)
!18929 = !DILocation(line: 24, column: 2, scope: !18930)
!18930 = distinct !DILexicalBlock(scope: !18931, file: !2553, line: 24, column: 2)
!18931 = distinct !DILexicalBlock(scope: !18926, file: !2553, line: 24, column: 2)
!18932 = !DILocation(line: 24, column: 2, scope: !18927)
!18933 = !DILocation(line: 24, column: 2, scope: !18903)
!18934 = !DILocation(line: 52, column: 2, scope: !18899)
!18935 = !DILocation(line: 49, column: 27, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18937, file: !2553, line: 48, column: 3)
!18937 = distinct !DILexicalBlock(scope: !18928, file: !2553, line: 24, column: 36)
!18938 = !DILocation(line: 49, column: 45, scope: !18936)
!18939 = !DILocation(line: 49, column: 4, scope: !18936)
!18940 = !DILocation(line: 24, column: 2, scope: !18928)
!18941 = !DILocation(line: 24, column: 2, scope: !18931)
!18942 = distinct !{!18942, !18933, !18943}
!18943 = !DILocation(line: 51, column: 2, scope: !18903)
!18944 = distinct !DISubprogram(name: "k_heap_init", scope: !2553, file: !2553, line: 13, type: !18945, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !18947)
!18945 = !DISubroutineType(types: !18946)
!18946 = !{null, !18904, !104, !111}
!18947 = !{!18948, !18949, !18950}
!18948 = !DILocalVariable(name: "h", arg: 1, scope: !18944, file: !2553, line: 13, type: !18904)
!18949 = !DILocalVariable(name: "mem", arg: 2, scope: !18944, file: !2553, line: 13, type: !104)
!18950 = !DILocalVariable(name: "bytes", arg: 3, scope: !18944, file: !2553, line: 13, type: !111)
!18951 = !DILocation(line: 0, scope: !18944)
!18952 = !DILocation(line: 15, column: 19, scope: !18944)
!18953 = !DILocation(line: 15, column: 2, scope: !18944)
!18954 = !DILocation(line: 16, column: 20, scope: !18944)
!18955 = !DILocation(line: 16, column: 2, scope: !18944)
!18956 = !DILocation(line: 19, column: 1, scope: !18944)
!18957 = distinct !DISubprogram(name: "z_waitq_init", scope: !14516, file: !14516, line: 47, type: !18958, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !18961)
!18958 = !DISubroutineType(types: !18959)
!18959 = !{null, !18960}
!18960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18914, size: 32)
!18961 = !{!18962}
!18962 = !DILocalVariable(name: "w", arg: 1, scope: !18957, file: !14516, line: 47, type: !18960)
!18963 = !DILocation(line: 0, scope: !18957)
!18964 = !DILocation(line: 49, column: 21, scope: !18957)
!18965 = !DILocation(line: 49, column: 2, scope: !18957)
!18966 = !DILocation(line: 50, column: 1, scope: !18957)
!18967 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !18968, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !18971)
!18968 = !DISubroutineType(types: !18969)
!18969 = !{null, !18970}
!18970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18918, size: 32)
!18971 = !{!18972}
!18972 = !DILocalVariable(name: "list", arg: 1, scope: !18967, file: !137, line: 197, type: !18970)
!18973 = !DILocation(line: 0, scope: !18967)
!18974 = !DILocation(line: 199, column: 8, scope: !18967)
!18975 = !DILocation(line: 199, column: 13, scope: !18967)
!18976 = !DILocation(line: 200, column: 8, scope: !18967)
!18977 = !DILocation(line: 200, column: 13, scope: !18967)
!18978 = !DILocation(line: 201, column: 1, scope: !18967)
!18979 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2553, file: !2553, line: 64, type: !18980, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !18986)
!18980 = !DISubroutineType(types: !18981)
!18981 = !{!104, !18904, !111, !111, !18982}
!18982 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18983)
!18983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18984)
!18984 = !{!18985}
!18985 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18983, file: !108, line: 66, baseType: !107, size: 64)
!18986 = !{!18987, !18988, !18989, !18990, !18991, !18992, !18993, !18994, !18999}
!18987 = !DILocalVariable(name: "h", arg: 1, scope: !18979, file: !2553, line: 64, type: !18904)
!18988 = !DILocalVariable(name: "align", arg: 2, scope: !18979, file: !2553, line: 64, type: !111)
!18989 = !DILocalVariable(name: "bytes", arg: 3, scope: !18979, file: !2553, line: 64, type: !111)
!18990 = !DILocalVariable(name: "timeout", arg: 4, scope: !18979, file: !2553, line: 65, type: !18982)
!18991 = !DILocalVariable(name: "now", scope: !18979, file: !2553, line: 67, type: !109)
!18992 = !DILocalVariable(name: "end", scope: !18979, file: !2553, line: 67, type: !109)
!18993 = !DILocalVariable(name: "ret", scope: !18979, file: !2553, line: 68, type: !104)
!18994 = !DILocalVariable(name: "key", scope: !18979, file: !2553, line: 72, type: !18995)
!18995 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18996)
!18996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18997)
!18997 = !{!18998}
!18998 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18996, file: !236, line: 33, baseType: !105, size: 32)
!18999 = !DILocalVariable(name: "blocked_alloc", scope: !18979, file: !2553, line: 78, type: !492)
!19000 = !DILocation(line: 0, scope: !18979)
!19001 = !DILocation(line: 67, column: 21, scope: !18979)
!19002 = !DILocation(line: 70, column: 8, scope: !18979)
!19003 = !DILocation(line: 72, column: 41, scope: !18979)
!19004 = !DILocalVariable(name: "l", arg: 1, scope: !19005, file: !236, line: 136, type: !19008)
!19005 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !19006, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19009)
!19006 = !DISubroutineType(types: !19007)
!19007 = !{!18995, !19008}
!19008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18920, size: 32)
!19009 = !{!19004, !19010}
!19010 = !DILocalVariable(name: "k", scope: !19005, file: !236, line: 139, type: !18995)
!19011 = !DILocation(line: 0, scope: !19005, inlinedAt: !19012)
!19012 = distinct !DILocation(line: 72, column: 25, scope: !18979)
!19013 = !DILocation(line: 55, column: 2, scope: !19014, inlinedAt: !19018)
!19014 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7468, file: !7468, line: 42, type: !7469, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19015)
!19015 = !{!19016, !19017}
!19016 = !DILocalVariable(name: "key", scope: !19014, file: !7468, line: 44, type: !32)
!19017 = !DILocalVariable(name: "tmp", scope: !19014, file: !7468, line: 53, type: !32)
!19018 = distinct !DILocation(line: 145, column: 10, scope: !19005, inlinedAt: !19012)
!19019 = !{i64 2243484}
!19020 = !DILocation(line: 0, scope: !19014, inlinedAt: !19018)
!19021 = !DILocation(line: 148, column: 2, scope: !19022, inlinedAt: !19012)
!19022 = distinct !DILexicalBlock(scope: !19023, file: !236, line: 148, column: 2)
!19023 = distinct !DILexicalBlock(scope: !19005, file: !236, line: 148, column: 2)
!19024 = !DILocation(line: 148, column: 2, scope: !19023, inlinedAt: !19012)
!19025 = !DILocation(line: 148, column: 2, scope: !19026, inlinedAt: !19012)
!19026 = distinct !DILexicalBlock(scope: !19022, file: !236, line: 148, column: 2)
!19027 = !DILocation(line: 160, column: 2, scope: !19005, inlinedAt: !19012)
!19028 = !DILocation(line: 1031, column: 3, scope: !19029, inlinedAt: !19032)
!19029 = distinct !DISubprogram(name: "__get_IPSR", scope: !7786, file: !7786, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19030)
!19030 = !{!19031}
!19031 = !DILocalVariable(name: "result", scope: !19029, file: !7786, line: 1029, type: !113)
!19032 = distinct !DILocation(line: 48, column: 10, scope: !19033, inlinedAt: !19034)
!19033 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8833, file: !8833, line: 46, type: !8834, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !397)
!19034 = distinct !DILocation(line: 76, column: 2, scope: !19035)
!19035 = distinct !DILexicalBlock(scope: !19036, file: !2553, line: 76, column: 2)
!19036 = distinct !DILexicalBlock(scope: !18979, file: !2553, line: 76, column: 2)
!19037 = !{i64 3498355}
!19038 = !DILocation(line: 0, scope: !19029, inlinedAt: !19032)
!19039 = !DILocation(line: 48, column: 9, scope: !19033, inlinedAt: !19034)
!19040 = !DILocation(line: 76, column: 2, scope: !19035)
!19041 = !DILocation(line: 81, column: 9, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !18979, file: !2553, line: 80, column: 22)
!19043 = !DILocation(line: 83, column: 9, scope: !19042)
!19044 = !DILocation(line: 85, column: 12, scope: !19045)
!19045 = distinct !DILexicalBlock(scope: !19042, file: !2553, line: 84, column: 7)
!19046 = !DILocation(line: 85, column: 21, scope: !19045)
!19047 = !DILocation(line: 76, column: 2, scope: !19048)
!19048 = distinct !DILexicalBlock(scope: !19035, file: !2553, line: 76, column: 2)
!19049 = !DILocation(line: 85, column: 30, scope: !19045)
!19050 = !DILocation(line: 85, column: 37, scope: !19045)
!19051 = !DILocation(line: 84, column: 7, scope: !19042)
!19052 = !DILocation(line: 99, column: 10, scope: !19042)
!19053 = !DILocation(line: 0, scope: !19005, inlinedAt: !19054)
!19054 = distinct !DILocation(line: 101, column: 9, scope: !19042)
!19055 = !DILocation(line: 55, column: 2, scope: !19014, inlinedAt: !19056)
!19056 = distinct !DILocation(line: 145, column: 10, scope: !19005, inlinedAt: !19054)
!19057 = !DILocation(line: 0, scope: !19014, inlinedAt: !19056)
!19058 = !DILocation(line: 148, column: 2, scope: !19022, inlinedAt: !19054)
!19059 = !DILocation(line: 148, column: 2, scope: !19023, inlinedAt: !19054)
!19060 = !DILocation(line: 148, column: 2, scope: !19026, inlinedAt: !19054)
!19061 = !DILocation(line: 160, column: 2, scope: !19005, inlinedAt: !19054)
!19062 = distinct !{!19062, !19063, !19064}
!19063 = !DILocation(line: 80, column: 2, scope: !18979)
!19064 = !DILocation(line: 102, column: 2, scope: !18979)
!19065 = !DILocalVariable(name: "key", arg: 2, scope: !19066, file: !236, line: 190, type: !18995)
!19066 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19067, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19069)
!19067 = !DISubroutineType(types: !19068)
!19068 = !{null, !19008, !18995}
!19069 = !{!19070, !19065}
!19070 = !DILocalVariable(name: "l", arg: 1, scope: !19066, file: !236, line: 189, type: !19008)
!19071 = !DILocation(line: 0, scope: !19066, inlinedAt: !19072)
!19072 = distinct !DILocation(line: 106, column: 2, scope: !18979)
!19073 = !DILocation(line: 194, column: 2, scope: !19074, inlinedAt: !19072)
!19074 = distinct !DILexicalBlock(scope: !19075, file: !236, line: 194, column: 2)
!19075 = distinct !DILexicalBlock(scope: !19066, file: !236, line: 194, column: 2)
!19076 = !DILocation(line: 194, column: 2, scope: !19075, inlinedAt: !19072)
!19077 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19072)
!19078 = distinct !DILexicalBlock(scope: !19074, file: !236, line: 194, column: 2)
!19079 = !DILocalVariable(name: "key", arg: 1, scope: !19080, file: !7468, line: 84, type: !32)
!19080 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7468, file: !7468, line: 84, type: !7479, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19081)
!19081 = !{!19079}
!19082 = !DILocation(line: 0, scope: !19080, inlinedAt: !19083)
!19083 = distinct !DILocation(line: 215, column: 2, scope: !19066, inlinedAt: !19072)
!19084 = !DILocation(line: 95, column: 2, scope: !19080, inlinedAt: !19083)
!19085 = !{i64 2244301}
!19086 = !DILocation(line: 107, column: 2, scope: !18979)
!19087 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2553, file: !2553, line: 110, type: !19088, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19090)
!19088 = !DISubroutineType(types: !19089)
!19089 = !{!104, !18904, !111, !18982}
!19090 = !{!19091, !19092, !19093, !19094}
!19091 = !DILocalVariable(name: "h", arg: 1, scope: !19087, file: !2553, line: 110, type: !18904)
!19092 = !DILocalVariable(name: "bytes", arg: 2, scope: !19087, file: !2553, line: 110, type: !111)
!19093 = !DILocalVariable(name: "timeout", arg: 3, scope: !19087, file: !2553, line: 110, type: !18982)
!19094 = !DILocalVariable(name: "ret", scope: !19087, file: !2553, line: 114, type: !104)
!19095 = !DILocation(line: 0, scope: !19087)
!19096 = !DILocation(line: 114, column: 14, scope: !19087)
!19097 = !DILocation(line: 118, column: 2, scope: !19087)
!19098 = distinct !DISubprogram(name: "k_heap_free", scope: !2553, file: !2553, line: 121, type: !19099, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2534, retainedNodes: !19101)
!19099 = !DISubroutineType(types: !19100)
!19100 = !{null, !18904, !104}
!19101 = !{!19102, !19103, !19104}
!19102 = !DILocalVariable(name: "h", arg: 1, scope: !19098, file: !2553, line: 121, type: !18904)
!19103 = !DILocalVariable(name: "mem", arg: 2, scope: !19098, file: !2553, line: 121, type: !104)
!19104 = !DILocalVariable(name: "key", scope: !19098, file: !2553, line: 123, type: !18995)
!19105 = !DILocation(line: 0, scope: !19098)
!19106 = !DILocation(line: 123, column: 41, scope: !19098)
!19107 = !DILocation(line: 0, scope: !19005, inlinedAt: !19108)
!19108 = distinct !DILocation(line: 123, column: 25, scope: !19098)
!19109 = !DILocation(line: 55, column: 2, scope: !19014, inlinedAt: !19110)
!19110 = distinct !DILocation(line: 145, column: 10, scope: !19005, inlinedAt: !19108)
!19111 = !DILocation(line: 0, scope: !19014, inlinedAt: !19110)
!19112 = !DILocation(line: 148, column: 2, scope: !19022, inlinedAt: !19108)
!19113 = !DILocation(line: 148, column: 2, scope: !19023, inlinedAt: !19108)
!19114 = !DILocation(line: 148, column: 2, scope: !19026, inlinedAt: !19108)
!19115 = !DILocation(line: 160, column: 2, scope: !19005, inlinedAt: !19108)
!19116 = !DILocation(line: 125, column: 20, scope: !19098)
!19117 = !DILocation(line: 125, column: 2, scope: !19098)
!19118 = !DILocation(line: 128, column: 60, scope: !19119)
!19119 = distinct !DILexicalBlock(scope: !19098, file: !2553, line: 128, column: 6)
!19120 = !DILocation(line: 128, column: 43, scope: !19119)
!19121 = !DILocation(line: 128, column: 68, scope: !19119)
!19122 = !DILocation(line: 128, column: 6, scope: !19098)
!19123 = !DILocation(line: 129, column: 3, scope: !19124)
!19124 = distinct !DILexicalBlock(scope: !19119, file: !2553, line: 128, column: 74)
!19125 = !DILocation(line: 130, column: 2, scope: !19124)
!19126 = !DILocation(line: 0, scope: !19066, inlinedAt: !19127)
!19127 = distinct !DILocation(line: 131, column: 3, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19119, file: !2553, line: 130, column: 9)
!19129 = !DILocation(line: 194, column: 2, scope: !19074, inlinedAt: !19127)
!19130 = !DILocation(line: 194, column: 2, scope: !19075, inlinedAt: !19127)
!19131 = !DILocation(line: 194, column: 2, scope: !19078, inlinedAt: !19127)
!19132 = !DILocation(line: 0, scope: !19080, inlinedAt: !19133)
!19133 = distinct !DILocation(line: 215, column: 2, scope: !19066, inlinedAt: !19127)
!19134 = !DILocation(line: 95, column: 2, scope: !19080, inlinedAt: !19133)
!19135 = !DILocation(line: 133, column: 1, scope: !19098)
